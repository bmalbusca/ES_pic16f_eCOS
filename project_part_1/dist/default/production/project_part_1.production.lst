

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 09 11:30:50 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	text5,local,class=CODE,merge=1,delta=2
    29                           	psect	text6,local,class=CODE,merge=1,delta=2
    30                           	psect	text7,local,class=CODE,merge=1,delta=2
    31                           	psect	text8,local,class=CODE,merge=1,delta=2
    32                           	psect	text9,local,class=CODE,merge=1,delta=2
    33                           	psect	text10,local,class=CODE,merge=1,delta=2
    34                           	psect	text11,local,class=CODE,merge=1,delta=2
    35                           	psect	text12,local,class=CODE,merge=1,delta=2
    36                           	psect	text13,local,class=CODE,merge=1,delta=2
    37                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text15,local,class=CODE,merge=1,delta=2
    39                           	psect	text16,local,class=CODE,merge=1,delta=2
    40                           	psect	text17,local,class=CODE,merge=1,delta=2
    41                           	psect	text18,local,class=CODE,merge=1,delta=2
    42                           	psect	text19,local,class=CODE,merge=1,delta=2
    43                           	psect	text20,local,class=CODE,merge=1,delta=2
    44                           	psect	text21,local,class=CODE,merge=1,delta=2
    45                           	psect	text22,local,class=CODE,merge=1,delta=2
    46                           	psect	text23,local,class=CODE,merge=1,delta=2
    47                           	psect	text24,local,class=CODE,merge=1,delta=2
    48                           	psect	text25,local,class=CODE,merge=1,delta=2
    49                           	psect	text26,local,class=CODE,merge=1,delta=2
    50                           	psect	text27,local,class=CODE,merge=1,delta=2
    51                           	psect	text28,local,class=CODE,merge=1,delta=2
    52                           	psect	text29,local,class=CODE,merge=1,delta=2
    53                           	psect	text30,local,class=CODE,merge=1,delta=2
    54                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text32,local,class=CODE,merge=1,delta=2
    56                           	psect	text33,local,class=CODE,merge=1,delta=2
    57                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text35,local,class=CODE,merge=1,delta=2
    59                           	psect	text36,local,class=CODE,merge=1,delta=2
    60                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text39,local,class=CODE,merge=1,delta=2
    63                           	psect	text40,local,class=CODE,merge=1,delta=2
    64                           	psect	text41,local,class=CODE,merge=1,delta=2
    65                           	psect	text42,local,class=CODE,merge=1,delta=2
    66                           	psect	text43,local,class=CODE,merge=1,delta=2
    67                           	psect	text44,local,class=CODE,merge=1,delta=2
    68                           	psect	text45,local,class=CODE,merge=1,delta=2
    69                           	psect	text46,local,class=CODE,merge=1,delta=2
    70                           	psect	text47,local,class=CODE,merge=1,delta=2
    71                           	psect	text48,local,class=CODE,merge=1,delta=2
    72                           	psect	text49,local,class=CODE,merge=1,delta=2
    73                           	psect	text50,local,class=CODE,merge=1,delta=2
    74                           	psect	text51,local,class=CODE,merge=1,delta=2
    75                           	psect	text52,local,class=CODE,merge=1,delta=2
    76                           	psect	text53,local,class=CODE,merge=1,delta=2
    77                           	psect	text54,local,class=CODE,merge=1,delta=2
    78                           	psect	text55,local,class=CODE,merge=1,delta=2
    79                           	psect	text56,local,class=CODE,merge=1,delta=2
    80                           	psect	text57,local,class=CODE,merge=1,delta=2
    81                           	psect	text58,local,class=CODE,merge=1,delta=2
    82                           	psect	text59,local,class=CODE,merge=1,delta=2
    83                           	psect	text60,local,class=CODE,merge=1,delta=2
    84                           	psect	text61,local,class=CODE,merge=1,delta=2
    85                           	psect	text62,local,class=CODE,merge=1,delta=2
    86                           	psect	intentry,global,class=CODE,delta=2
    87                           	psect	text64,local,class=CODE,merge=1,delta=2
    88                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    89                           	psect	text66,local,class=CODE,merge=1,delta=2
    90                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    91                           	psect	text68,local,class=CODE,merge=1,delta=2
    92                           	psect	text69,local,class=CODE,merge=1,delta=2
    93                           	psect	text70,local,class=CODE,merge=1,delta=2
    94                           	psect	text71,local,class=CODE,merge=1,delta=2
    95                           	psect	text72,local,class=CODE,merge=1,delta=2
    96                           	psect	text73,local,class=CODE,merge=1,delta=2
    97                           	psect	text74,local,class=CODE,merge=1,delta=2
    98                           	psect	text75,local,class=CODE,merge=1,delta=2
    99                           	psect	text76,local,class=CODE,merge=1,delta=2
   100                           	psect	text77,local,class=CODE,merge=1,delta=2
   101                           	psect	text78,local,class=CODE,merge=1,delta=2
   102                           	psect	text79,local,class=CODE,merge=1,delta=2
   103                           	psect	text80,local,class=CODE,merge=1,delta=2
   104                           	psect	text81,local,class=CODE,merge=1,delta=2
   105                           	psect	text82,local,class=CODE,merge=1,delta=2
   106                           	psect	text83,local,class=CODE,merge=1,delta=2
   107                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   108                           	psect	text85,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text86,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text87,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text88,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text89,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text90,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text91,local,class=CODE,merge=1,delta=2
   115                           	psect	text92,local,class=CODE,merge=1,delta=2
   116                           	psect	text93,local,class=CODE,merge=1,delta=2
   117                           	psect	text94,local,class=CODE,merge=1,delta=2
   118                           	psect	text95,local,class=CODE,merge=1,delta=2
   119                           	psect	text96,local,class=CODE,merge=1,delta=2
   120                           	psect	text97,local,class=CODE,merge=1,delta=2
   121                           	psect	text98,local,class=CODE,merge=1,delta=2
   122                           	psect	text99,local,class=CODE,merge=1,delta=2
   123                           	psect	text100,local,class=CODE,merge=1,delta=2
   124                           	psect	text101,local,class=CODE,merge=1,delta=2
   125                           	psect	text102,local,class=CODE,merge=1,inline,delta=2
   126                           	psect	text103,local,class=CODE,merge=1,inline,delta=2
   127                           	psect	text104,local,class=CODE,merge=1,inline,delta=2
   128                           	psect	text105,local,class=CODE,merge=1,delta=2
   129                           	psect	text106,local,class=CODE,merge=1,delta=2
   130                           	psect	text107,local,class=CODE,merge=1,delta=2
   131                           	psect	text108,local,class=CODE,merge=1,delta=2
   132                           	psect	text109,local,class=CODE,merge=1,delta=2
   133                           	psect	text110,local,class=CODE,merge=1,delta=2
   134                           	psect	text111,local,class=CODE,merge=1,delta=2
   135                           	psect	text112,local,class=CODE,merge=1,delta=2
   136                           	psect	text113,local,class=CODE,merge=1,delta=2
   137                           	psect	text114,local,class=CODE,merge=1,delta=2
   138                           	psect	text115,local,class=CODE,merge=1,delta=2
   139                           	psect	text116,local,class=CODE,merge=1,delta=2
   140                           	psect	text117,local,class=CODE,merge=1,delta=2
   141                           	psect	text118,local,class=CODE,merge=1,delta=2
   142                           	psect	text119,local,class=CODE,merge=1,delta=2
   143                           	psect	text120,local,class=CODE,merge=1,delta=2
   144                           	psect	text121,local,class=CODE,merge=1,delta=2
   145                           	dabs	1,0x7E,2
   146  0000                     
   147                           ; Version 2.10
   148                           ; Generated 31/07/2019 GMT
   149                           ; 
   150                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   151                           ; All rights reserved.
   152                           ; 
   153                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   154                           ; 
   155                           ; Redistribution and use in source and binary forms, with or without modification, are
   156                           ; permitted provided that the following conditions are met:
   157                           ; 
   158                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   159                           ;        conditions and the following disclaimer.
   160                           ; 
   161                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   162                           ;        of conditions and the following disclaimer in the documentation and/or other
   163                           ;        materials provided with the distribution.
   164                           ; 
   165                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   166                           ;        software without specific prior written permission.
   167                           ; 
   168                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   169                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   170                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   171                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   172                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   173                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   174                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   175                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   176                           ; 
   177                           ; 
   178                           ; Code-generator required, PIC16F18875 Definitions
   179                           ; 
   180                           ; SFR Addresses
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000F                     	;# 
   197  0010                     	;# 
   198  0011                     	;# 
   199  0012                     	;# 
   200  0013                     	;# 
   201  0014                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001C                     	;# 
   209  001C                     	;# 
   210  001D                     	;# 
   211  001D                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  008C                     	;# 
   215  008C                     	;# 
   216  008D                     	;# 
   217  008E                     	;# 
   218  008E                     	;# 
   219  008F                     	;# 
   220  0090                     	;# 
   221  0090                     	;# 
   222  0091                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0095                     	;# 
   226  0096                     	;# 
   227  0097                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009A                     	;# 
   231  009B                     	;# 
   232  009C                     	;# 
   233  009D                     	;# 
   234  009E                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010E                     	;# 
   239  010F                     	;# 
   240  0110                     	;# 
   241  0110                     	;# 
   242  0111                     	;# 
   243  0112                     	;# 
   244  0112                     	;# 
   245  0113                     	;# 
   246  0114                     	;# 
   247  0114                     	;# 
   248  0115                     	;# 
   249  0116                     	;# 
   250  0116                     	;# 
   251  0117                     	;# 
   252  0119                     	;# 
   253  0119                     	;# 
   254  0119                     	;# 
   255  011A                     	;# 
   256  011A                     	;# 
   257  011A                     	;# 
   258  011B                     	;# 
   259  011B                     	;# 
   260  011B                     	;# 
   261  011B                     	;# 
   262  011B                     	;# 
   263  011C                     	;# 
   264  011C                     	;# 
   265  011C                     	;# 
   266  011D                     	;# 
   267  011D                     	;# 
   268  011D                     	;# 
   269  011E                     	;# 
   270  011E                     	;# 
   271  011E                     	;# 
   272  011F                     	;# 
   273  011F                     	;# 
   274  011F                     	;# 
   275  011F                     	;# 
   276  011F                     	;# 
   277  018C                     	;# 
   278  018D                     	;# 
   279  018E                     	;# 
   280  018F                     	;# 
   281  0190                     	;# 
   282  0191                     	;# 
   283  0192                     	;# 
   284  0196                     	;# 
   285  0197                     	;# 
   286  0198                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019C                     	;# 
   291  020C                     	;# 
   292  020C                     	;# 
   293  020D                     	;# 
   294  020E                     	;# 
   295  020F                     	;# 
   296  020F                     	;# 
   297  0210                     	;# 
   298  0210                     	;# 
   299  0211                     	;# 
   300  0211                     	;# 
   301  0212                     	;# 
   302  0212                     	;# 
   303  0213                     	;# 
   304  0214                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0216                     	;# 
   308  0216                     	;# 
   309  0217                     	;# 
   310  0217                     	;# 
   311  0218                     	;# 
   312  0218                     	;# 
   313  0219                     	;# 
   314  021A                     	;# 
   315  021B                     	;# 
   316  021B                     	;# 
   317  021C                     	;# 
   318  021C                     	;# 
   319  021D                     	;# 
   320  021D                     	;# 
   321  021E                     	;# 
   322  021F                     	;# 
   323  028C                     	;# 
   324  028C                     	;# 
   325  028D                     	;# 
   326  028D                     	;# 
   327  028E                     	;# 
   328  028F                     	;# 
   329  0290                     	;# 
   330  0290                     	;# 
   331  0291                     	;# 
   332  0292                     	;# 
   333  0292                     	;# 
   334  0293                     	;# 
   335  0293                     	;# 
   336  0294                     	;# 
   337  0295                     	;# 
   338  0296                     	;# 
   339  0296                     	;# 
   340  0297                     	;# 
   341  0298                     	;# 
   342  0298                     	;# 
   343  0299                     	;# 
   344  0299                     	;# 
   345  029A                     	;# 
   346  029B                     	;# 
   347  029C                     	;# 
   348  029C                     	;# 
   349  029D                     	;# 
   350  030C                     	;# 
   351  030C                     	;# 
   352  030D                     	;# 
   353  030E                     	;# 
   354  030F                     	;# 
   355  0310                     	;# 
   356  0310                     	;# 
   357  0311                     	;# 
   358  0312                     	;# 
   359  0313                     	;# 
   360  0314                     	;# 
   361  0314                     	;# 
   362  0315                     	;# 
   363  0316                     	;# 
   364  0317                     	;# 
   365  0318                     	;# 
   366  0318                     	;# 
   367  0319                     	;# 
   368  031A                     	;# 
   369  031B                     	;# 
   370  031C                     	;# 
   371  031C                     	;# 
   372  031D                     	;# 
   373  031E                     	;# 
   374  031F                     	;# 
   375  038C                     	;# 
   376  038C                     	;# 
   377  038D                     	;# 
   378  038E                     	;# 
   379  0390                     	;# 
   380  0390                     	;# 
   381  0391                     	;# 
   382  0392                     	;# 
   383  040C                     	;# 
   384  040D                     	;# 
   385  040E                     	;# 
   386  040F                     	;# 
   387  0410                     	;# 
   388  0411                     	;# 
   389  0416                     	;# 
   390  0416                     	;# 
   391  0417                     	;# 
   392  0418                     	;# 
   393  0418                     	;# 
   394  0419                     	;# 
   395  041A                     	;# 
   396  041A                     	;# 
   397  041B                     	;# 
   398  041C                     	;# 
   399  041C                     	;# 
   400  041D                     	;# 
   401  041E                     	;# 
   402  041F                     	;# 
   403  048C                     	;# 
   404  048C                     	;# 
   405  048D                     	;# 
   406  048E                     	;# 
   407  048F                     	;# 
   408  048F                     	;# 
   409  0490                     	;# 
   410  0491                     	;# 
   411  0492                     	;# 
   412  0492                     	;# 
   413  0493                     	;# 
   414  0494                     	;# 
   415  0495                     	;# 
   416  0495                     	;# 
   417  0496                     	;# 
   418  0497                     	;# 
   419  0498                     	;# 
   420  0499                     	;# 
   421  049A                     	;# 
   422  049B                     	;# 
   423  049C                     	;# 
   424  049D                     	;# 
   425  050C                     	;# 
   426  050C                     	;# 
   427  050D                     	;# 
   428  050E                     	;# 
   429  050F                     	;# 
   430  050F                     	;# 
   431  0510                     	;# 
   432  0511                     	;# 
   433  0512                     	;# 
   434  0512                     	;# 
   435  0513                     	;# 
   436  0514                     	;# 
   437  0515                     	;# 
   438  0515                     	;# 
   439  0516                     	;# 
   440  0517                     	;# 
   441  0518                     	;# 
   442  0519                     	;# 
   443  051A                     	;# 
   444  051B                     	;# 
   445  051C                     	;# 
   446  051D                     	;# 
   447  058C                     	;# 
   448  058C                     	;# 
   449  058D                     	;# 
   450  058E                     	;# 
   451  058F                     	;# 
   452  058F                     	;# 
   453  0590                     	;# 
   454  0591                     	;# 
   455  0592                     	;# 
   456  0593                     	;# 
   457  060C                     	;# 
   458  060D                     	;# 
   459  060E                     	;# 
   460  060F                     	;# 
   461  0610                     	;# 
   462  0611                     	;# 
   463  0612                     	;# 
   464  0613                     	;# 
   465  0614                     	;# 
   466  0616                     	;# 
   467  0617                     	;# 
   468  0618                     	;# 
   469  0619                     	;# 
   470  061A                     	;# 
   471  061B                     	;# 
   472  061C                     	;# 
   473  061D                     	;# 
   474  061E                     	;# 
   475  068C                     	;# 
   476  068D                     	;# 
   477  068E                     	;# 
   478  068F                     	;# 
   479  0690                     	;# 
   480  0691                     	;# 
   481  0692                     	;# 
   482  0693                     	;# 
   483  0694                     	;# 
   484  070C                     	;# 
   485  070D                     	;# 
   486  070E                     	;# 
   487  070F                     	;# 
   488  0710                     	;# 
   489  0711                     	;# 
   490  0712                     	;# 
   491  0713                     	;# 
   492  0714                     	;# 
   493  0716                     	;# 
   494  0717                     	;# 
   495  0718                     	;# 
   496  0719                     	;# 
   497  071A                     	;# 
   498  071B                     	;# 
   499  071C                     	;# 
   500  071D                     	;# 
   501  071E                     	;# 
   502  0796                     	;# 
   503  0797                     	;# 
   504  0798                     	;# 
   505  0799                     	;# 
   506  079A                     	;# 
   507  079B                     	;# 
   508  080C                     	;# 
   509  080D                     	;# 
   510  080E                     	;# 
   511  080F                     	;# 
   512  0810                     	;# 
   513  0811                     	;# 
   514  0812                     	;# 
   515  0813                     	;# 
   516  0814                     	;# 
   517  081A                     	;# 
   518  081B                     	;# 
   519  081C                     	;# 
   520  081D                     	;# 
   521  081E                     	;# 
   522  081F                     	;# 
   523  088C                     	;# 
   524  088D                     	;# 
   525  088E                     	;# 
   526  088F                     	;# 
   527  0890                     	;# 
   528  0891                     	;# 
   529  0892                     	;# 
   530  0893                     	;# 
   531  0895                     	;# 
   532  0896                     	;# 
   533  0897                     	;# 
   534  0898                     	;# 
   535  0899                     	;# 
   536  089A                     	;# 
   537  089B                     	;# 
   538  090C                     	;# 
   539  090E                     	;# 
   540  090F                     	;# 
   541  091F                     	;# 
   542  091F                     	;# 
   543  098F                     	;# 
   544  098F                     	;# 
   545  0990                     	;# 
   546  0991                     	;# 
   547  0992                     	;# 
   548  0993                     	;# 
   549  0994                     	;# 
   550  0995                     	;# 
   551  0996                     	;# 
   552  0997                     	;# 
   553  0E0F                     	;# 
   554  0E10                     	;# 
   555  0E11                     	;# 
   556  0E12                     	;# 
   557  0E13                     	;# 
   558  0E14                     	;# 
   559  0E15                     	;# 
   560  0E16                     	;# 
   561  0E17                     	;# 
   562  0E18                     	;# 
   563  0E19                     	;# 
   564  0E1A                     	;# 
   565  0E1B                     	;# 
   566  0E1C                     	;# 
   567  0E1D                     	;# 
   568  0E1E                     	;# 
   569  0E1F                     	;# 
   570  0E20                     	;# 
   571  0E21                     	;# 
   572  0E22                     	;# 
   573  0E23                     	;# 
   574  0E24                     	;# 
   575  0E25                     	;# 
   576  0E26                     	;# 
   577  0E27                     	;# 
   578  0E28                     	;# 
   579  0E29                     	;# 
   580  0E2A                     	;# 
   581  0E2B                     	;# 
   582  0E2C                     	;# 
   583  0E2D                     	;# 
   584  0E2E                     	;# 
   585  0E2F                     	;# 
   586  0E30                     	;# 
   587  0E31                     	;# 
   588  0E32                     	;# 
   589  0E33                     	;# 
   590  0E34                     	;# 
   591  0E35                     	;# 
   592  0E36                     	;# 
   593  0E37                     	;# 
   594  0E8F                     	;# 
   595  0E90                     	;# 
   596  0E91                     	;# 
   597  0E92                     	;# 
   598  0E93                     	;# 
   599  0E94                     	;# 
   600  0E95                     	;# 
   601  0E96                     	;# 
   602  0E97                     	;# 
   603  0E9C                     	;# 
   604  0E9D                     	;# 
   605  0E9E                     	;# 
   606  0EA1                     	;# 
   607  0EA2                     	;# 
   608  0EA3                     	;# 
   609  0EA4                     	;# 
   610  0EA5                     	;# 
   611  0EA9                     	;# 
   612  0EAA                     	;# 
   613  0EAB                     	;# 
   614  0EAC                     	;# 
   615  0EB1                     	;# 
   616  0EB2                     	;# 
   617  0EB3                     	;# 
   618  0EB8                     	;# 
   619  0EB9                     	;# 
   620  0EBA                     	;# 
   621  0EBB                     	;# 
   622  0EBC                     	;# 
   623  0EBD                     	;# 
   624  0EBE                     	;# 
   625  0EC3                     	;# 
   626  0EC5                     	;# 
   627  0EC6                     	;# 
   628  0EC7                     	;# 
   629  0EC8                     	;# 
   630  0EC9                     	;# 
   631  0ECA                     	;# 
   632  0ECB                     	;# 
   633  0ECC                     	;# 
   634  0F10                     	;# 
   635  0F11                     	;# 
   636  0F12                     	;# 
   637  0F13                     	;# 
   638  0F14                     	;# 
   639  0F15                     	;# 
   640  0F16                     	;# 
   641  0F17                     	;# 
   642  0F18                     	;# 
   643  0F19                     	;# 
   644  0F1A                     	;# 
   645  0F1B                     	;# 
   646  0F1C                     	;# 
   647  0F1D                     	;# 
   648  0F1E                     	;# 
   649  0F1F                     	;# 
   650  0F20                     	;# 
   651  0F21                     	;# 
   652  0F22                     	;# 
   653  0F23                     	;# 
   654  0F24                     	;# 
   655  0F25                     	;# 
   656  0F26                     	;# 
   657  0F27                     	;# 
   658  0F28                     	;# 
   659  0F29                     	;# 
   660  0F2A                     	;# 
   661  0F2B                     	;# 
   662  0F2C                     	;# 
   663  0F2D                     	;# 
   664  0F2E                     	;# 
   665  0F2F                     	;# 
   666  0F30                     	;# 
   667  0F31                     	;# 
   668  0F32                     	;# 
   669  0F38                     	;# 
   670  0F39                     	;# 
   671  0F3A                     	;# 
   672  0F3B                     	;# 
   673  0F3C                     	;# 
   674  0F3D                     	;# 
   675  0F3E                     	;# 
   676  0F3F                     	;# 
   677  0F40                     	;# 
   678  0F41                     	;# 
   679  0F43                     	;# 
   680  0F44                     	;# 
   681  0F45                     	;# 
   682  0F46                     	;# 
   683  0F47                     	;# 
   684  0F48                     	;# 
   685  0F49                     	;# 
   686  0F4A                     	;# 
   687  0F4B                     	;# 
   688  0F4C                     	;# 
   689  0F4E                     	;# 
   690  0F4F                     	;# 
   691  0F50                     	;# 
   692  0F51                     	;# 
   693  0F52                     	;# 
   694  0F53                     	;# 
   695  0F54                     	;# 
   696  0F55                     	;# 
   697  0F56                     	;# 
   698  0F57                     	;# 
   699  0F59                     	;# 
   700  0F5A                     	;# 
   701  0F5B                     	;# 
   702  0F5C                     	;# 
   703  0F5D                     	;# 
   704  0F61                     	;# 
   705  0F62                     	;# 
   706  0F64                     	;# 
   707  0F65                     	;# 
   708  0F66                     	;# 
   709  0F67                     	;# 
   710  0F68                     	;# 
   711  0F69                     	;# 
   712  0F6A                     	;# 
   713  0F6B                     	;# 
   714  0F6C                     	;# 
   715  0F6D                     	;# 
   716  0FE4                     	;# 
   717  0FE5                     	;# 
   718  0FE6                     	;# 
   719  0FE7                     	;# 
   720  0FE8                     	;# 
   721  0FE9                     	;# 
   722  0FEA                     	;# 
   723  0FEB                     	;# 
   724  0FED                     	;# 
   725  0FEE                     	;# 
   726  0FEF                     	;# 
   727  0000                     	;# 
   728  0001                     	;# 
   729  0002                     	;# 
   730  0003                     	;# 
   731  0004                     	;# 
   732  0005                     	;# 
   733  0006                     	;# 
   734  0007                     	;# 
   735  0008                     	;# 
   736  0009                     	;# 
   737  000A                     	;# 
   738  000B                     	;# 
   739  000C                     	;# 
   740  000D                     	;# 
   741  000E                     	;# 
   742  000F                     	;# 
   743  0010                     	;# 
   744  0011                     	;# 
   745  0012                     	;# 
   746  0013                     	;# 
   747  0014                     	;# 
   748  0015                     	;# 
   749  0016                     	;# 
   750  0017                     	;# 
   751  0018                     	;# 
   752  0019                     	;# 
   753  001A                     	;# 
   754  001C                     	;# 
   755  001C                     	;# 
   756  001D                     	;# 
   757  001D                     	;# 
   758  001E                     	;# 
   759  001F                     	;# 
   760  008C                     	;# 
   761  008C                     	;# 
   762  008D                     	;# 
   763  008E                     	;# 
   764  008E                     	;# 
   765  008F                     	;# 
   766  0090                     	;# 
   767  0090                     	;# 
   768  0091                     	;# 
   769  0093                     	;# 
   770  0094                     	;# 
   771  0095                     	;# 
   772  0096                     	;# 
   773  0097                     	;# 
   774  0098                     	;# 
   775  0099                     	;# 
   776  009A                     	;# 
   777  009B                     	;# 
   778  009C                     	;# 
   779  009D                     	;# 
   780  009E                     	;# 
   781  010C                     	;# 
   782  010D                     	;# 
   783  010E                     	;# 
   784  010E                     	;# 
   785  010F                     	;# 
   786  0110                     	;# 
   787  0110                     	;# 
   788  0111                     	;# 
   789  0112                     	;# 
   790  0112                     	;# 
   791  0113                     	;# 
   792  0114                     	;# 
   793  0114                     	;# 
   794  0115                     	;# 
   795  0116                     	;# 
   796  0116                     	;# 
   797  0117                     	;# 
   798  0119                     	;# 
   799  0119                     	;# 
   800  0119                     	;# 
   801  011A                     	;# 
   802  011A                     	;# 
   803  011A                     	;# 
   804  011B                     	;# 
   805  011B                     	;# 
   806  011B                     	;# 
   807  011B                     	;# 
   808  011B                     	;# 
   809  011C                     	;# 
   810  011C                     	;# 
   811  011C                     	;# 
   812  011D                     	;# 
   813  011D                     	;# 
   814  011D                     	;# 
   815  011E                     	;# 
   816  011E                     	;# 
   817  011E                     	;# 
   818  011F                     	;# 
   819  011F                     	;# 
   820  011F                     	;# 
   821  011F                     	;# 
   822  011F                     	;# 
   823  018C                     	;# 
   824  018D                     	;# 
   825  018E                     	;# 
   826  018F                     	;# 
   827  0190                     	;# 
   828  0191                     	;# 
   829  0192                     	;# 
   830  0196                     	;# 
   831  0197                     	;# 
   832  0198                     	;# 
   833  0199                     	;# 
   834  019A                     	;# 
   835  019B                     	;# 
   836  019C                     	;# 
   837  020C                     	;# 
   838  020C                     	;# 
   839  020D                     	;# 
   840  020E                     	;# 
   841  020F                     	;# 
   842  020F                     	;# 
   843  0210                     	;# 
   844  0210                     	;# 
   845  0211                     	;# 
   846  0211                     	;# 
   847  0212                     	;# 
   848  0212                     	;# 
   849  0213                     	;# 
   850  0214                     	;# 
   851  0215                     	;# 
   852  0215                     	;# 
   853  0216                     	;# 
   854  0216                     	;# 
   855  0217                     	;# 
   856  0217                     	;# 
   857  0218                     	;# 
   858  0218                     	;# 
   859  0219                     	;# 
   860  021A                     	;# 
   861  021B                     	;# 
   862  021B                     	;# 
   863  021C                     	;# 
   864  021C                     	;# 
   865  021D                     	;# 
   866  021D                     	;# 
   867  021E                     	;# 
   868  021F                     	;# 
   869  028C                     	;# 
   870  028C                     	;# 
   871  028D                     	;# 
   872  028D                     	;# 
   873  028E                     	;# 
   874  028F                     	;# 
   875  0290                     	;# 
   876  0290                     	;# 
   877  0291                     	;# 
   878  0292                     	;# 
   879  0292                     	;# 
   880  0293                     	;# 
   881  0293                     	;# 
   882  0294                     	;# 
   883  0295                     	;# 
   884  0296                     	;# 
   885  0296                     	;# 
   886  0297                     	;# 
   887  0298                     	;# 
   888  0298                     	;# 
   889  0299                     	;# 
   890  0299                     	;# 
   891  029A                     	;# 
   892  029B                     	;# 
   893  029C                     	;# 
   894  029C                     	;# 
   895  029D                     	;# 
   896  030C                     	;# 
   897  030C                     	;# 
   898  030D                     	;# 
   899  030E                     	;# 
   900  030F                     	;# 
   901  0310                     	;# 
   902  0310                     	;# 
   903  0311                     	;# 
   904  0312                     	;# 
   905  0313                     	;# 
   906  0314                     	;# 
   907  0314                     	;# 
   908  0315                     	;# 
   909  0316                     	;# 
   910  0317                     	;# 
   911  0318                     	;# 
   912  0318                     	;# 
   913  0319                     	;# 
   914  031A                     	;# 
   915  031B                     	;# 
   916  031C                     	;# 
   917  031C                     	;# 
   918  031D                     	;# 
   919  031E                     	;# 
   920  031F                     	;# 
   921  038C                     	;# 
   922  038C                     	;# 
   923  038D                     	;# 
   924  038E                     	;# 
   925  0390                     	;# 
   926  0390                     	;# 
   927  0391                     	;# 
   928  0392                     	;# 
   929  040C                     	;# 
   930  040D                     	;# 
   931  040E                     	;# 
   932  040F                     	;# 
   933  0410                     	;# 
   934  0411                     	;# 
   935  0416                     	;# 
   936  0416                     	;# 
   937  0417                     	;# 
   938  0418                     	;# 
   939  0418                     	;# 
   940  0419                     	;# 
   941  041A                     	;# 
   942  041A                     	;# 
   943  041B                     	;# 
   944  041C                     	;# 
   945  041C                     	;# 
   946  041D                     	;# 
   947  041E                     	;# 
   948  041F                     	;# 
   949  048C                     	;# 
   950  048C                     	;# 
   951  048D                     	;# 
   952  048E                     	;# 
   953  048F                     	;# 
   954  048F                     	;# 
   955  0490                     	;# 
   956  0491                     	;# 
   957  0492                     	;# 
   958  0492                     	;# 
   959  0493                     	;# 
   960  0494                     	;# 
   961  0495                     	;# 
   962  0495                     	;# 
   963  0496                     	;# 
   964  0497                     	;# 
   965  0498                     	;# 
   966  0499                     	;# 
   967  049A                     	;# 
   968  049B                     	;# 
   969  049C                     	;# 
   970  049D                     	;# 
   971  050C                     	;# 
   972  050C                     	;# 
   973  050D                     	;# 
   974  050E                     	;# 
   975  050F                     	;# 
   976  050F                     	;# 
   977  0510                     	;# 
   978  0511                     	;# 
   979  0512                     	;# 
   980  0512                     	;# 
   981  0513                     	;# 
   982  0514                     	;# 
   983  0515                     	;# 
   984  0515                     	;# 
   985  0516                     	;# 
   986  0517                     	;# 
   987  0518                     	;# 
   988  0519                     	;# 
   989  051A                     	;# 
   990  051B                     	;# 
   991  051C                     	;# 
   992  051D                     	;# 
   993  058C                     	;# 
   994  058C                     	;# 
   995  058D                     	;# 
   996  058E                     	;# 
   997  058F                     	;# 
   998  058F                     	;# 
   999  0590                     	;# 
  1000  0591                     	;# 
  1001  0592                     	;# 
  1002  0593                     	;# 
  1003  060C                     	;# 
  1004  060D                     	;# 
  1005  060E                     	;# 
  1006  060F                     	;# 
  1007  0610                     	;# 
  1008  0611                     	;# 
  1009  0612                     	;# 
  1010  0613                     	;# 
  1011  0614                     	;# 
  1012  0616                     	;# 
  1013  0617                     	;# 
  1014  0618                     	;# 
  1015  0619                     	;# 
  1016  061A                     	;# 
  1017  061B                     	;# 
  1018  061C                     	;# 
  1019  061D                     	;# 
  1020  061E                     	;# 
  1021  068C                     	;# 
  1022  068D                     	;# 
  1023  068E                     	;# 
  1024  068F                     	;# 
  1025  0690                     	;# 
  1026  0691                     	;# 
  1027  0692                     	;# 
  1028  0693                     	;# 
  1029  0694                     	;# 
  1030  070C                     	;# 
  1031  070D                     	;# 
  1032  070E                     	;# 
  1033  070F                     	;# 
  1034  0710                     	;# 
  1035  0711                     	;# 
  1036  0712                     	;# 
  1037  0713                     	;# 
  1038  0714                     	;# 
  1039  0716                     	;# 
  1040  0717                     	;# 
  1041  0718                     	;# 
  1042  0719                     	;# 
  1043  071A                     	;# 
  1044  071B                     	;# 
  1045  071C                     	;# 
  1046  071D                     	;# 
  1047  071E                     	;# 
  1048  0796                     	;# 
  1049  0797                     	;# 
  1050  0798                     	;# 
  1051  0799                     	;# 
  1052  079A                     	;# 
  1053  079B                     	;# 
  1054  080C                     	;# 
  1055  080D                     	;# 
  1056  080E                     	;# 
  1057  080F                     	;# 
  1058  0810                     	;# 
  1059  0811                     	;# 
  1060  0812                     	;# 
  1061  0813                     	;# 
  1062  0814                     	;# 
  1063  081A                     	;# 
  1064  081B                     	;# 
  1065  081C                     	;# 
  1066  081D                     	;# 
  1067  081E                     	;# 
  1068  081F                     	;# 
  1069  088C                     	;# 
  1070  088D                     	;# 
  1071  088E                     	;# 
  1072  088F                     	;# 
  1073  0890                     	;# 
  1074  0891                     	;# 
  1075  0892                     	;# 
  1076  0893                     	;# 
  1077  0895                     	;# 
  1078  0896                     	;# 
  1079  0897                     	;# 
  1080  0898                     	;# 
  1081  0899                     	;# 
  1082  089A                     	;# 
  1083  089B                     	;# 
  1084  090C                     	;# 
  1085  090E                     	;# 
  1086  090F                     	;# 
  1087  091F                     	;# 
  1088  091F                     	;# 
  1089  098F                     	;# 
  1090  098F                     	;# 
  1091  0990                     	;# 
  1092  0991                     	;# 
  1093  0992                     	;# 
  1094  0993                     	;# 
  1095  0994                     	;# 
  1096  0995                     	;# 
  1097  0996                     	;# 
  1098  0997                     	;# 
  1099  0E0F                     	;# 
  1100  0E10                     	;# 
  1101  0E11                     	;# 
  1102  0E12                     	;# 
  1103  0E13                     	;# 
  1104  0E14                     	;# 
  1105  0E15                     	;# 
  1106  0E16                     	;# 
  1107  0E17                     	;# 
  1108  0E18                     	;# 
  1109  0E19                     	;# 
  1110  0E1A                     	;# 
  1111  0E1B                     	;# 
  1112  0E1C                     	;# 
  1113  0E1D                     	;# 
  1114  0E1E                     	;# 
  1115  0E1F                     	;# 
  1116  0E20                     	;# 
  1117  0E21                     	;# 
  1118  0E22                     	;# 
  1119  0E23                     	;# 
  1120  0E24                     	;# 
  1121  0E25                     	;# 
  1122  0E26                     	;# 
  1123  0E27                     	;# 
  1124  0E28                     	;# 
  1125  0E29                     	;# 
  1126  0E2A                     	;# 
  1127  0E2B                     	;# 
  1128  0E2C                     	;# 
  1129  0E2D                     	;# 
  1130  0E2E                     	;# 
  1131  0E2F                     	;# 
  1132  0E30                     	;# 
  1133  0E31                     	;# 
  1134  0E32                     	;# 
  1135  0E33                     	;# 
  1136  0E34                     	;# 
  1137  0E35                     	;# 
  1138  0E36                     	;# 
  1139  0E37                     	;# 
  1140  0E8F                     	;# 
  1141  0E90                     	;# 
  1142  0E91                     	;# 
  1143  0E92                     	;# 
  1144  0E93                     	;# 
  1145  0E94                     	;# 
  1146  0E95                     	;# 
  1147  0E96                     	;# 
  1148  0E97                     	;# 
  1149  0E9C                     	;# 
  1150  0E9D                     	;# 
  1151  0E9E                     	;# 
  1152  0EA1                     	;# 
  1153  0EA2                     	;# 
  1154  0EA3                     	;# 
  1155  0EA4                     	;# 
  1156  0EA5                     	;# 
  1157  0EA9                     	;# 
  1158  0EAA                     	;# 
  1159  0EAB                     	;# 
  1160  0EAC                     	;# 
  1161  0EB1                     	;# 
  1162  0EB2                     	;# 
  1163  0EB3                     	;# 
  1164  0EB8                     	;# 
  1165  0EB9                     	;# 
  1166  0EBA                     	;# 
  1167  0EBB                     	;# 
  1168  0EBC                     	;# 
  1169  0EBD                     	;# 
  1170  0EBE                     	;# 
  1171  0EC3                     	;# 
  1172  0EC5                     	;# 
  1173  0EC6                     	;# 
  1174  0EC7                     	;# 
  1175  0EC8                     	;# 
  1176  0EC9                     	;# 
  1177  0ECA                     	;# 
  1178  0ECB                     	;# 
  1179  0ECC                     	;# 
  1180  0F10                     	;# 
  1181  0F11                     	;# 
  1182  0F12                     	;# 
  1183  0F13                     	;# 
  1184  0F14                     	;# 
  1185  0F15                     	;# 
  1186  0F16                     	;# 
  1187  0F17                     	;# 
  1188  0F18                     	;# 
  1189  0F19                     	;# 
  1190  0F1A                     	;# 
  1191  0F1B                     	;# 
  1192  0F1C                     	;# 
  1193  0F1D                     	;# 
  1194  0F1E                     	;# 
  1195  0F1F                     	;# 
  1196  0F20                     	;# 
  1197  0F21                     	;# 
  1198  0F22                     	;# 
  1199  0F23                     	;# 
  1200  0F24                     	;# 
  1201  0F25                     	;# 
  1202  0F26                     	;# 
  1203  0F27                     	;# 
  1204  0F28                     	;# 
  1205  0F29                     	;# 
  1206  0F2A                     	;# 
  1207  0F2B                     	;# 
  1208  0F2C                     	;# 
  1209  0F2D                     	;# 
  1210  0F2E                     	;# 
  1211  0F2F                     	;# 
  1212  0F30                     	;# 
  1213  0F31                     	;# 
  1214  0F32                     	;# 
  1215  0F38                     	;# 
  1216  0F39                     	;# 
  1217  0F3A                     	;# 
  1218  0F3B                     	;# 
  1219  0F3C                     	;# 
  1220  0F3D                     	;# 
  1221  0F3E                     	;# 
  1222  0F3F                     	;# 
  1223  0F40                     	;# 
  1224  0F41                     	;# 
  1225  0F43                     	;# 
  1226  0F44                     	;# 
  1227  0F45                     	;# 
  1228  0F46                     	;# 
  1229  0F47                     	;# 
  1230  0F48                     	;# 
  1231  0F49                     	;# 
  1232  0F4A                     	;# 
  1233  0F4B                     	;# 
  1234  0F4C                     	;# 
  1235  0F4E                     	;# 
  1236  0F4F                     	;# 
  1237  0F50                     	;# 
  1238  0F51                     	;# 
  1239  0F52                     	;# 
  1240  0F53                     	;# 
  1241  0F54                     	;# 
  1242  0F55                     	;# 
  1243  0F56                     	;# 
  1244  0F57                     	;# 
  1245  0F59                     	;# 
  1246  0F5A                     	;# 
  1247  0F5B                     	;# 
  1248  0F5C                     	;# 
  1249  0F5D                     	;# 
  1250  0F61                     	;# 
  1251  0F62                     	;# 
  1252  0F64                     	;# 
  1253  0F65                     	;# 
  1254  0F66                     	;# 
  1255  0F67                     	;# 
  1256  0F68                     	;# 
  1257  0F69                     	;# 
  1258  0F6A                     	;# 
  1259  0F6B                     	;# 
  1260  0F6C                     	;# 
  1261  0F6D                     	;# 
  1262  0FE4                     	;# 
  1263  0FE5                     	;# 
  1264  0FE6                     	;# 
  1265  0FE7                     	;# 
  1266  0FE8                     	;# 
  1267  0FE9                     	;# 
  1268  0FEA                     	;# 
  1269  0FEB                     	;# 
  1270  0FED                     	;# 
  1271  0FEE                     	;# 
  1272  0FEF                     	;# 
  1273  0000                     	;# 
  1274  0001                     	;# 
  1275  0002                     	;# 
  1276  0003                     	;# 
  1277  0004                     	;# 
  1278  0005                     	;# 
  1279  0006                     	;# 
  1280  0007                     	;# 
  1281  0008                     	;# 
  1282  0009                     	;# 
  1283  000A                     	;# 
  1284  000B                     	;# 
  1285  000C                     	;# 
  1286  000D                     	;# 
  1287  000E                     	;# 
  1288  000F                     	;# 
  1289  0010                     	;# 
  1290  0011                     	;# 
  1291  0012                     	;# 
  1292  0013                     	;# 
  1293  0014                     	;# 
  1294  0015                     	;# 
  1295  0016                     	;# 
  1296  0017                     	;# 
  1297  0018                     	;# 
  1298  0019                     	;# 
  1299  001A                     	;# 
  1300  001C                     	;# 
  1301  001C                     	;# 
  1302  001D                     	;# 
  1303  001D                     	;# 
  1304  001E                     	;# 
  1305  001F                     	;# 
  1306  008C                     	;# 
  1307  008C                     	;# 
  1308  008D                     	;# 
  1309  008E                     	;# 
  1310  008E                     	;# 
  1311  008F                     	;# 
  1312  0090                     	;# 
  1313  0090                     	;# 
  1314  0091                     	;# 
  1315  0093                     	;# 
  1316  0094                     	;# 
  1317  0095                     	;# 
  1318  0096                     	;# 
  1319  0097                     	;# 
  1320  0098                     	;# 
  1321  0099                     	;# 
  1322  009A                     	;# 
  1323  009B                     	;# 
  1324  009C                     	;# 
  1325  009D                     	;# 
  1326  009E                     	;# 
  1327  010C                     	;# 
  1328  010D                     	;# 
  1329  010E                     	;# 
  1330  010E                     	;# 
  1331  010F                     	;# 
  1332  0110                     	;# 
  1333  0110                     	;# 
  1334  0111                     	;# 
  1335  0112                     	;# 
  1336  0112                     	;# 
  1337  0113                     	;# 
  1338  0114                     	;# 
  1339  0114                     	;# 
  1340  0115                     	;# 
  1341  0116                     	;# 
  1342  0116                     	;# 
  1343  0117                     	;# 
  1344  0119                     	;# 
  1345  0119                     	;# 
  1346  0119                     	;# 
  1347  011A                     	;# 
  1348  011A                     	;# 
  1349  011A                     	;# 
  1350  011B                     	;# 
  1351  011B                     	;# 
  1352  011B                     	;# 
  1353  011B                     	;# 
  1354  011B                     	;# 
  1355  011C                     	;# 
  1356  011C                     	;# 
  1357  011C                     	;# 
  1358  011D                     	;# 
  1359  011D                     	;# 
  1360  011D                     	;# 
  1361  011E                     	;# 
  1362  011E                     	;# 
  1363  011E                     	;# 
  1364  011F                     	;# 
  1365  011F                     	;# 
  1366  011F                     	;# 
  1367  011F                     	;# 
  1368  011F                     	;# 
  1369  018C                     	;# 
  1370  018D                     	;# 
  1371  018E                     	;# 
  1372  018F                     	;# 
  1373  0190                     	;# 
  1374  0191                     	;# 
  1375  0192                     	;# 
  1376  0196                     	;# 
  1377  0197                     	;# 
  1378  0198                     	;# 
  1379  0199                     	;# 
  1380  019A                     	;# 
  1381  019B                     	;# 
  1382  019C                     	;# 
  1383  020C                     	;# 
  1384  020C                     	;# 
  1385  020D                     	;# 
  1386  020E                     	;# 
  1387  020F                     	;# 
  1388  020F                     	;# 
  1389  0210                     	;# 
  1390  0210                     	;# 
  1391  0211                     	;# 
  1392  0211                     	;# 
  1393  0212                     	;# 
  1394  0212                     	;# 
  1395  0213                     	;# 
  1396  0214                     	;# 
  1397  0215                     	;# 
  1398  0215                     	;# 
  1399  0216                     	;# 
  1400  0216                     	;# 
  1401  0217                     	;# 
  1402  0217                     	;# 
  1403  0218                     	;# 
  1404  0218                     	;# 
  1405  0219                     	;# 
  1406  021A                     	;# 
  1407  021B                     	;# 
  1408  021B                     	;# 
  1409  021C                     	;# 
  1410  021C                     	;# 
  1411  021D                     	;# 
  1412  021D                     	;# 
  1413  021E                     	;# 
  1414  021F                     	;# 
  1415  028C                     	;# 
  1416  028C                     	;# 
  1417  028D                     	;# 
  1418  028D                     	;# 
  1419  028E                     	;# 
  1420  028F                     	;# 
  1421  0290                     	;# 
  1422  0290                     	;# 
  1423  0291                     	;# 
  1424  0292                     	;# 
  1425  0292                     	;# 
  1426  0293                     	;# 
  1427  0293                     	;# 
  1428  0294                     	;# 
  1429  0295                     	;# 
  1430  0296                     	;# 
  1431  0296                     	;# 
  1432  0297                     	;# 
  1433  0298                     	;# 
  1434  0298                     	;# 
  1435  0299                     	;# 
  1436  0299                     	;# 
  1437  029A                     	;# 
  1438  029B                     	;# 
  1439  029C                     	;# 
  1440  029C                     	;# 
  1441  029D                     	;# 
  1442  030C                     	;# 
  1443  030C                     	;# 
  1444  030D                     	;# 
  1445  030E                     	;# 
  1446  030F                     	;# 
  1447  0310                     	;# 
  1448  0310                     	;# 
  1449  0311                     	;# 
  1450  0312                     	;# 
  1451  0313                     	;# 
  1452  0314                     	;# 
  1453  0314                     	;# 
  1454  0315                     	;# 
  1455  0316                     	;# 
  1456  0317                     	;# 
  1457  0318                     	;# 
  1458  0318                     	;# 
  1459  0319                     	;# 
  1460  031A                     	;# 
  1461  031B                     	;# 
  1462  031C                     	;# 
  1463  031C                     	;# 
  1464  031D                     	;# 
  1465  031E                     	;# 
  1466  031F                     	;# 
  1467  038C                     	;# 
  1468  038C                     	;# 
  1469  038D                     	;# 
  1470  038E                     	;# 
  1471  0390                     	;# 
  1472  0390                     	;# 
  1473  0391                     	;# 
  1474  0392                     	;# 
  1475  040C                     	;# 
  1476  040D                     	;# 
  1477  040E                     	;# 
  1478  040F                     	;# 
  1479  0410                     	;# 
  1480  0411                     	;# 
  1481  0416                     	;# 
  1482  0416                     	;# 
  1483  0417                     	;# 
  1484  0418                     	;# 
  1485  0418                     	;# 
  1486  0419                     	;# 
  1487  041A                     	;# 
  1488  041A                     	;# 
  1489  041B                     	;# 
  1490  041C                     	;# 
  1491  041C                     	;# 
  1492  041D                     	;# 
  1493  041E                     	;# 
  1494  041F                     	;# 
  1495  048C                     	;# 
  1496  048C                     	;# 
  1497  048D                     	;# 
  1498  048E                     	;# 
  1499  048F                     	;# 
  1500  048F                     	;# 
  1501  0490                     	;# 
  1502  0491                     	;# 
  1503  0492                     	;# 
  1504  0492                     	;# 
  1505  0493                     	;# 
  1506  0494                     	;# 
  1507  0495                     	;# 
  1508  0495                     	;# 
  1509  0496                     	;# 
  1510  0497                     	;# 
  1511  0498                     	;# 
  1512  0499                     	;# 
  1513  049A                     	;# 
  1514  049B                     	;# 
  1515  049C                     	;# 
  1516  049D                     	;# 
  1517  050C                     	;# 
  1518  050C                     	;# 
  1519  050D                     	;# 
  1520  050E                     	;# 
  1521  050F                     	;# 
  1522  050F                     	;# 
  1523  0510                     	;# 
  1524  0511                     	;# 
  1525  0512                     	;# 
  1526  0512                     	;# 
  1527  0513                     	;# 
  1528  0514                     	;# 
  1529  0515                     	;# 
  1530  0515                     	;# 
  1531  0516                     	;# 
  1532  0517                     	;# 
  1533  0518                     	;# 
  1534  0519                     	;# 
  1535  051A                     	;# 
  1536  051B                     	;# 
  1537  051C                     	;# 
  1538  051D                     	;# 
  1539  058C                     	;# 
  1540  058C                     	;# 
  1541  058D                     	;# 
  1542  058E                     	;# 
  1543  058F                     	;# 
  1544  058F                     	;# 
  1545  0590                     	;# 
  1546  0591                     	;# 
  1547  0592                     	;# 
  1548  0593                     	;# 
  1549  060C                     	;# 
  1550  060D                     	;# 
  1551  060E                     	;# 
  1552  060F                     	;# 
  1553  0610                     	;# 
  1554  0611                     	;# 
  1555  0612                     	;# 
  1556  0613                     	;# 
  1557  0614                     	;# 
  1558  0616                     	;# 
  1559  0617                     	;# 
  1560  0618                     	;# 
  1561  0619                     	;# 
  1562  061A                     	;# 
  1563  061B                     	;# 
  1564  061C                     	;# 
  1565  061D                     	;# 
  1566  061E                     	;# 
  1567  068C                     	;# 
  1568  068D                     	;# 
  1569  068E                     	;# 
  1570  068F                     	;# 
  1571  0690                     	;# 
  1572  0691                     	;# 
  1573  0692                     	;# 
  1574  0693                     	;# 
  1575  0694                     	;# 
  1576  070C                     	;# 
  1577  070D                     	;# 
  1578  070E                     	;# 
  1579  070F                     	;# 
  1580  0710                     	;# 
  1581  0711                     	;# 
  1582  0712                     	;# 
  1583  0713                     	;# 
  1584  0714                     	;# 
  1585  0716                     	;# 
  1586  0717                     	;# 
  1587  0718                     	;# 
  1588  0719                     	;# 
  1589  071A                     	;# 
  1590  071B                     	;# 
  1591  071C                     	;# 
  1592  071D                     	;# 
  1593  071E                     	;# 
  1594  0796                     	;# 
  1595  0797                     	;# 
  1596  0798                     	;# 
  1597  0799                     	;# 
  1598  079A                     	;# 
  1599  079B                     	;# 
  1600  080C                     	;# 
  1601  080D                     	;# 
  1602  080E                     	;# 
  1603  080F                     	;# 
  1604  0810                     	;# 
  1605  0811                     	;# 
  1606  0812                     	;# 
  1607  0813                     	;# 
  1608  0814                     	;# 
  1609  081A                     	;# 
  1610  081B                     	;# 
  1611  081C                     	;# 
  1612  081D                     	;# 
  1613  081E                     	;# 
  1614  081F                     	;# 
  1615  088C                     	;# 
  1616  088D                     	;# 
  1617  088E                     	;# 
  1618  088F                     	;# 
  1619  0890                     	;# 
  1620  0891                     	;# 
  1621  0892                     	;# 
  1622  0893                     	;# 
  1623  0895                     	;# 
  1624  0896                     	;# 
  1625  0897                     	;# 
  1626  0898                     	;# 
  1627  0899                     	;# 
  1628  089A                     	;# 
  1629  089B                     	;# 
  1630  090C                     	;# 
  1631  090E                     	;# 
  1632  090F                     	;# 
  1633  091F                     	;# 
  1634  091F                     	;# 
  1635  098F                     	;# 
  1636  098F                     	;# 
  1637  0990                     	;# 
  1638  0991                     	;# 
  1639  0992                     	;# 
  1640  0993                     	;# 
  1641  0994                     	;# 
  1642  0995                     	;# 
  1643  0996                     	;# 
  1644  0997                     	;# 
  1645  0E0F                     	;# 
  1646  0E10                     	;# 
  1647  0E11                     	;# 
  1648  0E12                     	;# 
  1649  0E13                     	;# 
  1650  0E14                     	;# 
  1651  0E15                     	;# 
  1652  0E16                     	;# 
  1653  0E17                     	;# 
  1654  0E18                     	;# 
  1655  0E19                     	;# 
  1656  0E1A                     	;# 
  1657  0E1B                     	;# 
  1658  0E1C                     	;# 
  1659  0E1D                     	;# 
  1660  0E1E                     	;# 
  1661  0E1F                     	;# 
  1662  0E20                     	;# 
  1663  0E21                     	;# 
  1664  0E22                     	;# 
  1665  0E23                     	;# 
  1666  0E24                     	;# 
  1667  0E25                     	;# 
  1668  0E26                     	;# 
  1669  0E27                     	;# 
  1670  0E28                     	;# 
  1671  0E29                     	;# 
  1672  0E2A                     	;# 
  1673  0E2B                     	;# 
  1674  0E2C                     	;# 
  1675  0E2D                     	;# 
  1676  0E2E                     	;# 
  1677  0E2F                     	;# 
  1678  0E30                     	;# 
  1679  0E31                     	;# 
  1680  0E32                     	;# 
  1681  0E33                     	;# 
  1682  0E34                     	;# 
  1683  0E35                     	;# 
  1684  0E36                     	;# 
  1685  0E37                     	;# 
  1686  0E8F                     	;# 
  1687  0E90                     	;# 
  1688  0E91                     	;# 
  1689  0E92                     	;# 
  1690  0E93                     	;# 
  1691  0E94                     	;# 
  1692  0E95                     	;# 
  1693  0E96                     	;# 
  1694  0E97                     	;# 
  1695  0E9C                     	;# 
  1696  0E9D                     	;# 
  1697  0E9E                     	;# 
  1698  0EA1                     	;# 
  1699  0EA2                     	;# 
  1700  0EA3                     	;# 
  1701  0EA4                     	;# 
  1702  0EA5                     	;# 
  1703  0EA9                     	;# 
  1704  0EAA                     	;# 
  1705  0EAB                     	;# 
  1706  0EAC                     	;# 
  1707  0EB1                     	;# 
  1708  0EB2                     	;# 
  1709  0EB3                     	;# 
  1710  0EB8                     	;# 
  1711  0EB9                     	;# 
  1712  0EBA                     	;# 
  1713  0EBB                     	;# 
  1714  0EBC                     	;# 
  1715  0EBD                     	;# 
  1716  0EBE                     	;# 
  1717  0EC3                     	;# 
  1718  0EC5                     	;# 
  1719  0EC6                     	;# 
  1720  0EC7                     	;# 
  1721  0EC8                     	;# 
  1722  0EC9                     	;# 
  1723  0ECA                     	;# 
  1724  0ECB                     	;# 
  1725  0ECC                     	;# 
  1726  0F10                     	;# 
  1727  0F11                     	;# 
  1728  0F12                     	;# 
  1729  0F13                     	;# 
  1730  0F14                     	;# 
  1731  0F15                     	;# 
  1732  0F16                     	;# 
  1733  0F17                     	;# 
  1734  0F18                     	;# 
  1735  0F19                     	;# 
  1736  0F1A                     	;# 
  1737  0F1B                     	;# 
  1738  0F1C                     	;# 
  1739  0F1D                     	;# 
  1740  0F1E                     	;# 
  1741  0F1F                     	;# 
  1742  0F20                     	;# 
  1743  0F21                     	;# 
  1744  0F22                     	;# 
  1745  0F23                     	;# 
  1746  0F24                     	;# 
  1747  0F25                     	;# 
  1748  0F26                     	;# 
  1749  0F27                     	;# 
  1750  0F28                     	;# 
  1751  0F29                     	;# 
  1752  0F2A                     	;# 
  1753  0F2B                     	;# 
  1754  0F2C                     	;# 
  1755  0F2D                     	;# 
  1756  0F2E                     	;# 
  1757  0F2F                     	;# 
  1758  0F30                     	;# 
  1759  0F31                     	;# 
  1760  0F32                     	;# 
  1761  0F38                     	;# 
  1762  0F39                     	;# 
  1763  0F3A                     	;# 
  1764  0F3B                     	;# 
  1765  0F3C                     	;# 
  1766  0F3D                     	;# 
  1767  0F3E                     	;# 
  1768  0F3F                     	;# 
  1769  0F40                     	;# 
  1770  0F41                     	;# 
  1771  0F43                     	;# 
  1772  0F44                     	;# 
  1773  0F45                     	;# 
  1774  0F46                     	;# 
  1775  0F47                     	;# 
  1776  0F48                     	;# 
  1777  0F49                     	;# 
  1778  0F4A                     	;# 
  1779  0F4B                     	;# 
  1780  0F4C                     	;# 
  1781  0F4E                     	;# 
  1782  0F4F                     	;# 
  1783  0F50                     	;# 
  1784  0F51                     	;# 
  1785  0F52                     	;# 
  1786  0F53                     	;# 
  1787  0F54                     	;# 
  1788  0F55                     	;# 
  1789  0F56                     	;# 
  1790  0F57                     	;# 
  1791  0F59                     	;# 
  1792  0F5A                     	;# 
  1793  0F5B                     	;# 
  1794  0F5C                     	;# 
  1795  0F5D                     	;# 
  1796  0F61                     	;# 
  1797  0F62                     	;# 
  1798  0F64                     	;# 
  1799  0F65                     	;# 
  1800  0F66                     	;# 
  1801  0F67                     	;# 
  1802  0F68                     	;# 
  1803  0F69                     	;# 
  1804  0F6A                     	;# 
  1805  0F6B                     	;# 
  1806  0F6C                     	;# 
  1807  0F6D                     	;# 
  1808  0FE4                     	;# 
  1809  0FE5                     	;# 
  1810  0FE6                     	;# 
  1811  0FE7                     	;# 
  1812  0FE8                     	;# 
  1813  0FE9                     	;# 
  1814  0FEA                     	;# 
  1815  0FEB                     	;# 
  1816  0FED                     	;# 
  1817  0FEE                     	;# 
  1818  0FEF                     	;# 
  1819  0000                     	;# 
  1820  0001                     	;# 
  1821  0002                     	;# 
  1822  0003                     	;# 
  1823  0004                     	;# 
  1824  0005                     	;# 
  1825  0006                     	;# 
  1826  0007                     	;# 
  1827  0008                     	;# 
  1828  0009                     	;# 
  1829  000A                     	;# 
  1830  000B                     	;# 
  1831  000C                     	;# 
  1832  000D                     	;# 
  1833  000E                     	;# 
  1834  000F                     	;# 
  1835  0010                     	;# 
  1836  0011                     	;# 
  1837  0012                     	;# 
  1838  0013                     	;# 
  1839  0014                     	;# 
  1840  0015                     	;# 
  1841  0016                     	;# 
  1842  0017                     	;# 
  1843  0018                     	;# 
  1844  0019                     	;# 
  1845  001A                     	;# 
  1846  001C                     	;# 
  1847  001C                     	;# 
  1848  001D                     	;# 
  1849  001D                     	;# 
  1850  001E                     	;# 
  1851  001F                     	;# 
  1852  008C                     	;# 
  1853  008C                     	;# 
  1854  008D                     	;# 
  1855  008E                     	;# 
  1856  008E                     	;# 
  1857  008F                     	;# 
  1858  0090                     	;# 
  1859  0090                     	;# 
  1860  0091                     	;# 
  1861  0093                     	;# 
  1862  0094                     	;# 
  1863  0095                     	;# 
  1864  0096                     	;# 
  1865  0097                     	;# 
  1866  0098                     	;# 
  1867  0099                     	;# 
  1868  009A                     	;# 
  1869  009B                     	;# 
  1870  009C                     	;# 
  1871  009D                     	;# 
  1872  009E                     	;# 
  1873  010C                     	;# 
  1874  010D                     	;# 
  1875  010E                     	;# 
  1876  010E                     	;# 
  1877  010F                     	;# 
  1878  0110                     	;# 
  1879  0110                     	;# 
  1880  0111                     	;# 
  1881  0112                     	;# 
  1882  0112                     	;# 
  1883  0113                     	;# 
  1884  0114                     	;# 
  1885  0114                     	;# 
  1886  0115                     	;# 
  1887  0116                     	;# 
  1888  0116                     	;# 
  1889  0117                     	;# 
  1890  0119                     	;# 
  1891  0119                     	;# 
  1892  0119                     	;# 
  1893  011A                     	;# 
  1894  011A                     	;# 
  1895  011A                     	;# 
  1896  011B                     	;# 
  1897  011B                     	;# 
  1898  011B                     	;# 
  1899  011B                     	;# 
  1900  011B                     	;# 
  1901  011C                     	;# 
  1902  011C                     	;# 
  1903  011C                     	;# 
  1904  011D                     	;# 
  1905  011D                     	;# 
  1906  011D                     	;# 
  1907  011E                     	;# 
  1908  011E                     	;# 
  1909  011E                     	;# 
  1910  011F                     	;# 
  1911  011F                     	;# 
  1912  011F                     	;# 
  1913  011F                     	;# 
  1914  011F                     	;# 
  1915  018C                     	;# 
  1916  018D                     	;# 
  1917  018E                     	;# 
  1918  018F                     	;# 
  1919  0190                     	;# 
  1920  0191                     	;# 
  1921  0192                     	;# 
  1922  0196                     	;# 
  1923  0197                     	;# 
  1924  0198                     	;# 
  1925  0199                     	;# 
  1926  019A                     	;# 
  1927  019B                     	;# 
  1928  019C                     	;# 
  1929  020C                     	;# 
  1930  020C                     	;# 
  1931  020D                     	;# 
  1932  020E                     	;# 
  1933  020F                     	;# 
  1934  020F                     	;# 
  1935  0210                     	;# 
  1936  0210                     	;# 
  1937  0211                     	;# 
  1938  0211                     	;# 
  1939  0212                     	;# 
  1940  0212                     	;# 
  1941  0213                     	;# 
  1942  0214                     	;# 
  1943  0215                     	;# 
  1944  0215                     	;# 
  1945  0216                     	;# 
  1946  0216                     	;# 
  1947  0217                     	;# 
  1948  0217                     	;# 
  1949  0218                     	;# 
  1950  0218                     	;# 
  1951  0219                     	;# 
  1952  021A                     	;# 
  1953  021B                     	;# 
  1954  021B                     	;# 
  1955  021C                     	;# 
  1956  021C                     	;# 
  1957  021D                     	;# 
  1958  021D                     	;# 
  1959  021E                     	;# 
  1960  021F                     	;# 
  1961  028C                     	;# 
  1962  028C                     	;# 
  1963  028D                     	;# 
  1964  028D                     	;# 
  1965  028E                     	;# 
  1966  028F                     	;# 
  1967  0290                     	;# 
  1968  0290                     	;# 
  1969  0291                     	;# 
  1970  0292                     	;# 
  1971  0292                     	;# 
  1972  0293                     	;# 
  1973  0293                     	;# 
  1974  0294                     	;# 
  1975  0295                     	;# 
  1976  0296                     	;# 
  1977  0296                     	;# 
  1978  0297                     	;# 
  1979  0298                     	;# 
  1980  0298                     	;# 
  1981  0299                     	;# 
  1982  0299                     	;# 
  1983  029A                     	;# 
  1984  029B                     	;# 
  1985  029C                     	;# 
  1986  029C                     	;# 
  1987  029D                     	;# 
  1988  030C                     	;# 
  1989  030C                     	;# 
  1990  030D                     	;# 
  1991  030E                     	;# 
  1992  030F                     	;# 
  1993  0310                     	;# 
  1994  0310                     	;# 
  1995  0311                     	;# 
  1996  0312                     	;# 
  1997  0313                     	;# 
  1998  0314                     	;# 
  1999  0314                     	;# 
  2000  0315                     	;# 
  2001  0316                     	;# 
  2002  0317                     	;# 
  2003  0318                     	;# 
  2004  0318                     	;# 
  2005  0319                     	;# 
  2006  031A                     	;# 
  2007  031B                     	;# 
  2008  031C                     	;# 
  2009  031C                     	;# 
  2010  031D                     	;# 
  2011  031E                     	;# 
  2012  031F                     	;# 
  2013  038C                     	;# 
  2014  038C                     	;# 
  2015  038D                     	;# 
  2016  038E                     	;# 
  2017  0390                     	;# 
  2018  0390                     	;# 
  2019  0391                     	;# 
  2020  0392                     	;# 
  2021  040C                     	;# 
  2022  040D                     	;# 
  2023  040E                     	;# 
  2024  040F                     	;# 
  2025  0410                     	;# 
  2026  0411                     	;# 
  2027  0416                     	;# 
  2028  0416                     	;# 
  2029  0417                     	;# 
  2030  0418                     	;# 
  2031  0418                     	;# 
  2032  0419                     	;# 
  2033  041A                     	;# 
  2034  041A                     	;# 
  2035  041B                     	;# 
  2036  041C                     	;# 
  2037  041C                     	;# 
  2038  041D                     	;# 
  2039  041E                     	;# 
  2040  041F                     	;# 
  2041  048C                     	;# 
  2042  048C                     	;# 
  2043  048D                     	;# 
  2044  048E                     	;# 
  2045  048F                     	;# 
  2046  048F                     	;# 
  2047  0490                     	;# 
  2048  0491                     	;# 
  2049  0492                     	;# 
  2050  0492                     	;# 
  2051  0493                     	;# 
  2052  0494                     	;# 
  2053  0495                     	;# 
  2054  0495                     	;# 
  2055  0496                     	;# 
  2056  0497                     	;# 
  2057  0498                     	;# 
  2058  0499                     	;# 
  2059  049A                     	;# 
  2060  049B                     	;# 
  2061  049C                     	;# 
  2062  049D                     	;# 
  2063  050C                     	;# 
  2064  050C                     	;# 
  2065  050D                     	;# 
  2066  050E                     	;# 
  2067  050F                     	;# 
  2068  050F                     	;# 
  2069  0510                     	;# 
  2070  0511                     	;# 
  2071  0512                     	;# 
  2072  0512                     	;# 
  2073  0513                     	;# 
  2074  0514                     	;# 
  2075  0515                     	;# 
  2076  0515                     	;# 
  2077  0516                     	;# 
  2078  0517                     	;# 
  2079  0518                     	;# 
  2080  0519                     	;# 
  2081  051A                     	;# 
  2082  051B                     	;# 
  2083  051C                     	;# 
  2084  051D                     	;# 
  2085  058C                     	;# 
  2086  058C                     	;# 
  2087  058D                     	;# 
  2088  058E                     	;# 
  2089  058F                     	;# 
  2090  058F                     	;# 
  2091  0590                     	;# 
  2092  0591                     	;# 
  2093  0592                     	;# 
  2094  0593                     	;# 
  2095  060C                     	;# 
  2096  060D                     	;# 
  2097  060E                     	;# 
  2098  060F                     	;# 
  2099  0610                     	;# 
  2100  0611                     	;# 
  2101  0612                     	;# 
  2102  0613                     	;# 
  2103  0614                     	;# 
  2104  0616                     	;# 
  2105  0617                     	;# 
  2106  0618                     	;# 
  2107  0619                     	;# 
  2108  061A                     	;# 
  2109  061B                     	;# 
  2110  061C                     	;# 
  2111  061D                     	;# 
  2112  061E                     	;# 
  2113  068C                     	;# 
  2114  068D                     	;# 
  2115  068E                     	;# 
  2116  068F                     	;# 
  2117  0690                     	;# 
  2118  0691                     	;# 
  2119  0692                     	;# 
  2120  0693                     	;# 
  2121  0694                     	;# 
  2122  070C                     	;# 
  2123  070D                     	;# 
  2124  070E                     	;# 
  2125  070F                     	;# 
  2126  0710                     	;# 
  2127  0711                     	;# 
  2128  0712                     	;# 
  2129  0713                     	;# 
  2130  0714                     	;# 
  2131  0716                     	;# 
  2132  0717                     	;# 
  2133  0718                     	;# 
  2134  0719                     	;# 
  2135  071A                     	;# 
  2136  071B                     	;# 
  2137  071C                     	;# 
  2138  071D                     	;# 
  2139  071E                     	;# 
  2140  0796                     	;# 
  2141  0797                     	;# 
  2142  0798                     	;# 
  2143  0799                     	;# 
  2144  079A                     	;# 
  2145  079B                     	;# 
  2146  080C                     	;# 
  2147  080D                     	;# 
  2148  080E                     	;# 
  2149  080F                     	;# 
  2150  0810                     	;# 
  2151  0811                     	;# 
  2152  0812                     	;# 
  2153  0813                     	;# 
  2154  0814                     	;# 
  2155  081A                     	;# 
  2156  081B                     	;# 
  2157  081C                     	;# 
  2158  081D                     	;# 
  2159  081E                     	;# 
  2160  081F                     	;# 
  2161  088C                     	;# 
  2162  088D                     	;# 
  2163  088E                     	;# 
  2164  088F                     	;# 
  2165  0890                     	;# 
  2166  0891                     	;# 
  2167  0892                     	;# 
  2168  0893                     	;# 
  2169  0895                     	;# 
  2170  0896                     	;# 
  2171  0897                     	;# 
  2172  0898                     	;# 
  2173  0899                     	;# 
  2174  089A                     	;# 
  2175  089B                     	;# 
  2176  090C                     	;# 
  2177  090E                     	;# 
  2178  090F                     	;# 
  2179  091F                     	;# 
  2180  091F                     	;# 
  2181  098F                     	;# 
  2182  098F                     	;# 
  2183  0990                     	;# 
  2184  0991                     	;# 
  2185  0992                     	;# 
  2186  0993                     	;# 
  2187  0994                     	;# 
  2188  0995                     	;# 
  2189  0996                     	;# 
  2190  0997                     	;# 
  2191  0E0F                     	;# 
  2192  0E10                     	;# 
  2193  0E11                     	;# 
  2194  0E12                     	;# 
  2195  0E13                     	;# 
  2196  0E14                     	;# 
  2197  0E15                     	;# 
  2198  0E16                     	;# 
  2199  0E17                     	;# 
  2200  0E18                     	;# 
  2201  0E19                     	;# 
  2202  0E1A                     	;# 
  2203  0E1B                     	;# 
  2204  0E1C                     	;# 
  2205  0E1D                     	;# 
  2206  0E1E                     	;# 
  2207  0E1F                     	;# 
  2208  0E20                     	;# 
  2209  0E21                     	;# 
  2210  0E22                     	;# 
  2211  0E23                     	;# 
  2212  0E24                     	;# 
  2213  0E25                     	;# 
  2214  0E26                     	;# 
  2215  0E27                     	;# 
  2216  0E28                     	;# 
  2217  0E29                     	;# 
  2218  0E2A                     	;# 
  2219  0E2B                     	;# 
  2220  0E2C                     	;# 
  2221  0E2D                     	;# 
  2222  0E2E                     	;# 
  2223  0E2F                     	;# 
  2224  0E30                     	;# 
  2225  0E31                     	;# 
  2226  0E32                     	;# 
  2227  0E33                     	;# 
  2228  0E34                     	;# 
  2229  0E35                     	;# 
  2230  0E36                     	;# 
  2231  0E37                     	;# 
  2232  0E8F                     	;# 
  2233  0E90                     	;# 
  2234  0E91                     	;# 
  2235  0E92                     	;# 
  2236  0E93                     	;# 
  2237  0E94                     	;# 
  2238  0E95                     	;# 
  2239  0E96                     	;# 
  2240  0E97                     	;# 
  2241  0E9C                     	;# 
  2242  0E9D                     	;# 
  2243  0E9E                     	;# 
  2244  0EA1                     	;# 
  2245  0EA2                     	;# 
  2246  0EA3                     	;# 
  2247  0EA4                     	;# 
  2248  0EA5                     	;# 
  2249  0EA9                     	;# 
  2250  0EAA                     	;# 
  2251  0EAB                     	;# 
  2252  0EAC                     	;# 
  2253  0EB1                     	;# 
  2254  0EB2                     	;# 
  2255  0EB3                     	;# 
  2256  0EB8                     	;# 
  2257  0EB9                     	;# 
  2258  0EBA                     	;# 
  2259  0EBB                     	;# 
  2260  0EBC                     	;# 
  2261  0EBD                     	;# 
  2262  0EBE                     	;# 
  2263  0EC3                     	;# 
  2264  0EC5                     	;# 
  2265  0EC6                     	;# 
  2266  0EC7                     	;# 
  2267  0EC8                     	;# 
  2268  0EC9                     	;# 
  2269  0ECA                     	;# 
  2270  0ECB                     	;# 
  2271  0ECC                     	;# 
  2272  0F10                     	;# 
  2273  0F11                     	;# 
  2274  0F12                     	;# 
  2275  0F13                     	;# 
  2276  0F14                     	;# 
  2277  0F15                     	;# 
  2278  0F16                     	;# 
  2279  0F17                     	;# 
  2280  0F18                     	;# 
  2281  0F19                     	;# 
  2282  0F1A                     	;# 
  2283  0F1B                     	;# 
  2284  0F1C                     	;# 
  2285  0F1D                     	;# 
  2286  0F1E                     	;# 
  2287  0F1F                     	;# 
  2288  0F20                     	;# 
  2289  0F21                     	;# 
  2290  0F22                     	;# 
  2291  0F23                     	;# 
  2292  0F24                     	;# 
  2293  0F25                     	;# 
  2294  0F26                     	;# 
  2295  0F27                     	;# 
  2296  0F28                     	;# 
  2297  0F29                     	;# 
  2298  0F2A                     	;# 
  2299  0F2B                     	;# 
  2300  0F2C                     	;# 
  2301  0F2D                     	;# 
  2302  0F2E                     	;# 
  2303  0F2F                     	;# 
  2304  0F30                     	;# 
  2305  0F31                     	;# 
  2306  0F32                     	;# 
  2307  0F38                     	;# 
  2308  0F39                     	;# 
  2309  0F3A                     	;# 
  2310  0F3B                     	;# 
  2311  0F3C                     	;# 
  2312  0F3D                     	;# 
  2313  0F3E                     	;# 
  2314  0F3F                     	;# 
  2315  0F40                     	;# 
  2316  0F41                     	;# 
  2317  0F43                     	;# 
  2318  0F44                     	;# 
  2319  0F45                     	;# 
  2320  0F46                     	;# 
  2321  0F47                     	;# 
  2322  0F48                     	;# 
  2323  0F49                     	;# 
  2324  0F4A                     	;# 
  2325  0F4B                     	;# 
  2326  0F4C                     	;# 
  2327  0F4E                     	;# 
  2328  0F4F                     	;# 
  2329  0F50                     	;# 
  2330  0F51                     	;# 
  2331  0F52                     	;# 
  2332  0F53                     	;# 
  2333  0F54                     	;# 
  2334  0F55                     	;# 
  2335  0F56                     	;# 
  2336  0F57                     	;# 
  2337  0F59                     	;# 
  2338  0F5A                     	;# 
  2339  0F5B                     	;# 
  2340  0F5C                     	;# 
  2341  0F5D                     	;# 
  2342  0F61                     	;# 
  2343  0F62                     	;# 
  2344  0F64                     	;# 
  2345  0F65                     	;# 
  2346  0F66                     	;# 
  2347  0F67                     	;# 
  2348  0F68                     	;# 
  2349  0F69                     	;# 
  2350  0F6A                     	;# 
  2351  0F6B                     	;# 
  2352  0F6C                     	;# 
  2353  0F6D                     	;# 
  2354  0FE4                     	;# 
  2355  0FE5                     	;# 
  2356  0FE6                     	;# 
  2357  0FE7                     	;# 
  2358  0FE8                     	;# 
  2359  0FE9                     	;# 
  2360  0FEA                     	;# 
  2361  0FEB                     	;# 
  2362  0FED                     	;# 
  2363  0FEE                     	;# 
  2364  0FEF                     	;# 
  2365  0000                     	;# 
  2366  0001                     	;# 
  2367  0002                     	;# 
  2368  0003                     	;# 
  2369  0004                     	;# 
  2370  0005                     	;# 
  2371  0006                     	;# 
  2372  0007                     	;# 
  2373  0008                     	;# 
  2374  0009                     	;# 
  2375  000A                     	;# 
  2376  000B                     	;# 
  2377  000C                     	;# 
  2378  000D                     	;# 
  2379  000E                     	;# 
  2380  000F                     	;# 
  2381  0010                     	;# 
  2382  0011                     	;# 
  2383  0012                     	;# 
  2384  0013                     	;# 
  2385  0014                     	;# 
  2386  0015                     	;# 
  2387  0016                     	;# 
  2388  0017                     	;# 
  2389  0018                     	;# 
  2390  0019                     	;# 
  2391  001A                     	;# 
  2392  001C                     	;# 
  2393  001C                     	;# 
  2394  001D                     	;# 
  2395  001D                     	;# 
  2396  001E                     	;# 
  2397  001F                     	;# 
  2398  008C                     	;# 
  2399  008C                     	;# 
  2400  008D                     	;# 
  2401  008E                     	;# 
  2402  008E                     	;# 
  2403  008F                     	;# 
  2404  0090                     	;# 
  2405  0090                     	;# 
  2406  0091                     	;# 
  2407  0093                     	;# 
  2408  0094                     	;# 
  2409  0095                     	;# 
  2410  0096                     	;# 
  2411  0097                     	;# 
  2412  0098                     	;# 
  2413  0099                     	;# 
  2414  009A                     	;# 
  2415  009B                     	;# 
  2416  009C                     	;# 
  2417  009D                     	;# 
  2418  009E                     	;# 
  2419  010C                     	;# 
  2420  010D                     	;# 
  2421  010E                     	;# 
  2422  010E                     	;# 
  2423  010F                     	;# 
  2424  0110                     	;# 
  2425  0110                     	;# 
  2426  0111                     	;# 
  2427  0112                     	;# 
  2428  0112                     	;# 
  2429  0113                     	;# 
  2430  0114                     	;# 
  2431  0114                     	;# 
  2432  0115                     	;# 
  2433  0116                     	;# 
  2434  0116                     	;# 
  2435  0117                     	;# 
  2436  0119                     	;# 
  2437  0119                     	;# 
  2438  0119                     	;# 
  2439  011A                     	;# 
  2440  011A                     	;# 
  2441  011A                     	;# 
  2442  011B                     	;# 
  2443  011B                     	;# 
  2444  011B                     	;# 
  2445  011B                     	;# 
  2446  011B                     	;# 
  2447  011C                     	;# 
  2448  011C                     	;# 
  2449  011C                     	;# 
  2450  011D                     	;# 
  2451  011D                     	;# 
  2452  011D                     	;# 
  2453  011E                     	;# 
  2454  011E                     	;# 
  2455  011E                     	;# 
  2456  011F                     	;# 
  2457  011F                     	;# 
  2458  011F                     	;# 
  2459  011F                     	;# 
  2460  011F                     	;# 
  2461  018C                     	;# 
  2462  018D                     	;# 
  2463  018E                     	;# 
  2464  018F                     	;# 
  2465  0190                     	;# 
  2466  0191                     	;# 
  2467  0192                     	;# 
  2468  0196                     	;# 
  2469  0197                     	;# 
  2470  0198                     	;# 
  2471  0199                     	;# 
  2472  019A                     	;# 
  2473  019B                     	;# 
  2474  019C                     	;# 
  2475  020C                     	;# 
  2476  020C                     	;# 
  2477  020D                     	;# 
  2478  020E                     	;# 
  2479  020F                     	;# 
  2480  020F                     	;# 
  2481  0210                     	;# 
  2482  0210                     	;# 
  2483  0211                     	;# 
  2484  0211                     	;# 
  2485  0212                     	;# 
  2486  0212                     	;# 
  2487  0213                     	;# 
  2488  0214                     	;# 
  2489  0215                     	;# 
  2490  0215                     	;# 
  2491  0216                     	;# 
  2492  0216                     	;# 
  2493  0217                     	;# 
  2494  0217                     	;# 
  2495  0218                     	;# 
  2496  0218                     	;# 
  2497  0219                     	;# 
  2498  021A                     	;# 
  2499  021B                     	;# 
  2500  021B                     	;# 
  2501  021C                     	;# 
  2502  021C                     	;# 
  2503  021D                     	;# 
  2504  021D                     	;# 
  2505  021E                     	;# 
  2506  021F                     	;# 
  2507  028C                     	;# 
  2508  028C                     	;# 
  2509  028D                     	;# 
  2510  028D                     	;# 
  2511  028E                     	;# 
  2512  028F                     	;# 
  2513  0290                     	;# 
  2514  0290                     	;# 
  2515  0291                     	;# 
  2516  0292                     	;# 
  2517  0292                     	;# 
  2518  0293                     	;# 
  2519  0293                     	;# 
  2520  0294                     	;# 
  2521  0295                     	;# 
  2522  0296                     	;# 
  2523  0296                     	;# 
  2524  0297                     	;# 
  2525  0298                     	;# 
  2526  0298                     	;# 
  2527  0299                     	;# 
  2528  0299                     	;# 
  2529  029A                     	;# 
  2530  029B                     	;# 
  2531  029C                     	;# 
  2532  029C                     	;# 
  2533  029D                     	;# 
  2534  030C                     	;# 
  2535  030C                     	;# 
  2536  030D                     	;# 
  2537  030E                     	;# 
  2538  030F                     	;# 
  2539  0310                     	;# 
  2540  0310                     	;# 
  2541  0311                     	;# 
  2542  0312                     	;# 
  2543  0313                     	;# 
  2544  0314                     	;# 
  2545  0314                     	;# 
  2546  0315                     	;# 
  2547  0316                     	;# 
  2548  0317                     	;# 
  2549  0318                     	;# 
  2550  0318                     	;# 
  2551  0319                     	;# 
  2552  031A                     	;# 
  2553  031B                     	;# 
  2554  031C                     	;# 
  2555  031C                     	;# 
  2556  031D                     	;# 
  2557  031E                     	;# 
  2558  031F                     	;# 
  2559  038C                     	;# 
  2560  038C                     	;# 
  2561  038D                     	;# 
  2562  038E                     	;# 
  2563  0390                     	;# 
  2564  0390                     	;# 
  2565  0391                     	;# 
  2566  0392                     	;# 
  2567  040C                     	;# 
  2568  040D                     	;# 
  2569  040E                     	;# 
  2570  040F                     	;# 
  2571  0410                     	;# 
  2572  0411                     	;# 
  2573  0416                     	;# 
  2574  0416                     	;# 
  2575  0417                     	;# 
  2576  0418                     	;# 
  2577  0418                     	;# 
  2578  0419                     	;# 
  2579  041A                     	;# 
  2580  041A                     	;# 
  2581  041B                     	;# 
  2582  041C                     	;# 
  2583  041C                     	;# 
  2584  041D                     	;# 
  2585  041E                     	;# 
  2586  041F                     	;# 
  2587  048C                     	;# 
  2588  048C                     	;# 
  2589  048D                     	;# 
  2590  048E                     	;# 
  2591  048F                     	;# 
  2592  048F                     	;# 
  2593  0490                     	;# 
  2594  0491                     	;# 
  2595  0492                     	;# 
  2596  0492                     	;# 
  2597  0493                     	;# 
  2598  0494                     	;# 
  2599  0495                     	;# 
  2600  0495                     	;# 
  2601  0496                     	;# 
  2602  0497                     	;# 
  2603  0498                     	;# 
  2604  0499                     	;# 
  2605  049A                     	;# 
  2606  049B                     	;# 
  2607  049C                     	;# 
  2608  049D                     	;# 
  2609  050C                     	;# 
  2610  050C                     	;# 
  2611  050D                     	;# 
  2612  050E                     	;# 
  2613  050F                     	;# 
  2614  050F                     	;# 
  2615  0510                     	;# 
  2616  0511                     	;# 
  2617  0512                     	;# 
  2618  0512                     	;# 
  2619  0513                     	;# 
  2620  0514                     	;# 
  2621  0515                     	;# 
  2622  0515                     	;# 
  2623  0516                     	;# 
  2624  0517                     	;# 
  2625  0518                     	;# 
  2626  0519                     	;# 
  2627  051A                     	;# 
  2628  051B                     	;# 
  2629  051C                     	;# 
  2630  051D                     	;# 
  2631  058C                     	;# 
  2632  058C                     	;# 
  2633  058D                     	;# 
  2634  058E                     	;# 
  2635  058F                     	;# 
  2636  058F                     	;# 
  2637  0590                     	;# 
  2638  0591                     	;# 
  2639  0592                     	;# 
  2640  0593                     	;# 
  2641  060C                     	;# 
  2642  060D                     	;# 
  2643  060E                     	;# 
  2644  060F                     	;# 
  2645  0610                     	;# 
  2646  0611                     	;# 
  2647  0612                     	;# 
  2648  0613                     	;# 
  2649  0614                     	;# 
  2650  0616                     	;# 
  2651  0617                     	;# 
  2652  0618                     	;# 
  2653  0619                     	;# 
  2654  061A                     	;# 
  2655  061B                     	;# 
  2656  061C                     	;# 
  2657  061D                     	;# 
  2658  061E                     	;# 
  2659  068C                     	;# 
  2660  068D                     	;# 
  2661  068E                     	;# 
  2662  068F                     	;# 
  2663  0690                     	;# 
  2664  0691                     	;# 
  2665  0692                     	;# 
  2666  0693                     	;# 
  2667  0694                     	;# 
  2668  070C                     	;# 
  2669  070D                     	;# 
  2670  070E                     	;# 
  2671  070F                     	;# 
  2672  0710                     	;# 
  2673  0711                     	;# 
  2674  0712                     	;# 
  2675  0713                     	;# 
  2676  0714                     	;# 
  2677  0716                     	;# 
  2678  0717                     	;# 
  2679  0718                     	;# 
  2680  0719                     	;# 
  2681  071A                     	;# 
  2682  071B                     	;# 
  2683  071C                     	;# 
  2684  071D                     	;# 
  2685  071E                     	;# 
  2686  0796                     	;# 
  2687  0797                     	;# 
  2688  0798                     	;# 
  2689  0799                     	;# 
  2690  079A                     	;# 
  2691  079B                     	;# 
  2692  080C                     	;# 
  2693  080D                     	;# 
  2694  080E                     	;# 
  2695  080F                     	;# 
  2696  0810                     	;# 
  2697  0811                     	;# 
  2698  0812                     	;# 
  2699  0813                     	;# 
  2700  0814                     	;# 
  2701  081A                     	;# 
  2702  081B                     	;# 
  2703  081C                     	;# 
  2704  081D                     	;# 
  2705  081E                     	;# 
  2706  081F                     	;# 
  2707  088C                     	;# 
  2708  088D                     	;# 
  2709  088E                     	;# 
  2710  088F                     	;# 
  2711  0890                     	;# 
  2712  0891                     	;# 
  2713  0892                     	;# 
  2714  0893                     	;# 
  2715  0895                     	;# 
  2716  0896                     	;# 
  2717  0897                     	;# 
  2718  0898                     	;# 
  2719  0899                     	;# 
  2720  089A                     	;# 
  2721  089B                     	;# 
  2722  090C                     	;# 
  2723  090E                     	;# 
  2724  090F                     	;# 
  2725  091F                     	;# 
  2726  091F                     	;# 
  2727  098F                     	;# 
  2728  098F                     	;# 
  2729  0990                     	;# 
  2730  0991                     	;# 
  2731  0992                     	;# 
  2732  0993                     	;# 
  2733  0994                     	;# 
  2734  0995                     	;# 
  2735  0996                     	;# 
  2736  0997                     	;# 
  2737  0E0F                     	;# 
  2738  0E10                     	;# 
  2739  0E11                     	;# 
  2740  0E12                     	;# 
  2741  0E13                     	;# 
  2742  0E14                     	;# 
  2743  0E15                     	;# 
  2744  0E16                     	;# 
  2745  0E17                     	;# 
  2746  0E18                     	;# 
  2747  0E19                     	;# 
  2748  0E1A                     	;# 
  2749  0E1B                     	;# 
  2750  0E1C                     	;# 
  2751  0E1D                     	;# 
  2752  0E1E                     	;# 
  2753  0E1F                     	;# 
  2754  0E20                     	;# 
  2755  0E21                     	;# 
  2756  0E22                     	;# 
  2757  0E23                     	;# 
  2758  0E24                     	;# 
  2759  0E25                     	;# 
  2760  0E26                     	;# 
  2761  0E27                     	;# 
  2762  0E28                     	;# 
  2763  0E29                     	;# 
  2764  0E2A                     	;# 
  2765  0E2B                     	;# 
  2766  0E2C                     	;# 
  2767  0E2D                     	;# 
  2768  0E2E                     	;# 
  2769  0E2F                     	;# 
  2770  0E30                     	;# 
  2771  0E31                     	;# 
  2772  0E32                     	;# 
  2773  0E33                     	;# 
  2774  0E34                     	;# 
  2775  0E35                     	;# 
  2776  0E36                     	;# 
  2777  0E37                     	;# 
  2778  0E8F                     	;# 
  2779  0E90                     	;# 
  2780  0E91                     	;# 
  2781  0E92                     	;# 
  2782  0E93                     	;# 
  2783  0E94                     	;# 
  2784  0E95                     	;# 
  2785  0E96                     	;# 
  2786  0E97                     	;# 
  2787  0E9C                     	;# 
  2788  0E9D                     	;# 
  2789  0E9E                     	;# 
  2790  0EA1                     	;# 
  2791  0EA2                     	;# 
  2792  0EA3                     	;# 
  2793  0EA4                     	;# 
  2794  0EA5                     	;# 
  2795  0EA9                     	;# 
  2796  0EAA                     	;# 
  2797  0EAB                     	;# 
  2798  0EAC                     	;# 
  2799  0EB1                     	;# 
  2800  0EB2                     	;# 
  2801  0EB3                     	;# 
  2802  0EB8                     	;# 
  2803  0EB9                     	;# 
  2804  0EBA                     	;# 
  2805  0EBB                     	;# 
  2806  0EBC                     	;# 
  2807  0EBD                     	;# 
  2808  0EBE                     	;# 
  2809  0EC3                     	;# 
  2810  0EC5                     	;# 
  2811  0EC6                     	;# 
  2812  0EC7                     	;# 
  2813  0EC8                     	;# 
  2814  0EC9                     	;# 
  2815  0ECA                     	;# 
  2816  0ECB                     	;# 
  2817  0ECC                     	;# 
  2818  0F10                     	;# 
  2819  0F11                     	;# 
  2820  0F12                     	;# 
  2821  0F13                     	;# 
  2822  0F14                     	;# 
  2823  0F15                     	;# 
  2824  0F16                     	;# 
  2825  0F17                     	;# 
  2826  0F18                     	;# 
  2827  0F19                     	;# 
  2828  0F1A                     	;# 
  2829  0F1B                     	;# 
  2830  0F1C                     	;# 
  2831  0F1D                     	;# 
  2832  0F1E                     	;# 
  2833  0F1F                     	;# 
  2834  0F20                     	;# 
  2835  0F21                     	;# 
  2836  0F22                     	;# 
  2837  0F23                     	;# 
  2838  0F24                     	;# 
  2839  0F25                     	;# 
  2840  0F26                     	;# 
  2841  0F27                     	;# 
  2842  0F28                     	;# 
  2843  0F29                     	;# 
  2844  0F2A                     	;# 
  2845  0F2B                     	;# 
  2846  0F2C                     	;# 
  2847  0F2D                     	;# 
  2848  0F2E                     	;# 
  2849  0F2F                     	;# 
  2850  0F30                     	;# 
  2851  0F31                     	;# 
  2852  0F32                     	;# 
  2853  0F38                     	;# 
  2854  0F39                     	;# 
  2855  0F3A                     	;# 
  2856  0F3B                     	;# 
  2857  0F3C                     	;# 
  2858  0F3D                     	;# 
  2859  0F3E                     	;# 
  2860  0F3F                     	;# 
  2861  0F40                     	;# 
  2862  0F41                     	;# 
  2863  0F43                     	;# 
  2864  0F44                     	;# 
  2865  0F45                     	;# 
  2866  0F46                     	;# 
  2867  0F47                     	;# 
  2868  0F48                     	;# 
  2869  0F49                     	;# 
  2870  0F4A                     	;# 
  2871  0F4B                     	;# 
  2872  0F4C                     	;# 
  2873  0F4E                     	;# 
  2874  0F4F                     	;# 
  2875  0F50                     	;# 
  2876  0F51                     	;# 
  2877  0F52                     	;# 
  2878  0F53                     	;# 
  2879  0F54                     	;# 
  2880  0F55                     	;# 
  2881  0F56                     	;# 
  2882  0F57                     	;# 
  2883  0F59                     	;# 
  2884  0F5A                     	;# 
  2885  0F5B                     	;# 
  2886  0F5C                     	;# 
  2887  0F5D                     	;# 
  2888  0F61                     	;# 
  2889  0F62                     	;# 
  2890  0F64                     	;# 
  2891  0F65                     	;# 
  2892  0F66                     	;# 
  2893  0F67                     	;# 
  2894  0F68                     	;# 
  2895  0F69                     	;# 
  2896  0F6A                     	;# 
  2897  0F6B                     	;# 
  2898  0F6C                     	;# 
  2899  0F6D                     	;# 
  2900  0FE4                     	;# 
  2901  0FE5                     	;# 
  2902  0FE6                     	;# 
  2903  0FE7                     	;# 
  2904  0FE8                     	;# 
  2905  0FE9                     	;# 
  2906  0FEA                     	;# 
  2907  0FEB                     	;# 
  2908  0FED                     	;# 
  2909  0FEE                     	;# 
  2910  0FEF                     	;# 
  2911  0000                     	;# 
  2912  0001                     	;# 
  2913  0002                     	;# 
  2914  0003                     	;# 
  2915  0004                     	;# 
  2916  0005                     	;# 
  2917  0006                     	;# 
  2918  0007                     	;# 
  2919  0008                     	;# 
  2920  0009                     	;# 
  2921  000A                     	;# 
  2922  000B                     	;# 
  2923  000C                     	;# 
  2924  000D                     	;# 
  2925  000E                     	;# 
  2926  000F                     	;# 
  2927  0010                     	;# 
  2928  0011                     	;# 
  2929  0012                     	;# 
  2930  0013                     	;# 
  2931  0014                     	;# 
  2932  0015                     	;# 
  2933  0016                     	;# 
  2934  0017                     	;# 
  2935  0018                     	;# 
  2936  0019                     	;# 
  2937  001A                     	;# 
  2938  001C                     	;# 
  2939  001C                     	;# 
  2940  001D                     	;# 
  2941  001D                     	;# 
  2942  001E                     	;# 
  2943  001F                     	;# 
  2944  008C                     	;# 
  2945  008C                     	;# 
  2946  008D                     	;# 
  2947  008E                     	;# 
  2948  008E                     	;# 
  2949  008F                     	;# 
  2950  0090                     	;# 
  2951  0090                     	;# 
  2952  0091                     	;# 
  2953  0093                     	;# 
  2954  0094                     	;# 
  2955  0095                     	;# 
  2956  0096                     	;# 
  2957  0097                     	;# 
  2958  0098                     	;# 
  2959  0099                     	;# 
  2960  009A                     	;# 
  2961  009B                     	;# 
  2962  009C                     	;# 
  2963  009D                     	;# 
  2964  009E                     	;# 
  2965  010C                     	;# 
  2966  010D                     	;# 
  2967  010E                     	;# 
  2968  010E                     	;# 
  2969  010F                     	;# 
  2970  0110                     	;# 
  2971  0110                     	;# 
  2972  0111                     	;# 
  2973  0112                     	;# 
  2974  0112                     	;# 
  2975  0113                     	;# 
  2976  0114                     	;# 
  2977  0114                     	;# 
  2978  0115                     	;# 
  2979  0116                     	;# 
  2980  0116                     	;# 
  2981  0117                     	;# 
  2982  0119                     	;# 
  2983  0119                     	;# 
  2984  0119                     	;# 
  2985  011A                     	;# 
  2986  011A                     	;# 
  2987  011A                     	;# 
  2988  011B                     	;# 
  2989  011B                     	;# 
  2990  011B                     	;# 
  2991  011B                     	;# 
  2992  011B                     	;# 
  2993  011C                     	;# 
  2994  011C                     	;# 
  2995  011C                     	;# 
  2996  011D                     	;# 
  2997  011D                     	;# 
  2998  011D                     	;# 
  2999  011E                     	;# 
  3000  011E                     	;# 
  3001  011E                     	;# 
  3002  011F                     	;# 
  3003  011F                     	;# 
  3004  011F                     	;# 
  3005  011F                     	;# 
  3006  011F                     	;# 
  3007  018C                     	;# 
  3008  018D                     	;# 
  3009  018E                     	;# 
  3010  018F                     	;# 
  3011  0190                     	;# 
  3012  0191                     	;# 
  3013  0192                     	;# 
  3014  0196                     	;# 
  3015  0197                     	;# 
  3016  0198                     	;# 
  3017  0199                     	;# 
  3018  019A                     	;# 
  3019  019B                     	;# 
  3020  019C                     	;# 
  3021  020C                     	;# 
  3022  020C                     	;# 
  3023  020D                     	;# 
  3024  020E                     	;# 
  3025  020F                     	;# 
  3026  020F                     	;# 
  3027  0210                     	;# 
  3028  0210                     	;# 
  3029  0211                     	;# 
  3030  0211                     	;# 
  3031  0212                     	;# 
  3032  0212                     	;# 
  3033  0213                     	;# 
  3034  0214                     	;# 
  3035  0215                     	;# 
  3036  0215                     	;# 
  3037  0216                     	;# 
  3038  0216                     	;# 
  3039  0217                     	;# 
  3040  0217                     	;# 
  3041  0218                     	;# 
  3042  0218                     	;# 
  3043  0219                     	;# 
  3044  021A                     	;# 
  3045  021B                     	;# 
  3046  021B                     	;# 
  3047  021C                     	;# 
  3048  021C                     	;# 
  3049  021D                     	;# 
  3050  021D                     	;# 
  3051  021E                     	;# 
  3052  021F                     	;# 
  3053  028C                     	;# 
  3054  028C                     	;# 
  3055  028D                     	;# 
  3056  028D                     	;# 
  3057  028E                     	;# 
  3058  028F                     	;# 
  3059  0290                     	;# 
  3060  0290                     	;# 
  3061  0291                     	;# 
  3062  0292                     	;# 
  3063  0292                     	;# 
  3064  0293                     	;# 
  3065  0293                     	;# 
  3066  0294                     	;# 
  3067  0295                     	;# 
  3068  0296                     	;# 
  3069  0296                     	;# 
  3070  0297                     	;# 
  3071  0298                     	;# 
  3072  0298                     	;# 
  3073  0299                     	;# 
  3074  0299                     	;# 
  3075  029A                     	;# 
  3076  029B                     	;# 
  3077  029C                     	;# 
  3078  029C                     	;# 
  3079  029D                     	;# 
  3080  030C                     	;# 
  3081  030C                     	;# 
  3082  030D                     	;# 
  3083  030E                     	;# 
  3084  030F                     	;# 
  3085  0310                     	;# 
  3086  0310                     	;# 
  3087  0311                     	;# 
  3088  0312                     	;# 
  3089  0313                     	;# 
  3090  0314                     	;# 
  3091  0314                     	;# 
  3092  0315                     	;# 
  3093  0316                     	;# 
  3094  0317                     	;# 
  3095  0318                     	;# 
  3096  0318                     	;# 
  3097  0319                     	;# 
  3098  031A                     	;# 
  3099  031B                     	;# 
  3100  031C                     	;# 
  3101  031C                     	;# 
  3102  031D                     	;# 
  3103  031E                     	;# 
  3104  031F                     	;# 
  3105  038C                     	;# 
  3106  038C                     	;# 
  3107  038D                     	;# 
  3108  038E                     	;# 
  3109  0390                     	;# 
  3110  0390                     	;# 
  3111  0391                     	;# 
  3112  0392                     	;# 
  3113  040C                     	;# 
  3114  040D                     	;# 
  3115  040E                     	;# 
  3116  040F                     	;# 
  3117  0410                     	;# 
  3118  0411                     	;# 
  3119  0416                     	;# 
  3120  0416                     	;# 
  3121  0417                     	;# 
  3122  0418                     	;# 
  3123  0418                     	;# 
  3124  0419                     	;# 
  3125  041A                     	;# 
  3126  041A                     	;# 
  3127  041B                     	;# 
  3128  041C                     	;# 
  3129  041C                     	;# 
  3130  041D                     	;# 
  3131  041E                     	;# 
  3132  041F                     	;# 
  3133  048C                     	;# 
  3134  048C                     	;# 
  3135  048D                     	;# 
  3136  048E                     	;# 
  3137  048F                     	;# 
  3138  048F                     	;# 
  3139  0490                     	;# 
  3140  0491                     	;# 
  3141  0492                     	;# 
  3142  0492                     	;# 
  3143  0493                     	;# 
  3144  0494                     	;# 
  3145  0495                     	;# 
  3146  0495                     	;# 
  3147  0496                     	;# 
  3148  0497                     	;# 
  3149  0498                     	;# 
  3150  0499                     	;# 
  3151  049A                     	;# 
  3152  049B                     	;# 
  3153  049C                     	;# 
  3154  049D                     	;# 
  3155  050C                     	;# 
  3156  050C                     	;# 
  3157  050D                     	;# 
  3158  050E                     	;# 
  3159  050F                     	;# 
  3160  050F                     	;# 
  3161  0510                     	;# 
  3162  0511                     	;# 
  3163  0512                     	;# 
  3164  0512                     	;# 
  3165  0513                     	;# 
  3166  0514                     	;# 
  3167  0515                     	;# 
  3168  0515                     	;# 
  3169  0516                     	;# 
  3170  0517                     	;# 
  3171  0518                     	;# 
  3172  0519                     	;# 
  3173  051A                     	;# 
  3174  051B                     	;# 
  3175  051C                     	;# 
  3176  051D                     	;# 
  3177  058C                     	;# 
  3178  058C                     	;# 
  3179  058D                     	;# 
  3180  058E                     	;# 
  3181  058F                     	;# 
  3182  058F                     	;# 
  3183  0590                     	;# 
  3184  0591                     	;# 
  3185  0592                     	;# 
  3186  0593                     	;# 
  3187  060C                     	;# 
  3188  060D                     	;# 
  3189  060E                     	;# 
  3190  060F                     	;# 
  3191  0610                     	;# 
  3192  0611                     	;# 
  3193  0612                     	;# 
  3194  0613                     	;# 
  3195  0614                     	;# 
  3196  0616                     	;# 
  3197  0617                     	;# 
  3198  0618                     	;# 
  3199  0619                     	;# 
  3200  061A                     	;# 
  3201  061B                     	;# 
  3202  061C                     	;# 
  3203  061D                     	;# 
  3204  061E                     	;# 
  3205  068C                     	;# 
  3206  068D                     	;# 
  3207  068E                     	;# 
  3208  068F                     	;# 
  3209  0690                     	;# 
  3210  0691                     	;# 
  3211  0692                     	;# 
  3212  0693                     	;# 
  3213  0694                     	;# 
  3214  070C                     	;# 
  3215  070D                     	;# 
  3216  070E                     	;# 
  3217  070F                     	;# 
  3218  0710                     	;# 
  3219  0711                     	;# 
  3220  0712                     	;# 
  3221  0713                     	;# 
  3222  0714                     	;# 
  3223  0716                     	;# 
  3224  0717                     	;# 
  3225  0718                     	;# 
  3226  0719                     	;# 
  3227  071A                     	;# 
  3228  071B                     	;# 
  3229  071C                     	;# 
  3230  071D                     	;# 
  3231  071E                     	;# 
  3232  0796                     	;# 
  3233  0797                     	;# 
  3234  0798                     	;# 
  3235  0799                     	;# 
  3236  079A                     	;# 
  3237  079B                     	;# 
  3238  080C                     	;# 
  3239  080D                     	;# 
  3240  080E                     	;# 
  3241  080F                     	;# 
  3242  0810                     	;# 
  3243  0811                     	;# 
  3244  0812                     	;# 
  3245  0813                     	;# 
  3246  0814                     	;# 
  3247  081A                     	;# 
  3248  081B                     	;# 
  3249  081C                     	;# 
  3250  081D                     	;# 
  3251  081E                     	;# 
  3252  081F                     	;# 
  3253  088C                     	;# 
  3254  088D                     	;# 
  3255  088E                     	;# 
  3256  088F                     	;# 
  3257  0890                     	;# 
  3258  0891                     	;# 
  3259  0892                     	;# 
  3260  0893                     	;# 
  3261  0895                     	;# 
  3262  0896                     	;# 
  3263  0897                     	;# 
  3264  0898                     	;# 
  3265  0899                     	;# 
  3266  089A                     	;# 
  3267  089B                     	;# 
  3268  090C                     	;# 
  3269  090E                     	;# 
  3270  090F                     	;# 
  3271  091F                     	;# 
  3272  091F                     	;# 
  3273  098F                     	;# 
  3274  098F                     	;# 
  3275  0990                     	;# 
  3276  0991                     	;# 
  3277  0992                     	;# 
  3278  0993                     	;# 
  3279  0994                     	;# 
  3280  0995                     	;# 
  3281  0996                     	;# 
  3282  0997                     	;# 
  3283  0E0F                     	;# 
  3284  0E10                     	;# 
  3285  0E11                     	;# 
  3286  0E12                     	;# 
  3287  0E13                     	;# 
  3288  0E14                     	;# 
  3289  0E15                     	;# 
  3290  0E16                     	;# 
  3291  0E17                     	;# 
  3292  0E18                     	;# 
  3293  0E19                     	;# 
  3294  0E1A                     	;# 
  3295  0E1B                     	;# 
  3296  0E1C                     	;# 
  3297  0E1D                     	;# 
  3298  0E1E                     	;# 
  3299  0E1F                     	;# 
  3300  0E20                     	;# 
  3301  0E21                     	;# 
  3302  0E22                     	;# 
  3303  0E23                     	;# 
  3304  0E24                     	;# 
  3305  0E25                     	;# 
  3306  0E26                     	;# 
  3307  0E27                     	;# 
  3308  0E28                     	;# 
  3309  0E29                     	;# 
  3310  0E2A                     	;# 
  3311  0E2B                     	;# 
  3312  0E2C                     	;# 
  3313  0E2D                     	;# 
  3314  0E2E                     	;# 
  3315  0E2F                     	;# 
  3316  0E30                     	;# 
  3317  0E31                     	;# 
  3318  0E32                     	;# 
  3319  0E33                     	;# 
  3320  0E34                     	;# 
  3321  0E35                     	;# 
  3322  0E36                     	;# 
  3323  0E37                     	;# 
  3324  0E8F                     	;# 
  3325  0E90                     	;# 
  3326  0E91                     	;# 
  3327  0E92                     	;# 
  3328  0E93                     	;# 
  3329  0E94                     	;# 
  3330  0E95                     	;# 
  3331  0E96                     	;# 
  3332  0E97                     	;# 
  3333  0E9C                     	;# 
  3334  0E9D                     	;# 
  3335  0E9E                     	;# 
  3336  0EA1                     	;# 
  3337  0EA2                     	;# 
  3338  0EA3                     	;# 
  3339  0EA4                     	;# 
  3340  0EA5                     	;# 
  3341  0EA9                     	;# 
  3342  0EAA                     	;# 
  3343  0EAB                     	;# 
  3344  0EAC                     	;# 
  3345  0EB1                     	;# 
  3346  0EB2                     	;# 
  3347  0EB3                     	;# 
  3348  0EB8                     	;# 
  3349  0EB9                     	;# 
  3350  0EBA                     	;# 
  3351  0EBB                     	;# 
  3352  0EBC                     	;# 
  3353  0EBD                     	;# 
  3354  0EBE                     	;# 
  3355  0EC3                     	;# 
  3356  0EC5                     	;# 
  3357  0EC6                     	;# 
  3358  0EC7                     	;# 
  3359  0EC8                     	;# 
  3360  0EC9                     	;# 
  3361  0ECA                     	;# 
  3362  0ECB                     	;# 
  3363  0ECC                     	;# 
  3364  0F10                     	;# 
  3365  0F11                     	;# 
  3366  0F12                     	;# 
  3367  0F13                     	;# 
  3368  0F14                     	;# 
  3369  0F15                     	;# 
  3370  0F16                     	;# 
  3371  0F17                     	;# 
  3372  0F18                     	;# 
  3373  0F19                     	;# 
  3374  0F1A                     	;# 
  3375  0F1B                     	;# 
  3376  0F1C                     	;# 
  3377  0F1D                     	;# 
  3378  0F1E                     	;# 
  3379  0F1F                     	;# 
  3380  0F20                     	;# 
  3381  0F21                     	;# 
  3382  0F22                     	;# 
  3383  0F23                     	;# 
  3384  0F24                     	;# 
  3385  0F25                     	;# 
  3386  0F26                     	;# 
  3387  0F27                     	;# 
  3388  0F28                     	;# 
  3389  0F29                     	;# 
  3390  0F2A                     	;# 
  3391  0F2B                     	;# 
  3392  0F2C                     	;# 
  3393  0F2D                     	;# 
  3394  0F2E                     	;# 
  3395  0F2F                     	;# 
  3396  0F30                     	;# 
  3397  0F31                     	;# 
  3398  0F32                     	;# 
  3399  0F38                     	;# 
  3400  0F39                     	;# 
  3401  0F3A                     	;# 
  3402  0F3B                     	;# 
  3403  0F3C                     	;# 
  3404  0F3D                     	;# 
  3405  0F3E                     	;# 
  3406  0F3F                     	;# 
  3407  0F40                     	;# 
  3408  0F41                     	;# 
  3409  0F43                     	;# 
  3410  0F44                     	;# 
  3411  0F45                     	;# 
  3412  0F46                     	;# 
  3413  0F47                     	;# 
  3414  0F48                     	;# 
  3415  0F49                     	;# 
  3416  0F4A                     	;# 
  3417  0F4B                     	;# 
  3418  0F4C                     	;# 
  3419  0F4E                     	;# 
  3420  0F4F                     	;# 
  3421  0F50                     	;# 
  3422  0F51                     	;# 
  3423  0F52                     	;# 
  3424  0F53                     	;# 
  3425  0F54                     	;# 
  3426  0F55                     	;# 
  3427  0F56                     	;# 
  3428  0F57                     	;# 
  3429  0F59                     	;# 
  3430  0F5A                     	;# 
  3431  0F5B                     	;# 
  3432  0F5C                     	;# 
  3433  0F5D                     	;# 
  3434  0F61                     	;# 
  3435  0F62                     	;# 
  3436  0F64                     	;# 
  3437  0F65                     	;# 
  3438  0F66                     	;# 
  3439  0F67                     	;# 
  3440  0F68                     	;# 
  3441  0F69                     	;# 
  3442  0F6A                     	;# 
  3443  0F6B                     	;# 
  3444  0F6C                     	;# 
  3445  0F6D                     	;# 
  3446  0FE4                     	;# 
  3447  0FE5                     	;# 
  3448  0FE6                     	;# 
  3449  0FE7                     	;# 
  3450  0FE8                     	;# 
  3451  0FE9                     	;# 
  3452  0FEA                     	;# 
  3453  0FEB                     	;# 
  3454  0FED                     	;# 
  3455  0FEE                     	;# 
  3456  0FEF                     	;# 
  3457  0000                     	;# 
  3458  0001                     	;# 
  3459  0002                     	;# 
  3460  0003                     	;# 
  3461  0004                     	;# 
  3462  0005                     	;# 
  3463  0006                     	;# 
  3464  0007                     	;# 
  3465  0008                     	;# 
  3466  0009                     	;# 
  3467  000A                     	;# 
  3468  000B                     	;# 
  3469  000C                     	;# 
  3470  000D                     	;# 
  3471  000E                     	;# 
  3472  000F                     	;# 
  3473  0010                     	;# 
  3474  0011                     	;# 
  3475  0012                     	;# 
  3476  0013                     	;# 
  3477  0014                     	;# 
  3478  0015                     	;# 
  3479  0016                     	;# 
  3480  0017                     	;# 
  3481  0018                     	;# 
  3482  0019                     	;# 
  3483  001A                     	;# 
  3484  001C                     	;# 
  3485  001C                     	;# 
  3486  001D                     	;# 
  3487  001D                     	;# 
  3488  001E                     	;# 
  3489  001F                     	;# 
  3490  008C                     	;# 
  3491  008C                     	;# 
  3492  008D                     	;# 
  3493  008E                     	;# 
  3494  008E                     	;# 
  3495  008F                     	;# 
  3496  0090                     	;# 
  3497  0090                     	;# 
  3498  0091                     	;# 
  3499  0093                     	;# 
  3500  0094                     	;# 
  3501  0095                     	;# 
  3502  0096                     	;# 
  3503  0097                     	;# 
  3504  0098                     	;# 
  3505  0099                     	;# 
  3506  009A                     	;# 
  3507  009B                     	;# 
  3508  009C                     	;# 
  3509  009D                     	;# 
  3510  009E                     	;# 
  3511  010C                     	;# 
  3512  010D                     	;# 
  3513  010E                     	;# 
  3514  010E                     	;# 
  3515  010F                     	;# 
  3516  0110                     	;# 
  3517  0110                     	;# 
  3518  0111                     	;# 
  3519  0112                     	;# 
  3520  0112                     	;# 
  3521  0113                     	;# 
  3522  0114                     	;# 
  3523  0114                     	;# 
  3524  0115                     	;# 
  3525  0116                     	;# 
  3526  0116                     	;# 
  3527  0117                     	;# 
  3528  0119                     	;# 
  3529  0119                     	;# 
  3530  0119                     	;# 
  3531  011A                     	;# 
  3532  011A                     	;# 
  3533  011A                     	;# 
  3534  011B                     	;# 
  3535  011B                     	;# 
  3536  011B                     	;# 
  3537  011B                     	;# 
  3538  011B                     	;# 
  3539  011C                     	;# 
  3540  011C                     	;# 
  3541  011C                     	;# 
  3542  011D                     	;# 
  3543  011D                     	;# 
  3544  011D                     	;# 
  3545  011E                     	;# 
  3546  011E                     	;# 
  3547  011E                     	;# 
  3548  011F                     	;# 
  3549  011F                     	;# 
  3550  011F                     	;# 
  3551  011F                     	;# 
  3552  011F                     	;# 
  3553  018C                     	;# 
  3554  018D                     	;# 
  3555  018E                     	;# 
  3556  018F                     	;# 
  3557  0190                     	;# 
  3558  0191                     	;# 
  3559  0192                     	;# 
  3560  0196                     	;# 
  3561  0197                     	;# 
  3562  0198                     	;# 
  3563  0199                     	;# 
  3564  019A                     	;# 
  3565  019B                     	;# 
  3566  019C                     	;# 
  3567  020C                     	;# 
  3568  020C                     	;# 
  3569  020D                     	;# 
  3570  020E                     	;# 
  3571  020F                     	;# 
  3572  020F                     	;# 
  3573  0210                     	;# 
  3574  0210                     	;# 
  3575  0211                     	;# 
  3576  0211                     	;# 
  3577  0212                     	;# 
  3578  0212                     	;# 
  3579  0213                     	;# 
  3580  0214                     	;# 
  3581  0215                     	;# 
  3582  0215                     	;# 
  3583  0216                     	;# 
  3584  0216                     	;# 
  3585  0217                     	;# 
  3586  0217                     	;# 
  3587  0218                     	;# 
  3588  0218                     	;# 
  3589  0219                     	;# 
  3590  021A                     	;# 
  3591  021B                     	;# 
  3592  021B                     	;# 
  3593  021C                     	;# 
  3594  021C                     	;# 
  3595  021D                     	;# 
  3596  021D                     	;# 
  3597  021E                     	;# 
  3598  021F                     	;# 
  3599  028C                     	;# 
  3600  028C                     	;# 
  3601  028D                     	;# 
  3602  028D                     	;# 
  3603  028E                     	;# 
  3604  028F                     	;# 
  3605  0290                     	;# 
  3606  0290                     	;# 
  3607  0291                     	;# 
  3608  0292                     	;# 
  3609  0292                     	;# 
  3610  0293                     	;# 
  3611  0293                     	;# 
  3612  0294                     	;# 
  3613  0295                     	;# 
  3614  0296                     	;# 
  3615  0296                     	;# 
  3616  0297                     	;# 
  3617  0298                     	;# 
  3618  0298                     	;# 
  3619  0299                     	;# 
  3620  0299                     	;# 
  3621  029A                     	;# 
  3622  029B                     	;# 
  3623  029C                     	;# 
  3624  029C                     	;# 
  3625  029D                     	;# 
  3626  030C                     	;# 
  3627  030C                     	;# 
  3628  030D                     	;# 
  3629  030E                     	;# 
  3630  030F                     	;# 
  3631  0310                     	;# 
  3632  0310                     	;# 
  3633  0311                     	;# 
  3634  0312                     	;# 
  3635  0313                     	;# 
  3636  0314                     	;# 
  3637  0314                     	;# 
  3638  0315                     	;# 
  3639  0316                     	;# 
  3640  0317                     	;# 
  3641  0318                     	;# 
  3642  0318                     	;# 
  3643  0319                     	;# 
  3644  031A                     	;# 
  3645  031B                     	;# 
  3646  031C                     	;# 
  3647  031C                     	;# 
  3648  031D                     	;# 
  3649  031E                     	;# 
  3650  031F                     	;# 
  3651  038C                     	;# 
  3652  038C                     	;# 
  3653  038D                     	;# 
  3654  038E                     	;# 
  3655  0390                     	;# 
  3656  0390                     	;# 
  3657  0391                     	;# 
  3658  0392                     	;# 
  3659  040C                     	;# 
  3660  040D                     	;# 
  3661  040E                     	;# 
  3662  040F                     	;# 
  3663  0410                     	;# 
  3664  0411                     	;# 
  3665  0416                     	;# 
  3666  0416                     	;# 
  3667  0417                     	;# 
  3668  0418                     	;# 
  3669  0418                     	;# 
  3670  0419                     	;# 
  3671  041A                     	;# 
  3672  041A                     	;# 
  3673  041B                     	;# 
  3674  041C                     	;# 
  3675  041C                     	;# 
  3676  041D                     	;# 
  3677  041E                     	;# 
  3678  041F                     	;# 
  3679  048C                     	;# 
  3680  048C                     	;# 
  3681  048D                     	;# 
  3682  048E                     	;# 
  3683  048F                     	;# 
  3684  048F                     	;# 
  3685  0490                     	;# 
  3686  0491                     	;# 
  3687  0492                     	;# 
  3688  0492                     	;# 
  3689  0493                     	;# 
  3690  0494                     	;# 
  3691  0495                     	;# 
  3692  0495                     	;# 
  3693  0496                     	;# 
  3694  0497                     	;# 
  3695  0498                     	;# 
  3696  0499                     	;# 
  3697  049A                     	;# 
  3698  049B                     	;# 
  3699  049C                     	;# 
  3700  049D                     	;# 
  3701  050C                     	;# 
  3702  050C                     	;# 
  3703  050D                     	;# 
  3704  050E                     	;# 
  3705  050F                     	;# 
  3706  050F                     	;# 
  3707  0510                     	;# 
  3708  0511                     	;# 
  3709  0512                     	;# 
  3710  0512                     	;# 
  3711  0513                     	;# 
  3712  0514                     	;# 
  3713  0515                     	;# 
  3714  0515                     	;# 
  3715  0516                     	;# 
  3716  0517                     	;# 
  3717  0518                     	;# 
  3718  0519                     	;# 
  3719  051A                     	;# 
  3720  051B                     	;# 
  3721  051C                     	;# 
  3722  051D                     	;# 
  3723  058C                     	;# 
  3724  058C                     	;# 
  3725  058D                     	;# 
  3726  058E                     	;# 
  3727  058F                     	;# 
  3728  058F                     	;# 
  3729  0590                     	;# 
  3730  0591                     	;# 
  3731  0592                     	;# 
  3732  0593                     	;# 
  3733  060C                     	;# 
  3734  060D                     	;# 
  3735  060E                     	;# 
  3736  060F                     	;# 
  3737  0610                     	;# 
  3738  0611                     	;# 
  3739  0612                     	;# 
  3740  0613                     	;# 
  3741  0614                     	;# 
  3742  0616                     	;# 
  3743  0617                     	;# 
  3744  0618                     	;# 
  3745  0619                     	;# 
  3746  061A                     	;# 
  3747  061B                     	;# 
  3748  061C                     	;# 
  3749  061D                     	;# 
  3750  061E                     	;# 
  3751  068C                     	;# 
  3752  068D                     	;# 
  3753  068E                     	;# 
  3754  068F                     	;# 
  3755  0690                     	;# 
  3756  0691                     	;# 
  3757  0692                     	;# 
  3758  0693                     	;# 
  3759  0694                     	;# 
  3760  070C                     	;# 
  3761  070D                     	;# 
  3762  070E                     	;# 
  3763  070F                     	;# 
  3764  0710                     	;# 
  3765  0711                     	;# 
  3766  0712                     	;# 
  3767  0713                     	;# 
  3768  0714                     	;# 
  3769  0716                     	;# 
  3770  0717                     	;# 
  3771  0718                     	;# 
  3772  0719                     	;# 
  3773  071A                     	;# 
  3774  071B                     	;# 
  3775  071C                     	;# 
  3776  071D                     	;# 
  3777  071E                     	;# 
  3778  0796                     	;# 
  3779  0797                     	;# 
  3780  0798                     	;# 
  3781  0799                     	;# 
  3782  079A                     	;# 
  3783  079B                     	;# 
  3784  080C                     	;# 
  3785  080D                     	;# 
  3786  080E                     	;# 
  3787  080F                     	;# 
  3788  0810                     	;# 
  3789  0811                     	;# 
  3790  0812                     	;# 
  3791  0813                     	;# 
  3792  0814                     	;# 
  3793  081A                     	;# 
  3794  081B                     	;# 
  3795  081C                     	;# 
  3796  081D                     	;# 
  3797  081E                     	;# 
  3798  081F                     	;# 
  3799  088C                     	;# 
  3800  088D                     	;# 
  3801  088E                     	;# 
  3802  088F                     	;# 
  3803  0890                     	;# 
  3804  0891                     	;# 
  3805  0892                     	;# 
  3806  0893                     	;# 
  3807  0895                     	;# 
  3808  0896                     	;# 
  3809  0897                     	;# 
  3810  0898                     	;# 
  3811  0899                     	;# 
  3812  089A                     	;# 
  3813  089B                     	;# 
  3814  090C                     	;# 
  3815  090E                     	;# 
  3816  090F                     	;# 
  3817  091F                     	;# 
  3818  091F                     	;# 
  3819  098F                     	;# 
  3820  098F                     	;# 
  3821  0990                     	;# 
  3822  0991                     	;# 
  3823  0992                     	;# 
  3824  0993                     	;# 
  3825  0994                     	;# 
  3826  0995                     	;# 
  3827  0996                     	;# 
  3828  0997                     	;# 
  3829  0E0F                     	;# 
  3830  0E10                     	;# 
  3831  0E11                     	;# 
  3832  0E12                     	;# 
  3833  0E13                     	;# 
  3834  0E14                     	;# 
  3835  0E15                     	;# 
  3836  0E16                     	;# 
  3837  0E17                     	;# 
  3838  0E18                     	;# 
  3839  0E19                     	;# 
  3840  0E1A                     	;# 
  3841  0E1B                     	;# 
  3842  0E1C                     	;# 
  3843  0E1D                     	;# 
  3844  0E1E                     	;# 
  3845  0E1F                     	;# 
  3846  0E20                     	;# 
  3847  0E21                     	;# 
  3848  0E22                     	;# 
  3849  0E23                     	;# 
  3850  0E24                     	;# 
  3851  0E25                     	;# 
  3852  0E26                     	;# 
  3853  0E27                     	;# 
  3854  0E28                     	;# 
  3855  0E29                     	;# 
  3856  0E2A                     	;# 
  3857  0E2B                     	;# 
  3858  0E2C                     	;# 
  3859  0E2D                     	;# 
  3860  0E2E                     	;# 
  3861  0E2F                     	;# 
  3862  0E30                     	;# 
  3863  0E31                     	;# 
  3864  0E32                     	;# 
  3865  0E33                     	;# 
  3866  0E34                     	;# 
  3867  0E35                     	;# 
  3868  0E36                     	;# 
  3869  0E37                     	;# 
  3870  0E8F                     	;# 
  3871  0E90                     	;# 
  3872  0E91                     	;# 
  3873  0E92                     	;# 
  3874  0E93                     	;# 
  3875  0E94                     	;# 
  3876  0E95                     	;# 
  3877  0E96                     	;# 
  3878  0E97                     	;# 
  3879  0E9C                     	;# 
  3880  0E9D                     	;# 
  3881  0E9E                     	;# 
  3882  0EA1                     	;# 
  3883  0EA2                     	;# 
  3884  0EA3                     	;# 
  3885  0EA4                     	;# 
  3886  0EA5                     	;# 
  3887  0EA9                     	;# 
  3888  0EAA                     	;# 
  3889  0EAB                     	;# 
  3890  0EAC                     	;# 
  3891  0EB1                     	;# 
  3892  0EB2                     	;# 
  3893  0EB3                     	;# 
  3894  0EB8                     	;# 
  3895  0EB9                     	;# 
  3896  0EBA                     	;# 
  3897  0EBB                     	;# 
  3898  0EBC                     	;# 
  3899  0EBD                     	;# 
  3900  0EBE                     	;# 
  3901  0EC3                     	;# 
  3902  0EC5                     	;# 
  3903  0EC6                     	;# 
  3904  0EC7                     	;# 
  3905  0EC8                     	;# 
  3906  0EC9                     	;# 
  3907  0ECA                     	;# 
  3908  0ECB                     	;# 
  3909  0ECC                     	;# 
  3910  0F10                     	;# 
  3911  0F11                     	;# 
  3912  0F12                     	;# 
  3913  0F13                     	;# 
  3914  0F14                     	;# 
  3915  0F15                     	;# 
  3916  0F16                     	;# 
  3917  0F17                     	;# 
  3918  0F18                     	;# 
  3919  0F19                     	;# 
  3920  0F1A                     	;# 
  3921  0F1B                     	;# 
  3922  0F1C                     	;# 
  3923  0F1D                     	;# 
  3924  0F1E                     	;# 
  3925  0F1F                     	;# 
  3926  0F20                     	;# 
  3927  0F21                     	;# 
  3928  0F22                     	;# 
  3929  0F23                     	;# 
  3930  0F24                     	;# 
  3931  0F25                     	;# 
  3932  0F26                     	;# 
  3933  0F27                     	;# 
  3934  0F28                     	;# 
  3935  0F29                     	;# 
  3936  0F2A                     	;# 
  3937  0F2B                     	;# 
  3938  0F2C                     	;# 
  3939  0F2D                     	;# 
  3940  0F2E                     	;# 
  3941  0F2F                     	;# 
  3942  0F30                     	;# 
  3943  0F31                     	;# 
  3944  0F32                     	;# 
  3945  0F38                     	;# 
  3946  0F39                     	;# 
  3947  0F3A                     	;# 
  3948  0F3B                     	;# 
  3949  0F3C                     	;# 
  3950  0F3D                     	;# 
  3951  0F3E                     	;# 
  3952  0F3F                     	;# 
  3953  0F40                     	;# 
  3954  0F41                     	;# 
  3955  0F43                     	;# 
  3956  0F44                     	;# 
  3957  0F45                     	;# 
  3958  0F46                     	;# 
  3959  0F47                     	;# 
  3960  0F48                     	;# 
  3961  0F49                     	;# 
  3962  0F4A                     	;# 
  3963  0F4B                     	;# 
  3964  0F4C                     	;# 
  3965  0F4E                     	;# 
  3966  0F4F                     	;# 
  3967  0F50                     	;# 
  3968  0F51                     	;# 
  3969  0F52                     	;# 
  3970  0F53                     	;# 
  3971  0F54                     	;# 
  3972  0F55                     	;# 
  3973  0F56                     	;# 
  3974  0F57                     	;# 
  3975  0F59                     	;# 
  3976  0F5A                     	;# 
  3977  0F5B                     	;# 
  3978  0F5C                     	;# 
  3979  0F5D                     	;# 
  3980  0F61                     	;# 
  3981  0F62                     	;# 
  3982  0F64                     	;# 
  3983  0F65                     	;# 
  3984  0F66                     	;# 
  3985  0F67                     	;# 
  3986  0F68                     	;# 
  3987  0F69                     	;# 
  3988  0F6A                     	;# 
  3989  0F6B                     	;# 
  3990  0F6C                     	;# 
  3991  0F6D                     	;# 
  3992  0FE4                     	;# 
  3993  0FE5                     	;# 
  3994  0FE6                     	;# 
  3995  0FE7                     	;# 
  3996  0FE8                     	;# 
  3997  0FE9                     	;# 
  3998  0FEA                     	;# 
  3999  0FEB                     	;# 
  4000  0FED                     	;# 
  4001  0FEE                     	;# 
  4002  0FEF                     	;# 
  4003  0000                     	;# 
  4004  0001                     	;# 
  4005  0002                     	;# 
  4006  0003                     	;# 
  4007  0004                     	;# 
  4008  0005                     	;# 
  4009  0006                     	;# 
  4010  0007                     	;# 
  4011  0008                     	;# 
  4012  0009                     	;# 
  4013  000A                     	;# 
  4014  000B                     	;# 
  4015  000C                     	;# 
  4016  000D                     	;# 
  4017  000E                     	;# 
  4018  000F                     	;# 
  4019  0010                     	;# 
  4020  0011                     	;# 
  4021  0012                     	;# 
  4022  0013                     	;# 
  4023  0014                     	;# 
  4024  0015                     	;# 
  4025  0016                     	;# 
  4026  0017                     	;# 
  4027  0018                     	;# 
  4028  0019                     	;# 
  4029  001A                     	;# 
  4030  001C                     	;# 
  4031  001C                     	;# 
  4032  001D                     	;# 
  4033  001D                     	;# 
  4034  001E                     	;# 
  4035  001F                     	;# 
  4036  008C                     	;# 
  4037  008C                     	;# 
  4038  008D                     	;# 
  4039  008E                     	;# 
  4040  008E                     	;# 
  4041  008F                     	;# 
  4042  0090                     	;# 
  4043  0090                     	;# 
  4044  0091                     	;# 
  4045  0093                     	;# 
  4046  0094                     	;# 
  4047  0095                     	;# 
  4048  0096                     	;# 
  4049  0097                     	;# 
  4050  0098                     	;# 
  4051  0099                     	;# 
  4052  009A                     	;# 
  4053  009B                     	;# 
  4054  009C                     	;# 
  4055  009D                     	;# 
  4056  009E                     	;# 
  4057  010C                     	;# 
  4058  010D                     	;# 
  4059  010E                     	;# 
  4060  010E                     	;# 
  4061  010F                     	;# 
  4062  0110                     	;# 
  4063  0110                     	;# 
  4064  0111                     	;# 
  4065  0112                     	;# 
  4066  0112                     	;# 
  4067  0113                     	;# 
  4068  0114                     	;# 
  4069  0114                     	;# 
  4070  0115                     	;# 
  4071  0116                     	;# 
  4072  0116                     	;# 
  4073  0117                     	;# 
  4074  0119                     	;# 
  4075  0119                     	;# 
  4076  0119                     	;# 
  4077  011A                     	;# 
  4078  011A                     	;# 
  4079  011A                     	;# 
  4080  011B                     	;# 
  4081  011B                     	;# 
  4082  011B                     	;# 
  4083  011B                     	;# 
  4084  011B                     	;# 
  4085  011C                     	;# 
  4086  011C                     	;# 
  4087  011C                     	;# 
  4088  011D                     	;# 
  4089  011D                     	;# 
  4090  011D                     	;# 
  4091  011E                     	;# 
  4092  011E                     	;# 
  4093  011E                     	;# 
  4094  011F                     	;# 
  4095  011F                     	;# 
  4096  011F                     	;# 
  4097  011F                     	;# 
  4098  011F                     	;# 
  4099  018C                     	;# 
  4100  018D                     	;# 
  4101  018E                     	;# 
  4102  018F                     	;# 
  4103  0190                     	;# 
  4104  0191                     	;# 
  4105  0192                     	;# 
  4106  0196                     	;# 
  4107  0197                     	;# 
  4108  0198                     	;# 
  4109  0199                     	;# 
  4110  019A                     	;# 
  4111  019B                     	;# 
  4112  019C                     	;# 
  4113  020C                     	;# 
  4114  020C                     	;# 
  4115  020D                     	;# 
  4116  020E                     	;# 
  4117  020F                     	;# 
  4118  020F                     	;# 
  4119  0210                     	;# 
  4120  0210                     	;# 
  4121  0211                     	;# 
  4122  0211                     	;# 
  4123  0212                     	;# 
  4124  0212                     	;# 
  4125  0213                     	;# 
  4126  0214                     	;# 
  4127  0215                     	;# 
  4128  0215                     	;# 
  4129  0216                     	;# 
  4130  0216                     	;# 
  4131  0217                     	;# 
  4132  0217                     	;# 
  4133  0218                     	;# 
  4134  0218                     	;# 
  4135  0219                     	;# 
  4136  021A                     	;# 
  4137  021B                     	;# 
  4138  021B                     	;# 
  4139  021C                     	;# 
  4140  021C                     	;# 
  4141  021D                     	;# 
  4142  021D                     	;# 
  4143  021E                     	;# 
  4144  021F                     	;# 
  4145  028C                     	;# 
  4146  028C                     	;# 
  4147  028D                     	;# 
  4148  028D                     	;# 
  4149  028E                     	;# 
  4150  028F                     	;# 
  4151  0290                     	;# 
  4152  0290                     	;# 
  4153  0291                     	;# 
  4154  0292                     	;# 
  4155  0292                     	;# 
  4156  0293                     	;# 
  4157  0293                     	;# 
  4158  0294                     	;# 
  4159  0295                     	;# 
  4160  0296                     	;# 
  4161  0296                     	;# 
  4162  0297                     	;# 
  4163  0298                     	;# 
  4164  0298                     	;# 
  4165  0299                     	;# 
  4166  0299                     	;# 
  4167  029A                     	;# 
  4168  029B                     	;# 
  4169  029C                     	;# 
  4170  029C                     	;# 
  4171  029D                     	;# 
  4172  030C                     	;# 
  4173  030C                     	;# 
  4174  030D                     	;# 
  4175  030E                     	;# 
  4176  030F                     	;# 
  4177  0310                     	;# 
  4178  0310                     	;# 
  4179  0311                     	;# 
  4180  0312                     	;# 
  4181  0313                     	;# 
  4182  0314                     	;# 
  4183  0314                     	;# 
  4184  0315                     	;# 
  4185  0316                     	;# 
  4186  0317                     	;# 
  4187  0318                     	;# 
  4188  0318                     	;# 
  4189  0319                     	;# 
  4190  031A                     	;# 
  4191  031B                     	;# 
  4192  031C                     	;# 
  4193  031C                     	;# 
  4194  031D                     	;# 
  4195  031E                     	;# 
  4196  031F                     	;# 
  4197  038C                     	;# 
  4198  038C                     	;# 
  4199  038D                     	;# 
  4200  038E                     	;# 
  4201  0390                     	;# 
  4202  0390                     	;# 
  4203  0391                     	;# 
  4204  0392                     	;# 
  4205  040C                     	;# 
  4206  040D                     	;# 
  4207  040E                     	;# 
  4208  040F                     	;# 
  4209  0410                     	;# 
  4210  0411                     	;# 
  4211  0416                     	;# 
  4212  0416                     	;# 
  4213  0417                     	;# 
  4214  0418                     	;# 
  4215  0418                     	;# 
  4216  0419                     	;# 
  4217  041A                     	;# 
  4218  041A                     	;# 
  4219  041B                     	;# 
  4220  041C                     	;# 
  4221  041C                     	;# 
  4222  041D                     	;# 
  4223  041E                     	;# 
  4224  041F                     	;# 
  4225  048C                     	;# 
  4226  048C                     	;# 
  4227  048D                     	;# 
  4228  048E                     	;# 
  4229  048F                     	;# 
  4230  048F                     	;# 
  4231  0490                     	;# 
  4232  0491                     	;# 
  4233  0492                     	;# 
  4234  0492                     	;# 
  4235  0493                     	;# 
  4236  0494                     	;# 
  4237  0495                     	;# 
  4238  0495                     	;# 
  4239  0496                     	;# 
  4240  0497                     	;# 
  4241  0498                     	;# 
  4242  0499                     	;# 
  4243  049A                     	;# 
  4244  049B                     	;# 
  4245  049C                     	;# 
  4246  049D                     	;# 
  4247  050C                     	;# 
  4248  050C                     	;# 
  4249  050D                     	;# 
  4250  050E                     	;# 
  4251  050F                     	;# 
  4252  050F                     	;# 
  4253  0510                     	;# 
  4254  0511                     	;# 
  4255  0512                     	;# 
  4256  0512                     	;# 
  4257  0513                     	;# 
  4258  0514                     	;# 
  4259  0515                     	;# 
  4260  0515                     	;# 
  4261  0516                     	;# 
  4262  0517                     	;# 
  4263  0518                     	;# 
  4264  0519                     	;# 
  4265  051A                     	;# 
  4266  051B                     	;# 
  4267  051C                     	;# 
  4268  051D                     	;# 
  4269  058C                     	;# 
  4270  058C                     	;# 
  4271  058D                     	;# 
  4272  058E                     	;# 
  4273  058F                     	;# 
  4274  058F                     	;# 
  4275  0590                     	;# 
  4276  0591                     	;# 
  4277  0592                     	;# 
  4278  0593                     	;# 
  4279  060C                     	;# 
  4280  060D                     	;# 
  4281  060E                     	;# 
  4282  060F                     	;# 
  4283  0610                     	;# 
  4284  0611                     	;# 
  4285  0612                     	;# 
  4286  0613                     	;# 
  4287  0614                     	;# 
  4288  0616                     	;# 
  4289  0617                     	;# 
  4290  0618                     	;# 
  4291  0619                     	;# 
  4292  061A                     	;# 
  4293  061B                     	;# 
  4294  061C                     	;# 
  4295  061D                     	;# 
  4296  061E                     	;# 
  4297  068C                     	;# 
  4298  068D                     	;# 
  4299  068E                     	;# 
  4300  068F                     	;# 
  4301  0690                     	;# 
  4302  0691                     	;# 
  4303  0692                     	;# 
  4304  0693                     	;# 
  4305  0694                     	;# 
  4306  070C                     	;# 
  4307  070D                     	;# 
  4308  070E                     	;# 
  4309  070F                     	;# 
  4310  0710                     	;# 
  4311  0711                     	;# 
  4312  0712                     	;# 
  4313  0713                     	;# 
  4314  0714                     	;# 
  4315  0716                     	;# 
  4316  0717                     	;# 
  4317  0718                     	;# 
  4318  0719                     	;# 
  4319  071A                     	;# 
  4320  071B                     	;# 
  4321  071C                     	;# 
  4322  071D                     	;# 
  4323  071E                     	;# 
  4324  0796                     	;# 
  4325  0797                     	;# 
  4326  0798                     	;# 
  4327  0799                     	;# 
  4328  079A                     	;# 
  4329  079B                     	;# 
  4330  080C                     	;# 
  4331  080D                     	;# 
  4332  080E                     	;# 
  4333  080F                     	;# 
  4334  0810                     	;# 
  4335  0811                     	;# 
  4336  0812                     	;# 
  4337  0813                     	;# 
  4338  0814                     	;# 
  4339  081A                     	;# 
  4340  081B                     	;# 
  4341  081C                     	;# 
  4342  081D                     	;# 
  4343  081E                     	;# 
  4344  081F                     	;# 
  4345  088C                     	;# 
  4346  088D                     	;# 
  4347  088E                     	;# 
  4348  088F                     	;# 
  4349  0890                     	;# 
  4350  0891                     	;# 
  4351  0892                     	;# 
  4352  0893                     	;# 
  4353  0895                     	;# 
  4354  0896                     	;# 
  4355  0897                     	;# 
  4356  0898                     	;# 
  4357  0899                     	;# 
  4358  089A                     	;# 
  4359  089B                     	;# 
  4360  090C                     	;# 
  4361  090E                     	;# 
  4362  090F                     	;# 
  4363  091F                     	;# 
  4364  091F                     	;# 
  4365  098F                     	;# 
  4366  098F                     	;# 
  4367  0990                     	;# 
  4368  0991                     	;# 
  4369  0992                     	;# 
  4370  0993                     	;# 
  4371  0994                     	;# 
  4372  0995                     	;# 
  4373  0996                     	;# 
  4374  0997                     	;# 
  4375  0E0F                     	;# 
  4376  0E10                     	;# 
  4377  0E11                     	;# 
  4378  0E12                     	;# 
  4379  0E13                     	;# 
  4380  0E14                     	;# 
  4381  0E15                     	;# 
  4382  0E16                     	;# 
  4383  0E17                     	;# 
  4384  0E18                     	;# 
  4385  0E19                     	;# 
  4386  0E1A                     	;# 
  4387  0E1B                     	;# 
  4388  0E1C                     	;# 
  4389  0E1D                     	;# 
  4390  0E1E                     	;# 
  4391  0E1F                     	;# 
  4392  0E20                     	;# 
  4393  0E21                     	;# 
  4394  0E22                     	;# 
  4395  0E23                     	;# 
  4396  0E24                     	;# 
  4397  0E25                     	;# 
  4398  0E26                     	;# 
  4399  0E27                     	;# 
  4400  0E28                     	;# 
  4401  0E29                     	;# 
  4402  0E2A                     	;# 
  4403  0E2B                     	;# 
  4404  0E2C                     	;# 
  4405  0E2D                     	;# 
  4406  0E2E                     	;# 
  4407  0E2F                     	;# 
  4408  0E30                     	;# 
  4409  0E31                     	;# 
  4410  0E32                     	;# 
  4411  0E33                     	;# 
  4412  0E34                     	;# 
  4413  0E35                     	;# 
  4414  0E36                     	;# 
  4415  0E37                     	;# 
  4416  0E8F                     	;# 
  4417  0E90                     	;# 
  4418  0E91                     	;# 
  4419  0E92                     	;# 
  4420  0E93                     	;# 
  4421  0E94                     	;# 
  4422  0E95                     	;# 
  4423  0E96                     	;# 
  4424  0E97                     	;# 
  4425  0E9C                     	;# 
  4426  0E9D                     	;# 
  4427  0E9E                     	;# 
  4428  0EA1                     	;# 
  4429  0EA2                     	;# 
  4430  0EA3                     	;# 
  4431  0EA4                     	;# 
  4432  0EA5                     	;# 
  4433  0EA9                     	;# 
  4434  0EAA                     	;# 
  4435  0EAB                     	;# 
  4436  0EAC                     	;# 
  4437  0EB1                     	;# 
  4438  0EB2                     	;# 
  4439  0EB3                     	;# 
  4440  0EB8                     	;# 
  4441  0EB9                     	;# 
  4442  0EBA                     	;# 
  4443  0EBB                     	;# 
  4444  0EBC                     	;# 
  4445  0EBD                     	;# 
  4446  0EBE                     	;# 
  4447  0EC3                     	;# 
  4448  0EC5                     	;# 
  4449  0EC6                     	;# 
  4450  0EC7                     	;# 
  4451  0EC8                     	;# 
  4452  0EC9                     	;# 
  4453  0ECA                     	;# 
  4454  0ECB                     	;# 
  4455  0ECC                     	;# 
  4456  0F10                     	;# 
  4457  0F11                     	;# 
  4458  0F12                     	;# 
  4459  0F13                     	;# 
  4460  0F14                     	;# 
  4461  0F15                     	;# 
  4462  0F16                     	;# 
  4463  0F17                     	;# 
  4464  0F18                     	;# 
  4465  0F19                     	;# 
  4466  0F1A                     	;# 
  4467  0F1B                     	;# 
  4468  0F1C                     	;# 
  4469  0F1D                     	;# 
  4470  0F1E                     	;# 
  4471  0F1F                     	;# 
  4472  0F20                     	;# 
  4473  0F21                     	;# 
  4474  0F22                     	;# 
  4475  0F23                     	;# 
  4476  0F24                     	;# 
  4477  0F25                     	;# 
  4478  0F26                     	;# 
  4479  0F27                     	;# 
  4480  0F28                     	;# 
  4481  0F29                     	;# 
  4482  0F2A                     	;# 
  4483  0F2B                     	;# 
  4484  0F2C                     	;# 
  4485  0F2D                     	;# 
  4486  0F2E                     	;# 
  4487  0F2F                     	;# 
  4488  0F30                     	;# 
  4489  0F31                     	;# 
  4490  0F32                     	;# 
  4491  0F38                     	;# 
  4492  0F39                     	;# 
  4493  0F3A                     	;# 
  4494  0F3B                     	;# 
  4495  0F3C                     	;# 
  4496  0F3D                     	;# 
  4497  0F3E                     	;# 
  4498  0F3F                     	;# 
  4499  0F40                     	;# 
  4500  0F41                     	;# 
  4501  0F43                     	;# 
  4502  0F44                     	;# 
  4503  0F45                     	;# 
  4504  0F46                     	;# 
  4505  0F47                     	;# 
  4506  0F48                     	;# 
  4507  0F49                     	;# 
  4508  0F4A                     	;# 
  4509  0F4B                     	;# 
  4510  0F4C                     	;# 
  4511  0F4E                     	;# 
  4512  0F4F                     	;# 
  4513  0F50                     	;# 
  4514  0F51                     	;# 
  4515  0F52                     	;# 
  4516  0F53                     	;# 
  4517  0F54                     	;# 
  4518  0F55                     	;# 
  4519  0F56                     	;# 
  4520  0F57                     	;# 
  4521  0F59                     	;# 
  4522  0F5A                     	;# 
  4523  0F5B                     	;# 
  4524  0F5C                     	;# 
  4525  0F5D                     	;# 
  4526  0F61                     	;# 
  4527  0F62                     	;# 
  4528  0F64                     	;# 
  4529  0F65                     	;# 
  4530  0F66                     	;# 
  4531  0F67                     	;# 
  4532  0F68                     	;# 
  4533  0F69                     	;# 
  4534  0F6A                     	;# 
  4535  0F6B                     	;# 
  4536  0F6C                     	;# 
  4537  0F6D                     	;# 
  4538  0FE4                     	;# 
  4539  0FE5                     	;# 
  4540  0FE6                     	;# 
  4541  0FE7                     	;# 
  4542  0FE8                     	;# 
  4543  0FE9                     	;# 
  4544  0FEA                     	;# 
  4545  0FEB                     	;# 
  4546  0FED                     	;# 
  4547  0FEE                     	;# 
  4548  0FEF                     	;# 
  4549  0000                     	;# 
  4550  0001                     	;# 
  4551  0002                     	;# 
  4552  0003                     	;# 
  4553  0004                     	;# 
  4554  0005                     	;# 
  4555  0006                     	;# 
  4556  0007                     	;# 
  4557  0008                     	;# 
  4558  0009                     	;# 
  4559  000A                     	;# 
  4560  000B                     	;# 
  4561  000C                     	;# 
  4562  000D                     	;# 
  4563  000E                     	;# 
  4564  000F                     	;# 
  4565  0010                     	;# 
  4566  0011                     	;# 
  4567  0012                     	;# 
  4568  0013                     	;# 
  4569  0014                     	;# 
  4570  0015                     	;# 
  4571  0016                     	;# 
  4572  0017                     	;# 
  4573  0018                     	;# 
  4574  0019                     	;# 
  4575  001A                     	;# 
  4576  001C                     	;# 
  4577  001C                     	;# 
  4578  001D                     	;# 
  4579  001D                     	;# 
  4580  001E                     	;# 
  4581  001F                     	;# 
  4582  008C                     	;# 
  4583  008C                     	;# 
  4584  008D                     	;# 
  4585  008E                     	;# 
  4586  008E                     	;# 
  4587  008F                     	;# 
  4588  0090                     	;# 
  4589  0090                     	;# 
  4590  0091                     	;# 
  4591  0093                     	;# 
  4592  0094                     	;# 
  4593  0095                     	;# 
  4594  0096                     	;# 
  4595  0097                     	;# 
  4596  0098                     	;# 
  4597  0099                     	;# 
  4598  009A                     	;# 
  4599  009B                     	;# 
  4600  009C                     	;# 
  4601  009D                     	;# 
  4602  009E                     	;# 
  4603  010C                     	;# 
  4604  010D                     	;# 
  4605  010E                     	;# 
  4606  010E                     	;# 
  4607  010F                     	;# 
  4608  0110                     	;# 
  4609  0110                     	;# 
  4610  0111                     	;# 
  4611  0112                     	;# 
  4612  0112                     	;# 
  4613  0113                     	;# 
  4614  0114                     	;# 
  4615  0114                     	;# 
  4616  0115                     	;# 
  4617  0116                     	;# 
  4618  0116                     	;# 
  4619  0117                     	;# 
  4620  0119                     	;# 
  4621  0119                     	;# 
  4622  0119                     	;# 
  4623  011A                     	;# 
  4624  011A                     	;# 
  4625  011A                     	;# 
  4626  011B                     	;# 
  4627  011B                     	;# 
  4628  011B                     	;# 
  4629  011B                     	;# 
  4630  011B                     	;# 
  4631  011C                     	;# 
  4632  011C                     	;# 
  4633  011C                     	;# 
  4634  011D                     	;# 
  4635  011D                     	;# 
  4636  011D                     	;# 
  4637  011E                     	;# 
  4638  011E                     	;# 
  4639  011E                     	;# 
  4640  011F                     	;# 
  4641  011F                     	;# 
  4642  011F                     	;# 
  4643  011F                     	;# 
  4644  011F                     	;# 
  4645  018C                     	;# 
  4646  018D                     	;# 
  4647  018E                     	;# 
  4648  018F                     	;# 
  4649  0190                     	;# 
  4650  0191                     	;# 
  4651  0192                     	;# 
  4652  0196                     	;# 
  4653  0197                     	;# 
  4654  0198                     	;# 
  4655  0199                     	;# 
  4656  019A                     	;# 
  4657  019B                     	;# 
  4658  019C                     	;# 
  4659  020C                     	;# 
  4660  020C                     	;# 
  4661  020D                     	;# 
  4662  020E                     	;# 
  4663  020F                     	;# 
  4664  020F                     	;# 
  4665  0210                     	;# 
  4666  0210                     	;# 
  4667  0211                     	;# 
  4668  0211                     	;# 
  4669  0212                     	;# 
  4670  0212                     	;# 
  4671  0213                     	;# 
  4672  0214                     	;# 
  4673  0215                     	;# 
  4674  0215                     	;# 
  4675  0216                     	;# 
  4676  0216                     	;# 
  4677  0217                     	;# 
  4678  0217                     	;# 
  4679  0218                     	;# 
  4680  0218                     	;# 
  4681  0219                     	;# 
  4682  021A                     	;# 
  4683  021B                     	;# 
  4684  021B                     	;# 
  4685  021C                     	;# 
  4686  021C                     	;# 
  4687  021D                     	;# 
  4688  021D                     	;# 
  4689  021E                     	;# 
  4690  021F                     	;# 
  4691  028C                     	;# 
  4692  028C                     	;# 
  4693  028D                     	;# 
  4694  028D                     	;# 
  4695  028E                     	;# 
  4696  028F                     	;# 
  4697  0290                     	;# 
  4698  0290                     	;# 
  4699  0291                     	;# 
  4700  0292                     	;# 
  4701  0292                     	;# 
  4702  0293                     	;# 
  4703  0293                     	;# 
  4704  0294                     	;# 
  4705  0295                     	;# 
  4706  0296                     	;# 
  4707  0296                     	;# 
  4708  0297                     	;# 
  4709  0298                     	;# 
  4710  0298                     	;# 
  4711  0299                     	;# 
  4712  0299                     	;# 
  4713  029A                     	;# 
  4714  029B                     	;# 
  4715  029C                     	;# 
  4716  029C                     	;# 
  4717  029D                     	;# 
  4718  030C                     	;# 
  4719  030C                     	;# 
  4720  030D                     	;# 
  4721  030E                     	;# 
  4722  030F                     	;# 
  4723  0310                     	;# 
  4724  0310                     	;# 
  4725  0311                     	;# 
  4726  0312                     	;# 
  4727  0313                     	;# 
  4728  0314                     	;# 
  4729  0314                     	;# 
  4730  0315                     	;# 
  4731  0316                     	;# 
  4732  0317                     	;# 
  4733  0318                     	;# 
  4734  0318                     	;# 
  4735  0319                     	;# 
  4736  031A                     	;# 
  4737  031B                     	;# 
  4738  031C                     	;# 
  4739  031C                     	;# 
  4740  031D                     	;# 
  4741  031E                     	;# 
  4742  031F                     	;# 
  4743  038C                     	;# 
  4744  038C                     	;# 
  4745  038D                     	;# 
  4746  038E                     	;# 
  4747  0390                     	;# 
  4748  0390                     	;# 
  4749  0391                     	;# 
  4750  0392                     	;# 
  4751  040C                     	;# 
  4752  040D                     	;# 
  4753  040E                     	;# 
  4754  040F                     	;# 
  4755  0410                     	;# 
  4756  0411                     	;# 
  4757  0416                     	;# 
  4758  0416                     	;# 
  4759  0417                     	;# 
  4760  0418                     	;# 
  4761  0418                     	;# 
  4762  0419                     	;# 
  4763  041A                     	;# 
  4764  041A                     	;# 
  4765  041B                     	;# 
  4766  041C                     	;# 
  4767  041C                     	;# 
  4768  041D                     	;# 
  4769  041E                     	;# 
  4770  041F                     	;# 
  4771  048C                     	;# 
  4772  048C                     	;# 
  4773  048D                     	;# 
  4774  048E                     	;# 
  4775  048F                     	;# 
  4776  048F                     	;# 
  4777  0490                     	;# 
  4778  0491                     	;# 
  4779  0492                     	;# 
  4780  0492                     	;# 
  4781  0493                     	;# 
  4782  0494                     	;# 
  4783  0495                     	;# 
  4784  0495                     	;# 
  4785  0496                     	;# 
  4786  0497                     	;# 
  4787  0498                     	;# 
  4788  0499                     	;# 
  4789  049A                     	;# 
  4790  049B                     	;# 
  4791  049C                     	;# 
  4792  049D                     	;# 
  4793  050C                     	;# 
  4794  050C                     	;# 
  4795  050D                     	;# 
  4796  050E                     	;# 
  4797  050F                     	;# 
  4798  050F                     	;# 
  4799  0510                     	;# 
  4800  0511                     	;# 
  4801  0512                     	;# 
  4802  0512                     	;# 
  4803  0513                     	;# 
  4804  0514                     	;# 
  4805  0515                     	;# 
  4806  0515                     	;# 
  4807  0516                     	;# 
  4808  0517                     	;# 
  4809  0518                     	;# 
  4810  0519                     	;# 
  4811  051A                     	;# 
  4812  051B                     	;# 
  4813  051C                     	;# 
  4814  051D                     	;# 
  4815  058C                     	;# 
  4816  058C                     	;# 
  4817  058D                     	;# 
  4818  058E                     	;# 
  4819  058F                     	;# 
  4820  058F                     	;# 
  4821  0590                     	;# 
  4822  0591                     	;# 
  4823  0592                     	;# 
  4824  0593                     	;# 
  4825  060C                     	;# 
  4826  060D                     	;# 
  4827  060E                     	;# 
  4828  060F                     	;# 
  4829  0610                     	;# 
  4830  0611                     	;# 
  4831  0612                     	;# 
  4832  0613                     	;# 
  4833  0614                     	;# 
  4834  0616                     	;# 
  4835  0617                     	;# 
  4836  0618                     	;# 
  4837  0619                     	;# 
  4838  061A                     	;# 
  4839  061B                     	;# 
  4840  061C                     	;# 
  4841  061D                     	;# 
  4842  061E                     	;# 
  4843  068C                     	;# 
  4844  068D                     	;# 
  4845  068E                     	;# 
  4846  068F                     	;# 
  4847  0690                     	;# 
  4848  0691                     	;# 
  4849  0692                     	;# 
  4850  0693                     	;# 
  4851  0694                     	;# 
  4852  070C                     	;# 
  4853  070D                     	;# 
  4854  070E                     	;# 
  4855  070F                     	;# 
  4856  0710                     	;# 
  4857  0711                     	;# 
  4858  0712                     	;# 
  4859  0713                     	;# 
  4860  0714                     	;# 
  4861  0716                     	;# 
  4862  0717                     	;# 
  4863  0718                     	;# 
  4864  0719                     	;# 
  4865  071A                     	;# 
  4866  071B                     	;# 
  4867  071C                     	;# 
  4868  071D                     	;# 
  4869  071E                     	;# 
  4870  0796                     	;# 
  4871  0797                     	;# 
  4872  0798                     	;# 
  4873  0799                     	;# 
  4874  079A                     	;# 
  4875  079B                     	;# 
  4876  080C                     	;# 
  4877  080D                     	;# 
  4878  080E                     	;# 
  4879  080F                     	;# 
  4880  0810                     	;# 
  4881  0811                     	;# 
  4882  0812                     	;# 
  4883  0813                     	;# 
  4884  0814                     	;# 
  4885  081A                     	;# 
  4886  081B                     	;# 
  4887  081C                     	;# 
  4888  081D                     	;# 
  4889  081E                     	;# 
  4890  081F                     	;# 
  4891  088C                     	;# 
  4892  088D                     	;# 
  4893  088E                     	;# 
  4894  088F                     	;# 
  4895  0890                     	;# 
  4896  0891                     	;# 
  4897  0892                     	;# 
  4898  0893                     	;# 
  4899  0895                     	;# 
  4900  0896                     	;# 
  4901  0897                     	;# 
  4902  0898                     	;# 
  4903  0899                     	;# 
  4904  089A                     	;# 
  4905  089B                     	;# 
  4906  090C                     	;# 
  4907  090E                     	;# 
  4908  090F                     	;# 
  4909  091F                     	;# 
  4910  091F                     	;# 
  4911  098F                     	;# 
  4912  098F                     	;# 
  4913  0990                     	;# 
  4914  0991                     	;# 
  4915  0992                     	;# 
  4916  0993                     	;# 
  4917  0994                     	;# 
  4918  0995                     	;# 
  4919  0996                     	;# 
  4920  0997                     	;# 
  4921  0E0F                     	;# 
  4922  0E10                     	;# 
  4923  0E11                     	;# 
  4924  0E12                     	;# 
  4925  0E13                     	;# 
  4926  0E14                     	;# 
  4927  0E15                     	;# 
  4928  0E16                     	;# 
  4929  0E17                     	;# 
  4930  0E18                     	;# 
  4931  0E19                     	;# 
  4932  0E1A                     	;# 
  4933  0E1B                     	;# 
  4934  0E1C                     	;# 
  4935  0E1D                     	;# 
  4936  0E1E                     	;# 
  4937  0E1F                     	;# 
  4938  0E20                     	;# 
  4939  0E21                     	;# 
  4940  0E22                     	;# 
  4941  0E23                     	;# 
  4942  0E24                     	;# 
  4943  0E25                     	;# 
  4944  0E26                     	;# 
  4945  0E27                     	;# 
  4946  0E28                     	;# 
  4947  0E29                     	;# 
  4948  0E2A                     	;# 
  4949  0E2B                     	;# 
  4950  0E2C                     	;# 
  4951  0E2D                     	;# 
  4952  0E2E                     	;# 
  4953  0E2F                     	;# 
  4954  0E30                     	;# 
  4955  0E31                     	;# 
  4956  0E32                     	;# 
  4957  0E33                     	;# 
  4958  0E34                     	;# 
  4959  0E35                     	;# 
  4960  0E36                     	;# 
  4961  0E37                     	;# 
  4962  0E8F                     	;# 
  4963  0E90                     	;# 
  4964  0E91                     	;# 
  4965  0E92                     	;# 
  4966  0E93                     	;# 
  4967  0E94                     	;# 
  4968  0E95                     	;# 
  4969  0E96                     	;# 
  4970  0E97                     	;# 
  4971  0E9C                     	;# 
  4972  0E9D                     	;# 
  4973  0E9E                     	;# 
  4974  0EA1                     	;# 
  4975  0EA2                     	;# 
  4976  0EA3                     	;# 
  4977  0EA4                     	;# 
  4978  0EA5                     	;# 
  4979  0EA9                     	;# 
  4980  0EAA                     	;# 
  4981  0EAB                     	;# 
  4982  0EAC                     	;# 
  4983  0EB1                     	;# 
  4984  0EB2                     	;# 
  4985  0EB3                     	;# 
  4986  0EB8                     	;# 
  4987  0EB9                     	;# 
  4988  0EBA                     	;# 
  4989  0EBB                     	;# 
  4990  0EBC                     	;# 
  4991  0EBD                     	;# 
  4992  0EBE                     	;# 
  4993  0EC3                     	;# 
  4994  0EC5                     	;# 
  4995  0EC6                     	;# 
  4996  0EC7                     	;# 
  4997  0EC8                     	;# 
  4998  0EC9                     	;# 
  4999  0ECA                     	;# 
  5000  0ECB                     	;# 
  5001  0ECC                     	;# 
  5002  0F10                     	;# 
  5003  0F11                     	;# 
  5004  0F12                     	;# 
  5005  0F13                     	;# 
  5006  0F14                     	;# 
  5007  0F15                     	;# 
  5008  0F16                     	;# 
  5009  0F17                     	;# 
  5010  0F18                     	;# 
  5011  0F19                     	;# 
  5012  0F1A                     	;# 
  5013  0F1B                     	;# 
  5014  0F1C                     	;# 
  5015  0F1D                     	;# 
  5016  0F1E                     	;# 
  5017  0F1F                     	;# 
  5018  0F20                     	;# 
  5019  0F21                     	;# 
  5020  0F22                     	;# 
  5021  0F23                     	;# 
  5022  0F24                     	;# 
  5023  0F25                     	;# 
  5024  0F26                     	;# 
  5025  0F27                     	;# 
  5026  0F28                     	;# 
  5027  0F29                     	;# 
  5028  0F2A                     	;# 
  5029  0F2B                     	;# 
  5030  0F2C                     	;# 
  5031  0F2D                     	;# 
  5032  0F2E                     	;# 
  5033  0F2F                     	;# 
  5034  0F30                     	;# 
  5035  0F31                     	;# 
  5036  0F32                     	;# 
  5037  0F38                     	;# 
  5038  0F39                     	;# 
  5039  0F3A                     	;# 
  5040  0F3B                     	;# 
  5041  0F3C                     	;# 
  5042  0F3D                     	;# 
  5043  0F3E                     	;# 
  5044  0F3F                     	;# 
  5045  0F40                     	;# 
  5046  0F41                     	;# 
  5047  0F43                     	;# 
  5048  0F44                     	;# 
  5049  0F45                     	;# 
  5050  0F46                     	;# 
  5051  0F47                     	;# 
  5052  0F48                     	;# 
  5053  0F49                     	;# 
  5054  0F4A                     	;# 
  5055  0F4B                     	;# 
  5056  0F4C                     	;# 
  5057  0F4E                     	;# 
  5058  0F4F                     	;# 
  5059  0F50                     	;# 
  5060  0F51                     	;# 
  5061  0F52                     	;# 
  5062  0F53                     	;# 
  5063  0F54                     	;# 
  5064  0F55                     	;# 
  5065  0F56                     	;# 
  5066  0F57                     	;# 
  5067  0F59                     	;# 
  5068  0F5A                     	;# 
  5069  0F5B                     	;# 
  5070  0F5C                     	;# 
  5071  0F5D                     	;# 
  5072  0F61                     	;# 
  5073  0F62                     	;# 
  5074  0F64                     	;# 
  5075  0F65                     	;# 
  5076  0F66                     	;# 
  5077  0F67                     	;# 
  5078  0F68                     	;# 
  5079  0F69                     	;# 
  5080  0F6A                     	;# 
  5081  0F6B                     	;# 
  5082  0F6C                     	;# 
  5083  0F6D                     	;# 
  5084  0FE4                     	;# 
  5085  0FE5                     	;# 
  5086  0FE6                     	;# 
  5087  0FE7                     	;# 
  5088  0FE8                     	;# 
  5089  0FE9                     	;# 
  5090  0FEA                     	;# 
  5091  0FEB                     	;# 
  5092  0FED                     	;# 
  5093  0FEE                     	;# 
  5094  0FEF                     	;# 
  5095  0000                     	;# 
  5096  0001                     	;# 
  5097  0002                     	;# 
  5098  0003                     	;# 
  5099  0004                     	;# 
  5100  0005                     	;# 
  5101  0006                     	;# 
  5102  0007                     	;# 
  5103  0008                     	;# 
  5104  0009                     	;# 
  5105  000A                     	;# 
  5106  000B                     	;# 
  5107  000C                     	;# 
  5108  000D                     	;# 
  5109  000E                     	;# 
  5110  000F                     	;# 
  5111  0010                     	;# 
  5112  0011                     	;# 
  5113  0012                     	;# 
  5114  0013                     	;# 
  5115  0014                     	;# 
  5116  0015                     	;# 
  5117  0016                     	;# 
  5118  0017                     	;# 
  5119  0018                     	;# 
  5120  0019                     	;# 
  5121  001A                     	;# 
  5122  001C                     	;# 
  5123  001C                     	;# 
  5124  001D                     	;# 
  5125  001D                     	;# 
  5126  001E                     	;# 
  5127  001F                     	;# 
  5128  008C                     	;# 
  5129  008C                     	;# 
  5130  008D                     	;# 
  5131  008E                     	;# 
  5132  008E                     	;# 
  5133  008F                     	;# 
  5134  0090                     	;# 
  5135  0090                     	;# 
  5136  0091                     	;# 
  5137  0093                     	;# 
  5138  0094                     	;# 
  5139  0095                     	;# 
  5140  0096                     	;# 
  5141  0097                     	;# 
  5142  0098                     	;# 
  5143  0099                     	;# 
  5144  009A                     	;# 
  5145  009B                     	;# 
  5146  009C                     	;# 
  5147  009D                     	;# 
  5148  009E                     	;# 
  5149  010C                     	;# 
  5150  010D                     	;# 
  5151  010E                     	;# 
  5152  010E                     	;# 
  5153  010F                     	;# 
  5154  0110                     	;# 
  5155  0110                     	;# 
  5156  0111                     	;# 
  5157  0112                     	;# 
  5158  0112                     	;# 
  5159  0113                     	;# 
  5160  0114                     	;# 
  5161  0114                     	;# 
  5162  0115                     	;# 
  5163  0116                     	;# 
  5164  0116                     	;# 
  5165  0117                     	;# 
  5166  0119                     	;# 
  5167  0119                     	;# 
  5168  0119                     	;# 
  5169  011A                     	;# 
  5170  011A                     	;# 
  5171  011A                     	;# 
  5172  011B                     	;# 
  5173  011B                     	;# 
  5174  011B                     	;# 
  5175  011B                     	;# 
  5176  011B                     	;# 
  5177  011C                     	;# 
  5178  011C                     	;# 
  5179  011C                     	;# 
  5180  011D                     	;# 
  5181  011D                     	;# 
  5182  011D                     	;# 
  5183  011E                     	;# 
  5184  011E                     	;# 
  5185  011E                     	;# 
  5186  011F                     	;# 
  5187  011F                     	;# 
  5188  011F                     	;# 
  5189  011F                     	;# 
  5190  011F                     	;# 
  5191  018C                     	;# 
  5192  018D                     	;# 
  5193  018E                     	;# 
  5194  018F                     	;# 
  5195  0190                     	;# 
  5196  0191                     	;# 
  5197  0192                     	;# 
  5198  0196                     	;# 
  5199  0197                     	;# 
  5200  0198                     	;# 
  5201  0199                     	;# 
  5202  019A                     	;# 
  5203  019B                     	;# 
  5204  019C                     	;# 
  5205  020C                     	;# 
  5206  020C                     	;# 
  5207  020D                     	;# 
  5208  020E                     	;# 
  5209  020F                     	;# 
  5210  020F                     	;# 
  5211  0210                     	;# 
  5212  0210                     	;# 
  5213  0211                     	;# 
  5214  0211                     	;# 
  5215  0212                     	;# 
  5216  0212                     	;# 
  5217  0213                     	;# 
  5218  0214                     	;# 
  5219  0215                     	;# 
  5220  0215                     	;# 
  5221  0216                     	;# 
  5222  0216                     	;# 
  5223  0217                     	;# 
  5224  0217                     	;# 
  5225  0218                     	;# 
  5226  0218                     	;# 
  5227  0219                     	;# 
  5228  021A                     	;# 
  5229  021B                     	;# 
  5230  021B                     	;# 
  5231  021C                     	;# 
  5232  021C                     	;# 
  5233  021D                     	;# 
  5234  021D                     	;# 
  5235  021E                     	;# 
  5236  021F                     	;# 
  5237  028C                     	;# 
  5238  028C                     	;# 
  5239  028D                     	;# 
  5240  028D                     	;# 
  5241  028E                     	;# 
  5242  028F                     	;# 
  5243  0290                     	;# 
  5244  0290                     	;# 
  5245  0291                     	;# 
  5246  0292                     	;# 
  5247  0292                     	;# 
  5248  0293                     	;# 
  5249  0293                     	;# 
  5250  0294                     	;# 
  5251  0295                     	;# 
  5252  0296                     	;# 
  5253  0296                     	;# 
  5254  0297                     	;# 
  5255  0298                     	;# 
  5256  0298                     	;# 
  5257  0299                     	;# 
  5258  0299                     	;# 
  5259  029A                     	;# 
  5260  029B                     	;# 
  5261  029C                     	;# 
  5262  029C                     	;# 
  5263  029D                     	;# 
  5264  030C                     	;# 
  5265  030C                     	;# 
  5266  030D                     	;# 
  5267  030E                     	;# 
  5268  030F                     	;# 
  5269  0310                     	;# 
  5270  0310                     	;# 
  5271  0311                     	;# 
  5272  0312                     	;# 
  5273  0313                     	;# 
  5274  0314                     	;# 
  5275  0314                     	;# 
  5276  0315                     	;# 
  5277  0316                     	;# 
  5278  0317                     	;# 
  5279  0318                     	;# 
  5280  0318                     	;# 
  5281  0319                     	;# 
  5282  031A                     	;# 
  5283  031B                     	;# 
  5284  031C                     	;# 
  5285  031C                     	;# 
  5286  031D                     	;# 
  5287  031E                     	;# 
  5288  031F                     	;# 
  5289  038C                     	;# 
  5290  038C                     	;# 
  5291  038D                     	;# 
  5292  038E                     	;# 
  5293  0390                     	;# 
  5294  0390                     	;# 
  5295  0391                     	;# 
  5296  0392                     	;# 
  5297  040C                     	;# 
  5298  040D                     	;# 
  5299  040E                     	;# 
  5300  040F                     	;# 
  5301  0410                     	;# 
  5302  0411                     	;# 
  5303  0416                     	;# 
  5304  0416                     	;# 
  5305  0417                     	;# 
  5306  0418                     	;# 
  5307  0418                     	;# 
  5308  0419                     	;# 
  5309  041A                     	;# 
  5310  041A                     	;# 
  5311  041B                     	;# 
  5312  041C                     	;# 
  5313  041C                     	;# 
  5314  041D                     	;# 
  5315  041E                     	;# 
  5316  041F                     	;# 
  5317  048C                     	;# 
  5318  048C                     	;# 
  5319  048D                     	;# 
  5320  048E                     	;# 
  5321  048F                     	;# 
  5322  048F                     	;# 
  5323  0490                     	;# 
  5324  0491                     	;# 
  5325  0492                     	;# 
  5326  0492                     	;# 
  5327  0493                     	;# 
  5328  0494                     	;# 
  5329  0495                     	;# 
  5330  0495                     	;# 
  5331  0496                     	;# 
  5332  0497                     	;# 
  5333  0498                     	;# 
  5334  0499                     	;# 
  5335  049A                     	;# 
  5336  049B                     	;# 
  5337  049C                     	;# 
  5338  049D                     	;# 
  5339  050C                     	;# 
  5340  050C                     	;# 
  5341  050D                     	;# 
  5342  050E                     	;# 
  5343  050F                     	;# 
  5344  050F                     	;# 
  5345  0510                     	;# 
  5346  0511                     	;# 
  5347  0512                     	;# 
  5348  0512                     	;# 
  5349  0513                     	;# 
  5350  0514                     	;# 
  5351  0515                     	;# 
  5352  0515                     	;# 
  5353  0516                     	;# 
  5354  0517                     	;# 
  5355  0518                     	;# 
  5356  0519                     	;# 
  5357  051A                     	;# 
  5358  051B                     	;# 
  5359  051C                     	;# 
  5360  051D                     	;# 
  5361  058C                     	;# 
  5362  058C                     	;# 
  5363  058D                     	;# 
  5364  058E                     	;# 
  5365  058F                     	;# 
  5366  058F                     	;# 
  5367  0590                     	;# 
  5368  0591                     	;# 
  5369  0592                     	;# 
  5370  0593                     	;# 
  5371  060C                     	;# 
  5372  060D                     	;# 
  5373  060E                     	;# 
  5374  060F                     	;# 
  5375  0610                     	;# 
  5376  0611                     	;# 
  5377  0612                     	;# 
  5378  0613                     	;# 
  5379  0614                     	;# 
  5380  0616                     	;# 
  5381  0617                     	;# 
  5382  0618                     	;# 
  5383  0619                     	;# 
  5384  061A                     	;# 
  5385  061B                     	;# 
  5386  061C                     	;# 
  5387  061D                     	;# 
  5388  061E                     	;# 
  5389  068C                     	;# 
  5390  068D                     	;# 
  5391  068E                     	;# 
  5392  068F                     	;# 
  5393  0690                     	;# 
  5394  0691                     	;# 
  5395  0692                     	;# 
  5396  0693                     	;# 
  5397  0694                     	;# 
  5398  070C                     	;# 
  5399  070D                     	;# 
  5400  070E                     	;# 
  5401  070F                     	;# 
  5402  0710                     	;# 
  5403  0711                     	;# 
  5404  0712                     	;# 
  5405  0713                     	;# 
  5406  0714                     	;# 
  5407  0716                     	;# 
  5408  0717                     	;# 
  5409  0718                     	;# 
  5410  0719                     	;# 
  5411  071A                     	;# 
  5412  071B                     	;# 
  5413  071C                     	;# 
  5414  071D                     	;# 
  5415  071E                     	;# 
  5416  0796                     	;# 
  5417  0797                     	;# 
  5418  0798                     	;# 
  5419  0799                     	;# 
  5420  079A                     	;# 
  5421  079B                     	;# 
  5422  080C                     	;# 
  5423  080D                     	;# 
  5424  080E                     	;# 
  5425  080F                     	;# 
  5426  0810                     	;# 
  5427  0811                     	;# 
  5428  0812                     	;# 
  5429  0813                     	;# 
  5430  0814                     	;# 
  5431  081A                     	;# 
  5432  081B                     	;# 
  5433  081C                     	;# 
  5434  081D                     	;# 
  5435  081E                     	;# 
  5436  081F                     	;# 
  5437  088C                     	;# 
  5438  088D                     	;# 
  5439  088E                     	;# 
  5440  088F                     	;# 
  5441  0890                     	;# 
  5442  0891                     	;# 
  5443  0892                     	;# 
  5444  0893                     	;# 
  5445  0895                     	;# 
  5446  0896                     	;# 
  5447  0897                     	;# 
  5448  0898                     	;# 
  5449  0899                     	;# 
  5450  089A                     	;# 
  5451  089B                     	;# 
  5452  090C                     	;# 
  5453  090E                     	;# 
  5454  090F                     	;# 
  5455  091F                     	;# 
  5456  091F                     	;# 
  5457  098F                     	;# 
  5458  098F                     	;# 
  5459  0990                     	;# 
  5460  0991                     	;# 
  5461  0992                     	;# 
  5462  0993                     	;# 
  5463  0994                     	;# 
  5464  0995                     	;# 
  5465  0996                     	;# 
  5466  0997                     	;# 
  5467  0E0F                     	;# 
  5468  0E10                     	;# 
  5469  0E11                     	;# 
  5470  0E12                     	;# 
  5471  0E13                     	;# 
  5472  0E14                     	;# 
  5473  0E15                     	;# 
  5474  0E16                     	;# 
  5475  0E17                     	;# 
  5476  0E18                     	;# 
  5477  0E19                     	;# 
  5478  0E1A                     	;# 
  5479  0E1B                     	;# 
  5480  0E1C                     	;# 
  5481  0E1D                     	;# 
  5482  0E1E                     	;# 
  5483  0E1F                     	;# 
  5484  0E20                     	;# 
  5485  0E21                     	;# 
  5486  0E22                     	;# 
  5487  0E23                     	;# 
  5488  0E24                     	;# 
  5489  0E25                     	;# 
  5490  0E26                     	;# 
  5491  0E27                     	;# 
  5492  0E28                     	;# 
  5493  0E29                     	;# 
  5494  0E2A                     	;# 
  5495  0E2B                     	;# 
  5496  0E2C                     	;# 
  5497  0E2D                     	;# 
  5498  0E2E                     	;# 
  5499  0E2F                     	;# 
  5500  0E30                     	;# 
  5501  0E31                     	;# 
  5502  0E32                     	;# 
  5503  0E33                     	;# 
  5504  0E34                     	;# 
  5505  0E35                     	;# 
  5506  0E36                     	;# 
  5507  0E37                     	;# 
  5508  0E8F                     	;# 
  5509  0E90                     	;# 
  5510  0E91                     	;# 
  5511  0E92                     	;# 
  5512  0E93                     	;# 
  5513  0E94                     	;# 
  5514  0E95                     	;# 
  5515  0E96                     	;# 
  5516  0E97                     	;# 
  5517  0E9C                     	;# 
  5518  0E9D                     	;# 
  5519  0E9E                     	;# 
  5520  0EA1                     	;# 
  5521  0EA2                     	;# 
  5522  0EA3                     	;# 
  5523  0EA4                     	;# 
  5524  0EA5                     	;# 
  5525  0EA9                     	;# 
  5526  0EAA                     	;# 
  5527  0EAB                     	;# 
  5528  0EAC                     	;# 
  5529  0EB1                     	;# 
  5530  0EB2                     	;# 
  5531  0EB3                     	;# 
  5532  0EB8                     	;# 
  5533  0EB9                     	;# 
  5534  0EBA                     	;# 
  5535  0EBB                     	;# 
  5536  0EBC                     	;# 
  5537  0EBD                     	;# 
  5538  0EBE                     	;# 
  5539  0EC3                     	;# 
  5540  0EC5                     	;# 
  5541  0EC6                     	;# 
  5542  0EC7                     	;# 
  5543  0EC8                     	;# 
  5544  0EC9                     	;# 
  5545  0ECA                     	;# 
  5546  0ECB                     	;# 
  5547  0ECC                     	;# 
  5548  0F10                     	;# 
  5549  0F11                     	;# 
  5550  0F12                     	;# 
  5551  0F13                     	;# 
  5552  0F14                     	;# 
  5553  0F15                     	;# 
  5554  0F16                     	;# 
  5555  0F17                     	;# 
  5556  0F18                     	;# 
  5557  0F19                     	;# 
  5558  0F1A                     	;# 
  5559  0F1B                     	;# 
  5560  0F1C                     	;# 
  5561  0F1D                     	;# 
  5562  0F1E                     	;# 
  5563  0F1F                     	;# 
  5564  0F20                     	;# 
  5565  0F21                     	;# 
  5566  0F22                     	;# 
  5567  0F23                     	;# 
  5568  0F24                     	;# 
  5569  0F25                     	;# 
  5570  0F26                     	;# 
  5571  0F27                     	;# 
  5572  0F28                     	;# 
  5573  0F29                     	;# 
  5574  0F2A                     	;# 
  5575  0F2B                     	;# 
  5576  0F2C                     	;# 
  5577  0F2D                     	;# 
  5578  0F2E                     	;# 
  5579  0F2F                     	;# 
  5580  0F30                     	;# 
  5581  0F31                     	;# 
  5582  0F32                     	;# 
  5583  0F38                     	;# 
  5584  0F39                     	;# 
  5585  0F3A                     	;# 
  5586  0F3B                     	;# 
  5587  0F3C                     	;# 
  5588  0F3D                     	;# 
  5589  0F3E                     	;# 
  5590  0F3F                     	;# 
  5591  0F40                     	;# 
  5592  0F41                     	;# 
  5593  0F43                     	;# 
  5594  0F44                     	;# 
  5595  0F45                     	;# 
  5596  0F46                     	;# 
  5597  0F47                     	;# 
  5598  0F48                     	;# 
  5599  0F49                     	;# 
  5600  0F4A                     	;# 
  5601  0F4B                     	;# 
  5602  0F4C                     	;# 
  5603  0F4E                     	;# 
  5604  0F4F                     	;# 
  5605  0F50                     	;# 
  5606  0F51                     	;# 
  5607  0F52                     	;# 
  5608  0F53                     	;# 
  5609  0F54                     	;# 
  5610  0F55                     	;# 
  5611  0F56                     	;# 
  5612  0F57                     	;# 
  5613  0F59                     	;# 
  5614  0F5A                     	;# 
  5615  0F5B                     	;# 
  5616  0F5C                     	;# 
  5617  0F5D                     	;# 
  5618  0F61                     	;# 
  5619  0F62                     	;# 
  5620  0F64                     	;# 
  5621  0F65                     	;# 
  5622  0F66                     	;# 
  5623  0F67                     	;# 
  5624  0F68                     	;# 
  5625  0F69                     	;# 
  5626  0F6A                     	;# 
  5627  0F6B                     	;# 
  5628  0F6C                     	;# 
  5629  0F6D                     	;# 
  5630  0FE4                     	;# 
  5631  0FE5                     	;# 
  5632  0FE6                     	;# 
  5633  0FE7                     	;# 
  5634  0FE8                     	;# 
  5635  0FE9                     	;# 
  5636  0FEA                     	;# 
  5637  0FEB                     	;# 
  5638  0FED                     	;# 
  5639  0FEE                     	;# 
  5640  0FEF                     	;# 
  5641  0000                     	;# 
  5642  0001                     	;# 
  5643  0002                     	;# 
  5644  0003                     	;# 
  5645  0004                     	;# 
  5646  0005                     	;# 
  5647  0006                     	;# 
  5648  0007                     	;# 
  5649  0008                     	;# 
  5650  0009                     	;# 
  5651  000A                     	;# 
  5652  000B                     	;# 
  5653  000C                     	;# 
  5654  000D                     	;# 
  5655  000E                     	;# 
  5656  000F                     	;# 
  5657  0010                     	;# 
  5658  0011                     	;# 
  5659  0012                     	;# 
  5660  0013                     	;# 
  5661  0014                     	;# 
  5662  0015                     	;# 
  5663  0016                     	;# 
  5664  0017                     	;# 
  5665  0018                     	;# 
  5666  0019                     	;# 
  5667  001A                     	;# 
  5668  001C                     	;# 
  5669  001C                     	;# 
  5670  001D                     	;# 
  5671  001D                     	;# 
  5672  001E                     	;# 
  5673  001F                     	;# 
  5674  008C                     	;# 
  5675  008C                     	;# 
  5676  008D                     	;# 
  5677  008E                     	;# 
  5678  008E                     	;# 
  5679  008F                     	;# 
  5680  0090                     	;# 
  5681  0090                     	;# 
  5682  0091                     	;# 
  5683  0093                     	;# 
  5684  0094                     	;# 
  5685  0095                     	;# 
  5686  0096                     	;# 
  5687  0097                     	;# 
  5688  0098                     	;# 
  5689  0099                     	;# 
  5690  009A                     	;# 
  5691  009B                     	;# 
  5692  009C                     	;# 
  5693  009D                     	;# 
  5694  009E                     	;# 
  5695  010C                     	;# 
  5696  010D                     	;# 
  5697  010E                     	;# 
  5698  010E                     	;# 
  5699  010F                     	;# 
  5700  0110                     	;# 
  5701  0110                     	;# 
  5702  0111                     	;# 
  5703  0112                     	;# 
  5704  0112                     	;# 
  5705  0113                     	;# 
  5706  0114                     	;# 
  5707  0114                     	;# 
  5708  0115                     	;# 
  5709  0116                     	;# 
  5710  0116                     	;# 
  5711  0117                     	;# 
  5712  0119                     	;# 
  5713  0119                     	;# 
  5714  0119                     	;# 
  5715  011A                     	;# 
  5716  011A                     	;# 
  5717  011A                     	;# 
  5718  011B                     	;# 
  5719  011B                     	;# 
  5720  011B                     	;# 
  5721  011B                     	;# 
  5722  011B                     	;# 
  5723  011C                     	;# 
  5724  011C                     	;# 
  5725  011C                     	;# 
  5726  011D                     	;# 
  5727  011D                     	;# 
  5728  011D                     	;# 
  5729  011E                     	;# 
  5730  011E                     	;# 
  5731  011E                     	;# 
  5732  011F                     	;# 
  5733  011F                     	;# 
  5734  011F                     	;# 
  5735  011F                     	;# 
  5736  011F                     	;# 
  5737  018C                     	;# 
  5738  018D                     	;# 
  5739  018E                     	;# 
  5740  018F                     	;# 
  5741  0190                     	;# 
  5742  0191                     	;# 
  5743  0192                     	;# 
  5744  0196                     	;# 
  5745  0197                     	;# 
  5746  0198                     	;# 
  5747  0199                     	;# 
  5748  019A                     	;# 
  5749  019B                     	;# 
  5750  019C                     	;# 
  5751  020C                     	;# 
  5752  020C                     	;# 
  5753  020D                     	;# 
  5754  020E                     	;# 
  5755  020F                     	;# 
  5756  020F                     	;# 
  5757  0210                     	;# 
  5758  0210                     	;# 
  5759  0211                     	;# 
  5760  0211                     	;# 
  5761  0212                     	;# 
  5762  0212                     	;# 
  5763  0213                     	;# 
  5764  0214                     	;# 
  5765  0215                     	;# 
  5766  0215                     	;# 
  5767  0216                     	;# 
  5768  0216                     	;# 
  5769  0217                     	;# 
  5770  0217                     	;# 
  5771  0218                     	;# 
  5772  0218                     	;# 
  5773  0219                     	;# 
  5774  021A                     	;# 
  5775  021B                     	;# 
  5776  021B                     	;# 
  5777  021C                     	;# 
  5778  021C                     	;# 
  5779  021D                     	;# 
  5780  021D                     	;# 
  5781  021E                     	;# 
  5782  021F                     	;# 
  5783  028C                     	;# 
  5784  028C                     	;# 
  5785  028D                     	;# 
  5786  028D                     	;# 
  5787  028E                     	;# 
  5788  028F                     	;# 
  5789  0290                     	;# 
  5790  0290                     	;# 
  5791  0291                     	;# 
  5792  0292                     	;# 
  5793  0292                     	;# 
  5794  0293                     	;# 
  5795  0293                     	;# 
  5796  0294                     	;# 
  5797  0295                     	;# 
  5798  0296                     	;# 
  5799  0296                     	;# 
  5800  0297                     	;# 
  5801  0298                     	;# 
  5802  0298                     	;# 
  5803  0299                     	;# 
  5804  0299                     	;# 
  5805  029A                     	;# 
  5806  029B                     	;# 
  5807  029C                     	;# 
  5808  029C                     	;# 
  5809  029D                     	;# 
  5810  030C                     	;# 
  5811  030C                     	;# 
  5812  030D                     	;# 
  5813  030E                     	;# 
  5814  030F                     	;# 
  5815  0310                     	;# 
  5816  0310                     	;# 
  5817  0311                     	;# 
  5818  0312                     	;# 
  5819  0313                     	;# 
  5820  0314                     	;# 
  5821  0314                     	;# 
  5822  0315                     	;# 
  5823  0316                     	;# 
  5824  0317                     	;# 
  5825  0318                     	;# 
  5826  0318                     	;# 
  5827  0319                     	;# 
  5828  031A                     	;# 
  5829  031B                     	;# 
  5830  031C                     	;# 
  5831  031C                     	;# 
  5832  031D                     	;# 
  5833  031E                     	;# 
  5834  031F                     	;# 
  5835  038C                     	;# 
  5836  038C                     	;# 
  5837  038D                     	;# 
  5838  038E                     	;# 
  5839  0390                     	;# 
  5840  0390                     	;# 
  5841  0391                     	;# 
  5842  0392                     	;# 
  5843  040C                     	;# 
  5844  040D                     	;# 
  5845  040E                     	;# 
  5846  040F                     	;# 
  5847  0410                     	;# 
  5848  0411                     	;# 
  5849  0416                     	;# 
  5850  0416                     	;# 
  5851  0417                     	;# 
  5852  0418                     	;# 
  5853  0418                     	;# 
  5854  0419                     	;# 
  5855  041A                     	;# 
  5856  041A                     	;# 
  5857  041B                     	;# 
  5858  041C                     	;# 
  5859  041C                     	;# 
  5860  041D                     	;# 
  5861  041E                     	;# 
  5862  041F                     	;# 
  5863  048C                     	;# 
  5864  048C                     	;# 
  5865  048D                     	;# 
  5866  048E                     	;# 
  5867  048F                     	;# 
  5868  048F                     	;# 
  5869  0490                     	;# 
  5870  0491                     	;# 
  5871  0492                     	;# 
  5872  0492                     	;# 
  5873  0493                     	;# 
  5874  0494                     	;# 
  5875  0495                     	;# 
  5876  0495                     	;# 
  5877  0496                     	;# 
  5878  0497                     	;# 
  5879  0498                     	;# 
  5880  0499                     	;# 
  5881  049A                     	;# 
  5882  049B                     	;# 
  5883  049C                     	;# 
  5884  049D                     	;# 
  5885  050C                     	;# 
  5886  050C                     	;# 
  5887  050D                     	;# 
  5888  050E                     	;# 
  5889  050F                     	;# 
  5890  050F                     	;# 
  5891  0510                     	;# 
  5892  0511                     	;# 
  5893  0512                     	;# 
  5894  0512                     	;# 
  5895  0513                     	;# 
  5896  0514                     	;# 
  5897  0515                     	;# 
  5898  0515                     	;# 
  5899  0516                     	;# 
  5900  0517                     	;# 
  5901  0518                     	;# 
  5902  0519                     	;# 
  5903  051A                     	;# 
  5904  051B                     	;# 
  5905  051C                     	;# 
  5906  051D                     	;# 
  5907  058C                     	;# 
  5908  058C                     	;# 
  5909  058D                     	;# 
  5910  058E                     	;# 
  5911  058F                     	;# 
  5912  058F                     	;# 
  5913  0590                     	;# 
  5914  0591                     	;# 
  5915  0592                     	;# 
  5916  0593                     	;# 
  5917  060C                     	;# 
  5918  060D                     	;# 
  5919  060E                     	;# 
  5920  060F                     	;# 
  5921  0610                     	;# 
  5922  0611                     	;# 
  5923  0612                     	;# 
  5924  0613                     	;# 
  5925  0614                     	;# 
  5926  0616                     	;# 
  5927  0617                     	;# 
  5928  0618                     	;# 
  5929  0619                     	;# 
  5930  061A                     	;# 
  5931  061B                     	;# 
  5932  061C                     	;# 
  5933  061D                     	;# 
  5934  061E                     	;# 
  5935  068C                     	;# 
  5936  068D                     	;# 
  5937  068E                     	;# 
  5938  068F                     	;# 
  5939  0690                     	;# 
  5940  0691                     	;# 
  5941  0692                     	;# 
  5942  0693                     	;# 
  5943  0694                     	;# 
  5944  070C                     	;# 
  5945  070D                     	;# 
  5946  070E                     	;# 
  5947  070F                     	;# 
  5948  0710                     	;# 
  5949  0711                     	;# 
  5950  0712                     	;# 
  5951  0713                     	;# 
  5952  0714                     	;# 
  5953  0716                     	;# 
  5954  0717                     	;# 
  5955  0718                     	;# 
  5956  0719                     	;# 
  5957  071A                     	;# 
  5958  071B                     	;# 
  5959  071C                     	;# 
  5960  071D                     	;# 
  5961  071E                     	;# 
  5962  0796                     	;# 
  5963  0797                     	;# 
  5964  0798                     	;# 
  5965  0799                     	;# 
  5966  079A                     	;# 
  5967  079B                     	;# 
  5968  080C                     	;# 
  5969  080D                     	;# 
  5970  080E                     	;# 
  5971  080F                     	;# 
  5972  0810                     	;# 
  5973  0811                     	;# 
  5974  0812                     	;# 
  5975  0813                     	;# 
  5976  0814                     	;# 
  5977  081A                     	;# 
  5978  081B                     	;# 
  5979  081C                     	;# 
  5980  081D                     	;# 
  5981  081E                     	;# 
  5982  081F                     	;# 
  5983  088C                     	;# 
  5984  088D                     	;# 
  5985  088E                     	;# 
  5986  088F                     	;# 
  5987  0890                     	;# 
  5988  0891                     	;# 
  5989  0892                     	;# 
  5990  0893                     	;# 
  5991  0895                     	;# 
  5992  0896                     	;# 
  5993  0897                     	;# 
  5994  0898                     	;# 
  5995  0899                     	;# 
  5996  089A                     	;# 
  5997  089B                     	;# 
  5998  090C                     	;# 
  5999  090E                     	;# 
  6000  090F                     	;# 
  6001  091F                     	;# 
  6002  091F                     	;# 
  6003  098F                     	;# 
  6004  098F                     	;# 
  6005  0990                     	;# 
  6006  0991                     	;# 
  6007  0992                     	;# 
  6008  0993                     	;# 
  6009  0994                     	;# 
  6010  0995                     	;# 
  6011  0996                     	;# 
  6012  0997                     	;# 
  6013  0E0F                     	;# 
  6014  0E10                     	;# 
  6015  0E11                     	;# 
  6016  0E12                     	;# 
  6017  0E13                     	;# 
  6018  0E14                     	;# 
  6019  0E15                     	;# 
  6020  0E16                     	;# 
  6021  0E17                     	;# 
  6022  0E18                     	;# 
  6023  0E19                     	;# 
  6024  0E1A                     	;# 
  6025  0E1B                     	;# 
  6026  0E1C                     	;# 
  6027  0E1D                     	;# 
  6028  0E1E                     	;# 
  6029  0E1F                     	;# 
  6030  0E20                     	;# 
  6031  0E21                     	;# 
  6032  0E22                     	;# 
  6033  0E23                     	;# 
  6034  0E24                     	;# 
  6035  0E25                     	;# 
  6036  0E26                     	;# 
  6037  0E27                     	;# 
  6038  0E28                     	;# 
  6039  0E29                     	;# 
  6040  0E2A                     	;# 
  6041  0E2B                     	;# 
  6042  0E2C                     	;# 
  6043  0E2D                     	;# 
  6044  0E2E                     	;# 
  6045  0E2F                     	;# 
  6046  0E30                     	;# 
  6047  0E31                     	;# 
  6048  0E32                     	;# 
  6049  0E33                     	;# 
  6050  0E34                     	;# 
  6051  0E35                     	;# 
  6052  0E36                     	;# 
  6053  0E37                     	;# 
  6054  0E8F                     	;# 
  6055  0E90                     	;# 
  6056  0E91                     	;# 
  6057  0E92                     	;# 
  6058  0E93                     	;# 
  6059  0E94                     	;# 
  6060  0E95                     	;# 
  6061  0E96                     	;# 
  6062  0E97                     	;# 
  6063  0E9C                     	;# 
  6064  0E9D                     	;# 
  6065  0E9E                     	;# 
  6066  0EA1                     	;# 
  6067  0EA2                     	;# 
  6068  0EA3                     	;# 
  6069  0EA4                     	;# 
  6070  0EA5                     	;# 
  6071  0EA9                     	;# 
  6072  0EAA                     	;# 
  6073  0EAB                     	;# 
  6074  0EAC                     	;# 
  6075  0EB1                     	;# 
  6076  0EB2                     	;# 
  6077  0EB3                     	;# 
  6078  0EB8                     	;# 
  6079  0EB9                     	;# 
  6080  0EBA                     	;# 
  6081  0EBB                     	;# 
  6082  0EBC                     	;# 
  6083  0EBD                     	;# 
  6084  0EBE                     	;# 
  6085  0EC3                     	;# 
  6086  0EC5                     	;# 
  6087  0EC6                     	;# 
  6088  0EC7                     	;# 
  6089  0EC8                     	;# 
  6090  0EC9                     	;# 
  6091  0ECA                     	;# 
  6092  0ECB                     	;# 
  6093  0ECC                     	;# 
  6094  0F10                     	;# 
  6095  0F11                     	;# 
  6096  0F12                     	;# 
  6097  0F13                     	;# 
  6098  0F14                     	;# 
  6099  0F15                     	;# 
  6100  0F16                     	;# 
  6101  0F17                     	;# 
  6102  0F18                     	;# 
  6103  0F19                     	;# 
  6104  0F1A                     	;# 
  6105  0F1B                     	;# 
  6106  0F1C                     	;# 
  6107  0F1D                     	;# 
  6108  0F1E                     	;# 
  6109  0F1F                     	;# 
  6110  0F20                     	;# 
  6111  0F21                     	;# 
  6112  0F22                     	;# 
  6113  0F23                     	;# 
  6114  0F24                     	;# 
  6115  0F25                     	;# 
  6116  0F26                     	;# 
  6117  0F27                     	;# 
  6118  0F28                     	;# 
  6119  0F29                     	;# 
  6120  0F2A                     	;# 
  6121  0F2B                     	;# 
  6122  0F2C                     	;# 
  6123  0F2D                     	;# 
  6124  0F2E                     	;# 
  6125  0F2F                     	;# 
  6126  0F30                     	;# 
  6127  0F31                     	;# 
  6128  0F32                     	;# 
  6129  0F38                     	;# 
  6130  0F39                     	;# 
  6131  0F3A                     	;# 
  6132  0F3B                     	;# 
  6133  0F3C                     	;# 
  6134  0F3D                     	;# 
  6135  0F3E                     	;# 
  6136  0F3F                     	;# 
  6137  0F40                     	;# 
  6138  0F41                     	;# 
  6139  0F43                     	;# 
  6140  0F44                     	;# 
  6141  0F45                     	;# 
  6142  0F46                     	;# 
  6143  0F47                     	;# 
  6144  0F48                     	;# 
  6145  0F49                     	;# 
  6146  0F4A                     	;# 
  6147  0F4B                     	;# 
  6148  0F4C                     	;# 
  6149  0F4E                     	;# 
  6150  0F4F                     	;# 
  6151  0F50                     	;# 
  6152  0F51                     	;# 
  6153  0F52                     	;# 
  6154  0F53                     	;# 
  6155  0F54                     	;# 
  6156  0F55                     	;# 
  6157  0F56                     	;# 
  6158  0F57                     	;# 
  6159  0F59                     	;# 
  6160  0F5A                     	;# 
  6161  0F5B                     	;# 
  6162  0F5C                     	;# 
  6163  0F5D                     	;# 
  6164  0F61                     	;# 
  6165  0F62                     	;# 
  6166  0F64                     	;# 
  6167  0F65                     	;# 
  6168  0F66                     	;# 
  6169  0F67                     	;# 
  6170  0F68                     	;# 
  6171  0F69                     	;# 
  6172  0F6A                     	;# 
  6173  0F6B                     	;# 
  6174  0F6C                     	;# 
  6175  0F6D                     	;# 
  6176  0FE4                     	;# 
  6177  0FE5                     	;# 
  6178  0FE6                     	;# 
  6179  0FE7                     	;# 
  6180  0FE8                     	;# 
  6181  0FE9                     	;# 
  6182  0FEA                     	;# 
  6183  0FEB                     	;# 
  6184  0FED                     	;# 
  6185  0FEE                     	;# 
  6186  0FEF                     	;# 
  6187  0000                     	;# 
  6188  0001                     	;# 
  6189  0002                     	;# 
  6190  0003                     	;# 
  6191  0004                     	;# 
  6192  0005                     	;# 
  6193  0006                     	;# 
  6194  0007                     	;# 
  6195  0008                     	;# 
  6196  0009                     	;# 
  6197  000A                     	;# 
  6198  000B                     	;# 
  6199  000C                     	;# 
  6200  000D                     	;# 
  6201  000E                     	;# 
  6202  000F                     	;# 
  6203  0010                     	;# 
  6204  0011                     	;# 
  6205  0012                     	;# 
  6206  0013                     	;# 
  6207  0014                     	;# 
  6208  0015                     	;# 
  6209  0016                     	;# 
  6210  0017                     	;# 
  6211  0018                     	;# 
  6212  0019                     	;# 
  6213  001A                     	;# 
  6214  001C                     	;# 
  6215  001C                     	;# 
  6216  001D                     	;# 
  6217  001D                     	;# 
  6218  001E                     	;# 
  6219  001F                     	;# 
  6220  008C                     	;# 
  6221  008C                     	;# 
  6222  008D                     	;# 
  6223  008E                     	;# 
  6224  008E                     	;# 
  6225  008F                     	;# 
  6226  0090                     	;# 
  6227  0090                     	;# 
  6228  0091                     	;# 
  6229  0093                     	;# 
  6230  0094                     	;# 
  6231  0095                     	;# 
  6232  0096                     	;# 
  6233  0097                     	;# 
  6234  0098                     	;# 
  6235  0099                     	;# 
  6236  009A                     	;# 
  6237  009B                     	;# 
  6238  009C                     	;# 
  6239  009D                     	;# 
  6240  009E                     	;# 
  6241  010C                     	;# 
  6242  010D                     	;# 
  6243  010E                     	;# 
  6244  010E                     	;# 
  6245  010F                     	;# 
  6246  0110                     	;# 
  6247  0110                     	;# 
  6248  0111                     	;# 
  6249  0112                     	;# 
  6250  0112                     	;# 
  6251  0113                     	;# 
  6252  0114                     	;# 
  6253  0114                     	;# 
  6254  0115                     	;# 
  6255  0116                     	;# 
  6256  0116                     	;# 
  6257  0117                     	;# 
  6258  0119                     	;# 
  6259  0119                     	;# 
  6260  0119                     	;# 
  6261  011A                     	;# 
  6262  011A                     	;# 
  6263  011A                     	;# 
  6264  011B                     	;# 
  6265  011B                     	;# 
  6266  011B                     	;# 
  6267  011B                     	;# 
  6268  011B                     	;# 
  6269  011C                     	;# 
  6270  011C                     	;# 
  6271  011C                     	;# 
  6272  011D                     	;# 
  6273  011D                     	;# 
  6274  011D                     	;# 
  6275  011E                     	;# 
  6276  011E                     	;# 
  6277  011E                     	;# 
  6278  011F                     	;# 
  6279  011F                     	;# 
  6280  011F                     	;# 
  6281  011F                     	;# 
  6282  011F                     	;# 
  6283  018C                     	;# 
  6284  018D                     	;# 
  6285  018E                     	;# 
  6286  018F                     	;# 
  6287  0190                     	;# 
  6288  0191                     	;# 
  6289  0192                     	;# 
  6290  0196                     	;# 
  6291  0197                     	;# 
  6292  0198                     	;# 
  6293  0199                     	;# 
  6294  019A                     	;# 
  6295  019B                     	;# 
  6296  019C                     	;# 
  6297  020C                     	;# 
  6298  020C                     	;# 
  6299  020D                     	;# 
  6300  020E                     	;# 
  6301  020F                     	;# 
  6302  020F                     	;# 
  6303  0210                     	;# 
  6304  0210                     	;# 
  6305  0211                     	;# 
  6306  0211                     	;# 
  6307  0212                     	;# 
  6308  0212                     	;# 
  6309  0213                     	;# 
  6310  0214                     	;# 
  6311  0215                     	;# 
  6312  0215                     	;# 
  6313  0216                     	;# 
  6314  0216                     	;# 
  6315  0217                     	;# 
  6316  0217                     	;# 
  6317  0218                     	;# 
  6318  0218                     	;# 
  6319  0219                     	;# 
  6320  021A                     	;# 
  6321  021B                     	;# 
  6322  021B                     	;# 
  6323  021C                     	;# 
  6324  021C                     	;# 
  6325  021D                     	;# 
  6326  021D                     	;# 
  6327  021E                     	;# 
  6328  021F                     	;# 
  6329  028C                     	;# 
  6330  028C                     	;# 
  6331  028D                     	;# 
  6332  028D                     	;# 
  6333  028E                     	;# 
  6334  028F                     	;# 
  6335  0290                     	;# 
  6336  0290                     	;# 
  6337  0291                     	;# 
  6338  0292                     	;# 
  6339  0292                     	;# 
  6340  0293                     	;# 
  6341  0293                     	;# 
  6342  0294                     	;# 
  6343  0295                     	;# 
  6344  0296                     	;# 
  6345  0296                     	;# 
  6346  0297                     	;# 
  6347  0298                     	;# 
  6348  0298                     	;# 
  6349  0299                     	;# 
  6350  0299                     	;# 
  6351  029A                     	;# 
  6352  029B                     	;# 
  6353  029C                     	;# 
  6354  029C                     	;# 
  6355  029D                     	;# 
  6356  030C                     	;# 
  6357  030C                     	;# 
  6358  030D                     	;# 
  6359  030E                     	;# 
  6360  030F                     	;# 
  6361  0310                     	;# 
  6362  0310                     	;# 
  6363  0311                     	;# 
  6364  0312                     	;# 
  6365  0313                     	;# 
  6366  0314                     	;# 
  6367  0314                     	;# 
  6368  0315                     	;# 
  6369  0316                     	;# 
  6370  0317                     	;# 
  6371  0318                     	;# 
  6372  0318                     	;# 
  6373  0319                     	;# 
  6374  031A                     	;# 
  6375  031B                     	;# 
  6376  031C                     	;# 
  6377  031C                     	;# 
  6378  031D                     	;# 
  6379  031E                     	;# 
  6380  031F                     	;# 
  6381  038C                     	;# 
  6382  038C                     	;# 
  6383  038D                     	;# 
  6384  038E                     	;# 
  6385  0390                     	;# 
  6386  0390                     	;# 
  6387  0391                     	;# 
  6388  0392                     	;# 
  6389  040C                     	;# 
  6390  040D                     	;# 
  6391  040E                     	;# 
  6392  040F                     	;# 
  6393  0410                     	;# 
  6394  0411                     	;# 
  6395  0416                     	;# 
  6396  0416                     	;# 
  6397  0417                     	;# 
  6398  0418                     	;# 
  6399  0418                     	;# 
  6400  0419                     	;# 
  6401  041A                     	;# 
  6402  041A                     	;# 
  6403  041B                     	;# 
  6404  041C                     	;# 
  6405  041C                     	;# 
  6406  041D                     	;# 
  6407  041E                     	;# 
  6408  041F                     	;# 
  6409  048C                     	;# 
  6410  048C                     	;# 
  6411  048D                     	;# 
  6412  048E                     	;# 
  6413  048F                     	;# 
  6414  048F                     	;# 
  6415  0490                     	;# 
  6416  0491                     	;# 
  6417  0492                     	;# 
  6418  0492                     	;# 
  6419  0493                     	;# 
  6420  0494                     	;# 
  6421  0495                     	;# 
  6422  0495                     	;# 
  6423  0496                     	;# 
  6424  0497                     	;# 
  6425  0498                     	;# 
  6426  0499                     	;# 
  6427  049A                     	;# 
  6428  049B                     	;# 
  6429  049C                     	;# 
  6430  049D                     	;# 
  6431  050C                     	;# 
  6432  050C                     	;# 
  6433  050D                     	;# 
  6434  050E                     	;# 
  6435  050F                     	;# 
  6436  050F                     	;# 
  6437  0510                     	;# 
  6438  0511                     	;# 
  6439  0512                     	;# 
  6440  0512                     	;# 
  6441  0513                     	;# 
  6442  0514                     	;# 
  6443  0515                     	;# 
  6444  0515                     	;# 
  6445  0516                     	;# 
  6446  0517                     	;# 
  6447  0518                     	;# 
  6448  0519                     	;# 
  6449  051A                     	;# 
  6450  051B                     	;# 
  6451  051C                     	;# 
  6452  051D                     	;# 
  6453  058C                     	;# 
  6454  058C                     	;# 
  6455  058D                     	;# 
  6456  058E                     	;# 
  6457  058F                     	;# 
  6458  058F                     	;# 
  6459  0590                     	;# 
  6460  0591                     	;# 
  6461  0592                     	;# 
  6462  0593                     	;# 
  6463  060C                     	;# 
  6464  060D                     	;# 
  6465  060E                     	;# 
  6466  060F                     	;# 
  6467  0610                     	;# 
  6468  0611                     	;# 
  6469  0612                     	;# 
  6470  0613                     	;# 
  6471  0614                     	;# 
  6472  0616                     	;# 
  6473  0617                     	;# 
  6474  0618                     	;# 
  6475  0619                     	;# 
  6476  061A                     	;# 
  6477  061B                     	;# 
  6478  061C                     	;# 
  6479  061D                     	;# 
  6480  061E                     	;# 
  6481  068C                     	;# 
  6482  068D                     	;# 
  6483  068E                     	;# 
  6484  068F                     	;# 
  6485  0690                     	;# 
  6486  0691                     	;# 
  6487  0692                     	;# 
  6488  0693                     	;# 
  6489  0694                     	;# 
  6490  070C                     	;# 
  6491  070D                     	;# 
  6492  070E                     	;# 
  6493  070F                     	;# 
  6494  0710                     	;# 
  6495  0711                     	;# 
  6496  0712                     	;# 
  6497  0713                     	;# 
  6498  0714                     	;# 
  6499  0716                     	;# 
  6500  0717                     	;# 
  6501  0718                     	;# 
  6502  0719                     	;# 
  6503  071A                     	;# 
  6504  071B                     	;# 
  6505  071C                     	;# 
  6506  071D                     	;# 
  6507  071E                     	;# 
  6508  0796                     	;# 
  6509  0797                     	;# 
  6510  0798                     	;# 
  6511  0799                     	;# 
  6512  079A                     	;# 
  6513  079B                     	;# 
  6514  080C                     	;# 
  6515  080D                     	;# 
  6516  080E                     	;# 
  6517  080F                     	;# 
  6518  0810                     	;# 
  6519  0811                     	;# 
  6520  0812                     	;# 
  6521  0813                     	;# 
  6522  0814                     	;# 
  6523  081A                     	;# 
  6524  081B                     	;# 
  6525  081C                     	;# 
  6526  081D                     	;# 
  6527  081E                     	;# 
  6528  081F                     	;# 
  6529  088C                     	;# 
  6530  088D                     	;# 
  6531  088E                     	;# 
  6532  088F                     	;# 
  6533  0890                     	;# 
  6534  0891                     	;# 
  6535  0892                     	;# 
  6536  0893                     	;# 
  6537  0895                     	;# 
  6538  0896                     	;# 
  6539  0897                     	;# 
  6540  0898                     	;# 
  6541  0899                     	;# 
  6542  089A                     	;# 
  6543  089B                     	;# 
  6544  090C                     	;# 
  6545  090E                     	;# 
  6546  090F                     	;# 
  6547  091F                     	;# 
  6548  091F                     	;# 
  6549  098F                     	;# 
  6550  098F                     	;# 
  6551  0990                     	;# 
  6552  0991                     	;# 
  6553  0992                     	;# 
  6554  0993                     	;# 
  6555  0994                     	;# 
  6556  0995                     	;# 
  6557  0996                     	;# 
  6558  0997                     	;# 
  6559  0E0F                     	;# 
  6560  0E10                     	;# 
  6561  0E11                     	;# 
  6562  0E12                     	;# 
  6563  0E13                     	;# 
  6564  0E14                     	;# 
  6565  0E15                     	;# 
  6566  0E16                     	;# 
  6567  0E17                     	;# 
  6568  0E18                     	;# 
  6569  0E19                     	;# 
  6570  0E1A                     	;# 
  6571  0E1B                     	;# 
  6572  0E1C                     	;# 
  6573  0E1D                     	;# 
  6574  0E1E                     	;# 
  6575  0E1F                     	;# 
  6576  0E20                     	;# 
  6577  0E21                     	;# 
  6578  0E22                     	;# 
  6579  0E23                     	;# 
  6580  0E24                     	;# 
  6581  0E25                     	;# 
  6582  0E26                     	;# 
  6583  0E27                     	;# 
  6584  0E28                     	;# 
  6585  0E29                     	;# 
  6586  0E2A                     	;# 
  6587  0E2B                     	;# 
  6588  0E2C                     	;# 
  6589  0E2D                     	;# 
  6590  0E2E                     	;# 
  6591  0E2F                     	;# 
  6592  0E30                     	;# 
  6593  0E31                     	;# 
  6594  0E32                     	;# 
  6595  0E33                     	;# 
  6596  0E34                     	;# 
  6597  0E35                     	;# 
  6598  0E36                     	;# 
  6599  0E37                     	;# 
  6600  0E8F                     	;# 
  6601  0E90                     	;# 
  6602  0E91                     	;# 
  6603  0E92                     	;# 
  6604  0E93                     	;# 
  6605  0E94                     	;# 
  6606  0E95                     	;# 
  6607  0E96                     	;# 
  6608  0E97                     	;# 
  6609  0E9C                     	;# 
  6610  0E9D                     	;# 
  6611  0E9E                     	;# 
  6612  0EA1                     	;# 
  6613  0EA2                     	;# 
  6614  0EA3                     	;# 
  6615  0EA4                     	;# 
  6616  0EA5                     	;# 
  6617  0EA9                     	;# 
  6618  0EAA                     	;# 
  6619  0EAB                     	;# 
  6620  0EAC                     	;# 
  6621  0EB1                     	;# 
  6622  0EB2                     	;# 
  6623  0EB3                     	;# 
  6624  0EB8                     	;# 
  6625  0EB9                     	;# 
  6626  0EBA                     	;# 
  6627  0EBB                     	;# 
  6628  0EBC                     	;# 
  6629  0EBD                     	;# 
  6630  0EBE                     	;# 
  6631  0EC3                     	;# 
  6632  0EC5                     	;# 
  6633  0EC6                     	;# 
  6634  0EC7                     	;# 
  6635  0EC8                     	;# 
  6636  0EC9                     	;# 
  6637  0ECA                     	;# 
  6638  0ECB                     	;# 
  6639  0ECC                     	;# 
  6640  0F10                     	;# 
  6641  0F11                     	;# 
  6642  0F12                     	;# 
  6643  0F13                     	;# 
  6644  0F14                     	;# 
  6645  0F15                     	;# 
  6646  0F16                     	;# 
  6647  0F17                     	;# 
  6648  0F18                     	;# 
  6649  0F19                     	;# 
  6650  0F1A                     	;# 
  6651  0F1B                     	;# 
  6652  0F1C                     	;# 
  6653  0F1D                     	;# 
  6654  0F1E                     	;# 
  6655  0F1F                     	;# 
  6656  0F20                     	;# 
  6657  0F21                     	;# 
  6658  0F22                     	;# 
  6659  0F23                     	;# 
  6660  0F24                     	;# 
  6661  0F25                     	;# 
  6662  0F26                     	;# 
  6663  0F27                     	;# 
  6664  0F28                     	;# 
  6665  0F29                     	;# 
  6666  0F2A                     	;# 
  6667  0F2B                     	;# 
  6668  0F2C                     	;# 
  6669  0F2D                     	;# 
  6670  0F2E                     	;# 
  6671  0F2F                     	;# 
  6672  0F30                     	;# 
  6673  0F31                     	;# 
  6674  0F32                     	;# 
  6675  0F38                     	;# 
  6676  0F39                     	;# 
  6677  0F3A                     	;# 
  6678  0F3B                     	;# 
  6679  0F3C                     	;# 
  6680  0F3D                     	;# 
  6681  0F3E                     	;# 
  6682  0F3F                     	;# 
  6683  0F40                     	;# 
  6684  0F41                     	;# 
  6685  0F43                     	;# 
  6686  0F44                     	;# 
  6687  0F45                     	;# 
  6688  0F46                     	;# 
  6689  0F47                     	;# 
  6690  0F48                     	;# 
  6691  0F49                     	;# 
  6692  0F4A                     	;# 
  6693  0F4B                     	;# 
  6694  0F4C                     	;# 
  6695  0F4E                     	;# 
  6696  0F4F                     	;# 
  6697  0F50                     	;# 
  6698  0F51                     	;# 
  6699  0F52                     	;# 
  6700  0F53                     	;# 
  6701  0F54                     	;# 
  6702  0F55                     	;# 
  6703  0F56                     	;# 
  6704  0F57                     	;# 
  6705  0F59                     	;# 
  6706  0F5A                     	;# 
  6707  0F5B                     	;# 
  6708  0F5C                     	;# 
  6709  0F5D                     	;# 
  6710  0F61                     	;# 
  6711  0F62                     	;# 
  6712  0F64                     	;# 
  6713  0F65                     	;# 
  6714  0F66                     	;# 
  6715  0F67                     	;# 
  6716  0F68                     	;# 
  6717  0F69                     	;# 
  6718  0F6A                     	;# 
  6719  0F6B                     	;# 
  6720  0F6C                     	;# 
  6721  0F6D                     	;# 
  6722  0FE4                     	;# 
  6723  0FE5                     	;# 
  6724  0FE6                     	;# 
  6725  0FE7                     	;# 
  6726  0FE8                     	;# 
  6727  0FE9                     	;# 
  6728  0FEA                     	;# 
  6729  0FEB                     	;# 
  6730  0FED                     	;# 
  6731  0FEE                     	;# 
  6732  0FEF                     	;# 
  6733  0000                     	;# 
  6734  0001                     	;# 
  6735  0002                     	;# 
  6736  0003                     	;# 
  6737  0004                     	;# 
  6738  0005                     	;# 
  6739  0006                     	;# 
  6740  0007                     	;# 
  6741  0008                     	;# 
  6742  0009                     	;# 
  6743  000A                     	;# 
  6744  000B                     	;# 
  6745  000C                     	;# 
  6746  000D                     	;# 
  6747  000E                     	;# 
  6748  000F                     	;# 
  6749  0010                     	;# 
  6750  0011                     	;# 
  6751  0012                     	;# 
  6752  0013                     	;# 
  6753  0014                     	;# 
  6754  0015                     	;# 
  6755  0016                     	;# 
  6756  0017                     	;# 
  6757  0018                     	;# 
  6758  0019                     	;# 
  6759  001A                     	;# 
  6760  001C                     	;# 
  6761  001C                     	;# 
  6762  001D                     	;# 
  6763  001D                     	;# 
  6764  001E                     	;# 
  6765  001F                     	;# 
  6766  008C                     	;# 
  6767  008C                     	;# 
  6768  008D                     	;# 
  6769  008E                     	;# 
  6770  008E                     	;# 
  6771  008F                     	;# 
  6772  0090                     	;# 
  6773  0090                     	;# 
  6774  0091                     	;# 
  6775  0093                     	;# 
  6776  0094                     	;# 
  6777  0095                     	;# 
  6778  0096                     	;# 
  6779  0097                     	;# 
  6780  0098                     	;# 
  6781  0099                     	;# 
  6782  009A                     	;# 
  6783  009B                     	;# 
  6784  009C                     	;# 
  6785  009D                     	;# 
  6786  009E                     	;# 
  6787  010C                     	;# 
  6788  010D                     	;# 
  6789  010E                     	;# 
  6790  010E                     	;# 
  6791  010F                     	;# 
  6792  0110                     	;# 
  6793  0110                     	;# 
  6794  0111                     	;# 
  6795  0112                     	;# 
  6796  0112                     	;# 
  6797  0113                     	;# 
  6798  0114                     	;# 
  6799  0114                     	;# 
  6800  0115                     	;# 
  6801  0116                     	;# 
  6802  0116                     	;# 
  6803  0117                     	;# 
  6804  0119                     	;# 
  6805  0119                     	;# 
  6806  0119                     	;# 
  6807  011A                     	;# 
  6808  011A                     	;# 
  6809  011A                     	;# 
  6810  011B                     	;# 
  6811  011B                     	;# 
  6812  011B                     	;# 
  6813  011B                     	;# 
  6814  011B                     	;# 
  6815  011C                     	;# 
  6816  011C                     	;# 
  6817  011C                     	;# 
  6818  011D                     	;# 
  6819  011D                     	;# 
  6820  011D                     	;# 
  6821  011E                     	;# 
  6822  011E                     	;# 
  6823  011E                     	;# 
  6824  011F                     	;# 
  6825  011F                     	;# 
  6826  011F                     	;# 
  6827  011F                     	;# 
  6828  011F                     	;# 
  6829  018C                     	;# 
  6830  018D                     	;# 
  6831  018E                     	;# 
  6832  018F                     	;# 
  6833  0190                     	;# 
  6834  0191                     	;# 
  6835  0192                     	;# 
  6836  0196                     	;# 
  6837  0197                     	;# 
  6838  0198                     	;# 
  6839  0199                     	;# 
  6840  019A                     	;# 
  6841  019B                     	;# 
  6842  019C                     	;# 
  6843  020C                     	;# 
  6844  020C                     	;# 
  6845  020D                     	;# 
  6846  020E                     	;# 
  6847  020F                     	;# 
  6848  020F                     	;# 
  6849  0210                     	;# 
  6850  0210                     	;# 
  6851  0211                     	;# 
  6852  0211                     	;# 
  6853  0212                     	;# 
  6854  0212                     	;# 
  6855  0213                     	;# 
  6856  0214                     	;# 
  6857  0215                     	;# 
  6858  0215                     	;# 
  6859  0216                     	;# 
  6860  0216                     	;# 
  6861  0217                     	;# 
  6862  0217                     	;# 
  6863  0218                     	;# 
  6864  0218                     	;# 
  6865  0219                     	;# 
  6866  021A                     	;# 
  6867  021B                     	;# 
  6868  021B                     	;# 
  6869  021C                     	;# 
  6870  021C                     	;# 
  6871  021D                     	;# 
  6872  021D                     	;# 
  6873  021E                     	;# 
  6874  021F                     	;# 
  6875  028C                     	;# 
  6876  028C                     	;# 
  6877  028D                     	;# 
  6878  028D                     	;# 
  6879  028E                     	;# 
  6880  028F                     	;# 
  6881  0290                     	;# 
  6882  0290                     	;# 
  6883  0291                     	;# 
  6884  0292                     	;# 
  6885  0292                     	;# 
  6886  0293                     	;# 
  6887  0293                     	;# 
  6888  0294                     	;# 
  6889  0295                     	;# 
  6890  0296                     	;# 
  6891  0296                     	;# 
  6892  0297                     	;# 
  6893  0298                     	;# 
  6894  0298                     	;# 
  6895  0299                     	;# 
  6896  0299                     	;# 
  6897  029A                     	;# 
  6898  029B                     	;# 
  6899  029C                     	;# 
  6900  029C                     	;# 
  6901  029D                     	;# 
  6902  030C                     	;# 
  6903  030C                     	;# 
  6904  030D                     	;# 
  6905  030E                     	;# 
  6906  030F                     	;# 
  6907  0310                     	;# 
  6908  0310                     	;# 
  6909  0311                     	;# 
  6910  0312                     	;# 
  6911  0313                     	;# 
  6912  0314                     	;# 
  6913  0314                     	;# 
  6914  0315                     	;# 
  6915  0316                     	;# 
  6916  0317                     	;# 
  6917  0318                     	;# 
  6918  0318                     	;# 
  6919  0319                     	;# 
  6920  031A                     	;# 
  6921  031B                     	;# 
  6922  031C                     	;# 
  6923  031C                     	;# 
  6924  031D                     	;# 
  6925  031E                     	;# 
  6926  031F                     	;# 
  6927  038C                     	;# 
  6928  038C                     	;# 
  6929  038D                     	;# 
  6930  038E                     	;# 
  6931  0390                     	;# 
  6932  0390                     	;# 
  6933  0391                     	;# 
  6934  0392                     	;# 
  6935  040C                     	;# 
  6936  040D                     	;# 
  6937  040E                     	;# 
  6938  040F                     	;# 
  6939  0410                     	;# 
  6940  0411                     	;# 
  6941  0416                     	;# 
  6942  0416                     	;# 
  6943  0417                     	;# 
  6944  0418                     	;# 
  6945  0418                     	;# 
  6946  0419                     	;# 
  6947  041A                     	;# 
  6948  041A                     	;# 
  6949  041B                     	;# 
  6950  041C                     	;# 
  6951  041C                     	;# 
  6952  041D                     	;# 
  6953  041E                     	;# 
  6954  041F                     	;# 
  6955  048C                     	;# 
  6956  048C                     	;# 
  6957  048D                     	;# 
  6958  048E                     	;# 
  6959  048F                     	;# 
  6960  048F                     	;# 
  6961  0490                     	;# 
  6962  0491                     	;# 
  6963  0492                     	;# 
  6964  0492                     	;# 
  6965  0493                     	;# 
  6966  0494                     	;# 
  6967  0495                     	;# 
  6968  0495                     	;# 
  6969  0496                     	;# 
  6970  0497                     	;# 
  6971  0498                     	;# 
  6972  0499                     	;# 
  6973  049A                     	;# 
  6974  049B                     	;# 
  6975  049C                     	;# 
  6976  049D                     	;# 
  6977  050C                     	;# 
  6978  050C                     	;# 
  6979  050D                     	;# 
  6980  050E                     	;# 
  6981  050F                     	;# 
  6982  050F                     	;# 
  6983  0510                     	;# 
  6984  0511                     	;# 
  6985  0512                     	;# 
  6986  0512                     	;# 
  6987  0513                     	;# 
  6988  0514                     	;# 
  6989  0515                     	;# 
  6990  0515                     	;# 
  6991  0516                     	;# 
  6992  0517                     	;# 
  6993  0518                     	;# 
  6994  0519                     	;# 
  6995  051A                     	;# 
  6996  051B                     	;# 
  6997  051C                     	;# 
  6998  051D                     	;# 
  6999  058C                     	;# 
  7000  058C                     	;# 
  7001  058D                     	;# 
  7002  058E                     	;# 
  7003  058F                     	;# 
  7004  058F                     	;# 
  7005  0590                     	;# 
  7006  0591                     	;# 
  7007  0592                     	;# 
  7008  0593                     	;# 
  7009  060C                     	;# 
  7010  060D                     	;# 
  7011  060E                     	;# 
  7012  060F                     	;# 
  7013  0610                     	;# 
  7014  0611                     	;# 
  7015  0612                     	;# 
  7016  0613                     	;# 
  7017  0614                     	;# 
  7018  0616                     	;# 
  7019  0617                     	;# 
  7020  0618                     	;# 
  7021  0619                     	;# 
  7022  061A                     	;# 
  7023  061B                     	;# 
  7024  061C                     	;# 
  7025  061D                     	;# 
  7026  061E                     	;# 
  7027  068C                     	;# 
  7028  068D                     	;# 
  7029  068E                     	;# 
  7030  068F                     	;# 
  7031  0690                     	;# 
  7032  0691                     	;# 
  7033  0692                     	;# 
  7034  0693                     	;# 
  7035  0694                     	;# 
  7036  070C                     	;# 
  7037  070D                     	;# 
  7038  070E                     	;# 
  7039  070F                     	;# 
  7040  0710                     	;# 
  7041  0711                     	;# 
  7042  0712                     	;# 
  7043  0713                     	;# 
  7044  0714                     	;# 
  7045  0716                     	;# 
  7046  0717                     	;# 
  7047  0718                     	;# 
  7048  0719                     	;# 
  7049  071A                     	;# 
  7050  071B                     	;# 
  7051  071C                     	;# 
  7052  071D                     	;# 
  7053  071E                     	;# 
  7054  0796                     	;# 
  7055  0797                     	;# 
  7056  0798                     	;# 
  7057  0799                     	;# 
  7058  079A                     	;# 
  7059  079B                     	;# 
  7060  080C                     	;# 
  7061  080D                     	;# 
  7062  080E                     	;# 
  7063  080F                     	;# 
  7064  0810                     	;# 
  7065  0811                     	;# 
  7066  0812                     	;# 
  7067  0813                     	;# 
  7068  0814                     	;# 
  7069  081A                     	;# 
  7070  081B                     	;# 
  7071  081C                     	;# 
  7072  081D                     	;# 
  7073  081E                     	;# 
  7074  081F                     	;# 
  7075  088C                     	;# 
  7076  088D                     	;# 
  7077  088E                     	;# 
  7078  088F                     	;# 
  7079  0890                     	;# 
  7080  0891                     	;# 
  7081  0892                     	;# 
  7082  0893                     	;# 
  7083  0895                     	;# 
  7084  0896                     	;# 
  7085  0897                     	;# 
  7086  0898                     	;# 
  7087  0899                     	;# 
  7088  089A                     	;# 
  7089  089B                     	;# 
  7090  090C                     	;# 
  7091  090E                     	;# 
  7092  090F                     	;# 
  7093  091F                     	;# 
  7094  091F                     	;# 
  7095  098F                     	;# 
  7096  098F                     	;# 
  7097  0990                     	;# 
  7098  0991                     	;# 
  7099  0992                     	;# 
  7100  0993                     	;# 
  7101  0994                     	;# 
  7102  0995                     	;# 
  7103  0996                     	;# 
  7104  0997                     	;# 
  7105  0E0F                     	;# 
  7106  0E10                     	;# 
  7107  0E11                     	;# 
  7108  0E12                     	;# 
  7109  0E13                     	;# 
  7110  0E14                     	;# 
  7111  0E15                     	;# 
  7112  0E16                     	;# 
  7113  0E17                     	;# 
  7114  0E18                     	;# 
  7115  0E19                     	;# 
  7116  0E1A                     	;# 
  7117  0E1B                     	;# 
  7118  0E1C                     	;# 
  7119  0E1D                     	;# 
  7120  0E1E                     	;# 
  7121  0E1F                     	;# 
  7122  0E20                     	;# 
  7123  0E21                     	;# 
  7124  0E22                     	;# 
  7125  0E23                     	;# 
  7126  0E24                     	;# 
  7127  0E25                     	;# 
  7128  0E26                     	;# 
  7129  0E27                     	;# 
  7130  0E28                     	;# 
  7131  0E29                     	;# 
  7132  0E2A                     	;# 
  7133  0E2B                     	;# 
  7134  0E2C                     	;# 
  7135  0E2D                     	;# 
  7136  0E2E                     	;# 
  7137  0E2F                     	;# 
  7138  0E30                     	;# 
  7139  0E31                     	;# 
  7140  0E32                     	;# 
  7141  0E33                     	;# 
  7142  0E34                     	;# 
  7143  0E35                     	;# 
  7144  0E36                     	;# 
  7145  0E37                     	;# 
  7146  0E8F                     	;# 
  7147  0E90                     	;# 
  7148  0E91                     	;# 
  7149  0E92                     	;# 
  7150  0E93                     	;# 
  7151  0E94                     	;# 
  7152  0E95                     	;# 
  7153  0E96                     	;# 
  7154  0E97                     	;# 
  7155  0E9C                     	;# 
  7156  0E9D                     	;# 
  7157  0E9E                     	;# 
  7158  0EA1                     	;# 
  7159  0EA2                     	;# 
  7160  0EA3                     	;# 
  7161  0EA4                     	;# 
  7162  0EA5                     	;# 
  7163  0EA9                     	;# 
  7164  0EAA                     	;# 
  7165  0EAB                     	;# 
  7166  0EAC                     	;# 
  7167  0EB1                     	;# 
  7168  0EB2                     	;# 
  7169  0EB3                     	;# 
  7170  0EB8                     	;# 
  7171  0EB9                     	;# 
  7172  0EBA                     	;# 
  7173  0EBB                     	;# 
  7174  0EBC                     	;# 
  7175  0EBD                     	;# 
  7176  0EBE                     	;# 
  7177  0EC3                     	;# 
  7178  0EC5                     	;# 
  7179  0EC6                     	;# 
  7180  0EC7                     	;# 
  7181  0EC8                     	;# 
  7182  0EC9                     	;# 
  7183  0ECA                     	;# 
  7184  0ECB                     	;# 
  7185  0ECC                     	;# 
  7186  0F10                     	;# 
  7187  0F11                     	;# 
  7188  0F12                     	;# 
  7189  0F13                     	;# 
  7190  0F14                     	;# 
  7191  0F15                     	;# 
  7192  0F16                     	;# 
  7193  0F17                     	;# 
  7194  0F18                     	;# 
  7195  0F19                     	;# 
  7196  0F1A                     	;# 
  7197  0F1B                     	;# 
  7198  0F1C                     	;# 
  7199  0F1D                     	;# 
  7200  0F1E                     	;# 
  7201  0F1F                     	;# 
  7202  0F20                     	;# 
  7203  0F21                     	;# 
  7204  0F22                     	;# 
  7205  0F23                     	;# 
  7206  0F24                     	;# 
  7207  0F25                     	;# 
  7208  0F26                     	;# 
  7209  0F27                     	;# 
  7210  0F28                     	;# 
  7211  0F29                     	;# 
  7212  0F2A                     	;# 
  7213  0F2B                     	;# 
  7214  0F2C                     	;# 
  7215  0F2D                     	;# 
  7216  0F2E                     	;# 
  7217  0F2F                     	;# 
  7218  0F30                     	;# 
  7219  0F31                     	;# 
  7220  0F32                     	;# 
  7221  0F38                     	;# 
  7222  0F39                     	;# 
  7223  0F3A                     	;# 
  7224  0F3B                     	;# 
  7225  0F3C                     	;# 
  7226  0F3D                     	;# 
  7227  0F3E                     	;# 
  7228  0F3F                     	;# 
  7229  0F40                     	;# 
  7230  0F41                     	;# 
  7231  0F43                     	;# 
  7232  0F44                     	;# 
  7233  0F45                     	;# 
  7234  0F46                     	;# 
  7235  0F47                     	;# 
  7236  0F48                     	;# 
  7237  0F49                     	;# 
  7238  0F4A                     	;# 
  7239  0F4B                     	;# 
  7240  0F4C                     	;# 
  7241  0F4E                     	;# 
  7242  0F4F                     	;# 
  7243  0F50                     	;# 
  7244  0F51                     	;# 
  7245  0F52                     	;# 
  7246  0F53                     	;# 
  7247  0F54                     	;# 
  7248  0F55                     	;# 
  7249  0F56                     	;# 
  7250  0F57                     	;# 
  7251  0F59                     	;# 
  7252  0F5A                     	;# 
  7253  0F5B                     	;# 
  7254  0F5C                     	;# 
  7255  0F5D                     	;# 
  7256  0F61                     	;# 
  7257  0F62                     	;# 
  7258  0F64                     	;# 
  7259  0F65                     	;# 
  7260  0F66                     	;# 
  7261  0F67                     	;# 
  7262  0F68                     	;# 
  7263  0F69                     	;# 
  7264  0F6A                     	;# 
  7265  0F6B                     	;# 
  7266  0F6C                     	;# 
  7267  0F6D                     	;# 
  7268  0FE4                     	;# 
  7269  0FE5                     	;# 
  7270  0FE6                     	;# 
  7271  0FE7                     	;# 
  7272  0FE8                     	;# 
  7273  0FE9                     	;# 
  7274  0FEA                     	;# 
  7275  0FEB                     	;# 
  7276  0FED                     	;# 
  7277  0FEE                     	;# 
  7278  0FEF                     	;# 
  7279  0000                     	;# 
  7280  0001                     	;# 
  7281  0002                     	;# 
  7282  0003                     	;# 
  7283  0004                     	;# 
  7284  0005                     	;# 
  7285  0006                     	;# 
  7286  0007                     	;# 
  7287  0008                     	;# 
  7288  0009                     	;# 
  7289  000A                     	;# 
  7290  000B                     	;# 
  7291  000C                     	;# 
  7292  000D                     	;# 
  7293  000E                     	;# 
  7294  000F                     	;# 
  7295  0010                     	;# 
  7296  0011                     	;# 
  7297  0012                     	;# 
  7298  0013                     	;# 
  7299  0014                     	;# 
  7300  0015                     	;# 
  7301  0016                     	;# 
  7302  0017                     	;# 
  7303  0018                     	;# 
  7304  0019                     	;# 
  7305  001A                     	;# 
  7306  001C                     	;# 
  7307  001C                     	;# 
  7308  001D                     	;# 
  7309  001D                     	;# 
  7310  001E                     	;# 
  7311  001F                     	;# 
  7312  008C                     	;# 
  7313  008C                     	;# 
  7314  008D                     	;# 
  7315  008E                     	;# 
  7316  008E                     	;# 
  7317  008F                     	;# 
  7318  0090                     	;# 
  7319  0090                     	;# 
  7320  0091                     	;# 
  7321  0093                     	;# 
  7322  0094                     	;# 
  7323  0095                     	;# 
  7324  0096                     	;# 
  7325  0097                     	;# 
  7326  0098                     	;# 
  7327  0099                     	;# 
  7328  009A                     	;# 
  7329  009B                     	;# 
  7330  009C                     	;# 
  7331  009D                     	;# 
  7332  009E                     	;# 
  7333  010C                     	;# 
  7334  010D                     	;# 
  7335  010E                     	;# 
  7336  010E                     	;# 
  7337  010F                     	;# 
  7338  0110                     	;# 
  7339  0110                     	;# 
  7340  0111                     	;# 
  7341  0112                     	;# 
  7342  0112                     	;# 
  7343  0113                     	;# 
  7344  0114                     	;# 
  7345  0114                     	;# 
  7346  0115                     	;# 
  7347  0116                     	;# 
  7348  0116                     	;# 
  7349  0117                     	;# 
  7350  0119                     	;# 
  7351  0119                     	;# 
  7352  0119                     	;# 
  7353  011A                     	;# 
  7354  011A                     	;# 
  7355  011A                     	;# 
  7356  011B                     	;# 
  7357  011B                     	;# 
  7358  011B                     	;# 
  7359  011B                     	;# 
  7360  011B                     	;# 
  7361  011C                     	;# 
  7362  011C                     	;# 
  7363  011C                     	;# 
  7364  011D                     	;# 
  7365  011D                     	;# 
  7366  011D                     	;# 
  7367  011E                     	;# 
  7368  011E                     	;# 
  7369  011E                     	;# 
  7370  011F                     	;# 
  7371  011F                     	;# 
  7372  011F                     	;# 
  7373  011F                     	;# 
  7374  011F                     	;# 
  7375  018C                     	;# 
  7376  018D                     	;# 
  7377  018E                     	;# 
  7378  018F                     	;# 
  7379  0190                     	;# 
  7380  0191                     	;# 
  7381  0192                     	;# 
  7382  0196                     	;# 
  7383  0197                     	;# 
  7384  0198                     	;# 
  7385  0199                     	;# 
  7386  019A                     	;# 
  7387  019B                     	;# 
  7388  019C                     	;# 
  7389  020C                     	;# 
  7390  020C                     	;# 
  7391  020D                     	;# 
  7392  020E                     	;# 
  7393  020F                     	;# 
  7394  020F                     	;# 
  7395  0210                     	;# 
  7396  0210                     	;# 
  7397  0211                     	;# 
  7398  0211                     	;# 
  7399  0212                     	;# 
  7400  0212                     	;# 
  7401  0213                     	;# 
  7402  0214                     	;# 
  7403  0215                     	;# 
  7404  0215                     	;# 
  7405  0216                     	;# 
  7406  0216                     	;# 
  7407  0217                     	;# 
  7408  0217                     	;# 
  7409  0218                     	;# 
  7410  0218                     	;# 
  7411  0219                     	;# 
  7412  021A                     	;# 
  7413  021B                     	;# 
  7414  021B                     	;# 
  7415  021C                     	;# 
  7416  021C                     	;# 
  7417  021D                     	;# 
  7418  021D                     	;# 
  7419  021E                     	;# 
  7420  021F                     	;# 
  7421  028C                     	;# 
  7422  028C                     	;# 
  7423  028D                     	;# 
  7424  028D                     	;# 
  7425  028E                     	;# 
  7426  028F                     	;# 
  7427  0290                     	;# 
  7428  0290                     	;# 
  7429  0291                     	;# 
  7430  0292                     	;# 
  7431  0292                     	;# 
  7432  0293                     	;# 
  7433  0293                     	;# 
  7434  0294                     	;# 
  7435  0295                     	;# 
  7436  0296                     	;# 
  7437  0296                     	;# 
  7438  0297                     	;# 
  7439  0298                     	;# 
  7440  0298                     	;# 
  7441  0299                     	;# 
  7442  0299                     	;# 
  7443  029A                     	;# 
  7444  029B                     	;# 
  7445  029C                     	;# 
  7446  029C                     	;# 
  7447  029D                     	;# 
  7448  030C                     	;# 
  7449  030C                     	;# 
  7450  030D                     	;# 
  7451  030E                     	;# 
  7452  030F                     	;# 
  7453  0310                     	;# 
  7454  0310                     	;# 
  7455  0311                     	;# 
  7456  0312                     	;# 
  7457  0313                     	;# 
  7458  0314                     	;# 
  7459  0314                     	;# 
  7460  0315                     	;# 
  7461  0316                     	;# 
  7462  0317                     	;# 
  7463  0318                     	;# 
  7464  0318                     	;# 
  7465  0319                     	;# 
  7466  031A                     	;# 
  7467  031B                     	;# 
  7468  031C                     	;# 
  7469  031C                     	;# 
  7470  031D                     	;# 
  7471  031E                     	;# 
  7472  031F                     	;# 
  7473  038C                     	;# 
  7474  038C                     	;# 
  7475  038D                     	;# 
  7476  038E                     	;# 
  7477  0390                     	;# 
  7478  0390                     	;# 
  7479  0391                     	;# 
  7480  0392                     	;# 
  7481  040C                     	;# 
  7482  040D                     	;# 
  7483  040E                     	;# 
  7484  040F                     	;# 
  7485  0410                     	;# 
  7486  0411                     	;# 
  7487  0416                     	;# 
  7488  0416                     	;# 
  7489  0417                     	;# 
  7490  0418                     	;# 
  7491  0418                     	;# 
  7492  0419                     	;# 
  7493  041A                     	;# 
  7494  041A                     	;# 
  7495  041B                     	;# 
  7496  041C                     	;# 
  7497  041C                     	;# 
  7498  041D                     	;# 
  7499  041E                     	;# 
  7500  041F                     	;# 
  7501  048C                     	;# 
  7502  048C                     	;# 
  7503  048D                     	;# 
  7504  048E                     	;# 
  7505  048F                     	;# 
  7506  048F                     	;# 
  7507  0490                     	;# 
  7508  0491                     	;# 
  7509  0492                     	;# 
  7510  0492                     	;# 
  7511  0493                     	;# 
  7512  0494                     	;# 
  7513  0495                     	;# 
  7514  0495                     	;# 
  7515  0496                     	;# 
  7516  0497                     	;# 
  7517  0498                     	;# 
  7518  0499                     	;# 
  7519  049A                     	;# 
  7520  049B                     	;# 
  7521  049C                     	;# 
  7522  049D                     	;# 
  7523  050C                     	;# 
  7524  050C                     	;# 
  7525  050D                     	;# 
  7526  050E                     	;# 
  7527  050F                     	;# 
  7528  050F                     	;# 
  7529  0510                     	;# 
  7530  0511                     	;# 
  7531  0512                     	;# 
  7532  0512                     	;# 
  7533  0513                     	;# 
  7534  0514                     	;# 
  7535  0515                     	;# 
  7536  0515                     	;# 
  7537  0516                     	;# 
  7538  0517                     	;# 
  7539  0518                     	;# 
  7540  0519                     	;# 
  7541  051A                     	;# 
  7542  051B                     	;# 
  7543  051C                     	;# 
  7544  051D                     	;# 
  7545  058C                     	;# 
  7546  058C                     	;# 
  7547  058D                     	;# 
  7548  058E                     	;# 
  7549  058F                     	;# 
  7550  058F                     	;# 
  7551  0590                     	;# 
  7552  0591                     	;# 
  7553  0592                     	;# 
  7554  0593                     	;# 
  7555  060C                     	;# 
  7556  060D                     	;# 
  7557  060E                     	;# 
  7558  060F                     	;# 
  7559  0610                     	;# 
  7560  0611                     	;# 
  7561  0612                     	;# 
  7562  0613                     	;# 
  7563  0614                     	;# 
  7564  0616                     	;# 
  7565  0617                     	;# 
  7566  0618                     	;# 
  7567  0619                     	;# 
  7568  061A                     	;# 
  7569  061B                     	;# 
  7570  061C                     	;# 
  7571  061D                     	;# 
  7572  061E                     	;# 
  7573  068C                     	;# 
  7574  068D                     	;# 
  7575  068E                     	;# 
  7576  068F                     	;# 
  7577  0690                     	;# 
  7578  0691                     	;# 
  7579  0692                     	;# 
  7580  0693                     	;# 
  7581  0694                     	;# 
  7582  070C                     	;# 
  7583  070D                     	;# 
  7584  070E                     	;# 
  7585  070F                     	;# 
  7586  0710                     	;# 
  7587  0711                     	;# 
  7588  0712                     	;# 
  7589  0713                     	;# 
  7590  0714                     	;# 
  7591  0716                     	;# 
  7592  0717                     	;# 
  7593  0718                     	;# 
  7594  0719                     	;# 
  7595  071A                     	;# 
  7596  071B                     	;# 
  7597  071C                     	;# 
  7598  071D                     	;# 
  7599  071E                     	;# 
  7600  0796                     	;# 
  7601  0797                     	;# 
  7602  0798                     	;# 
  7603  0799                     	;# 
  7604  079A                     	;# 
  7605  079B                     	;# 
  7606  080C                     	;# 
  7607  080D                     	;# 
  7608  080E                     	;# 
  7609  080F                     	;# 
  7610  0810                     	;# 
  7611  0811                     	;# 
  7612  0812                     	;# 
  7613  0813                     	;# 
  7614  0814                     	;# 
  7615  081A                     	;# 
  7616  081B                     	;# 
  7617  081C                     	;# 
  7618  081D                     	;# 
  7619  081E                     	;# 
  7620  081F                     	;# 
  7621  088C                     	;# 
  7622  088D                     	;# 
  7623  088E                     	;# 
  7624  088F                     	;# 
  7625  0890                     	;# 
  7626  0891                     	;# 
  7627  0892                     	;# 
  7628  0893                     	;# 
  7629  0895                     	;# 
  7630  0896                     	;# 
  7631  0897                     	;# 
  7632  0898                     	;# 
  7633  0899                     	;# 
  7634  089A                     	;# 
  7635  089B                     	;# 
  7636  090C                     	;# 
  7637  090E                     	;# 
  7638  090F                     	;# 
  7639  091F                     	;# 
  7640  091F                     	;# 
  7641  098F                     	;# 
  7642  098F                     	;# 
  7643  0990                     	;# 
  7644  0991                     	;# 
  7645  0992                     	;# 
  7646  0993                     	;# 
  7647  0994                     	;# 
  7648  0995                     	;# 
  7649  0996                     	;# 
  7650  0997                     	;# 
  7651  0E0F                     	;# 
  7652  0E10                     	;# 
  7653  0E11                     	;# 
  7654  0E12                     	;# 
  7655  0E13                     	;# 
  7656  0E14                     	;# 
  7657  0E15                     	;# 
  7658  0E16                     	;# 
  7659  0E17                     	;# 
  7660  0E18                     	;# 
  7661  0E19                     	;# 
  7662  0E1A                     	;# 
  7663  0E1B                     	;# 
  7664  0E1C                     	;# 
  7665  0E1D                     	;# 
  7666  0E1E                     	;# 
  7667  0E1F                     	;# 
  7668  0E20                     	;# 
  7669  0E21                     	;# 
  7670  0E22                     	;# 
  7671  0E23                     	;# 
  7672  0E24                     	;# 
  7673  0E25                     	;# 
  7674  0E26                     	;# 
  7675  0E27                     	;# 
  7676  0E28                     	;# 
  7677  0E29                     	;# 
  7678  0E2A                     	;# 
  7679  0E2B                     	;# 
  7680  0E2C                     	;# 
  7681  0E2D                     	;# 
  7682  0E2E                     	;# 
  7683  0E2F                     	;# 
  7684  0E30                     	;# 
  7685  0E31                     	;# 
  7686  0E32                     	;# 
  7687  0E33                     	;# 
  7688  0E34                     	;# 
  7689  0E35                     	;# 
  7690  0E36                     	;# 
  7691  0E37                     	;# 
  7692  0E8F                     	;# 
  7693  0E90                     	;# 
  7694  0E91                     	;# 
  7695  0E92                     	;# 
  7696  0E93                     	;# 
  7697  0E94                     	;# 
  7698  0E95                     	;# 
  7699  0E96                     	;# 
  7700  0E97                     	;# 
  7701  0E9C                     	;# 
  7702  0E9D                     	;# 
  7703  0E9E                     	;# 
  7704  0EA1                     	;# 
  7705  0EA2                     	;# 
  7706  0EA3                     	;# 
  7707  0EA4                     	;# 
  7708  0EA5                     	;# 
  7709  0EA9                     	;# 
  7710  0EAA                     	;# 
  7711  0EAB                     	;# 
  7712  0EAC                     	;# 
  7713  0EB1                     	;# 
  7714  0EB2                     	;# 
  7715  0EB3                     	;# 
  7716  0EB8                     	;# 
  7717  0EB9                     	;# 
  7718  0EBA                     	;# 
  7719  0EBB                     	;# 
  7720  0EBC                     	;# 
  7721  0EBD                     	;# 
  7722  0EBE                     	;# 
  7723  0EC3                     	;# 
  7724  0EC5                     	;# 
  7725  0EC6                     	;# 
  7726  0EC7                     	;# 
  7727  0EC8                     	;# 
  7728  0EC9                     	;# 
  7729  0ECA                     	;# 
  7730  0ECB                     	;# 
  7731  0ECC                     	;# 
  7732  0F10                     	;# 
  7733  0F11                     	;# 
  7734  0F12                     	;# 
  7735  0F13                     	;# 
  7736  0F14                     	;# 
  7737  0F15                     	;# 
  7738  0F16                     	;# 
  7739  0F17                     	;# 
  7740  0F18                     	;# 
  7741  0F19                     	;# 
  7742  0F1A                     	;# 
  7743  0F1B                     	;# 
  7744  0F1C                     	;# 
  7745  0F1D                     	;# 
  7746  0F1E                     	;# 
  7747  0F1F                     	;# 
  7748  0F20                     	;# 
  7749  0F21                     	;# 
  7750  0F22                     	;# 
  7751  0F23                     	;# 
  7752  0F24                     	;# 
  7753  0F25                     	;# 
  7754  0F26                     	;# 
  7755  0F27                     	;# 
  7756  0F28                     	;# 
  7757  0F29                     	;# 
  7758  0F2A                     	;# 
  7759  0F2B                     	;# 
  7760  0F2C                     	;# 
  7761  0F2D                     	;# 
  7762  0F2E                     	;# 
  7763  0F2F                     	;# 
  7764  0F30                     	;# 
  7765  0F31                     	;# 
  7766  0F32                     	;# 
  7767  0F38                     	;# 
  7768  0F39                     	;# 
  7769  0F3A                     	;# 
  7770  0F3B                     	;# 
  7771  0F3C                     	;# 
  7772  0F3D                     	;# 
  7773  0F3E                     	;# 
  7774  0F3F                     	;# 
  7775  0F40                     	;# 
  7776  0F41                     	;# 
  7777  0F43                     	;# 
  7778  0F44                     	;# 
  7779  0F45                     	;# 
  7780  0F46                     	;# 
  7781  0F47                     	;# 
  7782  0F48                     	;# 
  7783  0F49                     	;# 
  7784  0F4A                     	;# 
  7785  0F4B                     	;# 
  7786  0F4C                     	;# 
  7787  0F4E                     	;# 
  7788  0F4F                     	;# 
  7789  0F50                     	;# 
  7790  0F51                     	;# 
  7791  0F52                     	;# 
  7792  0F53                     	;# 
  7793  0F54                     	;# 
  7794  0F55                     	;# 
  7795  0F56                     	;# 
  7796  0F57                     	;# 
  7797  0F59                     	;# 
  7798  0F5A                     	;# 
  7799  0F5B                     	;# 
  7800  0F5C                     	;# 
  7801  0F5D                     	;# 
  7802  0F61                     	;# 
  7803  0F62                     	;# 
  7804  0F64                     	;# 
  7805  0F65                     	;# 
  7806  0F66                     	;# 
  7807  0F67                     	;# 
  7808  0F68                     	;# 
  7809  0F69                     	;# 
  7810  0F6A                     	;# 
  7811  0F6B                     	;# 
  7812  0F6C                     	;# 
  7813  0F6D                     	;# 
  7814  0FE4                     	;# 
  7815  0FE5                     	;# 
  7816  0FE6                     	;# 
  7817  0FE7                     	;# 
  7818  0FE8                     	;# 
  7819  0FE9                     	;# 
  7820  0FEA                     	;# 
  7821  0FEB                     	;# 
  7822  0FED                     	;# 
  7823  0FEE                     	;# 
  7824  0FEF                     	;# 
  7825  0000                     	;# 
  7826  0001                     	;# 
  7827  0002                     	;# 
  7828  0003                     	;# 
  7829  0004                     	;# 
  7830  0005                     	;# 
  7831  0006                     	;# 
  7832  0007                     	;# 
  7833  0008                     	;# 
  7834  0009                     	;# 
  7835  000A                     	;# 
  7836  000B                     	;# 
  7837  000C                     	;# 
  7838  000D                     	;# 
  7839  000E                     	;# 
  7840  000F                     	;# 
  7841  0010                     	;# 
  7842  0011                     	;# 
  7843  0012                     	;# 
  7844  0013                     	;# 
  7845  0014                     	;# 
  7846  0015                     	;# 
  7847  0016                     	;# 
  7848  0017                     	;# 
  7849  0018                     	;# 
  7850  0019                     	;# 
  7851  001A                     	;# 
  7852  001C                     	;# 
  7853  001C                     	;# 
  7854  001D                     	;# 
  7855  001D                     	;# 
  7856  001E                     	;# 
  7857  001F                     	;# 
  7858  008C                     	;# 
  7859  008C                     	;# 
  7860  008D                     	;# 
  7861  008E                     	;# 
  7862  008E                     	;# 
  7863  008F                     	;# 
  7864  0090                     	;# 
  7865  0090                     	;# 
  7866  0091                     	;# 
  7867  0093                     	;# 
  7868  0094                     	;# 
  7869  0095                     	;# 
  7870  0096                     	;# 
  7871  0097                     	;# 
  7872  0098                     	;# 
  7873  0099                     	;# 
  7874  009A                     	;# 
  7875  009B                     	;# 
  7876  009C                     	;# 
  7877  009D                     	;# 
  7878  009E                     	;# 
  7879  010C                     	;# 
  7880  010D                     	;# 
  7881  010E                     	;# 
  7882  010E                     	;# 
  7883  010F                     	;# 
  7884  0110                     	;# 
  7885  0110                     	;# 
  7886  0111                     	;# 
  7887  0112                     	;# 
  7888  0112                     	;# 
  7889  0113                     	;# 
  7890  0114                     	;# 
  7891  0114                     	;# 
  7892  0115                     	;# 
  7893  0116                     	;# 
  7894  0116                     	;# 
  7895  0117                     	;# 
  7896  0119                     	;# 
  7897  0119                     	;# 
  7898  0119                     	;# 
  7899  011A                     	;# 
  7900  011A                     	;# 
  7901  011A                     	;# 
  7902  011B                     	;# 
  7903  011B                     	;# 
  7904  011B                     	;# 
  7905  011B                     	;# 
  7906  011B                     	;# 
  7907  011C                     	;# 
  7908  011C                     	;# 
  7909  011C                     	;# 
  7910  011D                     	;# 
  7911  011D                     	;# 
  7912  011D                     	;# 
  7913  011E                     	;# 
  7914  011E                     	;# 
  7915  011E                     	;# 
  7916  011F                     	;# 
  7917  011F                     	;# 
  7918  011F                     	;# 
  7919  011F                     	;# 
  7920  011F                     	;# 
  7921  018C                     	;# 
  7922  018D                     	;# 
  7923  018E                     	;# 
  7924  018F                     	;# 
  7925  0190                     	;# 
  7926  0191                     	;# 
  7927  0192                     	;# 
  7928  0196                     	;# 
  7929  0197                     	;# 
  7930  0198                     	;# 
  7931  0199                     	;# 
  7932  019A                     	;# 
  7933  019B                     	;# 
  7934  019C                     	;# 
  7935  020C                     	;# 
  7936  020C                     	;# 
  7937  020D                     	;# 
  7938  020E                     	;# 
  7939  020F                     	;# 
  7940  020F                     	;# 
  7941  0210                     	;# 
  7942  0210                     	;# 
  7943  0211                     	;# 
  7944  0211                     	;# 
  7945  0212                     	;# 
  7946  0212                     	;# 
  7947  0213                     	;# 
  7948  0214                     	;# 
  7949  0215                     	;# 
  7950  0215                     	;# 
  7951  0216                     	;# 
  7952  0216                     	;# 
  7953  0217                     	;# 
  7954  0217                     	;# 
  7955  0218                     	;# 
  7956  0218                     	;# 
  7957  0219                     	;# 
  7958  021A                     	;# 
  7959  021B                     	;# 
  7960  021B                     	;# 
  7961  021C                     	;# 
  7962  021C                     	;# 
  7963  021D                     	;# 
  7964  021D                     	;# 
  7965  021E                     	;# 
  7966  021F                     	;# 
  7967  028C                     	;# 
  7968  028C                     	;# 
  7969  028D                     	;# 
  7970  028D                     	;# 
  7971  028E                     	;# 
  7972  028F                     	;# 
  7973  0290                     	;# 
  7974  0290                     	;# 
  7975  0291                     	;# 
  7976  0292                     	;# 
  7977  0292                     	;# 
  7978  0293                     	;# 
  7979  0293                     	;# 
  7980  0294                     	;# 
  7981  0295                     	;# 
  7982  0296                     	;# 
  7983  0296                     	;# 
  7984  0297                     	;# 
  7985  0298                     	;# 
  7986  0298                     	;# 
  7987  0299                     	;# 
  7988  0299                     	;# 
  7989  029A                     	;# 
  7990  029B                     	;# 
  7991  029C                     	;# 
  7992  029C                     	;# 
  7993  029D                     	;# 
  7994  030C                     	;# 
  7995  030C                     	;# 
  7996  030D                     	;# 
  7997  030E                     	;# 
  7998  030F                     	;# 
  7999  0310                     	;# 
  8000  0310                     	;# 
  8001  0311                     	;# 
  8002  0312                     	;# 
  8003  0313                     	;# 
  8004  0314                     	;# 
  8005  0314                     	;# 
  8006  0315                     	;# 
  8007  0316                     	;# 
  8008  0317                     	;# 
  8009  0318                     	;# 
  8010  0318                     	;# 
  8011  0319                     	;# 
  8012  031A                     	;# 
  8013  031B                     	;# 
  8014  031C                     	;# 
  8015  031C                     	;# 
  8016  031D                     	;# 
  8017  031E                     	;# 
  8018  031F                     	;# 
  8019  038C                     	;# 
  8020  038C                     	;# 
  8021  038D                     	;# 
  8022  038E                     	;# 
  8023  0390                     	;# 
  8024  0390                     	;# 
  8025  0391                     	;# 
  8026  0392                     	;# 
  8027  040C                     	;# 
  8028  040D                     	;# 
  8029  040E                     	;# 
  8030  040F                     	;# 
  8031  0410                     	;# 
  8032  0411                     	;# 
  8033  0416                     	;# 
  8034  0416                     	;# 
  8035  0417                     	;# 
  8036  0418                     	;# 
  8037  0418                     	;# 
  8038  0419                     	;# 
  8039  041A                     	;# 
  8040  041A                     	;# 
  8041  041B                     	;# 
  8042  041C                     	;# 
  8043  041C                     	;# 
  8044  041D                     	;# 
  8045  041E                     	;# 
  8046  041F                     	;# 
  8047  048C                     	;# 
  8048  048C                     	;# 
  8049  048D                     	;# 
  8050  048E                     	;# 
  8051  048F                     	;# 
  8052  048F                     	;# 
  8053  0490                     	;# 
  8054  0491                     	;# 
  8055  0492                     	;# 
  8056  0492                     	;# 
  8057  0493                     	;# 
  8058  0494                     	;# 
  8059  0495                     	;# 
  8060  0495                     	;# 
  8061  0496                     	;# 
  8062  0497                     	;# 
  8063  0498                     	;# 
  8064  0499                     	;# 
  8065  049A                     	;# 
  8066  049B                     	;# 
  8067  049C                     	;# 
  8068  049D                     	;# 
  8069  050C                     	;# 
  8070  050C                     	;# 
  8071  050D                     	;# 
  8072  050E                     	;# 
  8073  050F                     	;# 
  8074  050F                     	;# 
  8075  0510                     	;# 
  8076  0511                     	;# 
  8077  0512                     	;# 
  8078  0512                     	;# 
  8079  0513                     	;# 
  8080  0514                     	;# 
  8081  0515                     	;# 
  8082  0515                     	;# 
  8083  0516                     	;# 
  8084  0517                     	;# 
  8085  0518                     	;# 
  8086  0519                     	;# 
  8087  051A                     	;# 
  8088  051B                     	;# 
  8089  051C                     	;# 
  8090  051D                     	;# 
  8091  058C                     	;# 
  8092  058C                     	;# 
  8093  058D                     	;# 
  8094  058E                     	;# 
  8095  058F                     	;# 
  8096  058F                     	;# 
  8097  0590                     	;# 
  8098  0591                     	;# 
  8099  0592                     	;# 
  8100  0593                     	;# 
  8101  060C                     	;# 
  8102  060D                     	;# 
  8103  060E                     	;# 
  8104  060F                     	;# 
  8105  0610                     	;# 
  8106  0611                     	;# 
  8107  0612                     	;# 
  8108  0613                     	;# 
  8109  0614                     	;# 
  8110  0616                     	;# 
  8111  0617                     	;# 
  8112  0618                     	;# 
  8113  0619                     	;# 
  8114  061A                     	;# 
  8115  061B                     	;# 
  8116  061C                     	;# 
  8117  061D                     	;# 
  8118  061E                     	;# 
  8119  068C                     	;# 
  8120  068D                     	;# 
  8121  068E                     	;# 
  8122  068F                     	;# 
  8123  0690                     	;# 
  8124  0691                     	;# 
  8125  0692                     	;# 
  8126  0693                     	;# 
  8127  0694                     	;# 
  8128  070C                     	;# 
  8129  070D                     	;# 
  8130  070E                     	;# 
  8131  070F                     	;# 
  8132  0710                     	;# 
  8133  0711                     	;# 
  8134  0712                     	;# 
  8135  0713                     	;# 
  8136  0714                     	;# 
  8137  0716                     	;# 
  8138  0717                     	;# 
  8139  0718                     	;# 
  8140  0719                     	;# 
  8141  071A                     	;# 
  8142  071B                     	;# 
  8143  071C                     	;# 
  8144  071D                     	;# 
  8145  071E                     	;# 
  8146  0796                     	;# 
  8147  0797                     	;# 
  8148  0798                     	;# 
  8149  0799                     	;# 
  8150  079A                     	;# 
  8151  079B                     	;# 
  8152  080C                     	;# 
  8153  080D                     	;# 
  8154  080E                     	;# 
  8155  080F                     	;# 
  8156  0810                     	;# 
  8157  0811                     	;# 
  8158  0812                     	;# 
  8159  0813                     	;# 
  8160  0814                     	;# 
  8161  081A                     	;# 
  8162  081B                     	;# 
  8163  081C                     	;# 
  8164  081D                     	;# 
  8165  081E                     	;# 
  8166  081F                     	;# 
  8167  088C                     	;# 
  8168  088D                     	;# 
  8169  088E                     	;# 
  8170  088F                     	;# 
  8171  0890                     	;# 
  8172  0891                     	;# 
  8173  0892                     	;# 
  8174  0893                     	;# 
  8175  0895                     	;# 
  8176  0896                     	;# 
  8177  0897                     	;# 
  8178  0898                     	;# 
  8179  0899                     	;# 
  8180  089A                     	;# 
  8181  089B                     	;# 
  8182  090C                     	;# 
  8183  090E                     	;# 
  8184  090F                     	;# 
  8185  091F                     	;# 
  8186  091F                     	;# 
  8187  098F                     	;# 
  8188  098F                     	;# 
  8189  0990                     	;# 
  8190  0991                     	;# 
  8191  0992                     	;# 
  8192  0993                     	;# 
  8193  0994                     	;# 
  8194  0995                     	;# 
  8195  0996                     	;# 
  8196  0997                     	;# 
  8197  0E0F                     	;# 
  8198  0E10                     	;# 
  8199  0E11                     	;# 
  8200  0E12                     	;# 
  8201  0E13                     	;# 
  8202  0E14                     	;# 
  8203  0E15                     	;# 
  8204  0E16                     	;# 
  8205  0E17                     	;# 
  8206  0E18                     	;# 
  8207  0E19                     	;# 
  8208  0E1A                     	;# 
  8209  0E1B                     	;# 
  8210  0E1C                     	;# 
  8211  0E1D                     	;# 
  8212  0E1E                     	;# 
  8213  0E1F                     	;# 
  8214  0E20                     	;# 
  8215  0E21                     	;# 
  8216  0E22                     	;# 
  8217  0E23                     	;# 
  8218  0E24                     	;# 
  8219  0E25                     	;# 
  8220  0E26                     	;# 
  8221  0E27                     	;# 
  8222  0E28                     	;# 
  8223  0E29                     	;# 
  8224  0E2A                     	;# 
  8225  0E2B                     	;# 
  8226  0E2C                     	;# 
  8227  0E2D                     	;# 
  8228  0E2E                     	;# 
  8229  0E2F                     	;# 
  8230  0E30                     	;# 
  8231  0E31                     	;# 
  8232  0E32                     	;# 
  8233  0E33                     	;# 
  8234  0E34                     	;# 
  8235  0E35                     	;# 
  8236  0E36                     	;# 
  8237  0E37                     	;# 
  8238  0E8F                     	;# 
  8239  0E90                     	;# 
  8240  0E91                     	;# 
  8241  0E92                     	;# 
  8242  0E93                     	;# 
  8243  0E94                     	;# 
  8244  0E95                     	;# 
  8245  0E96                     	;# 
  8246  0E97                     	;# 
  8247  0E9C                     	;# 
  8248  0E9D                     	;# 
  8249  0E9E                     	;# 
  8250  0EA1                     	;# 
  8251  0EA2                     	;# 
  8252  0EA3                     	;# 
  8253  0EA4                     	;# 
  8254  0EA5                     	;# 
  8255  0EA9                     	;# 
  8256  0EAA                     	;# 
  8257  0EAB                     	;# 
  8258  0EAC                     	;# 
  8259  0EB1                     	;# 
  8260  0EB2                     	;# 
  8261  0EB3                     	;# 
  8262  0EB8                     	;# 
  8263  0EB9                     	;# 
  8264  0EBA                     	;# 
  8265  0EBB                     	;# 
  8266  0EBC                     	;# 
  8267  0EBD                     	;# 
  8268  0EBE                     	;# 
  8269  0EC3                     	;# 
  8270  0EC5                     	;# 
  8271  0EC6                     	;# 
  8272  0EC7                     	;# 
  8273  0EC8                     	;# 
  8274  0EC9                     	;# 
  8275  0ECA                     	;# 
  8276  0ECB                     	;# 
  8277  0ECC                     	;# 
  8278  0F10                     	;# 
  8279  0F11                     	;# 
  8280  0F12                     	;# 
  8281  0F13                     	;# 
  8282  0F14                     	;# 
  8283  0F15                     	;# 
  8284  0F16                     	;# 
  8285  0F17                     	;# 
  8286  0F18                     	;# 
  8287  0F19                     	;# 
  8288  0F1A                     	;# 
  8289  0F1B                     	;# 
  8290  0F1C                     	;# 
  8291  0F1D                     	;# 
  8292  0F1E                     	;# 
  8293  0F1F                     	;# 
  8294  0F20                     	;# 
  8295  0F21                     	;# 
  8296  0F22                     	;# 
  8297  0F23                     	;# 
  8298  0F24                     	;# 
  8299  0F25                     	;# 
  8300  0F26                     	;# 
  8301  0F27                     	;# 
  8302  0F28                     	;# 
  8303  0F29                     	;# 
  8304  0F2A                     	;# 
  8305  0F2B                     	;# 
  8306  0F2C                     	;# 
  8307  0F2D                     	;# 
  8308  0F2E                     	;# 
  8309  0F2F                     	;# 
  8310  0F30                     	;# 
  8311  0F31                     	;# 
  8312  0F32                     	;# 
  8313  0F38                     	;# 
  8314  0F39                     	;# 
  8315  0F3A                     	;# 
  8316  0F3B                     	;# 
  8317  0F3C                     	;# 
  8318  0F3D                     	;# 
  8319  0F3E                     	;# 
  8320  0F3F                     	;# 
  8321  0F40                     	;# 
  8322  0F41                     	;# 
  8323  0F43                     	;# 
  8324  0F44                     	;# 
  8325  0F45                     	;# 
  8326  0F46                     	;# 
  8327  0F47                     	;# 
  8328  0F48                     	;# 
  8329  0F49                     	;# 
  8330  0F4A                     	;# 
  8331  0F4B                     	;# 
  8332  0F4C                     	;# 
  8333  0F4E                     	;# 
  8334  0F4F                     	;# 
  8335  0F50                     	;# 
  8336  0F51                     	;# 
  8337  0F52                     	;# 
  8338  0F53                     	;# 
  8339  0F54                     	;# 
  8340  0F55                     	;# 
  8341  0F56                     	;# 
  8342  0F57                     	;# 
  8343  0F59                     	;# 
  8344  0F5A                     	;# 
  8345  0F5B                     	;# 
  8346  0F5C                     	;# 
  8347  0F5D                     	;# 
  8348  0F61                     	;# 
  8349  0F62                     	;# 
  8350  0F64                     	;# 
  8351  0F65                     	;# 
  8352  0F66                     	;# 
  8353  0F67                     	;# 
  8354  0F68                     	;# 
  8355  0F69                     	;# 
  8356  0F6A                     	;# 
  8357  0F6B                     	;# 
  8358  0F6C                     	;# 
  8359  0F6D                     	;# 
  8360  0FE4                     	;# 
  8361  0FE5                     	;# 
  8362  0FE6                     	;# 
  8363  0FE7                     	;# 
  8364  0FE8                     	;# 
  8365  0FE9                     	;# 
  8366  0FEA                     	;# 
  8367  0FEB                     	;# 
  8368  0FED                     	;# 
  8369  0FEE                     	;# 
  8370  0FEF                     	;# 
  8371  0000                     	;# 
  8372  0001                     	;# 
  8373  0002                     	;# 
  8374  0003                     	;# 
  8375  0004                     	;# 
  8376  0005                     	;# 
  8377  0006                     	;# 
  8378  0007                     	;# 
  8379  0008                     	;# 
  8380  0009                     	;# 
  8381  000A                     	;# 
  8382  000B                     	;# 
  8383  000C                     	;# 
  8384  000D                     	;# 
  8385  000E                     	;# 
  8386  000F                     	;# 
  8387  0010                     	;# 
  8388  0011                     	;# 
  8389  0012                     	;# 
  8390  0013                     	;# 
  8391  0014                     	;# 
  8392  0015                     	;# 
  8393  0016                     	;# 
  8394  0017                     	;# 
  8395  0018                     	;# 
  8396  0019                     	;# 
  8397  001A                     	;# 
  8398  001C                     	;# 
  8399  001C                     	;# 
  8400  001D                     	;# 
  8401  001D                     	;# 
  8402  001E                     	;# 
  8403  001F                     	;# 
  8404  008C                     	;# 
  8405  008C                     	;# 
  8406  008D                     	;# 
  8407  008E                     	;# 
  8408  008E                     	;# 
  8409  008F                     	;# 
  8410  0090                     	;# 
  8411  0090                     	;# 
  8412  0091                     	;# 
  8413  0093                     	;# 
  8414  0094                     	;# 
  8415  0095                     	;# 
  8416  0096                     	;# 
  8417  0097                     	;# 
  8418  0098                     	;# 
  8419  0099                     	;# 
  8420  009A                     	;# 
  8421  009B                     	;# 
  8422  009C                     	;# 
  8423  009D                     	;# 
  8424  009E                     	;# 
  8425  010C                     	;# 
  8426  010D                     	;# 
  8427  010E                     	;# 
  8428  010E                     	;# 
  8429  010F                     	;# 
  8430  0110                     	;# 
  8431  0110                     	;# 
  8432  0111                     	;# 
  8433  0112                     	;# 
  8434  0112                     	;# 
  8435  0113                     	;# 
  8436  0114                     	;# 
  8437  0114                     	;# 
  8438  0115                     	;# 
  8439  0116                     	;# 
  8440  0116                     	;# 
  8441  0117                     	;# 
  8442  0119                     	;# 
  8443  0119                     	;# 
  8444  0119                     	;# 
  8445  011A                     	;# 
  8446  011A                     	;# 
  8447  011A                     	;# 
  8448  011B                     	;# 
  8449  011B                     	;# 
  8450  011B                     	;# 
  8451  011B                     	;# 
  8452  011B                     	;# 
  8453  011C                     	;# 
  8454  011C                     	;# 
  8455  011C                     	;# 
  8456  011D                     	;# 
  8457  011D                     	;# 
  8458  011D                     	;# 
  8459  011E                     	;# 
  8460  011E                     	;# 
  8461  011E                     	;# 
  8462  011F                     	;# 
  8463  011F                     	;# 
  8464  011F                     	;# 
  8465  011F                     	;# 
  8466  011F                     	;# 
  8467  018C                     	;# 
  8468  018D                     	;# 
  8469  018E                     	;# 
  8470  018F                     	;# 
  8471  0190                     	;# 
  8472  0191                     	;# 
  8473  0192                     	;# 
  8474  0196                     	;# 
  8475  0197                     	;# 
  8476  0198                     	;# 
  8477  0199                     	;# 
  8478  019A                     	;# 
  8479  019B                     	;# 
  8480  019C                     	;# 
  8481  020C                     	;# 
  8482  020C                     	;# 
  8483  020D                     	;# 
  8484  020E                     	;# 
  8485  020F                     	;# 
  8486  020F                     	;# 
  8487  0210                     	;# 
  8488  0210                     	;# 
  8489  0211                     	;# 
  8490  0211                     	;# 
  8491  0212                     	;# 
  8492  0212                     	;# 
  8493  0213                     	;# 
  8494  0214                     	;# 
  8495  0215                     	;# 
  8496  0215                     	;# 
  8497  0216                     	;# 
  8498  0216                     	;# 
  8499  0217                     	;# 
  8500  0217                     	;# 
  8501  0218                     	;# 
  8502  0218                     	;# 
  8503  0219                     	;# 
  8504  021A                     	;# 
  8505  021B                     	;# 
  8506  021B                     	;# 
  8507  021C                     	;# 
  8508  021C                     	;# 
  8509  021D                     	;# 
  8510  021D                     	;# 
  8511  021E                     	;# 
  8512  021F                     	;# 
  8513  028C                     	;# 
  8514  028C                     	;# 
  8515  028D                     	;# 
  8516  028D                     	;# 
  8517  028E                     	;# 
  8518  028F                     	;# 
  8519  0290                     	;# 
  8520  0290                     	;# 
  8521  0291                     	;# 
  8522  0292                     	;# 
  8523  0292                     	;# 
  8524  0293                     	;# 
  8525  0293                     	;# 
  8526  0294                     	;# 
  8527  0295                     	;# 
  8528  0296                     	;# 
  8529  0296                     	;# 
  8530  0297                     	;# 
  8531  0298                     	;# 
  8532  0298                     	;# 
  8533  0299                     	;# 
  8534  0299                     	;# 
  8535  029A                     	;# 
  8536  029B                     	;# 
  8537  029C                     	;# 
  8538  029C                     	;# 
  8539  029D                     	;# 
  8540  030C                     	;# 
  8541  030C                     	;# 
  8542  030D                     	;# 
  8543  030E                     	;# 
  8544  030F                     	;# 
  8545  0310                     	;# 
  8546  0310                     	;# 
  8547  0311                     	;# 
  8548  0312                     	;# 
  8549  0313                     	;# 
  8550  0314                     	;# 
  8551  0314                     	;# 
  8552  0315                     	;# 
  8553  0316                     	;# 
  8554  0317                     	;# 
  8555  0318                     	;# 
  8556  0318                     	;# 
  8557  0319                     	;# 
  8558  031A                     	;# 
  8559  031B                     	;# 
  8560  031C                     	;# 
  8561  031C                     	;# 
  8562  031D                     	;# 
  8563  031E                     	;# 
  8564  031F                     	;# 
  8565  038C                     	;# 
  8566  038C                     	;# 
  8567  038D                     	;# 
  8568  038E                     	;# 
  8569  0390                     	;# 
  8570  0390                     	;# 
  8571  0391                     	;# 
  8572  0392                     	;# 
  8573  040C                     	;# 
  8574  040D                     	;# 
  8575  040E                     	;# 
  8576  040F                     	;# 
  8577  0410                     	;# 
  8578  0411                     	;# 
  8579  0416                     	;# 
  8580  0416                     	;# 
  8581  0417                     	;# 
  8582  0418                     	;# 
  8583  0418                     	;# 
  8584  0419                     	;# 
  8585  041A                     	;# 
  8586  041A                     	;# 
  8587  041B                     	;# 
  8588  041C                     	;# 
  8589  041C                     	;# 
  8590  041D                     	;# 
  8591  041E                     	;# 
  8592  041F                     	;# 
  8593  048C                     	;# 
  8594  048C                     	;# 
  8595  048D                     	;# 
  8596  048E                     	;# 
  8597  048F                     	;# 
  8598  048F                     	;# 
  8599  0490                     	;# 
  8600  0491                     	;# 
  8601  0492                     	;# 
  8602  0492                     	;# 
  8603  0493                     	;# 
  8604  0494                     	;# 
  8605  0495                     	;# 
  8606  0495                     	;# 
  8607  0496                     	;# 
  8608  0497                     	;# 
  8609  0498                     	;# 
  8610  0499                     	;# 
  8611  049A                     	;# 
  8612  049B                     	;# 
  8613  049C                     	;# 
  8614  049D                     	;# 
  8615  050C                     	;# 
  8616  050C                     	;# 
  8617  050D                     	;# 
  8618  050E                     	;# 
  8619  050F                     	;# 
  8620  050F                     	;# 
  8621  0510                     	;# 
  8622  0511                     	;# 
  8623  0512                     	;# 
  8624  0512                     	;# 
  8625  0513                     	;# 
  8626  0514                     	;# 
  8627  0515                     	;# 
  8628  0515                     	;# 
  8629  0516                     	;# 
  8630  0517                     	;# 
  8631  0518                     	;# 
  8632  0519                     	;# 
  8633  051A                     	;# 
  8634  051B                     	;# 
  8635  051C                     	;# 
  8636  051D                     	;# 
  8637  058C                     	;# 
  8638  058C                     	;# 
  8639  058D                     	;# 
  8640  058E                     	;# 
  8641  058F                     	;# 
  8642  058F                     	;# 
  8643  0590                     	;# 
  8644  0591                     	;# 
  8645  0592                     	;# 
  8646  0593                     	;# 
  8647  060C                     	;# 
  8648  060D                     	;# 
  8649  060E                     	;# 
  8650  060F                     	;# 
  8651  0610                     	;# 
  8652  0611                     	;# 
  8653  0612                     	;# 
  8654  0613                     	;# 
  8655  0614                     	;# 
  8656  0616                     	;# 
  8657  0617                     	;# 
  8658  0618                     	;# 
  8659  0619                     	;# 
  8660  061A                     	;# 
  8661  061B                     	;# 
  8662  061C                     	;# 
  8663  061D                     	;# 
  8664  061E                     	;# 
  8665  068C                     	;# 
  8666  068D                     	;# 
  8667  068E                     	;# 
  8668  068F                     	;# 
  8669  0690                     	;# 
  8670  0691                     	;# 
  8671  0692                     	;# 
  8672  0693                     	;# 
  8673  0694                     	;# 
  8674  070C                     	;# 
  8675  070D                     	;# 
  8676  070E                     	;# 
  8677  070F                     	;# 
  8678  0710                     	;# 
  8679  0711                     	;# 
  8680  0712                     	;# 
  8681  0713                     	;# 
  8682  0714                     	;# 
  8683  0716                     	;# 
  8684  0717                     	;# 
  8685  0718                     	;# 
  8686  0719                     	;# 
  8687  071A                     	;# 
  8688  071B                     	;# 
  8689  071C                     	;# 
  8690  071D                     	;# 
  8691  071E                     	;# 
  8692  0796                     	;# 
  8693  0797                     	;# 
  8694  0798                     	;# 
  8695  0799                     	;# 
  8696  079A                     	;# 
  8697  079B                     	;# 
  8698  080C                     	;# 
  8699  080D                     	;# 
  8700  080E                     	;# 
  8701  080F                     	;# 
  8702  0810                     	;# 
  8703  0811                     	;# 
  8704  0812                     	;# 
  8705  0813                     	;# 
  8706  0814                     	;# 
  8707  081A                     	;# 
  8708  081B                     	;# 
  8709  081C                     	;# 
  8710  081D                     	;# 
  8711  081E                     	;# 
  8712  081F                     	;# 
  8713  088C                     	;# 
  8714  088D                     	;# 
  8715  088E                     	;# 
  8716  088F                     	;# 
  8717  0890                     	;# 
  8718  0891                     	;# 
  8719  0892                     	;# 
  8720  0893                     	;# 
  8721  0895                     	;# 
  8722  0896                     	;# 
  8723  0897                     	;# 
  8724  0898                     	;# 
  8725  0899                     	;# 
  8726  089A                     	;# 
  8727  089B                     	;# 
  8728  090C                     	;# 
  8729  090E                     	;# 
  8730  090F                     	;# 
  8731  091F                     	;# 
  8732  091F                     	;# 
  8733  098F                     	;# 
  8734  098F                     	;# 
  8735  0990                     	;# 
  8736  0991                     	;# 
  8737  0992                     	;# 
  8738  0993                     	;# 
  8739  0994                     	;# 
  8740  0995                     	;# 
  8741  0996                     	;# 
  8742  0997                     	;# 
  8743  0E0F                     	;# 
  8744  0E10                     	;# 
  8745  0E11                     	;# 
  8746  0E12                     	;# 
  8747  0E13                     	;# 
  8748  0E14                     	;# 
  8749  0E15                     	;# 
  8750  0E16                     	;# 
  8751  0E17                     	;# 
  8752  0E18                     	;# 
  8753  0E19                     	;# 
  8754  0E1A                     	;# 
  8755  0E1B                     	;# 
  8756  0E1C                     	;# 
  8757  0E1D                     	;# 
  8758  0E1E                     	;# 
  8759  0E1F                     	;# 
  8760  0E20                     	;# 
  8761  0E21                     	;# 
  8762  0E22                     	;# 
  8763  0E23                     	;# 
  8764  0E24                     	;# 
  8765  0E25                     	;# 
  8766  0E26                     	;# 
  8767  0E27                     	;# 
  8768  0E28                     	;# 
  8769  0E29                     	;# 
  8770  0E2A                     	;# 
  8771  0E2B                     	;# 
  8772  0E2C                     	;# 
  8773  0E2D                     	;# 
  8774  0E2E                     	;# 
  8775  0E2F                     	;# 
  8776  0E30                     	;# 
  8777  0E31                     	;# 
  8778  0E32                     	;# 
  8779  0E33                     	;# 
  8780  0E34                     	;# 
  8781  0E35                     	;# 
  8782  0E36                     	;# 
  8783  0E37                     	;# 
  8784  0E8F                     	;# 
  8785  0E90                     	;# 
  8786  0E91                     	;# 
  8787  0E92                     	;# 
  8788  0E93                     	;# 
  8789  0E94                     	;# 
  8790  0E95                     	;# 
  8791  0E96                     	;# 
  8792  0E97                     	;# 
  8793  0E9C                     	;# 
  8794  0E9D                     	;# 
  8795  0E9E                     	;# 
  8796  0EA1                     	;# 
  8797  0EA2                     	;# 
  8798  0EA3                     	;# 
  8799  0EA4                     	;# 
  8800  0EA5                     	;# 
  8801  0EA9                     	;# 
  8802  0EAA                     	;# 
  8803  0EAB                     	;# 
  8804  0EAC                     	;# 
  8805  0EB1                     	;# 
  8806  0EB2                     	;# 
  8807  0EB3                     	;# 
  8808  0EB8                     	;# 
  8809  0EB9                     	;# 
  8810  0EBA                     	;# 
  8811  0EBB                     	;# 
  8812  0EBC                     	;# 
  8813  0EBD                     	;# 
  8814  0EBE                     	;# 
  8815  0EC3                     	;# 
  8816  0EC5                     	;# 
  8817  0EC6                     	;# 
  8818  0EC7                     	;# 
  8819  0EC8                     	;# 
  8820  0EC9                     	;# 
  8821  0ECA                     	;# 
  8822  0ECB                     	;# 
  8823  0ECC                     	;# 
  8824  0F10                     	;# 
  8825  0F11                     	;# 
  8826  0F12                     	;# 
  8827  0F13                     	;# 
  8828  0F14                     	;# 
  8829  0F15                     	;# 
  8830  0F16                     	;# 
  8831  0F17                     	;# 
  8832  0F18                     	;# 
  8833  0F19                     	;# 
  8834  0F1A                     	;# 
  8835  0F1B                     	;# 
  8836  0F1C                     	;# 
  8837  0F1D                     	;# 
  8838  0F1E                     	;# 
  8839  0F1F                     	;# 
  8840  0F20                     	;# 
  8841  0F21                     	;# 
  8842  0F22                     	;# 
  8843  0F23                     	;# 
  8844  0F24                     	;# 
  8845  0F25                     	;# 
  8846  0F26                     	;# 
  8847  0F27                     	;# 
  8848  0F28                     	;# 
  8849  0F29                     	;# 
  8850  0F2A                     	;# 
  8851  0F2B                     	;# 
  8852  0F2C                     	;# 
  8853  0F2D                     	;# 
  8854  0F2E                     	;# 
  8855  0F2F                     	;# 
  8856  0F30                     	;# 
  8857  0F31                     	;# 
  8858  0F32                     	;# 
  8859  0F38                     	;# 
  8860  0F39                     	;# 
  8861  0F3A                     	;# 
  8862  0F3B                     	;# 
  8863  0F3C                     	;# 
  8864  0F3D                     	;# 
  8865  0F3E                     	;# 
  8866  0F3F                     	;# 
  8867  0F40                     	;# 
  8868  0F41                     	;# 
  8869  0F43                     	;# 
  8870  0F44                     	;# 
  8871  0F45                     	;# 
  8872  0F46                     	;# 
  8873  0F47                     	;# 
  8874  0F48                     	;# 
  8875  0F49                     	;# 
  8876  0F4A                     	;# 
  8877  0F4B                     	;# 
  8878  0F4C                     	;# 
  8879  0F4E                     	;# 
  8880  0F4F                     	;# 
  8881  0F50                     	;# 
  8882  0F51                     	;# 
  8883  0F52                     	;# 
  8884  0F53                     	;# 
  8885  0F54                     	;# 
  8886  0F55                     	;# 
  8887  0F56                     	;# 
  8888  0F57                     	;# 
  8889  0F59                     	;# 
  8890  0F5A                     	;# 
  8891  0F5B                     	;# 
  8892  0F5C                     	;# 
  8893  0F5D                     	;# 
  8894  0F61                     	;# 
  8895  0F62                     	;# 
  8896  0F64                     	;# 
  8897  0F65                     	;# 
  8898  0F66                     	;# 
  8899  0F67                     	;# 
  8900  0F68                     	;# 
  8901  0F69                     	;# 
  8902  0F6A                     	;# 
  8903  0F6B                     	;# 
  8904  0F6C                     	;# 
  8905  0F6D                     	;# 
  8906  0FE4                     	;# 
  8907  0FE5                     	;# 
  8908  0FE6                     	;# 
  8909  0FE7                     	;# 
  8910  0FE8                     	;# 
  8911  0FE9                     	;# 
  8912  0FEA                     	;# 
  8913  0FEB                     	;# 
  8914  0FED                     	;# 
  8915  0FEE                     	;# 
  8916  0FEF                     	;# 
  8917  0000                     	;# 
  8918  0001                     	;# 
  8919  0002                     	;# 
  8920  0003                     	;# 
  8921  0004                     	;# 
  8922  0005                     	;# 
  8923  0006                     	;# 
  8924  0007                     	;# 
  8925  0008                     	;# 
  8926  0009                     	;# 
  8927  000A                     	;# 
  8928  000B                     	;# 
  8929  000C                     	;# 
  8930  000D                     	;# 
  8931  000E                     	;# 
  8932  000F                     	;# 
  8933  0010                     	;# 
  8934  0011                     	;# 
  8935  0012                     	;# 
  8936  0013                     	;# 
  8937  0014                     	;# 
  8938  0015                     	;# 
  8939  0016                     	;# 
  8940  0017                     	;# 
  8941  0018                     	;# 
  8942  0019                     	;# 
  8943  001A                     	;# 
  8944  001C                     	;# 
  8945  001C                     	;# 
  8946  001D                     	;# 
  8947  001D                     	;# 
  8948  001E                     	;# 
  8949  001F                     	;# 
  8950  008C                     	;# 
  8951  008C                     	;# 
  8952  008D                     	;# 
  8953  008E                     	;# 
  8954  008E                     	;# 
  8955  008F                     	;# 
  8956  0090                     	;# 
  8957  0090                     	;# 
  8958  0091                     	;# 
  8959  0093                     	;# 
  8960  0094                     	;# 
  8961  0095                     	;# 
  8962  0096                     	;# 
  8963  0097                     	;# 
  8964  0098                     	;# 
  8965  0099                     	;# 
  8966  009A                     	;# 
  8967  009B                     	;# 
  8968  009C                     	;# 
  8969  009D                     	;# 
  8970  009E                     	;# 
  8971  010C                     	;# 
  8972  010D                     	;# 
  8973  010E                     	;# 
  8974  010E                     	;# 
  8975  010F                     	;# 
  8976  0110                     	;# 
  8977  0110                     	;# 
  8978  0111                     	;# 
  8979  0112                     	;# 
  8980  0112                     	;# 
  8981  0113                     	;# 
  8982  0114                     	;# 
  8983  0114                     	;# 
  8984  0115                     	;# 
  8985  0116                     	;# 
  8986  0116                     	;# 
  8987  0117                     	;# 
  8988  0119                     	;# 
  8989  0119                     	;# 
  8990  0119                     	;# 
  8991  011A                     	;# 
  8992  011A                     	;# 
  8993  011A                     	;# 
  8994  011B                     	;# 
  8995  011B                     	;# 
  8996  011B                     	;# 
  8997  011B                     	;# 
  8998  011B                     	;# 
  8999  011C                     	;# 
  9000  011C                     	;# 
  9001  011C                     	;# 
  9002  011D                     	;# 
  9003  011D                     	;# 
  9004  011D                     	;# 
  9005  011E                     	;# 
  9006  011E                     	;# 
  9007  011E                     	;# 
  9008  011F                     	;# 
  9009  011F                     	;# 
  9010  011F                     	;# 
  9011  011F                     	;# 
  9012  011F                     	;# 
  9013  018C                     	;# 
  9014  018D                     	;# 
  9015  018E                     	;# 
  9016  018F                     	;# 
  9017  0190                     	;# 
  9018  0191                     	;# 
  9019  0192                     	;# 
  9020  0196                     	;# 
  9021  0197                     	;# 
  9022  0198                     	;# 
  9023  0199                     	;# 
  9024  019A                     	;# 
  9025  019B                     	;# 
  9026  019C                     	;# 
  9027  020C                     	;# 
  9028  020C                     	;# 
  9029  020D                     	;# 
  9030  020E                     	;# 
  9031  020F                     	;# 
  9032  020F                     	;# 
  9033  0210                     	;# 
  9034  0210                     	;# 
  9035  0211                     	;# 
  9036  0211                     	;# 
  9037  0212                     	;# 
  9038  0212                     	;# 
  9039  0213                     	;# 
  9040  0214                     	;# 
  9041  0215                     	;# 
  9042  0215                     	;# 
  9043  0216                     	;# 
  9044  0216                     	;# 
  9045  0217                     	;# 
  9046  0217                     	;# 
  9047  0218                     	;# 
  9048  0218                     	;# 
  9049  0219                     	;# 
  9050  021A                     	;# 
  9051  021B                     	;# 
  9052  021B                     	;# 
  9053  021C                     	;# 
  9054  021C                     	;# 
  9055  021D                     	;# 
  9056  021D                     	;# 
  9057  021E                     	;# 
  9058  021F                     	;# 
  9059  028C                     	;# 
  9060  028C                     	;# 
  9061  028D                     	;# 
  9062  028D                     	;# 
  9063  028E                     	;# 
  9064  028F                     	;# 
  9065  0290                     	;# 
  9066  0290                     	;# 
  9067  0291                     	;# 
  9068  0292                     	;# 
  9069  0292                     	;# 
  9070  0293                     	;# 
  9071  0293                     	;# 
  9072  0294                     	;# 
  9073  0295                     	;# 
  9074  0296                     	;# 
  9075  0296                     	;# 
  9076  0297                     	;# 
  9077  0298                     	;# 
  9078  0298                     	;# 
  9079  0299                     	;# 
  9080  0299                     	;# 
  9081  029A                     	;# 
  9082  029B                     	;# 
  9083  029C                     	;# 
  9084  029C                     	;# 
  9085  029D                     	;# 
  9086  030C                     	;# 
  9087  030C                     	;# 
  9088  030D                     	;# 
  9089  030E                     	;# 
  9090  030F                     	;# 
  9091  0310                     	;# 
  9092  0310                     	;# 
  9093  0311                     	;# 
  9094  0312                     	;# 
  9095  0313                     	;# 
  9096  0314                     	;# 
  9097  0314                     	;# 
  9098  0315                     	;# 
  9099  0316                     	;# 
  9100  0317                     	;# 
  9101  0318                     	;# 
  9102  0318                     	;# 
  9103  0319                     	;# 
  9104  031A                     	;# 
  9105  031B                     	;# 
  9106  031C                     	;# 
  9107  031C                     	;# 
  9108  031D                     	;# 
  9109  031E                     	;# 
  9110  031F                     	;# 
  9111  038C                     	;# 
  9112  038C                     	;# 
  9113  038D                     	;# 
  9114  038E                     	;# 
  9115  0390                     	;# 
  9116  0390                     	;# 
  9117  0391                     	;# 
  9118  0392                     	;# 
  9119  040C                     	;# 
  9120  040D                     	;# 
  9121  040E                     	;# 
  9122  040F                     	;# 
  9123  0410                     	;# 
  9124  0411                     	;# 
  9125  0416                     	;# 
  9126  0416                     	;# 
  9127  0417                     	;# 
  9128  0418                     	;# 
  9129  0418                     	;# 
  9130  0419                     	;# 
  9131  041A                     	;# 
  9132  041A                     	;# 
  9133  041B                     	;# 
  9134  041C                     	;# 
  9135  041C                     	;# 
  9136  041D                     	;# 
  9137  041E                     	;# 
  9138  041F                     	;# 
  9139  048C                     	;# 
  9140  048C                     	;# 
  9141  048D                     	;# 
  9142  048E                     	;# 
  9143  048F                     	;# 
  9144  048F                     	;# 
  9145  0490                     	;# 
  9146  0491                     	;# 
  9147  0492                     	;# 
  9148  0492                     	;# 
  9149  0493                     	;# 
  9150  0494                     	;# 
  9151  0495                     	;# 
  9152  0495                     	;# 
  9153  0496                     	;# 
  9154  0497                     	;# 
  9155  0498                     	;# 
  9156  0499                     	;# 
  9157  049A                     	;# 
  9158  049B                     	;# 
  9159  049C                     	;# 
  9160  049D                     	;# 
  9161  050C                     	;# 
  9162  050C                     	;# 
  9163  050D                     	;# 
  9164  050E                     	;# 
  9165  050F                     	;# 
  9166  050F                     	;# 
  9167  0510                     	;# 
  9168  0511                     	;# 
  9169  0512                     	;# 
  9170  0512                     	;# 
  9171  0513                     	;# 
  9172  0514                     	;# 
  9173  0515                     	;# 
  9174  0515                     	;# 
  9175  0516                     	;# 
  9176  0517                     	;# 
  9177  0518                     	;# 
  9178  0519                     	;# 
  9179  051A                     	;# 
  9180  051B                     	;# 
  9181  051C                     	;# 
  9182  051D                     	;# 
  9183  058C                     	;# 
  9184  058C                     	;# 
  9185  058D                     	;# 
  9186  058E                     	;# 
  9187  058F                     	;# 
  9188  058F                     	;# 
  9189  0590                     	;# 
  9190  0591                     	;# 
  9191  0592                     	;# 
  9192  0593                     	;# 
  9193  060C                     	;# 
  9194  060D                     	;# 
  9195  060E                     	;# 
  9196  060F                     	;# 
  9197  0610                     	;# 
  9198  0611                     	;# 
  9199  0612                     	;# 
  9200  0613                     	;# 
  9201  0614                     	;# 
  9202  0616                     	;# 
  9203  0617                     	;# 
  9204  0618                     	;# 
  9205  0619                     	;# 
  9206  061A                     	;# 
  9207  061B                     	;# 
  9208  061C                     	;# 
  9209  061D                     	;# 
  9210  061E                     	;# 
  9211  068C                     	;# 
  9212  068D                     	;# 
  9213  068E                     	;# 
  9214  068F                     	;# 
  9215  0690                     	;# 
  9216  0691                     	;# 
  9217  0692                     	;# 
  9218  0693                     	;# 
  9219  0694                     	;# 
  9220  070C                     	;# 
  9221  070D                     	;# 
  9222  070E                     	;# 
  9223  070F                     	;# 
  9224  0710                     	;# 
  9225  0711                     	;# 
  9226  0712                     	;# 
  9227  0713                     	;# 
  9228  0714                     	;# 
  9229  0716                     	;# 
  9230  0717                     	;# 
  9231  0718                     	;# 
  9232  0719                     	;# 
  9233  071A                     	;# 
  9234  071B                     	;# 
  9235  071C                     	;# 
  9236  071D                     	;# 
  9237  071E                     	;# 
  9238  0796                     	;# 
  9239  0797                     	;# 
  9240  0798                     	;# 
  9241  0799                     	;# 
  9242  079A                     	;# 
  9243  079B                     	;# 
  9244  080C                     	;# 
  9245  080D                     	;# 
  9246  080E                     	;# 
  9247  080F                     	;# 
  9248  0810                     	;# 
  9249  0811                     	;# 
  9250  0812                     	;# 
  9251  0813                     	;# 
  9252  0814                     	;# 
  9253  081A                     	;# 
  9254  081B                     	;# 
  9255  081C                     	;# 
  9256  081D                     	;# 
  9257  081E                     	;# 
  9258  081F                     	;# 
  9259  088C                     	;# 
  9260  088D                     	;# 
  9261  088E                     	;# 
  9262  088F                     	;# 
  9263  0890                     	;# 
  9264  0891                     	;# 
  9265  0892                     	;# 
  9266  0893                     	;# 
  9267  0895                     	;# 
  9268  0896                     	;# 
  9269  0897                     	;# 
  9270  0898                     	;# 
  9271  0899                     	;# 
  9272  089A                     	;# 
  9273  089B                     	;# 
  9274  090C                     	;# 
  9275  090E                     	;# 
  9276  090F                     	;# 
  9277  091F                     	;# 
  9278  091F                     	;# 
  9279  098F                     	;# 
  9280  098F                     	;# 
  9281  0990                     	;# 
  9282  0991                     	;# 
  9283  0992                     	;# 
  9284  0993                     	;# 
  9285  0994                     	;# 
  9286  0995                     	;# 
  9287  0996                     	;# 
  9288  0997                     	;# 
  9289  0E0F                     	;# 
  9290  0E10                     	;# 
  9291  0E11                     	;# 
  9292  0E12                     	;# 
  9293  0E13                     	;# 
  9294  0E14                     	;# 
  9295  0E15                     	;# 
  9296  0E16                     	;# 
  9297  0E17                     	;# 
  9298  0E18                     	;# 
  9299  0E19                     	;# 
  9300  0E1A                     	;# 
  9301  0E1B                     	;# 
  9302  0E1C                     	;# 
  9303  0E1D                     	;# 
  9304  0E1E                     	;# 
  9305  0E1F                     	;# 
  9306  0E20                     	;# 
  9307  0E21                     	;# 
  9308  0E22                     	;# 
  9309  0E23                     	;# 
  9310  0E24                     	;# 
  9311  0E25                     	;# 
  9312  0E26                     	;# 
  9313  0E27                     	;# 
  9314  0E28                     	;# 
  9315  0E29                     	;# 
  9316  0E2A                     	;# 
  9317  0E2B                     	;# 
  9318  0E2C                     	;# 
  9319  0E2D                     	;# 
  9320  0E2E                     	;# 
  9321  0E2F                     	;# 
  9322  0E30                     	;# 
  9323  0E31                     	;# 
  9324  0E32                     	;# 
  9325  0E33                     	;# 
  9326  0E34                     	;# 
  9327  0E35                     	;# 
  9328  0E36                     	;# 
  9329  0E37                     	;# 
  9330  0E8F                     	;# 
  9331  0E90                     	;# 
  9332  0E91                     	;# 
  9333  0E92                     	;# 
  9334  0E93                     	;# 
  9335  0E94                     	;# 
  9336  0E95                     	;# 
  9337  0E96                     	;# 
  9338  0E97                     	;# 
  9339  0E9C                     	;# 
  9340  0E9D                     	;# 
  9341  0E9E                     	;# 
  9342  0EA1                     	;# 
  9343  0EA2                     	;# 
  9344  0EA3                     	;# 
  9345  0EA4                     	;# 
  9346  0EA5                     	;# 
  9347  0EA9                     	;# 
  9348  0EAA                     	;# 
  9349  0EAB                     	;# 
  9350  0EAC                     	;# 
  9351  0EB1                     	;# 
  9352  0EB2                     	;# 
  9353  0EB3                     	;# 
  9354  0EB8                     	;# 
  9355  0EB9                     	;# 
  9356  0EBA                     	;# 
  9357  0EBB                     	;# 
  9358  0EBC                     	;# 
  9359  0EBD                     	;# 
  9360  0EBE                     	;# 
  9361  0EC3                     	;# 
  9362  0EC5                     	;# 
  9363  0EC6                     	;# 
  9364  0EC7                     	;# 
  9365  0EC8                     	;# 
  9366  0EC9                     	;# 
  9367  0ECA                     	;# 
  9368  0ECB                     	;# 
  9369  0ECC                     	;# 
  9370  0F10                     	;# 
  9371  0F11                     	;# 
  9372  0F12                     	;# 
  9373  0F13                     	;# 
  9374  0F14                     	;# 
  9375  0F15                     	;# 
  9376  0F16                     	;# 
  9377  0F17                     	;# 
  9378  0F18                     	;# 
  9379  0F19                     	;# 
  9380  0F1A                     	;# 
  9381  0F1B                     	;# 
  9382  0F1C                     	;# 
  9383  0F1D                     	;# 
  9384  0F1E                     	;# 
  9385  0F1F                     	;# 
  9386  0F20                     	;# 
  9387  0F21                     	;# 
  9388  0F22                     	;# 
  9389  0F23                     	;# 
  9390  0F24                     	;# 
  9391  0F25                     	;# 
  9392  0F26                     	;# 
  9393  0F27                     	;# 
  9394  0F28                     	;# 
  9395  0F29                     	;# 
  9396  0F2A                     	;# 
  9397  0F2B                     	;# 
  9398  0F2C                     	;# 
  9399  0F2D                     	;# 
  9400  0F2E                     	;# 
  9401  0F2F                     	;# 
  9402  0F30                     	;# 
  9403  0F31                     	;# 
  9404  0F32                     	;# 
  9405  0F38                     	;# 
  9406  0F39                     	;# 
  9407  0F3A                     	;# 
  9408  0F3B                     	;# 
  9409  0F3C                     	;# 
  9410  0F3D                     	;# 
  9411  0F3E                     	;# 
  9412  0F3F                     	;# 
  9413  0F40                     	;# 
  9414  0F41                     	;# 
  9415  0F43                     	;# 
  9416  0F44                     	;# 
  9417  0F45                     	;# 
  9418  0F46                     	;# 
  9419  0F47                     	;# 
  9420  0F48                     	;# 
  9421  0F49                     	;# 
  9422  0F4A                     	;# 
  9423  0F4B                     	;# 
  9424  0F4C                     	;# 
  9425  0F4E                     	;# 
  9426  0F4F                     	;# 
  9427  0F50                     	;# 
  9428  0F51                     	;# 
  9429  0F52                     	;# 
  9430  0F53                     	;# 
  9431  0F54                     	;# 
  9432  0F55                     	;# 
  9433  0F56                     	;# 
  9434  0F57                     	;# 
  9435  0F59                     	;# 
  9436  0F5A                     	;# 
  9437  0F5B                     	;# 
  9438  0F5C                     	;# 
  9439  0F5D                     	;# 
  9440  0F61                     	;# 
  9441  0F62                     	;# 
  9442  0F64                     	;# 
  9443  0F65                     	;# 
  9444  0F66                     	;# 
  9445  0F67                     	;# 
  9446  0F68                     	;# 
  9447  0F69                     	;# 
  9448  0F6A                     	;# 
  9449  0F6B                     	;# 
  9450  0F6C                     	;# 
  9451  0F6D                     	;# 
  9452  0FE4                     	;# 
  9453  0FE5                     	;# 
  9454  0FE6                     	;# 
  9455  0FE7                     	;# 
  9456  0FE8                     	;# 
  9457  0FE9                     	;# 
  9458  0FEA                     	;# 
  9459  0FEB                     	;# 
  9460  0FED                     	;# 
  9461  0FEE                     	;# 
  9462  0FEF                     	;# 
  9463  0000                     	;# 
  9464  0001                     	;# 
  9465  0002                     	;# 
  9466  0003                     	;# 
  9467  0004                     	;# 
  9468  0005                     	;# 
  9469  0006                     	;# 
  9470  0007                     	;# 
  9471  0008                     	;# 
  9472  0009                     	;# 
  9473  000A                     	;# 
  9474  000B                     	;# 
  9475  000C                     	;# 
  9476  000D                     	;# 
  9477  000E                     	;# 
  9478  000F                     	;# 
  9479  0010                     	;# 
  9480  0011                     	;# 
  9481  0012                     	;# 
  9482  0013                     	;# 
  9483  0014                     	;# 
  9484  0015                     	;# 
  9485  0016                     	;# 
  9486  0017                     	;# 
  9487  0018                     	;# 
  9488  0019                     	;# 
  9489  001A                     	;# 
  9490  001C                     	;# 
  9491  001C                     	;# 
  9492  001D                     	;# 
  9493  001D                     	;# 
  9494  001E                     	;# 
  9495  001F                     	;# 
  9496  008C                     	;# 
  9497  008C                     	;# 
  9498  008D                     	;# 
  9499  008E                     	;# 
  9500  008E                     	;# 
  9501  008F                     	;# 
  9502  0090                     	;# 
  9503  0090                     	;# 
  9504  0091                     	;# 
  9505  0093                     	;# 
  9506  0094                     	;# 
  9507  0095                     	;# 
  9508  0096                     	;# 
  9509  0097                     	;# 
  9510  0098                     	;# 
  9511  0099                     	;# 
  9512  009A                     	;# 
  9513  009B                     	;# 
  9514  009C                     	;# 
  9515  009D                     	;# 
  9516  009E                     	;# 
  9517  010C                     	;# 
  9518  010D                     	;# 
  9519  010E                     	;# 
  9520  010E                     	;# 
  9521  010F                     	;# 
  9522  0110                     	;# 
  9523  0110                     	;# 
  9524  0111                     	;# 
  9525  0112                     	;# 
  9526  0112                     	;# 
  9527  0113                     	;# 
  9528  0114                     	;# 
  9529  0114                     	;# 
  9530  0115                     	;# 
  9531  0116                     	;# 
  9532  0116                     	;# 
  9533  0117                     	;# 
  9534  0119                     	;# 
  9535  0119                     	;# 
  9536  0119                     	;# 
  9537  011A                     	;# 
  9538  011A                     	;# 
  9539  011A                     	;# 
  9540  011B                     	;# 
  9541  011B                     	;# 
  9542  011B                     	;# 
  9543  011B                     	;# 
  9544  011B                     	;# 
  9545  011C                     	;# 
  9546  011C                     	;# 
  9547  011C                     	;# 
  9548  011D                     	;# 
  9549  011D                     	;# 
  9550  011D                     	;# 
  9551  011E                     	;# 
  9552  011E                     	;# 
  9553  011E                     	;# 
  9554  011F                     	;# 
  9555  011F                     	;# 
  9556  011F                     	;# 
  9557  011F                     	;# 
  9558  011F                     	;# 
  9559  018C                     	;# 
  9560  018D                     	;# 
  9561  018E                     	;# 
  9562  018F                     	;# 
  9563  0190                     	;# 
  9564  0191                     	;# 
  9565  0192                     	;# 
  9566  0196                     	;# 
  9567  0197                     	;# 
  9568  0198                     	;# 
  9569  0199                     	;# 
  9570  019A                     	;# 
  9571  019B                     	;# 
  9572  019C                     	;# 
  9573  020C                     	;# 
  9574  020C                     	;# 
  9575  020D                     	;# 
  9576  020E                     	;# 
  9577  020F                     	;# 
  9578  020F                     	;# 
  9579  0210                     	;# 
  9580  0210                     	;# 
  9581  0211                     	;# 
  9582  0211                     	;# 
  9583  0212                     	;# 
  9584  0212                     	;# 
  9585  0213                     	;# 
  9586  0214                     	;# 
  9587  0215                     	;# 
  9588  0215                     	;# 
  9589  0216                     	;# 
  9590  0216                     	;# 
  9591  0217                     	;# 
  9592  0217                     	;# 
  9593  0218                     	;# 
  9594  0218                     	;# 
  9595  0219                     	;# 
  9596  021A                     	;# 
  9597  021B                     	;# 
  9598  021B                     	;# 
  9599  021C                     	;# 
  9600  021C                     	;# 
  9601  021D                     	;# 
  9602  021D                     	;# 
  9603  021E                     	;# 
  9604  021F                     	;# 
  9605  028C                     	;# 
  9606  028C                     	;# 
  9607  028D                     	;# 
  9608  028D                     	;# 
  9609  028E                     	;# 
  9610  028F                     	;# 
  9611  0290                     	;# 
  9612  0290                     	;# 
  9613  0291                     	;# 
  9614  0292                     	;# 
  9615  0292                     	;# 
  9616  0293                     	;# 
  9617  0293                     	;# 
  9618  0294                     	;# 
  9619  0295                     	;# 
  9620  0296                     	;# 
  9621  0296                     	;# 
  9622  0297                     	;# 
  9623  0298                     	;# 
  9624  0298                     	;# 
  9625  0299                     	;# 
  9626  0299                     	;# 
  9627  029A                     	;# 
  9628  029B                     	;# 
  9629  029C                     	;# 
  9630  029C                     	;# 
  9631  029D                     	;# 
  9632  030C                     	;# 
  9633  030C                     	;# 
  9634  030D                     	;# 
  9635  030E                     	;# 
  9636  030F                     	;# 
  9637  0310                     	;# 
  9638  0310                     	;# 
  9639  0311                     	;# 
  9640  0312                     	;# 
  9641  0313                     	;# 
  9642  0314                     	;# 
  9643  0314                     	;# 
  9644  0315                     	;# 
  9645  0316                     	;# 
  9646  0317                     	;# 
  9647  0318                     	;# 
  9648  0318                     	;# 
  9649  0319                     	;# 
  9650  031A                     	;# 
  9651  031B                     	;# 
  9652  031C                     	;# 
  9653  031C                     	;# 
  9654  031D                     	;# 
  9655  031E                     	;# 
  9656  031F                     	;# 
  9657  038C                     	;# 
  9658  038C                     	;# 
  9659  038D                     	;# 
  9660  038E                     	;# 
  9661  0390                     	;# 
  9662  0390                     	;# 
  9663  0391                     	;# 
  9664  0392                     	;# 
  9665  040C                     	;# 
  9666  040D                     	;# 
  9667  040E                     	;# 
  9668  040F                     	;# 
  9669  0410                     	;# 
  9670  0411                     	;# 
  9671  0416                     	;# 
  9672  0416                     	;# 
  9673  0417                     	;# 
  9674  0418                     	;# 
  9675  0418                     	;# 
  9676  0419                     	;# 
  9677  041A                     	;# 
  9678  041A                     	;# 
  9679  041B                     	;# 
  9680  041C                     	;# 
  9681  041C                     	;# 
  9682  041D                     	;# 
  9683  041E                     	;# 
  9684  041F                     	;# 
  9685  048C                     	;# 
  9686  048C                     	;# 
  9687  048D                     	;# 
  9688  048E                     	;# 
  9689  048F                     	;# 
  9690  048F                     	;# 
  9691  0490                     	;# 
  9692  0491                     	;# 
  9693  0492                     	;# 
  9694  0492                     	;# 
  9695  0493                     	;# 
  9696  0494                     	;# 
  9697  0495                     	;# 
  9698  0495                     	;# 
  9699  0496                     	;# 
  9700  0497                     	;# 
  9701  0498                     	;# 
  9702  0499                     	;# 
  9703  049A                     	;# 
  9704  049B                     	;# 
  9705  049C                     	;# 
  9706  049D                     	;# 
  9707  050C                     	;# 
  9708  050C                     	;# 
  9709  050D                     	;# 
  9710  050E                     	;# 
  9711  050F                     	;# 
  9712  050F                     	;# 
  9713  0510                     	;# 
  9714  0511                     	;# 
  9715  0512                     	;# 
  9716  0512                     	;# 
  9717  0513                     	;# 
  9718  0514                     	;# 
  9719  0515                     	;# 
  9720  0515                     	;# 
  9721  0516                     	;# 
  9722  0517                     	;# 
  9723  0518                     	;# 
  9724  0519                     	;# 
  9725  051A                     	;# 
  9726  051B                     	;# 
  9727  051C                     	;# 
  9728  051D                     	;# 
  9729  058C                     	;# 
  9730  058C                     	;# 
  9731  058D                     	;# 
  9732  058E                     	;# 
  9733  058F                     	;# 
  9734  058F                     	;# 
  9735  0590                     	;# 
  9736  0591                     	;# 
  9737  0592                     	;# 
  9738  0593                     	;# 
  9739  060C                     	;# 
  9740  060D                     	;# 
  9741  060E                     	;# 
  9742  060F                     	;# 
  9743  0610                     	;# 
  9744  0611                     	;# 
  9745  0612                     	;# 
  9746  0613                     	;# 
  9747  0614                     	;# 
  9748  0616                     	;# 
  9749  0617                     	;# 
  9750  0618                     	;# 
  9751  0619                     	;# 
  9752  061A                     	;# 
  9753  061B                     	;# 
  9754  061C                     	;# 
  9755  061D                     	;# 
  9756  061E                     	;# 
  9757  068C                     	;# 
  9758  068D                     	;# 
  9759  068E                     	;# 
  9760  068F                     	;# 
  9761  0690                     	;# 
  9762  0691                     	;# 
  9763  0692                     	;# 
  9764  0693                     	;# 
  9765  0694                     	;# 
  9766  070C                     	;# 
  9767  070D                     	;# 
  9768  070E                     	;# 
  9769  070F                     	;# 
  9770  0710                     	;# 
  9771  0711                     	;# 
  9772  0712                     	;# 
  9773  0713                     	;# 
  9774  0714                     	;# 
  9775  0716                     	;# 
  9776  0717                     	;# 
  9777  0718                     	;# 
  9778  0719                     	;# 
  9779  071A                     	;# 
  9780  071B                     	;# 
  9781  071C                     	;# 
  9782  071D                     	;# 
  9783  071E                     	;# 
  9784  0796                     	;# 
  9785  0797                     	;# 
  9786  0798                     	;# 
  9787  0799                     	;# 
  9788  079A                     	;# 
  9789  079B                     	;# 
  9790  080C                     	;# 
  9791  080D                     	;# 
  9792  080E                     	;# 
  9793  080F                     	;# 
  9794  0810                     	;# 
  9795  0811                     	;# 
  9796  0812                     	;# 
  9797  0813                     	;# 
  9798  0814                     	;# 
  9799  081A                     	;# 
  9800  081B                     	;# 
  9801  081C                     	;# 
  9802  081D                     	;# 
  9803  081E                     	;# 
  9804  081F                     	;# 
  9805  088C                     	;# 
  9806  088D                     	;# 
  9807  088E                     	;# 
  9808  088F                     	;# 
  9809  0890                     	;# 
  9810  0891                     	;# 
  9811  0892                     	;# 
  9812  0893                     	;# 
  9813  0895                     	;# 
  9814  0896                     	;# 
  9815  0897                     	;# 
  9816  0898                     	;# 
  9817  0899                     	;# 
  9818  089A                     	;# 
  9819  089B                     	;# 
  9820  090C                     	;# 
  9821  090E                     	;# 
  9822  090F                     	;# 
  9823  091F                     	;# 
  9824  091F                     	;# 
  9825  098F                     	;# 
  9826  098F                     	;# 
  9827  0990                     	;# 
  9828  0991                     	;# 
  9829  0992                     	;# 
  9830  0993                     	;# 
  9831  0994                     	;# 
  9832  0995                     	;# 
  9833  0996                     	;# 
  9834  0997                     	;# 
  9835  0E0F                     	;# 
  9836  0E10                     	;# 
  9837  0E11                     	;# 
  9838  0E12                     	;# 
  9839  0E13                     	;# 
  9840  0E14                     	;# 
  9841  0E15                     	;# 
  9842  0E16                     	;# 
  9843  0E17                     	;# 
  9844  0E18                     	;# 
  9845  0E19                     	;# 
  9846  0E1A                     	;# 
  9847  0E1B                     	;# 
  9848  0E1C                     	;# 
  9849  0E1D                     	;# 
  9850  0E1E                     	;# 
  9851  0E1F                     	;# 
  9852  0E20                     	;# 
  9853  0E21                     	;# 
  9854  0E22                     	;# 
  9855  0E23                     	;# 
  9856  0E24                     	;# 
  9857  0E25                     	;# 
  9858  0E26                     	;# 
  9859  0E27                     	;# 
  9860  0E28                     	;# 
  9861  0E29                     	;# 
  9862  0E2A                     	;# 
  9863  0E2B                     	;# 
  9864  0E2C                     	;# 
  9865  0E2D                     	;# 
  9866  0E2E                     	;# 
  9867  0E2F                     	;# 
  9868  0E30                     	;# 
  9869  0E31                     	;# 
  9870  0E32                     	;# 
  9871  0E33                     	;# 
  9872  0E34                     	;# 
  9873  0E35                     	;# 
  9874  0E36                     	;# 
  9875  0E37                     	;# 
  9876  0E8F                     	;# 
  9877  0E90                     	;# 
  9878  0E91                     	;# 
  9879  0E92                     	;# 
  9880  0E93                     	;# 
  9881  0E94                     	;# 
  9882  0E95                     	;# 
  9883  0E96                     	;# 
  9884  0E97                     	;# 
  9885  0E9C                     	;# 
  9886  0E9D                     	;# 
  9887  0E9E                     	;# 
  9888  0EA1                     	;# 
  9889  0EA2                     	;# 
  9890  0EA3                     	;# 
  9891  0EA4                     	;# 
  9892  0EA5                     	;# 
  9893  0EA9                     	;# 
  9894  0EAA                     	;# 
  9895  0EAB                     	;# 
  9896  0EAC                     	;# 
  9897  0EB1                     	;# 
  9898  0EB2                     	;# 
  9899  0EB3                     	;# 
  9900  0EB8                     	;# 
  9901  0EB9                     	;# 
  9902  0EBA                     	;# 
  9903  0EBB                     	;# 
  9904  0EBC                     	;# 
  9905  0EBD                     	;# 
  9906  0EBE                     	;# 
  9907  0EC3                     	;# 
  9908  0EC5                     	;# 
  9909  0EC6                     	;# 
  9910  0EC7                     	;# 
  9911  0EC8                     	;# 
  9912  0EC9                     	;# 
  9913  0ECA                     	;# 
  9914  0ECB                     	;# 
  9915  0ECC                     	;# 
  9916  0F10                     	;# 
  9917  0F11                     	;# 
  9918  0F12                     	;# 
  9919  0F13                     	;# 
  9920  0F14                     	;# 
  9921  0F15                     	;# 
  9922  0F16                     	;# 
  9923  0F17                     	;# 
  9924  0F18                     	;# 
  9925  0F19                     	;# 
  9926  0F1A                     	;# 
  9927  0F1B                     	;# 
  9928  0F1C                     	;# 
  9929  0F1D                     	;# 
  9930  0F1E                     	;# 
  9931  0F1F                     	;# 
  9932  0F20                     	;# 
  9933  0F21                     	;# 
  9934  0F22                     	;# 
  9935  0F23                     	;# 
  9936  0F24                     	;# 
  9937  0F25                     	;# 
  9938  0F26                     	;# 
  9939  0F27                     	;# 
  9940  0F28                     	;# 
  9941  0F29                     	;# 
  9942  0F2A                     	;# 
  9943  0F2B                     	;# 
  9944  0F2C                     	;# 
  9945  0F2D                     	;# 
  9946  0F2E                     	;# 
  9947  0F2F                     	;# 
  9948  0F30                     	;# 
  9949  0F31                     	;# 
  9950  0F32                     	;# 
  9951  0F38                     	;# 
  9952  0F39                     	;# 
  9953  0F3A                     	;# 
  9954  0F3B                     	;# 
  9955  0F3C                     	;# 
  9956  0F3D                     	;# 
  9957  0F3E                     	;# 
  9958  0F3F                     	;# 
  9959  0F40                     	;# 
  9960  0F41                     	;# 
  9961  0F43                     	;# 
  9962  0F44                     	;# 
  9963  0F45                     	;# 
  9964  0F46                     	;# 
  9965  0F47                     	;# 
  9966  0F48                     	;# 
  9967  0F49                     	;# 
  9968  0F4A                     	;# 
  9969  0F4B                     	;# 
  9970  0F4C                     	;# 
  9971  0F4E                     	;# 
  9972  0F4F                     	;# 
  9973  0F50                     	;# 
  9974  0F51                     	;# 
  9975  0F52                     	;# 
  9976  0F53                     	;# 
  9977  0F54                     	;# 
  9978  0F55                     	;# 
  9979  0F56                     	;# 
  9980  0F57                     	;# 
  9981  0F59                     	;# 
  9982  0F5A                     	;# 
  9983  0F5B                     	;# 
  9984  0F5C                     	;# 
  9985  0F5D                     	;# 
  9986  0F61                     	;# 
  9987  0F62                     	;# 
  9988  0F64                     	;# 
  9989  0F65                     	;# 
  9990  0F66                     	;# 
  9991  0F67                     	;# 
  9992  0F68                     	;# 
  9993  0F69                     	;# 
  9994  0F6A                     	;# 
  9995  0F6B                     	;# 
  9996  0F6C                     	;# 
  9997  0F6D                     	;# 
  9998  0FE4                     	;# 
  9999  0FE5                     	;# 
 10000  0FE6                     	;# 
 10001  0FE7                     	;# 
 10002  0FE8                     	;# 
 10003  0FE9                     	;# 
 10004  0FEA                     	;# 
 10005  0FEB                     	;# 
 10006  0FED                     	;# 
 10007  0FEE                     	;# 
 10008  0FEF                     	;# 
 10009                           
 10010                           	psect	idataBANK0
 10011  0000'                    __pidataBANK0:	
 10012                           
 10013                           ;initializer for _mode_field_subfield
 10014  0000' 34FF               	retlw	255
 10015  0001' 34FF               	retlw	255
 10016  0002' 34FF               	retlw	255
 10017  0003' 34FF               	retlw	255
 10018                           
 10019                           ;initializer for _lum_thresh
 10020  0004' 3402               	retlw	2
 10021                           
 10022                           ;initializer for _temp_thresh
 10023  0005' 3464               	retlw	100
 10024                           
 10025                           ;initializer for _tala
 10026  0006' 3403               	retlw	3
 10027                           
 10028                           ;initializer for _pmon
 10029  0007' 3405               	retlw	5
 10030                           
 10031                           ;initializer for _nreg
 10032  0008' 341E               	retlw	30
 10033                           
 10034                           	psect	idataBANK2
 10035  0000'                    __pidataBANK2:	
 10036                           
 10037                           ;initializer for _str_snd
 10038  0000' 3468               	retlw	104
 10039  0001' 3465               	retlw	101
 10040  0002' 346C               	retlw	108
 10041  0003' 346C               	retlw	108
 10042  0004' 346F               	retlw	111
 10043  0005' 3400               	retlw	0
 10044  0006' 3400               	retlw	0
 10045  0007' 3400               	retlw	0
 10046  0008' 3400               	retlw	0
 10047  0009' 3400               	retlw	0
 10048  000A' 3400               	retlw	0
 10049  000B' 3400               	retlw	0
 10050  000C' 3400               	retlw	0
 10051  000D' 3400               	retlw	0
 10052  000E' 3400               	retlw	0
 10053  000F' 3400               	retlw	0
 10054                           
 10055                           	psect	stringtext1
 10056  0000'                    __pstringtext1:	
 10057  0000'                    _fsmStateTable:	
 10058  0000' 3400'              	retlw	low _do_I2C_IDLE
 10059  0001' 3400'              	retlw	high _do_I2C_IDLE
 10060  0002' 3400'              	retlw	low _do_I2C_SEND_ADR_READ
 10061  0003' 3400'              	retlw	high _do_I2C_SEND_ADR_READ
 10062  0004' 3400'              	retlw	low _do_I2C_SEND_ADR_WRITE
 10063  0005' 3400'              	retlw	high _do_I2C_SEND_ADR_WRITE
 10064  0006' 3400'              	retlw	low _do_I2C_TX
 10065  0007' 3400'              	retlw	high _do_I2C_TX
 10066  0008' 3400'              	retlw	low _do_I2C_RX
 10067  0009' 3400'              	retlw	high _do_I2C_RX
 10068  000A' 3400'              	retlw	low _do_I2C_RCEN
 10069  000B' 3400'              	retlw	high _do_I2C_RCEN
 10070  000C' 3400'              	retlw	low _do_I2C_TX_EMPTY
 10071  000D' 3400'              	retlw	high _do_I2C_TX_EMPTY
 10072  000E' 3400'              	retlw	low _do_I2C_SEND_RESTART_READ
 10073  000F' 3400'              	retlw	high _do_I2C_SEND_RESTART_READ
 10074  0010' 3400'              	retlw	low _do_I2C_SEND_RESTART_WRITE
 10075  0011' 3400'              	retlw	high _do_I2C_SEND_RESTART_WRITE
 10076  0012' 3400'              	retlw	low _do_I2C_SEND_RESTART
 10077  0013' 3400'              	retlw	high _do_I2C_SEND_RESTART
 10078  0014' 3400'              	retlw	low _do_I2C_SEND_STOP
 10079  0015' 3400'              	retlw	high _do_I2C_SEND_STOP
 10080  0016' 3400'              	retlw	low _do_I2C_DO_ACK
 10081  0017' 3400'              	retlw	high _do_I2C_DO_ACK
 10082  0018' 3400'              	retlw	low _do_I2C_DO_NACK_STOP
 10083  0019' 3400'              	retlw	high _do_I2C_DO_NACK_STOP
 10084  001A' 3400'              	retlw	low _do_I2C_DO_NACK_RESTART
 10085  001B' 3400'              	retlw	high _do_I2C_DO_NACK_RESTART
 10086  001C' 3400'              	retlw	low _do_I2C_RESET
 10087  001D' 3400'              	retlw	high _do_I2C_RESET
 10088  001E' 3400'              	retlw	low _do_I2C_DO_ADDRESS_NACK
 10089  001F' 3400'              	retlw	high _do_I2C_DO_ADDRESS_NACK
 10090  0020'                    __end_of_fsmStateTable:	
 10091                           
 10092                           	psect	stringtext2
 10093  0000'                    __pstringtext2:	
 10094  0000'                    _num_subfields:	
 10095  0000' 3400               	retlw	0
 10096  0001' 3404               	retlw	4
 10097  0002' 3401               	retlw	1
 10098  0003' 3402               	retlw	2
 10099  0004' 3401               	retlw	1
 10100  0005'                    __end_of_num_subfields:	
 10101                           
 10102                           	psect	nvBANK0
 10103  0000'                    __pnvBANK0:	
 10104  0000'                    _timer1ReloadVal:	
 10105  0000'                    	ds	2
 10106                           
 10107                           	psect	nvBANK1
 10108  0000'                    __pnvBANK1:	
 10109  0000'                    _TMR2_InterruptHandler:	
 10110  0000'                    	ds	2
 10111  0002'                    _TMR1_InterruptHandler:	
 10112  0002'                    	ds	2
 10113  0004'                    _TMR0_InterruptHandler:	
 10114  0004'                    	ds	2
 10115  0006'                    _INT_InterruptHandler:	
 10116  0006'                    	ds	2
 10117  0016                     _LATAbits	set	22
 10118  000E                     _PORTCbits	set	14
 10119  000D                     _PORTBbits	set	13
 10120  0013                     _TRISCbits	set	19
 10121  001E                     _T0CON0bits	set	30
 10122  001E                     _T0CON0	set	30
 10123  001C                     _TMR0L	set	28
 10124  001D                     _TMR0H	set	29
 10125  001F                     _T0CON1	set	31
 10126  0014                     _TRISD	set	20
 10127  0013                     _TRISC	set	19
 10128  0012                     _TRISB	set	18
 10129  0011                     _TRISA	set	17
 10130  0015                     _TRISE	set	21
 10131  0018                     _LATC	set	24
 10132  0017                     _LATB	set	23
 10133  0016                     _LATA	set	22
 10134  0019                     _LATD	set	25
 10135  001A                     _LATE	set	26
 10136  000B                     _INTCONbits	set	11
 10137  0094                     _ADCON1bits	set	148
 10138  008E                     _ADPREVL	set	142
 10139  008F                     _ADPREVH	set	143
 10140  0097                     _ADSTATbits	set	151
 10141  0090                     _ADACCL	set	144
 10142  0091                     _ADACCH	set	145
 10143  0095                     _ADCON2bits	set	149
 10144  009C                     _ADPRE	set	156
 10145  0096                     _ADCON3bits	set	150
 10146  008C                     _ADRESL	set	140
 10147  008D                     _ADRESH	set	141
 10148  0093                     _ADCON0bits	set	147
 10149  009D                     _ADACQ	set	157
 10150  0093                     _ADCON0	set	147
 10151  0098                     _ADCLK	set	152
 10152  0099                     _ADACT	set	153
 10153  009A                     _ADREF	set	154
 10154  0097                     _ADSTAT	set	151
 10155  0096                     _ADCON3	set	150
 10156  0095                     _ADCON2	set	149
 10157  0094                     _ADCON1	set	148
 10158  009B                     _ADCAP	set	155
 10159  009E                     _ADPCH	set	158
 10160  0116                     _ADERRL	set	278
 10161  0117                     _ADERRH	set	279
 10162  0114                     _ADFLTRL	set	276
 10163  0115                     _ADFLTRH	set	277
 10164  010C                     _ADCNT	set	268
 10165  010D                     _ADRPT	set	269
 10166  0113                     _ADSTPTH	set	275
 10167  0112                     _ADSTPTL	set	274
 10168  0111                     _ADUTHH	set	273
 10169  0110                     _ADUTHL	set	272
 10170  010F                     _ADLTHH	set	271
 10171  010E                     _ADLTHL	set	270
 10172  018F                     _SSP1STATbits	set	399
 10173  018E                     _SSP1MSK	set	398
 10174  018C                     _SSP1BUF	set	396
 10175  0191                     _SSP1CON2bits	set	401
 10176  018D                     _SSP1ADD	set	397
 10177  0191                     _SSP1CON2	set	401
 10178  0190                     _SSP1CON1	set	400
 10179  018F                     _SSP1STAT	set	399
 10180  0190                     _SSP1CON1bits	set	400
 10181  021F                     _CCPTMRS1bits	set	543
 10182  020F                     _T1GCONbits	set	527
 10183  020E                     _T1CONbits	set	526
 10184  020E                     _T1CON	set	526
 10185  020C                     _TMR1L	set	524
 10186  020D                     _TMR1H	set	525
 10187  0211                     _T1CLK	set	529
 10188  0210                     _T1GATE	set	528
 10189  020F                     _T1GCON	set	527
 10190  028D                     _PR2	set	653
 10191  028C                     _TMR2	set	652
 10192  028E                     _T2CONbits	set	654
 10193  0291                     _T2RSTbits	set	657
 10194  028F                     _T2HLTbits	set	655
 10195  028E                     _T2CON	set	654
 10196  028C                     _T2TMR	set	652
 10197  028D                     _T2PR	set	653
 10198  0291                     _T2RST	set	657
 10199  028F                     _T2HLT	set	655
 10200  0290                     _T2CLKCON	set	656
 10201  038C                     _PWM6DCL	set	908
 10202  038D                     _PWM6DCH	set	909
 10203  038E                     _PWM6CON	set	910
 10204  0710                     _PIR4bits	set	1808
 10205  071A                     _PIE4bits	set	1818
 10206  070F                     _PIR3bits	set	1807
 10207  0719                     _PIE3bits	set	1817
 10208  0716                     _PIE0bits	set	1814
 10209  070C                     _PIR0bits	set	1804
 10210  079B                     _PMD5	set	1947
 10211  079A                     _PMD4	set	1946
 10212  0799                     _PMD3	set	1945
 10213  0798                     _PMD2	set	1944
 10214  0797                     _PMD1	set	1943
 10215  0796                     _PMD0	set	1942
 10216  081F                     _NVMCON2	set	2079
 10217  081C                     _NVMDATL	set	2076
 10218  081D                     _NVMDATH	set	2077
 10219  081E                     _NVMCON1bits	set	2078
 10220  081B                     _NVMADRH	set	2075
 10221  081A                     _NVMADRL	set	2074
 10222  0892                     _OSCTUNE	set	2194
 10223  0893                     _OSCFRQ	set	2195
 10224  0891                     _OSCEN	set	2193
 10225  088F                     _OSCCON3	set	2191
 10226  088D                     _OSCCON1	set	2189
 10227  0EC6                     _SSP1DATPPS	set	3782
 10228  0EC5                     _SSP1CLKPPS	set	3781
 10229  0ECB                     _RXPPS	set	3787
 10230  0E90                     _INTPPS	set	3728
 10231  0F44                     _WPUBbits	set	3908
 10232  0F26                     _RC6PPS	set	3878
 10233  0F16                     _RA6PPS	set	3862
 10234  0F24                     _RC4PPS	set	3876
 10235  0F23                     _RC3PPS	set	3875
 10236  0F68                     _INLVLE	set	3944
 10237  0F5D                     _INLVLD	set	3933
 10238  0F52                     _INLVLC	set	3922
 10239  0F47                     _INLVLB	set	3911
 10240  0F3C                     _INLVLA	set	3900
 10241  0F67                     _SLRCONE	set	3943
 10242  0F5C                     _SLRCOND	set	3932
 10243  0F51                     _SLRCONC	set	3921
 10244  0F46                     _SLRCONB	set	3910
 10245  0F3B                     _SLRCONA	set	3899
 10246  0F5B                     _ODCOND	set	3931
 10247  0F50                     _ODCONC	set	3920
 10248  0F45                     _ODCONB	set	3909
 10249  0F3A                     _ODCONA	set	3898
 10250  0F66                     _ODCONE	set	3942
 10251  0F4F                     _WPUC	set	3919
 10252  0F39                     _WPUA	set	3897
 10253  0F44                     _WPUB	set	3908
 10254  0F65                     _WPUE	set	3941
 10255  0F5A                     _WPUD	set	3930
 10256  0F38                     _ANSELA	set	3896
 10257  0F64                     _ANSELE	set	3940
 10258  0F43                     _ANSELB	set	3907
 10259  0F4E                     _ANSELC	set	3918
 10260  0F59                     _ANSELD	set	3929
 10261  7A7C                     _WPUC4	set	31356
 10262  7A7B                     _WPUC3	set	31355
 10263                           
 10264                           	psect	stringtext3
 10265  0000'                    __pstringtext3:	
 10266  0000'                    STR_1:	
 10267  0000' 3425               	retlw	37	;'%'
 10268  0001' 3430               	retlw	48	;'0'
 10269  0002' 3432               	retlw	50	;'2'
 10270  0003' 3478               	retlw	120	;'x'
 10271  0004' 3425               	retlw	37	;'%'
 10272  0005' 3430               	retlw	48	;'0'
 10273  0006' 3432               	retlw	50	;'2'
 10274  0007' 3478               	retlw	120	;'x'
 10275  0008' 3425               	retlw	37	;'%'
 10276  0009' 3430               	retlw	48	;'0'
 10277  000A' 3432               	retlw	50	;'2'
 10278  000B' 3478               	retlw	120	;'x'
 10279  000C' 3425               	retlw	37	;'%'
 10280  000D' 3430               	retlw	48	;'0'
 10281  000E' 3432               	retlw	50	;'2'
 10282  000F' 3478               	retlw	120	;'x'
 10283  0010' 340A               	retlw	10
 10284  0011' 3400               	retlw	0
 10285                           
 10286                           	psect	stringtext4
 10287  0000'                    __pstringtext4:	
 10288  0000'                    
 10289                           ; #config settings
 10290  0000                     
 10291                           	psect	cinit
 10292  0000'                    start_initialization:	
 10293  0000'                    __initialization:	
 10294                           
 10295                           ; Initialize objects allocated to BANK0
 10296  0000' 3000'              	movlw	low __pidataBANK0
 10297  0001' 0084               	movwf	4
 10298  0002' 3000'              	movlw	(high __pidataBANK0)| (0+128)
 10299  0003' 0085               	movwf	5
 10300  0004' 3000'              	movlw	low __pdataBANK0
 10301  0005' 0086               	movwf	6
 10302  0006' 3000'              	movlw	high __pdataBANK0
 10303  0007' 0087               	movwf	7
 10304  0008' 3009               	movlw	9
 10305  0009' 3180' 2000' 3180'  	fcall	init_ram
 10306                           
 10307                           ; Initialize objects allocated to BANK2
 10308  000C' 3000'              	movlw	low __pidataBANK2
 10309  000D' 0084               	movwf	4
 10310  000E' 3000'              	movlw	(high __pidataBANK2)| (0+128)
 10311  000F' 0085               	movwf	5
 10312  0010' 3000'              	movlw	low __pdataBANK2
 10313  0011' 0086               	movwf	6
 10314  0012' 3000'              	movlw	high __pdataBANK2
 10315  0013' 0087               	movwf	7
 10316  0014' 3010               	movlw	16
 10317  0015' 3180' 2000' 3180'  	fcall	init_ram
 10318                           
 10319                           ; Clear objects allocated to COMMON
 10320  0018' 0180'              	clrf	__pbssCOMMON& (0+127)
 10321                           
 10322                           ; Clear objects allocated to BANK0
 10323  0019' 3000'              	movlw	low __pbssBANK0
 10324  001A' 0084               	movwf	4
 10325  001B' 3000'              	movlw	high __pbssBANK0
 10326  001C' 0085               	movwf	5
 10327  001D' 3012               	movlw	18
 10328  001E' 3180' 2000' 3180'  	fcall	clear_ram0
 10329                           
 10330                           ; Clear objects allocated to BANK1
 10331  0021' 3000'              	movlw	low __pbssBANK1
 10332  0022' 0084               	movwf	4
 10333  0023' 3000'              	movlw	high __pbssBANK1
 10334  0024' 0085               	movwf	5
 10335  0025' 3044               	movlw	68
 10336  0026' 3180' 2000' 3180'  	fcall	clear_ram0
 10337  0029'                    end_of_initialization:	
 10338                           ;End of C runtime variable initialization code
 10339                           
 10340  0029'                    __end_of__initialization:	
 10341  0029' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 10342  002A' 0020               	movlb	0
 10343  002B' 3180' 2800'        	ljmp	_main	;jump to C main() function
 10344                           
 10345                           	psect	bssCOMMON
 10346  0000'                    __pbssCOMMON:	
 10347  0000'                    _clkms:	
 10348  0000'                    	ds	1
 10349                           
 10350                           	psect	bssBANK0
 10351  0000'                    __pbssBANK0:	
 10352  0000'                    _threshold:	
 10353  0000'                    	ds	2
 10354  0002'                    _lum_bin:	
 10355  0002'                    	ds	2
 10356  0004'                    _alaf:	
 10357  0004'                    	ds	1
 10358  0005'                    _temp:	
 10359  0005'                    	ds	1
 10360  0006'                    _alarm:	
 10361  0006'                    	ds	1
 10362  0007'                    _config_mode:	
 10363  0007'                    	ds	1
 10364  0008'                    _set_mode:	
 10365  0008'                    	ds	1
 10366  0009'                    _last1m:	
 10367  0009'                    	ds	1
 10368  000A'                    _last5s:	
 10369  000A'                    	ds	1
 10370  000B'                    _last_ms2:	
 10371  000B'                    	ds	1
 10372  000C'                    _last_ms:	
 10373  000C'                    	ds	1
 10374  000D'                    _seg:	
 10375  000D'                    	ds	1
 10376  000E'                    _clkm:	
 10377  000E'                    	ds	1
 10378  000F'                    _clkh:	
 10379  000F'                    	ds	1
 10380  0010'                    _nreg_pt:	
 10381  0010'                    	ds	1
 10382  0011'                    _nreg_init:	
 10383  0011'                    	ds	1
 10384                           
 10385                           	psect	dataBANK0
 10386  0000'                    __pdataBANK0:	
 10387  0000'                    _mode_field_subfield:	
 10388  0000'                    	ds	4
 10389  0004'                    _lum_thresh:	
 10390  0004'                    	ds	1
 10391  0005'                    _temp_thresh:	
 10392  0005'                    	ds	1
 10393  0006'                    _tala:	
 10394  0006'                    	ds	1
 10395  0007'                    _pmon:	
 10396  0007'                    	ds	1
 10397  0008'                    _nreg:	
 10398  0008'                    	ds	1
 10399                           
 10400                           	psect	bssBANK1
 10401  0000'                    __pbssBANK1:	
 10402  0000'                    _i2c_status:	
 10403  0000'                    	ds	29
 10404  001D'                    _duty_cycle:	
 10405  001D'                    	ds	2
 10406  001F'                    _convertedValue:	
 10407  001F'                    	ds	2
 10408  0021'                    _min_units:	
 10409  0021'                    	ds	2
 10410  0023'                    _min_tens:	
 10411  0023'                    	ds	2
 10412  0025'                    _hours_units:	
 10413  0025'                    	ds	2
 10414  0027'                    _hours_tens:	
 10415  0027'                    	ds	2
 10416  0029'                    _value:	
 10417  0029'                    	ds	2
 10418  002B'                    _i2c1_driver_i2cISR:	
 10419  002B'                    	ds	2
 10420  002D'                    _i2c1_driver_busCollisionISR:	
 10421  002D'                    	ds	2
 10422  002F'                    _str_rc:	
 10423  002F'                    	ds	16
 10424  003F'                    _ring_byte:	
 10425  003F'                    	ds	5
 10426                           
 10427                           	psect	dataBANK2
 10428  0000'                    __pdataBANK2:	
 10429  0000'                    _str_snd:	
 10430  0000'                    	ds	16
 10431                           
 10432                           	psect	inittext
 10433  0000'                    init_ram:	
 10434  0000' 00FE               	movwf	btemp
 10435  0001'                    initloop:	
 10436  0001' 0012               	moviw fsr0++
 10437  0002' 001E               	movwi fsr1++
 10438  0003' 0BFE               	decfsz	btemp,f
 10439  0004' 2800'              	goto	initloop
 10440  0005' 3400               	retlw	0
 10441                           
 10442                           	psect	clrtext
 10443  0000'                    clear_ram0:	
 10444                           ;	Called with FSR0 containing the base address, and
 10445                           ;	WREG with the size to clear
 10446                           
 10447  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
 10448  0001'                    clrloop0:	
 10449  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
 10450  0002' 3101               	addfsr 0,1
 10451  0003' 0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 10452  0004' 2800'              	goto	clrloop0	;have we reached the end yet?
 10453  0005' 3400               	retlw	0	;all done for this memory range, return
 10454                           
 10455                           	psect	cstackBANK1
 10456  0000'                    __pcstackBANK1:	
 10457  0000'                    	ds	2
 10458  0002'                    main@t5s:	
 10459                           
 10460                           ; 1 bytes @ 0x2
 10461  0002'                    	ds	1
 10462  0003'                    main@t1m:	
 10463                           
 10464                           ; 1 bytes @ 0x3
 10465  0003'                    	ds	1
 10466                           
 10467                           	psect	cstackCOMMON
 10468  0000'                    __pcstackCOMMON:	
 10469  0000'                    ?_i2c1_driver_open:	
 10470  0000'                    ?_i2c1_driver_isNACK:	
 10471                           ; 1 bit 
 10472                           
 10473  0000'                    ?_setCallBack:	
 10474                           ; 1 bit 
 10475                           
 10476  0000'                    ?_mssp1_clearIRQ:	
 10477                           ; 1 bytes @ 0x0
 10478                           
 10479  0000'                    ??_mssp1_clearIRQ:	
 10480                           ; 1 bytes @ 0x0
 10481                           
 10482  0000'                    ?_i2c_busCollisionISR:	
 10483                           ; 1 bytes @ 0x0
 10484                           
 10485  0000'                    ??_i2c_busCollisionISR:	
 10486                           ; 1 bytes @ 0x0
 10487                           
 10488  0000'                    ?_i2c_ISR:	
 10489                           ; 1 bytes @ 0x0
 10490                           
 10491  0000'                    ?_i2c1_driver_resetBus:	
 10492                           ; 1 bytes @ 0x0
 10493                           
 10494  0000'                    ??_i2c1_driver_resetBus:	
 10495                           ; 1 bytes @ 0x0
 10496                           
 10497  0000'                    ?_i2c1_driver_restart:	
 10498                           ; 1 bytes @ 0x0
 10499                           
 10500  0000'                    ??_i2c1_driver_restart:	
 10501                           ; 1 bytes @ 0x0
 10502                           
 10503  0000'                    ?_i2c1_driver_stop:	
 10504                           ; 1 bytes @ 0x0
 10505                           
 10506  0000'                    ??_i2c1_driver_stop:	
 10507                           ; 1 bytes @ 0x0
 10508                           
 10509  0000'                    ?_i2c1_driver_TXData:	
 10510                           ; 1 bytes @ 0x0
 10511                           
 10512  0000'                    ??_i2c1_driver_TXData:	
 10513                           ; 1 bytes @ 0x0
 10514                           
 10515  0000'                    ?_i2c1_driver_startRX:	
 10516                           ; 1 bytes @ 0x0
 10517                           
 10518  0000'                    ??_i2c1_driver_startRX:	
 10519                           ; 1 bytes @ 0x0
 10520                           
 10521  0000'                    ?_i2c1_driver_sendACK:	
 10522                           ; 1 bytes @ 0x0
 10523                           
 10524  0000'                    ??_i2c1_driver_sendACK:	
 10525                           ; 1 bytes @ 0x0
 10526                           
 10527  0000'                    ?_i2c1_driver_sendNACK:	
 10528                           ; 1 bytes @ 0x0
 10529                           
 10530  0000'                    ??_i2c1_driver_sendNACK:	
 10531                           ; 1 bytes @ 0x0
 10532                           
 10533  0000'                    ??_i2c1_driver_isNACK:	
 10534                           ; 1 bytes @ 0x0
 10535                           
 10536  0000'                    ?_i2c1_driver_getRXData:	
 10537                           ; 1 bytes @ 0x0
 10538                           
 10539  0000'                    ??_i2c1_driver_getRXData:	
 10540                           ; 1 bytes @ 0x0
 10541                           
 10542  0000'                    ?_mssp1_setIRQ:	
 10543                           ; 1 bytes @ 0x0
 10544                           
 10545  0000'                    ??_mssp1_setIRQ:	
 10546                           ; 1 bytes @ 0x0
 10547                           
 10548  0000'                    ?_i2c1_driver_clearBusCollision:	
 10549                           ; 1 bytes @ 0x0
 10550                           
 10551  0000'                    ??_i2c1_driver_clearBusCollision:	
 10552                           ; 1 bytes @ 0x0
 10553                           
 10554  0000'                    ?_INT_CallBack:	
 10555                           ; 1 bytes @ 0x0
 10556                           
 10557  0000'                    ?_TMR0_ISR:	
 10558                           ; 1 bytes @ 0x0
 10559                           
 10560  0000'                    ?_TMR1_ISR:	
 10561                           ; 1 bytes @ 0x0
 10562                           
 10563  0000'                    ?_TMR2_ISR:	
 10564                           ; 1 bytes @ 0x0
 10565                           
 10566  0000'                    ?_PMD_Initialize:	
 10567                           ; 1 bytes @ 0x0
 10568                           
 10569  0000'                    ?_PIN_MANAGER_Initialize:	
 10570                           ; 1 bytes @ 0x0
 10571                           
 10572  0000'                    ?_OSCILLATOR_Initialize:	
 10573                           ; 1 bytes @ 0x0
 10574                           
 10575  0000'                    ?_PWM6_Initialize:	
 10576                           ; 1 bytes @ 0x0
 10577                           
 10578  0000'                    ?_ADCC_Initialize:	
 10579                           ; 1 bytes @ 0x0
 10580                           
 10581  0000'                    ?_TMR2_Initialize:	
 10582                           ; 1 bytes @ 0x0
 10583                           
 10584  0000'                    ?_TMR1_Initialize:	
 10585                           ; 1 bytes @ 0x0
 10586                           
 10587  0000'                    ?_TMR0_Initialize:	
 10588                           ; 1 bytes @ 0x0
 10589                           
 10590  0000'                    ?_EUSART_Initialize:	
 10591                           ; 1 bytes @ 0x0
 10592                           
 10593  0000'                    ?_TMR0_DefaultInterruptHandler:	
 10594                           ; 1 bytes @ 0x0
 10595                           
 10596  0000'                    ??_TMR0_DefaultInterruptHandler:	
 10597                           ; 1 bytes @ 0x0
 10598                           
 10599  0000'                    ?_TMR1_DefaultInterruptHandler:	
 10600                           ; 1 bytes @ 0x0
 10601                           
 10602  0000'                    ??_TMR1_DefaultInterruptHandler:	
 10603                           ; 1 bytes @ 0x0
 10604                           
 10605  0000'                    ?_TMR2_DefaultInterruptHandler:	
 10606                           ; 1 bytes @ 0x0
 10607                           
 10608  0000'                    ??_TMR2_DefaultInterruptHandler:	
 10609                           ; 1 bytes @ 0x0
 10610                           
 10611  0000'                    ?_checkDebounceSW1:	
 10612                           ; 1 bytes @ 0x0
 10613                           
 10614  0000'                    ?_handler_clock_hms:	
 10615                           ; 1 bytes @ 0x0
 10616                           
 10617  0000'                    ??_handler_clock_hms:	
 10618                           ; 1 bytes @ 0x0
 10619                           
 10620  0000'                    ?_handler_clock_ms:	
 10621                           ; 1 bytes @ 0x0
 10622                           
 10623  0000'                    ??_handler_clock_ms:	
 10624                           ; 1 bytes @ 0x0
 10625                           
 10626  0000'                    ?_recoverData:	
 10627                           ; 1 bytes @ 0x0
 10628                           
 10629  0000'                    ?_EUSART_is_rx_ready:	
 10630                           ; 1 bytes @ 0x0
 10631                           
 10632  0000'                    ?_tsttc:	
 10633                           ; 1 bytes @ 0x0
 10634                           
 10635  0000'                    ?_cksum_w:	
 10636                           ; 1 bytes @ 0x0
 10637                           
 10638  0000'                    ?_check_thresholds:	
 10639                           ; 1 bytes @ 0x0
 10640                           
 10641  0000'                    ?_config_routine:	
 10642                           ; 1 bytes @ 0x0
 10643                           
 10644  0000'                    ?_save_recovery_params:	
 10645                           ; 1 bytes @ 0x0
 10646                           
 10647  0000'                    ?_all_LED:	
 10648                           ; 1 bytes @ 0x0
 10649                           
 10650  0000'                    ?_mod1_LED:	
 10651                           ; 1 bytes @ 0x0
 10652                           
 10653  0000'                    ?_mod2_LED:	
 10654                           ; 1 bytes @ 0x0
 10655                           
 10656  0000'                    ?_mod3_LED:	
 10657                           ; 1 bytes @ 0x0
 10658                           
 10659  0000'                    ?_mod4_LED:	
 10660                           ; 1 bytes @ 0x0
 10661                           
 10662  0000'                    ?_checkDebounceSW2:	
 10663                           ; 1 bytes @ 0x0
 10664                           
 10665  0000'                    ?_mode_select_LED:	
 10666                           ; 1 bytes @ 0x0
 10667                           
 10668  0000'                    ?_selectSubfield:	
 10669                           ; 1 bytes @ 0x0
 10670                           
 10671  0000'                    ?_mode_LED:	
 10672                           ; 1 bytes @ 0x0
 10673                           
 10674  0000'                    ?_getSubfieldInfo:	
 10675                           ; 1 bytes @ 0x0
 10676                           
 10677  0000'                    ?_limitHoursUnits:	
 10678                           ; 1 bytes @ 0x0
 10679                           
 10680  0000'                    ?_limitTempThreshUnits:	
 10681                           ; 1 bytes @ 0x0
 10682                           
 10683  0000'                    ?_representLed:	
 10684                           ; 1 bytes @ 0x0
 10685                           
 10686  0000'                    ?_WriteI2C:	
 10687                           ; 1 bytes @ 0x0
 10688                           
 10689  0000'                    ?_ReadI2C:	
 10690                           ; 1 bytes @ 0x0
 10691                           
 10692  0000'                    ?_cksum:	
 10693                           ; 1 bytes @ 0x0
 10694                           
 10695  0000'                    ?_reset_recv:	
 10696                           ; 1 bytes @ 0x0
 10697                           
 10698  0000'                    ?_read_UART:	
 10699                           ; 1 bytes @ 0x0
 10700                           
 10701  0000'                    ?_dump_UART_FIFO:	
 10702                           ; 1 bytes @ 0x0
 10703                           
 10704  0000'                    ?_EUSART_Read:	
 10705                           ; 1 bytes @ 0x0
 10706                           
 10707  0000'                    ?_EUSART_is_tx_ready:	
 10708                           ; 1 bytes @ 0x0
 10709                           
 10710  0000'                    ?_EUSART_Write:	
 10711                           ; 1 bytes @ 0x0
 10712                           
 10713  0000'                    ?_write_UART:	
 10714                           ; 1 bytes @ 0x0
 10715                           
 10716  0000'                    ?_EUSART_is_tx_done:	
 10717                           ; 1 bytes @ 0x0
 10718                           
 10719  0000'                    ?_i2c_setBuffer:	
 10720                           ; 1 bytes @ 0x0
 10721                           
 10722  0000'                    ?_do_I2C_RESET:	
 10723                           ; 1 bytes @ 0x0
 10724                           
 10725  0000'                    ??_do_I2C_RESET:	
 10726                           ; 1 bytes @ 0x0
 10727                           
 10728  0000'                    ?_do_I2C_IDLE:	
 10729                           ; 1 bytes @ 0x0
 10730                           
 10731  0000'                    ??_do_I2C_IDLE:	
 10732                           ; 1 bytes @ 0x0
 10733                           
 10734  0000'                    ?_do_I2C_SEND_RESTART_READ:	
 10735                           ; 1 bytes @ 0x0
 10736                           
 10737  0000'                    ??_do_I2C_SEND_RESTART_READ:	
 10738                           ; 1 bytes @ 0x0
 10739                           
 10740  0000'                    ?_do_I2C_SEND_RESTART_WRITE:	
 10741                           ; 1 bytes @ 0x0
 10742                           
 10743  0000'                    ??_do_I2C_SEND_RESTART_WRITE:	
 10744                           ; 1 bytes @ 0x0
 10745                           
 10746  0000'                    ?_do_I2C_SEND_RESTART:	
 10747                           ; 1 bytes @ 0x0
 10748                           
 10749  0000'                    ??_do_I2C_SEND_RESTART:	
 10750                           ; 1 bytes @ 0x0
 10751                           
 10752  0000'                    ?_do_I2C_SEND_STOP:	
 10753                           ; 1 bytes @ 0x0
 10754                           
 10755  0000'                    ??_do_I2C_SEND_STOP:	
 10756                           ; 1 bytes @ 0x0
 10757                           
 10758  0000'                    ?_do_I2C_SEND_ADR_READ:	
 10759                           ; 1 bytes @ 0x0
 10760                           
 10761  0000'                    ??_do_I2C_SEND_ADR_READ:	
 10762                           ; 1 bytes @ 0x0
 10763                           
 10764  0000'                    ?_do_I2C_SEND_ADR_WRITE:	
 10765                           ; 1 bytes @ 0x0
 10766                           
 10767  0000'                    ?_do_I2C_RCEN:	
 10768                           ; 1 bytes @ 0x0
 10769                           
 10770  0000'                    ??_do_I2C_RCEN:	
 10771                           ; 1 bytes @ 0x0
 10772                           
 10773  0000'                    ?_do_I2C_DO_ACK:	
 10774                           ; 1 bytes @ 0x0
 10775                           
 10776  0000'                    ??_do_I2C_DO_ACK:	
 10777                           ; 1 bytes @ 0x0
 10778                           
 10779  0000'                    ?_do_I2C_DO_NACK_STOP:	
 10780                           ; 1 bytes @ 0x0
 10781                           
 10782  0000'                    ??_do_I2C_DO_NACK_STOP:	
 10783                           ; 1 bytes @ 0x0
 10784                           
 10785  0000'                    ?_do_I2C_DO_NACK_RESTART:	
 10786                           ; 1 bytes @ 0x0
 10787                           
 10788  0000'                    ??_do_I2C_DO_NACK_RESTART:	
 10789                           ; 1 bytes @ 0x0
 10790                           
 10791  0000'                    ?_do_I2C_DO_ADDRESS_NACK:	
 10792                           ; 1 bytes @ 0x0
 10793                           
 10794  0000'                    ?_do_I2C_TX:	
 10795                           ; 1 bytes @ 0x0
 10796                           
 10797  0000'                    ?_do_I2C_RX:	
 10798                           ; 1 bytes @ 0x0
 10799                           
 10800  0000'                    ?_do_I2C_TX_EMPTY:	
 10801                           ; 1 bytes @ 0x0
 10802                           
 10803  0000'                    ?_INT_ISR:	
 10804                           ; 1 bytes @ 0x0
 10805                           
 10806  0000'                    ?_INT_DefaultInterruptHandler:	
 10807                           ; 1 bytes @ 0x0
 10808                           
 10809  0000'                    ??_INT_DefaultInterruptHandler:	
 10810                           ; 1 bytes @ 0x0
 10811                           
 10812  0000'                    ?_EXT_INT_Initialize:	
 10813                           ; 1 bytes @ 0x0
 10814                           
 10815  0000'                    ?_INTERRUPT_InterruptManager:	
 10816                           ; 1 bytes @ 0x0
 10817                           
 10818  0000'                    ?_SYSTEM_Initialize:	
 10819                           ; 1 bytes @ 0x0
 10820                           
 10821  0000'                    ?_ADCC_StartConversion:	
 10822                           ; 1 bytes @ 0x0
 10823                           
 10824  0000'                    ?_ADCC_IsConversionDone:	
 10825                           ; 1 bytes @ 0x0
 10826                           
 10827  0000'                    ?_TMR0_StartTimer:	
 10828                           ; 1 bytes @ 0x0
 10829                           
 10830  0000'                    ?_TMR0_StopTimer:	
 10831                           ; 1 bytes @ 0x0
 10832                           
 10833  0000'                    ??_TMR0_StopTimer:	
 10834                           ; 1 bytes @ 0x0
 10835                           
 10836  0000'                    ?_TMR1_WriteTimer:	
 10837                           ; 1 bytes @ 0x0
 10838                           
 10839  0000'                    ?_sw1_EXT:	
 10840                           ; 1 bytes @ 0x0
 10841                           
 10842  0000'                    ?_ISR_3s:	
 10843                           ; 1 bytes @ 0x0
 10844                           
 10845  0000'                    ?_main:	
 10846                           ; 1 bytes @ 0x0
 10847                           
 10848  0000'                    ?i1_PWM6_LoadDutyValue:	
 10849                           ; 1 bytes @ 0x0
 10850                           
 10851  0000'                    ?i1_checkDebounceSW1:	
 10852                           ; 1 bytes @ 0x0
 10853                           
 10854  0000'                    ??i1_checkDebounceSW1:	
 10855                           ; 1 bytes @ 0x0
 10856                           
 10857  0000'                    i2c1_driver_TXData@d:	
 10858                           ; 1 bytes @ 0x0
 10859                           
 10860  0000'                    i2c_setBuffer@bufferSize:	
 10861                           ; 1 bytes @ 0x0
 10862                           
 10863  0000'                    setCallBack@cb:	
 10864                           ; 2 bytes @ 0x0
 10865                           
 10866  0000'                    TMR1_WriteTimer@timerVal:	
 10867                           ; 2 bytes @ 0x0
 10868                           
 10869  0000'                    i1PWM6_LoadDutyValue@dutyValue:	
 10870                           ; 2 bytes @ 0x0
 10871                           
 10872                           
 10873                           ; 2 bytes @ 0x0
 10874  0000'                    	ds	1
 10875  0001'                    ??_TMR2_ISR:	
 10876  0001'                    ??_do_I2C_SEND_ADR_WRITE:	
 10877                           ; 1 bytes @ 0x1
 10878                           
 10879                           
 10880                           ; 1 bytes @ 0x1
 10881  0001'                    	ds	1
 10882  0002'                    ??_TMR1_ISR:	
 10883  0002'                    ??_i2c_setBuffer:	
 10884                           ; 1 bytes @ 0x2
 10885                           
 10886  0002'                    ??_TMR1_WriteTimer:	
 10887                           ; 1 bytes @ 0x2
 10888                           
 10889  0002'                    ??i1_PWM6_LoadDutyValue:	
 10890                           ; 1 bytes @ 0x2
 10891                           
 10892  0002'                    setCallBack@p:	
 10893                           ; 1 bytes @ 0x2
 10894                           
 10895                           
 10896                           ; 1 bytes @ 0x2
 10897  0002'                    	ds	1
 10898  0003'                    ??_setCallBack:	
 10899  0003'                    i2c_setBuffer@buffer:	
 10900                           ; 1 bytes @ 0x3
 10901                           
 10902                           
 10903                           ; 1 bytes @ 0x3
 10904  0003'                    	ds	1
 10905  0004'                    ??_ISR_3s:	
 10906  0004'                    setCallBack@idx:	
 10907                           ; 1 bytes @ 0x4
 10908                           
 10909                           
 10910                           ; 1 bytes @ 0x4
 10911  0004'                    	ds	1
 10912  0005'                    ??_TMR0_ISR:	
 10913  0005'                    ?_i2c_setDataCompleteCallback:	
 10914                           ; 1 bytes @ 0x5
 10915                           
 10916  0005'                    i2c_setDataCompleteCallback@cb:	
 10917                           ; 1 bytes @ 0x5
 10918                           
 10919                           
 10920                           ; 2 bytes @ 0x5
 10921  0005'                    	ds	2
 10922  0007'                    ??_sw1_EXT:	
 10923  0007'                    i2c_setDataCompleteCallback@p:	
 10924                           ; 1 bytes @ 0x7
 10925                           
 10926                           
 10927                           ; 1 bytes @ 0x7
 10928  0007'                    	ds	1
 10929  0008'                    ??_INT_CallBack:	
 10930  0008'                    ??_i2c_setDataCompleteCallback:	
 10931                           ; 1 bytes @ 0x8
 10932                           
 10933  0008'                    ??_INT_ISR:	
 10934                           ; 1 bytes @ 0x8
 10935                           
 10936                           
 10937                           ; 1 bytes @ 0x8
 10938  0008'                    	ds	1
 10939  0009'                    ?_returnStop:	
 10940  0009'                    ?_returnReset:	
 10941                           ; 1 bytes @ 0x9
 10942                           
 10943  0009'                    ?_i2c_restartWrite:	
 10944                           ; 1 bytes @ 0x9
 10945                           
 10946  0009'                    ?_wr1RegCompleteHandler:	
 10947                           ; 1 bytes @ 0x9
 10948                           
 10949  0009'                    ?_rd1RegCompleteHandler:	
 10950                           ; 1 bytes @ 0x9
 10951                           
 10952  0009'                    ?_rd2RegCompleteHandler:	
 10953                           ; 1 bytes @ 0x9
 10954                           
 10955  0009'                    ?_wr2RegCompleteHandler:	
 10956                           ; 1 bytes @ 0x9
 10957                           
 10958  0009'                    ?_rdBlkRegCompleteHandler:	
 10959                           ; 1 bytes @ 0x9
 10960                           
 10961  0009'                    i2c_restartWrite@p:	
 10962                           ; 1 bytes @ 0x9
 10963                           
 10964  0009'                    returnStop@p:	
 10965                           ; 1 bytes @ 0x9
 10966                           
 10967  0009'                    returnReset@p:	
 10968                           ; 1 bytes @ 0x9
 10969                           
 10970  0009'                    wr1RegCompleteHandler@p:	
 10971                           ; 1 bytes @ 0x9
 10972                           
 10973  0009'                    rd1RegCompleteHandler@p:	
 10974                           ; 1 bytes @ 0x9
 10975                           
 10976  0009'                    rd2RegCompleteHandler@p:	
 10977                           ; 1 bytes @ 0x9
 10978                           
 10979  0009'                    wr2RegCompleteHandler@p:	
 10980                           ; 1 bytes @ 0x9
 10981                           
 10982  0009'                    rdBlkRegCompleteHandler@p:	
 10983                           ; 1 bytes @ 0x9
 10984                           
 10985                           
 10986                           ; 1 bytes @ 0x9
 10987  0009'                    	ds	1
 10988  000A'                    ??_returnStop:	
 10989  000A'                    ??_returnReset:	
 10990                           ; 1 bytes @ 0xA
 10991                           
 10992  000A'                    ??_i2c_restartWrite:	
 10993                           ; 1 bytes @ 0xA
 10994                           
 10995  000A'                    ??_do_I2C_DO_ADDRESS_NACK:	
 10996                           ; 1 bytes @ 0xA
 10997                           
 10998  000A'                    ??_do_I2C_TX:	
 10999                           ; 1 bytes @ 0xA
 11000                           
 11001  000A'                    ??_do_I2C_RX:	
 11002                           ; 1 bytes @ 0xA
 11003                           
 11004  000A'                    ??_do_I2C_TX_EMPTY:	
 11005                           ; 1 bytes @ 0xA
 11006                           
 11007  000A'                    ??_wr1RegCompleteHandler:	
 11008                           ; 1 bytes @ 0xA
 11009                           
 11010  000A'                    ??_rd1RegCompleteHandler:	
 11011                           ; 1 bytes @ 0xA
 11012                           
 11013  000A'                    ??_rd2RegCompleteHandler:	
 11014                           ; 1 bytes @ 0xA
 11015                           
 11016  000A'                    ??_wr2RegCompleteHandler:	
 11017                           ; 1 bytes @ 0xA
 11018                           
 11019  000A'                    ??_rdBlkRegCompleteHandler:	
 11020                           ; 1 bytes @ 0xA
 11021                           
 11022                           
 11023                           ; 1 bytes @ 0xA
 11024  000A'                    	ds	3
 11025  000D'                    ??_INTERRUPT_InterruptManager:	
 11026                           
 11027                           	psect	cstackBANK0
 11028  0000'                    __pcstackBANK0:	
 11029                           ; 1 bytes @ 0xD
 11030                           
 11031  0000'                    ??_i2c_ISR:	
 11032  0000'                    ??_EUSART_Initialize:	
 11033                           ; 1 bytes @ 0x0
 11034                           
 11035  0000'                    ??_EUSART_is_rx_ready:	
 11036                           ; 1 bytes @ 0x0
 11037                           
 11038  0000'                    ??_EUSART_Read:	
 11039                           ; 1 bytes @ 0x0
 11040                           
 11041  0000'                    ??_EUSART_is_tx_ready:	
 11042                           ; 1 bytes @ 0x0
 11043                           
 11044  0000'                    ??_EUSART_Write:	
 11045                           ; 1 bytes @ 0x0
 11046                           
 11047  0000'                    ??_EUSART_is_tx_done:	
 11048                           ; 1 bytes @ 0x0
 11049                           
 11050                           
 11051                           ; 1 bytes @ 0x0
 11052  0000'                    	ds	3
 11053  0003'                    ??_i2c1_driver_open:	
 11054  0003'                    ??_PMD_Initialize:	
 11055                           ; 1 bytes @ 0x3
 11056                           
 11057  0003'                    ??_PIN_MANAGER_Initialize:	
 11058                           ; 1 bytes @ 0x3
 11059                           
 11060  0003'                    ??_OSCILLATOR_Initialize:	
 11061                           ; 1 bytes @ 0x3
 11062                           
 11063  0003'                    ??_PWM6_Initialize:	
 11064                           ; 1 bytes @ 0x3
 11065                           
 11066  0003'                    ??_ADCC_Initialize:	
 11067                           ; 1 bytes @ 0x3
 11068                           
 11069  0003'                    ?_TMR0_SetInterruptHandler:	
 11070                           ; 1 bytes @ 0x3
 11071                           
 11072  0003'                    ?_TMR1_SetInterruptHandler:	
 11073                           ; 1 bytes @ 0x3
 11074                           
 11075  0003'                    ?_TMR2_SetInterruptHandler:	
 11076                           ; 1 bytes @ 0x3
 11077                           
 11078  0003'                    ??_checkDebounceSW1:	
 11079                           ; 1 bytes @ 0x3
 11080                           
 11081  0003'                    ?_LED_bin:	
 11082                           ; 1 bytes @ 0x3
 11083                           
 11084  0003'                    ?_ring_buffer:	
 11085                           ; 1 bytes @ 0x3
 11086                           
 11087  0003'                    ??_checkDebounceSW2:	
 11088                           ; 1 bytes @ 0x3
 11089                           
 11090  0003'                    ??_WriteI2C:	
 11091                           ; 1 bytes @ 0x3
 11092                           
 11093  0003'                    ??_ReadI2C:	
 11094                           ; 1 bytes @ 0x3
 11095                           
 11096  0003'                    ?_memset:	
 11097                           ; 1 bytes @ 0x3
 11098                           
 11099  0003'                    ??_read_UART:	
 11100                           ; 1 bytes @ 0x3
 11101                           
 11102  0003'                    ??_dump_UART_FIFO:	
 11103                           ; 1 bytes @ 0x3
 11104                           
 11105  0003'                    ??_write_UART:	
 11106                           ; 1 bytes @ 0x3
 11107                           
 11108  0003'                    ?_INT_SetInterruptHandler:	
 11109                           ; 1 bytes @ 0x3
 11110                           
 11111  0003'                    ??_ADCC_StartConversion:	
 11112                           ; 1 bytes @ 0x3
 11113                           
 11114  0003'                    ??_ADCC_IsConversionDone:	
 11115                           ; 1 bytes @ 0x3
 11116                           
 11117  0003'                    ??_TMR0_StartTimer:	
 11118                           ; 1 bytes @ 0x3
 11119                           
 11120  0003'                    ?_DATAEE_ReadByte:	
 11121                           ; 1 bytes @ 0x3
 11122                           
 11123  0003'                    ?___bmul:	
 11124                           ; 1 bytes @ 0x3
 11125                           
 11126  0003'                    ?_ADCC_GetConversionResult:	
 11127                           ; 1 bytes @ 0x3
 11128                           
 11129  0003'                    ?___wmul:	
 11130                           ; 2 bytes @ 0x3
 11131                           
 11132  0003'                    ?___awdiv:	
 11133                           ; 2 bytes @ 0x3
 11134                           
 11135  0003'                    ?___awmod:	
 11136                           ; 2 bytes @ 0x3
 11137                           
 11138  0003'                    ADCC_StartConversion@channel:	
 11139                           ; 2 bytes @ 0x3
 11140                           
 11141  0003'                    ring_buffer@clock_h:	
 11142                           ; 1 bytes @ 0x3
 11143                           
 11144  0003'                    dump_UART_FIFO@dump:	
 11145                           ; 1 bytes @ 0x3
 11146                           
 11147  0003'                    write_UART@rxData:	
 11148                           ; 1 bytes @ 0x3
 11149                           
 11150  0003'                    ___bmul@multiplicand:	
 11151                           ; 1 bytes @ 0x3
 11152                           
 11153  0003'                    INT_SetInterruptHandler@InterruptHandler:	
 11154                           ; 1 bytes @ 0x3
 11155                           
 11156  0003'                    TMR0_SetInterruptHandler@InterruptHandler:	
 11157                           ; 2 bytes @ 0x3
 11158                           
 11159  0003'                    TMR1_SetInterruptHandler@InterruptHandler:	
 11160                           ; 2 bytes @ 0x3
 11161                           
 11162  0003'                    DATAEE_ReadByte@bAdd:	
 11163                           ; 2 bytes @ 0x3
 11164                           
 11165  0003'                    TMR2_SetInterruptHandler@InterruptHandler:	
 11166                           ; 2 bytes @ 0x3
 11167                           
 11168  0003'                    LED_bin@value:	
 11169                           ; 2 bytes @ 0x3
 11170                           
 11171  0003'                    ___wmul@multiplier:	
 11172                           ; 2 bytes @ 0x3
 11173                           
 11174  0003'                    ___awdiv@divisor:	
 11175                           ; 2 bytes @ 0x3
 11176                           
 11177  0003'                    ___awmod@divisor:	
 11178                           ; 2 bytes @ 0x3
 11179                           
 11180  0003'                    memset@c:	
 11181                           ; 2 bytes @ 0x3
 11182                           
 11183                           
 11184                           ; 2 bytes @ 0x3
 11185  0003'                    	ds	1
 11186  0004'                    ?_write_str_UART:	
 11187  0004'                    ??___bmul:	
 11188                           ; 1 bytes @ 0x4
 11189                           
 11190  0004'                    ring_buffer@clock_m:	
 11191                           ; 1 bytes @ 0x4
 11192                           
 11193  0004'                    WriteI2C@data_out:	
 11194                           ; 1 bytes @ 0x4
 11195                           
 11196  0004'                    write_str_UART@string:	
 11197                           ; 1 bytes @ 0x4
 11198                           
 11199                           
 11200                           ; 2 bytes @ 0x4
 11201  0004'                    	ds	1
 11202  0005'                    ??_TMR2_Initialize:	
 11203  0005'                    ??_TMR1_Initialize:	
 11204                           ; 1 bytes @ 0x5
 11205                           
 11206  0005'                    ??_TMR0_Initialize:	
 11207                           ; 1 bytes @ 0x5
 11208                           
 11209  0005'                    ??_TMR0_SetInterruptHandler:	
 11210                           ; 1 bytes @ 0x5
 11211                           
 11212  0005'                    ??_TMR1_SetInterruptHandler:	
 11213                           ; 1 bytes @ 0x5
 11214                           
 11215  0005'                    ??_TMR2_SetInterruptHandler:	
 11216                           ; 1 bytes @ 0x5
 11217                           
 11218  0005'                    ??_LED_bin:	
 11219                           ; 1 bytes @ 0x5
 11220                           
 11221  0005'                    ??_tsttc:	
 11222                           ; 1 bytes @ 0x5
 11223                           
 11224  0005'                    ??_cksum:	
 11225                           ; 1 bytes @ 0x5
 11226                           
 11227  0005'                    ??_INT_SetInterruptHandler:	
 11228                           ; 1 bytes @ 0x5
 11229                           
 11230  0005'                    ??_EXT_INT_Initialize:	
 11231                           ; 1 bytes @ 0x5
 11232                           
 11233  0005'                    ??_SYSTEM_Initialize:	
 11234                           ; 1 bytes @ 0x5
 11235                           
 11236  0005'                    ??_ADCC_GetConversionResult:	
 11237                           ; 1 bytes @ 0x5
 11238                           
 11239  0005'                    ??_DATAEE_ReadByte:	
 11240                           ; 1 bytes @ 0x5
 11241                           
 11242  0005'                    ?_ADC_read:	
 11243                           ; 1 bytes @ 0x5
 11244                           
 11245  0005'                    ring_buffer@clock_s:	
 11246                           ; 2 bytes @ 0x5
 11247                           
 11248  0005'                    ___bmul@product:	
 11249                           ; 1 bytes @ 0x5
 11250                           
 11251  0005'                    ___wmul@multiplicand:	
 11252                           ; 1 bytes @ 0x5
 11253                           
 11254  0005'                    ___awdiv@dividend:	
 11255                           ; 2 bytes @ 0x5
 11256                           
 11257  0005'                    ___awmod@dividend:	
 11258                           ; 2 bytes @ 0x5
 11259                           
 11260  0005'                    memset@n:	
 11261                           ; 2 bytes @ 0x5
 11262                           
 11263                           
 11264                           ; 2 bytes @ 0x5
 11265  0005'                    	ds	1
 11266  0006'                    ring_buffer@tem:	
 11267  0006'                    tsttc@value:	
 11268                           ; 1 bytes @ 0x6
 11269                           
 11270  0006'                    cksum@res:	
 11271                           ; 1 bytes @ 0x6
 11272                           
 11273  0006'                    write_str_UART@size:	
 11274                           ; 1 bytes @ 0x6
 11275                           
 11276  0006'                    ___bmul@multiplier:	
 11277                           ; 1 bytes @ 0x6
 11278                           
 11279                           
 11280                           ; 1 bytes @ 0x6
 11281  0006'                    	ds	1
 11282  0007'                    ??_write_str_UART:	
 11283  0007'                    ??_ADC_read:	
 11284                           ; 1 bytes @ 0x7
 11285                           
 11286  0007'                    ?_read_ring:	
 11287                           ; 1 bytes @ 0x7
 11288                           
 11289  0007'                    ??_memset:	
 11290                           ; 1 bytes @ 0x7
 11291                           
 11292  0007'                    ??___wmul:	
 11293                           ; 1 bytes @ 0x7
 11294                           
 11295  0007'                    ??___awdiv:	
 11296                           ; 1 bytes @ 0x7
 11297                           
 11298  0007'                    ??___awmod:	
 11299                           ; 1 bytes @ 0x7
 11300                           
 11301  0007'                    ring_buffer@lum:	
 11302                           ; 1 bytes @ 0x7
 11303                           
 11304  0007'                    read_ring@nreg:	
 11305                           ; 1 bytes @ 0x7
 11306                           
 11307  0007'                    cksum@i:	
 11308                           ; 1 bytes @ 0x7
 11309                           
 11310  0007'                    ___wmul@product:	
 11311                           ; 2 bytes @ 0x7
 11312                           
 11313                           
 11314                           ; 2 bytes @ 0x7
 11315  0007'                    	ds	1
 11316  0008'                    ??_ring_buffer:	
 11317  0008'                    read_ring@nreg_init:	
 11318                           ; 1 bytes @ 0x8
 11319                           
 11320  0008'                    ___awdiv@counter:	
 11321                           ; 1 bytes @ 0x8
 11322                           
 11323  0008'                    ___awmod@counter:	
 11324                           ; 1 bytes @ 0x8
 11325                           
 11326                           
 11327                           ; 1 bytes @ 0x8
 11328  0008'                    	ds	1
 11329  0009'                    ?_PWM6_LoadDutyValue:	
 11330  0009'                    ?_DATAEE_WriteByte:	
 11331                           ; 1 bytes @ 0x9
 11332                           
 11333  0009'                    ring_buffer@_ring_byte:	
 11334                           ; 1 bytes @ 0x9
 11335                           
 11336  0009'                    read_ring@index:	
 11337                           ; 1 bytes @ 0x9
 11338                           
 11339  0009'                    write_str_UART@id:	
 11340                           ; 1 bytes @ 0x9
 11341                           
 11342  0009'                    ___awdiv@sign:	
 11343                           ; 1 bytes @ 0x9
 11344                           
 11345  0009'                    ___awmod@sign:	
 11346                           ; 1 bytes @ 0x9
 11347                           
 11348  0009'                    memset@dest:	
 11349                           ; 1 bytes @ 0x9
 11350                           
 11351  0009'                    PWM6_LoadDutyValue@dutyValue:	
 11352                           ; 1 bytes @ 0x9
 11353                           
 11354  0009'                    DATAEE_WriteByte@bAdd:	
 11355                           ; 2 bytes @ 0x9
 11356                           
 11357                           
 11358                           ; 2 bytes @ 0x9
 11359  0009'                    	ds	1
 11360  000A'                    read_ring@subindex:	
 11361  000A'                    ___awdiv@quotient:	
 11362                           ; 1 bytes @ 0xA
 11363                           
 11364  000A'                    memset@k:	
 11365                           ; 2 bytes @ 0xA
 11366                           
 11367                           
 11368                           ; 2 bytes @ 0xA
 11369  000A'                    	ds	1
 11370  000B'                    ??_read_ring:	
 11371  000B'                    ??_PWM6_LoadDutyValue:	
 11372                           ; 1 bytes @ 0xB
 11373                           
 11374  000B'                    DATAEE_WriteByte@bData:	
 11375                           ; 1 bytes @ 0xB
 11376                           
 11377                           
 11378                           ; 1 bytes @ 0xB
 11379  000B'                    	ds	1
 11380  000C'                    ??_limitHoursUnits:	
 11381  000C'                    ??_limitTempThreshUnits:	
 11382                           ; 1 bytes @ 0xC
 11383                           
 11384  000C'                    ??_DATAEE_WriteByte:	
 11385                           ; 1 bytes @ 0xC
 11386                           
 11387  000C'                    DATAEE_WriteByte@GIEBitValue:	
 11388                           ; 1 bytes @ 0xC
 11389                           
 11390  000C'                    memset@s:	
 11391                           ; 1 bytes @ 0xC
 11392                           
 11393                           
 11394                           ; 1 bytes @ 0xC
 11395  000C'                    	ds	1
 11396  000D'                    ?_read_str_UART:	
 11397  000D'                    ?_push_ring:	
 11398                           ; 1 bytes @ 0xD
 11399                           
 11400  000D'                    ??_cksum_w:	
 11401                           ; 1 bytes @ 0xD
 11402                           
 11403  000D'                    ??_check_thresholds:	
 11404                           ; 1 bytes @ 0xD
 11405                           
 11406  000D'                    ??_all_LED:	
 11407                           ; 1 bytes @ 0xD
 11408                           
 11409  000D'                    ??_mod1_LED:	
 11410                           ; 1 bytes @ 0xD
 11411                           
 11412  000D'                    ??_mod2_LED:	
 11413                           ; 1 bytes @ 0xD
 11414                           
 11415  000D'                    ??_mod3_LED:	
 11416                           ; 1 bytes @ 0xD
 11417                           
 11418  000D'                    ??_mod4_LED:	
 11419                           ; 1 bytes @ 0xD
 11420                           
 11421  000D'                    ??_mode_select_LED:	
 11422                           ; 1 bytes @ 0xD
 11423                           
 11424  000D'                    ??_mode_LED:	
 11425                           ; 1 bytes @ 0xD
 11426                           
 11427  000D'                    ??_representLed:	
 11428                           ; 1 bytes @ 0xD
 11429                           
 11430  000D'                    ??_reset_recv:	
 11431                           ; 1 bytes @ 0xD
 11432                           
 11433  000D'                    push_ring@nreg:	
 11434                           ; 1 bytes @ 0xD
 11435                           
 11436  000D'                    read_ring@i:	
 11437                           ; 1 bytes @ 0xD
 11438                           
 11439  000D'                    read_str_UART@max_len:	
 11440                           ; 1 bytes @ 0xD
 11441                           
 11442  000D'                    reset_recv@i:	
 11443                           ; 1 bytes @ 0xD
 11444                           
 11445                           
 11446                           ; 2 bytes @ 0xD
 11447  000D'                    	ds	1
 11448  000E'                    ??_read_str_UART:	
 11449  000E'                    ??_save_recovery_params:	
 11450                           ; 1 bytes @ 0xE
 11451                           
 11452  000E'                    check_thresholds@threshold:	
 11453                           ; 1 bytes @ 0xE
 11454                           
 11455  000E'                    push_ring@nreg_init:	
 11456                           ; 1 bytes @ 0xE
 11457                           
 11458  000E'                    read_ring@nreg_pt:	
 11459                           ; 1 bytes @ 0xE
 11460                           
 11461                           
 11462                           ; 1 bytes @ 0xE
 11463  000E'                    	ds	1
 11464  000F'                    ??_recoverData:	
 11465  000F'                    save_recovery_params@aux:	
 11466                           ; 1 bytes @ 0xF
 11467                           
 11468  000F'                    push_ring@ring_byte:	
 11469                           ; 1 bytes @ 0xF
 11470                           
 11471  000F'                    read_ring@absindex:	
 11472                           ; 1 bytes @ 0xF
 11473                           
 11474  000F'                    mode_LED@subfield:	
 11475                           ; 1 bytes @ 0xF
 11476                           
 11477                           
 11478                           ; 1 bytes @ 0xF
 11479  000F'                    	ds	1
 11480  0010'                    ??_push_ring:	
 11481  0010'                    save_recovery_params@aux1:	
 11482                           ; 1 bytes @ 0x10
 11483                           
 11484  0010'                    representLed@val:	
 11485                           ; 1 bytes @ 0x10
 11486                           
 11487  0010'                    read_str_UART@i:	
 11488                           ; 1 bytes @ 0x10
 11489                           
 11490                           
 11491                           ; 1 bytes @ 0x10
 11492  0010'                    	ds	1
 11493  0011'                    representLed@aux:	
 11494  0011'                    read_str_UART@buff:	
 11495                           ; 1 bytes @ 0x11
 11496                           
 11497                           
 11498                           ; 1 bytes @ 0x11
 11499  0011'                    	ds	1
 11500  0012'                    ?_increment_subfield:	
 11501  0012'                    push_ring@i:	
 11502                           ; 1 bytes @ 0x12
 11503                           
 11504  0012'                    read_str_UART@rxData:	
 11505                           ; 1 bytes @ 0x12
 11506                           
 11507  0012'                    increment_subfield@init_val:	
 11508                           ; 1 bytes @ 0x12
 11509                           
 11510                           
 11511                           ; 2 bytes @ 0x12
 11512  0012'                    	ds	1
 11513  0013'                    push_ring@nreg_pt:	
 11514                           
 11515                           ; 1 bytes @ 0x13
 11516  0013'                    	ds	1
 11517  0014'                    ??_increment_subfield:	
 11518                           
 11519                           ; 1 bytes @ 0x14
 11520  0014'                    	ds	1
 11521  0015'                    increment_subfield@exit:	
 11522                           
 11523                           ; 1 bytes @ 0x15
 11524  0015'                    	ds	1
 11525  0016'                    increment_subfield@limit:	
 11526                           
 11527                           ; 1 bytes @ 0x16
 11528  0016'                    	ds	1
 11529  0017'                    increment_subfield@_value:	
 11530                           
 11531                           ; 1 bytes @ 0x17
 11532  0017'                    	ds	1
 11533  0018'                    ??_getSubfieldInfo:	
 11534                           
 11535                           ; 1 bytes @ 0x18
 11536  0018'                    	ds	3
 11537  001B'                    getSubfieldInfo@h_tens:	
 11538                           
 11539                           ; 1 bytes @ 0x1B
 11540  001B'                    	ds	1
 11541  001C'                    getSubfieldInfo@h_units:	
 11542                           
 11543                           ; 1 bytes @ 0x1C
 11544  001C'                    	ds	1
 11545  001D'                    getSubfieldInfo@m_tens:	
 11546                           
 11547                           ; 1 bytes @ 0x1D
 11548  001D'                    	ds	1
 11549  001E'                    getSubfieldInfo@m_units:	
 11550                           
 11551                           ; 1 bytes @ 0x1E
 11552  001E'                    	ds	1
 11553  001F'                    getSubfieldInfo@temp_thresh_tens:	
 11554                           
 11555                           ; 1 bytes @ 0x1F
 11556  001F'                    	ds	1
 11557  0020'                    getSubfieldInfo@temp_thresh_units:	
 11558                           
 11559                           ; 1 bytes @ 0x20
 11560  0020'                    	ds	1
 11561  0021'                    ??_selectSubfield:	
 11562                           
 11563                           ; 1 bytes @ 0x21
 11564  0021'                    	ds	2
 11565  0023'                    selectSubfield@subfield:	
 11566                           
 11567                           ; 2 bytes @ 0x23
 11568  0023'                    	ds	2
 11569  0025'                    ??_config_routine:	
 11570                           
 11571                           ; 1 bytes @ 0x25
 11572  0025'                    	ds	1
 11573  0026'                    config_routine@select_mode:	
 11574                           
 11575                           ; 2 bytes @ 0x26
 11576  0026'                    	ds	2
 11577  0028'                    ??_main:	
 11578                           
 11579                           ; 1 bytes @ 0x28
 11580  0028'                    	ds	6
 11581                           
 11582                           	psect	maintext
 11583  0000'                    __pmaintext:	
 11584 ;;
 11585 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
 11586 ;;
 11587 ;; *************** function _main *****************
 11588 ;; Defined at:
 11589 ;;		line 180 in file "main.c"
 11590 ;; Parameters:    Size  Location     Type
 11591 ;;		None
 11592 ;; Auto vars:     Size  Location     Type
 11593 ;;  t1m             1    3[BANK1 ] unsigned char 
 11594 ;;  t5s             1    2[BANK1 ] unsigned char 
 11595 ;; Return value:  Size  Location     Type
 11596 ;;                  1    wreg      void 
 11597 ;; Registers used:
 11598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11599 ;; Tracked objects:
 11600 ;;		On entry : B1F/0
 11601 ;;		On exit  : 0/0
 11602 ;;		Unchanged: 0/0
 11603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11605 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11606 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11607 ;;      Totals:         0       6       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11608 ;;Total ram usage:       10 bytes
 11609 ;; Hardware stack levels required when called:   12
 11610 ;; This function calls:
 11611 ;;		_ADC_read
 11612 ;;		_DATAEE_WriteByte
 11613 ;;		_EUSART_is_rx_ready
 11614 ;;		_INT_SetInterruptHandler
 11615 ;;		_LED_bin
 11616 ;;		_PWM6_LoadDutyValue
 11617 ;;		_SYSTEM_Initialize
 11618 ;;		_TMR0_SetInterruptHandler
 11619 ;;		_TMR1_SetInterruptHandler
 11620 ;;		_TMR2_SetInterruptHandler
 11621 ;;		_check_thresholds
 11622 ;;		_cksum_w
 11623 ;;		_config_routine
 11624 ;;		_i2c1_driver_open
 11625 ;;		_push_ring
 11626 ;;		_read_ring
 11627 ;;		_read_str_UART
 11628 ;;		_recoverData
 11629 ;;		_ring_buffer
 11630 ;;		_save_recovery_params
 11631 ;;		_tsttc
 11632 ;;		_write_str_UART
 11633 ;; This function is called by:
 11634 ;;		Startup code after reset
 11635 ;; This function uses a non-reentrant model
 11636 ;;
 11637                           
 11638                           
 11639                           ;psect for function _main
 11640  0000'                    _main:	
 11641  0000'                    l8108:	
 11642                           ;incstack = 0
 11643                           ; Regs used in _main: [allreg]
 11644                           
 11645                           
 11646                           ;main.c: 182:     SYSTEM_Initialize();
 11647  0000' 3180' 2000' 3180'  	fcall	_SYSTEM_Initialize
 11648  0003'                    l8110:	
 11649                           
 11650                           ;main.c: 183:     TMR0_SetInterruptHandler(ISR_3s);
 11651  0003' 3000'              	movlw	low _ISR_3s
 11652  0004' 0020               	movlb	0	; select bank0
 11653  0005' 0083'              	movwf	TMR0_SetInterruptHandler@InterruptHandler
 11654  0006' 3000'              	movlw	high _ISR_3s
 11655  0007' 0084'              	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 11656  0008' 3180' 2000' 3180'  	fcall	_TMR0_SetInterruptHandler
 11657  000B'                    l8112:	
 11658                           
 11659                           ;main.c: 184:     TMR1_SetInterruptHandler(handler_clock_hms);
 11660  000B' 3000'              	movlw	low _handler_clock_hms
 11661  000C' 0020               	movlb	0	; select bank0
 11662  000D' 0083'              	movwf	TMR1_SetInterruptHandler@InterruptHandler
 11663  000E' 3000'              	movlw	high _handler_clock_hms
 11664  000F' 0084'              	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 11665  0010' 3180' 2000' 3180'  	fcall	_TMR1_SetInterruptHandler
 11666  0013'                    l8114:	
 11667                           
 11668                           ;main.c: 185:     INT_SetInterruptHandler(sw1_EXT);
 11669  0013' 3000'              	movlw	low _sw1_EXT
 11670  0014' 0020               	movlb	0	; select bank0
 11671  0015' 0083'              	movwf	INT_SetInterruptHandler@InterruptHandler
 11672  0016' 3000'              	movlw	high _sw1_EXT
 11673  0017' 0084'              	movwf	INT_SetInterruptHandler@InterruptHandler+1
 11674  0018' 3180' 2000' 3180'  	fcall	_INT_SetInterruptHandler
 11675  001B'                    l8116:	
 11676                           
 11677                           ;main.c: 186:     TMR2_SetInterruptHandler(handler_clock_ms);
 11678  001B' 3000'              	movlw	low _handler_clock_ms
 11679  001C' 0020               	movlb	0	; select bank0
 11680  001D' 0083'              	movwf	TMR2_SetInterruptHandler@InterruptHandler
 11681  001E' 3000'              	movlw	high _handler_clock_ms
 11682  001F' 0084'              	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 11683  0020' 3180' 2000' 3180'  	fcall	_TMR2_SetInterruptHandler
 11684  0023'                    l8118:	
 11685  0023'                    l8120:	
 11686  0023'                    l8122:	
 11687  0023'                    l1314:	
 11688  0023' 3096               	movlw	150
 11689  0024' 0020               	movlb	0	; select bank0
 11690  0025' 00A8'              	movwf	??_main
 11691  0026' 0828'              	movf	??_main,w
 11692  0027' 0088'              	movwf	_nreg
 11693  0028'                    l8126:	
 11694                           
 11695                           ;main.c: 196:     nreg_pt = 0;
 11696  0028' 0190'              	clrf	_nreg_pt
 11697  0029'                    l8128:	
 11698                           
 11699                           ;main.c: 197:     nreg_init = 0;
 11700  0029' 0191'              	clrf	_nreg_init
 11701  002A'                    l8130:	
 11702                           
 11703                           ;main.c: 198:     alaf = 1;
 11704  002A' 0184'              	clrf	_alaf
 11705  002B' 0A84'              	incf	_alaf,f
 11706  002C'                    l8132:	
 11707                           
 11708                           ;main.c: 199:     temp = 0;
 11709  002C' 0185'              	clrf	_temp
 11710  002D'                    l8134:	
 11711                           
 11712                           ;main.c: 200:     lum_bin = 0;
 11713  002D' 0182'              	clrf	_lum_bin
 11714  002E' 0183'              	clrf	_lum_bin+1
 11715  002F'                    l8136:	
 11716                           
 11717                           ;main.c: 201:     threshold = 0;
 11718  002F' 0180'              	clrf	_threshold
 11719  0030' 0181'              	clrf	_threshold+1
 11720  0031'                    l8138:	
 11721                           
 11722                           ;main.c: 202:     duty_cycle = 0;
 11723  0031' 0021               	movlb	1	; select bank1
 11724  0032' 0180'              	clrf	_duty_cycle^(0+128)
 11725  0033' 0180'              	clrf	(_duty_cycle+1)^(0+128)
 11726  0034'                    l8140:	
 11727                           
 11728                           ;main.c: 203:     set_mode= 0;
 11729  0034' 0020               	movlb	0	; select bank0
 11730  0035' 0188'              	clrf	_set_mode	;volatile
 11731  0036'                    l8142:	
 11732                           
 11733                           ;main.c: 206:     i2c1_driver_open();
 11734  0036' 3180' 2000' 3180'  	fcall	_i2c1_driver_open
 11735  0039'                    l8144:	
 11736                           
 11737                           ;main.c: 207:     TRISCbits.TRISC3 = 1;
 11738  0039' 0020               	movlb	0	; select bank0
 11739  003A' 1593               	bsf	19,3	;volatile
 11740  003B'                    l8146:	
 11741                           
 11742                           ;main.c: 208:     TRISCbits.TRISC4 = 1;
 11743  003B' 1613               	bsf	19,4	;volatile
 11744  003C'                    l8148:	
 11745                           
 11746                           ;main.c: 209:     WPUC3 = 1;
 11747  003C' 003E               	movlb	30	; select bank30
 11748  003D' 15CF               	bsf	79,3	;volatile
 11749  003E'                    l8150:	
 11750                           
 11751                           ;main.c: 210:     WPUC4 = 1;
 11752  003E' 164F               	bsf	79,4	;volatile
 11753  003F'                    l8152:	
 11754                           
 11755                           ;main.c: 213:     recoverData();
 11756  003F' 3180' 2000' 3180'  	fcall	_recoverData
 11757  0042'                    l8154:	
 11758                           
 11759                           ;main.c: 215:     PWM6_LoadDutyValue(0);
 11760  0042' 3000               	movlw	0
 11761  0043' 0020               	movlb	0	; select bank0
 11762  0044' 0089'              	movwf	PWM6_LoadDutyValue@dutyValue
 11763  0045' 008A'              	movwf	PWM6_LoadDutyValue@dutyValue+1
 11764  0046' 3180' 2000' 3180'  	fcall	_PWM6_LoadDutyValue
 11765  0049'                    l8156:	
 11766                           
 11767                           ;main.c: 216:     alarm = 0 ;
 11768  0049' 0020               	movlb	0	; select bank0
 11769  004A' 0186'              	clrf	_alarm	;volatile
 11770  004B'                    l8158:	
 11771  004B' 003E               	movlb	30	; select bank30
 11772  004C' 1644               	bsf	68,4	;volatile
 11773  004D'                    l8160:	
 11774                           
 11775                           ;main.c: 220:     (INTCONbits.GIE = 1);
 11776  004D' 178B               	bsf	11,7	;volatile
 11777  004E'                    l8162:	
 11778                           
 11779                           ;main.c: 222:     (INTCONbits.PEIE = 1);
 11780  004E' 170B               	bsf	11,6	;volatile
 11781  004F'                    l1317:	
 11782                           ;main.c: 225:     while (1)
 11783                           
 11784  004F' 0063               	sleep	;# 
 11785  0050'                    l8164:	
 11786                           
 11787                           ;main.c: 229:         __nop();
 11788  0050' 0000               	nop
 11789  0051'                    l8166:	
 11790                           
 11791                           ;main.c: 231:         if(EUSART_is_rx_ready()){
 11792  0051' 3180' 2000' 3180'  	fcall	_EUSART_is_rx_ready
 11793  0054' 3A00               	xorlw	0
 11794  0055' 1903               	skipnz
 11795  0056' 2800'              	goto	u5751
 11796  0057' 2800'              	goto	u5750
 11797  0058'                    u5751:	
 11798  0058' 2800'              	goto	l8170
 11799  0059'                    u5750:	
 11800  0059'                    l8168:	
 11801                           
 11802                           ;main.c: 232:              write_str_UART(str_snd, 16);
 11803  0059' 3000'              	movlw	low _str_snd
 11804  005A' 0020               	movlb	0	; select bank0
 11805  005B' 0084'              	movwf	write_str_UART@string
 11806  005C' 3000'              	movlw	high _str_snd
 11807  005D' 0085'              	movwf	write_str_UART@string+1
 11808  005E' 3010               	movlw	16
 11809  005F' 00A8'              	movwf	??_main
 11810  0060' 0828'              	movf	??_main,w
 11811  0061' 0086'              	movwf	write_str_UART@size
 11812  0062' 3180' 2000' 3180'  	fcall	_write_str_UART
 11813                           
 11814                           ;main.c: 233:              read_str_UART(str_rc, 16);
 11815  0065' 3010               	movlw	16
 11816  0066' 0020               	movlb	0	; select bank0
 11817  0067' 00A8'              	movwf	??_main
 11818  0068' 0828'              	movf	??_main,w
 11819  0069' 008D'              	movwf	read_str_UART@max_len
 11820  006A' 3000'              	movlw	(low (_str_rc| 0))& (0+255)
 11821  006B' 3180' 2000' 3180'  	fcall	_read_str_UART
 11822  006E'                    l8170:	
 11823                           
 11824                           ;main.c: 238:         PIE4bits.TMR1IE = 0;
 11825  006E' 002E               	movlb	14	; select bank14
 11826  006F' 101A               	bcf	26,0	;volatile
 11827  0070'                    l8172:	
 11828                           
 11829                           ;main.c: 239:         t5s = last5s;
 11830  0070' 0020               	movlb	0	; select bank0
 11831  0071' 080A'              	movf	_last5s,w	;volatile
 11832  0072' 00A8'              	movwf	??_main
 11833  0073' 0828'              	movf	??_main,w
 11834  0074' 0021               	movlb	1	; select bank1
 11835  0075' 0080'              	movwf	main@t5s^(0+128)
 11836  0076'                    l8174:	
 11837                           
 11838                           ;main.c: 240:         PIE4bits.TMR1IE = 1;
 11839  0076' 002E               	movlb	14	; select bank14
 11840  0077' 141A               	bsf	26,0	;volatile
 11841  0078'                    l8176:	
 11842                           
 11843                           ;main.c: 242:         if(t5s >= pmon){
 11844  0078' 0020               	movlb	0	; select bank0
 11845  0079' 0807'              	movf	_pmon,w
 11846  007A' 0021               	movlb	1	; select bank1
 11847  007B' 0200'              	subwf	main@t5s^(0+128),w
 11848  007C' 1C03               	skipc
 11849  007D' 2800'              	goto	u5761
 11850  007E' 2800'              	goto	u5760
 11851  007F'                    u5761:	
 11852  007F' 2800'              	goto	l1319
 11853  0080'                    u5760:	
 11854  0080'                    l8178:	
 11855                           
 11856                           ;main.c: 243:             PIE4bits.TMR1IE = 0;
 11857  0080' 002E               	movlb	14	; select bank14
 11858  0081' 101A               	bcf	26,0	;volatile
 11859  0082'                    l8180:	
 11860                           
 11861                           ;main.c: 244:             last5s =0;
 11862  0082' 0020               	movlb	0	; select bank0
 11863  0083' 018A'              	clrf	_last5s	;volatile
 11864  0084'                    l8182:	
 11865                           
 11866                           ;main.c: 245:             PIE4bits.TMR1IE = 1;
 11867  0084' 002E               	movlb	14	; select bank14
 11868  0085' 141A               	bsf	26,0	;volatile
 11869  0086'                    l8184:	
 11870                           
 11871                           ;main.c: 249:                     if(!config_mode){
 11872  0086' 0020               	movlb	0	; select bank0
 11873  0087' 0807'              	movf	_config_mode,w	;volatile
 11874  0088' 1D03               	btfss	3,2
 11875  0089' 2800'              	goto	u5771
 11876  008A' 2800'              	goto	u5770
 11877  008B'                    u5771:	
 11878  008B' 2800'              	goto	l8212
 11879  008C'                    u5770:	
 11880  008C'                    l8186:	
 11881                           
 11882                           ;main.c: 251:                             convertedValue = ADC_read();
 11883  008C' 3180' 2000' 3180'  	fcall	_ADC_read
 11884  008F' 0020               	movlb	0	; select bank0
 11885  0090' 0806'              	movf	?_ADC_read+1,w
 11886  0091' 0021               	movlb	1	; select bank1
 11887  0092' 0080'              	movwf	(_convertedValue+1)^(0+128)
 11888  0093' 0020               	movlb	0	; select bank0
 11889  0094' 0805'              	movf	?_ADC_read,w
 11890  0095' 0021               	movlb	1	; select bank1
 11891  0096' 0080'              	movwf	_convertedValue^(0+128)
 11892  0097'                    l8188:	
 11893                           
 11894                           ;main.c: 252:                             lum_bin = (convertedValue >> 8);
 11895  0097' 0800'              	movf	(_convertedValue+1)^(0+128),w
 11896  0098' 0020               	movlb	0	; select bank0
 11897  0099' 00A9'              	movwf	??_main+1
 11898  009A' 0021               	movlb	1	; select bank1
 11899  009B' 0800'              	movf	_convertedValue^(0+128),w
 11900  009C' 0020               	movlb	0	; select bank0
 11901  009D' 00A8'              	movwf	??_main
 11902  009E' 0829'              	movf	??_main+1,w
 11903  009F' 00A8'              	movwf	??_main
 11904  00A0' 01A9'              	clrf	??_main+1
 11905  00A1' 0828'              	movf	??_main,w
 11906  00A2' 0082'              	movwf	_lum_bin
 11907  00A3' 0829'              	movf	??_main+1,w
 11908  00A4' 0083'              	movwf	_lum_bin+1
 11909  00A5'                    l8190:	
 11910                           
 11911                           ;main.c: 253:                             LED_bin(lum_bin);
 11912  00A5' 0803'              	movf	_lum_bin+1,w
 11913  00A6' 0084'              	movwf	LED_bin@value+1
 11914  00A7' 0802'              	movf	_lum_bin,w
 11915  00A8' 0083'              	movwf	LED_bin@value
 11916  00A9' 3180' 2000' 3180'  	fcall	_LED_bin
 11917  00AC'                    l8192:	
 11918                           
 11919                           ;main.c: 256:                             __nop();
 11920  00AC' 0000               	nop
 11921  00AD'                    l8194:	
 11922                           
 11923                           ;main.c: 257:                             temp = tsttc();
 11924  00AD' 3180' 2000' 3180'  	fcall	_tsttc
 11925  00B0' 0020               	movlb	0	; select bank0
 11926  00B1' 00A8'              	movwf	??_main
 11927  00B2' 0828'              	movf	??_main,w
 11928  00B3' 0085'              	movwf	_temp
 11929  00B4'                    l8196:	
 11930                           
 11931                           ;main.c: 258:                             __nop();
 11932  00B4' 0000               	nop
 11933  00B5'                    l8198:	
 11934                           
 11935                           ;main.c: 261:                             if (temp != read_ring(nreg_pt, nreg, nreg_init
      +                          , 0, 3) || lum_bin != read_ring(nreg_pt, nreg, nreg_init, 0, 4)) {
 11936  00B5' 0020               	movlb	0	; select bank0
 11937  00B6' 0808'              	movf	_nreg,w
 11938  00B7' 00A8'              	movwf	??_main
 11939  00B8' 0828'              	movf	??_main,w
 11940  00B9' 0087'              	movwf	read_ring@nreg
 11941  00BA' 0811'              	movf	_nreg_init,w
 11942  00BB' 00A9'              	movwf	??_main+1
 11943  00BC' 0829'              	movf	??_main+1,w
 11944  00BD' 0088'              	movwf	read_ring@nreg_init
 11945  00BE' 0189'              	clrf	read_ring@index
 11946  00BF' 3003               	movlw	3
 11947  00C0' 00AA'              	movwf	??_main+2
 11948  00C1' 082A'              	movf	??_main+2,w
 11949  00C2' 008A'              	movwf	read_ring@subindex
 11950  00C3' 0810'              	movf	_nreg_pt,w
 11951  00C4' 3180' 2000' 3180'  	fcall	_read_ring
 11952  00C7' 0020               	movlb	0	; select bank0
 11953  00C8' 0605'              	xorwf	_temp,w
 11954  00C9' 1D03               	skipz
 11955  00CA' 2800'              	goto	u5781
 11956  00CB' 2800'              	goto	u5780
 11957  00CC'                    u5781:	
 11958  00CC' 2800'              	goto	l8202
 11959  00CD'                    u5780:	
 11960  00CD'                    l8200:	
 11961  00CD' 0808'              	movf	_nreg,w
 11962  00CE' 00A8'              	movwf	??_main
 11963  00CF' 0828'              	movf	??_main,w
 11964  00D0' 0087'              	movwf	read_ring@nreg
 11965  00D1' 0811'              	movf	_nreg_init,w
 11966  00D2' 00A9'              	movwf	??_main+1
 11967  00D3' 0829'              	movf	??_main+1,w
 11968  00D4' 0088'              	movwf	read_ring@nreg_init
 11969  00D5' 0189'              	clrf	read_ring@index
 11970  00D6' 3004               	movlw	4
 11971  00D7' 00AA'              	movwf	??_main+2
 11972  00D8' 082A'              	movf	??_main+2,w
 11973  00D9' 008A'              	movwf	read_ring@subindex
 11974  00DA' 0810'              	movf	_nreg_pt,w
 11975  00DB' 3180' 2000' 3180'  	fcall	_read_ring
 11976  00DE' 0020               	movlb	0	; select bank0
 11977  00DF' 00AB'              	movwf	??_main+3
 11978  00E0' 01AC'              	clrf	??_main+4
 11979  00E1' 0803'              	movf	_lum_bin+1,w
 11980  00E2' 062C'              	xorwf	??_main+4,w
 11981  00E3' 1D03               	skipz
 11982  00E4' 2800'              	goto	u5795
 11983  00E5' 0802'              	movf	_lum_bin,w
 11984  00E6' 062B'              	xorwf	??_main+3,w
 11985  00E7'                    u5795:	
 11986  00E7' 1903               	skipnz
 11987  00E8' 2800'              	goto	u5791
 11988  00E9' 2800'              	goto	u5790
 11989  00EA'                    u5791:	
 11990  00EA' 2800'              	goto	l8208
 11991  00EB'                    u5790:	
 11992  00EB'                    l8202:	
 11993                           
 11994                           ;main.c: 262:                                 ring_buffer (ring_byte,clkh, clkm, seg, te
      +                          mp,lum_bin);
 11995  00EB' 080F'              	movf	_clkh,w	;volatile
 11996  00EC' 00A8'              	movwf	??_main
 11997  00ED' 0828'              	movf	??_main,w
 11998  00EE' 0083'              	movwf	ring_buffer@clock_h
 11999  00EF' 080E'              	movf	_clkm,w	;volatile
 12000  00F0' 00A9'              	movwf	??_main+1
 12001  00F1' 0829'              	movf	??_main+1,w
 12002  00F2' 0084'              	movwf	ring_buffer@clock_m
 12003  00F3' 080D'              	movf	_seg,w	;volatile
 12004  00F4' 00AA'              	movwf	??_main+2
 12005  00F5' 082A'              	movf	??_main+2,w
 12006  00F6' 0085'              	movwf	ring_buffer@clock_s
 12007  00F7' 0805'              	movf	_temp,w
 12008  00F8' 00AB'              	movwf	??_main+3
 12009  00F9' 082B'              	movf	??_main+3,w
 12010  00FA' 0086'              	movwf	ring_buffer@tem
 12011  00FB' 0802'              	movf	_lum_bin,w
 12012  00FC' 00AC'              	movwf	??_main+4
 12013  00FD' 082C'              	movf	??_main+4,w
 12014  00FE' 0087'              	movwf	ring_buffer@lum
 12015  00FF' 3000'              	movlw	(low (_ring_byte| 0))& (0+255)
 12016  0100' 3180' 2000' 3180'  	fcall	_ring_buffer
 12017                           
 12018                           ;main.c: 263:                                 push_ring(&nreg_pt, nreg, &nreg_init, ring
      +                          _byte);
 12019  0103' 0020               	movlb	0	; select bank0
 12020  0104' 0808'              	movf	_nreg,w
 12021  0105' 00A8'              	movwf	??_main
 12022  0106' 0828'              	movf	??_main,w
 12023  0107' 008D'              	movwf	push_ring@nreg
 12024  0108' 3000'              	movlw	(low (_nreg_init| 0))& (0+255)
 12025  0109' 00A9'              	movwf	??_main+1
 12026  010A' 0829'              	movf	??_main+1,w
 12027  010B' 008E'              	movwf	push_ring@nreg_init
 12028  010C' 3000'              	movlw	(low (_ring_byte| 0))& (0+255)
 12029  010D' 00AA'              	movwf	??_main+2
 12030  010E' 082A'              	movf	??_main+2,w
 12031  010F' 008F'              	movwf	push_ring@ring_byte
 12032  0110' 3000'              	movlw	(low (_nreg_pt| 0))& (0+255)
 12033  0111' 3180' 2000' 3180'  	fcall	_push_ring
 12034  0114'                    l8204:	
 12035                           
 12036                           ;main.c: 264:                                 DATAEE_WriteByte(0xF0FF - 10 + 4, nreg_pt)
      +                          ;
 12037  0114' 30F9               	movlw	249
 12038  0115' 0020               	movlb	0	; select bank0
 12039  0116' 0089'              	movwf	DATAEE_WriteByte@bAdd
 12040  0117' 30F0               	movlw	240
 12041  0118' 008A'              	movwf	DATAEE_WriteByte@bAdd+1
 12042  0119' 0810'              	movf	_nreg_pt,w
 12043  011A' 00A8'              	movwf	??_main
 12044  011B' 0828'              	movf	??_main,w
 12045  011C' 008B'              	movwf	DATAEE_WriteByte@bData
 12046  011D' 3180' 2000' 3180'  	fcall	_DATAEE_WriteByte
 12047  0120'                    l8206:	
 12048                           
 12049                           ;main.c: 265:                                 cksum_w();
 12050  0120' 3180' 2000' 3180'  	fcall	_cksum_w
 12051  0123'                    l8208:	
 12052                           
 12053                           ;main.c: 269:                             threshold = (lum_bin > lum_thresh ) & alaf;
 12054  0123' 0020               	movlb	0	; select bank0
 12055  0124' 0804'              	movf	_alaf,w
 12056  0125' 00A8'              	movwf	??_main
 12057  0126' 01A9'              	clrf	??_main+1
 12058  0127' 0804'              	movf	_lum_thresh,w
 12059  0128' 00AA'              	movwf	??_main+2
 12060  0129' 01AB'              	clrf	??_main+3
 12061  012A' 0803'              	movf	_lum_bin+1,w
 12062  012B' 022B'              	subwf	??_main+3,w
 12063  012C' 1D03               	skipz
 12064  012D' 2800'              	goto	u5805
 12065  012E' 0802'              	movf	_lum_bin,w
 12066  012F' 022A'              	subwf	??_main+2,w
 12067  0130'                    u5805:	
 12068  0130' 1C03               	skipc
 12069  0131' 2800'              	goto	u5801
 12070  0132' 2800'              	goto	u5800
 12071  0133'                    u5801:	
 12072  0133' 3001               	movlw	1
 12073  0134' 2800'              	goto	u5810
 12074  0135'                    u5800:	
 12075  0135' 3000               	movlw	0
 12076  0136'                    u5810:	
 12077  0136' 00AC'              	movwf	??_main+4
 12078  0137' 01AD'              	clrf	??_main+5
 12079  0138' 0828'              	movf	??_main,w
 12080  0139' 052C'              	andwf	??_main+4,w
 12081  013A' 0080'              	movwf	_threshold
 12082  013B' 0829'              	movf	??_main+1,w
 12083  013C' 052D'              	andwf	??_main+5,w
 12084  013D' 0081'              	movwf	_threshold+1
 12085  013E'                    l8210:	
 12086                           
 12087                           ;main.c: 270:                             check_thresholds(threshold);
 12088  013E' 0800'              	movf	_threshold,w
 12089  013F' 3180' 2000' 3180'  	fcall	_check_thresholds
 12090                           
 12091                           ;main.c: 273:                     }
 12092  0142' 2800'              	goto	l8224
 12093  0143'                    l8212:	
 12094  0143' 0307'              	decf	_config_mode,w	;volatile
 12095  0144' 1D03               	btfss	3,2
 12096  0145' 2800'              	goto	u5821
 12097  0146' 2800'              	goto	u5820
 12098  0147'                    u5821:	
 12099  0147' 2800'              	goto	l8224
 12100  0148'                    u5820:	
 12101  0148'                    l8214:	
 12102                           
 12103                           ;main.c: 277:                         (PIE0bits.INTE = 0);
 12104  0148' 002E               	movlb	14	; select bank14
 12105  0149' 1016               	bcf	22,0	;volatile
 12106  014A'                    l8216:	
 12107                           
 12108                           ;main.c: 278:                         config_routine();
 12109  014A' 3180' 2000' 3180'  	fcall	_config_routine
 12110  014D'                    l8218:	
 12111                           
 12112                           ;main.c: 279:                         (PIE0bits.INTE = 1);
 12113  014D' 002E               	movlb	14	; select bank14
 12114  014E' 1416               	bsf	22,0	;volatile
 12115  014F'                    l8220:	
 12116                           
 12117                           ;main.c: 280:                         DATAEE_WriteByte(0xF0FF - 10 + 5, temp_thresh);
 12118  014F' 30FA               	movlw	250
 12119  0150' 0020               	movlb	0	; select bank0
 12120  0151' 0089'              	movwf	DATAEE_WriteByte@bAdd
 12121  0152' 30F0               	movlw	240
 12122  0153' 008A'              	movwf	DATAEE_WriteByte@bAdd+1
 12123  0154' 0805'              	movf	_temp_thresh,w
 12124  0155' 00A8'              	movwf	??_main
 12125  0156' 0828'              	movf	??_main,w
 12126  0157' 008B'              	movwf	DATAEE_WriteByte@bData
 12127  0158' 3180' 2000' 3180'  	fcall	_DATAEE_WriteByte
 12128  015B'                    l8222:	
 12129                           
 12130                           ;main.c: 281:                         DATAEE_WriteByte(0xF0FF - 10 + 6, lum_thresh);
 12131  015B' 30FB               	movlw	251
 12132  015C' 0020               	movlb	0	; select bank0
 12133  015D' 0089'              	movwf	DATAEE_WriteByte@bAdd
 12134  015E' 30F0               	movlw	240
 12135  015F' 008A'              	movwf	DATAEE_WriteByte@bAdd+1
 12136  0160' 0804'              	movf	_lum_thresh,w
 12137  0161' 00A8'              	movwf	??_main
 12138  0162' 0828'              	movf	??_main,w
 12139  0163' 008B'              	movwf	DATAEE_WriteByte@bData
 12140  0164' 3180' 2000' 3180'  	fcall	_DATAEE_WriteByte
 12141  0167'                    l8224:	
 12142                           
 12143                           ;main.c: 284:                     _delay((unsigned long)((10)*(1000000/4000.0)));
 12144  0167' 3004               	movlw	4
 12145  0168' 0020               	movlb	0	; select bank0
 12146  0169' 00A8'              	movwf	??_main
 12147  016A' 303D               	movlw	61
 12148  016B'                    u5937:	
 12149  016B' 0B89               	decfsz	9,f
 12150  016C' 2800'              	goto	u5937
 12151  016D' 0BA8'              	decfsz	??_main,f
 12152  016E' 2800'              	goto	u5937
 12153  016F' 3200               	nop2
 12154  0170'                    l8226:	
 12155                           
 12156                           ;main.c: 286:             }while(alarm == 2);
 12157  0170' 3002               	movlw	2
 12158  0171' 0020               	movlb	0	; select bank0
 12159  0172' 0606'              	xorwf	_alarm,w	;volatile
 12160  0173' 1903               	btfsc	3,2
 12161  0174' 2800'              	goto	u5831
 12162  0175' 2800'              	goto	u5830
 12163  0176'                    u5831:	
 12164  0176' 2800'              	goto	l8184
 12165  0177'                    u5830:	
 12166  0177'                    l1319:	
 12167                           ;main.c: 288:         }
 12168                           
 12169                           
 12170                           ;main.c: 290:        PIE4bits.TMR1IE = 0;
 12171  0177' 002E               	movlb	14	; select bank14
 12172  0178' 101A               	bcf	26,0	;volatile
 12173  0179'                    l8228:	
 12174                           
 12175                           ;main.c: 291:        t1m = last1m;
 12176  0179' 0020               	movlb	0	; select bank0
 12177  017A' 0809'              	movf	_last1m,w	;volatile
 12178  017B' 00A8'              	movwf	??_main
 12179  017C' 0828'              	movf	??_main,w
 12180  017D' 0021               	movlb	1	; select bank1
 12181  017E' 0080'              	movwf	main@t1m^(0+128)
 12182  017F'                    l8230:	
 12183                           
 12184                           ;main.c: 292:        PIE4bits.TMR1IE = 1;
 12185  017F' 002E               	movlb	14	; select bank14
 12186  0180' 141A               	bsf	26,0	;volatile
 12187  0181'                    l8232:	
 12188                           
 12189                           ;main.c: 294:        if (t1m >= 1) {
 12190  0181' 0021               	movlb	1	; select bank1
 12191  0182' 0800'              	movf	main@t1m^(0+128),w
 12192  0183' 1903               	btfsc	3,2
 12193  0184' 2800'              	goto	u5841
 12194  0185' 2800'              	goto	u5840
 12195  0186'                    u5841:	
 12196  0186' 2800'              	goto	l1317
 12197  0187'                    u5840:	
 12198  0187'                    l8234:	
 12199                           
 12200                           ;main.c: 295:          save_recovery_params();
 12201  0187' 3180' 2000' 3180'  	fcall	_save_recovery_params
 12202  018A' 2800'              	goto	l1317
 12203  018B' 3180' 2800'        	ljmp	start
 12204  018D'                    __end_of_main:	
 12205                           
 12206                           	psect	text1
 12207  0000'                    __ptext1:	
 12208 ;; *************** function _tsttc *****************
 12209 ;; Defined at:
 12210 ;;		line 15 in file "I2C/i2c.c"
 12211 ;; Parameters:    Size  Location     Type
 12212 ;;		None
 12213 ;; Auto vars:     Size  Location     Type
 12214 ;;  value           1    6[BANK0 ] unsigned char 
 12215 ;; Return value:  Size  Location     Type
 12216 ;;                  1    wreg      unsigned char 
 12217 ;; Registers used:
 12218 ;;		wreg, status,2, status,0, pclath, cstack
 12219 ;; Tracked objects:
 12220 ;;		On entry : 0/0
 12221 ;;		On exit  : 0/0
 12222 ;;		Unchanged: 0/0
 12223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12225 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12226 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12227 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12228 ;;Total ram usage:        2 bytes
 12229 ;; Hardware stack levels used:    1
 12230 ;; Hardware stack levels required when called:    7
 12231 ;; This function calls:
 12232 ;;		_ReadI2C
 12233 ;;		_WriteI2C
 12234 ;; This function is called by:
 12235 ;;		_main
 12236 ;; This function uses a non-reentrant model
 12237 ;;
 12238                           
 12239                           
 12240                           ;psect for function _tsttc
 12241  0000'                    _tsttc:	
 12242  0000'                    l1489:	
 12243                           ;incstack = 0
 12244                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 12245                           ;I2C/i2c.c: 17:  unsigned char value;;I2C/i2c.c: 19:     do{
 12246                           
 12247  0000'                    l7806:	
 12248                           ;I2C/i2c.c: 20:         while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12249                           
 12250  0000' 0023               	movlb	3	; select bank3
 12251  0001' 0C0F               	rrf	15,w	;volatile
 12252  0002' 0C89               	rrf	9,f
 12253  0003' 3901               	andlw	1
 12254  0004' 0020               	movlb	0	; select bank0
 12255  0005' 0085'              	movwf	??_tsttc
 12256  0006' 0023               	movlb	3	; select bank3
 12257  0007' 0811               	movf	17,w	;volatile
 12258  0008' 391F               	andlw	31
 12259  0009' 0020               	movlb	0	; select bank0
 12260  000A' 0405'              	iorwf	??_tsttc,w
 12261  000B' 1D03               	btfss	3,2
 12262  000C' 2800'              	goto	u5171
 12263  000D' 2800'              	goto	u5170
 12264  000E'                    u5171:	
 12265  000E' 2800'              	goto	l7806
 12266  000F'                    u5170:	
 12267  000F'                    l1492:	
 12268                           
 12269                           ;I2C/i2c.c: 21:         SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0
      +                          x1F) | (SSP1STATbits.R_W));
 12270  000F' 0023               	movlb	3	; select bank3
 12271  0010' 1411               	bsf	17,0	;volatile
 12272  0011'                    l1493:	
 12273  0011' 1811               	btfsc	17,0	;volatile
 12274  0012' 2800'              	goto	u5181
 12275  0013' 2800'              	goto	u5180
 12276  0014'                    u5181:	
 12277  0014' 2800'              	goto	l1493
 12278  0015'                    u5180:	
 12279  0015'                    l7808:	
 12280  0015' 0023               	movlb	3	; select bank3
 12281  0016' 0C0F               	rrf	15,w	;volatile
 12282  0017' 0C89               	rrf	9,f
 12283  0018' 3901               	andlw	1
 12284  0019' 0020               	movlb	0	; select bank0
 12285  001A' 0085'              	movwf	??_tsttc
 12286  001B' 0023               	movlb	3	; select bank3
 12287  001C' 0811               	movf	17,w	;volatile
 12288  001D' 391F               	andlw	31
 12289  001E' 0020               	movlb	0	; select bank0
 12290  001F' 0405'              	iorwf	??_tsttc,w
 12291  0020' 1D03               	btfss	3,2
 12292  0021' 2800'              	goto	u5191
 12293  0022' 2800'              	goto	u5190
 12294  0023'                    u5191:	
 12295  0023' 2800'              	goto	l7808
 12296  0024'                    u5190:	
 12297  0024'                    l7810:	
 12298                           
 12299                           ;I2C/i2c.c: 23:         WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 12300  0024' 309A               	movlw	154
 12301  0025' 3180' 2000' 3180'  	fcall	_WriteI2C
 12302  0028'                    l7812:	
 12303  0028' 0023               	movlb	3	; select bank3
 12304  0029' 0C0F               	rrf	15,w	;volatile
 12305  002A' 0C89               	rrf	9,f
 12306  002B' 3901               	andlw	1
 12307  002C' 0020               	movlb	0	; select bank0
 12308  002D' 0085'              	movwf	??_tsttc
 12309  002E' 0023               	movlb	3	; select bank3
 12310  002F' 0811               	movf	17,w	;volatile
 12311  0030' 391F               	andlw	31
 12312  0031' 0020               	movlb	0	; select bank0
 12313  0032' 0405'              	iorwf	??_tsttc,w
 12314  0033' 1D03               	btfss	3,2
 12315  0034' 2800'              	goto	u5201
 12316  0035' 2800'              	goto	u5200
 12317  0036'                    u5201:	
 12318  0036' 2800'              	goto	l7812
 12319  0037'                    u5200:	
 12320  0037'                    l7814:	
 12321                           
 12322                           ;I2C/i2c.c: 24:         WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12323  0037' 3001               	movlw	1
 12324  0038' 3180' 2000' 3180'  	fcall	_WriteI2C
 12325  003B'                    l7816:	
 12326  003B' 0023               	movlb	3	; select bank3
 12327  003C' 0C0F               	rrf	15,w	;volatile
 12328  003D' 0C89               	rrf	9,f
 12329  003E' 3901               	andlw	1
 12330  003F' 0020               	movlb	0	; select bank0
 12331  0040' 0085'              	movwf	??_tsttc
 12332  0041' 0023               	movlb	3	; select bank3
 12333  0042' 0811               	movf	17,w	;volatile
 12334  0043' 391F               	andlw	31
 12335  0044' 0020               	movlb	0	; select bank0
 12336  0045' 0405'              	iorwf	??_tsttc,w
 12337  0046' 1D03               	btfss	3,2
 12338  0047' 2800'              	goto	u5211
 12339  0048' 2800'              	goto	u5210
 12340  0049'                    u5211:	
 12341  0049' 2800'              	goto	l7816
 12342  004A'                    u5210:	
 12343  004A'                    l1504:	
 12344                           
 12345                           ;I2C/i2c.c: 25:         SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 &
      +                           0x1F) | (SSP1STATbits.R_W));
 12346  004A' 0023               	movlb	3	; select bank3
 12347  004B' 1491               	bsf	17,1	;volatile
 12348  004C'                    l1505:	
 12349  004C' 1891               	btfsc	17,1	;volatile
 12350  004D' 2800'              	goto	u5221
 12351  004E' 2800'              	goto	u5220
 12352  004F'                    u5221:	
 12353  004F' 2800'              	goto	l1505
 12354  0050'                    u5220:	
 12355  0050'                    l7818:	
 12356  0050' 0023               	movlb	3	; select bank3
 12357  0051' 0C0F               	rrf	15,w	;volatile
 12358  0052' 0C89               	rrf	9,f
 12359  0053' 3901               	andlw	1
 12360  0054' 0020               	movlb	0	; select bank0
 12361  0055' 0085'              	movwf	??_tsttc
 12362  0056' 0023               	movlb	3	; select bank3
 12363  0057' 0811               	movf	17,w	;volatile
 12364  0058' 391F               	andlw	31
 12365  0059' 0020               	movlb	0	; select bank0
 12366  005A' 0405'              	iorwf	??_tsttc,w
 12367  005B' 1D03               	btfss	3,2
 12368  005C' 2800'              	goto	u5231
 12369  005D' 2800'              	goto	u5230
 12370  005E'                    u5231:	
 12371  005E' 2800'              	goto	l7818
 12372  005F'                    u5230:	
 12373  005F'                    l7820:	
 12374                           
 12375                           ;I2C/i2c.c: 26:         WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 12376  005F' 309B               	movlw	155
 12377  0060' 3180' 2000' 3180'  	fcall	_WriteI2C
 12378  0063'                    l7822:	
 12379  0063' 0023               	movlb	3	; select bank3
 12380  0064' 0C0F               	rrf	15,w	;volatile
 12381  0065' 0C89               	rrf	9,f
 12382  0066' 3901               	andlw	1
 12383  0067' 0020               	movlb	0	; select bank0
 12384  0068' 0085'              	movwf	??_tsttc
 12385  0069' 0023               	movlb	3	; select bank3
 12386  006A' 0811               	movf	17,w	;volatile
 12387  006B' 391F               	andlw	31
 12388  006C' 0020               	movlb	0	; select bank0
 12389  006D' 0405'              	iorwf	??_tsttc,w
 12390  006E' 1D03               	btfss	3,2
 12391  006F' 2800'              	goto	u5241
 12392  0070' 2800'              	goto	u5240
 12393  0071'                    u5241:	
 12394  0071' 2800'              	goto	l7822
 12395  0072'                    u5240:	
 12396  0072'                    l7824:	
 12397                           
 12398                           ;I2C/i2c.c: 27:         value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W)
      +                          );
 12399  0072' 3180' 2000' 3180'  	fcall	_ReadI2C
 12400  0075' 0020               	movlb	0	; select bank0
 12401  0076' 0085'              	movwf	??_tsttc
 12402  0077' 0805'              	movf	??_tsttc,w
 12403  0078' 0086'              	movwf	tsttc@value
 12404  0079'                    l7826:	
 12405  0079' 0023               	movlb	3	; select bank3
 12406  007A' 0C0F               	rrf	15,w	;volatile
 12407  007B' 0C89               	rrf	9,f
 12408  007C' 3901               	andlw	1
 12409  007D' 0020               	movlb	0	; select bank0
 12410  007E' 0085'              	movwf	??_tsttc
 12411  007F' 0023               	movlb	3	; select bank3
 12412  0080' 0811               	movf	17,w	;volatile
 12413  0081' 391F               	andlw	31
 12414  0082' 0020               	movlb	0	; select bank0
 12415  0083' 0405'              	iorwf	??_tsttc,w
 12416  0084' 1D03               	btfss	3,2
 12417  0085' 2800'              	goto	u5251
 12418  0086' 2800'              	goto	u5250
 12419  0087'                    u5251:	
 12420  0087' 2800'              	goto	l7826
 12421  0088'                    u5250:	
 12422  0088'                    l1516:	
 12423                           
 12424                           ;I2C/i2c.c: 28:         SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACK
      +                          EN); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12425  0088' 0023               	movlb	3	; select bank3
 12426  0089' 1691               	bsf	17,5	;volatile
 12427  008A' 1611               	bsf	17,4	;volatile
 12428  008B'                    l1517:	
 12429  008B' 1A11               	btfsc	17,4	;volatile
 12430  008C' 2800'              	goto	u5261
 12431  008D' 2800'              	goto	u5260
 12432  008E'                    u5261:	
 12433  008E' 2800'              	goto	l1517
 12434  008F'                    u5260:	
 12435  008F'                    l7828:	
 12436  008F' 0023               	movlb	3	; select bank3
 12437  0090' 0C0F               	rrf	15,w	;volatile
 12438  0091' 0C89               	rrf	9,f
 12439  0092' 3901               	andlw	1
 12440  0093' 0020               	movlb	0	; select bank0
 12441  0094' 0085'              	movwf	??_tsttc
 12442  0095' 0023               	movlb	3	; select bank3
 12443  0096' 0811               	movf	17,w	;volatile
 12444  0097' 391F               	andlw	31
 12445  0098' 0020               	movlb	0	; select bank0
 12446  0099' 0405'              	iorwf	??_tsttc,w
 12447  009A' 1D03               	btfss	3,2
 12448  009B' 2800'              	goto	u5271
 12449  009C' 2800'              	goto	u5270
 12450  009D'                    u5271:	
 12451  009D' 2800'              	goto	l7828
 12452  009E'                    u5270:	
 12453  009E'                    l1522:	
 12454                           
 12455                           ;I2C/i2c.c: 29:         SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12456  009E' 0023               	movlb	3	; select bank3
 12457  009F' 1511               	bsf	17,2	;volatile
 12458  00A0'                    l1523:	
 12459  00A0' 1911               	btfsc	17,2	;volatile
 12460  00A1' 2800'              	goto	u5281
 12461  00A2' 2800'              	goto	u5280
 12462  00A3'                    u5281:	
 12463  00A3' 2800'              	goto	l1523
 12464  00A4'                    u5280:	
 12465  00A4'                    l1525:	
 12466                           
 12467                           ;I2C/i2c.c: 30:     } while (!(value & 0x40));
 12468  00A4' 0020               	movlb	0	; select bank0
 12469  00A5' 1F06'              	btfss	tsttc@value,6
 12470  00A6' 2800'              	goto	u5291
 12471  00A7' 2800'              	goto	u5290
 12472  00A8'                    u5291:	
 12473  00A8' 2800'              	goto	l1489
 12474  00A9'                    u5290:	
 12475  00A9'                    l7830:	
 12476  00A9' 0023               	movlb	3	; select bank3
 12477  00AA' 0C0F               	rrf	15,w	;volatile
 12478  00AB' 0C89               	rrf	9,f
 12479  00AC' 3901               	andlw	1
 12480  00AD' 0020               	movlb	0	; select bank0
 12481  00AE' 0085'              	movwf	??_tsttc
 12482  00AF' 0023               	movlb	3	; select bank3
 12483  00B0' 0811               	movf	17,w	;volatile
 12484  00B1' 391F               	andlw	31
 12485  00B2' 0020               	movlb	0	; select bank0
 12486  00B3' 0405'              	iorwf	??_tsttc,w
 12487  00B4' 1D03               	btfss	3,2
 12488  00B5' 2800'              	goto	u5301
 12489  00B6' 2800'              	goto	u5300
 12490  00B7'                    u5301:	
 12491  00B7' 2800'              	goto	l7830
 12492  00B8'                    u5300:	
 12493  00B8'                    l1529:	
 12494                           
 12495                           ;I2C/i2c.c: 33:  SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | 
      +                          (SSP1STATbits.R_W));
 12496  00B8' 0023               	movlb	3	; select bank3
 12497  00B9' 1411               	bsf	17,0	;volatile
 12498  00BA'                    l1530:	
 12499  00BA' 1811               	btfsc	17,0	;volatile
 12500  00BB' 2800'              	goto	u5311
 12501  00BC' 2800'              	goto	u5310
 12502  00BD'                    u5311:	
 12503  00BD' 2800'              	goto	l1530
 12504  00BE'                    u5310:	
 12505  00BE'                    l7832:	
 12506  00BE' 0023               	movlb	3	; select bank3
 12507  00BF' 0C0F               	rrf	15,w	;volatile
 12508  00C0' 0C89               	rrf	9,f
 12509  00C1' 3901               	andlw	1
 12510  00C2' 0020               	movlb	0	; select bank0
 12511  00C3' 0085'              	movwf	??_tsttc
 12512  00C4' 0023               	movlb	3	; select bank3
 12513  00C5' 0811               	movf	17,w	;volatile
 12514  00C6' 391F               	andlw	31
 12515  00C7' 0020               	movlb	0	; select bank0
 12516  00C8' 0405'              	iorwf	??_tsttc,w
 12517  00C9' 1D03               	btfss	3,2
 12518  00CA' 2800'              	goto	u5321
 12519  00CB' 2800'              	goto	u5320
 12520  00CC'                    u5321:	
 12521  00CC' 2800'              	goto	l7832
 12522  00CD'                    u5320:	
 12523  00CD'                    l7834:	
 12524                           
 12525                           ;I2C/i2c.c: 34:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12526  00CD' 309A               	movlw	154
 12527  00CE' 3180' 2000' 3180'  	fcall	_WriteI2C
 12528  00D1'                    l7836:	
 12529  00D1' 0023               	movlb	3	; select bank3
 12530  00D2' 0C0F               	rrf	15,w	;volatile
 12531  00D3' 0C89               	rrf	9,f
 12532  00D4' 3901               	andlw	1
 12533  00D5' 0020               	movlb	0	; select bank0
 12534  00D6' 0085'              	movwf	??_tsttc
 12535  00D7' 0023               	movlb	3	; select bank3
 12536  00D8' 0811               	movf	17,w	;volatile
 12537  00D9' 391F               	andlw	31
 12538  00DA' 0020               	movlb	0	; select bank0
 12539  00DB' 0405'              	iorwf	??_tsttc,w
 12540  00DC' 1D03               	btfss	3,2
 12541  00DD' 2800'              	goto	u5331
 12542  00DE' 2800'              	goto	u5330
 12543  00DF'                    u5331:	
 12544  00DF' 2800'              	goto	l7836
 12545  00E0'                    u5330:	
 12546  00E0'                    l7838:	
 12547                           
 12548                           ;I2C/i2c.c: 35:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12549  00E0' 3000               	movlw	0
 12550  00E1' 3180' 2000' 3180'  	fcall	_WriteI2C
 12551  00E4'                    l7840:	
 12552  00E4' 0023               	movlb	3	; select bank3
 12553  00E5' 0C0F               	rrf	15,w	;volatile
 12554  00E6' 0C89               	rrf	9,f
 12555  00E7' 3901               	andlw	1
 12556  00E8' 0020               	movlb	0	; select bank0
 12557  00E9' 0085'              	movwf	??_tsttc
 12558  00EA' 0023               	movlb	3	; select bank3
 12559  00EB' 0811               	movf	17,w	;volatile
 12560  00EC' 391F               	andlw	31
 12561  00ED' 0020               	movlb	0	; select bank0
 12562  00EE' 0405'              	iorwf	??_tsttc,w
 12563  00EF' 1D03               	btfss	3,2
 12564  00F0' 2800'              	goto	u5341
 12565  00F1' 2800'              	goto	u5340
 12566  00F2'                    u5341:	
 12567  00F2' 2800'              	goto	l7840
 12568  00F3'                    u5340:	
 12569  00F3'                    l1541:	
 12570                           
 12571                           ;I2C/i2c.c: 36:  SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) 
      +                          | (SSP1STATbits.R_W));
 12572  00F3' 0023               	movlb	3	; select bank3
 12573  00F4' 1491               	bsf	17,1	;volatile
 12574  00F5'                    l1542:	
 12575  00F5' 1891               	btfsc	17,1	;volatile
 12576  00F6' 2800'              	goto	u5351
 12577  00F7' 2800'              	goto	u5350
 12578  00F8'                    u5351:	
 12579  00F8' 2800'              	goto	l1542
 12580  00F9'                    u5350:	
 12581  00F9'                    l7842:	
 12582  00F9' 0023               	movlb	3	; select bank3
 12583  00FA' 0C0F               	rrf	15,w	;volatile
 12584  00FB' 0C89               	rrf	9,f
 12585  00FC' 3901               	andlw	1
 12586  00FD' 0020               	movlb	0	; select bank0
 12587  00FE' 0085'              	movwf	??_tsttc
 12588  00FF' 0023               	movlb	3	; select bank3
 12589  0100' 0811               	movf	17,w	;volatile
 12590  0101' 391F               	andlw	31
 12591  0102' 0020               	movlb	0	; select bank0
 12592  0103' 0405'              	iorwf	??_tsttc,w
 12593  0104' 1D03               	btfss	3,2
 12594  0105' 2800'              	goto	u5361
 12595  0106' 2800'              	goto	u5360
 12596  0107'                    u5361:	
 12597  0107' 2800'              	goto	l7842
 12598  0108'                    u5360:	
 12599  0108'                    l7844:	
 12600                           
 12601                           ;I2C/i2c.c: 37:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12602  0108' 309B               	movlw	155
 12603  0109' 3180' 2000' 3180'  	fcall	_WriteI2C
 12604  010C'                    l7846:	
 12605  010C' 0023               	movlb	3	; select bank3
 12606  010D' 0C0F               	rrf	15,w	;volatile
 12607  010E' 0C89               	rrf	9,f
 12608  010F' 3901               	andlw	1
 12609  0110' 0020               	movlb	0	; select bank0
 12610  0111' 0085'              	movwf	??_tsttc
 12611  0112' 0023               	movlb	3	; select bank3
 12612  0113' 0811               	movf	17,w	;volatile
 12613  0114' 391F               	andlw	31
 12614  0115' 0020               	movlb	0	; select bank0
 12615  0116' 0405'              	iorwf	??_tsttc,w
 12616  0117' 1D03               	btfss	3,2
 12617  0118' 2800'              	goto	u5371
 12618  0119' 2800'              	goto	u5370
 12619  011A'                    u5371:	
 12620  011A' 2800'              	goto	l7846
 12621  011B'                    u5370:	
 12622  011B'                    l7848:	
 12623                           
 12624                           ;I2C/i2c.c: 38:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12625  011B' 3180' 2000' 3180'  	fcall	_ReadI2C
 12626  011E' 0020               	movlb	0	; select bank0
 12627  011F' 0085'              	movwf	??_tsttc
 12628  0120' 0805'              	movf	??_tsttc,w
 12629  0121' 0086'              	movwf	tsttc@value
 12630  0122'                    l7850:	
 12631  0122' 0023               	movlb	3	; select bank3
 12632  0123' 0C0F               	rrf	15,w	;volatile
 12633  0124' 0C89               	rrf	9,f
 12634  0125' 3901               	andlw	1
 12635  0126' 0020               	movlb	0	; select bank0
 12636  0127' 0085'              	movwf	??_tsttc
 12637  0128' 0023               	movlb	3	; select bank3
 12638  0129' 0811               	movf	17,w	;volatile
 12639  012A' 391F               	andlw	31
 12640  012B' 0020               	movlb	0	; select bank0
 12641  012C' 0405'              	iorwf	??_tsttc,w
 12642  012D' 1D03               	btfss	3,2
 12643  012E' 2800'              	goto	u5381
 12644  012F' 2800'              	goto	u5380
 12645  0130'                    u5381:	
 12646  0130' 2800'              	goto	l7850
 12647  0131'                    u5380:	
 12648  0131'                    l1553:	
 12649                           
 12650                           ;I2C/i2c.c: 39:  SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); wh
      +                          ile ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12651  0131' 0023               	movlb	3	; select bank3
 12652  0132' 1691               	bsf	17,5	;volatile
 12653  0133' 1611               	bsf	17,4	;volatile
 12654  0134'                    l1554:	
 12655  0134' 1A11               	btfsc	17,4	;volatile
 12656  0135' 2800'              	goto	u5391
 12657  0136' 2800'              	goto	u5390
 12658  0137'                    u5391:	
 12659  0137' 2800'              	goto	l1554
 12660  0138'                    u5390:	
 12661  0138'                    l7852:	
 12662  0138' 0023               	movlb	3	; select bank3
 12663  0139' 0C0F               	rrf	15,w	;volatile
 12664  013A' 0C89               	rrf	9,f
 12665  013B' 3901               	andlw	1
 12666  013C' 0020               	movlb	0	; select bank0
 12667  013D' 0085'              	movwf	??_tsttc
 12668  013E' 0023               	movlb	3	; select bank3
 12669  013F' 0811               	movf	17,w	;volatile
 12670  0140' 391F               	andlw	31
 12671  0141' 0020               	movlb	0	; select bank0
 12672  0142' 0405'              	iorwf	??_tsttc,w
 12673  0143' 1D03               	btfss	3,2
 12674  0144' 2800'              	goto	u5401
 12675  0145' 2800'              	goto	u5400
 12676  0146'                    u5401:	
 12677  0146' 2800'              	goto	l7852
 12678  0147'                    u5400:	
 12679  0147'                    l1559:	
 12680                           
 12681                           ;I2C/i2c.c: 40:  SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12682  0147' 0023               	movlb	3	; select bank3
 12683  0148' 1511               	bsf	17,2	;volatile
 12684  0149'                    l1560:	
 12685  0149' 1911               	btfsc	17,2	;volatile
 12686  014A' 2800'              	goto	u5411
 12687  014B' 2800'              	goto	u5410
 12688  014C'                    u5411:	
 12689  014C' 2800'              	goto	l1560
 12690  014D'                    u5410:	
 12691  014D'                    l7854:	
 12692                           
 12693                           ;I2C/i2c.c: 42:  return value;
 12694  014D' 0020               	movlb	0	; select bank0
 12695  014E' 0806'              	movf	tsttc@value,w
 12696  014F'                    l1563:	
 12697  014F' 0008               	return
 12698  0150'                    __end_of_tsttc:	
 12699                           
 12700                           	psect	text2
 12701  0000'                    __ptext2:	
 12702 ;; *************** function _WriteI2C *****************
 12703 ;; Defined at:
 12704 ;;		line 88 in file "I2C/i2c.c"
 12705 ;; Parameters:    Size  Location     Type
 12706 ;;  data_out        1    wreg     unsigned char 
 12707 ;; Auto vars:     Size  Location     Type
 12708 ;;  data_out        1    4[BANK0 ] unsigned char 
 12709 ;; Return value:  Size  Location     Type
 12710 ;;                  1    wreg      char 
 12711 ;; Registers used:
 12712 ;;		wreg, status,2, status,0
 12713 ;; Tracked objects:
 12714 ;;		On entry : 0/0
 12715 ;;		On exit  : 0/0
 12716 ;;		Unchanged: 0/0
 12717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12719 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12720 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12721 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12722 ;;Total ram usage:        2 bytes
 12723 ;; Hardware stack levels used:    1
 12724 ;; Hardware stack levels required when called:    6
 12725 ;; This function calls:
 12726 ;;		Nothing
 12727 ;; This function is called by:
 12728 ;;		_tsttc
 12729 ;; This function uses a non-reentrant model
 12730 ;;
 12731                           
 12732                           
 12733                           ;psect for function _WriteI2C
 12734  0000'                    _WriteI2C:	
 12735                           
 12736                           ;incstack = 0
 12737                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 12738                           ;WriteI2C@data_out stored from wreg
 12739  0000' 0020               	movlb	0	; select bank0
 12740  0001' 0084'              	movwf	WriteI2C@data_out
 12741  0002'                    l7560:	
 12742                           
 12743                           ;I2C/i2c.c: 88: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 89: {;I2C/i2c.
      +                          c: 90:   SSP1BUF = data_out;
 12744  0002' 0804'              	movf	WriteI2C@data_out,w
 12745  0003' 0023               	movlb	3	; select bank3
 12746  0004' 008C               	movwf	12	;volatile
 12747  0005'                    l7562:	
 12748                           
 12749                           ;I2C/i2c.c: 91:   if ( SSP1CON1bits.WCOL )
 12750  0005' 1F90               	btfss	16,7	;volatile
 12751  0006' 2800'              	goto	u4861
 12752  0007' 2800'              	goto	u4860
 12753  0008'                    u4861:	
 12754  0008' 2800'              	goto	l7568
 12755  0009'                    u4860:	
 12756  0009' 2800'              	goto	l1579
 12757  000A'                    l7568:	
 12758                           
 12759                           ;I2C/i2c.c: 94:   {;I2C/i2c.c: 95:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 12760  000A' 300F               	movlw	15
 12761  000B' 0510               	andwf	16,w	;volatile
 12762  000C' 0020               	movlb	0	; select bank0
 12763  000D' 0083'              	movwf	??_WriteI2C
 12764  000E' 3008               	movlw	8
 12765  000F' 0603'              	xorwf	??_WriteI2C,w
 12766  0010' 1903               	btfsc	3,2
 12767  0011' 2800'              	goto	u4871
 12768  0012' 2800'              	goto	u4870
 12769  0013'                    u4871:	
 12770  0013' 2800'              	goto	l7580
 12771  0014'                    u4870:	
 12772  0014'                    l7570:	
 12773  0014' 300F               	movlw	15
 12774  0015' 0023               	movlb	3	; select bank3
 12775  0016' 0510               	andwf	16,w	;volatile
 12776  0017' 0020               	movlb	0	; select bank0
 12777  0018' 0083'              	movwf	??_WriteI2C
 12778  0019' 300B               	movlw	11
 12779  001A' 0603'              	xorwf	??_WriteI2C,w
 12780  001B' 1903               	btfsc	3,2
 12781  001C' 2800'              	goto	u4881
 12782  001D' 2800'              	goto	u4880
 12783  001E'                    u4881:	
 12784  001E' 2800'              	goto	l7580
 12785  001F'                    u4880:	
 12786  001F'                    l7572:	
 12787                           
 12788                           ;I2C/i2c.c: 96:  {;I2C/i2c.c: 97:        SSP1CON1bits.CKP = 1;
 12789  001F' 0023               	movlb	3	; select bank3
 12790  0020' 1610               	bsf	16,4	;volatile
 12791  0021'                    l1582:	
 12792                           ;I2C/i2c.c: 98:        while ( !PIR3bits.SSP1IF );
 12793                           
 12794  0021' 002E               	movlb	14	; select bank14
 12795  0022' 1C0F               	btfss	15,0	;volatile
 12796  0023' 2800'              	goto	u4891
 12797  0024' 2800'              	goto	u4890
 12798  0025'                    u4891:	
 12799  0025' 2800'              	goto	l1582
 12800  0026'                    u4890:	
 12801  0026'                    l1584:	
 12802                           
 12803                           ;I2C/i2c.c: 100:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 12804  0026' 0023               	movlb	3	; select bank3
 12805  0027' 190F               	btfsc	15,2	;volatile
 12806  0028' 2800'              	goto	u4901
 12807  0029' 2800'              	goto	u4900
 12808  002A'                    u4901:	
 12809  002A' 2800'              	goto	l1579
 12810  002B'                    u4900:	
 12811  002B'                    l7574:	
 12812  002B' 080F               	movf	15,w	;volatile
 12813  002C' 2800'              	goto	l1579
 12814  002D'                    l7580:	
 12815  002D' 300F               	movlw	15
 12816  002E' 0023               	movlb	3	; select bank3
 12817  002F' 0510               	andwf	16,w	;volatile
 12818  0030' 0020               	movlb	0	; select bank0
 12819  0031' 0083'              	movwf	??_WriteI2C
 12820  0032' 3008               	movlw	8
 12821  0033' 0603'              	xorwf	??_WriteI2C,w
 12822  0034' 1903               	btfsc	3,2
 12823  0035' 2800'              	goto	u4911
 12824  0036' 2800'              	goto	u4910
 12825  0037'                    u4911:	
 12826  0037' 2800'              	goto	l1591
 12827  0038'                    u4910:	
 12828  0038'                    l7582:	
 12829  0038' 300F               	movlw	15
 12830  0039' 0023               	movlb	3	; select bank3
 12831  003A' 0510               	andwf	16,w	;volatile
 12832  003B' 0020               	movlb	0	; select bank0
 12833  003C' 0083'              	movwf	??_WriteI2C
 12834  003D' 300B               	movlw	11
 12835  003E' 0603'              	xorwf	??_WriteI2C,w
 12836  003F' 1D03               	btfss	3,2
 12837  0040' 2800'              	goto	u4921
 12838  0041' 2800'              	goto	u4920
 12839  0042'                    u4921:	
 12840  0042' 2800'              	goto	l1579
 12841  0043'                    u4920:	
 12842  0043'                    l1591:	
 12843  0043' 0023               	movlb	3	; select bank3
 12844  0044' 180F               	btfsc	15,0	;volatile
 12845  0045' 2800'              	goto	u4931
 12846  0046' 2800'              	goto	u4930
 12847  0047'                    u4931:	
 12848  0047' 2800'              	goto	l1591
 12849  0048'                    u4930:	
 12850  0048'                    l7584:	
 12851  0048' 0023               	movlb	3	; select bank3
 12852  0049' 0C0F               	rrf	15,w	;volatile
 12853  004A' 0C89               	rrf	9,f
 12854  004B' 3901               	andlw	1
 12855  004C' 0020               	movlb	0	; select bank0
 12856  004D' 0083'              	movwf	??_WriteI2C
 12857  004E' 0023               	movlb	3	; select bank3
 12858  004F' 0811               	movf	17,w	;volatile
 12859  0050' 391F               	andlw	31
 12860  0051' 0020               	movlb	0	; select bank0
 12861  0052' 0403'              	iorwf	??_WriteI2C,w
 12862  0053' 1D03               	btfss	3,2
 12863  0054' 2800'              	goto	u4941
 12864  0055' 2800'              	goto	u4940
 12865  0056'                    u4941:	
 12866  0056' 2800'              	goto	l7584
 12867  0057'                    u4940:	
 12868  0057'                    l1596:	
 12869                           
 12870                           ;I2C/i2c.c: 113:      if ( SSP1CON2bits.ACKSTAT )
 12871  0057' 0023               	movlb	3	; select bank3
 12872  0058' 0811               	movf	17,w	;volatile
 12873  0059'                    l1579:	
 12874  0059' 0008               	return
 12875  005A'                    __end_of_WriteI2C:	
 12876                           
 12877                           	psect	text3
 12878  0000'                    __ptext3:	
 12879 ;; *************** function _ReadI2C *****************
 12880 ;; Defined at:
 12881 ;;		line 73 in file "I2C/i2c.c"
 12882 ;; Parameters:    Size  Location     Type
 12883 ;;		None
 12884 ;; Auto vars:     Size  Location     Type
 12885 ;;		None
 12886 ;; Return value:  Size  Location     Type
 12887 ;;                  1    wreg      unsigned char 
 12888 ;; Registers used:
 12889 ;;		wreg, status,2, status,0
 12890 ;; Tracked objects:
 12891 ;;		On entry : 0/0
 12892 ;;		On exit  : 0/0
 12893 ;;		Unchanged: 0/0
 12894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12897 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12898 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12899 ;;Total ram usage:        1 bytes
 12900 ;; Hardware stack levels used:    1
 12901 ;; Hardware stack levels required when called:    6
 12902 ;; This function calls:
 12903 ;;		Nothing
 12904 ;; This function is called by:
 12905 ;;		_tsttc
 12906 ;; This function uses a non-reentrant model
 12907 ;;
 12908                           
 12909                           
 12910                           ;psect for function _ReadI2C
 12911  0000'                    _ReadI2C:	
 12912  0000'                    l7590:	
 12913                           ;incstack = 0
 12914                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 12915                           
 12916                           
 12917                           ;I2C/i2c.c: 75: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 12918  0000' 300F               	movlw	15
 12919  0001' 0023               	movlb	3	; select bank3
 12920  0002' 0510               	andwf	16,w	;volatile
 12921  0003' 0020               	movlb	0	; select bank0
 12922  0004' 0083'              	movwf	??_ReadI2C
 12923  0005' 3008               	movlw	8
 12924  0006' 0603'              	xorwf	??_ReadI2C,w
 12925  0007' 1903               	btfsc	3,2
 12926  0008' 2800'              	goto	u4951
 12927  0009' 2800'              	goto	u4950
 12928  000A'                    u4951:	
 12929  000A' 2800'              	goto	l1571
 12930  000B'                    u4950:	
 12931  000B'                    l7592:	
 12932  000B' 300F               	movlw	15
 12933  000C' 0023               	movlb	3	; select bank3
 12934  000D' 0510               	andwf	16,w	;volatile
 12935  000E' 0020               	movlb	0	; select bank0
 12936  000F' 0083'              	movwf	??_ReadI2C
 12937  0010' 300B               	movlw	11
 12938  0011' 0603'              	xorwf	??_ReadI2C,w
 12939  0012' 1D03               	btfss	3,2
 12940  0013' 2800'              	goto	u4961
 12941  0014' 2800'              	goto	u4960
 12942  0015'                    u4961:	
 12943  0015' 2800'              	goto	l1572
 12944  0016'                    u4960:	
 12945  0016'                    l1571:	
 12946                           
 12947                           ;I2C/i2c.c: 76:   SSP1CON2bits.RCEN = 1;
 12948  0016' 0023               	movlb	3	; select bank3
 12949  0017' 1591               	bsf	17,3	;volatile
 12950  0018'                    l1572:	
 12951  0018' 0023               	movlb	3	; select bank3
 12952  0019' 1C0F               	btfss	15,0	;volatile
 12953  001A' 2800'              	goto	u4971
 12954  001B' 2800'              	goto	u4970
 12955  001C'                    u4971:	
 12956  001C' 2800'              	goto	l1572
 12957  001D'                    u4970:	
 12958  001D'                    l7594:	
 12959                           
 12960                           ;I2C/i2c.c: 78:   return ( SSP1BUF );
 12961  001D' 080C               	movf	12,w	;volatile
 12962  001E'                    l1575:	
 12963  001E' 0008               	return
 12964  001F'                    __end_of_ReadI2C:	
 12965                           
 12966                           	psect	text4
 12967  0000'                    __ptext4:	
 12968 ;; *************** function _save_recovery_params *****************
 12969 ;; Defined at:
 12970 ;;		line 670 in file "main.c"
 12971 ;; Parameters:    Size  Location     Type
 12972 ;;		None
 12973 ;; Auto vars:     Size  Location     Type
 12974 ;;  aux1            1   16[BANK0 ] unsigned char 
 12975 ;;  aux             1   15[BANK0 ] unsigned char 
 12976 ;; Return value:  Size  Location     Type
 12977 ;;                  1    wreg      void 
 12978 ;; Registers used:
 12979 ;;		wreg, status,2, status,0, pclath, cstack
 12980 ;; Tracked objects:
 12981 ;;		On entry : 0/0
 12982 ;;		On exit  : 0/0
 12983 ;;		Unchanged: 0/0
 12984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12986 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12987 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12988 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12989 ;;Total ram usage:        3 bytes
 12990 ;; Hardware stack levels used:    1
 12991 ;; Hardware stack levels required when called:    9
 12992 ;; This function calls:
 12993 ;;		_DATAEE_WriteByte
 12994 ;;		_cksum_w
 12995 ;; This function is called by:
 12996 ;;		_main
 12997 ;; This function uses a non-reentrant model
 12998 ;;
 12999                           
 13000                           
 13001                           ;psect for function _save_recovery_params
 13002  0000'                    _save_recovery_params:	
 13003  0000'                    l7986:	
 13004                           ;incstack = 0
 13005                           ; Regs used in _save_recovery_params: [wreg+status,2+status,0+pclath+cstack]
 13006                           
 13007                           
 13008                           ;main.c: 672:     unsigned char aux, aux1;;main.c: 673:     PIE4bits.TMR1IE = 0;
 13009  0000' 002E               	movlb	14	; select bank14
 13010  0001' 101A               	bcf	26,0	;volatile
 13011  0002'                    l7988:	
 13012                           
 13013                           ;main.c: 674:     last1m = 0;
 13014  0002' 0020               	movlb	0	; select bank0
 13015  0003' 0189'              	clrf	_last1m	;volatile
 13016  0004'                    l7990:	
 13017                           
 13018                           ;main.c: 675:     aux = clkh;
 13019  0004' 080F'              	movf	_clkh,w	;volatile
 13020  0005' 008E'              	movwf	??_save_recovery_params
 13021  0006' 080E'              	movf	??_save_recovery_params,w
 13022  0007' 008F'              	movwf	save_recovery_params@aux
 13023  0008'                    l7992:	
 13024                           
 13025                           ;main.c: 676:     aux1 = clkm;
 13026  0008' 080E'              	movf	_clkm,w	;volatile
 13027  0009' 008E'              	movwf	??_save_recovery_params
 13028  000A' 080E'              	movf	??_save_recovery_params,w
 13029  000B' 0090'              	movwf	save_recovery_params@aux1
 13030  000C'                    l7994:	
 13031                           
 13032                           ;main.c: 677:     PIE4bits.TMR1IE = 1;
 13033  000C' 002E               	movlb	14	; select bank14
 13034  000D' 141A               	bsf	26,0	;volatile
 13035  000E'                    l7996:	
 13036                           
 13037                           ;main.c: 678:     DATAEE_WriteByte(0xF0FF - 10 + 1, aux);
 13038  000E' 30F6               	movlw	246
 13039  000F' 0020               	movlb	0	; select bank0
 13040  0010' 0089'              	movwf	DATAEE_WriteByte@bAdd
 13041  0011' 30F0               	movlw	240
 13042  0012' 008A'              	movwf	DATAEE_WriteByte@bAdd+1
 13043  0013' 080F'              	movf	save_recovery_params@aux,w
 13044  0014' 008E'              	movwf	??_save_recovery_params
 13045  0015' 080E'              	movf	??_save_recovery_params,w
 13046  0016' 008B'              	movwf	DATAEE_WriteByte@bData
 13047  0017' 3180' 2000' 3180'  	fcall	_DATAEE_WriteByte
 13048  001A'                    l7998:	
 13049                           
 13050                           ;main.c: 679:     DATAEE_WriteByte(0xF0FF - 10 + 2, aux1);
 13051  001A' 30F7               	movlw	247
 13052  001B' 0020               	movlb	0	; select bank0
 13053  001C' 0089'              	movwf	DATAEE_WriteByte@bAdd
 13054  001D' 30F0               	movlw	240
 13055  001E' 008A'              	movwf	DATAEE_WriteByte@bAdd+1
 13056  001F' 0810'              	movf	save_recovery_params@aux1,w
 13057  0020' 008E'              	movwf	??_save_recovery_params
 13058  0021' 080E'              	movf	??_save_recovery_params,w
 13059  0022' 008B'              	movwf	DATAEE_WriteByte@bData
 13060  0023' 3180' 2000' 3180'  	fcall	_DATAEE_WriteByte
 13061  0026'                    l8000:	
 13062                           
 13063                           ;main.c: 680:     cksum_w();
 13064  0026' 3180' 2000' 3180'  	fcall	_cksum_w
 13065  0029'                    l1450:	
 13066  0029' 0008               	return
 13067  002A'                    __end_of_save_recovery_params:	
 13068                           
 13069                           	psect	text5
 13070  0000'                    __ptext5:	
 13071 ;; *************** function _ring_buffer *****************
 13072 ;; Defined at:
 13073 ;;		line 685 in file "main.c"
 13074 ;; Parameters:    Size  Location     Type
 13075 ;;  _ring_byte      1    wreg     PTR unsigned char 
 13076 ;;		 -> ring_byte(5), 
 13077 ;;  clock_h         1    3[BANK0 ] unsigned char 
 13078 ;;  clock_m         1    4[BANK0 ] unsigned char 
 13079 ;;  clock_s         1    5[BANK0 ] unsigned char 
 13080 ;;  tem             1    6[BANK0 ] unsigned char 
 13081 ;;  lum             1    7[BANK0 ] unsigned char 
 13082 ;; Auto vars:     Size  Location     Type
 13083 ;;  _ring_byte      1    9[BANK0 ] PTR unsigned char 
 13084 ;;		 -> ring_byte(5), 
 13085 ;; Return value:  Size  Location     Type
 13086 ;;                  1    wreg      void 
 13087 ;; Registers used:
 13088 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13089 ;; Tracked objects:
 13090 ;;		On entry : 0/0
 13091 ;;		On exit  : 0/0
 13092 ;;		Unchanged: 0/0
 13093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13094 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13095 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13096 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13097 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13098 ;;Total ram usage:        7 bytes
 13099 ;; Hardware stack levels used:    1
 13100 ;; Hardware stack levels required when called:    6
 13101 ;; This function calls:
 13102 ;;		Nothing
 13103 ;; This function is called by:
 13104 ;;		_main
 13105 ;; This function uses a non-reentrant model
 13106 ;;
 13107                           
 13108                           
 13109                           ;psect for function _ring_buffer
 13110  0000'                    _ring_buffer:	
 13111                           
 13112                           ;incstack = 0
 13113                           ; Regs used in _ring_buffer: [wreg+fsr1l+fsr1h+status,2+status,0]
 13114                           ;ring_buffer@_ring_byte stored from wreg
 13115  0000' 0020               	movlb	0	; select bank0
 13116  0001' 0089'              	movwf	ring_buffer@_ring_byte
 13117  0002'                    l7880:	
 13118                           
 13119                           ;main.c: 687:     PIE4bits.TMR1IE = 0;
 13120  0002' 002E               	movlb	14	; select bank14
 13121  0003' 101A               	bcf	26,0	;volatile
 13122  0004'                    l7882:	
 13123                           
 13124                           ;main.c: 688:     _ring_byte[0] = clock_h;
 13125  0004' 0020               	movlb	0	; select bank0
 13126  0005' 0803'              	movf	ring_buffer@clock_h,w
 13127  0006' 0088'              	movwf	??_ring_buffer
 13128  0007' 0809'              	movf	ring_buffer@_ring_byte,w
 13129  0008' 0086               	movwf	6
 13130  0009' 0187               	clrf	7
 13131  000A' 0808'              	movf	??_ring_buffer,w
 13132  000B' 0081               	movwf	1
 13133                           
 13134                           ;main.c: 689:     _ring_byte[1] = clock_m;
 13135  000C' 0804'              	movf	ring_buffer@clock_m,w
 13136  000D' 0088'              	movwf	??_ring_buffer
 13137  000E' 0A09'              	incf	ring_buffer@_ring_byte,w
 13138  000F' 0086               	movwf	6
 13139  0010' 0187               	clrf	7
 13140  0011' 0808'              	movf	??_ring_buffer,w
 13141  0012' 0081               	movwf	1
 13142  0013'                    l7884:	
 13143                           
 13144                           ;main.c: 690:     _ring_byte[2] = clock_s;
 13145  0013' 0805'              	movf	ring_buffer@clock_s,w
 13146  0014' 0088'              	movwf	??_ring_buffer
 13147  0015' 0809'              	movf	ring_buffer@_ring_byte,w
 13148  0016' 3E02               	addlw	2
 13149  0017' 0086               	movwf	6
 13150  0018' 0187               	clrf	7
 13151  0019' 0808'              	movf	??_ring_buffer,w
 13152  001A' 0081               	movwf	1
 13153  001B'                    l7886:	
 13154                           
 13155                           ;main.c: 691:     PIE4bits.TMR1IE = 1;
 13156  001B' 002E               	movlb	14	; select bank14
 13157  001C' 141A               	bsf	26,0	;volatile
 13158  001D'                    l7888:	
 13159                           
 13160                           ;main.c: 692:     _ring_byte[3] = tem;
 13161  001D' 0020               	movlb	0	; select bank0
 13162  001E' 0806'              	movf	ring_buffer@tem,w
 13163  001F' 0088'              	movwf	??_ring_buffer
 13164  0020' 0809'              	movf	ring_buffer@_ring_byte,w
 13165  0021' 3E03               	addlw	3
 13166  0022' 0086               	movwf	6
 13167  0023' 0187               	clrf	7
 13168  0024' 0808'              	movf	??_ring_buffer,w
 13169  0025' 0081               	movwf	1
 13170  0026'                    l7890:	
 13171                           
 13172                           ;main.c: 693:     _ring_byte[4] = lum;
 13173  0026' 0807'              	movf	ring_buffer@lum,w
 13174  0027' 0088'              	movwf	??_ring_buffer
 13175  0028' 0809'              	movf	ring_buffer@_ring_byte,w
 13176  0029' 3E04               	addlw	4
 13177  002A' 0086               	movwf	6
 13178  002B' 0187               	clrf	7
 13179  002C' 0808'              	movf	??_ring_buffer,w
 13180  002D' 0081               	movwf	1
 13181  002E'                    l1453:	
 13182  002E' 0008               	return
 13183  002F'                    __end_of_ring_buffer:	
 13184                           
 13185                           	psect	text6
 13186  0000'                    __ptext6:	
 13187 ;; *************** function _recoverData *****************
 13188 ;; Defined at:
 13189 ;;		line 13 in file "eeprom_rw.c"
 13190 ;; Parameters:    Size  Location     Type
 13191 ;;		None
 13192 ;; Auto vars:     Size  Location     Type
 13193 ;;		None
 13194 ;; Return value:  Size  Location     Type
 13195 ;;                  1    wreg      void 
 13196 ;; Registers used:
 13197 ;;		wreg, status,2, status,0, pclath, cstack
 13198 ;; Tracked objects:
 13199 ;;		On entry : 0/0
 13200 ;;		On exit  : 0/0
 13201 ;;		Unchanged: 0/0
 13202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13205 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13206 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13207 ;;Total ram usage:        1 bytes
 13208 ;; Hardware stack levels used:    1
 13209 ;; Hardware stack levels required when called:    9
 13210 ;; This function calls:
 13211 ;;		_DATAEE_ReadByte
 13212 ;;		_DATAEE_WriteByte
 13213 ;;		_cksum
 13214 ;;		_cksum_w
 13215 ;;		_reset_recv
 13216 ;; This function is called by:
 13217 ;;		_main
 13218 ;; This function uses a non-reentrant model
 13219 ;;
 13220                           
 13221                           
 13222                           ;psect for function _recoverData
 13223  0000'                    _recoverData:	
 13224  0000'                    l7772:	
 13225                           ;incstack = 0
 13226                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 13227                           
 13228                           
 13229                           ;eeprom_rw.c: 15:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 13230  0000' 30F5               	movlw	245
 13231  0001' 0020               	movlb	0	; select bank0
 13232  0002' 0083'              	movwf	DATAEE_ReadByte@bAdd
 13233  0003' 30F0               	movlw	240
 13234  0004' 0084'              	movwf	DATAEE_ReadByte@bAdd+1
 13235  0005' 3180' 2000' 3180'  	fcall	_DATAEE_ReadByte
 13236  0008' 3AAB               	xorlw	171
 13237  0009' 1D03               	skipz
 13238  000A' 2800'              	goto	u5141
 13239  000B' 2800'              	goto	u5140
 13240  000C'                    u5141:	
 13241  000C' 2800'              	goto	l7778
 13242  000D'                    u5140:	
 13243  000D'                    l7774:	
 13244                           
 13245                           ;eeprom_rw.c: 16:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 13246  000D' 3180' 2000' 3180'  	fcall	_cksum
 13247  0010' 0020               	movlb	0	; select bank0
 13248  0011' 008F'              	movwf	??_recoverData
 13249  0012' 30FF               	movlw	255
 13250  0013' 0083'              	movwf	DATAEE_ReadByte@bAdd
 13251  0014' 30F0               	movlw	240
 13252  0015' 0084'              	movwf	DATAEE_ReadByte@bAdd+1
 13253  0016' 3180' 2000' 3180'  	fcall	_DATAEE_ReadByte
 13254  0019' 0020               	movlb	0	; select bank0
 13255  001A' 060F'              	xorwf	??_recoverData,w
 13256  001B' 1D03               	skipz
 13257  001C' 2800'              	goto	u5151
 13258  001D' 2800'              	goto	u5150
 13259  001E'                    u5151:	
 13260  001E' 2800'              	goto	l7778
 13261  001F'                    u5150:	
 13262  001F'                    l7776:	
 13263                           
 13264                           ;eeprom_rw.c: 17:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 13265  001F' 30F6               	movlw	246
 13266  0020' 0083'              	movwf	DATAEE_ReadByte@bAdd
 13267  0021' 30F0               	movlw	240
 13268  0022' 0084'              	movwf	DATAEE_ReadByte@bAdd+1
 13269  0023' 3180' 2000' 3180'  	fcall	_DATAEE_ReadByte
 13270  0026' 0020               	movlb	0	; select bank0
 13271  0027' 008F'              	movwf	??_recoverData
 13272  0028' 080F'              	movf	??_recoverData,w
 13273  0029' 008F'              	movwf	_clkh	;volatile
 13274                           
 13275                           ;eeprom_rw.c: 18:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 13276  002A' 30F7               	movlw	247
 13277  002B' 0083'              	movwf	DATAEE_ReadByte@bAdd
 13278  002C' 30F0               	movlw	240
 13279  002D' 0084'              	movwf	DATAEE_ReadByte@bAdd+1
 13280  002E' 3180' 2000' 3180'  	fcall	_DATAEE_ReadByte
 13281  0031' 0020               	movlb	0	; select bank0
 13282  0032' 008F'              	movwf	??_recoverData
 13283  0033' 080F'              	movf	??_recoverData,w
 13284  0034' 008E'              	movwf	_clkm	;volatile
 13285                           
 13286                           ;eeprom_rw.c: 19:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 13287  0035' 30F8               	movlw	248
 13288  0036' 0083'              	movwf	DATAEE_ReadByte@bAdd
 13289  0037' 30F0               	movlw	240
 13290  0038' 0084'              	movwf	DATAEE_ReadByte@bAdd+1
 13291  0039' 3180' 2000' 3180'  	fcall	_DATAEE_ReadByte
 13292  003C' 0020               	movlb	0	; select bank0
 13293  003D' 008F'              	movwf	??_recoverData
 13294  003E' 080F'              	movf	??_recoverData,w
 13295  003F' 0088'              	movwf	_nreg
 13296                           
 13297                           ;eeprom_rw.c: 20:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 13298  0040' 30F9               	movlw	249
 13299  0041' 0083'              	movwf	DATAEE_ReadByte@bAdd
 13300  0042' 30F0               	movlw	240
 13301  0043' 0084'              	movwf	DATAEE_ReadByte@bAdd+1
 13302  0044' 3180' 2000' 3180'  	fcall	_DATAEE_ReadByte
 13303  0047' 0020               	movlb	0	; select bank0
 13304  0048' 008F'              	movwf	??_recoverData
 13305  0049' 080F'              	movf	??_recoverData,w
 13306  004A' 0090'              	movwf	_nreg_pt
 13307                           
 13308                           ;eeprom_rw.c: 21:             temp_thresh = DATAEE_ReadByte(0xF0FF - 10 + 5);
 13309  004B' 30FA               	movlw	250
 13310  004C' 0083'              	movwf	DATAEE_ReadByte@bAdd
 13311  004D' 30F0               	movlw	240
 13312  004E' 0084'              	movwf	DATAEE_ReadByte@bAdd+1
 13313  004F' 3180' 2000' 3180'  	fcall	_DATAEE_ReadByte
 13314  0052' 0020               	movlb	0	; select bank0
 13315  0053' 008F'              	movwf	??_recoverData
 13316  0054' 080F'              	movf	??_recoverData,w
 13317  0055' 0085'              	movwf	_temp_thresh
 13318                           
 13319                           ;eeprom_rw.c: 22:             lum_thresh = DATAEE_ReadByte(0xF0FF - 10 + 6);
 13320  0056' 30FB               	movlw	251
 13321  0057' 0083'              	movwf	DATAEE_ReadByte@bAdd
 13322  0058' 30F0               	movlw	240
 13323  0059' 0084'              	movwf	DATAEE_ReadByte@bAdd+1
 13324  005A' 3180' 2000' 3180'  	fcall	_DATAEE_ReadByte
 13325  005D' 0020               	movlb	0	; select bank0
 13326  005E' 008F'              	movwf	??_recoverData
 13327  005F' 080F'              	movf	??_recoverData,w
 13328  0060' 0084'              	movwf	_lum_thresh
 13329                           
 13330                           ;eeprom_rw.c: 23:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 7);
 13331  0061' 30FC               	movlw	252
 13332  0062' 0083'              	movwf	DATAEE_ReadByte@bAdd
 13333  0063' 30F0               	movlw	240
 13334  0064' 0084'              	movwf	DATAEE_ReadByte@bAdd+1
 13335  0065' 3180' 2000' 3180'  	fcall	_DATAEE_ReadByte
 13336  0068' 0020               	movlb	0	; select bank0
 13337  0069' 008F'              	movwf	??_recoverData
 13338  006A' 080F'              	movf	??_recoverData,w
 13339  006B' 0087'              	movwf	_pmon
 13340                           
 13341                           ;eeprom_rw.c: 24:             tala = DATAEE_ReadByte(0xF0FF - 10 + 8);
 13342  006C' 30FD               	movlw	253
 13343  006D' 0083'              	movwf	DATAEE_ReadByte@bAdd
 13344  006E' 30F0               	movlw	240
 13345  006F' 0084'              	movwf	DATAEE_ReadByte@bAdd+1
 13346  0070' 3180' 2000' 3180'  	fcall	_DATAEE_ReadByte
 13347  0073' 0020               	movlb	0	; select bank0
 13348  0074' 008F'              	movwf	??_recoverData
 13349  0075' 080F'              	movf	??_recoverData,w
 13350  0076' 0086'              	movwf	_tala
 13351  0077'                    l7778:	
 13352                           
 13353                           ;eeprom_rw.c: 28:     reset_recv();
 13354  0077' 3180' 2000' 3180'  	fcall	_reset_recv
 13355  007A'                    l7780:	
 13356                           
 13357                           ;eeprom_rw.c: 31:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 13358  007A' 30F5               	movlw	245
 13359  007B' 0020               	movlb	0	; select bank0
 13360  007C' 0089'              	movwf	DATAEE_WriteByte@bAdd
 13361  007D' 30F0               	movlw	240
 13362  007E' 008A'              	movwf	DATAEE_WriteByte@bAdd+1
 13363  007F' 30AB               	movlw	171
 13364  0080' 008F'              	movwf	??_recoverData
 13365  0081' 080F'              	movf	??_recoverData,w
 13366  0082' 008B'              	movwf	DATAEE_WriteByte@bData
 13367  0083' 3180' 2000' 3180'  	fcall	_DATAEE_WriteByte
 13368  0086'                    l7782:	
 13369                           
 13370                           ;eeprom_rw.c: 32:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 13371  0086' 30F8               	movlw	248
 13372  0087' 0020               	movlb	0	; select bank0
 13373  0088' 0089'              	movwf	DATAEE_WriteByte@bAdd
 13374  0089' 30F0               	movlw	240
 13375  008A' 008A'              	movwf	DATAEE_WriteByte@bAdd+1
 13376  008B' 0808'              	movf	_nreg,w
 13377  008C' 008F'              	movwf	??_recoverData
 13378  008D' 080F'              	movf	??_recoverData,w
 13379  008E' 008B'              	movwf	DATAEE_WriteByte@bData
 13380  008F' 3180' 2000' 3180'  	fcall	_DATAEE_WriteByte
 13381  0092'                    l7784:	
 13382                           
 13383                           ;eeprom_rw.c: 33:     DATAEE_WriteByte(0xF0FF - 10 + 5, temp_thresh);
 13384  0092' 30FA               	movlw	250
 13385  0093' 0020               	movlb	0	; select bank0
 13386  0094' 0089'              	movwf	DATAEE_WriteByte@bAdd
 13387  0095' 30F0               	movlw	240
 13388  0096' 008A'              	movwf	DATAEE_WriteByte@bAdd+1
 13389  0097' 0805'              	movf	_temp_thresh,w
 13390  0098' 008F'              	movwf	??_recoverData
 13391  0099' 080F'              	movf	??_recoverData,w
 13392  009A' 008B'              	movwf	DATAEE_WriteByte@bData
 13393  009B' 3180' 2000' 3180'  	fcall	_DATAEE_WriteByte
 13394  009E'                    l7786:	
 13395                           
 13396                           ;eeprom_rw.c: 34:     DATAEE_WriteByte(0xF0FF - 10 + 6, lum_thresh);
 13397  009E' 30FB               	movlw	251
 13398  009F' 0020               	movlb	0	; select bank0
 13399  00A0' 0089'              	movwf	DATAEE_WriteByte@bAdd
 13400  00A1' 30F0               	movlw	240
 13401  00A2' 008A'              	movwf	DATAEE_WriteByte@bAdd+1
 13402  00A3' 0804'              	movf	_lum_thresh,w
 13403  00A4' 008F'              	movwf	??_recoverData
 13404  00A5' 080F'              	movf	??_recoverData,w
 13405  00A6' 008B'              	movwf	DATAEE_WriteByte@bData
 13406  00A7' 3180' 2000' 3180'  	fcall	_DATAEE_WriteByte
 13407  00AA'                    l7788:	
 13408                           
 13409                           ;eeprom_rw.c: 35:     DATAEE_WriteByte(0xF0FF - 10 + 7, pmon);
 13410  00AA' 30FC               	movlw	252
 13411  00AB' 0020               	movlb	0	; select bank0
 13412  00AC' 0089'              	movwf	DATAEE_WriteByte@bAdd
 13413  00AD' 30F0               	movlw	240
 13414  00AE' 008A'              	movwf	DATAEE_WriteByte@bAdd+1
 13415  00AF' 0807'              	movf	_pmon,w
 13416  00B0' 008F'              	movwf	??_recoverData
 13417  00B1' 080F'              	movf	??_recoverData,w
 13418  00B2' 008B'              	movwf	DATAEE_WriteByte@bData
 13419  00B3' 3180' 2000' 3180'  	fcall	_DATAEE_WriteByte
 13420  00B6'                    l7790:	
 13421                           
 13422                           ;eeprom_rw.c: 36:     DATAEE_WriteByte(0xF0FF - 10 + 8, tala);
 13423  00B6' 30FD               	movlw	253
 13424  00B7' 0020               	movlb	0	; select bank0
 13425  00B8' 0089'              	movwf	DATAEE_WriteByte@bAdd
 13426  00B9' 30F0               	movlw	240
 13427  00BA' 008A'              	movwf	DATAEE_WriteByte@bAdd+1
 13428  00BB' 0806'              	movf	_tala,w
 13429  00BC' 008F'              	movwf	??_recoverData
 13430  00BD' 080F'              	movf	??_recoverData,w
 13431  00BE' 008B'              	movwf	DATAEE_WriteByte@bData
 13432  00BF' 3180' 2000' 3180'  	fcall	_DATAEE_WriteByte
 13433  00C2'                    l7792:	
 13434                           
 13435                           ;eeprom_rw.c: 37:     cksum_w();
 13436  00C2' 3180' 2000' 3180'  	fcall	_cksum_w
 13437  00C5'                    l1633:	
 13438  00C5' 0008               	return
 13439  00C6'                    __end_of_recoverData:	
 13440                           
 13441                           	psect	text7
 13442  0000'                    __ptext7:	
 13443 ;; *************** function _reset_recv *****************
 13444 ;; Defined at:
 13445 ;;		line 81 in file "eeprom_rw.c"
 13446 ;; Parameters:    Size  Location     Type
 13447 ;;		None
 13448 ;; Auto vars:     Size  Location     Type
 13449 ;;  i               2   13[BANK0 ] unsigned int 
 13450 ;; Return value:  Size  Location     Type
 13451 ;;                  1    wreg      void 
 13452 ;; Registers used:
 13453 ;;		wreg, status,2, status,0, pclath, cstack
 13454 ;; Tracked objects:
 13455 ;;		On entry : 0/0
 13456 ;;		On exit  : 0/0
 13457 ;;		Unchanged: 0/0
 13458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13460 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13462 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13463 ;;Total ram usage:        2 bytes
 13464 ;; Hardware stack levels used:    1
 13465 ;; Hardware stack levels required when called:    7
 13466 ;; This function calls:
 13467 ;;		_DATAEE_WriteByte
 13468 ;; This function is called by:
 13469 ;;		_recoverData
 13470 ;; This function uses a non-reentrant model
 13471 ;;
 13472                           
 13473                           
 13474                           ;psect for function _reset_recv
 13475  0000'                    _reset_recv:	
 13476  0000'                    l7598:	
 13477                           ;incstack = 0
 13478                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 13479                           
 13480                           
 13481                           ;eeprom_rw.c: 83:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 13482  0000' 30F5               	movlw	245
 13483  0001' 0020               	movlb	0	; select bank0
 13484  0002' 008D'              	movwf	reset_recv@i
 13485  0003' 30F0               	movlw	240
 13486  0004' 008E'              	movwf	reset_recv@i+1
 13487  0005'                    l7602:	
 13488                           
 13489                           ;eeprom_rw.c: 84:         DATAEE_WriteByte(i, 0);
 13490  0005' 080E'              	movf	reset_recv@i+1,w
 13491  0006' 008A'              	movwf	DATAEE_WriteByte@bAdd+1
 13492  0007' 080D'              	movf	reset_recv@i,w
 13493  0008' 0089'              	movwf	DATAEE_WriteByte@bAdd
 13494  0009' 018B'              	clrf	DATAEE_WriteByte@bData
 13495  000A' 3180' 2000' 3180'  	fcall	_DATAEE_WriteByte
 13496  000D'                    l7604:	
 13497  000D' 3001               	movlw	1
 13498  000E' 0020               	movlb	0	; select bank0
 13499  000F' 078D'              	addwf	reset_recv@i,f
 13500  0010' 3000               	movlw	0
 13501  0011' 3D8E'              	addwfc	reset_recv@i+1,f
 13502  0012'                    l7606:	
 13503  0012' 30F1               	movlw	241
 13504  0013' 020E'              	subwf	reset_recv@i+1,w
 13505  0014' 3000               	movlw	0
 13506  0015' 1903               	skipnz
 13507  0016' 020D'              	subwf	reset_recv@i,w
 13508  0017' 1C03               	skipc
 13509  0018' 2800'              	goto	u4981
 13510  0019' 2800'              	goto	u4980
 13511  001A'                    u4981:	
 13512  001A' 2800'              	goto	l7602
 13513  001B'                    u4980:	
 13514  001B'                    l1660:	
 13515  001B' 0008               	return
 13516  001C'                    __end_of_reset_recv:	
 13517                           
 13518                           	psect	text8
 13519  0000'                    __ptext8:	
 13520 ;; *************** function _cksum_w *****************
 13521 ;; Defined at:
 13522 ;;		line 67 in file "eeprom_rw.c"
 13523 ;; Parameters:    Size  Location     Type
 13524 ;;		None
 13525 ;; Auto vars:     Size  Location     Type
 13526 ;;		None
 13527 ;; Return value:  Size  Location     Type
 13528 ;;                  1    wreg      void 
 13529 ;; Registers used:
 13530 ;;		wreg, status,2, status,0, pclath, cstack
 13531 ;; Tracked objects:
 13532 ;;		On entry : 0/0
 13533 ;;		On exit  : 0/0
 13534 ;;		Unchanged: 0/0
 13535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13538 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13539 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13540 ;;Total ram usage:        1 bytes
 13541 ;; Hardware stack levels used:    1
 13542 ;; Hardware stack levels required when called:    8
 13543 ;; This function calls:
 13544 ;;		_DATAEE_WriteByte
 13545 ;;		_cksum
 13546 ;; This function is called by:
 13547 ;;		_main
 13548 ;;		_save_recovery_params
 13549 ;;		_recoverData
 13550 ;; This function uses a non-reentrant model
 13551 ;;
 13552                           
 13553                           
 13554                           ;psect for function _cksum_w
 13555  0000'                    _cksum_w:	
 13556  0000'                    l7520:	
 13557                           ;incstack = 0
 13558                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 13559                           
 13560                           
 13561                           ;eeprom_rw.c: 69:     DATAEE_WriteByte(0xF0FF, cksum());
 13562  0000' 30FF               	movlw	255
 13563  0001' 0020               	movlb	0	; select bank0
 13564  0002' 0089'              	movwf	DATAEE_WriteByte@bAdd
 13565  0003' 30F0               	movlw	240
 13566  0004' 008A'              	movwf	DATAEE_WriteByte@bAdd+1
 13567  0005' 3180' 2000' 3180'  	fcall	_cksum
 13568  0008' 0020               	movlb	0	; select bank0
 13569  0009' 008D'              	movwf	??_cksum_w
 13570  000A' 080D'              	movf	??_cksum_w,w
 13571  000B' 008B'              	movwf	DATAEE_WriteByte@bData
 13572  000C' 3180' 2000' 3180'  	fcall	_DATAEE_WriteByte
 13573  000F'                    l1650:	
 13574  000F' 0008               	return
 13575  0010'                    __end_of_cksum_w:	
 13576                           
 13577                           	psect	text9
 13578  0000'                    __ptext9:	
 13579 ;; *************** function _cksum *****************
 13580 ;; Defined at:
 13581 ;;		line 72 in file "eeprom_rw.c"
 13582 ;; Parameters:    Size  Location     Type
 13583 ;;		None
 13584 ;; Auto vars:     Size  Location     Type
 13585 ;;  i               2    7[BANK0 ] unsigned int 
 13586 ;;  res             1    6[BANK0 ] unsigned char 
 13587 ;; Return value:  Size  Location     Type
 13588 ;;                  1    wreg      unsigned char 
 13589 ;; Registers used:
 13590 ;;		wreg, status,2, status,0, pclath, cstack
 13591 ;; Tracked objects:
 13592 ;;		On entry : 0/0
 13593 ;;		On exit  : 0/0
 13594 ;;		Unchanged: 0/0
 13595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13597 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13598 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13599 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13600 ;;Total ram usage:        4 bytes
 13601 ;; Hardware stack levels used:    1
 13602 ;; Hardware stack levels required when called:    7
 13603 ;; This function calls:
 13604 ;;		_DATAEE_ReadByte
 13605 ;; This function is called by:
 13606 ;;		_recoverData
 13607 ;;		_cksum_w
 13608 ;; This function uses a non-reentrant model
 13609 ;;
 13610                           
 13611                           
 13612                           ;psect for function _cksum
 13613  0000'                    _cksum:	
 13614  0000'                    l7340:	
 13615                           ;incstack = 0
 13616                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 13617                           
 13618                           
 13619                           ;eeprom_rw.c: 74:     unsigned char res = 0;
 13620  0000' 0020               	movlb	0	; select bank0
 13621  0001' 0186'              	clrf	cksum@res
 13622  0002'                    l7342:	
 13623                           
 13624                           ;eeprom_rw.c: 75:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 13625  0002' 30F5               	movlw	245
 13626  0003' 0087'              	movwf	cksum@i
 13627  0004' 30F0               	movlw	240
 13628  0005' 0088'              	movwf	cksum@i+1
 13629  0006'                    l7348:	
 13630                           
 13631                           ;eeprom_rw.c: 76:         res += DATAEE_ReadByte(i);
 13632  0006' 0808'              	movf	cksum@i+1,w
 13633  0007' 0084'              	movwf	DATAEE_ReadByte@bAdd+1
 13634  0008' 0807'              	movf	cksum@i,w
 13635  0009' 0083'              	movwf	DATAEE_ReadByte@bAdd
 13636  000A' 3180' 2000' 3180'  	fcall	_DATAEE_ReadByte
 13637  000D' 0020               	movlb	0	; select bank0
 13638  000E' 0085'              	movwf	??_cksum
 13639  000F' 0805'              	movf	??_cksum,w
 13640  0010' 0786'              	addwf	cksum@res,f
 13641  0011'                    l7350:	
 13642                           
 13643                           ;eeprom_rw.c: 77:     }
 13644  0011' 3001               	movlw	1
 13645  0012' 0787'              	addwf	cksum@i,f
 13646  0013' 3000               	movlw	0
 13647  0014' 3D88'              	addwfc	cksum@i+1,f
 13648  0015'                    l7352:	
 13649  0015' 30F0               	movlw	240
 13650  0016' 0208'              	subwf	cksum@i+1,w
 13651  0017' 30FF               	movlw	255
 13652  0018' 1903               	skipnz
 13653  0019' 0207'              	subwf	cksum@i,w
 13654  001A' 1C03               	skipc
 13655  001B' 2800'              	goto	u4761
 13656  001C' 2800'              	goto	u4760
 13657  001D'                    u4761:	
 13658  001D' 2800'              	goto	l7348
 13659  001E'                    u4760:	
 13660  001E'                    l7354:	
 13661                           
 13662                           ;eeprom_rw.c: 78:     return res;
 13663  001E' 0806'              	movf	cksum@res,w
 13664  001F'                    l1655:	
 13665  001F' 0008               	return
 13666  0020'                    __end_of_cksum:	
 13667                           
 13668                           	psect	text10
 13669  0000'                    __ptext10:	
 13670 ;; *************** function _read_str_UART *****************
 13671 ;; Defined at:
 13672 ;;		line 34 in file "uartusr.c"
 13673 ;; Parameters:    Size  Location     Type
 13674 ;;  buff            1    wreg     PTR unsigned char 
 13675 ;;		 -> str_rc(16), 
 13676 ;;  max_len         1   13[BANK0 ] unsigned char 
 13677 ;; Auto vars:     Size  Location     Type
 13678 ;;  buff            1   17[BANK0 ] PTR unsigned char 
 13679 ;;		 -> str_rc(16), 
 13680 ;;  rxData          1   18[BANK0 ] volatile unsigned char 
 13681 ;;  i               1   16[BANK0 ] unsigned char 
 13682 ;; Return value:  Size  Location     Type
 13683 ;;                  1    wreg      unsigned char 
 13684 ;; Registers used:
 13685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13686 ;; Tracked objects:
 13687 ;;		On entry : 0/0
 13688 ;;		On exit  : 0/0
 13689 ;;		Unchanged: 0/0
 13690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13691 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13692 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13693 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13694 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13695 ;;Total ram usage:        6 bytes
 13696 ;; Hardware stack levels used:    1
 13697 ;; Hardware stack levels required when called:    9
 13698 ;; This function calls:
 13699 ;;		_dump_UART_FIFO
 13700 ;;		_memset
 13701 ;;		_read_UART
 13702 ;;		_write_str_UART
 13703 ;; This function is called by:
 13704 ;;		_main
 13705 ;;		_UART_RX
 13706 ;; This function uses a non-reentrant model
 13707 ;;
 13708                           
 13709                           
 13710                           ;psect for function _read_str_UART
 13711  0000'                    _read_str_UART:	
 13712                           
 13713                           ;incstack = 0
 13714                           ; Regs used in _read_str_UART: [allreg]
 13715                           ;read_str_UART@buff stored from wreg
 13716  0000' 0020               	movlb	0	; select bank0
 13717  0001' 0091'              	movwf	read_str_UART@buff
 13718  0002'                    l7740:	
 13719                           
 13720                           ;uartusr.c: 36:     volatile uint8_t rxData = '0';
 13721  0002' 3030               	movlw	48
 13722  0003' 008E'              	movwf	??_read_str_UART
 13723  0004' 080E'              	movf	??_read_str_UART,w
 13724  0005' 0092'              	movwf	read_str_UART@rxData	;volatile
 13725  0006'                    l7742:	
 13726                           
 13727                           ;uartusr.c: 37:     uint8_t i=0;
 13728  0006' 0190'              	clrf	read_str_UART@i
 13729  0007'                    l7744:	
 13730                           
 13731                           ;uartusr.c: 38:     memset(buff, 0, max_len);
 13732  0007' 3000               	movlw	0
 13733  0008' 0083'              	movwf	memset@c
 13734  0009' 0084'              	movwf	memset@c+1
 13735  000A' 080D'              	movf	read_str_UART@max_len,w
 13736  000B' 008E'              	movwf	??_read_str_UART
 13737  000C' 018F'              	clrf	??_read_str_UART+1
 13738  000D' 080E'              	movf	??_read_str_UART,w
 13739  000E' 0085'              	movwf	memset@n
 13740  000F' 080F'              	movf	??_read_str_UART+1,w
 13741  0010' 0086'              	movwf	memset@n+1
 13742  0011' 0811'              	movf	read_str_UART@buff,w
 13743  0012' 3180' 2000' 3180'  	fcall	_memset
 13744  0015'                    l7746:	
 13745                           
 13746                           ;uartusr.c: 40:     rxData = read_UART();
 13747  0015' 3180' 2000' 3180'  	fcall	_read_UART
 13748  0018' 0020               	movlb	0	; select bank0
 13749  0019' 008E'              	movwf	??_read_str_UART
 13750  001A' 080E'              	movf	??_read_str_UART,w
 13751  001B' 0092'              	movwf	read_str_UART@rxData	;volatile
 13752  001C'                    l7748:	
 13753                           
 13754                           ;uartusr.c: 41:     if( rxData == (char)0x3A ){
 13755  001C' 303A               	movlw	58
 13756  001D' 0612'              	xorwf	read_str_UART@rxData,w	;volatile
 13757  001E' 1D03               	btfss	3,2
 13758  001F' 2800'              	goto	u5101
 13759  0020' 2800'              	goto	u5100
 13760  0021'                    u5101:	
 13761  0021' 2800'              	goto	l7764
 13762  0022'                    u5100:	
 13763  0022'                    l7750:	
 13764                           
 13765                           ;uartusr.c: 42:         for(i=0; i < max_len && (rxData !='\n'&& rxData != (char)0x3F );
      +                           i++){
 13766  0022' 0190'              	clrf	read_str_UART@i
 13767  0023' 2800'              	goto	l7758
 13768  0024'                    l7752:	
 13769                           
 13770                           ;uartusr.c: 43:                 buff[i] = rxData;
 13771  0024' 0812'              	movf	read_str_UART@rxData,w	;volatile
 13772  0025' 008E'              	movwf	??_read_str_UART
 13773  0026' 0810'              	movf	read_str_UART@i,w
 13774  0027' 0711'              	addwf	read_str_UART@buff,w
 13775  0028' 008F'              	movwf	??_read_str_UART+1
 13776  0029' 080F'              	movf	??_read_str_UART+1,w
 13777  002A' 0086               	movwf	6
 13778  002B' 0187               	clrf	7
 13779  002C' 080E'              	movf	??_read_str_UART,w
 13780  002D' 0081               	movwf	1
 13781  002E'                    l7754:	
 13782                           
 13783                           ;uartusr.c: 45:                 rxData = read_UART();
 13784  002E' 3180' 2000' 3180'  	fcall	_read_UART
 13785  0031' 0020               	movlb	0	; select bank0
 13786  0032' 008E'              	movwf	??_read_str_UART
 13787  0033' 080E'              	movf	??_read_str_UART,w
 13788  0034' 0092'              	movwf	read_str_UART@rxData	;volatile
 13789  0035'                    l7756:	
 13790                           
 13791                           ;uartusr.c: 47:            }
 13792  0035' 3001               	movlw	1
 13793  0036' 008E'              	movwf	??_read_str_UART
 13794  0037' 080E'              	movf	??_read_str_UART,w
 13795  0038' 0790'              	addwf	read_str_UART@i,f
 13796  0039'                    l7758:	
 13797  0039' 080D'              	movf	read_str_UART@max_len,w
 13798  003A' 0210'              	subwf	read_str_UART@i,w
 13799  003B' 1803               	skipnc
 13800  003C' 2800'              	goto	u5111
 13801  003D' 2800'              	goto	u5110
 13802  003E'                    u5111:	
 13803  003E' 2800'              	goto	l7764
 13804  003F'                    u5110:	
 13805  003F'                    l7760:	
 13806  003F' 300A               	movlw	10
 13807  0040' 0612'              	xorwf	read_str_UART@rxData,w	;volatile
 13808  0041' 1903               	btfsc	3,2
 13809  0042' 2800'              	goto	u5121
 13810  0043' 2800'              	goto	u5120
 13811  0044'                    u5121:	
 13812  0044' 2800'              	goto	l1777
 13813  0045'                    u5120:	
 13814  0045'                    l7762:	
 13815  0045' 303F               	movlw	63
 13816  0046' 0612'              	xorwf	read_str_UART@rxData,w	;volatile
 13817  0047' 1D03               	btfss	3,2
 13818  0048' 2800'              	goto	u5131
 13819  0049' 2800'              	goto	u5130
 13820  004A'                    u5131:	
 13821  004A' 2800'              	goto	l7752
 13822  004B'                    u5130:	
 13823  004B' 2800'              	goto	l7764
 13824  004C'                    l1777:	
 13825  004C'                    l7764:	
 13826                           
 13827                           ;uartusr.c: 49:     dump_UART_FIFO();
 13828  004C' 3180' 2000' 3180'  	fcall	_dump_UART_FIFO
 13829  004F'                    l7766:	
 13830                           
 13831                           ;uartusr.c: 51:     buff[i+1] = '\0';
 13832  004F' 0020               	movlb	0	; select bank0
 13833  0050' 0810'              	movf	read_str_UART@i,w
 13834  0051' 0711'              	addwf	read_str_UART@buff,w
 13835  0052' 008E'              	movwf	??_read_str_UART
 13836  0053' 0A0E'              	incf	??_read_str_UART,w
 13837  0054' 0086               	movwf	6
 13838  0055' 0187               	clrf	7
 13839  0056' 0181               	clrf	1
 13840  0057'                    l7768:	
 13841                           
 13842                           ;uartusr.c: 52:     write_str_UART(buff, max_len);
 13843  0057' 0811'              	movf	read_str_UART@buff,w
 13844  0058' 0084'              	movwf	write_str_UART@string
 13845  0059' 3000               	movlw	0
 13846  005A' 0085'              	movwf	write_str_UART@string+1
 13847  005B' 080D'              	movf	read_str_UART@max_len,w
 13848  005C' 008E'              	movwf	??_read_str_UART
 13849  005D' 080E'              	movf	??_read_str_UART,w
 13850  005E' 0086'              	movwf	write_str_UART@size
 13851  005F' 3180' 2000' 3180'  	fcall	_write_str_UART
 13852  0062'                    l1778:	
 13853  0062' 0008               	return
 13854  0063'                    __end_of_read_str_UART:	
 13855                           
 13856                           	psect	text11
 13857  0000'                    __ptext11:	
 13858 ;; *************** function _write_str_UART *****************
 13859 ;; Defined at:
 13860 ;;		line 118 in file "uartusr.c"
 13861 ;; Parameters:    Size  Location     Type
 13862 ;;  string          2    4[BANK0 ] PTR unsigned char 
 13863 ;;		 -> str_rc(16), str_snd(16), 
 13864 ;;  size            1    6[BANK0 ] unsigned char 
 13865 ;; Auto vars:     Size  Location     Type
 13866 ;;  id              1    9[BANK0 ] unsigned char 
 13867 ;; Return value:  Size  Location     Type
 13868 ;;                  1    wreg      void 
 13869 ;; Registers used:
 13870 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13871 ;; Tracked objects:
 13872 ;;		On entry : 0/0
 13873 ;;		On exit  : 0/0
 13874 ;;		Unchanged: 0/0
 13875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13876 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13878 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13879 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13880 ;;Total ram usage:        6 bytes
 13881 ;; Hardware stack levels used:    1
 13882 ;; Hardware stack levels required when called:    8
 13883 ;; This function calls:
 13884 ;;		_write_UART
 13885 ;; This function is called by:
 13886 ;;		_main
 13887 ;;		_read_str_UART
 13888 ;;		_UART_RX
 13889 ;;		_echo
 13890 ;; This function uses a non-reentrant model
 13891 ;;
 13892                           
 13893                           
 13894                           ;psect for function _write_str_UART
 13895  0000'                    _write_str_UART:	
 13896  0000'                    l7510:	
 13897                           ;incstack = 0
 13898                           ; Regs used in _write_str_UART: [allreg]
 13899                           
 13900                           
 13901                           ;uartusr.c: 119:     uint8_t id;;uartusr.c: 121:     for(id=0; id <= size && string[id]!
      +                          = '\0'; ++id){
 13902  0000' 0020               	movlb	0	; select bank0
 13903  0001' 0189'              	clrf	write_str_UART@id
 13904  0002' 2800'              	goto	l7516
 13905  0003'                    l7512:	
 13906                           
 13907                           ;uartusr.c: 123:         write_UART(string[id]);
 13908  0003' 0809'              	movf	write_str_UART@id,w
 13909  0004' 0087'              	movwf	??_write_str_UART
 13910  0005' 0188'              	clrf	??_write_str_UART+1
 13911  0006' 0807'              	movf	??_write_str_UART,w
 13912  0007' 0704'              	addwf	write_str_UART@string,w
 13913  0008' 0086               	movwf	6
 13914  0009' 0808'              	movf	??_write_str_UART+1,w
 13915  000A' 3D05'              	addwfc	write_str_UART@string+1,w
 13916  000B' 0087               	movwf	7
 13917  000C' 0801               	movf	1,w
 13918  000D' 3180' 2000' 3180'  	fcall	_write_UART
 13919  0010'                    l7514:	
 13920                           
 13921                           ;uartusr.c: 124:     }
 13922  0010' 3001               	movlw	1
 13923  0011' 0020               	movlb	0	; select bank0
 13924  0012' 0087'              	movwf	??_write_str_UART
 13925  0013' 0807'              	movf	??_write_str_UART,w
 13926  0014' 0789'              	addwf	write_str_UART@id,f
 13927  0015'                    l7516:	
 13928  0015' 0809'              	movf	write_str_UART@id,w
 13929  0016' 0206'              	subwf	write_str_UART@size,w
 13930  0017' 1C03               	skipc
 13931  0018' 2800'              	goto	u4791
 13932  0019' 2800'              	goto	u4790
 13933  001A'                    u4791:	
 13934  001A' 2800'              	goto	l1816
 13935  001B'                    u4790:	
 13936  001B'                    l7518:	
 13937  001B' 0809'              	movf	write_str_UART@id,w
 13938  001C' 0087'              	movwf	??_write_str_UART
 13939  001D' 0188'              	clrf	??_write_str_UART+1
 13940  001E' 0807'              	movf	??_write_str_UART,w
 13941  001F' 0704'              	addwf	write_str_UART@string,w
 13942  0020' 0086               	movwf	6
 13943  0021' 0808'              	movf	??_write_str_UART+1,w
 13944  0022' 3D05'              	addwfc	write_str_UART@string+1,w
 13945  0023' 0087               	movwf	7
 13946  0024' 0801               	movf	1,w
 13947  0025' 1D03               	btfss	3,2
 13948  0026' 2800'              	goto	u4801
 13949  0027' 2800'              	goto	u4800
 13950  0028'                    u4801:	
 13951  0028' 2800'              	goto	l7512
 13952  0029'                    u4800:	
 13953  0029'                    l1816:	
 13954  0029' 0008               	return
 13955  002A'                    __end_of_write_str_UART:	
 13956                           
 13957                           	psect	text12
 13958  0000'                    __ptext12:	
 13959 ;; *************** function _write_UART *****************
 13960 ;; Defined at:
 13961 ;;		line 130 in file "uartusr.c"
 13962 ;; Parameters:    Size  Location     Type
 13963 ;;  rxData          1    wreg     unsigned char 
 13964 ;; Auto vars:     Size  Location     Type
 13965 ;;  rxData          1    3[BANK0 ] unsigned char 
 13966 ;; Return value:  Size  Location     Type
 13967 ;;                  1    wreg      void 
 13968 ;; Registers used:
 13969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13970 ;; Tracked objects:
 13971 ;;		On entry : 0/0
 13972 ;;		On exit  : 0/0
 13973 ;;		Unchanged: 0/0
 13974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13976 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13978 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13979 ;;Total ram usage:        1 bytes
 13980 ;; Hardware stack levels used:    1
 13981 ;; Hardware stack levels required when called:    7
 13982 ;; This function calls:
 13983 ;;		_EUSART_Write
 13984 ;;		_EUSART_is_tx_done
 13985 ;;		_EUSART_is_tx_ready
 13986 ;; This function is called by:
 13987 ;;		_write_str_UART
 13988 ;; This function uses a non-reentrant model
 13989 ;;
 13990                           
 13991                           
 13992                           ;psect for function _write_UART
 13993  0000'                    _write_UART:	
 13994                           
 13995                           ;incstack = 0
 13996                           ; Regs used in _write_UART: [allreg]
 13997                           ;write_UART@rxData stored from wreg
 13998  0000' 0020               	movlb	0	; select bank0
 13999  0001' 0083'              	movwf	write_UART@rxData
 14000  0002'                    l7358:	
 14001  0002'                    l7360:	
 14002                           ;uartusr.c: 132:    while(!EUSART_is_tx_done());
 14003                           
 14004  0002' 3180' 2000' 3180'  	fcall	_EUSART_is_tx_done
 14005  0005' 3A00               	xorlw	0
 14006  0006' 1903               	skipnz
 14007  0007' 2800'              	goto	u4771
 14008  0008' 2800'              	goto	u4770
 14009  0009'                    u4771:	
 14010  0009' 2800'              	goto	l7360
 14011  000A'                    u4770:	
 14012  000A'                    l7362:	
 14013                           
 14014                           ;uartusr.c: 134:    if(EUSART_is_tx_ready())
 14015  000A' 3180' 2000' 3180'  	fcall	_EUSART_is_tx_ready
 14016  000D' 3A00               	xorlw	0
 14017  000E' 1903               	skipnz
 14018  000F' 2800'              	goto	u4781
 14019  0010' 2800'              	goto	u4780
 14020  0011'                    u4781:	
 14021  0011' 2800'              	goto	l1823
 14022  0012'                    u4780:	
 14023  0012'                    l7364:	
 14024                           
 14025                           ;uartusr.c: 135:     {;uartusr.c: 137:         EUSART_Write(rxData);
 14026  0012' 0020               	movlb	0	; select bank0
 14027  0013' 0803'              	movf	write_UART@rxData,w
 14028  0014' 3180' 2000' 3180'  	fcall	_EUSART_Write
 14029  0017'                    l1823:	
 14030  0017' 0008               	return
 14031  0018'                    __end_of_write_UART:	
 14032                           
 14033                           	psect	text13
 14034  0000'                    __ptext13:	
 14035 ;; *************** function _read_UART *****************
 14036 ;; Defined at:
 14037 ;;		line 99 in file "uartusr.c"
 14038 ;; Parameters:    Size  Location     Type
 14039 ;;		None
 14040 ;; Auto vars:     Size  Location     Type
 14041 ;;		None
 14042 ;; Return value:  Size  Location     Type
 14043 ;;                  1    wreg      unsigned char 
 14044 ;; Registers used:
 14045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14046 ;; Tracked objects:
 14047 ;;		On entry : 0/0
 14048 ;;		On exit  : 0/0
 14049 ;;		Unchanged: 0/0
 14050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14055 ;;Total ram usage:        0 bytes
 14056 ;; Hardware stack levels used:    1
 14057 ;; Hardware stack levels required when called:    7
 14058 ;; This function calls:
 14059 ;;		_EUSART_Read
 14060 ;;		_EUSART_is_rx_ready
 14061 ;; This function is called by:
 14062 ;;		_read_str_UART
 14063 ;; This function uses a non-reentrant model
 14064 ;;
 14065                           
 14066                           
 14067                           ;psect for function _read_UART
 14068  0000'                    _read_UART:	
 14069  0000'                    l7654:	
 14070                           ;incstack = 0
 14071                           ; Regs used in _read_UART: [allreg]
 14072                           
 14073                           
 14074                           ;uartusr.c: 101:     while(!EUSART_is_rx_ready()){
 14075  0000' 2800'              	goto	l7658
 14076  0001'                    l7656:	
 14077                           
 14078                           ;uartusr.c: 102:                _delay((unsigned long)((1)*(1000000/4000.0)));
 14079  0001' 3053               	movlw	83
 14080  0002'                    u5947:	
 14081  0002' 0B89               	decfsz	9,f
 14082  0003' 2800'              	goto	u5947
 14083  0004' 0000               	nop
 14084  0005'                    l7658:	
 14085                           
 14086                           ;uartusr.c: 101:     while(!EUSART_is_rx_ready()){
 14087  0005' 3180' 2000' 3180'  	fcall	_EUSART_is_rx_ready
 14088  0008' 3A00               	xorlw	0
 14089  0009' 1903               	skipnz
 14090  000A' 2800'              	goto	u5041
 14091  000B' 2800'              	goto	u5040
 14092  000C'                    u5041:	
 14093  000C' 2800'              	goto	l7656
 14094  000D'                    u5040:	
 14095  000D'                    l7660:	
 14096                           
 14097                           ;uartusr.c: 105:    return EUSART_Read();
 14098  000D' 3180' 2000' 3180'  	fcall	_EUSART_Read
 14099  0010'                    l1802:	
 14100  0010' 0008               	return
 14101  0011'                    __end_of_read_UART:	
 14102                           
 14103                           	psect	text14
 14104  0000'                    __ptext14:	
 14105 ;; *************** function _memset *****************
 14106 ;; Defined at:
 14107 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\memset.c"
 14108 ;; Parameters:    Size  Location     Type
 14109 ;;  dest            1    wreg     PTR void 
 14110 ;;		 -> str_rc(16), 
 14111 ;;  c               2    3[BANK0 ] int 
 14112 ;;  n               2    5[BANK0 ] unsigned int 
 14113 ;; Auto vars:     Size  Location     Type
 14114 ;;  dest            1    9[BANK0 ] PTR void 
 14115 ;;		 -> str_rc(16), 
 14116 ;;  k               2   10[BANK0 ] unsigned int 
 14117 ;;  s               1   12[BANK0 ] PTR unsigned char 
 14118 ;;		 -> str_rc(16), 
 14119 ;; Return value:  Size  Location     Type
 14120 ;;                  1    wreg      PTR void 
 14121 ;; Registers used:
 14122 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14123 ;; Tracked objects:
 14124 ;;		On entry : 0/0
 14125 ;;		On exit  : 0/0
 14126 ;;		Unchanged: 0/0
 14127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14128 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14129 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14130 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14131 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14132 ;;Total ram usage:       10 bytes
 14133 ;; Hardware stack levels used:    1
 14134 ;; Hardware stack levels required when called:    6
 14135 ;; This function calls:
 14136 ;;		Nothing
 14137 ;; This function is called by:
 14138 ;;		_read_str_UART
 14139 ;; This function uses a non-reentrant model
 14140 ;;
 14141                           
 14142                           
 14143                           ;psect for function _memset
 14144  0000'                    _memset:	
 14145                           
 14146                           ;incstack = 0
 14147                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
 14148                           ;memset@dest stored from wreg
 14149  0000' 0020               	movlb	0	; select bank0
 14150  0001' 0089'              	movwf	memset@dest
 14151  0002'                    l7608:	
 14152  0002' 0809'              	movf	memset@dest,w
 14153  0003' 0087'              	movwf	??_memset
 14154  0004' 0807'              	movf	??_memset,w
 14155  0005' 008C'              	movwf	memset@s
 14156  0006'                    l7610:	
 14157  0006' 0805'              	movf	memset@n,w
 14158  0007' 0406'              	iorwf	memset@n+1,w
 14159  0008' 1D03               	btfss	3,2
 14160  0009' 2800'              	goto	u4991
 14161  000A' 2800'              	goto	u4990
 14162  000B'                    u4991:	
 14163  000B' 2800'              	goto	l7614
 14164  000C'                    u4990:	
 14165  000C' 2800'              	goto	l2429
 14166  000D'                    l7614:	
 14167  000D' 0803'              	movf	memset@c,w
 14168  000E' 0087'              	movwf	??_memset
 14169  000F' 080C'              	movf	memset@s,w
 14170  0010' 0086               	movwf	6
 14171  0011' 0187               	clrf	7
 14172  0012' 0807'              	movf	??_memset,w
 14173  0013' 0081               	movwf	1
 14174  0014'                    l7616:	
 14175  0014' 0803'              	movf	memset@c,w
 14176  0015' 0087'              	movwf	??_memset
 14177  0016' 0805'              	movf	memset@n,w
 14178  0017' 070C'              	addwf	memset@s,w
 14179  0018' 0088'              	movwf	??_memset+1
 14180  0019' 0808'              	movf	??_memset+1,w
 14181  001A' 3EFF               	addlw	255
 14182  001B' 0086               	movwf	6
 14183  001C' 0187               	clrf	7
 14184  001D' 0807'              	movf	??_memset,w
 14185  001E' 0081               	movwf	1
 14186  001F'                    l7618:	
 14187  001F' 3000               	movlw	0
 14188  0020' 0206'              	subwf	memset@n+1,w
 14189  0021' 3003               	movlw	3
 14190  0022' 1903               	skipnz
 14191  0023' 0205'              	subwf	memset@n,w
 14192  0024' 1803               	skipnc
 14193  0025' 2800'              	goto	u5001
 14194  0026' 2800'              	goto	u5000
 14195  0027'                    u5001:	
 14196  0027' 2800'              	goto	l7622
 14197  0028'                    u5000:	
 14198  0028' 2800'              	goto	l2429
 14199  0029'                    l7622:	
 14200  0029' 0803'              	movf	memset@c,w
 14201  002A' 0087'              	movwf	??_memset
 14202  002B' 0A0C'              	incf	memset@s,w
 14203  002C' 0086               	movwf	6
 14204  002D' 0187               	clrf	7
 14205  002E' 0807'              	movf	??_memset,w
 14206  002F' 0081               	movwf	1
 14207  0030'                    l7624:	
 14208  0030' 0803'              	movf	memset@c,w
 14209  0031' 0087'              	movwf	??_memset
 14210  0032' 080C'              	movf	memset@s,w
 14211  0033' 3E02               	addlw	2
 14212  0034' 0086               	movwf	6
 14213  0035' 0187               	clrf	7
 14214  0036' 0807'              	movf	??_memset,w
 14215  0037' 0081               	movwf	1
 14216  0038'                    l7626:	
 14217  0038' 0803'              	movf	memset@c,w
 14218  0039' 0087'              	movwf	??_memset
 14219  003A' 0805'              	movf	memset@n,w
 14220  003B' 070C'              	addwf	memset@s,w
 14221  003C' 0088'              	movwf	??_memset+1
 14222  003D' 0808'              	movf	??_memset+1,w
 14223  003E' 3EFE               	addlw	254
 14224  003F' 0086               	movwf	6
 14225  0040' 0187               	clrf	7
 14226  0041' 0807'              	movf	??_memset,w
 14227  0042' 0081               	movwf	1
 14228  0043'                    l7628:	
 14229  0043' 0803'              	movf	memset@c,w
 14230  0044' 0087'              	movwf	??_memset
 14231  0045' 0805'              	movf	memset@n,w
 14232  0046' 070C'              	addwf	memset@s,w
 14233  0047' 0088'              	movwf	??_memset+1
 14234  0048' 0808'              	movf	??_memset+1,w
 14235  0049' 3EFD               	addlw	253
 14236  004A' 0086               	movwf	6
 14237  004B' 0187               	clrf	7
 14238  004C' 0807'              	movf	??_memset,w
 14239  004D' 0081               	movwf	1
 14240  004E'                    l7630:	
 14241  004E' 3000               	movlw	0
 14242  004F' 0206'              	subwf	memset@n+1,w
 14243  0050' 3007               	movlw	7
 14244  0051' 1903               	skipnz
 14245  0052' 0205'              	subwf	memset@n,w
 14246  0053' 1803               	skipnc
 14247  0054' 2800'              	goto	u5011
 14248  0055' 2800'              	goto	u5010
 14249  0056'                    u5011:	
 14250  0056' 2800'              	goto	l7634
 14251  0057'                    u5010:	
 14252  0057' 2800'              	goto	l2429
 14253  0058'                    l7634:	
 14254  0058' 0803'              	movf	memset@c,w
 14255  0059' 0087'              	movwf	??_memset
 14256  005A' 080C'              	movf	memset@s,w
 14257  005B' 3E03               	addlw	3
 14258  005C' 0086               	movwf	6
 14259  005D' 0187               	clrf	7
 14260  005E' 0807'              	movf	??_memset,w
 14261  005F' 0081               	movwf	1
 14262  0060' 0803'              	movf	memset@c,w
 14263  0061' 0087'              	movwf	??_memset
 14264  0062' 0805'              	movf	memset@n,w
 14265  0063' 070C'              	addwf	memset@s,w
 14266  0064' 0088'              	movwf	??_memset+1
 14267  0065' 0808'              	movf	??_memset+1,w
 14268  0066' 3EFC               	addlw	252
 14269  0067' 0086               	movwf	6
 14270  0068' 0187               	clrf	7
 14271  0069' 0807'              	movf	??_memset,w
 14272  006A' 0081               	movwf	1
 14273  006B'                    l7636:	
 14274  006B' 3000               	movlw	0
 14275  006C' 0206'              	subwf	memset@n+1,w
 14276  006D' 3009               	movlw	9
 14277  006E' 1903               	skipnz
 14278  006F' 0205'              	subwf	memset@n,w
 14279  0070' 1803               	skipnc
 14280  0071' 2800'              	goto	u5021
 14281  0072' 2800'              	goto	u5020
 14282  0073'                    u5021:	
 14283  0073' 2800'              	goto	l7640
 14284  0074'                    u5020:	
 14285  0074' 2800'              	goto	l2429
 14286  0075'                    l7640:	
 14287  0075' 090C'              	comf	memset@s,w
 14288  0076' 0087'              	movwf	??_memset
 14289  0077' 090D'              	comf	memset@s+1,w
 14290  0078' 0088'              	movwf	??_memset+1
 14291  0079' 0A87'              	incf	??_memset,f
 14292  007A' 1903               	skipnz
 14293  007B' 0A88'              	incf	??_memset+1,f
 14294  007C' 3003               	movlw	3
 14295  007D' 0507'              	andwf	??_memset,w
 14296  007E' 008A'              	movwf	memset@k
 14297  007F' 3000               	movlw	0
 14298  0080' 0508'              	andwf	??_memset+1,w
 14299  0081' 008B'              	movwf	memset@k+1
 14300  0082' 080A'              	movf	memset@k,w
 14301  0083' 0087'              	movwf	??_memset
 14302  0084' 0807'              	movf	??_memset,w
 14303  0085' 078C'              	addwf	memset@s,f
 14304  0086'                    l7642:	
 14305  0086' 080A'              	movf	memset@k,w
 14306  0087' 0285'              	subwf	memset@n,f
 14307  0088' 080B'              	movf	memset@k+1,w
 14308  0089' 3B86'              	subwfb	memset@n+1,f
 14309  008A'                    l7644:	
 14310  008A' 30FC               	movlw	252
 14311  008B' 0585'              	andwf	memset@n,f
 14312  008C' 30FF               	movlw	255
 14313  008D' 0586'              	andwf	memset@n+1,f
 14314  008E' 2800'              	goto	l7652
 14315  008F'                    l7646:	
 14316  008F' 0803'              	movf	memset@c,w
 14317  0090' 0087'              	movwf	??_memset
 14318  0091' 080C'              	movf	memset@s,w
 14319  0092' 0086               	movwf	6
 14320  0093' 0187               	clrf	7
 14321  0094' 0807'              	movf	??_memset,w
 14322  0095' 0081               	movwf	1
 14323  0096'                    l7648:	
 14324  0096' 3001               	movlw	1
 14325  0097' 0285'              	subwf	memset@n,f
 14326  0098' 3000               	movlw	0
 14327  0099' 3B86'              	subwfb	memset@n+1,f
 14328  009A'                    l7650:	
 14329  009A' 3001               	movlw	1
 14330  009B' 0087'              	movwf	??_memset
 14331  009C' 0807'              	movf	??_memset,w
 14332  009D' 078C'              	addwf	memset@s,f
 14333  009E'                    l7652:	
 14334  009E' 0805'              	movf	memset@n,w
 14335  009F' 0406'              	iorwf	memset@n+1,w
 14336  00A0' 1D03               	btfss	3,2
 14337  00A1' 2800'              	goto	u5031
 14338  00A2' 2800'              	goto	u5030
 14339  00A3'                    u5031:	
 14340  00A3' 2800'              	goto	l7646
 14341  00A4'                    u5030:	
 14342  00A4'                    l2429:	
 14343  00A4' 0008               	return
 14344  00A5'                    __end_of_memset:	
 14345                           
 14346                           	psect	text15
 14347  0000'                    __ptext15:	
 14348 ;; *************** function _dump_UART_FIFO *****************
 14349 ;; Defined at:
 14350 ;;		line 111 in file "uartusr.c"
 14351 ;; Parameters:    Size  Location     Type
 14352 ;;		None
 14353 ;; Auto vars:     Size  Location     Type
 14354 ;;  dump            1    3[BANK0 ] unsigned char 
 14355 ;; Return value:  Size  Location     Type
 14356 ;;                  1    wreg      void 
 14357 ;; Registers used:
 14358 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14359 ;; Tracked objects:
 14360 ;;		On entry : 0/0
 14361 ;;		On exit  : 0/0
 14362 ;;		Unchanged: 0/0
 14363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14365 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14367 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14368 ;;Total ram usage:        1 bytes
 14369 ;; Hardware stack levels used:    1
 14370 ;; Hardware stack levels required when called:    7
 14371 ;; This function calls:
 14372 ;;		_EUSART_Read
 14373 ;;		_EUSART_is_rx_ready
 14374 ;; This function is called by:
 14375 ;;		_read_str_UART
 14376 ;; This function uses a non-reentrant model
 14377 ;;
 14378                           
 14379                           
 14380                           ;psect for function _dump_UART_FIFO
 14381  0000'                    _dump_UART_FIFO:	
 14382  0000'                    l7664:	
 14383                           ;incstack = 0
 14384                           ; Regs used in _dump_UART_FIFO: [allreg]
 14385                           
 14386                           
 14387                           ;uartusr.c: 112:     uint8_t dump;;uartusr.c: 113:     if(EUSART_is_rx_ready() && (dump 
      +                          != 0x3A || dump != 0x3F )) dump = EUSART_Read();
 14388  0000' 3180' 2000' 3180'  	fcall	_EUSART_is_rx_ready
 14389  0003' 3A00               	xorlw	0
 14390  0004' 1903               	skipnz
 14391  0005' 2800'              	goto	u5051
 14392  0006' 2800'              	goto	u5050
 14393  0007'                    u5051:	
 14394  0007' 2800'              	goto	l1808
 14395  0008'                    u5050:	
 14396  0008'                    l7666:	
 14397  0008' 303A               	movlw	58
 14398  0009' 0020               	movlb	0	; select bank0
 14399  000A' 0603'              	xorwf	dump_UART_FIFO@dump,w
 14400  000B' 1D03               	btfss	3,2
 14401  000C' 2800'              	goto	u5061
 14402  000D' 2800'              	goto	u5060
 14403  000E'                    u5061:	
 14404  000E' 2800'              	goto	l7670
 14405  000F'                    u5060:	
 14406  000F'                    l7668:	
 14407  000F' 303F               	movlw	63
 14408  0010' 0603'              	xorwf	dump_UART_FIFO@dump,w
 14409  0011' 1903               	btfsc	3,2
 14410  0012' 2800'              	goto	u5071
 14411  0013' 2800'              	goto	u5070
 14412  0014'                    u5071:	
 14413  0014' 2800'              	goto	l1808
 14414  0015'                    u5070:	
 14415  0015'                    l7670:	
 14416  0015' 3180' 2000' 3180'  	fcall	_EUSART_Read
 14417  0018'                    l1808:	
 14418  0018' 0008               	return
 14419  0019'                    __end_of_dump_UART_FIFO:	
 14420                           
 14421                           	psect	text16
 14422  0000'                    __ptext16:	
 14423 ;; *************** function _read_ring *****************
 14424 ;; Defined at:
 14425 ;;		line 49 in file "eeprom_rw.c"
 14426 ;; Parameters:    Size  Location     Type
 14427 ;;  nreg_pt         1    wreg     unsigned char 
 14428 ;;  nreg            1    7[BANK0 ] unsigned char 
 14429 ;;  nreg_init       1    8[BANK0 ] unsigned char 
 14430 ;;  index           1    9[BANK0 ] unsigned char 
 14431 ;;  subindex        1   10[BANK0 ] unsigned char 
 14432 ;; Auto vars:     Size  Location     Type
 14433 ;;  nreg_pt         1   14[BANK0 ] unsigned char 
 14434 ;;  absindex        1   15[BANK0 ] unsigned char 
 14435 ;;  i               1   13[BANK0 ] unsigned char 
 14436 ;; Return value:  Size  Location     Type
 14437 ;;                  1    wreg      unsigned char 
 14438 ;; Registers used:
 14439 ;;		wreg, status,2, status,0, pclath, cstack
 14440 ;; Tracked objects:
 14441 ;;		On entry : 0/0
 14442 ;;		On exit  : 0/0
 14443 ;;		Unchanged: 0/0
 14444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14445 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14446 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14447 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14448 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14449 ;;Total ram usage:        9 bytes
 14450 ;; Hardware stack levels used:    1
 14451 ;; Hardware stack levels required when called:    7
 14452 ;; This function calls:
 14453 ;;		_DATAEE_ReadByte
 14454 ;;		___bmul
 14455 ;; This function is called by:
 14456 ;;		_main
 14457 ;; This function uses a non-reentrant model
 14458 ;;
 14459                           
 14460                           
 14461                           ;psect for function _read_ring
 14462  0000'                    _read_ring:	
 14463                           
 14464                           ;incstack = 0
 14465                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
 14466                           ;read_ring@nreg_pt stored from wreg
 14467  0000' 0020               	movlb	0	; select bank0
 14468  0001' 008E'              	movwf	read_ring@nreg_pt
 14469  0002'                    l7858:	
 14470  0002'                    l7860:	
 14471                           
 14472                           ;eeprom_rw.c: 54:     if(index <= nreg && nreg_init) {
 14473  0002' 0809'              	movf	read_ring@index,w
 14474  0003' 0207'              	subwf	read_ring@nreg,w
 14475  0004' 1C03               	skipc
 14476  0005' 2800'              	goto	u5421
 14477  0006' 2800'              	goto	u5420
 14478  0007'                    u5421:	
 14479  0007' 2800'              	goto	l7872
 14480  0008'                    u5420:	
 14481  0008'                    l7862:	
 14482  0008' 0808'              	movf	read_ring@nreg_init,w
 14483  0009' 1903               	btfsc	3,2
 14484  000A' 2800'              	goto	u5431
 14485  000B' 2800'              	goto	u5430
 14486  000C'                    u5431:	
 14487  000C' 2800'              	goto	l7872
 14488  000D'                    u5430:	
 14489  000D'                    l7864:	
 14490                           
 14491                           ;eeprom_rw.c: 55:         absindex = 5 * index + subindex;
 14492  000D' 3005               	movlw	5
 14493  000E' 008B'              	movwf	??_read_ring
 14494  000F' 080B'              	movf	??_read_ring,w
 14495  0010' 0083'              	movwf	___bmul@multiplicand
 14496  0011' 0809'              	movf	read_ring@index,w
 14497  0012' 3180' 2000' 3180'  	fcall	___bmul
 14498  0015' 0020               	movlb	0	; select bank0
 14499  0016' 070A'              	addwf	read_ring@subindex,w
 14500  0017' 008C'              	movwf	??_read_ring+1
 14501  0018' 080C'              	movf	??_read_ring+1,w
 14502  0019' 008F'              	movwf	read_ring@absindex
 14503  001A'                    l7866:	
 14504                           
 14505                           ;eeprom_rw.c: 56:         if(absindex <= nreg_pt)
 14506  001A' 080F'              	movf	read_ring@absindex,w
 14507  001B' 020E'              	subwf	read_ring@nreg_pt,w
 14508  001C' 1C03               	skipc
 14509  001D' 2800'              	goto	u5441
 14510  001E' 2800'              	goto	u5440
 14511  001F'                    u5441:	
 14512  001F' 2800'              	goto	l7870
 14513  0020'                    u5440:	
 14514  0020'                    l7868:	
 14515                           
 14516                           ;eeprom_rw.c: 57:             i = nreg_pt - 5 + absindex;
 14517  0020' 080E'              	movf	read_ring@nreg_pt,w
 14518  0021' 070F'              	addwf	read_ring@absindex,w
 14519  0022' 3EFB               	addlw	251
 14520  0023' 008B'              	movwf	??_read_ring
 14521  0024' 080B'              	movf	??_read_ring,w
 14522  0025' 008D'              	movwf	read_ring@i
 14523  0026' 2800'              	goto	l7876
 14524  0027'                    l7870:	
 14525                           
 14526                           ;eeprom_rw.c: 59:             i = nreg - (nreg_pt - 5 + absindex);
 14527  0027' 030E'              	decf	read_ring@nreg_pt,w
 14528  0028' 3AFF               	xorlw	255
 14529  0029' 008B'              	movwf	??_read_ring
 14530  002A' 080F'              	movf	read_ring@absindex,w
 14531  002B' 020B'              	subwf	??_read_ring,w
 14532  002C' 0707'              	addwf	read_ring@nreg,w
 14533  002D' 3E05               	addlw	5
 14534  002E' 008C'              	movwf	??_read_ring+1
 14535  002F' 080C'              	movf	??_read_ring+1,w
 14536  0030' 008D'              	movwf	read_ring@i
 14537  0031' 2800'              	goto	l7876
 14538  0032'                    l7872:	
 14539                           
 14540                           ;eeprom_rw.c: 62:         return 0;
 14541  0032' 3000               	movlw	0
 14542  0033' 2800'              	goto	l1647
 14543  0034'                    l7876:	
 14544                           
 14545                           ;eeprom_rw.c: 64:     return DATAEE_ReadByte(0xF000 + i);
 14546  0034' 080D'              	movf	read_ring@i,w
 14547  0035' 3E00               	addlw	0
 14548  0036' 0083'              	movwf	DATAEE_ReadByte@bAdd
 14549  0037' 30F0               	movlw	240
 14550  0038' 1803               	skipnc
 14551  0039' 30F1               	movlw	241
 14552  003A' 0084'              	movwf	DATAEE_ReadByte@bAdd+1
 14553  003B' 3180' 2000' 3180'  	fcall	_DATAEE_ReadByte
 14554  003E'                    l1647:	
 14555  003E' 0008               	return
 14556  003F'                    __end_of_read_ring:	
 14557                           
 14558                           	psect	text17
 14559  0000'                    __ptext17:	
 14560 ;; *************** function _DATAEE_ReadByte *****************
 14561 ;; Defined at:
 14562 ;;		line 202 in file "mcc_generated_files/memory.c"
 14563 ;; Parameters:    Size  Location     Type
 14564 ;;  bAdd            2    3[BANK0 ] unsigned short 
 14565 ;; Auto vars:     Size  Location     Type
 14566 ;;		None
 14567 ;; Return value:  Size  Location     Type
 14568 ;;                  1    wreg      unsigned char 
 14569 ;; Registers used:
 14570 ;;		wreg, status,2
 14571 ;; Tracked objects:
 14572 ;;		On entry : 0/0
 14573 ;;		On exit  : 0/0
 14574 ;;		Unchanged: 0/0
 14575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14576 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14579 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14580 ;;Total ram usage:        2 bytes
 14581 ;; Hardware stack levels used:    1
 14582 ;; Hardware stack levels required when called:    6
 14583 ;; This function calls:
 14584 ;;		Nothing
 14585 ;; This function is called by:
 14586 ;;		_recoverData
 14587 ;;		_read_ring
 14588 ;;		_cksum
 14589 ;; This function uses a non-reentrant model
 14590 ;;
 14591                           
 14592                           
 14593                           ;psect for function _DATAEE_ReadByte
 14594  0000'                    _DATAEE_ReadByte:	
 14595  0000'                    l7062:	
 14596                           ;incstack = 0
 14597                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 14598                           
 14599                           
 14600                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 14601  0000' 0020               	movlb	0	; select bank0
 14602  0001' 0804'              	movf	DATAEE_ReadByte@bAdd+1,w
 14603  0002' 0030               	movlb	16	; select bank16
 14604  0003' 009B               	movwf	27	;volatile
 14605  0004'                    l7064:	
 14606                           
 14607                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 14608  0004' 0020               	movlb	0	; select bank0
 14609  0005' 0803'              	movf	DATAEE_ReadByte@bAdd,w
 14610  0006' 0030               	movlb	16	; select bank16
 14611  0007' 009A               	movwf	26	;volatile
 14612  0008'                    l7066:	
 14613                           
 14614                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 14615  0008' 171E               	bsf	30,6	;volsfr
 14616  0009'                    l7068:	
 14617                           
 14618                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 14619  0009' 141E               	bsf	30,0	;volsfr
 14620  000A'                    l7070:	
 14621                           
 14622                           ;mcc_generated_files/memory.c: 208:     __nop();
 14623  000A' 0000               	nop
 14624  000B'                    l7072:	
 14625                           
 14626                           ;mcc_generated_files/memory.c: 209:     __nop();
 14627  000B' 0000               	nop
 14628  000C'                    l7074:	
 14629                           
 14630                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 14631  000C' 0030               	movlb	16	; select bank16
 14632  000D' 081C               	movf	28,w	;volatile
 14633  000E'                    l1025:	
 14634  000E' 0008               	return
 14635  000F'                    __end_of_DATAEE_ReadByte:	
 14636                           
 14637                           	psect	text18
 14638  0000'                    __ptext18:	
 14639 ;; *************** function _push_ring *****************
 14640 ;; Defined at:
 14641 ;;		line 40 in file "eeprom_rw.c"
 14642 ;; Parameters:    Size  Location     Type
 14643 ;;  nreg_pt         1    wreg     PTR unsigned char 
 14644 ;;		 -> nreg_pt(1), 
 14645 ;;  nreg            1   13[BANK0 ] unsigned char 
 14646 ;;  nreg_init       1   14[BANK0 ] PTR unsigned char 
 14647 ;;		 -> nreg_init(1), 
 14648 ;;  ring_byte       1   15[BANK0 ] PTR unsigned char 
 14649 ;;		 -> ring_byte(5), 
 14650 ;; Auto vars:     Size  Location     Type
 14651 ;;  nreg_pt         1   19[BANK0 ] PTR unsigned char 
 14652 ;;		 -> nreg_pt(1), 
 14653 ;;  i               1   18[BANK0 ] unsigned char 
 14654 ;; Return value:  Size  Location     Type
 14655 ;;                  1    wreg      void 
 14656 ;; Registers used:
 14657 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14658 ;; Tracked objects:
 14659 ;;		On entry : 0/0
 14660 ;;		On exit  : 0/0
 14661 ;;		Unchanged: 0/0
 14662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14663 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14664 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14665 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14666 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14667 ;;Total ram usage:        7 bytes
 14668 ;; Hardware stack levels used:    1
 14669 ;; Hardware stack levels required when called:    7
 14670 ;; This function calls:
 14671 ;;		_DATAEE_WriteByte
 14672 ;; This function is called by:
 14673 ;;		_main
 14674 ;; This function uses a non-reentrant model
 14675 ;;
 14676                           
 14677                           
 14678                           ;psect for function _push_ring
 14679  0000'                    _push_ring:	
 14680                           
 14681                           ;incstack = 0
 14682                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14683                           ;push_ring@nreg_pt stored from wreg
 14684  0000' 0020               	movlb	0	; select bank0
 14685  0001' 0093'              	movwf	push_ring@nreg_pt
 14686  0002'                    l7892:	
 14687                           
 14688                           ;eeprom_rw.c: 40: void push_ring(unsigned char* nreg_pt, unsigned char nreg, unsigned ch
      +                          ar* nreg_init, unsigned char* ring_byte);eeprom_rw.c: 41: { if(!(*nreg_init)) (*nreg_ini
      +                          t) = 1;
 14689  0002' 080E'              	movf	push_ring@nreg_init,w
 14690  0003' 0086               	movwf	6
 14691  0004' 0187               	clrf	7
 14692  0005' 0801               	movf	1,w
 14693  0006' 1D03               	btfss	3,2
 14694  0007' 2800'              	goto	u5451
 14695  0008' 2800'              	goto	u5450
 14696  0009'                    u5451:	
 14697  0009' 2800'              	goto	l7896
 14698  000A'                    u5450:	
 14699  000A'                    l7894:	
 14700  000A' 080E'              	movf	push_ring@nreg_init,w
 14701  000B' 0086               	movwf	6
 14702  000C' 0187               	clrf	7
 14703  000D' 0181               	clrf	1
 14704  000E' 0A81               	incf	1,f
 14705  000F'                    l7896:	
 14706                           
 14707                           ;eeprom_rw.c: 42:     for(unsigned char i = 0; i < 5; i++) {
 14708  000F' 0192'              	clrf	push_ring@i
 14709  0010'                    l7902:	
 14710                           
 14711                           ;eeprom_rw.c: 43:         if((*nreg_pt) >= nreg) (*nreg_pt) = 0;
 14712  0010' 0813'              	movf	push_ring@nreg_pt,w
 14713  0011' 0086               	movwf	6
 14714  0012' 0187               	clrf	7
 14715  0013' 080D'              	movf	push_ring@nreg,w
 14716  0014' 0201               	subwf	1,w
 14717  0015' 1C03               	skipc
 14718  0016' 2800'              	goto	u5461
 14719  0017' 2800'              	goto	u5460
 14720  0018'                    u5461:	
 14721  0018' 2800'              	goto	l7906
 14722  0019'                    u5460:	
 14723  0019'                    l7904:	
 14724  0019' 0813'              	movf	push_ring@nreg_pt,w
 14725  001A' 0086               	movwf	6
 14726  001B' 0187               	clrf	7
 14727  001C' 0181               	clrf	1
 14728  001D'                    l7906:	
 14729                           
 14730                           ;eeprom_rw.c: 44:         DATAEE_WriteByte(0xF000 + (*nreg_pt), ring_byte[i]);
 14731  001D' 0813'              	movf	push_ring@nreg_pt,w
 14732  001E' 0086               	movwf	6
 14733  001F' 0187               	clrf	7
 14734  0020' 0801               	movf	1,w
 14735  0021' 3E00               	addlw	0
 14736  0022' 0089'              	movwf	DATAEE_WriteByte@bAdd
 14737  0023' 30F0               	movlw	240
 14738  0024' 1803               	skipnc
 14739  0025' 30F1               	movlw	241
 14740  0026' 008A'              	movwf	DATAEE_WriteByte@bAdd+1
 14741  0027' 0812'              	movf	push_ring@i,w
 14742  0028' 070F'              	addwf	push_ring@ring_byte,w
 14743  0029' 0090'              	movwf	??_push_ring
 14744  002A' 0810'              	movf	??_push_ring,w
 14745  002B' 0086               	movwf	6
 14746  002C' 0187               	clrf	7
 14747  002D' 0801               	movf	1,w
 14748  002E' 0091'              	movwf	??_push_ring+1
 14749  002F' 0811'              	movf	??_push_ring+1,w
 14750  0030' 008B'              	movwf	DATAEE_WriteByte@bData
 14751  0031' 3180' 2000' 3180'  	fcall	_DATAEE_WriteByte
 14752  0034'                    l7908:	
 14753                           
 14754                           ;eeprom_rw.c: 45:         (*nreg_pt)++;
 14755  0034' 3001               	movlw	1
 14756  0035' 0020               	movlb	0	; select bank0
 14757  0036' 0090'              	movwf	??_push_ring
 14758  0037' 0813'              	movf	push_ring@nreg_pt,w
 14759  0038' 0086               	movwf	6
 14760  0039' 0187               	clrf	7
 14761  003A' 0810'              	movf	??_push_ring,w
 14762  003B' 0781               	addwf	1,f
 14763  003C'                    l7910:	
 14764                           
 14765                           ;eeprom_rw.c: 46:     }
 14766  003C' 3001               	movlw	1
 14767  003D' 0090'              	movwf	??_push_ring
 14768  003E' 0810'              	movf	??_push_ring,w
 14769  003F' 0792'              	addwf	push_ring@i,f
 14770  0040'                    l7912:	
 14771  0040' 3005               	movlw	5
 14772  0041' 0212'              	subwf	push_ring@i,w
 14773  0042' 1C03               	skipc
 14774  0043' 2800'              	goto	u5471
 14775  0044' 2800'              	goto	u5470
 14776  0045'                    u5471:	
 14777  0045' 2800'              	goto	l7902
 14778  0046'                    u5470:	
 14779  0046'                    l1640:	
 14780  0046' 0008               	return
 14781  0047'                    __end_of_push_ring:	
 14782                           
 14783                           	psect	text19
 14784  0000'                    __ptext19:	
 14785 ;; *************** function _DATAEE_WriteByte *****************
 14786 ;; Defined at:
 14787 ;;		line 180 in file "mcc_generated_files/memory.c"
 14788 ;; Parameters:    Size  Location     Type
 14789 ;;  bAdd            2    9[BANK0 ] unsigned short 
 14790 ;;  bData           1   11[BANK0 ] unsigned char 
 14791 ;; Auto vars:     Size  Location     Type
 14792 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 14793 ;; Return value:  Size  Location     Type
 14794 ;;                  1    wreg      void 
 14795 ;; Registers used:
 14796 ;;		wreg, status,2, status,0
 14797 ;; Tracked objects:
 14798 ;;		On entry : 0/0
 14799 ;;		On exit  : 0/0
 14800 ;;		Unchanged: 0/0
 14801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14802 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14803 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14805 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14806 ;;Total ram usage:        4 bytes
 14807 ;; Hardware stack levels used:    1
 14808 ;; Hardware stack levels required when called:    6
 14809 ;; This function calls:
 14810 ;;		Nothing
 14811 ;; This function is called by:
 14812 ;;		_main
 14813 ;;		_save_recovery_params
 14814 ;;		_recoverData
 14815 ;;		_push_ring
 14816 ;;		_cksum_w
 14817 ;;		_reset_recv
 14818 ;; This function uses a non-reentrant model
 14819 ;;
 14820                           
 14821                           
 14822                           ;psect for function _DATAEE_WriteByte
 14823  0000'                    _DATAEE_WriteByte:	
 14824  0000'                    l7222:	
 14825                           ;incstack = 0
 14826                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 14827                           
 14828                           
 14829                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 14830  0000' 3000               	movlw	0
 14831  0001' 1B8B               	btfsc	11,7	;volatile
 14832  0002' 3001               	movlw	1
 14833  0003' 0020               	movlb	0	; select bank0
 14834  0004' 008C'              	movwf	DATAEE_WriteByte@GIEBitValue
 14835                           
 14836                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 14837  0005' 080A'              	movf	DATAEE_WriteByte@bAdd+1,w
 14838  0006' 0030               	movlb	16	; select bank16
 14839  0007' 009B               	movwf	27	;volatile
 14840  0008'                    l7224:	
 14841                           
 14842                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 14843  0008' 0020               	movlb	0	; select bank0
 14844  0009' 0809'              	movf	DATAEE_WriteByte@bAdd,w
 14845  000A' 0030               	movlb	16	; select bank16
 14846  000B' 009A               	movwf	26	;volatile
 14847  000C'                    l7226:	
 14848                           
 14849                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 14850  000C' 0020               	movlb	0	; select bank0
 14851  000D' 080B'              	movf	DATAEE_WriteByte@bData,w
 14852  000E' 0030               	movlb	16	; select bank16
 14853  000F' 009C               	movwf	28	;volatile
 14854  0010'                    l7228:	
 14855                           
 14856                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 14857  0010' 171E               	bsf	30,6	;volsfr
 14858  0011'                    l7230:	
 14859                           
 14860                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 14861  0011' 151E               	bsf	30,2	;volsfr
 14862  0012'                    l7232:	
 14863                           
 14864                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 14865  0012' 138B               	bcf	11,7	;volatile
 14866  0013'                    l7234:	
 14867                           
 14868                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 14869  0013' 3055               	movlw	85
 14870  0014' 009F               	movwf	31	;volsfr
 14871  0015'                    l7236:	
 14872                           
 14873                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 14874  0015' 30AA               	movlw	170
 14875  0016' 009F               	movwf	31	;volsfr
 14876  0017'                    l7238:	
 14877                           
 14878                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 14879  0017' 149E               	bsf	30,1	;volsfr
 14880  0018'                    l1019:	
 14881                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 14882                           
 14883                           
 14884                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 14885  0018' 189E               	btfsc	30,1	;volsfr
 14886  0019' 2800'              	goto	u4751
 14887  001A' 2800'              	goto	u4750
 14888  001B'                    u4751:	
 14889  001B' 2800'              	goto	l1019
 14890  001C'                    u4750:	
 14891  001C'                    l1021:	
 14892                           
 14893                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 14894  001C' 111E               	bcf	30,2	;volsfr
 14895  001D'                    l7240:	
 14896                           
 14897                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 14898  001D' 0020               	movlb	0	; select bank0
 14899  001E' 0C0C'              	rrf	DATAEE_WriteByte@GIEBitValue,w
 14900  001F' 1C03               	skipc
 14901  0020' 138B               	bcf	11,7	;volatile
 14902  0021' 1803               	skipnc
 14903  0022' 178B               	bsf	11,7	;volatile
 14904  0023'                    l1022:	
 14905  0023' 0008               	return
 14906  0024'                    __end_of_DATAEE_WriteByte:	
 14907                           
 14908                           	psect	text20
 14909  0000'                    __ptext20:	
 14910 ;; *************** function _i2c1_driver_open *****************
 14911 ;; Defined at:
 14912 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
 14913 ;; Parameters:    Size  Location     Type
 14914 ;;		None
 14915 ;; Auto vars:     Size  Location     Type
 14916 ;;		None
 14917 ;; Return value:  Size  Location     Type
 14918 ;;		None               void
 14919 ;; Registers used:
 14920 ;;		wreg, status,2
 14921 ;; Tracked objects:
 14922 ;;		On entry : 0/0
 14923 ;;		On exit  : 0/0
 14924 ;;		Unchanged: 0/0
 14925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14930 ;;Total ram usage:        0 bytes
 14931 ;; Hardware stack levels used:    1
 14932 ;; Hardware stack levels required when called:    6
 14933 ;; This function calls:
 14934 ;;		Nothing
 14935 ;; This function is called by:
 14936 ;;		_main
 14937 ;;		_i2c_open
 14938 ;;		_I2C_Initialize
 14939 ;; This function uses a non-reentrant model
 14940 ;;
 14941                           
 14942                           
 14943                           ;psect for function _i2c1_driver_open
 14944  0000'                    _i2c1_driver_open:	
 14945  0000'                    l7708:	
 14946                           ;incstack = 0
 14947                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 14948                           
 14949  0000' 0023               	movlb	3	; select bank3
 14950  0001' 1A90               	btfsc	16,5	;volatile
 14951  0002' 2800'              	goto	u5091
 14952  0003' 2800'              	goto	u5090
 14953  0004'                    u5091:	
 14954  0004' 2800'              	goto	l516
 14955  0005'                    u5090:	
 14956  0005'                    l7710:	
 14957  0005' 018F               	clrf	15	;volatile
 14958  0006'                    l7712:	
 14959  0006' 3028               	movlw	40
 14960  0007' 0090               	movwf	16	;volatile
 14961  0008'                    l7714:	
 14962  0008' 0191               	clrf	17	;volatile
 14963  0009' 3003               	movlw	3
 14964  000A' 008D               	movwf	13	;volatile
 14965  000B'                    l516:	
 14966  000B' 0008               	return
 14967  000C'                    __end_of_i2c1_driver_open:	
 14968                           
 14969                           	psect	text21
 14970  0000'                    __ptext21:	
 14971 ;; *************** function _config_routine *****************
 14972 ;; Defined at:
 14973 ;;		line 333 in file "main.c"
 14974 ;; Parameters:    Size  Location     Type
 14975 ;;		None
 14976 ;; Auto vars:     Size  Location     Type
 14977 ;;  select_mode     2   38[BANK0 ] unsigned int 
 14978 ;; Return value:  Size  Location     Type
 14979 ;;                  1    wreg      void 
 14980 ;; Registers used:
 14981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14982 ;; Tracked objects:
 14983 ;;		On entry : 0/0
 14984 ;;		On exit  : 0/0
 14985 ;;		Unchanged: 0/0
 14986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14988 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14989 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14990 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14991 ;;Total ram usage:        3 bytes
 14992 ;; Hardware stack levels used:    1
 14993 ;; Hardware stack levels required when called:   11
 14994 ;; This function calls:
 14995 ;;		_all_LED
 14996 ;;		_checkDebounceSW1
 14997 ;;		_checkDebounceSW2
 14998 ;;		_mod1_LED
 14999 ;;		_mod2_LED
 15000 ;;		_mod3_LED
 15001 ;;		_mod4_LED
 15002 ;;		_mode_select_LED
 15003 ;;		_selectSubfield
 15004 ;; This function is called by:
 15005 ;;		_main
 15006 ;; This function uses a non-reentrant model
 15007 ;;
 15008                           
 15009                           
 15010                           ;psect for function _config_routine
 15011  0000'                    _config_routine:	
 15012  0000'                    l7936:	
 15013                           ;incstack = 0
 15014                           ; Regs used in _config_routine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15015                           
 15016                           
 15017                           ;main.c: 335:     unsigned int select_mode =0;
 15018  0000' 0020               	movlb	0	; select bank0
 15019  0001' 01A6'              	clrf	config_routine@select_mode
 15020  0002' 01A7'              	clrf	config_routine@select_mode+1
 15021  0003'                    l7938:	
 15022                           
 15023                           ;main.c: 336:     last_ms = clkms;
 15024  0003' 0800'              	movf	_clkms,w	;volatile
 15025  0004' 00A5'              	movwf	??_config_routine
 15026  0005' 0825'              	movf	??_config_routine,w
 15027  0006' 008C'              	movwf	_last_ms
 15028  0007'                    l7940:	
 15029                           
 15030                           ;main.c: 337:     last_ms2 = clkms;
 15031  0007' 0800'              	movf	_clkms,w	;volatile
 15032  0008' 00A5'              	movwf	??_config_routine
 15033  0009' 0825'              	movf	??_config_routine,w
 15034  000A' 008B'              	movwf	_last_ms2
 15035  000B'                    l7942:	
 15036                           
 15037                           ;main.c: 340:         if(mode_field_subfield[0] == -1 && select_mode == 0){
 15038  000B' 0A00'              	incf	_mode_field_subfield,w
 15039  000C' 1D03               	skipz
 15040  000D' 2800'              	goto	u5521
 15041  000E' 0A01'              	incf	_mode_field_subfield+1,w
 15042  000F' 1D03               	btfss	3,2
 15043  0010' 2800'              	goto	u5521
 15044  0011' 2800'              	goto	u5520
 15045  0012'                    u5521:	
 15046  0012' 2800'              	goto	l7948
 15047  0013'                    u5520:	
 15048  0013'                    l7944:	
 15049  0013' 0826'              	movf	config_routine@select_mode,w
 15050  0014' 0427'              	iorwf	config_routine@select_mode+1,w
 15051  0015' 1D03               	btfss	3,2
 15052  0016' 2800'              	goto	u5531
 15053  0017' 2800'              	goto	u5530
 15054  0018'                    u5531:	
 15055  0018' 2800'              	goto	l7948
 15056  0019'                    u5530:	
 15057  0019'                    l7946:	
 15058                           
 15059                           ;main.c: 341:             all_LED();
 15060  0019' 3180' 2000' 3180'  	fcall	_all_LED
 15061  001C'                    l7948:	
 15062                           
 15063                           ;main.c: 344:         if(!PORTBbits.RB4){
 15064  001C' 0020               	movlb	0	; select bank0
 15065  001D' 1A0D               	btfsc	13,4	;volatile
 15066  001E' 2800'              	goto	u5541
 15067  001F' 2800'              	goto	u5540
 15068  0020'                    u5541:	
 15069  0020' 2800'              	goto	l1345
 15070  0021'                    u5540:	
 15071  0021'                    l7950:	
 15072                           
 15073                           ;main.c: 345:             if(checkDebounceSW1()){
 15074  0021' 3180' 2000' 3180'  	fcall	_checkDebounceSW1
 15075  0024' 3A00               	xorlw	0
 15076  0025' 1903               	skipnz
 15077  0026' 2800'              	goto	u5551
 15078  0027' 2800'              	goto	u5550
 15079  0028'                    u5551:	
 15080  0028' 2800'              	goto	l1345
 15081  0029'                    u5550:	
 15082  0029'                    l7952:	
 15083                           
 15084                           ;main.c: 347:                 select_mode +=1;
 15085  0029' 3001               	movlw	1
 15086  002A' 0020               	movlb	0	; select bank0
 15087  002B' 07A6'              	addwf	config_routine@select_mode,f
 15088  002C' 3000               	movlw	0
 15089  002D' 3DA7'              	addwfc	config_routine@select_mode+1,f
 15090                           
 15091                           ;main.c: 349:                 switch(select_mode){
 15092  002E' 2800'              	goto	l7966
 15093  002F'                    l7954:	
 15094  002F' 3180' 2000' 3180'  	fcall	_mod1_LED
 15095  0032' 2800'              	goto	l1345
 15096  0033'                    l7956:	
 15097  0033' 3180' 2000' 3180'  	fcall	_mod2_LED
 15098  0036' 2800'              	goto	l1345
 15099  0037'                    l7958:	
 15100  0037' 3180' 2000' 3180'  	fcall	_mod3_LED
 15101  003A' 2800'              	goto	l1345
 15102  003B'                    l7960:	
 15103  003B' 3180' 2000' 3180'  	fcall	_mod4_LED
 15104  003E' 2800'              	goto	l1345
 15105  003F'                    l7962:	
 15106  003F' 01A6'              	clrf	config_routine@select_mode
 15107  0040' 01A7'              	clrf	config_routine@select_mode+1
 15108  0041' 0187'              	clrf	_config_mode	;volatile
 15109  0042' 0186'              	clrf	_alarm	;volatile
 15110                           
 15111                           ;main.c: 355:                     break;
 15112  0043' 2800'              	goto	l1345
 15113  0044'                    l7966:	
 15114                           
 15115                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15116                           ; Switch size 1, requested type "simple"
 15117                           ; Number of cases is 1, Range of values is 0 to 0
 15118                           ; switch strategies available:
 15119                           ; Name         Instructions Cycles
 15120                           ; simple_byte            4     3 (average)
 15121                           ; direct_byte            8     6 (fixed)
 15122                           ; jumptable            260     6 (fixed)
 15123                           ;	Chosen strategy is simple_byte
 15124  0044' 0827'              	movf	config_routine@select_mode+1,w
 15125  0045' 3A00               	xorlw	0	; case 0
 15126  0046' 1903               	skipnz
 15127  0047' 2800'              	goto	l8506
 15128  0048' 2800'              	goto	l7962
 15129  0049'                    l8506:	
 15130                           
 15131                           ; Switch size 1, requested type "simple"
 15132                           ; Number of cases is 4, Range of values is 1 to 4
 15133                           ; switch strategies available:
 15134                           ; Name         Instructions Cycles
 15135                           ; simple_byte           13     7 (average)
 15136                           ; direct_byte           17     9 (fixed)
 15137                           ; jumptable            263     9 (fixed)
 15138                           ;	Chosen strategy is simple_byte
 15139  0049' 0826'              	movf	config_routine@select_mode,w
 15140  004A' 3A01               	xorlw	1	; case 1
 15141  004B' 1903               	skipnz
 15142  004C' 2800'              	goto	l7954
 15143  004D' 3A03               	xorlw	3	; case 2
 15144  004E' 1903               	skipnz
 15145  004F' 2800'              	goto	l7956
 15146  0050' 3A01               	xorlw	1	; case 3
 15147  0051' 1903               	skipnz
 15148  0052' 2800'              	goto	l7958
 15149  0053' 3A07               	xorlw	7	; case 4
 15150  0054' 1903               	skipnz
 15151  0055' 2800'              	goto	l7960
 15152  0056' 2800'              	goto	l7962
 15153  0057'                    l1345:	
 15154                           ;main.c: 359:         }
 15155                           
 15156                           
 15157                           ;main.c: 362:         if(!PORTCbits.RC5){
 15158  0057' 0020               	movlb	0	; select bank0
 15159  0058' 1A8E               	btfsc	14,5	;volatile
 15160  0059' 2800'              	goto	u5561
 15161  005A' 2800'              	goto	u5560
 15162  005B'                    u5561:	
 15163  005B' 2800'              	goto	l7976
 15164  005C'                    u5560:	
 15165  005C'                    l7968:	
 15166                           
 15167                           ;main.c: 363:             if(checkDebounceSW2()){
 15168  005C' 3180' 2000' 3180'  	fcall	_checkDebounceSW2
 15169  005F' 3A00               	xorlw	0
 15170  0060' 1903               	skipnz
 15171  0061' 2800'              	goto	u5571
 15172  0062' 2800'              	goto	u5570
 15173  0063'                    u5571:	
 15174  0063' 2800'              	goto	l7976
 15175  0064'                    u5570:	
 15176  0064'                    l7970:	
 15177                           
 15178                           ;main.c: 364:                 mode_field_subfield[0] = select_mode;
 15179  0064' 0020               	movlb	0	; select bank0
 15180  0065' 0827'              	movf	config_routine@select_mode+1,w
 15181  0066' 0081'              	movwf	_mode_field_subfield+1
 15182  0067' 0826'              	movf	config_routine@select_mode,w
 15183  0068' 0080'              	movwf	_mode_field_subfield
 15184  0069'                    l7972:	
 15185                           
 15186                           ;main.c: 365:                 mode_select_LED();
 15187  0069' 3180' 2000' 3180'  	fcall	_mode_select_LED
 15188  006C'                    l7974:	
 15189                           
 15190                           ;main.c: 366:                 selectSubfield();
 15191  006C' 3180' 2000' 3180'  	fcall	_selectSubfield
 15192  006F'                    l7976:	
 15193                           
 15194                           ;main.c: 370:         _delay((unsigned long)((2)*(1000000/4000.0)));
 15195  006F' 30A6               	movlw	166
 15196  0070'                    u5957:	
 15197  0070' 0B89               	decfsz	9,f
 15198  0071' 2800'              	goto	u5957
 15199  0072' 3200               	nop2
 15200  0073'                    l7978:	
 15201                           
 15202                           ;main.c: 372:     }while(config_mode == 1);
 15203  0073' 0020               	movlb	0	; select bank0
 15204  0074' 0307'              	decf	_config_mode,w	;volatile
 15205  0075' 1903               	btfsc	3,2
 15206  0076' 2800'              	goto	u5581
 15207  0077' 2800'              	goto	u5580
 15208  0078'                    u5581:	
 15209  0078' 2800'              	goto	l7942
 15210  0079'                    u5580:	
 15211  0079'                    l7980:	
 15212                           
 15213                           ;main.c: 374:     mode_field_subfield[0] = -1;
 15214  0079' 30FF               	movlw	255
 15215  007A' 0080'              	movwf	_mode_field_subfield
 15216  007B' 30FF               	movlw	255
 15217  007C' 0081'              	movwf	_mode_field_subfield+1
 15218                           
 15219                           ;main.c: 375:     mode_field_subfield[1] = -1;
 15220  007D' 30FF               	movlw	255
 15221  007E' 0082'              	movwf	_mode_field_subfield+2
 15222  007F' 30FF               	movlw	255
 15223  0080' 0083'              	movwf	_mode_field_subfield+3
 15224  0081'                    l1357:	
 15225  0081' 0008               	return
 15226  0082'                    __end_of_config_routine:	
 15227                           
 15228                           	psect	text22
 15229  0000'                    __ptext22:	
 15230 ;; *************** function _selectSubfield *****************
 15231 ;; Defined at:
 15232 ;;		line 384 in file "main.c"
 15233 ;; Parameters:    Size  Location     Type
 15234 ;;		None
 15235 ;; Auto vars:     Size  Location     Type
 15236 ;;  subfield        2   35[BANK0 ] unsigned int 
 15237 ;; Return value:  Size  Location     Type
 15238 ;;                  1    wreg      void 
 15239 ;; Registers used:
 15240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15241 ;; Tracked objects:
 15242 ;;		On entry : 0/0
 15243 ;;		On exit  : 0/0
 15244 ;;		Unchanged: 0/0
 15245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15247 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15248 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15249 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15250 ;;Total ram usage:        4 bytes
 15251 ;; Hardware stack levels used:    1
 15252 ;; Hardware stack levels required when called:   10
 15253 ;; This function calls:
 15254 ;;		_all_LED
 15255 ;;		_checkDebounceSW1
 15256 ;;		_checkDebounceSW2
 15257 ;;		_getSubfieldInfo
 15258 ;;		_mode_LED
 15259 ;; This function is called by:
 15260 ;;		_config_routine
 15261 ;; This function uses a non-reentrant model
 15262 ;;
 15263                           
 15264                           
 15265                           ;psect for function _selectSubfield
 15266  0000'                    _selectSubfield:	
 15267  0000'                    l7536:	
 15268                           ;incstack = 0
 15269                           ; Regs used in _selectSubfield: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15270                           
 15271                           
 15272                           ;main.c: 385:     unsigned int subfield = 1;
 15273  0000' 3001               	movlw	1
 15274  0001' 0020               	movlb	0	; select bank0
 15275  0002' 00A3'              	movwf	selectSubfield@subfield
 15276  0003' 3000               	movlw	0
 15277  0004' 00A4'              	movwf	selectSubfield@subfield+1
 15278  0005'                    l7538:	
 15279                           
 15280                           ;main.c: 389:         if(!PORTBbits.RB4){
 15281  0005' 1A0D               	btfsc	13,4	;volatile
 15282  0006' 2800'              	goto	u4811
 15283  0007' 2800'              	goto	u4810
 15284  0008'                    u4811:	
 15285  0008' 2800'              	goto	l7544
 15286  0009'                    u4810:	
 15287  0009'                    l7540:	
 15288                           
 15289                           ;main.c: 390:             if(checkDebounceSW1()){
 15290  0009' 3180' 2000' 3180'  	fcall	_checkDebounceSW1
 15291  000C' 3A00               	xorlw	0
 15292  000D' 1903               	skipnz
 15293  000E' 2800'              	goto	u4821
 15294  000F' 2800'              	goto	u4820
 15295  0010'                    u4821:	
 15296  0010' 2800'              	goto	l7544
 15297  0011'                    u4820:	
 15298  0011'                    l7542:	
 15299                           
 15300                           ;main.c: 391:                 subfield +=1;
 15301  0011' 3001               	movlw	1
 15302  0012' 0020               	movlb	0	; select bank0
 15303  0013' 07A3'              	addwf	selectSubfield@subfield,f
 15304  0014' 3000               	movlw	0
 15305  0015' 3DA4'              	addwfc	selectSubfield@subfield+1,f
 15306  0016'                    l7544:	
 15307                           
 15308                           ;main.c: 396:         mode_LED( subfield);
 15309  0016' 0020               	movlb	0	; select bank0
 15310  0017' 0823'              	movf	selectSubfield@subfield,w
 15311  0018' 3180' 2000' 3180'  	fcall	_mode_LED
 15312  001B'                    l7546:	
 15313                           
 15314                           ;main.c: 398:         if(!PORTCbits.RC5){
 15315  001B' 0020               	movlb	0	; select bank0
 15316  001C' 1A8E               	btfsc	14,5	;volatile
 15317  001D' 2800'              	goto	u4831
 15318  001E' 2800'              	goto	u4830
 15319  001F'                    u4831:	
 15320  001F' 2800'              	goto	l7556
 15321  0020'                    u4830:	
 15322  0020'                    l7548:	
 15323                           
 15324                           ;main.c: 399:             if(checkDebounceSW2()){
 15325  0020' 3180' 2000' 3180'  	fcall	_checkDebounceSW2
 15326  0023' 3A00               	xorlw	0
 15327  0024' 1903               	skipnz
 15328  0025' 2800'              	goto	u4841
 15329  0026' 2800'              	goto	u4840
 15330  0027'                    u4841:	
 15331  0027' 2800'              	goto	l7556
 15332  0028'                    u4840:	
 15333  0028'                    l7550:	
 15334                           
 15335                           ;main.c: 400:                 mode_field_subfield[1] = subfield;
 15336  0028' 0020               	movlb	0	; select bank0
 15337  0029' 0824'              	movf	selectSubfield@subfield+1,w
 15338  002A' 0083'              	movwf	_mode_field_subfield+3
 15339  002B' 0823'              	movf	selectSubfield@subfield,w
 15340  002C' 0082'              	movwf	_mode_field_subfield+2
 15341  002D'                    l7552:	
 15342                           
 15343                           ;main.c: 401:                 getSubfieldInfo();
 15344  002D' 3180' 2000' 3180'  	fcall	_getSubfieldInfo
 15345  0030'                    l7554:	
 15346                           
 15347                           ;main.c: 402:                 all_LED();
 15348  0030' 3180' 2000' 3180'  	fcall	_all_LED
 15349  0033'                    l7556:	
 15350                           
 15351                           ;main.c: 407:         _delay((unsigned long)((2)*(1000000/4000.0)));
 15352  0033' 30A6               	movlw	166
 15353  0034'                    u5967:	
 15354  0034' 0B89               	decfsz	9,f
 15355  0035' 2800'              	goto	u5967
 15356  0036' 3200               	nop2
 15357  0037'                    l7558:	
 15358                           
 15359                           ;main.c: 409:     }while(subfield <= num_subfields[mode_field_subfield[0]]);
 15360  0037' 0020               	movlb	0	; select bank0
 15361  0038' 0801'              	movf	_mode_field_subfield+1,w
 15362  0039' 0085               	movwf	5
 15363  003A' 0800'              	movf	_mode_field_subfield,w
 15364  003B' 0084               	movwf	4
 15365  003C' 3000'              	movlw	low (_num_subfields| (0+32768))
 15366  003D' 0784               	addwf	4,f
 15367  003E' 3000'              	movlw	high (_num_subfields| (0+32768))
 15368  003F' 3D85               	addwfc	5,f
 15369  0040' 0800               	movf	0,w	;code access
 15370  0041' 00A1'              	movwf	??_selectSubfield
 15371  0042' 01A2'              	clrf	??_selectSubfield+1
 15372  0043' 0824'              	movf	selectSubfield@subfield+1,w
 15373  0044' 0222'              	subwf	??_selectSubfield+1,w
 15374  0045' 1D03               	skipz
 15375  0046' 2800'              	goto	u4855
 15376  0047' 0823'              	movf	selectSubfield@subfield,w
 15377  0048' 0221'              	subwf	??_selectSubfield,w
 15378  0049'                    u4855:	
 15379  0049' 1803               	skipnc
 15380  004A' 2800'              	goto	u4851
 15381  004B' 2800'              	goto	u4850
 15382  004C'                    u4851:	
 15383  004C' 2800'              	goto	l7538
 15384  004D'                    u4850:	
 15385  004D'                    l1366:	
 15386  004D' 0008               	return
 15387  004E'                    __end_of_selectSubfield:	
 15388                           
 15389                           	psect	text23
 15390  0000'                    __ptext23:	
 15391 ;; *************** function _mode_LED *****************
 15392 ;; Defined at:
 15393 ;;		line 113 in file "leds.c"
 15394 ;; Parameters:    Size  Location     Type
 15395 ;;  subfield        1    wreg     unsigned char 
 15396 ;; Auto vars:     Size  Location     Type
 15397 ;;  subfield        1   15[BANK0 ] unsigned char 
 15398 ;; Return value:  Size  Location     Type
 15399 ;;                  1    wreg      void 
 15400 ;; Registers used:
 15401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15402 ;; Tracked objects:
 15403 ;;		On entry : 0/0
 15404 ;;		On exit  : 0/0
 15405 ;;		Unchanged: 0/0
 15406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15408 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15409 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15410 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15411 ;;Total ram usage:        3 bytes
 15412 ;; Hardware stack levels used:    1
 15413 ;; Hardware stack levels required when called:    8
 15414 ;; This function calls:
 15415 ;;		_mod1_LED
 15416 ;;		_mod2_LED
 15417 ;;		_mod3_LED
 15418 ;;		_mod4_LED
 15419 ;; This function is called by:
 15420 ;;		_selectSubfield
 15421 ;; This function uses a non-reentrant model
 15422 ;;
 15423                           
 15424                           
 15425                           ;psect for function _mode_LED
 15426  0000'                    _mode_LED:	
 15427                           
 15428                           ;incstack = 0
 15429                           ; Regs used in _mode_LED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15430                           ;mode_LED@subfield stored from wreg
 15431  0000' 0020               	movlb	0	; select bank0
 15432  0001' 008F'              	movwf	mode_LED@subfield
 15433  0002'                    l7268:	
 15434                           
 15435                           ;leds.c: 114:         switch(subfield){
 15436  0002' 2800'              	goto	l7280
 15437  0003'                    l7270:	
 15438  0003' 3180' 2000' 3180'  	fcall	_mod1_LED
 15439  0006' 2800'              	goto	l1729
 15440  0007'                    l7272:	
 15441  0007' 3180' 2000' 3180'  	fcall	_mod2_LED
 15442  000A' 2800'              	goto	l1729
 15443  000B'                    l7274:	
 15444  000B' 3180' 2000' 3180'  	fcall	_mod3_LED
 15445  000E' 2800'              	goto	l1729
 15446  000F'                    l7276:	
 15447  000F' 3180' 2000' 3180'  	fcall	_mod4_LED
 15448  0012' 2800'              	goto	l1729
 15449  0013'                    l7280:	
 15450  0013' 080F'              	movf	mode_LED@subfield,w
 15451  0014' 008D'              	movwf	??_mode_LED
 15452  0015' 018E'              	clrf	??_mode_LED+1
 15453                           
 15454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15455                           ; Switch size 1, requested type "simple"
 15456                           ; Number of cases is 1, Range of values is 0 to 0
 15457                           ; switch strategies available:
 15458                           ; Name         Instructions Cycles
 15459                           ; simple_byte            4     3 (average)
 15460                           ; direct_byte            8     6 (fixed)
 15461                           ; jumptable            260     6 (fixed)
 15462                           ;	Chosen strategy is simple_byte
 15463  0016' 080E'              	movf	??_mode_LED+1,w
 15464  0017' 3A00               	xorlw	0	; case 0
 15465  0018' 1903               	skipnz
 15466  0019' 2800'              	goto	l8508
 15467  001A' 2800'              	goto	l1729
 15468  001B'                    l8508:	
 15469                           
 15470                           ; Switch size 1, requested type "simple"
 15471                           ; Number of cases is 4, Range of values is 1 to 4
 15472                           ; switch strategies available:
 15473                           ; Name         Instructions Cycles
 15474                           ; simple_byte           13     7 (average)
 15475                           ; direct_byte           17     9 (fixed)
 15476                           ; jumptable            263     9 (fixed)
 15477                           ;	Chosen strategy is simple_byte
 15478  001B' 080D'              	movf	??_mode_LED,w
 15479  001C' 3A01               	xorlw	1	; case 1
 15480  001D' 1903               	skipnz
 15481  001E' 2800'              	goto	l7270
 15482  001F' 3A03               	xorlw	3	; case 2
 15483  0020' 1903               	skipnz
 15484  0021' 2800'              	goto	l7272
 15485  0022' 3A01               	xorlw	1	; case 3
 15486  0023' 1903               	skipnz
 15487  0024' 2800'              	goto	l7274
 15488  0025' 3A07               	xorlw	7	; case 4
 15489  0026' 1903               	skipnz
 15490  0027' 2800'              	goto	l7276
 15491  0028' 2800'              	goto	l1729
 15492  0029'                    l1729:	
 15493  0029' 0008               	return
 15494  002A'                    __end_of_mode_LED:	
 15495                           
 15496                           	psect	text24
 15497  0000'                    __ptext24:	
 15498 ;; *************** function _mod4_LED *****************
 15499 ;; Defined at:
 15500 ;;		line 84 in file "leds.c"
 15501 ;; Parameters:    Size  Location     Type
 15502 ;;		None
 15503 ;; Auto vars:     Size  Location     Type
 15504 ;;		None
 15505 ;; Return value:  Size  Location     Type
 15506 ;;                  1    wreg      void 
 15507 ;; Registers used:
 15508 ;;		wreg, status,2, status,0, pclath, cstack
 15509 ;; Tracked objects:
 15510 ;;		On entry : 0/0
 15511 ;;		On exit  : 0/0
 15512 ;;		Unchanged: 0/0
 15513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15518 ;;Total ram usage:        0 bytes
 15519 ;; Hardware stack levels used:    1
 15520 ;; Hardware stack levels required when called:    7
 15521 ;; This function calls:
 15522 ;;		_PWM6_LoadDutyValue
 15523 ;; This function is called by:
 15524 ;;		_config_routine
 15525 ;;		_mode_LED
 15526 ;; This function uses a non-reentrant model
 15527 ;;
 15528                           
 15529                           
 15530                           ;psect for function _mod4_LED
 15531  0000'                    _mod4_LED:	
 15532  0000'                    l7094:	
 15533                           ;incstack = 0
 15534                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 15535                           
 15536                           
 15537                           ;leds.c: 85:     LATA = 0;
 15538  0000' 0020               	movlb	0	; select bank0
 15539  0001' 0196               	clrf	22	;volatile
 15540  0002'                    l7096:	
 15541                           
 15542                           ;leds.c: 86:     PWM6_LoadDutyValue(0);
 15543  0002' 3000               	movlw	0
 15544  0003' 0089'              	movwf	PWM6_LoadDutyValue@dutyValue
 15545  0004' 008A'              	movwf	PWM6_LoadDutyValue@dutyValue+1
 15546  0005' 3180' 2000' 3180'  	fcall	_PWM6_LoadDutyValue
 15547  0008'                    l7098:	
 15548  0008' 0020               	movlb	0	; select bank0
 15549  0009' 1616               	bsf	22,4	;volatile
 15550  000A'                    l1708:	
 15551  000A' 0008               	return
 15552  000B'                    __end_of_mod4_LED:	
 15553                           
 15554                           	psect	text25
 15555  0000'                    __ptext25:	
 15556 ;; *************** function _mod3_LED *****************
 15557 ;; Defined at:
 15558 ;;		line 77 in file "leds.c"
 15559 ;; Parameters:    Size  Location     Type
 15560 ;;		None
 15561 ;; Auto vars:     Size  Location     Type
 15562 ;;		None
 15563 ;; Return value:  Size  Location     Type
 15564 ;;                  1    wreg      void 
 15565 ;; Registers used:
 15566 ;;		wreg, status,2, status,0, pclath, cstack
 15567 ;; Tracked objects:
 15568 ;;		On entry : 0/0
 15569 ;;		On exit  : 0/0
 15570 ;;		Unchanged: 0/0
 15571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15576 ;;Total ram usage:        0 bytes
 15577 ;; Hardware stack levels used:    1
 15578 ;; Hardware stack levels required when called:    7
 15579 ;; This function calls:
 15580 ;;		_PWM6_LoadDutyValue
 15581 ;; This function is called by:
 15582 ;;		_config_routine
 15583 ;;		_mode_LED
 15584 ;; This function uses a non-reentrant model
 15585 ;;
 15586                           
 15587                           
 15588                           ;psect for function _mod3_LED
 15589  0000'                    _mod3_LED:	
 15590  0000'                    l7088:	
 15591                           ;incstack = 0
 15592                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 15593                           
 15594                           
 15595                           ;leds.c: 78:     LATA = 0;
 15596  0000' 0020               	movlb	0	; select bank0
 15597  0001' 0196               	clrf	22	;volatile
 15598  0002'                    l7090:	
 15599                           
 15600                           ;leds.c: 79:     PWM6_LoadDutyValue(0);
 15601  0002' 3000               	movlw	0
 15602  0003' 0089'              	movwf	PWM6_LoadDutyValue@dutyValue
 15603  0004' 008A'              	movwf	PWM6_LoadDutyValue@dutyValue+1
 15604  0005' 3180' 2000' 3180'  	fcall	_PWM6_LoadDutyValue
 15605  0008'                    l7092:	
 15606  0008' 0020               	movlb	0	; select bank0
 15607  0009' 1696               	bsf	22,5	;volatile
 15608  000A'                    l1703:	
 15609  000A' 0008               	return
 15610  000B'                    __end_of_mod3_LED:	
 15611                           
 15612                           	psect	text26
 15613  0000'                    __ptext26:	
 15614 ;; *************** function _mod2_LED *****************
 15615 ;; Defined at:
 15616 ;;		line 72 in file "leds.c"
 15617 ;; Parameters:    Size  Location     Type
 15618 ;;		None
 15619 ;; Auto vars:     Size  Location     Type
 15620 ;;		None
 15621 ;; Return value:  Size  Location     Type
 15622 ;;                  1    wreg      void 
 15623 ;; Registers used:
 15624 ;;		wreg, status,2, status,0, pclath, cstack
 15625 ;; Tracked objects:
 15626 ;;		On entry : 0/0
 15627 ;;		On exit  : 0/0
 15628 ;;		Unchanged: 0/0
 15629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15634 ;;Total ram usage:        0 bytes
 15635 ;; Hardware stack levels used:    1
 15636 ;; Hardware stack levels required when called:    7
 15637 ;; This function calls:
 15638 ;;		_PWM6_LoadDutyValue
 15639 ;; This function is called by:
 15640 ;;		_config_routine
 15641 ;;		_mode_LED
 15642 ;; This function uses a non-reentrant model
 15643 ;;
 15644                           
 15645                           
 15646                           ;psect for function _mod2_LED
 15647  0000'                    _mod2_LED:	
 15648  0000'                    l7084:	
 15649                           ;incstack = 0
 15650                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 15651                           
 15652                           
 15653                           ;leds.c: 73:     LATA = 0;
 15654  0000' 0020               	movlb	0	; select bank0
 15655  0001' 0196               	clrf	22	;volatile
 15656  0002'                    l7086:	
 15657                           
 15658                           ;leds.c: 74:     PWM6_LoadDutyValue(1023);
 15659  0002' 30FF               	movlw	255
 15660  0003' 0089'              	movwf	PWM6_LoadDutyValue@dutyValue
 15661  0004' 3003               	movlw	3
 15662  0005' 008A'              	movwf	PWM6_LoadDutyValue@dutyValue+1
 15663  0006' 3180' 2000' 3180'  	fcall	_PWM6_LoadDutyValue
 15664  0009'                    l1698:	
 15665  0009' 0008               	return
 15666  000A'                    __end_of_mod2_LED:	
 15667                           
 15668                           	psect	text27
 15669  0000'                    __ptext27:	
 15670 ;; *************** function _mod1_LED *****************
 15671 ;; Defined at:
 15672 ;;		line 65 in file "leds.c"
 15673 ;; Parameters:    Size  Location     Type
 15674 ;;		None
 15675 ;; Auto vars:     Size  Location     Type
 15676 ;;		None
 15677 ;; Return value:  Size  Location     Type
 15678 ;;                  1    wreg      void 
 15679 ;; Registers used:
 15680 ;;		wreg, status,2, status,0, pclath, cstack
 15681 ;; Tracked objects:
 15682 ;;		On entry : 0/0
 15683 ;;		On exit  : 0/0
 15684 ;;		Unchanged: 0/0
 15685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15690 ;;Total ram usage:        0 bytes
 15691 ;; Hardware stack levels used:    1
 15692 ;; Hardware stack levels required when called:    7
 15693 ;; This function calls:
 15694 ;;		_PWM6_LoadDutyValue
 15695 ;; This function is called by:
 15696 ;;		_config_routine
 15697 ;;		_mode_LED
 15698 ;; This function uses a non-reentrant model
 15699 ;;
 15700                           
 15701                           
 15702                           ;psect for function _mod1_LED
 15703  0000'                    _mod1_LED:	
 15704  0000'                    l7078:	
 15705                           ;incstack = 0
 15706                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 15707                           
 15708                           
 15709                           ;leds.c: 66:     LATA = 0;
 15710  0000' 0020               	movlb	0	; select bank0
 15711  0001' 0196               	clrf	22	;volatile
 15712  0002'                    l7080:	
 15713                           
 15714                           ;leds.c: 67:     PWM6_LoadDutyValue(0);
 15715  0002' 3000               	movlw	0
 15716  0003' 0089'              	movwf	PWM6_LoadDutyValue@dutyValue
 15717  0004' 008A'              	movwf	PWM6_LoadDutyValue@dutyValue+1
 15718  0005' 3180' 2000' 3180'  	fcall	_PWM6_LoadDutyValue
 15719  0008'                    l7082:	
 15720  0008' 0020               	movlb	0	; select bank0
 15721  0009' 1796               	bsf	22,7	;volatile
 15722  000A'                    l1695:	
 15723  000A' 0008               	return
 15724  000B'                    __end_of_mod1_LED:	
 15725                           
 15726                           	psect	text28
 15727  0000'                    __ptext28:	
 15728 ;; *************** function _getSubfieldInfo *****************
 15729 ;; Defined at:
 15730 ;;		line 419 in file "main.c"
 15731 ;; Parameters:    Size  Location     Type
 15732 ;;		None
 15733 ;; Auto vars:     Size  Location     Type
 15734 ;;  temp_thresh_    1   32[BANK0 ] unsigned char 
 15735 ;;  temp_thresh_    1   31[BANK0 ] unsigned char 
 15736 ;;  m_units         1   30[BANK0 ] unsigned char 
 15737 ;;  m_tens          1   29[BANK0 ] unsigned char 
 15738 ;;  h_units         1   28[BANK0 ] unsigned char 
 15739 ;;  h_tens          1   27[BANK0 ] unsigned char 
 15740 ;; Return value:  Size  Location     Type
 15741 ;;                  1    wreg      void 
 15742 ;; Registers used:
 15743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15744 ;; Tracked objects:
 15745 ;;		On entry : 0/0
 15746 ;;		On exit  : 0/0
 15747 ;;		Unchanged: 0/0
 15748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15750 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15751 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15752 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15753 ;;Total ram usage:        9 bytes
 15754 ;; Hardware stack levels used:    1
 15755 ;; Hardware stack levels required when called:    9
 15756 ;; This function calls:
 15757 ;;		___awdiv
 15758 ;;		___awmod
 15759 ;;		___bmul
 15760 ;;		_increment_subfield
 15761 ;;		_limitHoursUnits
 15762 ;;		_limitTempThreshUnits
 15763 ;; This function is called by:
 15764 ;;		_selectSubfield
 15765 ;; This function uses a non-reentrant model
 15766 ;;
 15767                           
 15768                           
 15769                           ;psect for function _getSubfieldInfo
 15770  0000'                    _getSubfieldInfo:	
 15771  0000'                    l7288:	
 15772                           ;incstack = 0
 15773                           ; Regs used in _getSubfieldInfo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15774                           
 15775                           
 15776                           ;main.c: 421:     unsigned char h_tens, h_units, m_tens, m_units, temp_thresh_tens, temp
      +                          _thresh_units;;main.c: 423:     switch(mode_field_subfield[0]){
 15777  0000' 2800'              	goto	l7326
 15778  0001'                    l1370:	
 15779                           ;main.c: 424:         case 1:
 15780                           
 15781                           
 15782                           ;main.c: 425:             PIE4bits.TMR1IE = 0;
 15783  0001' 002E               	movlb	14	; select bank14
 15784  0002' 101A               	bcf	26,0	;volatile
 15785  0003'                    l7290:	
 15786                           
 15787                           ;main.c: 426:             h_tens = clkh / 10;
 15788  0003' 300A               	movlw	10
 15789  0004' 0020               	movlb	0	; select bank0
 15790  0005' 0083'              	movwf	___awdiv@divisor
 15791  0006' 3000               	movlw	0
 15792  0007' 0084'              	movwf	___awdiv@divisor+1
 15793  0008' 080F'              	movf	_clkh,w	;volatile
 15794  0009' 0098'              	movwf	??_getSubfieldInfo
 15795  000A' 0199'              	clrf	??_getSubfieldInfo+1
 15796  000B' 0818'              	movf	??_getSubfieldInfo,w
 15797  000C' 0085'              	movwf	___awdiv@dividend
 15798  000D' 0819'              	movf	??_getSubfieldInfo+1,w
 15799  000E' 0086'              	movwf	___awdiv@dividend+1
 15800  000F' 3180' 2000' 3180'  	fcall	___awdiv
 15801  0012' 0020               	movlb	0	; select bank0
 15802  0013' 0803'              	movf	?___awdiv,w
 15803  0014' 009A'              	movwf	??_getSubfieldInfo+2
 15804  0015' 081A'              	movf	??_getSubfieldInfo+2,w
 15805  0016' 009B'              	movwf	getSubfieldInfo@h_tens
 15806                           
 15807                           ;main.c: 427:             h_units = clkh % 10;
 15808  0017' 300A               	movlw	10
 15809  0018' 0083'              	movwf	___awmod@divisor
 15810  0019' 3000               	movlw	0
 15811  001A' 0084'              	movwf	___awmod@divisor+1
 15812  001B' 080F'              	movf	_clkh,w	;volatile
 15813  001C' 0098'              	movwf	??_getSubfieldInfo
 15814  001D' 0199'              	clrf	??_getSubfieldInfo+1
 15815  001E' 0818'              	movf	??_getSubfieldInfo,w
 15816  001F' 0085'              	movwf	___awmod@dividend
 15817  0020' 0819'              	movf	??_getSubfieldInfo+1,w
 15818  0021' 0086'              	movwf	___awmod@dividend+1
 15819  0022' 3180' 2000' 3180'  	fcall	___awmod
 15820  0025' 0020               	movlb	0	; select bank0
 15821  0026' 0803'              	movf	?___awmod,w
 15822  0027' 009A'              	movwf	??_getSubfieldInfo+2
 15823  0028' 081A'              	movf	??_getSubfieldInfo+2,w
 15824  0029' 009C'              	movwf	getSubfieldInfo@h_units
 15825                           
 15826                           ;main.c: 428:             m_tens = clkm / 10;
 15827  002A' 300A               	movlw	10
 15828  002B' 0083'              	movwf	___awdiv@divisor
 15829  002C' 3000               	movlw	0
 15830  002D' 0084'              	movwf	___awdiv@divisor+1
 15831  002E' 080E'              	movf	_clkm,w	;volatile
 15832  002F' 0098'              	movwf	??_getSubfieldInfo
 15833  0030' 0199'              	clrf	??_getSubfieldInfo+1
 15834  0031' 0818'              	movf	??_getSubfieldInfo,w
 15835  0032' 0085'              	movwf	___awdiv@dividend
 15836  0033' 0819'              	movf	??_getSubfieldInfo+1,w
 15837  0034' 0086'              	movwf	___awdiv@dividend+1
 15838  0035' 3180' 2000' 3180'  	fcall	___awdiv
 15839  0038' 0020               	movlb	0	; select bank0
 15840  0039' 0803'              	movf	?___awdiv,w
 15841  003A' 009A'              	movwf	??_getSubfieldInfo+2
 15842  003B' 081A'              	movf	??_getSubfieldInfo+2,w
 15843  003C' 009D'              	movwf	getSubfieldInfo@m_tens
 15844                           
 15845                           ;main.c: 429:             m_units = clkm % 10;
 15846  003D' 300A               	movlw	10
 15847  003E' 0083'              	movwf	___awmod@divisor
 15848  003F' 3000               	movlw	0
 15849  0040' 0084'              	movwf	___awmod@divisor+1
 15850  0041' 080E'              	movf	_clkm,w	;volatile
 15851  0042' 0098'              	movwf	??_getSubfieldInfo
 15852  0043' 0199'              	clrf	??_getSubfieldInfo+1
 15853  0044' 0818'              	movf	??_getSubfieldInfo,w
 15854  0045' 0085'              	movwf	___awmod@dividend
 15855  0046' 0819'              	movf	??_getSubfieldInfo+1,w
 15856  0047' 0086'              	movwf	___awmod@dividend+1
 15857  0048' 3180' 2000' 3180'  	fcall	___awmod
 15858  004B' 0020               	movlb	0	; select bank0
 15859  004C' 0803'              	movf	?___awmod,w
 15860  004D' 009A'              	movwf	??_getSubfieldInfo+2
 15861  004E' 081A'              	movf	??_getSubfieldInfo+2,w
 15862  004F' 009E'              	movwf	getSubfieldInfo@m_units
 15863                           
 15864                           ;main.c: 431:             switch(mode_field_subfield[1]){
 15865  0050' 2800'              	goto	l7302
 15866  0051'                    l7292:	
 15867                           
 15868                           ;main.c: 433:                    h_tens = increment_subfield(2, h_tens);
 15869  0051' 081B'              	movf	getSubfieldInfo@h_tens,w
 15870  0052' 0098'              	movwf	??_getSubfieldInfo
 15871  0053' 0199'              	clrf	??_getSubfieldInfo+1
 15872  0054' 0818'              	movf	??_getSubfieldInfo,w
 15873  0055' 0092'              	movwf	increment_subfield@init_val
 15874  0056' 0819'              	movf	??_getSubfieldInfo+1,w
 15875  0057' 0093'              	movwf	increment_subfield@init_val+1
 15876  0058' 3002               	movlw	2
 15877  0059' 3180' 2000' 3180'  	fcall	_increment_subfield
 15878  005C' 0020               	movlb	0	; select bank0
 15879  005D' 009A'              	movwf	??_getSubfieldInfo+2
 15880  005E' 081A'              	movf	??_getSubfieldInfo+2,w
 15881  005F' 009B'              	movwf	getSubfieldInfo@h_tens
 15882                           
 15883                           ;main.c: 434:                  break;
 15884  0060' 2800'              	goto	l7304
 15885  0061'                    l7294:	
 15886                           
 15887                           ;main.c: 436:                     h_units = increment_subfield( limitHoursUnits() , h_un
      +                          its);
 15888  0061' 081C'              	movf	getSubfieldInfo@h_units,w
 15889  0062' 0098'              	movwf	??_getSubfieldInfo
 15890  0063' 0199'              	clrf	??_getSubfieldInfo+1
 15891  0064' 0818'              	movf	??_getSubfieldInfo,w
 15892  0065' 0092'              	movwf	increment_subfield@init_val
 15893  0066' 0819'              	movf	??_getSubfieldInfo+1,w
 15894  0067' 0093'              	movwf	increment_subfield@init_val+1
 15895  0068' 3180' 2000' 3180'  	fcall	_limitHoursUnits
 15896  006B' 3180' 2000' 3180'  	fcall	_increment_subfield
 15897  006E' 0020               	movlb	0	; select bank0
 15898  006F' 009A'              	movwf	??_getSubfieldInfo+2
 15899  0070' 081A'              	movf	??_getSubfieldInfo+2,w
 15900  0071' 009C'              	movwf	getSubfieldInfo@h_units
 15901                           
 15902                           ;main.c: 437:                  break;
 15903  0072' 2800'              	goto	l7304
 15904  0073'                    l7296:	
 15905                           
 15906                           ;main.c: 439:                     m_tens = increment_subfield( 5 , m_tens);
 15907  0073' 081D'              	movf	getSubfieldInfo@m_tens,w
 15908  0074' 0098'              	movwf	??_getSubfieldInfo
 15909  0075' 0199'              	clrf	??_getSubfieldInfo+1
 15910  0076' 0818'              	movf	??_getSubfieldInfo,w
 15911  0077' 0092'              	movwf	increment_subfield@init_val
 15912  0078' 0819'              	movf	??_getSubfieldInfo+1,w
 15913  0079' 0093'              	movwf	increment_subfield@init_val+1
 15914  007A' 3005               	movlw	5
 15915  007B' 3180' 2000' 3180'  	fcall	_increment_subfield
 15916  007E' 0020               	movlb	0	; select bank0
 15917  007F' 009A'              	movwf	??_getSubfieldInfo+2
 15918  0080' 081A'              	movf	??_getSubfieldInfo+2,w
 15919  0081' 009D'              	movwf	getSubfieldInfo@m_tens
 15920                           
 15921                           ;main.c: 440:                  break;
 15922  0082' 2800'              	goto	l7304
 15923  0083'                    l7298:	
 15924                           
 15925                           ;main.c: 442:                  m_units = increment_subfield( 9, m_units);
 15926  0083' 081E'              	movf	getSubfieldInfo@m_units,w
 15927  0084' 0098'              	movwf	??_getSubfieldInfo
 15928  0085' 0199'              	clrf	??_getSubfieldInfo+1
 15929  0086' 0818'              	movf	??_getSubfieldInfo,w
 15930  0087' 0092'              	movwf	increment_subfield@init_val
 15931  0088' 0819'              	movf	??_getSubfieldInfo+1,w
 15932  0089' 0093'              	movwf	increment_subfield@init_val+1
 15933  008A' 3009               	movlw	9
 15934  008B' 3180' 2000' 3180'  	fcall	_increment_subfield
 15935  008E' 0020               	movlb	0	; select bank0
 15936  008F' 009A'              	movwf	??_getSubfieldInfo+2
 15937  0090' 081A'              	movf	??_getSubfieldInfo+2,w
 15938  0091' 009E'              	movwf	getSubfieldInfo@m_units
 15939                           
 15940                           ;main.c: 443:                      break;
 15941  0092' 2800'              	goto	l7304
 15942  0093'                    l7302:	
 15943                           
 15944                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15945                           ; Switch size 1, requested type "simple"
 15946                           ; Number of cases is 1, Range of values is 0 to 0
 15947                           ; switch strategies available:
 15948                           ; Name         Instructions Cycles
 15949                           ; simple_byte            4     3 (average)
 15950                           ; direct_byte            8     6 (fixed)
 15951                           ; jumptable            260     6 (fixed)
 15952                           ;	Chosen strategy is simple_byte
 15953  0093' 0803'              	movf	_mode_field_subfield+3,w
 15954  0094' 3A00               	xorlw	0	; case 0
 15955  0095' 1903               	skipnz
 15956  0096' 2800'              	goto	l8510
 15957  0097' 2800'              	goto	l7304
 15958  0098'                    l8510:	
 15959                           
 15960                           ; Switch size 1, requested type "simple"
 15961                           ; Number of cases is 4, Range of values is 1 to 4
 15962                           ; switch strategies available:
 15963                           ; Name         Instructions Cycles
 15964                           ; simple_byte           13     7 (average)
 15965                           ; direct_byte           17     9 (fixed)
 15966                           ; jumptable            263     9 (fixed)
 15967                           ;	Chosen strategy is simple_byte
 15968  0098' 0802'              	movf	_mode_field_subfield+2,w
 15969  0099' 3A01               	xorlw	1	; case 1
 15970  009A' 1903               	skipnz
 15971  009B' 2800'              	goto	l7292
 15972  009C' 3A03               	xorlw	3	; case 2
 15973  009D' 1903               	skipnz
 15974  009E' 2800'              	goto	l7294
 15975  009F' 3A01               	xorlw	1	; case 3
 15976  00A0' 1903               	skipnz
 15977  00A1' 2800'              	goto	l7296
 15978  00A2' 3A07               	xorlw	7	; case 4
 15979  00A3' 1903               	skipnz
 15980  00A4' 2800'              	goto	l7298
 15981  00A5' 2800'              	goto	l7304
 15982  00A6'                    l7304:	
 15983                           
 15984                           ;main.c: 446:             clkh = 10*h_tens + h_units;
 15985  00A6' 300A               	movlw	10
 15986  00A7' 0098'              	movwf	??_getSubfieldInfo
 15987  00A8' 0818'              	movf	??_getSubfieldInfo,w
 15988  00A9' 0083'              	movwf	___bmul@multiplicand
 15989  00AA' 081B'              	movf	getSubfieldInfo@h_tens,w
 15990  00AB' 3180' 2000' 3180'  	fcall	___bmul
 15991  00AE' 0020               	movlb	0	; select bank0
 15992  00AF' 071C'              	addwf	getSubfieldInfo@h_units,w
 15993  00B0' 0099'              	movwf	??_getSubfieldInfo+1
 15994  00B1' 0819'              	movf	??_getSubfieldInfo+1,w
 15995  00B2' 008F'              	movwf	_clkh	;volatile
 15996                           
 15997                           ;main.c: 447:             clkm = 10*m_tens + m_units;
 15998  00B3' 300A               	movlw	10
 15999  00B4' 0098'              	movwf	??_getSubfieldInfo
 16000  00B5' 0818'              	movf	??_getSubfieldInfo,w
 16001  00B6' 0083'              	movwf	___bmul@multiplicand
 16002  00B7' 081D'              	movf	getSubfieldInfo@m_tens,w
 16003  00B8' 3180' 2000' 3180'  	fcall	___bmul
 16004  00BB' 0020               	movlb	0	; select bank0
 16005  00BC' 071E'              	addwf	getSubfieldInfo@m_units,w
 16006  00BD' 0099'              	movwf	??_getSubfieldInfo+1
 16007  00BE' 0819'              	movf	??_getSubfieldInfo+1,w
 16008  00BF' 008E'              	movwf	_clkm	;volatile
 16009  00C0'                    l7306:	
 16010                           
 16011                           ;main.c: 448:             PIE4bits.TMR1IE = 0;
 16012  00C0' 002E               	movlb	14	; select bank14
 16013  00C1' 101A               	bcf	26,0	;volatile
 16014                           
 16015                           ;main.c: 449:         break;
 16016  00C2' 2800'              	goto	l1385
 16017  00C3'                    l7308:	
 16018                           
 16019                           ;main.c: 452:             alaf = increment_subfield( 1, alaf );
 16020  00C3' 0804'              	movf	_alaf,w
 16021  00C4' 0098'              	movwf	??_getSubfieldInfo
 16022  00C5' 0199'              	clrf	??_getSubfieldInfo+1
 16023  00C6' 0818'              	movf	??_getSubfieldInfo,w
 16024  00C7' 0092'              	movwf	increment_subfield@init_val
 16025  00C8' 0819'              	movf	??_getSubfieldInfo+1,w
 16026  00C9' 0093'              	movwf	increment_subfield@init_val+1
 16027  00CA' 3001               	movlw	1
 16028  00CB' 3180' 2000' 3180'  	fcall	_increment_subfield
 16029  00CE' 0020               	movlb	0	; select bank0
 16030  00CF' 009A'              	movwf	??_getSubfieldInfo+2
 16031  00D0' 081A'              	movf	??_getSubfieldInfo+2,w
 16032  00D1' 0084'              	movwf	_alaf
 16033                           
 16034                           ;main.c: 453:  break;
 16035  00D2' 2800'              	goto	l1385
 16036  00D3'                    l7310:	
 16037                           
 16038                           ;main.c: 456:             temp_thresh_tens = temp_thresh / 10;
 16039  00D3' 300A               	movlw	10
 16040  00D4' 0083'              	movwf	___awdiv@divisor
 16041  00D5' 3000               	movlw	0
 16042  00D6' 0084'              	movwf	___awdiv@divisor+1
 16043  00D7' 0805'              	movf	_temp_thresh,w
 16044  00D8' 0098'              	movwf	??_getSubfieldInfo
 16045  00D9' 0199'              	clrf	??_getSubfieldInfo+1
 16046  00DA' 0818'              	movf	??_getSubfieldInfo,w
 16047  00DB' 0085'              	movwf	___awdiv@dividend
 16048  00DC' 0819'              	movf	??_getSubfieldInfo+1,w
 16049  00DD' 0086'              	movwf	___awdiv@dividend+1
 16050  00DE' 3180' 2000' 3180'  	fcall	___awdiv
 16051  00E1' 0020               	movlb	0	; select bank0
 16052  00E2' 0803'              	movf	?___awdiv,w
 16053  00E3' 009A'              	movwf	??_getSubfieldInfo+2
 16054  00E4' 081A'              	movf	??_getSubfieldInfo+2,w
 16055  00E5' 009F'              	movwf	getSubfieldInfo@temp_thresh_tens
 16056                           
 16057                           ;main.c: 457:             temp_thresh_units = temp_thresh % 10;
 16058  00E6' 300A               	movlw	10
 16059  00E7' 0083'              	movwf	___awmod@divisor
 16060  00E8' 3000               	movlw	0
 16061  00E9' 0084'              	movwf	___awmod@divisor+1
 16062  00EA' 0805'              	movf	_temp_thresh,w
 16063  00EB' 0098'              	movwf	??_getSubfieldInfo
 16064  00EC' 0199'              	clrf	??_getSubfieldInfo+1
 16065  00ED' 0818'              	movf	??_getSubfieldInfo,w
 16066  00EE' 0085'              	movwf	___awmod@dividend
 16067  00EF' 0819'              	movf	??_getSubfieldInfo+1,w
 16068  00F0' 0086'              	movwf	___awmod@dividend+1
 16069  00F1' 3180' 2000' 3180'  	fcall	___awmod
 16070  00F4' 0020               	movlb	0	; select bank0
 16071  00F5' 0803'              	movf	?___awmod,w
 16072  00F6' 009A'              	movwf	??_getSubfieldInfo+2
 16073  00F7' 081A'              	movf	??_getSubfieldInfo+2,w
 16074  00F8' 00A0'              	movwf	getSubfieldInfo@temp_thresh_units
 16075                           
 16076                           ;main.c: 458:             switch(mode_field_subfield[1]){
 16077  00F9' 2800'              	goto	l7318
 16078  00FA'                    l7312:	
 16079                           
 16080                           ;main.c: 460:                     temp_thresh_tens = increment_subfield(5, temp_thresh_t
      +                          ens);
 16081  00FA' 081F'              	movf	getSubfieldInfo@temp_thresh_tens,w
 16082  00FB' 0098'              	movwf	??_getSubfieldInfo
 16083  00FC' 0199'              	clrf	??_getSubfieldInfo+1
 16084  00FD' 0818'              	movf	??_getSubfieldInfo,w
 16085  00FE' 0092'              	movwf	increment_subfield@init_val
 16086  00FF' 0819'              	movf	??_getSubfieldInfo+1,w
 16087  0100' 0093'              	movwf	increment_subfield@init_val+1
 16088  0101' 3005               	movlw	5
 16089  0102' 3180' 2000' 3180'  	fcall	_increment_subfield
 16090  0105' 0020               	movlb	0	; select bank0
 16091  0106' 009A'              	movwf	??_getSubfieldInfo+2
 16092  0107' 081A'              	movf	??_getSubfieldInfo+2,w
 16093  0108' 009F'              	movwf	getSubfieldInfo@temp_thresh_tens
 16094                           
 16095                           ;main.c: 461:                 break;
 16096  0109' 2800'              	goto	l7320
 16097  010A'                    l7314:	
 16098                           
 16099                           ;main.c: 463:                     temp_thresh_units = increment_subfield(limitTempThresh
      +                          Units(), temp_thresh_units);
 16100  010A' 0820'              	movf	getSubfieldInfo@temp_thresh_units,w
 16101  010B' 0098'              	movwf	??_getSubfieldInfo
 16102  010C' 0199'              	clrf	??_getSubfieldInfo+1
 16103  010D' 0818'              	movf	??_getSubfieldInfo,w
 16104  010E' 0092'              	movwf	increment_subfield@init_val
 16105  010F' 0819'              	movf	??_getSubfieldInfo+1,w
 16106  0110' 0093'              	movwf	increment_subfield@init_val+1
 16107  0111' 3180' 2000' 3180'  	fcall	_limitTempThreshUnits
 16108  0114' 3180' 2000' 3180'  	fcall	_increment_subfield
 16109  0117' 0020               	movlb	0	; select bank0
 16110  0118' 009A'              	movwf	??_getSubfieldInfo+2
 16111  0119' 081A'              	movf	??_getSubfieldInfo+2,w
 16112  011A' 00A0'              	movwf	getSubfieldInfo@temp_thresh_units
 16113                           
 16114                           ;main.c: 464:                 break;
 16115  011B' 2800'              	goto	l7320
 16116  011C'                    l7318:	
 16117                           
 16118                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16119                           ; Switch size 1, requested type "simple"
 16120                           ; Number of cases is 1, Range of values is 0 to 0
 16121                           ; switch strategies available:
 16122                           ; Name         Instructions Cycles
 16123                           ; simple_byte            4     3 (average)
 16124                           ; direct_byte            8     6 (fixed)
 16125                           ; jumptable            260     6 (fixed)
 16126                           ;	Chosen strategy is simple_byte
 16127  011C' 0803'              	movf	_mode_field_subfield+3,w
 16128  011D' 3A00               	xorlw	0	; case 0
 16129  011E' 1903               	skipnz
 16130  011F' 2800'              	goto	l8512
 16131  0120' 2800'              	goto	l7320
 16132  0121'                    l8512:	
 16133                           
 16134                           ; Switch size 1, requested type "simple"
 16135                           ; Number of cases is 2, Range of values is 1 to 2
 16136                           ; switch strategies available:
 16137                           ; Name         Instructions Cycles
 16138                           ; simple_byte            7     4 (average)
 16139                           ; direct_byte           13     9 (fixed)
 16140                           ; jumptable            263     9 (fixed)
 16141                           ;	Chosen strategy is simple_byte
 16142  0121' 0802'              	movf	_mode_field_subfield+2,w
 16143  0122' 3A01               	xorlw	1	; case 1
 16144  0123' 1903               	skipnz
 16145  0124' 2800'              	goto	l7312
 16146  0125' 3A03               	xorlw	3	; case 2
 16147  0126' 1903               	skipnz
 16148  0127' 2800'              	goto	l7314
 16149  0128' 2800'              	goto	l7320
 16150  0129'                    l7320:	
 16151                           
 16152                           ;main.c: 466:             temp_thresh = 10*temp_thresh_tens + temp_thresh_units;
 16153  0129' 300A               	movlw	10
 16154  012A' 0098'              	movwf	??_getSubfieldInfo
 16155  012B' 0818'              	movf	??_getSubfieldInfo,w
 16156  012C' 0083'              	movwf	___bmul@multiplicand
 16157  012D' 081F'              	movf	getSubfieldInfo@temp_thresh_tens,w
 16158  012E' 3180' 2000' 3180'  	fcall	___bmul
 16159  0131' 0020               	movlb	0	; select bank0
 16160  0132' 0720'              	addwf	getSubfieldInfo@temp_thresh_units,w
 16161  0133' 0099'              	movwf	??_getSubfieldInfo+1
 16162  0134' 0819'              	movf	??_getSubfieldInfo+1,w
 16163  0135' 0085'              	movwf	_temp_thresh
 16164                           
 16165                           ;main.c: 467:         break;
 16166  0136' 2800'              	goto	l1385
 16167  0137'                    l7322:	
 16168                           
 16169                           ;main.c: 470:             lum_thresh = increment_subfield(3, lum_thresh);
 16170  0137' 0804'              	movf	_lum_thresh,w
 16171  0138' 0098'              	movwf	??_getSubfieldInfo
 16172  0139' 0199'              	clrf	??_getSubfieldInfo+1
 16173  013A' 0818'              	movf	??_getSubfieldInfo,w
 16174  013B' 0092'              	movwf	increment_subfield@init_val
 16175  013C' 0819'              	movf	??_getSubfieldInfo+1,w
 16176  013D' 0093'              	movwf	increment_subfield@init_val+1
 16177  013E' 3003               	movlw	3
 16178  013F' 3180' 2000' 3180'  	fcall	_increment_subfield
 16179  0142' 0020               	movlb	0	; select bank0
 16180  0143' 009A'              	movwf	??_getSubfieldInfo+2
 16181  0144' 081A'              	movf	??_getSubfieldInfo+2,w
 16182  0145' 0084'              	movwf	_lum_thresh
 16183                           
 16184                           ;main.c: 471:         break;
 16185  0146' 2800'              	goto	l1385
 16186  0147'                    l7326:	
 16187                           
 16188                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16189                           ; Switch size 1, requested type "simple"
 16190                           ; Number of cases is 1, Range of values is 0 to 0
 16191                           ; switch strategies available:
 16192                           ; Name         Instructions Cycles
 16193                           ; simple_byte            4     3 (average)
 16194                           ; direct_byte            8     6 (fixed)
 16195                           ; jumptable            260     6 (fixed)
 16196                           ;	Chosen strategy is simple_byte
 16197  0147' 0020               	movlb	0	; select bank0
 16198  0148' 0801'              	movf	_mode_field_subfield+1,w
 16199  0149' 3A00               	xorlw	0	; case 0
 16200  014A' 1903               	skipnz
 16201  014B' 2800'              	goto	l8514
 16202  014C' 2800'              	goto	l1385
 16203  014D'                    l8514:	
 16204                           
 16205                           ; Switch size 1, requested type "simple"
 16206                           ; Number of cases is 4, Range of values is 1 to 4
 16207                           ; switch strategies available:
 16208                           ; Name         Instructions Cycles
 16209                           ; simple_byte           13     7 (average)
 16210                           ; direct_byte           17     9 (fixed)
 16211                           ; jumptable            263     9 (fixed)
 16212                           ;	Chosen strategy is simple_byte
 16213  014D' 0800'              	movf	_mode_field_subfield,w
 16214  014E' 3A01               	xorlw	1	; case 1
 16215  014F' 1903               	skipnz
 16216  0150' 2800'              	goto	l1370
 16217  0151' 3A03               	xorlw	3	; case 2
 16218  0152' 1903               	skipnz
 16219  0153' 2800'              	goto	l7308
 16220  0154' 3A01               	xorlw	1	; case 3
 16221  0155' 1903               	skipnz
 16222  0156' 2800'              	goto	l7310
 16223  0157' 3A07               	xorlw	7	; case 4
 16224  0158' 1903               	skipnz
 16225  0159' 2800'              	goto	l7322
 16226  015A' 2800'              	goto	l1385
 16227  015B'                    l1385:	
 16228  015B' 0008               	return
 16229  015C'                    __end_of_getSubfieldInfo:	
 16230                           
 16231                           	psect	text29
 16232  0000'                    __ptext29:	
 16233 ;; *************** function _limitTempThreshUnits *****************
 16234 ;; Defined at:
 16235 ;;		line 504 in file "main.c"
 16236 ;; Parameters:    Size  Location     Type
 16237 ;;		None
 16238 ;; Auto vars:     Size  Location     Type
 16239 ;;		None
 16240 ;; Return value:  Size  Location     Type
 16241 ;;                  1    wreg      unsigned char 
 16242 ;; Registers used:
 16243 ;;		wreg, status,2, status,0, pclath, cstack
 16244 ;; Tracked objects:
 16245 ;;		On entry : 0/0
 16246 ;;		On exit  : 0/0
 16247 ;;		Unchanged: 0/0
 16248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16251 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16252 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16253 ;;Total ram usage:        2 bytes
 16254 ;; Hardware stack levels used:    1
 16255 ;; Hardware stack levels required when called:    7
 16256 ;; This function calls:
 16257 ;;		___awdiv
 16258 ;; This function is called by:
 16259 ;;		_getSubfieldInfo
 16260 ;; This function uses a non-reentrant model
 16261 ;;
 16262                           
 16263                           
 16264                           ;psect for function _limitTempThreshUnits
 16265  0000'                    _limitTempThreshUnits:	
 16266  0000'                    l7152:	
 16267                           ;incstack = 0
 16268                           ; Regs used in _limitTempThreshUnits: [wreg+status,2+status,0+pclath+cstack]
 16269                           
 16270                           
 16271                           ;main.c: 505:      if((temp_thresh / 10) == 5){
 16272  0000' 300A               	movlw	10
 16273  0001' 0020               	movlb	0	; select bank0
 16274  0002' 0083'              	movwf	___awdiv@divisor
 16275  0003' 3000               	movlw	0
 16276  0004' 0084'              	movwf	___awdiv@divisor+1
 16277  0005' 0805'              	movf	_temp_thresh,w
 16278  0006' 008C'              	movwf	??_limitTempThreshUnits
 16279  0007' 018D'              	clrf	??_limitTempThreshUnits+1
 16280  0008' 080C'              	movf	??_limitTempThreshUnits,w
 16281  0009' 0085'              	movwf	___awdiv@dividend
 16282  000A' 080D'              	movf	??_limitTempThreshUnits+1,w
 16283  000B' 0086'              	movwf	___awdiv@dividend+1
 16284  000C' 3180' 2000' 3180'  	fcall	___awdiv
 16285  000F' 3005               	movlw	5
 16286  0010' 0020               	movlb	0	; select bank0
 16287  0011' 0603'              	xorwf	?___awdiv,w
 16288  0012' 0404'              	iorwf	?___awdiv+1,w
 16289  0013' 1D03               	btfss	3,2
 16290  0014' 2800'              	goto	u4631
 16291  0015' 2800'              	goto	u4630
 16292  0016'                    u4631:	
 16293  0016' 2800'              	goto	l7160
 16294  0017'                    u4630:	
 16295  0017'                    l7154:	
 16296                           
 16297                           ;main.c: 506:         return 0;
 16298  0017' 3000               	movlw	0
 16299  0018' 2800'              	goto	l1397
 16300  0019'                    l7160:	
 16301                           
 16302                           ;main.c: 508:         return 9;
 16303  0019' 3009               	movlw	9
 16304  001A'                    l1397:	
 16305  001A' 0008               	return
 16306  001B'                    __end_of_limitTempThreshUnits:	
 16307                           
 16308                           	psect	text30
 16309  0000'                    __ptext30:	
 16310 ;; *************** function _limitHoursUnits *****************
 16311 ;; Defined at:
 16312 ;;		line 519 in file "main.c"
 16313 ;; Parameters:    Size  Location     Type
 16314 ;;		None
 16315 ;; Auto vars:     Size  Location     Type
 16316 ;;		None
 16317 ;; Return value:  Size  Location     Type
 16318 ;;                  1    wreg      unsigned char 
 16319 ;; Registers used:
 16320 ;;		wreg, status,2, status,0, pclath, cstack
 16321 ;; Tracked objects:
 16322 ;;		On entry : 0/0
 16323 ;;		On exit  : 0/0
 16324 ;;		Unchanged: 0/0
 16325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16328 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16329 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16330 ;;Total ram usage:        2 bytes
 16331 ;; Hardware stack levels used:    1
 16332 ;; Hardware stack levels required when called:    7
 16333 ;; This function calls:
 16334 ;;		___awdiv
 16335 ;; This function is called by:
 16336 ;;		_getSubfieldInfo
 16337 ;; This function uses a non-reentrant model
 16338 ;;
 16339                           
 16340                           
 16341                           ;psect for function _limitHoursUnits
 16342  0000'                    _limitHoursUnits:	
 16343  0000'                    l7140:	
 16344                           ;incstack = 0
 16345                           ; Regs used in _limitHoursUnits: [wreg+status,2+status,0+pclath+cstack]
 16346                           
 16347                           
 16348                           ;main.c: 521:     if((clkh / 10) == 2){
 16349  0000' 300A               	movlw	10
 16350  0001' 0020               	movlb	0	; select bank0
 16351  0002' 0083'              	movwf	___awdiv@divisor
 16352  0003' 3000               	movlw	0
 16353  0004' 0084'              	movwf	___awdiv@divisor+1
 16354  0005' 080F'              	movf	_clkh,w	;volatile
 16355  0006' 008C'              	movwf	??_limitHoursUnits
 16356  0007' 018D'              	clrf	??_limitHoursUnits+1
 16357  0008' 080C'              	movf	??_limitHoursUnits,w
 16358  0009' 0085'              	movwf	___awdiv@dividend
 16359  000A' 080D'              	movf	??_limitHoursUnits+1,w
 16360  000B' 0086'              	movwf	___awdiv@dividend+1
 16361  000C' 3180' 2000' 3180'  	fcall	___awdiv
 16362  000F' 3002               	movlw	2
 16363  0010' 0020               	movlb	0	; select bank0
 16364  0011' 0603'              	xorwf	?___awdiv,w
 16365  0012' 0404'              	iorwf	?___awdiv+1,w
 16366  0013' 1D03               	btfss	3,2
 16367  0014' 2800'              	goto	u4621
 16368  0015' 2800'              	goto	u4620
 16369  0016'                    u4621:	
 16370  0016' 2800'              	goto	l7148
 16371  0017'                    u4620:	
 16372  0017'                    l7142:	
 16373                           
 16374                           ;main.c: 522:         return 3;
 16375  0017' 3003               	movlw	3
 16376  0018' 2800'              	goto	l1402
 16377  0019'                    l7148:	
 16378                           
 16379                           ;main.c: 524:         return 9;
 16380  0019' 3009               	movlw	9
 16381  001A'                    l1402:	
 16382  001A' 0008               	return
 16383  001B'                    __end_of_limitHoursUnits:	
 16384                           
 16385                           	psect	text31
 16386  0000'                    __ptext31:	
 16387 ;; *************** function ___awdiv *****************
 16388 ;; Defined at:
 16389 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 16390 ;; Parameters:    Size  Location     Type
 16391 ;;  divisor         2    3[BANK0 ] int 
 16392 ;;  dividend        2    5[BANK0 ] int 
 16393 ;; Auto vars:     Size  Location     Type
 16394 ;;  quotient        2   10[BANK0 ] int 
 16395 ;;  sign            1    9[BANK0 ] unsigned char 
 16396 ;;  counter         1    8[BANK0 ] unsigned char 
 16397 ;; Return value:  Size  Location     Type
 16398 ;;                  2    3[BANK0 ] int 
 16399 ;; Registers used:
 16400 ;;		wreg, status,2, status,0
 16401 ;; Tracked objects:
 16402 ;;		On entry : 0/0
 16403 ;;		On exit  : 0/0
 16404 ;;		Unchanged: 0/0
 16405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16406 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16407 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16408 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16409 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16410 ;;Total ram usage:        9 bytes
 16411 ;; Hardware stack levels used:    1
 16412 ;; Hardware stack levels required when called:    6
 16413 ;; This function calls:
 16414 ;;		Nothing
 16415 ;; This function is called by:
 16416 ;;		_getSubfieldInfo
 16417 ;;		_limitTempThreshUnits
 16418 ;;		_limitHoursUnits
 16419 ;;		_recTempThresh
 16420 ;; This function uses a non-reentrant model
 16421 ;;
 16422                           
 16423                           
 16424                           ;psect for function ___awdiv
 16425  0000'                    ___awdiv:	
 16426  0000'                    l7018:	
 16427                           ;incstack = 0
 16428                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 16429                           
 16430  0000' 0020               	movlb	0	; select bank0
 16431  0001' 0189'              	clrf	___awdiv@sign
 16432  0002'                    l7020:	
 16433  0002' 1F84'              	btfss	___awdiv@divisor+1,7
 16434  0003' 2800'              	goto	u4451
 16435  0004' 2800'              	goto	u4450
 16436  0005'                    u4451:	
 16437  0005' 2800'              	goto	l7026
 16438  0006'                    u4450:	
 16439  0006'                    l7022:	
 16440  0006' 0983'              	comf	___awdiv@divisor,f
 16441  0007' 0984'              	comf	___awdiv@divisor+1,f
 16442  0008' 0A83'              	incf	___awdiv@divisor,f
 16443  0009' 1903               	skipnz
 16444  000A' 0A84'              	incf	___awdiv@divisor+1,f
 16445  000B'                    l7024:	
 16446  000B' 0189'              	clrf	___awdiv@sign
 16447  000C' 0A89'              	incf	___awdiv@sign,f
 16448  000D'                    l7026:	
 16449  000D' 1F86'              	btfss	___awdiv@dividend+1,7
 16450  000E' 2800'              	goto	u4461
 16451  000F' 2800'              	goto	u4460
 16452  0010'                    u4461:	
 16453  0010' 2800'              	goto	l7032
 16454  0011'                    u4460:	
 16455  0011'                    l7028:	
 16456  0011' 0985'              	comf	___awdiv@dividend,f
 16457  0012' 0986'              	comf	___awdiv@dividend+1,f
 16458  0013' 0A85'              	incf	___awdiv@dividend,f
 16459  0014' 1903               	skipnz
 16460  0015' 0A86'              	incf	___awdiv@dividend+1,f
 16461  0016'                    l7030:	
 16462  0016' 3001               	movlw	1
 16463  0017' 0087'              	movwf	??___awdiv
 16464  0018' 0807'              	movf	??___awdiv,w
 16465  0019' 0689'              	xorwf	___awdiv@sign,f
 16466  001A'                    l7032:	
 16467  001A' 018A'              	clrf	___awdiv@quotient
 16468  001B' 018B'              	clrf	___awdiv@quotient+1
 16469  001C'                    l7034:	
 16470  001C' 0803'              	movf	___awdiv@divisor,w
 16471  001D' 0404'              	iorwf	___awdiv@divisor+1,w
 16472  001E' 1903               	btfsc	3,2
 16473  001F' 2800'              	goto	u4471
 16474  0020' 2800'              	goto	u4470
 16475  0021'                    u4471:	
 16476  0021' 2800'              	goto	l7054
 16477  0022'                    u4470:	
 16478  0022'                    l7036:	
 16479  0022' 0188'              	clrf	___awdiv@counter
 16480  0023' 0A88'              	incf	___awdiv@counter,f
 16481  0024' 2800'              	goto	l7042
 16482  0025'                    l7038:	
 16483  0025' 3001               	movlw	1
 16484  0026'                    u4485:	
 16485  0026' 3583'              	lslf	___awdiv@divisor,f
 16486  0027' 0D84'              	rlf	___awdiv@divisor+1,f
 16487  0028' 0B89               	decfsz	9,f
 16488  0029' 2800'              	goto	u4485
 16489  002A'                    l7040:	
 16490  002A' 3001               	movlw	1
 16491  002B' 0087'              	movwf	??___awdiv
 16492  002C' 0807'              	movf	??___awdiv,w
 16493  002D' 0788'              	addwf	___awdiv@counter,f
 16494  002E'                    l7042:	
 16495  002E' 1F84'              	btfss	___awdiv@divisor+1,7
 16496  002F' 2800'              	goto	u4491
 16497  0030' 2800'              	goto	u4490
 16498  0031'                    u4491:	
 16499  0031' 2800'              	goto	l7038
 16500  0032'                    u4490:	
 16501  0032'                    l7044:	
 16502  0032' 3001               	movlw	1
 16503  0033'                    u4505:	
 16504  0033' 358A'              	lslf	___awdiv@quotient,f
 16505  0034' 0D8B'              	rlf	___awdiv@quotient+1,f
 16506  0035' 0B89               	decfsz	9,f
 16507  0036' 2800'              	goto	u4505
 16508  0037' 0804'              	movf	___awdiv@divisor+1,w
 16509  0038' 0206'              	subwf	___awdiv@dividend+1,w
 16510  0039' 1D03               	skipz
 16511  003A' 2800'              	goto	u4515
 16512  003B' 0803'              	movf	___awdiv@divisor,w
 16513  003C' 0205'              	subwf	___awdiv@dividend,w
 16514  003D'                    u4515:	
 16515  003D' 1C03               	skipc
 16516  003E' 2800'              	goto	u4511
 16517  003F' 2800'              	goto	u4510
 16518  0040'                    u4511:	
 16519  0040' 2800'              	goto	l7050
 16520  0041'                    u4510:	
 16521  0041'                    l7046:	
 16522  0041' 0803'              	movf	___awdiv@divisor,w
 16523  0042' 0285'              	subwf	___awdiv@dividend,f
 16524  0043' 0804'              	movf	___awdiv@divisor+1,w
 16525  0044' 3B86'              	subwfb	___awdiv@dividend+1,f
 16526  0045'                    l7048:	
 16527  0045' 140A'              	bsf	___awdiv@quotient,0
 16528  0046'                    l7050:	
 16529  0046' 3001               	movlw	1
 16530  0047'                    u4525:	
 16531  0047' 3684'              	lsrf	___awdiv@divisor+1,f
 16532  0048' 0C83'              	rrf	___awdiv@divisor,f
 16533  0049' 0B89               	decfsz	9,f
 16534  004A' 2800'              	goto	u4525
 16535  004B'                    l7052:	
 16536  004B' 3001               	movlw	1
 16537  004C' 0288'              	subwf	___awdiv@counter,f
 16538  004D' 1D03               	btfss	3,2
 16539  004E' 2800'              	goto	u4531
 16540  004F' 2800'              	goto	u4530
 16541  0050'                    u4531:	
 16542  0050' 2800'              	goto	l7044
 16543  0051'                    u4530:	
 16544  0051'                    l7054:	
 16545  0051' 0809'              	movf	___awdiv@sign,w
 16546  0052' 1903               	btfsc	3,2
 16547  0053' 2800'              	goto	u4541
 16548  0054' 2800'              	goto	u4540
 16549  0055'                    u4541:	
 16550  0055' 2800'              	goto	l7058
 16551  0056'                    u4540:	
 16552  0056'                    l7056:	
 16553  0056' 098A'              	comf	___awdiv@quotient,f
 16554  0057' 098B'              	comf	___awdiv@quotient+1,f
 16555  0058' 0A8A'              	incf	___awdiv@quotient,f
 16556  0059' 1903               	skipnz
 16557  005A' 0A8B'              	incf	___awdiv@quotient+1,f
 16558  005B'                    l7058:	
 16559  005B' 080B'              	movf	___awdiv@quotient+1,w
 16560  005C' 0084'              	movwf	?___awdiv+1
 16561  005D' 080A'              	movf	___awdiv@quotient,w
 16562  005E' 0083'              	movwf	?___awdiv
 16563  005F'                    l2128:	
 16564  005F' 0008               	return
 16565  0060'                    __end_of___awdiv:	
 16566                           
 16567                           	psect	text32
 16568  0000'                    __ptext32:	
 16569 ;; *************** function _increment_subfield *****************
 16570 ;; Defined at:
 16571 ;;		line 528 in file "main.c"
 16572 ;; Parameters:    Size  Location     Type
 16573 ;;  limit           1    wreg     unsigned char 
 16574 ;;  init_val        2   18[BANK0 ] unsigned int 
 16575 ;; Auto vars:     Size  Location     Type
 16576 ;;  limit           1   22[BANK0 ] unsigned char 
 16577 ;;  _value          1   23[BANK0 ] unsigned char 
 16578 ;;  exit            1   21[BANK0 ] unsigned char 
 16579 ;; Return value:  Size  Location     Type
 16580 ;;                  1    wreg      unsigned char 
 16581 ;; Registers used:
 16582 ;;		wreg, status,2, status,0, pclath, cstack
 16583 ;; Tracked objects:
 16584 ;;		On entry : 0/0
 16585 ;;		On exit  : 0/0
 16586 ;;		Unchanged: 0/0
 16587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16588 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16589 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16590 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16591 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16592 ;;Total ram usage:        6 bytes
 16593 ;; Hardware stack levels used:    1
 16594 ;; Hardware stack levels required when called:    8
 16595 ;; This function calls:
 16596 ;;		_PWM6_LoadDutyValue
 16597 ;;		_checkDebounceSW1
 16598 ;;		_checkDebounceSW2
 16599 ;;		_representLed
 16600 ;; This function is called by:
 16601 ;;		_getSubfieldInfo
 16602 ;; This function uses a non-reentrant model
 16603 ;;
 16604                           
 16605                           
 16606                           ;psect for function _increment_subfield
 16607  0000'                    _increment_subfield:	
 16608                           
 16609                           ;incstack = 0
 16610                           ; Regs used in _increment_subfield: [wreg+status,2+status,0+pclath+cstack]
 16611                           ;increment_subfield@limit stored from wreg
 16612  0000' 0020               	movlb	0	; select bank0
 16613  0001' 0096'              	movwf	increment_subfield@limit
 16614  0002'                    l7100:	
 16615                           
 16616                           ;main.c: 530:     unsigned char exit = 0;
 16617  0002' 0195'              	clrf	increment_subfield@exit
 16618  0003'                    l7102:	
 16619                           
 16620                           ;main.c: 531:     unsigned char _value = init_val;
 16621  0003' 0812'              	movf	increment_subfield@init_val,w
 16622  0004' 0094'              	movwf	??_increment_subfield
 16623  0005' 0814'              	movf	??_increment_subfield,w
 16624  0006' 0097'              	movwf	increment_subfield@_value
 16625  0007'                    l7104:	
 16626                           
 16627                           ;main.c: 533:     PWM6_LoadDutyValue(0);
 16628  0007' 3000               	movlw	0
 16629  0008' 0089'              	movwf	PWM6_LoadDutyValue@dutyValue
 16630  0009' 008A'              	movwf	PWM6_LoadDutyValue@dutyValue+1
 16631  000A' 3180' 2000' 3180'  	fcall	_PWM6_LoadDutyValue
 16632  000D'                    l7106:	
 16633                           
 16634                           ;main.c: 534:     LATA = 0;
 16635  000D' 0020               	movlb	0	; select bank0
 16636  000E' 0196               	clrf	22	;volatile
 16637  000F'                    l7108:	
 16638                           
 16639                           ;main.c: 536:     if(_value > limit) _value = 0;
 16640  000F' 0817'              	movf	increment_subfield@_value,w
 16641  0010' 0216'              	subwf	increment_subfield@limit,w
 16642  0011' 1803               	skipnc
 16643  0012' 2800'              	goto	u4551
 16644  0013' 2800'              	goto	u4550
 16645  0014'                    u4551:	
 16646  0014' 2800'              	goto	l7134
 16647  0015'                    u4550:	
 16648  0015'                    l7110:	
 16649  0015' 0197'              	clrf	increment_subfield@_value
 16650  0016' 2800'              	goto	l7134
 16651  0017'                    l7112:	
 16652                           
 16653                           ;main.c: 539:      representLed(_value);
 16654  0017' 0817'              	movf	increment_subfield@_value,w
 16655  0018' 3180' 2000' 3180'  	fcall	_representLed
 16656  001B'                    l7114:	
 16657                           
 16658                           ;main.c: 540:         if(!PORTCbits.RC5){
 16659  001B' 0020               	movlb	0	; select bank0
 16660  001C' 1A8E               	btfsc	14,5	;volatile
 16661  001D' 2800'              	goto	u4561
 16662  001E' 2800'              	goto	u4560
 16663  001F'                    u4561:	
 16664  001F' 2800'              	goto	l7126
 16665  0020'                    u4560:	
 16666  0020'                    l7116:	
 16667                           
 16668                           ;main.c: 541:             if(checkDebounceSW2()){
 16669  0020' 3180' 2000' 3180'  	fcall	_checkDebounceSW2
 16670  0023' 3A00               	xorlw	0
 16671  0024' 1903               	skipnz
 16672  0025' 2800'              	goto	u4571
 16673  0026' 2800'              	goto	u4570
 16674  0027'                    u4571:	
 16675  0027' 2800'              	goto	l7124
 16676  0028'                    u4570:	
 16677  0028'                    l7118:	
 16678                           
 16679                           ;main.c: 542:                 _value++;
 16680  0028' 3001               	movlw	1
 16681  0029' 0020               	movlb	0	; select bank0
 16682  002A' 0094'              	movwf	??_increment_subfield
 16683  002B' 0814'              	movf	??_increment_subfield,w
 16684  002C' 0797'              	addwf	increment_subfield@_value,f
 16685  002D'                    l7120:	
 16686                           
 16687                           ;main.c: 543:                 if(_value > limit) _value = 0;
 16688  002D' 0817'              	movf	increment_subfield@_value,w
 16689  002E' 0216'              	subwf	increment_subfield@limit,w
 16690  002F' 1803               	skipnc
 16691  0030' 2800'              	goto	u4581
 16692  0031' 2800'              	goto	u4580
 16693  0032'                    u4581:	
 16694  0032' 2800'              	goto	l7124
 16695  0033'                    u4580:	
 16696  0033'                    l7122:	
 16697  0033' 0197'              	clrf	increment_subfield@_value
 16698  0034'                    l7124:	
 16699                           
 16700                           ;main.c: 545:             last_ms2 = clkms;
 16701  0034' 0800'              	movf	_clkms,w	;volatile
 16702  0035' 0020               	movlb	0	; select bank0
 16703  0036' 0094'              	movwf	??_increment_subfield
 16704  0037' 0814'              	movf	??_increment_subfield,w
 16705  0038' 008B'              	movwf	_last_ms2
 16706  0039'                    l7126:	
 16707                           
 16708                           ;main.c: 548:         if(!PORTBbits.RB4){
 16709  0039' 1A0D               	btfsc	13,4	;volatile
 16710  003A' 2800'              	goto	u4591
 16711  003B' 2800'              	goto	u4590
 16712  003C'                    u4591:	
 16713  003C' 2800'              	goto	l7134
 16714  003D'                    u4590:	
 16715  003D'                    l7128:	
 16716                           
 16717                           ;main.c: 549:             if(checkDebounceSW1()){
 16718  003D' 3180' 2000' 3180'  	fcall	_checkDebounceSW1
 16719  0040' 3A00               	xorlw	0
 16720  0041' 1903               	skipnz
 16721  0042' 2800'              	goto	u4601
 16722  0043' 2800'              	goto	u4600
 16723  0044'                    u4601:	
 16724  0044' 2800'              	goto	l7132
 16725  0045'                    u4600:	
 16726  0045'                    l7130:	
 16727                           
 16728                           ;main.c: 550:                 exit = 1;
 16729  0045' 0020               	movlb	0	; select bank0
 16730  0046' 0195'              	clrf	increment_subfield@exit
 16731  0047' 0A95'              	incf	increment_subfield@exit,f
 16732  0048'                    l7132:	
 16733                           
 16734                           ;main.c: 552:             last_ms = clkms;
 16735  0048' 0800'              	movf	_clkms,w	;volatile
 16736  0049' 0020               	movlb	0	; select bank0
 16737  004A' 0094'              	movwf	??_increment_subfield
 16738  004B' 0814'              	movf	??_increment_subfield,w
 16739  004C' 008C'              	movwf	_last_ms
 16740  004D'                    l7134:	
 16741                           
 16742                           ;main.c: 538:     while(exit == 0){
 16743  004D' 0815'              	movf	increment_subfield@exit,w
 16744  004E' 1903               	btfsc	3,2
 16745  004F' 2800'              	goto	u4611
 16746  0050' 2800'              	goto	u4610
 16747  0051'                    u4611:	
 16748  0051' 2800'              	goto	l7112
 16749  0052'                    u4610:	
 16750  0052'                    l7136:	
 16751                           
 16752                           ;main.c: 555: return _value;
 16753  0052' 0817'              	movf	increment_subfield@_value,w
 16754  0053'                    l1415:	
 16755  0053' 0008               	return
 16756  0054'                    __end_of_increment_subfield:	
 16757                           
 16758                           	psect	text33
 16759  0000'                    __ptext33:	
 16760 ;; *************** function _representLed *****************
 16761 ;; Defined at:
 16762 ;;		line 134 in file "leds.c"
 16763 ;; Parameters:    Size  Location     Type
 16764 ;;  val             1    wreg     unsigned char 
 16765 ;; Auto vars:     Size  Location     Type
 16766 ;;  val             1   16[BANK0 ] unsigned char 
 16767 ;;  aux             1   17[BANK0 ] unsigned char 
 16768 ;; Return value:  Size  Location     Type
 16769 ;;                  1    wreg      void 
 16770 ;; Registers used:
 16771 ;;		wreg, status,2, status,0, pclath, cstack
 16772 ;; Tracked objects:
 16773 ;;		On entry : 0/0
 16774 ;;		On exit  : 0/0
 16775 ;;		Unchanged: 0/0
 16776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16778 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16779 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16780 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16781 ;;Total ram usage:        5 bytes
 16782 ;; Hardware stack levels used:    1
 16783 ;; Hardware stack levels required when called:    7
 16784 ;; This function calls:
 16785 ;;		_PWM6_LoadDutyValue
 16786 ;;		___wmul
 16787 ;; This function is called by:
 16788 ;;		_increment_subfield
 16789 ;; This function uses a non-reentrant model
 16790 ;;
 16791                           
 16792                           
 16793                           ;psect for function _representLed
 16794  0000'                    _representLed:	
 16795                           
 16796                           ;incstack = 0
 16797                           ; Regs used in _representLed: [wreg+status,2+status,0+pclath+cstack]
 16798                           ;representLed@val stored from wreg
 16799  0000' 0020               	movlb	0	; select bank0
 16800  0001' 0090'              	movwf	representLed@val
 16801  0002'                    l7006:	
 16802                           
 16803                           ;leds.c: 134: void representLed(unsigned char val);leds.c: 135: {;leds.c: 136:     unsig
      +                          ned char aux = val;
 16804  0002' 0810'              	movf	representLed@val,w
 16805  0003' 008D'              	movwf	??_representLed
 16806  0004' 080D'              	movf	??_representLed,w
 16807  0005' 0091'              	movwf	representLed@aux
 16808                           
 16809                           ;leds.c: 137:     if(val > 99)
 16810  0006' 3064               	movlw	100
 16811  0007' 0210'              	subwf	representLed@val,w
 16812  0008' 1C03               	skipc
 16813  0009' 2800'              	goto	u4421
 16814  000A' 2800'              	goto	u4420
 16815  000B'                    u4421:	
 16816  000B' 2800'              	goto	l7010
 16817  000C'                    u4420:	
 16818  000C' 2800'              	goto	l1733
 16819  000D'                    l7010:	
 16820                           
 16821                           ;leds.c: 140:     LATAbits.LATA7 = aux >> 3;
 16822  000D' 0811'              	movf	representLed@aux,w
 16823  000E' 008D'              	movwf	??_representLed
 16824  000F' 3003               	movlw	3
 16825  0010'                    u4435:	
 16826  0010' 368D'              	lsrf	??_representLed,f
 16827  0011' 0B89               	decfsz	9,f
 16828  0012' 2800'              	goto	u4435
 16829  0013' 080D'              	movf	??_representLed,w
 16830  0014' 008E'              	movwf	??_representLed+1
 16831  0015' 0C8E'              	rrf	??_representLed+1,f
 16832  0016' 0C8E'              	rrf	??_representLed+1,f
 16833  0017' 0816               	movf	22,w	;volatile
 16834  0018' 060E'              	xorwf	??_representLed+1,w
 16835  0019' 397F               	andlw	-129
 16836  001A' 060E'              	xorwf	??_representLed+1,w
 16837  001B' 0096               	movwf	22	;volatile
 16838  001C'                    l7012:	
 16839                           
 16840                           ;leds.c: 141:     PWM6_LoadDutyValue(((aux >> 2) & 1)*1023);
 16841  001C' 0811'              	movf	representLed@aux,w
 16842  001D' 008D'              	movwf	??_representLed
 16843  001E' 3002               	movlw	2
 16844  001F'                    u4445:	
 16845  001F' 368D'              	lsrf	??_representLed,f
 16846  0020' 0B89               	decfsz	9,f
 16847  0021' 2800'              	goto	u4445
 16848  0022' 080D'              	movf	??_representLed,w
 16849  0023' 3901               	andlw	1
 16850  0024' 008E'              	movwf	??_representLed+1
 16851  0025' 018F'              	clrf	??_representLed+2
 16852  0026' 080E'              	movf	??_representLed+1,w
 16853  0027' 0083'              	movwf	___wmul@multiplier
 16854  0028' 080F'              	movf	??_representLed+2,w
 16855  0029' 0084'              	movwf	___wmul@multiplier+1
 16856  002A' 30FF               	movlw	255
 16857  002B' 0085'              	movwf	___wmul@multiplicand
 16858  002C' 3003               	movlw	3
 16859  002D' 0086'              	movwf	___wmul@multiplicand+1
 16860  002E' 3180' 2000' 3180'  	fcall	___wmul
 16861  0031' 0020               	movlb	0	; select bank0
 16862  0032' 0804'              	movf	?___wmul+1,w
 16863  0033' 008A'              	movwf	PWM6_LoadDutyValue@dutyValue+1
 16864  0034' 0803'              	movf	?___wmul,w
 16865  0035' 0089'              	movwf	PWM6_LoadDutyValue@dutyValue
 16866  0036' 3180' 2000' 3180'  	fcall	_PWM6_LoadDutyValue
 16867  0039'                    l7014:	
 16868                           
 16869                           ;leds.c: 142:     LATAbits.LATA5 = aux >> 1;
 16870  0039' 0020               	movlb	0	; select bank0
 16871  003A' 3611'              	lsrf	representLed@aux,w
 16872  003B' 008D'              	movwf	??_representLed
 16873  003C' 0E8D'              	swapf	??_representLed,f
 16874  003D' 0D8D'              	rlf	??_representLed,f
 16875  003E' 0816               	movf	22,w	;volatile
 16876  003F' 060D'              	xorwf	??_representLed,w
 16877  0040' 39DF               	andlw	-33
 16878  0041' 060D'              	xorwf	??_representLed,w
 16879  0042' 0096               	movwf	22	;volatile
 16880  0043'                    l7016:	
 16881                           
 16882                           ;leds.c: 143:     LATAbits.LATA4 = aux & 1;
 16883  0043' 0811'              	movf	representLed@aux,w
 16884  0044' 3901               	andlw	1
 16885  0045' 008D'              	movwf	??_representLed
 16886  0046' 0E8D'              	swapf	??_representLed,f
 16887  0047' 0816               	movf	22,w	;volatile
 16888  0048' 060D'              	xorwf	??_representLed,w
 16889  0049' 39EF               	andlw	-17
 16890  004A' 060D'              	xorwf	??_representLed,w
 16891  004B' 0096               	movwf	22	;volatile
 16892  004C'                    l1733:	
 16893  004C' 0008               	return
 16894  004D'                    __end_of_representLed:	
 16895                           
 16896                           	psect	text34
 16897  0000'                    __ptext34:	
 16898 ;; *************** function ___wmul *****************
 16899 ;; Defined at:
 16900 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 16901 ;; Parameters:    Size  Location     Type
 16902 ;;  multiplier      2    3[BANK0 ] unsigned int 
 16903 ;;  multiplicand    2    5[BANK0 ] unsigned int 
 16904 ;; Auto vars:     Size  Location     Type
 16905 ;;  product         2    7[BANK0 ] unsigned int 
 16906 ;; Return value:  Size  Location     Type
 16907 ;;                  2    3[BANK0 ] unsigned int 
 16908 ;; Registers used:
 16909 ;;		wreg, status,2, status,0
 16910 ;; Tracked objects:
 16911 ;;		On entry : 0/0
 16912 ;;		On exit  : 0/0
 16913 ;;		Unchanged: 0/0
 16914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16915 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16916 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16918 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16919 ;;Total ram usage:        6 bytes
 16920 ;; Hardware stack levels used:    1
 16921 ;; Hardware stack levels required when called:    6
 16922 ;; This function calls:
 16923 ;;		Nothing
 16924 ;; This function is called by:
 16925 ;;		_representLed
 16926 ;; This function uses a non-reentrant model
 16927 ;;
 16928                           
 16929                           
 16930                           ;psect for function ___wmul
 16931  0000'                    ___wmul:	
 16932  0000'                    l6946:	
 16933                           ;incstack = 0
 16934                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16935                           
 16936  0000' 0020               	movlb	0	; select bank0
 16937  0001' 0187'              	clrf	___wmul@product
 16938  0002' 0188'              	clrf	___wmul@product+1
 16939  0003'                    l6948:	
 16940  0003' 1C03'              	btfss	___wmul@multiplier,0
 16941  0004' 2800'              	goto	u4321
 16942  0005' 2800'              	goto	u4320
 16943  0006'                    u4321:	
 16944  0006' 2800'              	goto	l1975
 16945  0007'                    u4320:	
 16946  0007'                    l6950:	
 16947  0007' 0805'              	movf	___wmul@multiplicand,w
 16948  0008' 0787'              	addwf	___wmul@product,f
 16949  0009' 0806'              	movf	___wmul@multiplicand+1,w
 16950  000A' 3D88'              	addwfc	___wmul@product+1,f
 16951  000B'                    l1975:	
 16952  000B' 3001               	movlw	1
 16953  000C'                    u4335:	
 16954  000C' 3585'              	lslf	___wmul@multiplicand,f
 16955  000D' 0D86'              	rlf	___wmul@multiplicand+1,f
 16956  000E' 0B89               	decfsz	9,f
 16957  000F' 2800'              	goto	u4335
 16958  0010'                    l6952:	
 16959  0010' 3001               	movlw	1
 16960  0011'                    u4345:	
 16961  0011' 3684'              	lsrf	___wmul@multiplier+1,f
 16962  0012' 0C83'              	rrf	___wmul@multiplier,f
 16963  0013' 0B89               	decfsz	9,f
 16964  0014' 2800'              	goto	u4345
 16965  0015'                    l6954:	
 16966  0015' 0803'              	movf	___wmul@multiplier,w
 16967  0016' 0404'              	iorwf	___wmul@multiplier+1,w
 16968  0017' 1D03               	btfss	3,2
 16969  0018' 2800'              	goto	u4351
 16970  0019' 2800'              	goto	u4350
 16971  001A'                    u4351:	
 16972  001A' 2800'              	goto	l6948
 16973  001B'                    u4350:	
 16974  001B'                    l6956:	
 16975  001B' 0808'              	movf	___wmul@product+1,w
 16976  001C' 0084'              	movwf	?___wmul+1
 16977  001D' 0807'              	movf	___wmul@product,w
 16978  001E' 0083'              	movwf	?___wmul
 16979  001F'                    l1977:	
 16980  001F' 0008               	return
 16981  0020'                    __end_of___wmul:	
 16982                           
 16983                           	psect	text35
 16984  0000'                    __ptext35:	
 16985 ;; *************** function _checkDebounceSW2 *****************
 16986 ;; Defined at:
 16987 ;;		line 650 in file "main.c"
 16988 ;; Parameters:    Size  Location     Type
 16989 ;;		None
 16990 ;; Auto vars:     Size  Location     Type
 16991 ;;		None
 16992 ;; Return value:  Size  Location     Type
 16993 ;;                  1    wreg      unsigned char 
 16994 ;; Registers used:
 16995 ;;		wreg, status,2, status,0
 16996 ;; Tracked objects:
 16997 ;;		On entry : 0/0
 16998 ;;		On exit  : 0/0
 16999 ;;		Unchanged: 0/0
 17000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17003 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17004 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17005 ;;Total ram usage:        7 bytes
 17006 ;; Hardware stack levels used:    1
 17007 ;; Hardware stack levels required when called:    6
 17008 ;; This function calls:
 17009 ;;		Nothing
 17010 ;; This function is called by:
 17011 ;;		_config_routine
 17012 ;;		_selectSubfield
 17013 ;;		_increment_subfield
 17014 ;; This function uses a non-reentrant model
 17015 ;;
 17016                           
 17017                           
 17018                           ;psect for function _checkDebounceSW2
 17019  0000'                    _checkDebounceSW2:	
 17020  0000'                    l6986:	
 17021                           ;incstack = 0
 17022                           ; Regs used in _checkDebounceSW2: [wreg+status,2+status,0]
 17023                           
 17024                           
 17025                           ;main.c: 653:     if(clkms - last_ms2 < 0){
 17026  0000' 0800'              	movf	_clkms,w	;volatile
 17027  0001' 0020               	movlb	0	; select bank0
 17028  0002' 0083'              	movwf	??_checkDebounceSW2
 17029  0003' 0184'              	clrf	??_checkDebounceSW2+1
 17030  0004' 0804'              	movf	??_checkDebounceSW2+1,w
 17031  0005' 0086'              	movwf	??_checkDebounceSW2+3
 17032  0006' 080B'              	movf	_last_ms2,w
 17033  0007' 0203'              	subwf	??_checkDebounceSW2,w
 17034  0008' 0085'              	movwf	??_checkDebounceSW2+2
 17035  0009' 1C03               	skipc
 17036  000A' 0386'              	decf	??_checkDebounceSW2+3,f
 17037  000B' 1F86'              	btfss	??_checkDebounceSW2+3,7
 17038  000C' 2800'              	goto	u4391
 17039  000D' 2800'              	goto	u4390
 17040  000E'                    u4391:	
 17041  000E' 2800'              	goto	l6994
 17042  000F'                    u4390:	
 17043  000F'                    l6988:	
 17044                           
 17045                           ;main.c: 655:         if ((200 - last_ms2)+ clkms > 15 ){
 17046  000F' 0800'              	movf	_clkms,w	;volatile
 17047  0010' 0083'              	movwf	??_checkDebounceSW2
 17048  0011' 0184'              	clrf	??_checkDebounceSW2+1
 17049  0012' 0804'              	movf	??_checkDebounceSW2+1,w
 17050  0013' 0086'              	movwf	??_checkDebounceSW2+3
 17051  0014' 080B'              	movf	_last_ms2,w
 17052  0015' 0203'              	subwf	??_checkDebounceSW2,w
 17053  0016' 0085'              	movwf	??_checkDebounceSW2+2
 17054  0017' 1C03               	skipc
 17055  0018' 0386'              	decf	??_checkDebounceSW2+3,f
 17056  0019' 0805'              	movf	??_checkDebounceSW2+2,w
 17057  001A' 3EC8               	addlw	200
 17058  001B' 0087'              	movwf	??_checkDebounceSW2+4
 17059  001C' 3000               	movlw	0
 17060  001D' 3D06'              	addwfc	??_checkDebounceSW2+3,w
 17061  001E' 0088'              	movwf	??_checkDebounceSW2+5
 17062  001F' 0808'              	movf	??_checkDebounceSW2+5,w
 17063  0020' 3A80               	xorlw	128
 17064  0021' 0089'              	movwf	??_checkDebounceSW2+6
 17065  0022' 3080               	movlw	128
 17066  0023' 0209'              	subwf	??_checkDebounceSW2+6,w
 17067  0024' 1D03               	skipz
 17068  0025' 2800'              	goto	u4405
 17069  0026' 3010               	movlw	16
 17070  0027' 0207'              	subwf	??_checkDebounceSW2+4,w
 17071  0028'                    u4405:	
 17072  0028' 1C03               	skipc
 17073  0029' 2800'              	goto	u4401
 17074  002A' 2800'              	goto	u4400
 17075  002B'                    u4401:	
 17076  002B' 2800'              	goto	l6994
 17077  002C'                    u4400:	
 17078  002C'                    l6990:	
 17079                           
 17080                           ;main.c: 656:             last_ms2 = clkms;
 17081  002C' 0800'              	movf	_clkms,w	;volatile
 17082  002D' 0020               	movlb	0	; select bank0
 17083  002E' 0083'              	movwf	??_checkDebounceSW2
 17084  002F' 0803'              	movf	??_checkDebounceSW2,w
 17085  0030' 008B'              	movwf	_last_ms2
 17086                           
 17087                           ;main.c: 657:             return 1;
 17088  0031' 3001               	movlw	1
 17089  0032' 2800'              	goto	l1445
 17090  0033'                    l6994:	
 17091                           
 17092                           ;main.c: 661:     if(clkms - last_ms2 < 15){
 17093  0033' 0800'              	movf	_clkms,w	;volatile
 17094  0034' 0020               	movlb	0	; select bank0
 17095  0035' 0083'              	movwf	??_checkDebounceSW2
 17096  0036' 0184'              	clrf	??_checkDebounceSW2+1
 17097  0037' 0804'              	movf	??_checkDebounceSW2+1,w
 17098  0038' 0086'              	movwf	??_checkDebounceSW2+3
 17099  0039' 080B'              	movf	_last_ms2,w
 17100  003A' 0203'              	subwf	??_checkDebounceSW2,w
 17101  003B' 0085'              	movwf	??_checkDebounceSW2+2
 17102  003C' 1C03               	skipc
 17103  003D' 0386'              	decf	??_checkDebounceSW2+3,f
 17104  003E' 0806'              	movf	??_checkDebounceSW2+3,w
 17105  003F' 3A80               	xorlw	128
 17106  0040' 0087'              	movwf	??_checkDebounceSW2+4
 17107  0041' 3080               	movlw	128
 17108  0042' 0207'              	subwf	??_checkDebounceSW2+4,w
 17109  0043' 1D03               	skipz
 17110  0044' 2800'              	goto	u4415
 17111  0045' 300F               	movlw	15
 17112  0046' 0205'              	subwf	??_checkDebounceSW2+2,w
 17113  0047'                    u4415:	
 17114  0047' 1803               	skipnc
 17115  0048' 2800'              	goto	u4411
 17116  0049' 2800'              	goto	u4410
 17117  004A'                    u4411:	
 17118  004A' 2800'              	goto	l6990
 17119  004B'                    u4410:	
 17120  004B'                    l6996:	
 17121                           
 17122                           ;main.c: 662:         return 0;
 17123  004B' 3000               	movlw	0
 17124  004C'                    l1445:	
 17125  004C' 0008               	return
 17126  004D'                    __end_of_checkDebounceSW2:	
 17127                           
 17128                           	psect	text36
 17129  0000'                    __ptext36:	
 17130 ;; *************** function _checkDebounceSW1 *****************
 17131 ;; Defined at:
 17132 ;;		line 621 in file "main.c"
 17133 ;; Parameters:    Size  Location     Type
 17134 ;;		None
 17135 ;; Auto vars:     Size  Location     Type
 17136 ;;		None
 17137 ;; Return value:  Size  Location     Type
 17138 ;;                  1    wreg      unsigned char 
 17139 ;; Registers used:
 17140 ;;		wreg, status,2, status,0
 17141 ;; Tracked objects:
 17142 ;;		On entry : 0/0
 17143 ;;		On exit  : 0/0
 17144 ;;		Unchanged: 0/0
 17145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17148 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17149 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17150 ;;Total ram usage:        7 bytes
 17151 ;; Hardware stack levels used:    1
 17152 ;; Hardware stack levels required when called:    6
 17153 ;; This function calls:
 17154 ;;		Nothing
 17155 ;; This function is called by:
 17156 ;;		_config_routine
 17157 ;;		_selectSubfield
 17158 ;;		_increment_subfield
 17159 ;; This function uses a non-reentrant model
 17160 ;;
 17161                           
 17162                           
 17163                           ;psect for function _checkDebounceSW1
 17164  0000'                    _checkDebounceSW1:	
 17165  0000'                    l6960:	
 17166                           ;incstack = 0
 17167                           ; Regs used in _checkDebounceSW1: [wreg+status,2+status,0]
 17168                           
 17169                           
 17170                           ;main.c: 622:     PIE4bits.TMR1IE = 0;
 17171  0000' 002E               	movlb	14	; select bank14
 17172  0001' 101A               	bcf	26,0	;volatile
 17173  0002'                    l6962:	
 17174                           
 17175                           ;main.c: 624:     if(clkms - last_ms < 0){
 17176  0002' 0800'              	movf	_clkms,w	;volatile
 17177  0003' 0020               	movlb	0	; select bank0
 17178  0004' 0083'              	movwf	??_checkDebounceSW1
 17179  0005' 0184'              	clrf	??_checkDebounceSW1+1
 17180  0006' 0804'              	movf	??_checkDebounceSW1+1,w
 17181  0007' 0086'              	movwf	??_checkDebounceSW1+3
 17182  0008' 080C'              	movf	_last_ms,w
 17183  0009' 0203'              	subwf	??_checkDebounceSW1,w
 17184  000A' 0085'              	movwf	??_checkDebounceSW1+2
 17185  000B' 1C03               	skipc
 17186  000C' 0386'              	decf	??_checkDebounceSW1+3,f
 17187  000D' 1F86'              	btfss	??_checkDebounceSW1+3,7
 17188  000E' 2800'              	goto	u4361
 17189  000F' 2800'              	goto	u4360
 17190  0010'                    u4361:	
 17191  0010' 2800'              	goto	l6972
 17192  0011'                    u4360:	
 17193  0011'                    l6964:	
 17194                           
 17195                           ;main.c: 626:         if ((200 - last_ms)+ clkms > 15 ){
 17196  0011' 0800'              	movf	_clkms,w	;volatile
 17197  0012' 0083'              	movwf	??_checkDebounceSW1
 17198  0013' 0184'              	clrf	??_checkDebounceSW1+1
 17199  0014' 0804'              	movf	??_checkDebounceSW1+1,w
 17200  0015' 0086'              	movwf	??_checkDebounceSW1+3
 17201  0016' 080C'              	movf	_last_ms,w
 17202  0017' 0203'              	subwf	??_checkDebounceSW1,w
 17203  0018' 0085'              	movwf	??_checkDebounceSW1+2
 17204  0019' 1C03               	skipc
 17205  001A' 0386'              	decf	??_checkDebounceSW1+3,f
 17206  001B' 0805'              	movf	??_checkDebounceSW1+2,w
 17207  001C' 3EC8               	addlw	200
 17208  001D' 0087'              	movwf	??_checkDebounceSW1+4
 17209  001E' 3000               	movlw	0
 17210  001F' 3D06'              	addwfc	??_checkDebounceSW1+3,w
 17211  0020' 0088'              	movwf	??_checkDebounceSW1+5
 17212  0021' 0808'              	movf	??_checkDebounceSW1+5,w
 17213  0022' 3A80               	xorlw	128
 17214  0023' 0089'              	movwf	??_checkDebounceSW1+6
 17215  0024' 3080               	movlw	128
 17216  0025' 0209'              	subwf	??_checkDebounceSW1+6,w
 17217  0026' 1D03               	skipz
 17218  0027' 2800'              	goto	u4375
 17219  0028' 3010               	movlw	16
 17220  0029' 0207'              	subwf	??_checkDebounceSW1+4,w
 17221  002A'                    u4375:	
 17222  002A' 1C03               	skipc
 17223  002B' 2800'              	goto	u4371
 17224  002C' 2800'              	goto	u4370
 17225  002D'                    u4371:	
 17226  002D' 2800'              	goto	l6972
 17227  002E'                    u4370:	
 17228  002E'                    l6966:	
 17229                           
 17230                           ;main.c: 627:             last_ms = clkms;
 17231  002E' 0800'              	movf	_clkms,w	;volatile
 17232  002F' 0020               	movlb	0	; select bank0
 17233  0030' 0083'              	movwf	??_checkDebounceSW1
 17234  0031' 0803'              	movf	??_checkDebounceSW1,w
 17235  0032' 008C'              	movwf	_last_ms
 17236  0033'                    l6968:	
 17237                           
 17238                           ;main.c: 628:             PIE4bits.TMR1IE = 1;
 17239  0033' 002E               	movlb	14	; select bank14
 17240  0034' 141A               	bsf	26,0	;volatile
 17241                           
 17242                           ;main.c: 629:             return 1;
 17243  0035' 3001               	movlw	1
 17244  0036' 2800'              	goto	l1438
 17245  0037'                    l6972:	
 17246                           
 17247                           ;main.c: 633:     if(clkms - last_ms < 15){
 17248  0037' 0800'              	movf	_clkms,w	;volatile
 17249  0038' 0020               	movlb	0	; select bank0
 17250  0039' 0083'              	movwf	??_checkDebounceSW1
 17251  003A' 0184'              	clrf	??_checkDebounceSW1+1
 17252  003B' 0804'              	movf	??_checkDebounceSW1+1,w
 17253  003C' 0086'              	movwf	??_checkDebounceSW1+3
 17254  003D' 080C'              	movf	_last_ms,w
 17255  003E' 0203'              	subwf	??_checkDebounceSW1,w
 17256  003F' 0085'              	movwf	??_checkDebounceSW1+2
 17257  0040' 1C03               	skipc
 17258  0041' 0386'              	decf	??_checkDebounceSW1+3,f
 17259  0042' 0806'              	movf	??_checkDebounceSW1+3,w
 17260  0043' 3A80               	xorlw	128
 17261  0044' 0087'              	movwf	??_checkDebounceSW1+4
 17262  0045' 3080               	movlw	128
 17263  0046' 0207'              	subwf	??_checkDebounceSW1+4,w
 17264  0047' 1D03               	skipz
 17265  0048' 2800'              	goto	u4385
 17266  0049' 300F               	movlw	15
 17267  004A' 0205'              	subwf	??_checkDebounceSW1+2,w
 17268  004B'                    u4385:	
 17269  004B' 1803               	skipnc
 17270  004C' 2800'              	goto	u4381
 17271  004D' 2800'              	goto	u4380
 17272  004E'                    u4381:	
 17273  004E' 2800'              	goto	l6980
 17274  004F'                    u4380:	
 17275  004F'                    l6974:	
 17276                           
 17277                           ;main.c: 634:         return 0;
 17278  004F' 3000               	movlw	0
 17279  0050' 2800'              	goto	l1438
 17280  0051'                    l6980:	
 17281                           
 17282                           ;main.c: 637:         last_ms = clkms;
 17283  0051' 0800'              	movf	_clkms,w	;volatile
 17284  0052' 0020               	movlb	0	; select bank0
 17285  0053' 0083'              	movwf	??_checkDebounceSW1
 17286  0054' 0803'              	movf	??_checkDebounceSW1,w
 17287  0055' 008C'              	movwf	_last_ms
 17288  0056'                    l6982:	
 17289                           
 17290                           ;main.c: 638:         PIE4bits.TMR1IE = 1;
 17291  0056' 002E               	movlb	14	; select bank14
 17292  0057' 141A               	bsf	26,0	;volatile
 17293                           
 17294                           ;main.c: 639:         return 1;
 17295  0058' 3001               	movlw	1
 17296  0059'                    l1438:	
 17297  0059' 0008               	return
 17298  005A'                    __end_of_checkDebounceSW1:	
 17299                           
 17300                           	psect	text37
 17301  0000'                    __ptext37:	
 17302 ;; *************** function ___bmul *****************
 17303 ;; Defined at:
 17304 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8.c"
 17305 ;; Parameters:    Size  Location     Type
 17306 ;;  multiplier      1    wreg     unsigned char 
 17307 ;;  multiplicand    1    3[BANK0 ] unsigned char 
 17308 ;; Auto vars:     Size  Location     Type
 17309 ;;  multiplier      1    6[BANK0 ] unsigned char 
 17310 ;;  product         1    5[BANK0 ] unsigned char 
 17311 ;; Return value:  Size  Location     Type
 17312 ;;                  1    wreg      unsigned char 
 17313 ;; Registers used:
 17314 ;;		wreg, status,2, status,0
 17315 ;; Tracked objects:
 17316 ;;		On entry : 0/0
 17317 ;;		On exit  : 0/0
 17318 ;;		Unchanged: 0/0
 17319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17320 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17321 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17322 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17323 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17324 ;;Total ram usage:        4 bytes
 17325 ;; Hardware stack levels used:    1
 17326 ;; Hardware stack levels required when called:    6
 17327 ;; This function calls:
 17328 ;;		Nothing
 17329 ;; This function is called by:
 17330 ;;		_getSubfieldInfo
 17331 ;;		_read_ring
 17332 ;; This function uses a non-reentrant model
 17333 ;;
 17334                           
 17335                           
 17336                           ;psect for function ___bmul
 17337  0000'                    ___bmul:	
 17338                           
 17339                           ;incstack = 0
 17340                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 17341                           ;___bmul@multiplier stored from wreg
 17342  0000' 0020               	movlb	0	; select bank0
 17343  0001' 0086'              	movwf	___bmul@multiplier
 17344  0002'                    l7164:	
 17345  0002' 0185'              	clrf	___bmul@product
 17346  0003'                    l7166:	
 17347  0003' 1C06'              	btfss	___bmul@multiplier,0
 17348  0004' 2800'              	goto	u4641
 17349  0005' 2800'              	goto	u4640
 17350  0006'                    u4641:	
 17351  0006' 2800'              	goto	l7170
 17352  0007'                    u4640:	
 17353  0007'                    l7168:	
 17354  0007' 0803'              	movf	___bmul@multiplicand,w
 17355  0008' 0084'              	movwf	??___bmul
 17356  0009' 0804'              	movf	??___bmul,w
 17357  000A' 0785'              	addwf	___bmul@product,f
 17358  000B'                    l7170:	
 17359  000B' 1003               	clrc
 17360  000C' 0D83'              	rlf	___bmul@multiplicand,f
 17361  000D'                    l7172:	
 17362  000D' 1003               	clrc
 17363  000E' 0C86'              	rrf	___bmul@multiplier,f
 17364  000F' 0806'              	movf	___bmul@multiplier,w
 17365  0010' 1D03               	btfss	3,2
 17366  0011' 2800'              	goto	u4651
 17367  0012' 2800'              	goto	u4650
 17368  0013'                    u4651:	
 17369  0013' 2800'              	goto	l7166
 17370  0014'                    u4650:	
 17371  0014'                    l7174:	
 17372  0014' 0805'              	movf	___bmul@product,w
 17373  0015'                    l2001:	
 17374  0015' 0008               	return
 17375  0016'                    __end_of___bmul:	
 17376                           
 17377                           	psect	text38
 17378  0000'                    __ptext38:	
 17379 ;; *************** function ___awmod *****************
 17380 ;; Defined at:
 17381 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 17382 ;; Parameters:    Size  Location     Type
 17383 ;;  divisor         2    3[BANK0 ] int 
 17384 ;;  dividend        2    5[BANK0 ] int 
 17385 ;; Auto vars:     Size  Location     Type
 17386 ;;  sign            1    9[BANK0 ] unsigned char 
 17387 ;;  counter         1    8[BANK0 ] unsigned char 
 17388 ;; Return value:  Size  Location     Type
 17389 ;;                  2    3[BANK0 ] int 
 17390 ;; Registers used:
 17391 ;;		wreg, status,2, status,0
 17392 ;; Tracked objects:
 17393 ;;		On entry : 0/0
 17394 ;;		On exit  : 0/0
 17395 ;;		Unchanged: 0/0
 17396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17397 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17398 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17399 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17400 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17401 ;;Total ram usage:        7 bytes
 17402 ;; Hardware stack levels used:    1
 17403 ;; Hardware stack levels required when called:    6
 17404 ;; This function calls:
 17405 ;;		Nothing
 17406 ;; This function is called by:
 17407 ;;		_getSubfieldInfo
 17408 ;;		_recTempThresh
 17409 ;; This function uses a non-reentrant model
 17410 ;;
 17411                           
 17412                           
 17413                           ;psect for function ___awmod
 17414  0000'                    ___awmod:	
 17415  0000'                    l7178:	
 17416                           ;incstack = 0
 17417                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 17418                           
 17419  0000' 0020               	movlb	0	; select bank0
 17420  0001' 0189'              	clrf	___awmod@sign
 17421  0002'                    l7180:	
 17422  0002' 1F86'              	btfss	___awmod@dividend+1,7
 17423  0003' 2800'              	goto	u4661
 17424  0004' 2800'              	goto	u4660
 17425  0005'                    u4661:	
 17426  0005' 2800'              	goto	l7186
 17427  0006'                    u4660:	
 17428  0006'                    l7182:	
 17429  0006' 0985'              	comf	___awmod@dividend,f
 17430  0007' 0986'              	comf	___awmod@dividend+1,f
 17431  0008' 0A85'              	incf	___awmod@dividend,f
 17432  0009' 1903               	skipnz
 17433  000A' 0A86'              	incf	___awmod@dividend+1,f
 17434  000B'                    l7184:	
 17435  000B' 0189'              	clrf	___awmod@sign
 17436  000C' 0A89'              	incf	___awmod@sign,f
 17437  000D'                    l7186:	
 17438  000D' 1F84'              	btfss	___awmod@divisor+1,7
 17439  000E' 2800'              	goto	u4671
 17440  000F' 2800'              	goto	u4670
 17441  0010'                    u4671:	
 17442  0010' 2800'              	goto	l7190
 17443  0011'                    u4670:	
 17444  0011'                    l7188:	
 17445  0011' 0983'              	comf	___awmod@divisor,f
 17446  0012' 0984'              	comf	___awmod@divisor+1,f
 17447  0013' 0A83'              	incf	___awmod@divisor,f
 17448  0014' 1903               	skipnz
 17449  0015' 0A84'              	incf	___awmod@divisor+1,f
 17450  0016'                    l7190:	
 17451  0016' 0803'              	movf	___awmod@divisor,w
 17452  0017' 0404'              	iorwf	___awmod@divisor+1,w
 17453  0018' 1903               	btfsc	3,2
 17454  0019' 2800'              	goto	u4681
 17455  001A' 2800'              	goto	u4680
 17456  001B'                    u4681:	
 17457  001B' 2800'              	goto	l7208
 17458  001C'                    u4680:	
 17459  001C'                    l7192:	
 17460  001C' 0188'              	clrf	___awmod@counter
 17461  001D' 0A88'              	incf	___awmod@counter,f
 17462  001E' 2800'              	goto	l7198
 17463  001F'                    l7194:	
 17464  001F' 3001               	movlw	1
 17465  0020'                    u4695:	
 17466  0020' 3583'              	lslf	___awmod@divisor,f
 17467  0021' 0D84'              	rlf	___awmod@divisor+1,f
 17468  0022' 0B89               	decfsz	9,f
 17469  0023' 2800'              	goto	u4695
 17470  0024'                    l7196:	
 17471  0024' 3001               	movlw	1
 17472  0025' 0087'              	movwf	??___awmod
 17473  0026' 0807'              	movf	??___awmod,w
 17474  0027' 0788'              	addwf	___awmod@counter,f
 17475  0028'                    l7198:	
 17476  0028' 1F84'              	btfss	___awmod@divisor+1,7
 17477  0029' 2800'              	goto	u4701
 17478  002A' 2800'              	goto	u4700
 17479  002B'                    u4701:	
 17480  002B' 2800'              	goto	l7194
 17481  002C'                    u4700:	
 17482  002C'                    l7200:	
 17483  002C' 0804'              	movf	___awmod@divisor+1,w
 17484  002D' 0206'              	subwf	___awmod@dividend+1,w
 17485  002E' 1D03               	skipz
 17486  002F' 2800'              	goto	u4715
 17487  0030' 0803'              	movf	___awmod@divisor,w
 17488  0031' 0205'              	subwf	___awmod@dividend,w
 17489  0032'                    u4715:	
 17490  0032' 1C03               	skipc
 17491  0033' 2800'              	goto	u4711
 17492  0034' 2800'              	goto	u4710
 17493  0035'                    u4711:	
 17494  0035' 2800'              	goto	l7204
 17495  0036'                    u4710:	
 17496  0036'                    l7202:	
 17497  0036' 0803'              	movf	___awmod@divisor,w
 17498  0037' 0285'              	subwf	___awmod@dividend,f
 17499  0038' 0804'              	movf	___awmod@divisor+1,w
 17500  0039' 3B86'              	subwfb	___awmod@dividend+1,f
 17501  003A'                    l7204:	
 17502  003A' 3001               	movlw	1
 17503  003B'                    u4725:	
 17504  003B' 3684'              	lsrf	___awmod@divisor+1,f
 17505  003C' 0C83'              	rrf	___awmod@divisor,f
 17506  003D' 0B89               	decfsz	9,f
 17507  003E' 2800'              	goto	u4725
 17508  003F'                    l7206:	
 17509  003F' 3001               	movlw	1
 17510  0040' 0288'              	subwf	___awmod@counter,f
 17511  0041' 1D03               	btfss	3,2
 17512  0042' 2800'              	goto	u4731
 17513  0043' 2800'              	goto	u4730
 17514  0044'                    u4731:	
 17515  0044' 2800'              	goto	l7200
 17516  0045'                    u4730:	
 17517  0045'                    l7208:	
 17518  0045' 0809'              	movf	___awmod@sign,w
 17519  0046' 1903               	btfsc	3,2
 17520  0047' 2800'              	goto	u4741
 17521  0048' 2800'              	goto	u4740
 17522  0049'                    u4741:	
 17523  0049' 2800'              	goto	l7212
 17524  004A'                    u4740:	
 17525  004A'                    l7210:	
 17526  004A' 0985'              	comf	___awmod@dividend,f
 17527  004B' 0986'              	comf	___awmod@dividend+1,f
 17528  004C' 0A85'              	incf	___awmod@dividend,f
 17529  004D' 1903               	skipnz
 17530  004E' 0A86'              	incf	___awmod@dividend+1,f
 17531  004F'                    l7212:	
 17532  004F' 0806'              	movf	___awmod@dividend+1,w
 17533  0050' 0084'              	movwf	?___awmod+1
 17534  0051' 0805'              	movf	___awmod@dividend,w
 17535  0052' 0083'              	movwf	?___awmod
 17536  0053'                    l2141:	
 17537  0053' 0008               	return
 17538  0054'                    __end_of___awmod:	
 17539                           
 17540                           	psect	text39
 17541  0000'                    __ptext39:	
 17542 ;; *************** function _all_LED *****************
 17543 ;; Defined at:
 17544 ;;		line 20 in file "leds.c"
 17545 ;; Parameters:    Size  Location     Type
 17546 ;;		None
 17547 ;; Auto vars:     Size  Location     Type
 17548 ;;		None
 17549 ;; Return value:  Size  Location     Type
 17550 ;;                  1    wreg      void 
 17551 ;; Registers used:
 17552 ;;		wreg, status,2, status,0, pclath, cstack
 17553 ;; Tracked objects:
 17554 ;;		On entry : 0/0
 17555 ;;		On exit  : 0/0
 17556 ;;		Unchanged: 0/0
 17557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17560 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17561 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17562 ;;Total ram usage:        1 bytes
 17563 ;; Hardware stack levels used:    1
 17564 ;; Hardware stack levels required when called:    7
 17565 ;; This function calls:
 17566 ;;		_PWM6_LoadDutyValue
 17567 ;; This function is called by:
 17568 ;;		_config_routine
 17569 ;;		_selectSubfield
 17570 ;; This function uses a non-reentrant model
 17571 ;;
 17572                           
 17573                           
 17574                           ;psect for function _all_LED
 17575  0000'                    _all_LED:	
 17576  0000'                    l1675:	
 17577                           ;incstack = 0
 17578                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 17579                           ;leds.c: 22:     do { LATAbits.LATA7 = 1; } while(0);
 17580                           
 17581  0000' 0020               	movlb	0	; select bank0
 17582  0001' 1796               	bsf	22,7	;volatile
 17583  0002'                    l7244:	
 17584                           
 17585                           ;leds.c: 23:     _delay((unsigned long)((100)*(1000000/4000.0)));
 17586  0002' 3021               	movlw	33
 17587  0003' 0020               	movlb	0	; select bank0
 17588  0004' 008D'              	movwf	??_all_LED
 17589  0005' 3076               	movlw	118
 17590  0006'                    u5977:	
 17591  0006' 0B89               	decfsz	9,f
 17592  0007' 2800'              	goto	u5977
 17593  0008' 0B8D'              	decfsz	??_all_LED,f
 17594  0009' 2800'              	goto	u5977
 17595  000A' 0000               	nop
 17596  000B'                    l7246:	
 17597  000B' 0020               	movlb	0	; select bank0
 17598  000C' 1396               	bcf	22,7	;volatile
 17599  000D'                    l1678:	
 17600                           
 17601                           ;leds.c: 25:     _delay((unsigned long)((100)*(1000000/4000.0)));
 17602  000D' 3021               	movlw	33
 17603  000E' 0020               	movlb	0	; select bank0
 17604  000F' 008D'              	movwf	??_all_LED
 17605  0010' 3076               	movlw	118
 17606  0011'                    u5987:	
 17607  0011' 0B89               	decfsz	9,f
 17608  0012' 2800'              	goto	u5987
 17609  0013' 0B8D'              	decfsz	??_all_LED,f
 17610  0014' 2800'              	goto	u5987
 17611  0015' 0000               	nop
 17612  0016'                    l7248:	
 17613                           
 17614                           ;leds.c: 26:     PWM6_LoadDutyValue(1023);
 17615  0016' 30FF               	movlw	255
 17616  0017' 0020               	movlb	0	; select bank0
 17617  0018' 0089'              	movwf	PWM6_LoadDutyValue@dutyValue
 17618  0019' 3003               	movlw	3
 17619  001A' 008A'              	movwf	PWM6_LoadDutyValue@dutyValue+1
 17620  001B' 3180' 2000' 3180'  	fcall	_PWM6_LoadDutyValue
 17621  001E'                    l7250:	
 17622                           
 17623                           ;leds.c: 27:     _delay((unsigned long)((100)*(1000000/4000.0)));
 17624  001E' 3021               	movlw	33
 17625  001F' 0020               	movlb	0	; select bank0
 17626  0020' 008D'              	movwf	??_all_LED
 17627  0021' 3076               	movlw	118
 17628  0022'                    u5997:	
 17629  0022' 0B89               	decfsz	9,f
 17630  0023' 2800'              	goto	u5997
 17631  0024' 0B8D'              	decfsz	??_all_LED,f
 17632  0025' 2800'              	goto	u5997
 17633  0026' 0000               	nop
 17634                           
 17635                           ;leds.c: 28:     PWM6_LoadDutyValue(0);
 17636  0027' 3000               	movlw	0
 17637  0028' 0020               	movlb	0	; select bank0
 17638  0029' 0089'              	movwf	PWM6_LoadDutyValue@dutyValue
 17639  002A' 008A'              	movwf	PWM6_LoadDutyValue@dutyValue+1
 17640  002B' 3180' 2000' 3180'  	fcall	_PWM6_LoadDutyValue
 17641  002E'                    l7252:	
 17642                           
 17643                           ;leds.c: 29:     _delay((unsigned long)((100)*(1000000/4000.0)));
 17644  002E' 3021               	movlw	33
 17645  002F' 0020               	movlb	0	; select bank0
 17646  0030' 008D'              	movwf	??_all_LED
 17647  0031' 3076               	movlw	118
 17648  0032'                    u6007:	
 17649  0032' 0B89               	decfsz	9,f
 17650  0033' 2800'              	goto	u6007
 17651  0034' 0B8D'              	decfsz	??_all_LED,f
 17652  0035' 2800'              	goto	u6007
 17653  0036' 0000               	nop
 17654  0037'                    l7254:	
 17655  0037' 0020               	movlb	0	; select bank0
 17656  0038' 1696               	bsf	22,5	;volatile
 17657  0039'                    l7256:	
 17658                           
 17659                           ;leds.c: 31:     _delay((unsigned long)((100)*(1000000/4000.0)));
 17660  0039' 3021               	movlw	33
 17661  003A' 0020               	movlb	0	; select bank0
 17662  003B' 008D'              	movwf	??_all_LED
 17663  003C' 3076               	movlw	118
 17664  003D'                    u6017:	
 17665  003D' 0B89               	decfsz	9,f
 17666  003E' 2800'              	goto	u6017
 17667  003F' 0B8D'              	decfsz	??_all_LED,f
 17668  0040' 2800'              	goto	u6017
 17669  0041' 0000               	nop
 17670  0042'                    l7258:	
 17671  0042' 0020               	movlb	0	; select bank0
 17672  0043' 1296               	bcf	22,5	;volatile
 17673  0044'                    l7260:	
 17674                           
 17675                           ;leds.c: 33:     _delay((unsigned long)((100)*(1000000/4000.0)));
 17676  0044' 3021               	movlw	33
 17677  0045' 0020               	movlb	0	; select bank0
 17678  0046' 008D'              	movwf	??_all_LED
 17679  0047' 3076               	movlw	118
 17680  0048'                    u6027:	
 17681  0048' 0B89               	decfsz	9,f
 17682  0049' 2800'              	goto	u6027
 17683  004A' 0B8D'              	decfsz	??_all_LED,f
 17684  004B' 2800'              	goto	u6027
 17685  004C' 0000               	nop
 17686  004D'                    l7262:	
 17687  004D' 0020               	movlb	0	; select bank0
 17688  004E' 1616               	bsf	22,4	;volatile
 17689  004F'                    l7264:	
 17690                           
 17691                           ;leds.c: 35:     _delay((unsigned long)((100)*(1000000/4000.0)));
 17692  004F' 3021               	movlw	33
 17693  0050' 0020               	movlb	0	; select bank0
 17694  0051' 008D'              	movwf	??_all_LED
 17695  0052' 3076               	movlw	118
 17696  0053'                    u6037:	
 17697  0053' 0B89               	decfsz	9,f
 17698  0054' 2800'              	goto	u6037
 17699  0055' 0B8D'              	decfsz	??_all_LED,f
 17700  0056' 2800'              	goto	u6037
 17701  0057' 0000               	nop
 17702  0058'                    l7266:	
 17703  0058' 0020               	movlb	0	; select bank0
 17704  0059' 1216               	bcf	22,4	;volatile
 17705  005A'                    l1687:	
 17706  005A' 0008               	return
 17707  005B'                    __end_of_all_LED:	
 17708                           
 17709                           	psect	text40
 17710  0000'                    __ptext40:	
 17711 ;; *************** function _mode_select_LED *****************
 17712 ;; Defined at:
 17713 ;;		line 98 in file "leds.c"
 17714 ;; Parameters:    Size  Location     Type
 17715 ;;		None
 17716 ;; Auto vars:     Size  Location     Type
 17717 ;;		None
 17718 ;; Return value:  Size  Location     Type
 17719 ;;                  1    wreg      void 
 17720 ;; Registers used:
 17721 ;;		wreg, status,2, status,0, pclath, cstack
 17722 ;; Tracked objects:
 17723 ;;		On entry : 0/0
 17724 ;;		On exit  : 0/0
 17725 ;;		Unchanged: 0/0
 17726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17729 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17730 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17731 ;;Total ram usage:        1 bytes
 17732 ;; Hardware stack levels used:    1
 17733 ;; Hardware stack levels required when called:    7
 17734 ;; This function calls:
 17735 ;;		_PWM6_LoadDutyValue
 17736 ;; This function is called by:
 17737 ;;		_config_routine
 17738 ;; This function uses a non-reentrant model
 17739 ;;
 17740                           
 17741                           
 17742                           ;psect for function _mode_select_LED
 17743  0000'                    _mode_select_LED:	
 17744  0000'                    l7522:	
 17745                           ;incstack = 0
 17746                           ; Regs used in _mode_select_LED: [wreg+status,2+status,0+pclath+cstack]
 17747                           
 17748                           
 17749                           ;leds.c: 101:     PWM6_LoadDutyValue(1023);
 17750  0000' 30FF               	movlw	255
 17751  0001' 0020               	movlb	0	; select bank0
 17752  0002' 0089'              	movwf	PWM6_LoadDutyValue@dutyValue
 17753  0003' 3003               	movlw	3
 17754  0004' 008A'              	movwf	PWM6_LoadDutyValue@dutyValue+1
 17755  0005' 3180' 2000' 3180'  	fcall	_PWM6_LoadDutyValue
 17756  0008'                    l7524:	
 17757  0008' 0020               	movlb	0	; select bank0
 17758  0009' 1616               	bsf	22,4	;volatile
 17759  000A'                    l7526:	
 17760                           
 17761                           ;leds.c: 103:     _delay((unsigned long)((500)*(1000000/4000.0)));
 17762  000A' 30A3               	movlw	163
 17763  000B' 0020               	movlb	0	; select bank0
 17764  000C' 008D'              	movwf	??_mode_select_LED
 17765  000D' 3055               	movlw	85
 17766  000E'                    u6047:	
 17767  000E' 0B89               	decfsz	9,f
 17768  000F' 2800'              	goto	u6047
 17769  0010' 0B8D'              	decfsz	??_mode_select_LED,f
 17770  0011' 2800'              	goto	u6047
 17771  0012'                    l7528:	
 17772  0012' 0020               	movlb	0	; select bank0
 17773  0013' 1696               	bsf	22,5	;volatile
 17774  0014'                    l7530:	
 17775                           
 17776                           ;leds.c: 105:     _delay((unsigned long)((500)*(1000000/4000.0)));
 17777  0014' 30A3               	movlw	163
 17778  0015' 0020               	movlb	0	; select bank0
 17779  0016' 008D'              	movwf	??_mode_select_LED
 17780  0017' 3055               	movlw	85
 17781  0018'                    u6057:	
 17782  0018' 0B89               	decfsz	9,f
 17783  0019' 2800'              	goto	u6057
 17784  001A' 0B8D'              	decfsz	??_mode_select_LED,f
 17785  001B' 2800'              	goto	u6057
 17786  001C'                    l7532:	
 17787  001C' 0020               	movlb	0	; select bank0
 17788  001D' 1216               	bcf	22,4	;volatile
 17789  001E'                    l7534:	
 17790  001E' 1296               	bcf	22,5	;volatile
 17791  001F'                    l1719:	
 17792  001F' 0008               	return
 17793  0020'                    __end_of_mode_select_LED:	
 17794                           
 17795                           	psect	text41
 17796  0000'                    __ptext41:	
 17797 ;; *************** function _check_thresholds *****************
 17798 ;; Defined at:
 17799 ;;		line 303 in file "main.c"
 17800 ;; Parameters:    Size  Location     Type
 17801 ;;  threshold       1    wreg     unsigned char 
 17802 ;; Auto vars:     Size  Location     Type
 17803 ;;  threshold       1   14[BANK0 ] unsigned char 
 17804 ;; Return value:  Size  Location     Type
 17805 ;;                  1    wreg      void 
 17806 ;; Registers used:
 17807 ;;		wreg, status,2, status,0, pclath, cstack
 17808 ;; Tracked objects:
 17809 ;;		On entry : 0/0
 17810 ;;		On exit  : 0/0
 17811 ;;		Unchanged: 0/0
 17812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17815 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17817 ;;Total ram usage:        2 bytes
 17818 ;; Hardware stack levels used:    1
 17819 ;; Hardware stack levels required when called:    7
 17820 ;; This function calls:
 17821 ;;		_PWM6_LoadDutyValue
 17822 ;;		_TMR0_StartTimer
 17823 ;; This function is called by:
 17824 ;;		_main
 17825 ;; This function uses a non-reentrant model
 17826 ;;
 17827                           
 17828                           
 17829                           ;psect for function _check_thresholds
 17830  0000'                    _check_thresholds:	
 17831                           
 17832                           ;incstack = 0
 17833                           ; Regs used in _check_thresholds: [wreg+status,2+status,0+pclath+cstack]
 17834                           ;check_thresholds@threshold stored from wreg
 17835  0000' 0020               	movlb	0	; select bank0
 17836  0001' 008E'              	movwf	check_thresholds@threshold
 17837  0002'                    l7914:	
 17838                           
 17839                           ;main.c: 305:     if(threshold){
 17840  0002' 080E'              	movf	check_thresholds@threshold,w
 17841  0003' 1903               	btfsc	3,2
 17842  0004' 2800'              	goto	u5481
 17843  0005' 2800'              	goto	u5480
 17844  0006'                    u5481:	
 17845  0006' 2800'              	goto	l7930
 17846  0007'                    u5480:	
 17847  0007'                    l7916:	
 17848                           
 17849                           ;main.c: 306:             if(alarm == 2){
 17850  0007' 3002               	movlw	2
 17851  0008' 0606'              	xorwf	_alarm,w	;volatile
 17852  0009' 1D03               	btfss	3,2
 17853  000A' 2800'              	goto	u5491
 17854  000B' 2800'              	goto	u5490
 17855  000C'                    u5491:	
 17856  000C' 2800'              	goto	l7922
 17857  000D'                    u5490:	
 17858  000D'                    l7918:	
 17859                           
 17860                           ;main.c: 307:                 duty_cycle +=1 ;
 17861  000D' 3001               	movlw	1
 17862  000E' 0021               	movlb	1	; select bank1
 17863  000F' 0780'              	addwf	_duty_cycle^(0+128),f
 17864  0010' 3000               	movlw	0
 17865  0011' 3D80'              	addwfc	(_duty_cycle+1)^(0+128),f
 17866  0012'                    l7920:	
 17867                           
 17868                           ;main.c: 308:                 PWM6_LoadDutyValue(duty_cycle);
 17869  0012' 0800'              	movf	(_duty_cycle+1)^(0+128),w
 17870  0013' 0020               	movlb	0	; select bank0
 17871  0014' 008A'              	movwf	PWM6_LoadDutyValue@dutyValue+1
 17872  0015' 0021               	movlb	1	; select bank1
 17873  0016' 0800'              	movf	_duty_cycle^(0+128),w
 17874  0017' 0020               	movlb	0	; select bank0
 17875  0018' 0089'              	movwf	PWM6_LoadDutyValue@dutyValue
 17876  0019' 3180' 2000' 3180'  	fcall	_PWM6_LoadDutyValue
 17877                           
 17878                           ;main.c: 309:             }
 17879  001C' 2800'              	goto	l1340
 17880  001D'                    l7922:	
 17881  001D' 0806'              	movf	_alarm,w	;volatile
 17882  001E' 1D03               	btfss	3,2
 17883  001F' 2800'              	goto	u5501
 17884  0020' 2800'              	goto	u5500
 17885  0021'                    u5501:	
 17886  0021' 2800'              	goto	l1340
 17887  0022'                    u5500:	
 17888  0022'                    l7924:	
 17889                           
 17890                           ;main.c: 311:                 PIE0bits.TMR0IE = 1;
 17891  0022' 002E               	movlb	14	; select bank14
 17892  0023' 1696               	bsf	22,5	;volatile
 17893  0024'                    l7926:	
 17894                           
 17895                           ;main.c: 312:                 TMR0_StartTimer();
 17896  0024' 3180' 2000' 3180'  	fcall	_TMR0_StartTimer
 17897  0027'                    l7928:	
 17898                           
 17899                           ;main.c: 313:                 alarm = 2 ;
 17900  0027' 3002               	movlw	2
 17901  0028' 0020               	movlb	0	; select bank0
 17902  0029' 008D'              	movwf	??_check_thresholds
 17903  002A' 080D'              	movf	??_check_thresholds,w
 17904  002B' 0086'              	movwf	_alarm	;volatile
 17905  002C' 2800'              	goto	l1340
 17906  002D'                    l7930:	
 17907                           
 17908                           ;main.c: 317:         if(alarm == 2){
 17909  002D' 3002               	movlw	2
 17910  002E' 0606'              	xorwf	_alarm,w	;volatile
 17911  002F' 1D03               	btfss	3,2
 17912  0030' 2800'              	goto	u5511
 17913  0031' 2800'              	goto	u5510
 17914  0032'                    u5511:	
 17915  0032' 2800'              	goto	l1340
 17916  0033'                    u5510:	
 17917  0033'                    l7932:	
 17918                           
 17919                           ;main.c: 318:             PWM6_LoadDutyValue(0);
 17920  0033' 3000               	movlw	0
 17921  0034' 0089'              	movwf	PWM6_LoadDutyValue@dutyValue
 17922  0035' 008A'              	movwf	PWM6_LoadDutyValue@dutyValue+1
 17923  0036' 3180' 2000' 3180'  	fcall	_PWM6_LoadDutyValue
 17924  0039'                    l7934:	
 17925                           
 17926                           ;main.c: 319:             alarm = 0 ;
 17927  0039' 0020               	movlb	0	; select bank0
 17928  003A' 0186'              	clrf	_alarm	;volatile
 17929  003B'                    l1340:	
 17930  003B' 0008               	return
 17931  003C'                    __end_of_check_thresholds:	
 17932                           
 17933                           	psect	text42
 17934  0000'                    __ptext42:	
 17935 ;; *************** function _TMR0_StartTimer *****************
 17936 ;; Defined at:
 17937 ;;		line 87 in file "mcc_generated_files/tmr0.c"
 17938 ;; Parameters:    Size  Location     Type
 17939 ;;		None
 17940 ;; Auto vars:     Size  Location     Type
 17941 ;;		None
 17942 ;; Return value:  Size  Location     Type
 17943 ;;                  1    wreg      void 
 17944 ;; Registers used:
 17945 ;;		None
 17946 ;; Tracked objects:
 17947 ;;		On entry : 0/0
 17948 ;;		On exit  : 0/0
 17949 ;;		Unchanged: 0/0
 17950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17955 ;;Total ram usage:        0 bytes
 17956 ;; Hardware stack levels used:    1
 17957 ;; Hardware stack levels required when called:    6
 17958 ;; This function calls:
 17959 ;;		Nothing
 17960 ;; This function is called by:
 17961 ;;		_check_thresholds
 17962 ;; This function uses a non-reentrant model
 17963 ;;
 17964                           
 17965                           
 17966                           ;psect for function _TMR0_StartTimer
 17967  0000'                    _TMR0_StartTimer:	
 17968  0000'                    l7508:	
 17969                           ;incstack = 0
 17970                           ; Regs used in _TMR0_StartTimer: []
 17971                           
 17972                           
 17973                           ;mcc_generated_files/tmr0.c: 90:     T0CON0bits.T0EN = 1;
 17974  0000' 0020               	movlb	0	; select bank0
 17975  0001' 179E               	bsf	30,7	;volatile
 17976  0002'                    l878:	
 17977  0002' 0008               	return
 17978  0003'                    __end_of_TMR0_StartTimer:	
 17979                           
 17980                           	psect	text43
 17981  0000'                    __ptext43:	
 17982 ;; *************** function _PWM6_LoadDutyValue *****************
 17983 ;; Defined at:
 17984 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 17985 ;; Parameters:    Size  Location     Type
 17986 ;;  dutyValue       2    9[BANK0 ] unsigned short 
 17987 ;; Auto vars:     Size  Location     Type
 17988 ;;		None
 17989 ;; Return value:  Size  Location     Type
 17990 ;;                  1    wreg      void 
 17991 ;; Registers used:
 17992 ;;		wreg, status,2, status,0
 17993 ;; Tracked objects:
 17994 ;;		On entry : 0/0
 17995 ;;		On exit  : 0/0
 17996 ;;		Unchanged: 0/0
 17997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17998 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18000 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18001 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18002 ;;Total ram usage:        4 bytes
 18003 ;; Hardware stack levels used:    1
 18004 ;; Hardware stack levels required when called:    6
 18005 ;; This function calls:
 18006 ;;		Nothing
 18007 ;; This function is called by:
 18008 ;;		_main
 18009 ;;		_check_thresholds
 18010 ;;		_increment_subfield
 18011 ;;		_all_LED
 18012 ;;		_mod1_LED
 18013 ;;		_mod2_LED
 18014 ;;		_mod3_LED
 18015 ;;		_mod4_LED
 18016 ;;		_mode_select_LED
 18017 ;;		_representLed
 18018 ;; This function uses a non-reentrant model
 18019 ;;
 18020                           
 18021                           
 18022                           ;psect for function _PWM6_LoadDutyValue
 18023  0000'                    _PWM6_LoadDutyValue:	
 18024  0000'                    l6944:	
 18025                           ;incstack = 0
 18026                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 18027                           
 18028                           
 18029                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 18030  0000' 0020               	movlb	0	; select bank0
 18031  0001' 080A'              	movf	PWM6_LoadDutyValue@dutyValue+1,w
 18032  0002' 008C'              	movwf	??_PWM6_LoadDutyValue+1
 18033  0003' 0809'              	movf	PWM6_LoadDutyValue@dutyValue,w
 18034  0004' 008B'              	movwf	??_PWM6_LoadDutyValue
 18035  0005' 368C'              	lsrf	??_PWM6_LoadDutyValue+1,f
 18036  0006' 0C8B'              	rrf	??_PWM6_LoadDutyValue,f
 18037  0007' 368C'              	lsrf	??_PWM6_LoadDutyValue+1,f
 18038  0008' 0C8B'              	rrf	??_PWM6_LoadDutyValue,f
 18039  0009' 080B'              	movf	??_PWM6_LoadDutyValue,w
 18040  000A' 0027               	movlb	7	; select bank7
 18041  000B' 008D               	movwf	13	;volatile
 18042                           
 18043                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 18044  000C' 0020               	movlb	0	; select bank0
 18045  000D' 0809'              	movf	PWM6_LoadDutyValue@dutyValue,w
 18046  000E' 3903               	andlw	3
 18047  000F' 008B'              	movwf	??_PWM6_LoadDutyValue
 18048  0010' 3005               	movlw	5
 18049  0011'                    u4315:	
 18050  0011' 358B'              	lslf	??_PWM6_LoadDutyValue,f
 18051  0012' 3EFF               	addlw	-1
 18052  0013' 1D03               	skipz
 18053  0014' 2800'              	goto	u4315
 18054  0015' 350B'              	lslf	??_PWM6_LoadDutyValue,w
 18055  0016' 0027               	movlb	7	; select bank7
 18056  0017' 008C               	movwf	12	;volatile
 18057  0018'                    l978:	
 18058  0018' 0008               	return
 18059  0019'                    __end_of_PWM6_LoadDutyValue:	
 18060                           
 18061                           	psect	text44
 18062  0000'                    __ptext44:	
 18063 ;; *************** function _SYSTEM_Initialize *****************
 18064 ;; Defined at:
 18065 ;;		line 50 in file "mcc_generated_files/mcc.c"
 18066 ;; Parameters:    Size  Location     Type
 18067 ;;		None
 18068 ;; Auto vars:     Size  Location     Type
 18069 ;;		None
 18070 ;; Return value:  Size  Location     Type
 18071 ;;                  1    wreg      void 
 18072 ;; Registers used:
 18073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18074 ;; Tracked objects:
 18075 ;;		On entry : 0/0
 18076 ;;		On exit  : 0/0
 18077 ;;		Unchanged: 0/0
 18078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18083 ;;Total ram usage:        0 bytes
 18084 ;; Hardware stack levels used:    1
 18085 ;; Hardware stack levels required when called:    8
 18086 ;; This function calls:
 18087 ;;		_ADCC_Initialize
 18088 ;;		_EUSART_Initialize
 18089 ;;		_EXT_INT_Initialize
 18090 ;;		_OSCILLATOR_Initialize
 18091 ;;		_PIN_MANAGER_Initialize
 18092 ;;		_PMD_Initialize
 18093 ;;		_PWM6_Initialize
 18094 ;;		_TMR0_Initialize
 18095 ;;		_TMR1_Initialize
 18096 ;;		_TMR2_Initialize
 18097 ;; This function is called by:
 18098 ;;		_main
 18099 ;; This function uses a non-reentrant model
 18100 ;;
 18101                           
 18102                           
 18103                           ;psect for function _SYSTEM_Initialize
 18104  0000'                    _SYSTEM_Initialize:	
 18105  0000'                    l7720:	
 18106                           ;incstack = 0
 18107                           ; Regs used in _SYSTEM_Initialize: [allreg]
 18108                           
 18109                           
 18110                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 18111  0000' 3180' 2000' 3180'  	fcall	_PMD_Initialize
 18112  0003'                    l7722:	
 18113                           
 18114                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 18115  0003' 3180' 2000' 3180'  	fcall	_PIN_MANAGER_Initialize
 18116  0006'                    l7724:	
 18117                           
 18118                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 18119  0006' 3180' 2000' 3180'  	fcall	_OSCILLATOR_Initialize
 18120  0009'                    l7726:	
 18121                           
 18122                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 18123  0009' 3180' 2000' 3180'  	fcall	_PWM6_Initialize
 18124  000C'                    l7728:	
 18125                           
 18126                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 18127  000C' 3180' 2000' 3180'  	fcall	_ADCC_Initialize
 18128  000F'                    l7730:	
 18129                           
 18130                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 18131  000F' 3180' 2000' 3180'  	fcall	_TMR2_Initialize
 18132  0012'                    l7732:	
 18133                           
 18134                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 18135  0012' 3180' 2000' 3180'  	fcall	_EXT_INT_Initialize
 18136  0015'                    l7734:	
 18137                           
 18138                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
 18139  0015' 3180' 2000' 3180'  	fcall	_TMR1_Initialize
 18140  0018'                    l7736:	
 18141                           
 18142                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 18143  0018' 3180' 2000' 3180'  	fcall	_TMR0_Initialize
 18144  001B'                    l7738:	
 18145                           
 18146                           ;mcc_generated_files/mcc.c: 61:     EUSART_Initialize();
 18147  001B' 3180' 2000' 3180'  	fcall	_EUSART_Initialize
 18148  001E'                    l449:	
 18149  001E' 0008               	return
 18150  001F'                    __end_of_SYSTEM_Initialize:	
 18151                           
 18152                           	psect	text45
 18153  0000'                    __ptext45:	
 18154 ;; *************** function _TMR2_Initialize *****************
 18155 ;; Defined at:
 18156 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 18157 ;; Parameters:    Size  Location     Type
 18158 ;;		None
 18159 ;; Auto vars:     Size  Location     Type
 18160 ;;		None
 18161 ;; Return value:  Size  Location     Type
 18162 ;;                  1    wreg      void 
 18163 ;; Registers used:
 18164 ;;		wreg, status,2, status,0, pclath, cstack
 18165 ;; Tracked objects:
 18166 ;;		On entry : 0/0
 18167 ;;		On exit  : 0/0
 18168 ;;		Unchanged: 0/0
 18169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18174 ;;Total ram usage:        0 bytes
 18175 ;; Hardware stack levels used:    1
 18176 ;; Hardware stack levels required when called:    7
 18177 ;; This function calls:
 18178 ;;		_TMR2_SetInterruptHandler
 18179 ;; This function is called by:
 18180 ;;		_SYSTEM_Initialize
 18181 ;; This function uses a non-reentrant model
 18182 ;;
 18183                           
 18184                           
 18185                           ;psect for function _TMR2_Initialize
 18186  0000'                    _TMR2_Initialize:	
 18187  0000'                    l7450:	
 18188                           ;incstack = 0
 18189                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18190                           
 18191                           
 18192                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 18193  0000' 3001               	movlw	1
 18194  0001' 0025               	movlb	5	; select bank5
 18195  0002' 0090               	movwf	16	;volatile
 18196                           
 18197                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 18198  0003' 3020               	movlw	32
 18199  0004' 008F               	movwf	15	;volatile
 18200  0005'                    l7452:	
 18201                           
 18202                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 18203  0005' 0191               	clrf	17	;volatile
 18204  0006'                    l7454:	
 18205                           
 18206                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 18207  0006' 309B               	movlw	155
 18208  0007' 008D               	movwf	13	;volatile
 18209                           
 18210                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 18211  0008' 018C               	clrf	12	;volatile
 18212  0009'                    l7456:	
 18213                           
 18214                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 18215  0009' 002E               	movlb	14	; select bank14
 18216  000A' 1090               	bcf	16,1	;volatile
 18217  000B'                    l7458:	
 18218                           
 18219                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 18220  000B' 149A               	bsf	26,1	;volatile
 18221  000C'                    l7460:	
 18222                           
 18223                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 18224  000C' 3000'              	movlw	low _TMR2_DefaultInterruptHandler
 18225  000D' 0020               	movlb	0	; select bank0
 18226  000E' 0083'              	movwf	TMR2_SetInterruptHandler@InterruptHandler
 18227  000F' 3000'              	movlw	high _TMR2_DefaultInterruptHandler
 18228  0010' 0084'              	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 18229  0011' 3180' 2000' 3180'  	fcall	_TMR2_SetInterruptHandler
 18230  0014'                    l7462:	
 18231                           
 18232                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 18233  0014' 30B1               	movlw	177
 18234  0015' 0025               	movlb	5	; select bank5
 18235  0016' 008E               	movwf	14	;volatile
 18236  0017'                    l1060:	
 18237  0017' 0008               	return
 18238  0018'                    __end_of_TMR2_Initialize:	
 18239                           
 18240                           	psect	text46
 18241  0000'                    __ptext46:	
 18242 ;; *************** function _TMR2_SetInterruptHandler *****************
 18243 ;; Defined at:
 18244 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 18245 ;; Parameters:    Size  Location     Type
 18246 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 18247 ;;		 -> handler_clock_ms(1), TMR2_DefaultInterruptHandler(1), 
 18248 ;; Auto vars:     Size  Location     Type
 18249 ;;		None
 18250 ;; Return value:  Size  Location     Type
 18251 ;;                  1    wreg      void 
 18252 ;; Registers used:
 18253 ;;		wreg
 18254 ;; Tracked objects:
 18255 ;;		On entry : 0/0
 18256 ;;		On exit  : 0/0
 18257 ;;		Unchanged: 0/0
 18258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18259 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18262 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18263 ;;Total ram usage:        2 bytes
 18264 ;; Hardware stack levels used:    1
 18265 ;; Hardware stack levels required when called:    6
 18266 ;; This function calls:
 18267 ;;		Nothing
 18268 ;; This function is called by:
 18269 ;;		_TMR2_Initialize
 18270 ;;		_main
 18271 ;; This function uses a non-reentrant model
 18272 ;;
 18273                           
 18274                           
 18275                           ;psect for function _TMR2_SetInterruptHandler
 18276  0000'                    _TMR2_SetInterruptHandler:	
 18277  0000'                    l7242:	
 18278                           ;incstack = 0
 18279                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 18280                           
 18281                           
 18282                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 18283  0000' 0020               	movlb	0	; select bank0
 18284  0001' 0804'              	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 18285  0002' 0021               	movlb	1	; select bank1
 18286  0003' 0080'              	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 18287  0004' 0020               	movlb	0	; select bank0
 18288  0005' 0803'              	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 18289  0006' 0021               	movlb	1	; select bank1
 18290  0007' 0080'              	movwf	_TMR2_InterruptHandler^(0+128)
 18291  0008'                    l1103:	
 18292  0008' 0008               	return
 18293  0009'                    __end_of_TMR2_SetInterruptHandler:	
 18294                           
 18295                           	psect	text47
 18296  0000'                    __ptext47:	
 18297 ;; *************** function _TMR1_Initialize *****************
 18298 ;; Defined at:
 18299 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 18300 ;; Parameters:    Size  Location     Type
 18301 ;;		None
 18302 ;; Auto vars:     Size  Location     Type
 18303 ;;		None
 18304 ;; Return value:  Size  Location     Type
 18305 ;;                  1    wreg      void 
 18306 ;; Registers used:
 18307 ;;		wreg, status,2, status,0, pclath, cstack
 18308 ;; Tracked objects:
 18309 ;;		On entry : 0/0
 18310 ;;		On exit  : 0/0
 18311 ;;		Unchanged: 0/0
 18312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18317 ;;Total ram usage:        0 bytes
 18318 ;; Hardware stack levels used:    1
 18319 ;; Hardware stack levels required when called:    7
 18320 ;; This function calls:
 18321 ;;		_TMR1_SetInterruptHandler
 18322 ;; This function is called by:
 18323 ;;		_SYSTEM_Initialize
 18324 ;; This function uses a non-reentrant model
 18325 ;;
 18326                           
 18327                           
 18328                           ;psect for function _TMR1_Initialize
 18329  0000'                    _TMR1_Initialize:	
 18330  0000'                    l7464:	
 18331                           ;incstack = 0
 18332                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18333                           
 18334                           
 18335                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 18336  0000' 0024               	movlb	4	; select bank4
 18337  0001' 018F               	clrf	15	;volatile
 18338                           
 18339                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 18340  0002' 0190               	clrf	16	;volatile
 18341  0003'                    l7466:	
 18342                           
 18343                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 18344  0003' 3004               	movlw	4
 18345  0004' 0091               	movwf	17	;volatile
 18346  0005'                    l7468:	
 18347                           
 18348                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 18349  0005' 30E1               	movlw	225
 18350  0006' 008D               	movwf	13	;volatile
 18351  0007'                    l7470:	
 18352                           
 18353                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 18354  0007' 30BA               	movlw	186
 18355  0008' 008C               	movwf	12	;volatile
 18356  0009'                    l7472:	
 18357                           
 18358                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 18359  0009' 080D               	movf	13,w	;volatile
 18360  000A' 0020               	movlb	0	; select bank0
 18361  000B' 0081'              	movwf	_timer1ReloadVal+1	;volatile
 18362  000C' 0024               	movlb	4	; select bank4
 18363  000D' 080C               	movf	12,w	;volatile
 18364  000E' 0020               	movlb	0	; select bank0
 18365  000F' 0080'              	movwf	_timer1ReloadVal	;volatile
 18366  0010'                    l7474:	
 18367                           
 18368                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 18369  0010' 002E               	movlb	14	; select bank14
 18370  0011' 1010               	bcf	16,0	;volatile
 18371  0012'                    l7476:	
 18372                           
 18373                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 18374  0012' 141A               	bsf	26,0	;volatile
 18375  0013'                    l7478:	
 18376                           
 18377                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 18378  0013' 3000'              	movlw	low _TMR1_DefaultInterruptHandler
 18379  0014' 0020               	movlb	0	; select bank0
 18380  0015' 0083'              	movwf	TMR1_SetInterruptHandler@InterruptHandler
 18381  0016' 3000'              	movlw	high _TMR1_DefaultInterruptHandler
 18382  0017' 0084'              	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 18383  0018' 3180' 2000' 3180'  	fcall	_TMR1_SetInterruptHandler
 18384  001B'                    l7480:	
 18385                           
 18386                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 18387  001B' 3015               	movlw	21
 18388  001C' 0024               	movlb	4	; select bank4
 18389  001D' 008E               	movwf	14	;volatile
 18390  001E'                    l931:	
 18391  001E' 0008               	return
 18392  001F'                    __end_of_TMR1_Initialize:	
 18393                           
 18394                           	psect	text48
 18395  0000'                    __ptext48:	
 18396 ;; *************** function _TMR1_SetInterruptHandler *****************
 18397 ;; Defined at:
 18398 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 18399 ;; Parameters:    Size  Location     Type
 18400 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 18401 ;;		 -> handler_clock_hms(1), TMR1_DefaultInterruptHandler(1), 
 18402 ;; Auto vars:     Size  Location     Type
 18403 ;;		None
 18404 ;; Return value:  Size  Location     Type
 18405 ;;                  1    wreg      void 
 18406 ;; Registers used:
 18407 ;;		wreg
 18408 ;; Tracked objects:
 18409 ;;		On entry : 0/0
 18410 ;;		On exit  : 0/0
 18411 ;;		Unchanged: 0/0
 18412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18413 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18416 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18417 ;;Total ram usage:        2 bytes
 18418 ;; Hardware stack levels used:    1
 18419 ;; Hardware stack levels required when called:    6
 18420 ;; This function calls:
 18421 ;;		Nothing
 18422 ;; This function is called by:
 18423 ;;		_TMR1_Initialize
 18424 ;;		_main
 18425 ;; This function uses a non-reentrant model
 18426 ;;
 18427                           
 18428                           
 18429                           ;psect for function _TMR1_SetInterruptHandler
 18430  0000'                    _TMR1_SetInterruptHandler:	
 18431  0000'                    l7220:	
 18432                           ;incstack = 0
 18433                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 18434                           
 18435                           
 18436                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 18437  0000' 0020               	movlb	0	; select bank0
 18438  0001' 0804'              	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 18439  0002' 0021               	movlb	1	; select bank1
 18440  0003' 0080'              	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 18441  0004' 0020               	movlb	0	; select bank0
 18442  0005' 0803'              	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 18443  0006' 0021               	movlb	1	; select bank1
 18444  0007' 0080'              	movwf	_TMR1_InterruptHandler^(0+128)
 18445  0008'                    l961:	
 18446  0008' 0008               	return
 18447  0009'                    __end_of_TMR1_SetInterruptHandler:	
 18448                           
 18449                           	psect	text49
 18450  0000'                    __ptext49:	
 18451 ;; *************** function _TMR0_Initialize *****************
 18452 ;; Defined at:
 18453 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 18454 ;; Parameters:    Size  Location     Type
 18455 ;;		None
 18456 ;; Auto vars:     Size  Location     Type
 18457 ;;		None
 18458 ;; Return value:  Size  Location     Type
 18459 ;;                  1    wreg      void 
 18460 ;; Registers used:
 18461 ;;		wreg, status,2, status,0, pclath, cstack
 18462 ;; Tracked objects:
 18463 ;;		On entry : 0/0
 18464 ;;		On exit  : 0/0
 18465 ;;		Unchanged: 0/0
 18466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18471 ;;Total ram usage:        0 bytes
 18472 ;; Hardware stack levels used:    1
 18473 ;; Hardware stack levels required when called:    7
 18474 ;; This function calls:
 18475 ;;		_TMR0_SetInterruptHandler
 18476 ;; This function is called by:
 18477 ;;		_SYSTEM_Initialize
 18478 ;; This function uses a non-reentrant model
 18479 ;;
 18480                           
 18481                           
 18482                           ;psect for function _TMR0_Initialize
 18483  0000'                    _TMR0_Initialize:	
 18484  0000'                    l7482:	
 18485                           ;incstack = 0
 18486                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 18487                           
 18488                           
 18489                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x96;
 18490  0000' 3096               	movlw	150
 18491  0001' 0020               	movlb	0	; select bank0
 18492  0002' 009F               	movwf	31	;volatile
 18493                           
 18494                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x90;
 18495  0003' 3090               	movlw	144
 18496  0004' 009D               	movwf	29	;volatile
 18497  0005'                    l7484:	
 18498                           
 18499                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 18500  0005' 019C               	clrf	28	;volatile
 18501  0006'                    l7486:	
 18502                           
 18503                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 18504  0006' 002E               	movlb	14	; select bank14
 18505  0007' 128C               	bcf	12,5	;volatile
 18506  0008'                    l7488:	
 18507                           
 18508                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 18509  0008' 1696               	bsf	22,5	;volatile
 18510  0009'                    l7490:	
 18511                           
 18512                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 18513  0009' 3000'              	movlw	low _TMR0_DefaultInterruptHandler
 18514  000A' 0020               	movlb	0	; select bank0
 18515  000B' 0083'              	movwf	TMR0_SetInterruptHandler@InterruptHandler
 18516  000C' 3000'              	movlw	high _TMR0_DefaultInterruptHandler
 18517  000D' 0084'              	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 18518  000E' 3180' 2000' 3180'  	fcall	_TMR0_SetInterruptHandler
 18519  0011'                    l7492:	
 18520                           
 18521                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x09;
 18522  0011' 3009               	movlw	9
 18523  0012' 0020               	movlb	0	; select bank0
 18524  0013' 009E               	movwf	30	;volatile
 18525  0014'                    l875:	
 18526  0014' 0008               	return
 18527  0015'                    __end_of_TMR0_Initialize:	
 18528                           
 18529                           	psect	text50
 18530  0000'                    __ptext50:	
 18531 ;; *************** function _TMR0_SetInterruptHandler *****************
 18532 ;; Defined at:
 18533 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 18534 ;; Parameters:    Size  Location     Type
 18535 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 18536 ;;		 -> ISR_3s(1), TMR0_DefaultInterruptHandler(1), 
 18537 ;; Auto vars:     Size  Location     Type
 18538 ;;		None
 18539 ;; Return value:  Size  Location     Type
 18540 ;;                  1    wreg      void 
 18541 ;; Registers used:
 18542 ;;		wreg
 18543 ;; Tracked objects:
 18544 ;;		On entry : 0/0
 18545 ;;		On exit  : 0/0
 18546 ;;		Unchanged: 0/0
 18547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18548 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18551 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18552 ;;Total ram usage:        2 bytes
 18553 ;; Hardware stack levels used:    1
 18554 ;; Hardware stack levels required when called:    6
 18555 ;; This function calls:
 18556 ;;		Nothing
 18557 ;; This function is called by:
 18558 ;;		_TMR0_Initialize
 18559 ;;		_main
 18560 ;; This function uses a non-reentrant model
 18561 ;;
 18562                           
 18563                           
 18564                           ;psect for function _TMR0_SetInterruptHandler
 18565  0000'                    _TMR0_SetInterruptHandler:	
 18566  0000'                    l7218:	
 18567                           ;incstack = 0
 18568                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 18569                           
 18570                           
 18571                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 18572  0000' 0020               	movlb	0	; select bank0
 18573  0001' 0804'              	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 18574  0002' 0021               	movlb	1	; select bank1
 18575  0003' 0080'              	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 18576  0004' 0020               	movlb	0	; select bank0
 18577  0005' 0803'              	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 18578  0006' 0021               	movlb	1	; select bank1
 18579  0007' 0080'              	movwf	_TMR0_InterruptHandler^(0+128)
 18580  0008'                    l897:	
 18581  0008' 0008               	return
 18582  0009'                    __end_of_TMR0_SetInterruptHandler:	
 18583                           
 18584                           	psect	text51
 18585  0000'                    __ptext51:	
 18586 ;; *************** function _PWM6_Initialize *****************
 18587 ;; Defined at:
 18588 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 18589 ;; Parameters:    Size  Location     Type
 18590 ;;		None
 18591 ;; Auto vars:     Size  Location     Type
 18592 ;;		None
 18593 ;; Return value:  Size  Location     Type
 18594 ;;                  1    wreg      void 
 18595 ;; Registers used:
 18596 ;;		wreg, status,2, status,0
 18597 ;; Tracked objects:
 18598 ;;		On entry : 0/0
 18599 ;;		On exit  : 0/0
 18600 ;;		Unchanged: 0/0
 18601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18606 ;;Total ram usage:        0 bytes
 18607 ;; Hardware stack levels used:    1
 18608 ;; Hardware stack levels required when called:    6
 18609 ;; This function calls:
 18610 ;;		Nothing
 18611 ;; This function is called by:
 18612 ;;		_SYSTEM_Initialize
 18613 ;; This function uses a non-reentrant model
 18614 ;;
 18615                           
 18616                           
 18617                           ;psect for function _PWM6_Initialize
 18618  0000'                    _PWM6_Initialize:	
 18619  0000'                    l7440:	
 18620                           ;incstack = 0
 18621                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 18622                           
 18623                           
 18624                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 18625  0000' 3080               	movlw	128
 18626  0001' 0027               	movlb	7	; select bank7
 18627  0002' 008E               	movwf	14	;volatile
 18628                           
 18629                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 18630  0003' 303E               	movlw	62
 18631  0004' 008D               	movwf	13	;volatile
 18632                           
 18633                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 18634  0005' 3040               	movlw	64
 18635  0006' 008C               	movwf	12	;volatile
 18636  0007'                    l7442:	
 18637                           
 18638                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 18639  0007' 0024               	movlb	4	; select bank4
 18640  0008' 081F               	movf	31,w	;volatile
 18641  0009' 39F3               	andlw	-13
 18642  000A' 3804               	iorlw	4
 18643  000B' 009F               	movwf	31	;volatile
 18644  000C'                    l975:	
 18645  000C' 0008               	return
 18646  000D'                    __end_of_PWM6_Initialize:	
 18647                           
 18648                           	psect	text52
 18649  0000'                    __ptext52:	
 18650 ;; *************** function _PMD_Initialize *****************
 18651 ;; Defined at:
 18652 ;;		line 78 in file "mcc_generated_files/mcc.c"
 18653 ;; Parameters:    Size  Location     Type
 18654 ;;		None
 18655 ;; Auto vars:     Size  Location     Type
 18656 ;;		None
 18657 ;; Return value:  Size  Location     Type
 18658 ;;                  1    wreg      void 
 18659 ;; Registers used:
 18660 ;;		status,2
 18661 ;; Tracked objects:
 18662 ;;		On entry : 0/0
 18663 ;;		On exit  : 0/0
 18664 ;;		Unchanged: 0/0
 18665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18670 ;;Total ram usage:        0 bytes
 18671 ;; Hardware stack levels used:    1
 18672 ;; Hardware stack levels required when called:    6
 18673 ;; This function calls:
 18674 ;;		Nothing
 18675 ;; This function is called by:
 18676 ;;		_SYSTEM_Initialize
 18677 ;; This function uses a non-reentrant model
 18678 ;;
 18679                           
 18680                           
 18681                           ;psect for function _PMD_Initialize
 18682  0000'                    _PMD_Initialize:	
 18683  0000'                    l7372:	
 18684                           ;incstack = 0
 18685                           ; Regs used in _PMD_Initialize: [status,2]
 18686                           
 18687                           
 18688                           ;mcc_generated_files/mcc.c: 81:     PMD0 = 0x00;
 18689  0000' 002F               	movlb	15	; select bank15
 18690  0001' 0196               	clrf	22	;volatile
 18691                           
 18692                           ;mcc_generated_files/mcc.c: 83:     PMD1 = 0x00;
 18693  0002' 0197               	clrf	23	;volatile
 18694                           
 18695                           ;mcc_generated_files/mcc.c: 85:     PMD2 = 0x00;
 18696  0003' 0198               	clrf	24	;volatile
 18697                           
 18698                           ;mcc_generated_files/mcc.c: 87:     PMD3 = 0x00;
 18699  0004' 0199               	clrf	25	;volatile
 18700                           
 18701                           ;mcc_generated_files/mcc.c: 89:     PMD4 = 0x00;
 18702  0005' 019A               	clrf	26	;volatile
 18703                           
 18704                           ;mcc_generated_files/mcc.c: 91:     PMD5 = 0x00;
 18705  0006' 019B               	clrf	27	;volatile
 18706  0007'                    l455:	
 18707  0007' 0008               	return
 18708  0008'                    __end_of_PMD_Initialize:	
 18709                           
 18710                           	psect	text53
 18711  0000'                    __ptext53:	
 18712 ;; *************** function _PIN_MANAGER_Initialize *****************
 18713 ;; Defined at:
 18714 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 18715 ;; Parameters:    Size  Location     Type
 18716 ;;		None
 18717 ;; Auto vars:     Size  Location     Type
 18718 ;;		None
 18719 ;; Return value:  Size  Location     Type
 18720 ;;                  1    wreg      void 
 18721 ;; Registers used:
 18722 ;;		wreg, status,2
 18723 ;; Tracked objects:
 18724 ;;		On entry : 0/0
 18725 ;;		On exit  : 0/0
 18726 ;;		Unchanged: 0/0
 18727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18732 ;;Total ram usage:        0 bytes
 18733 ;; Hardware stack levels used:    1
 18734 ;; Hardware stack levels required when called:    6
 18735 ;; This function calls:
 18736 ;;		Nothing
 18737 ;; This function is called by:
 18738 ;;		_SYSTEM_Initialize
 18739 ;; This function uses a non-reentrant model
 18740 ;;
 18741                           
 18742                           
 18743                           ;psect for function _PIN_MANAGER_Initialize
 18744  0000'                    _PIN_MANAGER_Initialize:	
 18745  0000'                    l7374:	
 18746                           ;incstack = 0
 18747                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 18748                           
 18749                           
 18750                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 18751  0000' 0020               	movlb	0	; select bank0
 18752  0001' 019A               	clrf	26	;volatile
 18753                           
 18754                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 18755  0002' 0199               	clrf	25	;volatile
 18756                           
 18757                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 18758  0003' 0196               	clrf	22	;volatile
 18759                           
 18760                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 18761  0004' 0197               	clrf	23	;volatile
 18762                           
 18763                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 18764  0005' 0198               	clrf	24	;volatile
 18765  0006'                    l7376:	
 18766                           
 18767                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 18768  0006' 3007               	movlw	7
 18769  0007' 0095               	movwf	21	;volatile
 18770  0008'                    l7378:	
 18771                           
 18772                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 18773  0008' 300F               	movlw	15
 18774  0009' 0091               	movwf	17	;volatile
 18775  000A'                    l7380:	
 18776                           
 18777                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 18778  000A' 30FF               	movlw	255
 18779  000B' 0092               	movwf	18	;volatile
 18780  000C'                    l7382:	
 18781                           
 18782                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
 18783  000C' 30BF               	movlw	191
 18784  000D' 0093               	movwf	19	;volatile
 18785  000E'                    l7384:	
 18786                           
 18787                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 18788  000E' 30FF               	movlw	255
 18789  000F' 0094               	movwf	20	;volatile
 18790  0010'                    l7386:	
 18791                           
 18792                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 18793  0010' 30FF               	movlw	255
 18794  0011' 003E               	movlb	30	; select bank30
 18795  0012' 00D9               	movwf	89	;volatile
 18796  0013'                    l7388:	
 18797                           
 18798                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x47;
 18799  0013' 3047               	movlw	71
 18800  0014' 00CE               	movwf	78	;volatile
 18801  0015'                    l7390:	
 18802                           
 18803                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 18804  0015' 30EF               	movlw	239
 18805  0016' 00C3               	movwf	67	;volatile
 18806  0017'                    l7392:	
 18807                           
 18808                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 18809  0017' 3007               	movlw	7
 18810  0018' 00E4               	movwf	100	;volatile
 18811  0019'                    l7394:	
 18812                           
 18813                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 18814  0019' 30FF               	movlw	255
 18815  001A' 00B8               	movwf	56	;volatile
 18816                           
 18817                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 18818  001B' 01DA               	clrf	90	;volatile
 18819                           
 18820                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 18821  001C' 01E5               	clrf	101	;volatile
 18822                           
 18823                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 18824  001D' 01C4               	clrf	68	;volatile
 18825                           
 18826                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 18827  001E' 01B9               	clrf	57	;volatile
 18828                           
 18829                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 18830  001F' 01CF               	clrf	79	;volatile
 18831                           
 18832                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 18833  0020' 01E6               	clrf	102	;volatile
 18834                           
 18835                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 18836  0021' 01BA               	clrf	58	;volatile
 18837                           
 18838                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 18839  0022' 01C5               	clrf	69	;volatile
 18840                           
 18841                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 18842  0023' 01D0               	clrf	80	;volatile
 18843                           
 18844                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 18845  0024' 01DB               	clrf	91	;volatile
 18846  0025'                    l7396:	
 18847                           
 18848                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 18849  0025' 30FF               	movlw	255
 18850  0026' 00BB               	movwf	59	;volatile
 18851  0027'                    l7398:	
 18852                           
 18853                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 18854  0027' 30FF               	movlw	255
 18855  0028' 00C6               	movwf	70	;volatile
 18856  0029'                    l7400:	
 18857                           
 18858                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 18859  0029' 30FF               	movlw	255
 18860  002A' 00D1               	movwf	81	;volatile
 18861  002B'                    l7402:	
 18862                           
 18863                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 18864  002B' 30FF               	movlw	255
 18865  002C' 00DC               	movwf	92	;volatile
 18866  002D'                    l7404:	
 18867                           
 18868                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 18869  002D' 3007               	movlw	7
 18870  002E' 00E7               	movwf	103	;volatile
 18871  002F'                    l7406:	
 18872                           
 18873                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 18874  002F' 30FF               	movlw	255
 18875  0030' 00BC               	movwf	60	;volatile
 18876  0031'                    l7408:	
 18877                           
 18878                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 18879  0031' 30FF               	movlw	255
 18880  0032' 00C7               	movwf	71	;volatile
 18881  0033'                    l7410:	
 18882                           
 18883                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 18884  0033' 30FF               	movlw	255
 18885  0034' 00D2               	movwf	82	;volatile
 18886  0035'                    l7412:	
 18887                           
 18888                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 18889  0035' 30FF               	movlw	255
 18890  0036' 00DD               	movwf	93	;volatile
 18891  0037'                    l7414:	
 18892                           
 18893                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 18894  0037' 3007               	movlw	7
 18895  0038' 00E8               	movwf	104	;volatile
 18896  0039'                    l7416:	
 18897                           
 18898                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 18899  0039' 300C               	movlw	12
 18900  003A' 003D               	movlb	29	; select bank29
 18901  003B' 0090               	movwf	16	;volatile
 18902  003C'                    l7418:	
 18903                           
 18904                           ;mcc_generated_files/pin_manager.c: 128:     RXPPS = 0x17;
 18905  003C' 3017               	movlw	23
 18906  003D' 00CB               	movwf	75	;volatile
 18907  003E'                    l7420:	
 18908                           
 18909                           ;mcc_generated_files/pin_manager.c: 129:     SSP1CLKPPS = 0x13;
 18910  003E' 3013               	movlw	19
 18911  003F' 00C5               	movwf	69	;volatile
 18912  0040'                    l7422:	
 18913                           
 18914                           ;mcc_generated_files/pin_manager.c: 130:     RC3PPS = 0x14;
 18915  0040' 3014               	movlw	20
 18916  0041' 003E               	movlb	30	; select bank30
 18917  0042' 00A3               	movwf	35	;volatile
 18918  0043'                    l7424:	
 18919                           
 18920                           ;mcc_generated_files/pin_manager.c: 131:     RC4PPS = 0x15;
 18921  0043' 3015               	movlw	21
 18922  0044' 00A4               	movwf	36	;volatile
 18923  0045'                    l7426:	
 18924                           
 18925                           ;mcc_generated_files/pin_manager.c: 132:     RA6PPS = 0x0E;
 18926  0045' 300E               	movlw	14
 18927  0046' 0096               	movwf	22	;volatile
 18928  0047'                    l7428:	
 18929                           
 18930                           ;mcc_generated_files/pin_manager.c: 133:     RC6PPS = 0x10;
 18931  0047' 3010               	movlw	16
 18932  0048' 00A6               	movwf	38	;volatile
 18933  0049'                    l7430:	
 18934                           
 18935                           ;mcc_generated_files/pin_manager.c: 134:     SSP1DATPPS = 0x14;
 18936  0049' 3014               	movlw	20
 18937  004A' 003D               	movlb	29	; select bank29
 18938  004B' 00C6               	movwf	70	;volatile
 18939  004C'                    l689:	
 18940  004C' 0008               	return
 18941  004D'                    __end_of_PIN_MANAGER_Initialize:	
 18942                           
 18943                           	psect	text54
 18944  0000'                    __ptext54:	
 18945 ;; *************** function _OSCILLATOR_Initialize *****************
 18946 ;; Defined at:
 18947 ;;		line 64 in file "mcc_generated_files/mcc.c"
 18948 ;; Parameters:    Size  Location     Type
 18949 ;;		None
 18950 ;; Auto vars:     Size  Location     Type
 18951 ;;		None
 18952 ;; Return value:  Size  Location     Type
 18953 ;;                  1    wreg      void 
 18954 ;; Registers used:
 18955 ;;		wreg, status,2
 18956 ;; Tracked objects:
 18957 ;;		On entry : 0/0
 18958 ;;		On exit  : 0/0
 18959 ;;		Unchanged: 0/0
 18960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18965 ;;Total ram usage:        0 bytes
 18966 ;; Hardware stack levels used:    1
 18967 ;; Hardware stack levels required when called:    6
 18968 ;; This function calls:
 18969 ;;		Nothing
 18970 ;; This function is called by:
 18971 ;;		_SYSTEM_Initialize
 18972 ;; This function uses a non-reentrant model
 18973 ;;
 18974                           
 18975                           
 18976                           ;psect for function _OSCILLATOR_Initialize
 18977  0000'                    _OSCILLATOR_Initialize:	
 18978  0000'                    l7432:	
 18979                           ;incstack = 0
 18980                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 18981                           
 18982                           
 18983                           ;mcc_generated_files/mcc.c: 67:     OSCCON1 = 0x62;
 18984  0000' 3062               	movlw	98
 18985  0001' 0031               	movlb	17	; select bank17
 18986  0002' 008D               	movwf	13	;volatile
 18987  0003'                    l7434:	
 18988                           
 18989                           ;mcc_generated_files/mcc.c: 69:     OSCCON3 = 0x00;
 18990  0003' 018F               	clrf	15	;volatile
 18991  0004'                    l7436:	
 18992                           
 18993                           ;mcc_generated_files/mcc.c: 71:     OSCEN = 0x00;
 18994  0004' 0191               	clrf	17	;volatile
 18995                           
 18996                           ;mcc_generated_files/mcc.c: 73:     OSCFRQ = 0x02;
 18997  0005' 3002               	movlw	2
 18998  0006' 0093               	movwf	19	;volatile
 18999  0007'                    l7438:	
 19000                           
 19001                           ;mcc_generated_files/mcc.c: 75:     OSCTUNE = 0x00;
 19002  0007' 0192               	clrf	18	;volatile
 19003  0008'                    l452:	
 19004  0008' 0008               	return
 19005  0009'                    __end_of_OSCILLATOR_Initialize:	
 19006                           
 19007                           	psect	text55
 19008  0000'                    __ptext55:	
 19009 ;; *************** function _EXT_INT_Initialize *****************
 19010 ;; Defined at:
 19011 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 19012 ;; Parameters:    Size  Location     Type
 19013 ;;		None
 19014 ;; Auto vars:     Size  Location     Type
 19015 ;;		None
 19016 ;; Return value:  Size  Location     Type
 19017 ;;                  1    wreg      void 
 19018 ;; Registers used:
 19019 ;;		wreg, status,2, status,0, pclath, cstack
 19020 ;; Tracked objects:
 19021 ;;		On entry : 0/0
 19022 ;;		On exit  : 0/0
 19023 ;;		Unchanged: 0/0
 19024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19029 ;;Total ram usage:        0 bytes
 19030 ;; Hardware stack levels used:    1
 19031 ;; Hardware stack levels required when called:    7
 19032 ;; This function calls:
 19033 ;;		_INT_SetInterruptHandler
 19034 ;; This function is called by:
 19035 ;;		_SYSTEM_Initialize
 19036 ;; This function uses a non-reentrant model
 19037 ;;
 19038                           
 19039                           
 19040                           ;psect for function _EXT_INT_Initialize
 19041  0000'                    _EXT_INT_Initialize:	
 19042  0000'                    l7366:	
 19043                           ;incstack = 0
 19044                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 19045                           
 19046                           
 19047                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 19048  0000' 002E               	movlb	14	; select bank14
 19049  0001' 100C               	bcf	12,0	;volatile
 19050                           
 19051                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 19052  0002' 140B               	bsf	11,0	;volatile
 19053  0003'                    l7368:	
 19054                           
 19055                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 19056  0003' 3000'              	movlw	low _INT_DefaultInterruptHandler
 19057  0004' 0020               	movlb	0	; select bank0
 19058  0005' 0083'              	movwf	INT_SetInterruptHandler@InterruptHandler
 19059  0006' 3000'              	movlw	high _INT_DefaultInterruptHandler
 19060  0007' 0084'              	movwf	INT_SetInterruptHandler@InterruptHandler+1
 19061  0008' 3180' 2000' 3180'  	fcall	_INT_SetInterruptHandler
 19062  000B'                    l7370:	
 19063                           
 19064                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 19065  000B' 002E               	movlb	14	; select bank14
 19066  000C' 1416               	bsf	22,0	;volatile
 19067  000D'                    l347:	
 19068  000D' 0008               	return
 19069  000E'                    __end_of_EXT_INT_Initialize:	
 19070                           
 19071                           	psect	text56
 19072  0000'                    __ptext56:	
 19073 ;; *************** function _INT_SetInterruptHandler *****************
 19074 ;; Defined at:
 19075 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 19076 ;; Parameters:    Size  Location     Type
 19077 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 19078 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 19079 ;; Auto vars:     Size  Location     Type
 19080 ;;		None
 19081 ;; Return value:  Size  Location     Type
 19082 ;;                  1    wreg      void 
 19083 ;; Registers used:
 19084 ;;		wreg
 19085 ;; Tracked objects:
 19086 ;;		On entry : 0/0
 19087 ;;		On exit  : 0/0
 19088 ;;		Unchanged: 0/0
 19089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19090 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19093 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19094 ;;Total ram usage:        2 bytes
 19095 ;; Hardware stack levels used:    1
 19096 ;; Hardware stack levels required when called:    6
 19097 ;; This function calls:
 19098 ;;		Nothing
 19099 ;; This function is called by:
 19100 ;;		_EXT_INT_Initialize
 19101 ;;		_main
 19102 ;; This function uses a non-reentrant model
 19103 ;;
 19104                           
 19105                           
 19106                           ;psect for function _INT_SetInterruptHandler
 19107  0000'                    _INT_SetInterruptHandler:	
 19108  0000'                    l7216:	
 19109                           ;incstack = 0
 19110                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 19111                           
 19112                           
 19113                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 19114  0000' 0020               	movlb	0	; select bank0
 19115  0001' 0804'              	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 19116  0002' 0021               	movlb	1	; select bank1
 19117  0003' 0080'              	movwf	(_INT_InterruptHandler+1)^(0+128)
 19118  0004' 0020               	movlb	0	; select bank0
 19119  0005' 0803'              	movf	INT_SetInterruptHandler@InterruptHandler,w
 19120  0006' 0021               	movlb	1	; select bank1
 19121  0007' 0080'              	movwf	_INT_InterruptHandler^(0+128)
 19122  0008'                    l341:	
 19123  0008' 0008               	return
 19124  0009'                    __end_of_INT_SetInterruptHandler:	
 19125                           
 19126                           	psect	text57
 19127  0000'                    __ptext57:	
 19128 ;; *************** function _ADCC_Initialize *****************
 19129 ;; Defined at:
 19130 ;;		line 63 in file "mcc_generated_files/adcc.c"
 19131 ;; Parameters:    Size  Location     Type
 19132 ;;		None
 19133 ;; Auto vars:     Size  Location     Type
 19134 ;;		None
 19135 ;; Return value:  Size  Location     Type
 19136 ;;                  1    wreg      void 
 19137 ;; Registers used:
 19138 ;;		wreg, status,2
 19139 ;; Tracked objects:
 19140 ;;		On entry : 0/0
 19141 ;;		On exit  : 0/0
 19142 ;;		Unchanged: 0/0
 19143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19148 ;;Total ram usage:        0 bytes
 19149 ;; Hardware stack levels used:    1
 19150 ;; Hardware stack levels required when called:    6
 19151 ;; This function calls:
 19152 ;;		Nothing
 19153 ;; This function is called by:
 19154 ;;		_SYSTEM_Initialize
 19155 ;; This function uses a non-reentrant model
 19156 ;;
 19157                           
 19158                           
 19159                           ;psect for function _ADCC_Initialize
 19160  0000'                    _ADCC_Initialize:	
 19161  0000'                    l7444:	
 19162                           ;incstack = 0
 19163                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 19164                           
 19165                           
 19166                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 19167  0000' 0022               	movlb	2	; select bank2
 19168  0001' 018E               	clrf	14	;volatile
 19169                           
 19170                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 19171  0002' 018F               	clrf	15	;volatile
 19172                           
 19173                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 19174  0003' 0190               	clrf	16	;volatile
 19175                           
 19176                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 19177  0004' 0191               	clrf	17	;volatile
 19178                           
 19179                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 19180  0005' 0192               	clrf	18	;volatile
 19181                           
 19182                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 19183  0006' 0193               	clrf	19	;volatile
 19184                           
 19185                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 19186  0007' 018D               	clrf	13	;volatile
 19187                           
 19188                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 19189  0008' 0021               	movlb	1	; select bank1
 19190  0009' 019E               	clrf	30	;volatile
 19191                           
 19192                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 19193  000A' 019B               	clrf	27	;volatile
 19194                           
 19195                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 19196  000B' 0194               	clrf	20	;volatile
 19197                           
 19198                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 19199  000C' 0195               	clrf	21	;volatile
 19200                           
 19201                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 19202  000D' 0196               	clrf	22	;volatile
 19203                           
 19204                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 19205  000E' 0197               	clrf	23	;volatile
 19206                           
 19207                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 19208  000F' 019A               	clrf	26	;volatile
 19209                           
 19210                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 19211  0010' 0199               	clrf	25	;volatile
 19212                           
 19213                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 19214  0011' 0198               	clrf	24	;volatile
 19215  0012'                    l7446:	
 19216                           
 19217                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 19218  0012' 3084               	movlw	132
 19219  0013' 0093               	movwf	19	;volatile
 19220  0014'                    l7448:	
 19221                           
 19222                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 19223  0014' 019D               	clrf	29	;volatile
 19224  0015'                    l771:	
 19225  0015' 0008               	return
 19226  0016'                    __end_of_ADCC_Initialize:	
 19227                           
 19228                           	psect	text58
 19229  0000'                    __ptext58:	
 19230 ;; *************** function _LED_bin *****************
 19231 ;; Defined at:
 19232 ;;		line 48 in file "leds.c"
 19233 ;; Parameters:    Size  Location     Type
 19234 ;;  value           2    3[BANK0 ] unsigned int 
 19235 ;; Auto vars:     Size  Location     Type
 19236 ;;		None
 19237 ;; Return value:  Size  Location     Type
 19238 ;;                  1    wreg      void 
 19239 ;; Registers used:
 19240 ;;		wreg, status,2, status,0
 19241 ;; Tracked objects:
 19242 ;;		On entry : 0/0
 19243 ;;		On exit  : 0/0
 19244 ;;		Unchanged: 0/0
 19245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19246 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19248 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19249 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19250 ;;Total ram usage:        5 bytes
 19251 ;; Hardware stack levels used:    1
 19252 ;; Hardware stack levels required when called:    6
 19253 ;; This function calls:
 19254 ;;		Nothing
 19255 ;; This function is called by:
 19256 ;;		_main
 19257 ;; This function uses a non-reentrant model
 19258 ;;
 19259                           
 19260                           
 19261                           ;psect for function _LED_bin
 19262  0000'                    _LED_bin:	
 19263  0000'                    l7804:	
 19264                           ;incstack = 0
 19265                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 19266                           
 19267                           
 19268                           ;leds.c: 50:     LATAbits.LATA4 = (value & 1);
 19269  0000' 0020               	movlb	0	; select bank0
 19270  0001' 0803'              	movf	LED_bin@value,w
 19271  0002' 3901               	andlw	1
 19272  0003' 0085'              	movwf	??_LED_bin
 19273  0004' 0E85'              	swapf	??_LED_bin,f
 19274  0005' 0816               	movf	22,w	;volatile
 19275  0006' 0605'              	xorwf	??_LED_bin,w
 19276  0007' 39EF               	andlw	-17
 19277  0008' 0605'              	xorwf	??_LED_bin,w
 19278  0009' 0096               	movwf	22	;volatile
 19279                           
 19280                           ;leds.c: 51:     LATAbits.LATA5 = (value >>1);
 19281  000A' 0804'              	movf	LED_bin@value+1,w
 19282  000B' 0086'              	movwf	??_LED_bin+1
 19283  000C' 0803'              	movf	LED_bin@value,w
 19284  000D' 0085'              	movwf	??_LED_bin
 19285  000E' 3686'              	lsrf	??_LED_bin+1,f
 19286  000F' 0C85'              	rrf	??_LED_bin,f
 19287  0010' 0805'              	movf	??_LED_bin,w
 19288  0011' 0087'              	movwf	??_LED_bin+2
 19289  0012' 0E87'              	swapf	??_LED_bin+2,f
 19290  0013' 0D87'              	rlf	??_LED_bin+2,f
 19291  0014' 0816               	movf	22,w	;volatile
 19292  0015' 0607'              	xorwf	??_LED_bin+2,w
 19293  0016' 39DF               	andlw	-33
 19294  0017' 0607'              	xorwf	??_LED_bin+2,w
 19295  0018' 0096               	movwf	22	;volatile
 19296  0019'                    l1690:	
 19297  0019' 0008               	return
 19298  001A'                    __end_of_LED_bin:	
 19299                           
 19300                           	psect	text59
 19301  0000'                    __ptext59:	
 19302 ;; *************** function _ADC_read *****************
 19303 ;; Defined at:
 19304 ;;		line 564 in file "main.c"
 19305 ;; Parameters:    Size  Location     Type
 19306 ;;		None
 19307 ;; Auto vars:     Size  Location     Type
 19308 ;;		None
 19309 ;; Return value:  Size  Location     Type
 19310 ;;                  2    5[BANK0 ] unsigned int 
 19311 ;; Registers used:
 19312 ;;		wreg, status,2, status,0, pclath, cstack
 19313 ;; Tracked objects:
 19314 ;;		On entry : 0/0
 19315 ;;		On exit  : 0/0
 19316 ;;		Unchanged: 0/0
 19317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19318 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19321 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19322 ;;Total ram usage:        2 bytes
 19323 ;; Hardware stack levels used:    1
 19324 ;; Hardware stack levels required when called:    7
 19325 ;; This function calls:
 19326 ;;		_ADCC_GetConversionResult
 19327 ;;		_ADCC_IsConversionDone
 19328 ;;		_ADCC_StartConversion
 19329 ;; This function is called by:
 19330 ;;		_main
 19331 ;; This function uses a non-reentrant model
 19332 ;;
 19333                           
 19334                           
 19335                           ;psect for function _ADC_read
 19336  0000'                    _ADC_read:	
 19337  0000'                    l7794:	
 19338                           ;incstack = 0
 19339                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 19340                           
 19341                           
 19342                           ;main.c: 566:     ADCC_StartConversion(channel_ANA0);
 19343  0000' 3000               	movlw	0
 19344  0001' 3180' 2000' 3180'  	fcall	_ADCC_StartConversion
 19345                           
 19346                           ;main.c: 567:     while(!ADCC_IsConversionDone()){
 19347  0004' 2800'              	goto	l7798
 19348  0005'                    l7796:	
 19349                           
 19350                           ;main.c: 568:         _delay((unsigned long)((1)*(1000000/4000.0)));
 19351  0005' 3053               	movlw	83
 19352  0006'                    u6067:	
 19353  0006' 0B89               	decfsz	9,f
 19354  0007' 2800'              	goto	u6067
 19355  0008' 0000               	nop
 19356  0009'                    l7798:	
 19357                           
 19358                           ;main.c: 567:     while(!ADCC_IsConversionDone()){
 19359  0009' 3180' 2000' 3180'  	fcall	_ADCC_IsConversionDone
 19360  000C' 3A00               	xorlw	0
 19361  000D' 1903               	skipnz
 19362  000E' 2800'              	goto	u5161
 19363  000F' 2800'              	goto	u5160
 19364  0010'                    u5161:	
 19365  0010' 2800'              	goto	l7796
 19366  0011'                    u5160:	
 19367  0011'                    l7800:	
 19368                           
 19369                           ;main.c: 571:     return ADCC_GetConversionResult();
 19370  0011' 3180' 2000' 3180'  	fcall	_ADCC_GetConversionResult
 19371  0014' 0020               	movlb	0	; select bank0
 19372  0015' 0804'              	movf	?_ADCC_GetConversionResult+1,w
 19373  0016' 0086'              	movwf	?_ADC_read+1
 19374  0017' 0803'              	movf	?_ADCC_GetConversionResult,w
 19375  0018' 0085'              	movwf	?_ADC_read
 19376  0019'                    l1421:	
 19377  0019' 0008               	return
 19378  001A'                    __end_of_ADC_read:	
 19379                           
 19380                           	psect	text60
 19381  0000'                    __ptext60:	
 19382 ;; *************** function _ADCC_StartConversion *****************
 19383 ;; Defined at:
 19384 ;;		line 106 in file "mcc_generated_files/adcc.c"
 19385 ;; Parameters:    Size  Location     Type
 19386 ;;  channel         1    wreg     enum E12246
 19387 ;; Auto vars:     Size  Location     Type
 19388 ;;  channel         1    3[BANK0 ] enum E12246
 19389 ;; Return value:  Size  Location     Type
 19390 ;;                  1    wreg      void 
 19391 ;; Registers used:
 19392 ;;		wreg
 19393 ;; Tracked objects:
 19394 ;;		On entry : 0/0
 19395 ;;		On exit  : 0/0
 19396 ;;		Unchanged: 0/0
 19397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19399 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19401 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19402 ;;Total ram usage:        1 bytes
 19403 ;; Hardware stack levels used:    1
 19404 ;; Hardware stack levels required when called:    6
 19405 ;; This function calls:
 19406 ;;		Nothing
 19407 ;; This function is called by:
 19408 ;;		_ADC_read
 19409 ;; This function uses a non-reentrant model
 19410 ;;
 19411                           
 19412                           
 19413                           ;psect for function _ADCC_StartConversion
 19414  0000'                    _ADCC_StartConversion:	
 19415                           
 19416                           ;incstack = 0
 19417                           ; Regs used in _ADCC_StartConversion: [wreg]
 19418                           ;ADCC_StartConversion@channel stored from wreg
 19419  0000' 0020               	movlb	0	; select bank0
 19420  0001' 0083'              	movwf	ADCC_StartConversion@channel
 19421  0002'                    l7494:	
 19422                           
 19423                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 19424  0002' 0803'              	movf	ADCC_StartConversion@channel,w
 19425  0003' 0021               	movlb	1	; select bank1
 19426  0004' 009E               	movwf	30	;volatile
 19427  0005'                    l7496:	
 19428                           
 19429                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 19430  0005' 1793               	bsf	19,7	;volatile
 19431  0006'                    l7498:	
 19432                           
 19433                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 19434  0006' 1413               	bsf	19,0	;volatile
 19435  0007'                    l774:	
 19436  0007' 0008               	return
 19437  0008'                    __end_of_ADCC_StartConversion:	
 19438                           
 19439                           	psect	text61
 19440  0000'                    __ptext61:	
 19441 ;; *************** function _ADCC_IsConversionDone *****************
 19442 ;; Defined at:
 19443 ;;		line 118 in file "mcc_generated_files/adcc.c"
 19444 ;; Parameters:    Size  Location     Type
 19445 ;;		None
 19446 ;; Auto vars:     Size  Location     Type
 19447 ;;		None
 19448 ;; Return value:  Size  Location     Type
 19449 ;;                  1    wreg      _Bool 
 19450 ;; Registers used:
 19451 ;;		wreg, status,0
 19452 ;; Tracked objects:
 19453 ;;		On entry : 0/0
 19454 ;;		On exit  : 0/0
 19455 ;;		Unchanged: 0/0
 19456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19461 ;;Total ram usage:        0 bytes
 19462 ;; Hardware stack levels used:    1
 19463 ;; Hardware stack levels required when called:    6
 19464 ;; This function calls:
 19465 ;;		Nothing
 19466 ;; This function is called by:
 19467 ;;		_ADC_read
 19468 ;; This function uses a non-reentrant model
 19469 ;;
 19470                           
 19471                           
 19472                           ;psect for function _ADCC_IsConversionDone
 19473  0000'                    _ADCC_IsConversionDone:	
 19474  0000'                    l7500:	
 19475                           ;incstack = 0
 19476                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 19477                           
 19478                           
 19479                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 19480  0000' 1003               	clrc
 19481  0001' 0021               	movlb	1	; select bank1
 19482  0002' 1C13               	btfss	19,0	;volatile
 19483  0003' 1403               	setc
 19484  0004' 3000               	movlw	0
 19485  0005' 3D09               	addwfc	9,w
 19486  0006'                    l777:	
 19487  0006' 0008               	return
 19488  0007'                    __end_of_ADCC_IsConversionDone:	
 19489                           
 19490                           	psect	text62
 19491  0000'                    __ptext62:	
 19492 ;; *************** function _ADCC_GetConversionResult *****************
 19493 ;; Defined at:
 19494 ;;		line 124 in file "mcc_generated_files/adcc.c"
 19495 ;; Parameters:    Size  Location     Type
 19496 ;;		None
 19497 ;; Auto vars:     Size  Location     Type
 19498 ;;		None
 19499 ;; Return value:  Size  Location     Type
 19500 ;;                  2    3[BANK0 ] unsigned short 
 19501 ;; Registers used:
 19502 ;;		wreg
 19503 ;; Tracked objects:
 19504 ;;		On entry : 0/0
 19505 ;;		On exit  : 0/0
 19506 ;;		Unchanged: 0/0
 19507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19508 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19511 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19512 ;;Total ram usage:        2 bytes
 19513 ;; Hardware stack levels used:    1
 19514 ;; Hardware stack levels required when called:    6
 19515 ;; This function calls:
 19516 ;;		Nothing
 19517 ;; This function is called by:
 19518 ;;		_ADC_read
 19519 ;; This function uses a non-reentrant model
 19520 ;;
 19521                           
 19522                           
 19523                           ;psect for function _ADCC_GetConversionResult
 19524  0000'                    _ADCC_GetConversionResult:	
 19525  0000'                    l7504:	
 19526                           ;incstack = 0
 19527                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 19528                           
 19529                           
 19530                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 19531  0000' 0021               	movlb	1	; select bank1
 19532  0001' 080D               	movf	13,w	;volatile
 19533  0002' 0020               	movlb	0	; select bank0
 19534  0003' 0084'              	movwf	?_ADCC_GetConversionResult+1
 19535  0004' 0021               	movlb	1	; select bank1
 19536  0005' 080C               	movf	12,w	;volatile
 19537  0006' 0020               	movlb	0	; select bank0
 19538  0007' 0083'              	movwf	?_ADCC_GetConversionResult
 19539  0008'                    l780:	
 19540  0008' 0008               	return
 19541  0009'                    __end_of_ADCC_GetConversionResult:	
 19542                           
 19543                           	psect	intentry
 19544  0000'                    __pintentry:	
 19545 ;; *************** function _INTERRUPT_InterruptManager *****************
 19546 ;; Defined at:
 19547 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 19548 ;; Parameters:    Size  Location     Type
 19549 ;;		None
 19550 ;; Auto vars:     Size  Location     Type
 19551 ;;		None
 19552 ;; Return value:  Size  Location     Type
 19553 ;;                  1    wreg      void 
 19554 ;; Registers used:
 19555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19556 ;; Tracked objects:
 19557 ;;		On entry : 0/0
 19558 ;;		On exit  : 0/0
 19559 ;;		Unchanged: 0/0
 19560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19565 ;;Total ram usage:        0 bytes
 19566 ;; Hardware stack levels used:    1
 19567 ;; Hardware stack levels required when called:    5
 19568 ;; This function calls:
 19569 ;;		Absolute function
 19570 ;;		_INT_ISR
 19571 ;;		_TMR0_ISR
 19572 ;;		_TMR1_ISR
 19573 ;;		_TMR2_ISR
 19574 ;;		_i2c_ISR
 19575 ;;		_i2c_busCollisionISR
 19576 ;; This function is called by:
 19577 ;;		Interrupt level 1
 19578 ;; This function uses a non-reentrant model
 19579 ;;
 19580                           
 19581  0000'                    _INTERRUPT_InterruptManager:	
 19582                           
 19583                           ;incstack = 0
 19584  0000' 147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 19585                           
 19586                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19587  0001' 3180'              	pagesel	$
 19588  0002'                    i1l6504:	
 19589                           
 19590                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 19591  0002' 002E               	movlb	14	; select bank14
 19592  0003' 1C16               	btfss	22,0	;volatile
 19593  0004' 2800'              	goto	u396_21
 19594  0005' 2800'              	goto	u396_20
 19595  0006'                    u396_21:	
 19596  0006' 2800'              	goto	i1l382
 19597  0007'                    u396_20:	
 19598  0007'                    i1l6506:	
 19599  0007' 1C0C               	btfss	12,0	;volatile
 19600  0008' 2800'              	goto	u397_21
 19601  0009' 2800'              	goto	u397_20
 19602  000A'                    u397_21:	
 19603  000A' 2800'              	goto	i1l382
 19604  000B'                    u397_20:	
 19605  000B'                    i1l6508:	
 19606                           
 19607                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 19608  000B' 3180' 2000' 3180'  	fcall	_INT_ISR
 19609                           
 19610                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 19611  000E' 2800'              	goto	i1l400
 19612  000F'                    i1l382:	
 19613                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 19614                           
 19615  000F' 1E96               	btfss	22,5	;volatile
 19616  0010' 2800'              	goto	u398_21
 19617  0011' 2800'              	goto	u398_20
 19618  0012'                    u398_21:	
 19619  0012' 2800'              	goto	i1l384
 19620  0013'                    u398_20:	
 19621  0013'                    i1l6510:	
 19622  0013' 1E8C               	btfss	12,5	;volatile
 19623  0014' 2800'              	goto	u399_21
 19624  0015' 2800'              	goto	u399_20
 19625  0016'                    u399_21:	
 19626  0016' 2800'              	goto	i1l384
 19627  0017'                    u399_20:	
 19628  0017'                    i1l6512:	
 19629                           
 19630                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 19631  0017' 3180' 2000' 3180'  	fcall	_TMR0_ISR
 19632                           
 19633                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 19634  001A' 2800'              	goto	i1l400
 19635  001B'                    i1l384:	
 19636                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 19637                           
 19638  001B' 1F0B               	btfss	11,6	;volatile
 19639  001C' 2800'              	goto	u400_21
 19640  001D' 2800'              	goto	u400_20
 19641  001E'                    u400_21:	
 19642  001E' 2800'              	goto	i1l394
 19643  001F'                    u400_20:	
 19644  001F'                    i1l6514:	
 19645                           
 19646                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.TXIE == 1 && PIR3bits.TXIF == 1)
 19647  001F' 1E19               	btfss	25,4	;volatile
 19648  0020' 2800'              	goto	u401_21
 19649  0021' 2800'              	goto	u401_20
 19650  0022'                    u401_21:	
 19651  0022' 2800'              	goto	i1l387
 19652  0023'                    u401_20:	
 19653  0023'                    i1l6516:	
 19654                           
 19655                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_TxDefaultInterruptHandler();
 19656  0023' 1E0F               	btfss	15,4	;volatile
 19657  0024' 2800'              	goto	u402_21
 19658  0025' 2800'              	goto	u402_20
 19659  0026'                    u402_21:	
 19660  0026' 2800'              	goto	i1l387
 19661  0027'                    u402_20:	
 19662  0027' 2800'              	goto	i1l400
 19663  0028'                    i1l387:	
 19664                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.RCIE == 1 && PIR3
      +                          bits.RCIF == 1)
 19665                           
 19666  0028' 1E99               	btfss	25,5	;volatile
 19667  0029' 2800'              	goto	u403_21
 19668  002A' 2800'              	goto	u403_20
 19669  002B'                    u403_21:	
 19670  002B' 2800'              	goto	i1l389
 19671  002C'                    u403_20:	
 19672  002C'                    i1l6520:	
 19673                           
 19674                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART_RxDefaultInterruptHandler();
 19675  002C' 1E8F               	btfss	15,5	;volatile
 19676  002D' 2800'              	goto	u404_21
 19677  002E' 2800'              	goto	u404_20
 19678  002F'                    u404_21:	
 19679  002F' 2800'              	goto	i1l389
 19680  0030'                    u404_20:	
 19681  0030' 2800'              	goto	i1l400
 19682  0031'                    i1l389:	
 19683                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE3bits.BCL1IE == 1 && PI
      +                          R3bits.BCL1IF == 1)
 19684                           
 19685  0031' 1C99               	btfss	25,1	;volatile
 19686  0032' 2800'              	goto	u405_21
 19687  0033' 2800'              	goto	u405_20
 19688  0034'                    u405_21:	
 19689  0034' 2800'              	goto	i1l391
 19690  0035'                    u405_20:	
 19691  0035'                    i1l6524:	
 19692  0035' 1C8F               	btfss	15,1	;volatile
 19693  0036' 2800'              	goto	u406_21
 19694  0037' 2800'              	goto	u406_20
 19695  0038'                    u406_21:	
 19696  0038' 2800'              	goto	i1l391
 19697  0039'                    u406_20:	
 19698  0039'                    i1l6526:	
 19699                           
 19700                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             i2c1_driver_busCollisionISR();
 19701  0039' 0021               	movlb	1	; select bank1
 19702  003A' 0800'              	movf	(_i2c1_driver_busCollisionISR+1)^(0+128),w
 19703  003B' 008A               	movwf	10
 19704  003C' 0800'              	movf	_i2c1_driver_busCollisionISR^(0+128),w
 19705  003D' 000A               	callw
 19706  003E' 3180'              	pagesel	$
 19707                           
 19708                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 19709  003F' 2800'              	goto	i1l400
 19710  0040'                    i1l391:	
 19711                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 19712                           
 19713  0040' 1C19               	btfss	25,0	;volatile
 19714  0041' 2800'              	goto	u407_21
 19715  0042' 2800'              	goto	u407_20
 19716  0043'                    u407_21:	
 19717  0043' 2800'              	goto	i1l393
 19718  0044'                    u407_20:	
 19719  0044'                    i1l6528:	
 19720  0044' 1C0F               	btfss	15,0	;volatile
 19721  0045' 2800'              	goto	u408_21
 19722  0046' 2800'              	goto	u408_20
 19723  0047'                    u408_21:	
 19724  0047' 2800'              	goto	i1l393
 19725  0048'                    u408_20:	
 19726  0048'                    i1l6530:	
 19727                           
 19728                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             i2c1_driver_i2cISR();
 19729  0048' 0021               	movlb	1	; select bank1
 19730  0049' 0800'              	movf	(_i2c1_driver_i2cISR+1)^(0+128),w
 19731  004A' 008A               	movwf	10
 19732  004B' 0800'              	movf	_i2c1_driver_i2cISR^(0+128),w
 19733  004C' 000A               	callw
 19734  004D' 3180'              	pagesel	$
 19735                           
 19736                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 19737  004E' 2800'              	goto	i1l400
 19738  004F'                    i1l393:	
 19739                           ;mcc_generated_files/interrupt_manager.c: 81:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 19740                           
 19741  004F' 1C1A               	btfss	26,0	;volatile
 19742  0050' 2800'              	goto	u409_21
 19743  0051' 2800'              	goto	u409_20
 19744  0052'                    u409_21:	
 19745  0052' 2800'              	goto	i1l395
 19746  0053'                    u409_20:	
 19747  0053'                    i1l6532:	
 19748  0053' 1C10               	btfss	16,0	;volatile
 19749  0054' 2800'              	goto	u410_21
 19750  0055' 2800'              	goto	u410_20
 19751  0056'                    u410_21:	
 19752  0056' 2800'              	goto	i1l395
 19753  0057'                    u410_20:	
 19754  0057'                    i1l6534:	
 19755                           
 19756                           ;mcc_generated_files/interrupt_manager.c: 82:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 83:             TMR1_ISR();
 19757  0057' 3180' 2000' 3180'  	fcall	_TMR1_ISR
 19758                           
 19759                           ;mcc_generated_files/interrupt_manager.c: 84:         }
 19760  005A' 2800'              	goto	i1l400
 19761  005B'                    i1l395:	
 19762                           ;mcc_generated_files/interrupt_manager.c: 85:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 19763                           
 19764  005B' 1C9A               	btfss	26,1	;volatile
 19765  005C' 2800'              	goto	u411_21
 19766  005D' 2800'              	goto	u411_20
 19767  005E'                    u411_21:	
 19768  005E' 2800'              	goto	i1l394
 19769  005F'                    u411_20:	
 19770  005F'                    i1l6536:	
 19771  005F' 1C90               	btfss	16,1	;volatile
 19772  0060' 2800'              	goto	u412_21
 19773  0061' 2800'              	goto	u412_20
 19774  0062'                    u412_21:	
 19775  0062' 2800'              	goto	i1l394
 19776  0063'                    u412_20:	
 19777  0063'                    i1l6538:	
 19778                           
 19779                           ;mcc_generated_files/interrupt_manager.c: 86:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 87:             TMR2_ISR();
 19780  0063' 3180' 2000' 3180'  	fcall	_TMR2_ISR
 19781                           
 19782                           ;mcc_generated_files/interrupt_manager.c: 88:         }
 19783  0066' 2800'              	goto	i1l400
 19784  0067'                    i1l394:	
 19785  0067'                    i1l400:	
 19786  0067' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 19787  0068' 0009               	retfie
 19788  0069'                    __end_of_INTERRUPT_InterruptManager:	
 19789                           
 19790                           	psect	text64
 19791  0000'                    __ptext64:	
 19792 ;; *************** function _i2c_busCollisionISR *****************
 19793 ;; Defined at:
 19794 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 19795 ;; Parameters:    Size  Location     Type
 19796 ;;		None
 19797 ;; Auto vars:     Size  Location     Type
 19798 ;;		None
 19799 ;; Return value:  Size  Location     Type
 19800 ;;                  1    wreg      void 
 19801 ;; Registers used:
 19802 ;;		status,2, status,0, pclath, cstack
 19803 ;; Tracked objects:
 19804 ;;		On entry : 0/0
 19805 ;;		On exit  : 0/0
 19806 ;;		Unchanged: 0/0
 19807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19812 ;;Total ram usage:        0 bytes
 19813 ;; Hardware stack levels used:    1
 19814 ;; Hardware stack levels required when called:    1
 19815 ;; This function calls:
 19816 ;;		_i2c1_driver_clearBusCollision
 19817 ;; This function is called by:
 19818 ;;		_i2c_open
 19819 ;;		_INTERRUPT_InterruptManager
 19820 ;; This function uses a non-reentrant model
 19821 ;;
 19822                           
 19823                           
 19824                           ;psect for function _i2c_busCollisionISR
 19825  0000'                    _i2c_busCollisionISR:	
 19826  0000'                    i1l6058:	
 19827                           ;incstack = 0
 19828                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 19829                           
 19830                           
 19831                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 19832  0000' 3180' 2000' 3180'  	fcall	_i2c1_driver_clearBusCollision
 19833  0003'                    i1l213:	
 19834  0003' 0008               	return
 19835  0004'                    __end_of_i2c_busCollisionISR:	
 19836                           
 19837                           	psect	text65
 19838  0000'                    __ptext65:	
 19839 ;; *************** function _i2c1_driver_clearBusCollision *****************
 19840 ;; Defined at:
 19841 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 19842 ;; Parameters:    Size  Location     Type
 19843 ;;		None
 19844 ;; Auto vars:     Size  Location     Type
 19845 ;;		None
 19846 ;; Return value:  Size  Location     Type
 19847 ;;                  1    wreg      void 
 19848 ;; Registers used:
 19849 ;;		None
 19850 ;; Tracked objects:
 19851 ;;		On entry : 0/0
 19852 ;;		On exit  : 0/0
 19853 ;;		Unchanged: 0/0
 19854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19859 ;;Total ram usage:        0 bytes
 19860 ;; Hardware stack levels used:    1
 19861 ;; This function calls:
 19862 ;;		Nothing
 19863 ;; This function is called by:
 19864 ;;		_i2c_busCollisionISR
 19865 ;; This function uses a non-reentrant model
 19866 ;;
 19867                           
 19868                           
 19869                           ;psect for function _i2c1_driver_clearBusCollision
 19870  0000'                    _i2c1_driver_clearBusCollision:	
 19871  0000'                    i1l5618:	
 19872                           ;incstack = 0
 19873                           ; Regs used in _i2c1_driver_clearBusCollision: []
 19874                           
 19875                           
 19876                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 19877  0000' 002E               	movlb	14	; select bank14
 19878  0001' 108F               	bcf	15,1	;volatile
 19879  0002'                    i1l594:	
 19880  0002' 0008               	return
 19881  0003'                    __end_of_i2c1_driver_clearBusCollision:	
 19882                           
 19883                           	psect	text66
 19884  0000'                    __ptext66:	
 19885 ;; *************** function _i2c_ISR *****************
 19886 ;; Defined at:
 19887 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 19888 ;; Parameters:    Size  Location     Type
 19889 ;;		None
 19890 ;; Auto vars:     Size  Location     Type
 19891 ;;		None
 19892 ;; Return value:  Size  Location     Type
 19893 ;;                  1    wreg      void 
 19894 ;; Registers used:
 19895 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19896 ;; Tracked objects:
 19897 ;;		On entry : 0/0
 19898 ;;		On exit  : 0/0
 19899 ;;		Unchanged: 0/0
 19900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19903 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19904 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19905 ;;Total ram usage:        3 bytes
 19906 ;; Hardware stack levels used:    1
 19907 ;; Hardware stack levels required when called:    4
 19908 ;; This function calls:
 19909 ;;		_do_I2C_DO_ACK
 19910 ;;		_do_I2C_DO_ADDRESS_NACK
 19911 ;;		_do_I2C_DO_NACK_RESTART
 19912 ;;		_do_I2C_DO_NACK_STOP
 19913 ;;		_do_I2C_IDLE
 19914 ;;		_do_I2C_RCEN
 19915 ;;		_do_I2C_RESET
 19916 ;;		_do_I2C_RX
 19917 ;;		_do_I2C_SEND_ADR_READ
 19918 ;;		_do_I2C_SEND_ADR_WRITE
 19919 ;;		_do_I2C_SEND_RESTART
 19920 ;;		_do_I2C_SEND_RESTART_READ
 19921 ;;		_do_I2C_SEND_RESTART_WRITE
 19922 ;;		_do_I2C_SEND_STOP
 19923 ;;		_do_I2C_TX
 19924 ;;		_do_I2C_TX_EMPTY
 19925 ;;		_i2c1_driver_isNACK
 19926 ;;		_mssp1_clearIRQ
 19927 ;; This function is called by:
 19928 ;;		_i2c_open
 19929 ;;		_i2c_poller
 19930 ;;		_INTERRUPT_InterruptManager
 19931 ;; This function uses a non-reentrant model
 19932 ;;
 19933                           
 19934                           
 19935                           ;psect for function _i2c_ISR
 19936  0000'                    _i2c_ISR:	
 19937  0000'                    i1l6048:	
 19938                           ;incstack = 0
 19939                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19940                           
 19941                           
 19942                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 19943  0000' 3180' 2000' 3180'  	fcall	_mssp1_clearIRQ
 19944  0003'                    i1l6050:	
 19945                           
 19946                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 19947  0003' 0021               	movlb	1	; select bank1
 19948  0004' 1D80'              	btfss	_i2c_status^(0+128),3
 19949  0005' 2800'              	goto	u324_21
 19950  0006' 2800'              	goto	u324_20
 19951  0007'                    u324_21:	
 19952  0007' 2800'              	goto	i1l6056
 19953  0008'                    u324_20:	
 19954  0008'                    i1l6052:	
 19955  0008' 3180' 2000' 3180'  	fcall	_i2c1_driver_isNACK
 19956  000B' 1C03               	btfss	3,0
 19957  000C' 2800'              	goto	u325_21
 19958  000D' 2800'              	goto	u325_20
 19959  000E'                    u325_21:	
 19960  000E' 2800'              	goto	i1l6056
 19961  000F'                    u325_20:	
 19962  000F'                    i1l6054:	
 19963                           
 19964                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 19965  000F' 300F               	movlw	15
 19966  0010' 0020               	movlb	0	; select bank0
 19967  0011' 0080'              	movwf	??_i2c_ISR
 19968  0012' 0800'              	movf	??_i2c_ISR,w
 19969  0013' 0021               	movlb	1	; select bank1
 19970  0014' 0089'              	movwf	(_i2c_status^(0+128)+9)
 19971  0015'                    i1l6056:	
 19972                           
 19973                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 19974  0015' 0021               	movlb	1	; select bank1
 19975  0016' 0809'              	movf	(_i2c_status^(0+128)+9),w
 19976  0017' 0020               	movlb	0	; select bank0
 19977  0018' 0080'              	movwf	??_i2c_ISR
 19978  0019' 0181'              	clrf	??_i2c_ISR+1
 19979  001A' 3580'              	lslf	??_i2c_ISR,f
 19980  001B' 0D81'              	rlf	??_i2c_ISR+1,f
 19981  001C' 3000'              	movlw	low (_fsmStateTable| (0+32768))
 19982  001D' 0700'              	addwf	??_i2c_ISR,w
 19983  001E' 0084               	movwf	4
 19984  001F' 3000'              	movlw	high (_fsmStateTable| (0+32768))
 19985  0020' 3D01'              	addwfc	??_i2c_ISR+1,w
 19986  0021' 0085               	movwf	5
 19987  0022' 3F01               	moviw [1]fsr0
 19988  0023' 008A               	movwf	10
 19989  0024' 3F00               	moviw [0]fsr0
 19990  0025' 000A               	callw
 19991  0026' 3180'              	pagesel	$
 19992  0027' 0020               	movlb	0	; select bank0
 19993  0028' 0082'              	movwf	??_i2c_ISR+2
 19994  0029' 0802'              	movf	??_i2c_ISR+2,w
 19995  002A' 0021               	movlb	1	; select bank1
 19996  002B' 0089'              	movwf	(_i2c_status^(0+128)+9)
 19997  002C'                    i1l210:	
 19998  002C' 0008               	return
 19999  002D'                    __end_of_i2c_ISR:	
 20000                           
 20001                           	psect	text67
 20002  0000'                    __ptext67:	
 20003 ;; *************** function _mssp1_clearIRQ *****************
 20004 ;; Defined at:
 20005 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 20006 ;; Parameters:    Size  Location     Type
 20007 ;;		None
 20008 ;; Auto vars:     Size  Location     Type
 20009 ;;		None
 20010 ;; Return value:  Size  Location     Type
 20011 ;;                  1    wreg      void 
 20012 ;; Registers used:
 20013 ;;		None
 20014 ;; Tracked objects:
 20015 ;;		On entry : 0/0
 20016 ;;		On exit  : 0/0
 20017 ;;		Unchanged: 0/0
 20018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20023 ;;Total ram usage:        0 bytes
 20024 ;; Hardware stack levels used:    1
 20025 ;; This function calls:
 20026 ;;		Nothing
 20027 ;; This function is called by:
 20028 ;;		_i2c_ISR
 20029 ;;		_i2c_open
 20030 ;;		_i2c_close
 20031 ;; This function uses a non-reentrant model
 20032 ;;
 20033                           
 20034                           
 20035                           ;psect for function _mssp1_clearIRQ
 20036  0000'                    _mssp1_clearIRQ:	
 20037  0000'                    i1l5434:	
 20038                           ;incstack = 0
 20039                           ; Regs used in _mssp1_clearIRQ: []
 20040                           
 20041                           
 20042                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 20043  0000' 002E               	movlb	14	; select bank14
 20044  0001' 100F               	bcf	15,0	;volatile
 20045  0002'                    i1l498:	
 20046  0002' 0008               	return
 20047  0003'                    __end_of_mssp1_clearIRQ:	
 20048                           
 20049                           	psect	text68
 20050  0000'                    __ptext68:	
 20051 ;; *************** function _do_I2C_RX *****************
 20052 ;; Defined at:
 20053 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 20054 ;; Parameters:    Size  Location     Type
 20055 ;;		None
 20056 ;; Auto vars:     Size  Location     Type
 20057 ;;		None
 20058 ;; Return value:  Size  Location     Type
 20059 ;;                  1    wreg      enum E12722
 20060 ;; Registers used:
 20061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20062 ;; Tracked objects:
 20063 ;;		On entry : 0/0
 20064 ;;		On exit  : 0/0
 20065 ;;		Unchanged: 0/0
 20066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20069 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20070 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20071 ;;Total ram usage:        3 bytes
 20072 ;; Hardware stack levels used:    1
 20073 ;; Hardware stack levels required when called:    3
 20074 ;; This function calls:
 20075 ;;		Absolute function
 20076 ;;		_do_I2C_DO_NACK_RESTART
 20077 ;;		_do_I2C_DO_NACK_STOP
 20078 ;;		_i2c1_driver_getRXData
 20079 ;;		_i2c1_driver_sendACK
 20080 ;;		_i2c_restartWrite
 20081 ;;		_rd1RegCompleteHandler
 20082 ;;		_rd2RegCompleteHandler
 20083 ;;		_rdBlkRegCompleteHandler
 20084 ;;		_returnReset
 20085 ;;		_returnStop
 20086 ;;		_wr1RegCompleteHandler
 20087 ;;		_wr2RegCompleteHandler
 20088 ;; This function is called by:
 20089 ;;		_i2c_ISR
 20090 ;; This function uses a non-reentrant model
 20091 ;;
 20092                           
 20093                           
 20094                           ;psect for function _do_I2C_RX
 20095  0000'                    _do_I2C_RX:	
 20096  0000'                    i1l5560:	
 20097                           ;incstack = 0
 20098                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20099                           
 20100                           
 20101                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 20102  0000' 3180' 2000' 3180'  	fcall	_i2c1_driver_getRXData
 20103  0003' 008A'              	movwf	??_do_I2C_RX
 20104  0004' 0021               	movlb	1	; select bank1
 20105  0005' 0800'              	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 20106  0006' 0086               	movwf	6
 20107  0007' 0187               	clrf	7
 20108  0008' 080A'              	movf	??_do_I2C_RX,w
 20109  0009' 0081               	movwf	1
 20110  000A'                    i1l5562:	
 20111  000A' 3001               	movlw	1
 20112  000B' 008A'              	movwf	??_do_I2C_RX
 20113  000C' 080A'              	movf	??_do_I2C_RX,w
 20114  000D' 0780'              	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 20115  000E'                    i1l5564:	
 20116                           
 20117                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 20118  000E' 3001               	movlw	1
 20119  000F' 0283'              	subwf	(_i2c_status^(0+128)+3),f
 20120  0010' 3000               	movlw	0
 20121  0011' 3B83'              	subwfb	((_i2c_status+1)^(0+128)+3),f
 20122  0012' 0803'              	movf	(_i2c_status^(0+128)+3),w
 20123  0013' 0403'              	iorwf	((_i2c_status+1)^(0+128)+3),w
 20124  0014' 1903               	btfsc	3,2
 20125  0015' 2800'              	goto	u282_21
 20126  0016' 2800'              	goto	u282_20
 20127  0017'                    u282_21:	
 20128  0017' 2800'              	goto	i1l185
 20129  0018'                    u282_20:	
 20130  0018'                    i1l5566:	
 20131                           
 20132                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 20133  0018' 3180' 2000' 3180'  	fcall	_i2c1_driver_sendACK
 20134  001B'                    i1l5568:	
 20135                           
 20136                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 20137  001B' 3005               	movlw	5
 20138  001C' 2800'              	goto	i1l186
 20139  001D'                    i1l185:	
 20140                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 20141                           
 20142                           
 20143                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 20144  001D' 1500'              	bsf	_i2c_status^(0+128),2
 20145                           
 20146                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 20147  001E' 2800'              	goto	i1l5584
 20148  001F'                    i1l5574:	
 20149                           
 20150                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 20151  001F' 3180' 2000' 3180'  	fcall	_do_I2C_DO_NACK_RESTART
 20152  0022' 2800'              	goto	i1l186
 20153  0023'                    i1l5578:	
 20154                           
 20155                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 20156  0023' 3180' 2000' 3180'  	fcall	_do_I2C_DO_NACK_STOP
 20157  0026' 2800'              	goto	i1l186
 20158  0027'                    i1l5584:	
 20159  0027' 0800'              	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 20160  0028' 008A'              	movwf	??_do_I2C_RX
 20161  0029' 080A'              	movf	??_do_I2C_RX,w
 20162  002A' 0089'              	movwf	rdBlkRegCompleteHandler@p
 20163  002B' 300B               	movlw	11
 20164  002C' 3E00'              	addlw	(low (_i2c_status| 0))& (0+255)
 20165  002D' 0086               	movwf	6
 20166  002E' 0187               	clrf	7
 20167  002F' 3F41               	moviw [1]fsr1
 20168  0030' 008A               	movwf	10
 20169  0031' 3F40               	moviw [0]fsr1
 20170  0032' 000A               	callw
 20171  0033' 3180'              	pagesel	$
 20172  0034' 008B'              	movwf	??_do_I2C_RX+1
 20173  0035' 018C'              	clrf	??_do_I2C_RX+2
 20174                           
 20175                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20176                           ; Switch size 1, requested type "simple"
 20177                           ; Number of cases is 1, Range of values is 0 to 0
 20178                           ; switch strategies available:
 20179                           ; Name         Instructions Cycles
 20180                           ; simple_byte            4     3 (average)
 20181                           ; direct_byte            8     6 (fixed)
 20182                           ; jumptable            260     6 (fixed)
 20183                           ;	Chosen strategy is simple_byte
 20184  0036' 080C'              	movf	??_do_I2C_RX+2,w
 20185  0037' 3A00               	xorlw	0	; case 0
 20186  0038' 1903               	skipnz
 20187  0039' 2800'              	goto	i1l8516
 20188  003A' 2800'              	goto	i1l5578
 20189  003B'                    i1l8516:	
 20190                           
 20191                           ; Switch size 1, requested type "simple"
 20192                           ; Number of cases is 4, Range of values is 1 to 4
 20193                           ; switch strategies available:
 20194                           ; Name         Instructions Cycles
 20195                           ; simple_byte           13     7 (average)
 20196                           ; direct_byte           17     9 (fixed)
 20197                           ; jumptable            263     9 (fixed)
 20198                           ;	Chosen strategy is simple_byte
 20199  003B' 080B'              	movf	??_do_I2C_RX+1,w
 20200  003C' 3A01               	xorlw	1	; case 1
 20201  003D' 1903               	skipnz
 20202  003E' 2800'              	goto	i1l5578
 20203  003F' 3A03               	xorlw	3	; case 2
 20204  0040' 1903               	skipnz
 20205  0041' 2800'              	goto	i1l5574
 20206  0042' 3A01               	xorlw	1	; case 3
 20207  0043' 1903               	skipnz
 20208  0044' 2800'              	goto	i1l5574
 20209  0045' 3A07               	xorlw	7	; case 4
 20210  0046' 1903               	skipnz
 20211  0047' 2800'              	goto	i1l5578
 20212  0048' 2800'              	goto	i1l5578
 20213  0049'                    i1l186:	
 20214  0049' 0008               	return
 20215  004A'                    __end_of_do_I2C_RX:	
 20216                           
 20217                           	psect	text69
 20218  0000'                    __ptext69:	
 20219 ;; *************** function _do_I2C_TX *****************
 20220 ;; Defined at:
 20221 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 20222 ;; Parameters:    Size  Location     Type
 20223 ;;		None
 20224 ;; Auto vars:     Size  Location     Type
 20225 ;;		None
 20226 ;; Return value:  Size  Location     Type
 20227 ;;                  1    wreg      enum E12722
 20228 ;; Registers used:
 20229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20230 ;; Tracked objects:
 20231 ;;		On entry : 0/0
 20232 ;;		On exit  : 0/0
 20233 ;;		Unchanged: 0/0
 20234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20237 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20238 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20239 ;;Total ram usage:        3 bytes
 20240 ;; Hardware stack levels used:    1
 20241 ;; Hardware stack levels required when called:    3
 20242 ;; This function calls:
 20243 ;;		Absolute function
 20244 ;;		_do_I2C_SEND_RESTART_READ
 20245 ;;		_do_I2C_SEND_RESTART_WRITE
 20246 ;;		_do_I2C_SEND_STOP
 20247 ;;		_i2c1_driver_TXData
 20248 ;;		_i2c1_driver_isNACK
 20249 ;;		_i2c_restartWrite
 20250 ;;		_rd1RegCompleteHandler
 20251 ;;		_rd2RegCompleteHandler
 20252 ;;		_rdBlkRegCompleteHandler
 20253 ;;		_returnReset
 20254 ;;		_returnStop
 20255 ;;		_wr1RegCompleteHandler
 20256 ;;		_wr2RegCompleteHandler
 20257 ;; This function is called by:
 20258 ;;		_i2c_ISR
 20259 ;; This function uses a non-reentrant model
 20260 ;;
 20261                           
 20262                           
 20263                           ;psect for function _do_I2C_TX
 20264  0000'                    _do_I2C_TX:	
 20265  0000'                    i1l5526:	
 20266                           ;incstack = 0
 20267                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20268                           
 20269                           
 20270                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 20271  0000' 3180' 2000' 3180'  	fcall	_i2c1_driver_isNACK
 20272  0003' 1C03               	btfss	3,0
 20273  0004' 2800'              	goto	u280_21
 20274  0005' 2800'              	goto	u280_20
 20275  0006'                    u280_21:	
 20276  0006' 2800'              	goto	i1l169
 20277  0007'                    u280_20:	
 20278  0007' 2800'              	goto	i1l5544
 20279  0008'                    i1l5530:	
 20280                           
 20281                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 20282  0008' 3180' 2000' 3180'  	fcall	_do_I2C_SEND_RESTART_READ
 20283  000B' 2800'              	goto	i1l172
 20284  000C'                    i1l5534:	
 20285                           
 20286                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 20287  000C' 3180' 2000' 3180'  	fcall	_do_I2C_SEND_RESTART_WRITE
 20288  000F' 2800'              	goto	i1l172
 20289  0010'                    i1l5538:	
 20290                           
 20291                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 20292  0010' 3180' 2000' 3180'  	fcall	_do_I2C_SEND_STOP
 20293  0013' 2800'              	goto	i1l172
 20294  0014'                    i1l5544:	
 20295  0014' 0021               	movlb	1	; select bank1
 20296  0015' 0800'              	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 20297  0016' 008A'              	movwf	??_do_I2C_TX
 20298  0017' 080A'              	movf	??_do_I2C_TX,w
 20299  0018' 0089'              	movwf	rdBlkRegCompleteHandler@p
 20300  0019' 3011               	movlw	17
 20301  001A' 3E00'              	addlw	(low (_i2c_status| 0))& (0+255)
 20302  001B' 0086               	movwf	6
 20303  001C' 0187               	clrf	7
 20304  001D' 3F41               	moviw [1]fsr1
 20305  001E' 008A               	movwf	10
 20306  001F' 3F40               	moviw [0]fsr1
 20307  0020' 000A               	callw
 20308  0021' 3180'              	pagesel	$
 20309  0022' 008B'              	movwf	??_do_I2C_TX+1
 20310  0023' 018C'              	clrf	??_do_I2C_TX+2
 20311                           
 20312                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20313                           ; Switch size 1, requested type "simple"
 20314                           ; Number of cases is 1, Range of values is 0 to 0
 20315                           ; switch strategies available:
 20316                           ; Name         Instructions Cycles
 20317                           ; simple_byte            4     3 (average)
 20318                           ; direct_byte            8     6 (fixed)
 20319                           ; jumptable            260     6 (fixed)
 20320                           ;	Chosen strategy is simple_byte
 20321  0024' 080C'              	movf	??_do_I2C_TX+2,w
 20322  0025' 3A00               	xorlw	0	; case 0
 20323  0026' 1903               	skipnz
 20324  0027' 2800'              	goto	i1l8518
 20325  0028' 2800'              	goto	i1l5538
 20326  0029'                    i1l8518:	
 20327                           
 20328                           ; Switch size 1, requested type "simple"
 20329                           ; Number of cases is 4, Range of values is 1 to 4
 20330                           ; switch strategies available:
 20331                           ; Name         Instructions Cycles
 20332                           ; simple_byte           13     7 (average)
 20333                           ; direct_byte           17     9 (fixed)
 20334                           ; jumptable            263     9 (fixed)
 20335                           ;	Chosen strategy is simple_byte
 20336  0029' 080B'              	movf	??_do_I2C_TX+1,w
 20337  002A' 3A01               	xorlw	1	; case 1
 20338  002B' 1903               	skipnz
 20339  002C' 2800'              	goto	i1l5538
 20340  002D' 3A03               	xorlw	3	; case 2
 20341  002E' 1903               	skipnz
 20342  002F' 2800'              	goto	i1l5530
 20343  0030' 3A01               	xorlw	1	; case 3
 20344  0031' 1903               	skipnz
 20345  0032' 2800'              	goto	i1l5534
 20346  0033' 3A07               	xorlw	7	; case 4
 20347  0034' 1903               	skipnz
 20348  0035' 2800'              	goto	i1l5538
 20349  0036' 2800'              	goto	i1l5538
 20350  0037'                    i1l169:	
 20351                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 20352                           
 20353                           
 20354                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 20355  0037' 0021               	movlb	1	; select bank1
 20356  0038' 1180'              	bcf	_i2c_status^(0+128),3
 20357  0039'                    i1l5546:	
 20358                           
 20359                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 20360  0039' 3002               	movlw	2
 20361  003A' 3E00'              	addlw	(low (_i2c_status| 0))& (0+255)
 20362  003B' 0086               	movwf	6
 20363  003C' 0187               	clrf	7
 20364  003D' 3F40               	moviw [0]fsr1
 20365  003E' 0084               	movwf	4
 20366  003F' 0185               	clrf	5
 20367  0040' 0A81               	incf	1,f
 20368  0041' 0800               	movf	0,w
 20369  0042' 3180' 2000' 3180'  	fcall	_i2c1_driver_TXData
 20370  0045'                    i1l5548:	
 20371                           
 20372                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 20373  0045' 3001               	movlw	1
 20374  0046' 0021               	movlb	1	; select bank1
 20375  0047' 0283'              	subwf	(_i2c_status^(0+128)+3),f
 20376  0048' 3000               	movlw	0
 20377  0049' 3B83'              	subwfb	((_i2c_status+1)^(0+128)+3),f
 20378  004A' 0803'              	movf	(_i2c_status^(0+128)+3),w
 20379  004B' 0403'              	iorwf	((_i2c_status+1)^(0+128)+3),w
 20380  004C' 1D03               	btfss	3,2
 20381  004D' 2800'              	goto	u281_21
 20382  004E' 2800'              	goto	u281_20
 20383  004F'                    u281_21:	
 20384  004F' 2800'              	goto	i1l5552
 20385  0050'                    u281_20:	
 20386  0050'                    i1l5550:	
 20387  0050' 3006               	movlw	6
 20388  0051' 2800'              	goto	i1l172
 20389  0052'                    i1l5552:	
 20390  0052' 3003               	movlw	3
 20391  0053'                    i1l172:	
 20392  0053' 0008               	return
 20393  0054'                    __end_of_do_I2C_TX:	
 20394                           
 20395                           	psect	text70
 20396  0000'                    __ptext70:	
 20397 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 20398 ;; Defined at:
 20399 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 20400 ;; Parameters:    Size  Location     Type
 20401 ;;		None
 20402 ;; Auto vars:     Size  Location     Type
 20403 ;;		None
 20404 ;; Return value:  Size  Location     Type
 20405 ;;                  1    wreg      enum E12722
 20406 ;; Registers used:
 20407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20408 ;; Tracked objects:
 20409 ;;		On entry : 0/0
 20410 ;;		On exit  : 0/0
 20411 ;;		Unchanged: 0/0
 20412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20415 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20416 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20417 ;;Total ram usage:        3 bytes
 20418 ;; Hardware stack levels used:    1
 20419 ;; Hardware stack levels required when called:    3
 20420 ;; This function calls:
 20421 ;;		Absolute function
 20422 ;;		_do_I2C_SEND_RESTART
 20423 ;;		_do_I2C_SEND_STOP
 20424 ;;		_i2c_restartWrite
 20425 ;;		_rd1RegCompleteHandler
 20426 ;;		_rd2RegCompleteHandler
 20427 ;;		_rdBlkRegCompleteHandler
 20428 ;;		_returnReset
 20429 ;;		_returnStop
 20430 ;;		_wr1RegCompleteHandler
 20431 ;;		_wr2RegCompleteHandler
 20432 ;; This function is called by:
 20433 ;;		_i2c_ISR
 20434 ;; This function uses a non-reentrant model
 20435 ;;
 20436                           
 20437                           
 20438                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 20439  0000'                    _do_I2C_DO_ADDRESS_NACK:	
 20440  0000'                    i1l5504:	
 20441                           ;incstack = 0
 20442                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20443                           
 20444                           
 20445                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 20446  0000' 0021               	movlb	1	; select bank1
 20447  0001' 1180'              	bcf	_i2c_status^(0+128),3
 20448  0002'                    i1l5506:	
 20449                           
 20450                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 20451  0002' 3002               	movlw	2
 20452  0003' 008A'              	movwf	??_do_I2C_DO_ADDRESS_NACK
 20453  0004' 080A'              	movf	??_do_I2C_DO_ADDRESS_NACK,w
 20454  0005' 008A'              	movwf	(_i2c_status^(0+128)+10)
 20455                           
 20456                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 20457  0006' 2800'              	goto	i1l5518
 20458  0007'                    i1l5508:	
 20459                           
 20460                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 20461  0007' 3180' 2000' 3180'  	fcall	_do_I2C_SEND_RESTART
 20462  000A' 2800'              	goto	i1l164
 20463  000B'                    i1l5512:	
 20464                           
 20465                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 20466  000B' 3180' 2000' 3180'  	fcall	_do_I2C_SEND_STOP
 20467  000E' 2800'              	goto	i1l164
 20468  000F'                    i1l5518:	
 20469  000F' 0800'              	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 20470  0010' 008A'              	movwf	??_do_I2C_DO_ADDRESS_NACK
 20471  0011' 080A'              	movf	??_do_I2C_DO_ADDRESS_NACK,w
 20472  0012' 0089'              	movwf	rdBlkRegCompleteHandler@p
 20473  0013' 300F               	movlw	15
 20474  0014' 3E00'              	addlw	(low (_i2c_status| 0))& (0+255)
 20475  0015' 0086               	movwf	6
 20476  0016' 0187               	clrf	7
 20477  0017' 3F41               	moviw [1]fsr1
 20478  0018' 008A               	movwf	10
 20479  0019' 3F40               	moviw [0]fsr1
 20480  001A' 000A               	callw
 20481  001B' 3180'              	pagesel	$
 20482  001C' 008B'              	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 20483  001D' 018C'              	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 20484                           
 20485                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20486                           ; Switch size 1, requested type "simple"
 20487                           ; Number of cases is 1, Range of values is 0 to 0
 20488                           ; switch strategies available:
 20489                           ; Name         Instructions Cycles
 20490                           ; simple_byte            4     3 (average)
 20491                           ; direct_byte            8     6 (fixed)
 20492                           ; jumptable            260     6 (fixed)
 20493                           ;	Chosen strategy is simple_byte
 20494  001E' 080C'              	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 20495  001F' 3A00               	xorlw	0	; case 0
 20496  0020' 1903               	skipnz
 20497  0021' 2800'              	goto	i1l8520
 20498  0022' 2800'              	goto	i1l5512
 20499  0023'                    i1l8520:	
 20500                           
 20501                           ; Switch size 1, requested type "simple"
 20502                           ; Number of cases is 2, Range of values is 2 to 3
 20503                           ; switch strategies available:
 20504                           ; Name         Instructions Cycles
 20505                           ; simple_byte            7     4 (average)
 20506                           ; direct_byte           13     9 (fixed)
 20507                           ; jumptable            263     9 (fixed)
 20508                           ;	Chosen strategy is simple_byte
 20509  0023' 080B'              	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 20510  0024' 3A02               	xorlw	2	; case 2
 20511  0025' 1903               	skipnz
 20512  0026' 2800'              	goto	i1l5508
 20513  0027' 3A01               	xorlw	1	; case 3
 20514  0028' 1903               	skipnz
 20515  0029' 2800'              	goto	i1l5508
 20516  002A' 2800'              	goto	i1l5512
 20517  002B'                    i1l164:	
 20518  002B' 0008               	return
 20519  002C'                    __end_of_do_I2C_DO_ADDRESS_NACK:	
 20520                           
 20521                           	psect	text71
 20522  0000'                    __ptext71:	
 20523 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 20524 ;; Defined at:
 20525 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 20526 ;; Parameters:    Size  Location     Type
 20527 ;;		None
 20528 ;; Auto vars:     Size  Location     Type
 20529 ;;		None
 20530 ;; Return value:  Size  Location     Type
 20531 ;;                  1    wreg      enum E12722
 20532 ;; Registers used:
 20533 ;;		wreg, status,2, status,0, pclath, cstack
 20534 ;; Tracked objects:
 20535 ;;		On entry : 0/0
 20536 ;;		On exit  : 0/0
 20537 ;;		Unchanged: 0/0
 20538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20543 ;;Total ram usage:        0 bytes
 20544 ;; Hardware stack levels used:    1
 20545 ;; Hardware stack levels required when called:    1
 20546 ;; This function calls:
 20547 ;;		_i2c1_driver_sendNACK
 20548 ;; This function is called by:
 20549 ;;		_do_I2C_RX
 20550 ;;		_i2c_ISR
 20551 ;; This function uses a non-reentrant model
 20552 ;;
 20553                           
 20554                           
 20555                           ;psect for function _do_I2C_DO_NACK_RESTART
 20556  0000'                    _do_I2C_DO_NACK_RESTART:	
 20557  0000'                    i1l5206:	
 20558                           ;incstack = 0
 20559                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 20560                           
 20561                           
 20562                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 20563  0000' 3180' 2000' 3180'  	fcall	_i2c1_driver_sendNACK
 20564  0003'                    i1l5208:	
 20565                           
 20566                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 20567  0003' 3009               	movlw	9
 20568  0004'                    i1l158:	
 20569  0004' 0008               	return
 20570  0005'                    __end_of_do_I2C_DO_NACK_RESTART:	
 20571                           
 20572                           	psect	text72
 20573  0000'                    __ptext72:	
 20574 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 20575 ;; Defined at:
 20576 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 20577 ;; Parameters:    Size  Location     Type
 20578 ;;		None
 20579 ;; Auto vars:     Size  Location     Type
 20580 ;;		None
 20581 ;; Return value:  Size  Location     Type
 20582 ;;                  1    wreg      enum E12722
 20583 ;; Registers used:
 20584 ;;		wreg, status,2, status,0, pclath, cstack
 20585 ;; Tracked objects:
 20586 ;;		On entry : 0/0
 20587 ;;		On exit  : 0/0
 20588 ;;		Unchanged: 0/0
 20589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20594 ;;Total ram usage:        0 bytes
 20595 ;; Hardware stack levels used:    1
 20596 ;; Hardware stack levels required when called:    1
 20597 ;; This function calls:
 20598 ;;		_i2c1_driver_sendNACK
 20599 ;; This function is called by:
 20600 ;;		_do_I2C_RX
 20601 ;;		_i2c_ISR
 20602 ;; This function uses a non-reentrant model
 20603 ;;
 20604                           
 20605                           
 20606                           ;psect for function _do_I2C_DO_NACK_STOP
 20607  0000'                    _do_I2C_DO_NACK_STOP:	
 20608  0000'                    i1l5200:	
 20609                           ;incstack = 0
 20610                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 20611                           
 20612                           
 20613                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 20614  0000' 3180' 2000' 3180'  	fcall	_i2c1_driver_sendNACK
 20615  0003'                    i1l5202:	
 20616                           
 20617                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 20618  0003' 300A               	movlw	10
 20619  0004'                    i1l155:	
 20620  0004' 0008               	return
 20621  0005'                    __end_of_do_I2C_DO_NACK_STOP:	
 20622                           
 20623                           	psect	text73
 20624  0000'                    __ptext73:	
 20625 ;; *************** function _do_I2C_DO_ACK *****************
 20626 ;; Defined at:
 20627 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 20628 ;; Parameters:    Size  Location     Type
 20629 ;;		None
 20630 ;; Auto vars:     Size  Location     Type
 20631 ;;		None
 20632 ;; Return value:  Size  Location     Type
 20633 ;;                  1    wreg      enum E12722
 20634 ;; Registers used:
 20635 ;;		wreg, status,2, status,0, pclath, cstack
 20636 ;; Tracked objects:
 20637 ;;		On entry : 0/0
 20638 ;;		On exit  : 0/0
 20639 ;;		Unchanged: 0/0
 20640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20645 ;;Total ram usage:        0 bytes
 20646 ;; Hardware stack levels used:    1
 20647 ;; Hardware stack levels required when called:    1
 20648 ;; This function calls:
 20649 ;;		_i2c1_driver_sendACK
 20650 ;; This function is called by:
 20651 ;;		_i2c_ISR
 20652 ;; This function uses a non-reentrant model
 20653 ;;
 20654                           
 20655                           
 20656                           ;psect for function _do_I2C_DO_ACK
 20657  0000'                    _do_I2C_DO_ACK:	
 20658  0000'                    i1l5498:	
 20659                           ;incstack = 0
 20660                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 20661                           
 20662                           
 20663                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 20664  0000' 3180' 2000' 3180'  	fcall	_i2c1_driver_sendACK
 20665  0003'                    i1l5500:	
 20666                           
 20667                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 20668  0003' 3005               	movlw	5
 20669  0004'                    i1l152:	
 20670  0004' 0008               	return
 20671  0005'                    __end_of_do_I2C_DO_ACK:	
 20672                           
 20673                           	psect	text74
 20674  0000'                    __ptext74:	
 20675 ;; *************** function _do_I2C_RCEN *****************
 20676 ;; Defined at:
 20677 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 20678 ;; Parameters:    Size  Location     Type
 20679 ;;		None
 20680 ;; Auto vars:     Size  Location     Type
 20681 ;;		None
 20682 ;; Return value:  Size  Location     Type
 20683 ;;                  1    wreg      enum E12722
 20684 ;; Registers used:
 20685 ;;		wreg, status,2, status,0, pclath, cstack
 20686 ;; Tracked objects:
 20687 ;;		On entry : 0/0
 20688 ;;		On exit  : 0/0
 20689 ;;		Unchanged: 0/0
 20690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20695 ;;Total ram usage:        0 bytes
 20696 ;; Hardware stack levels used:    1
 20697 ;; Hardware stack levels required when called:    1
 20698 ;; This function calls:
 20699 ;;		_i2c1_driver_startRX
 20700 ;; This function is called by:
 20701 ;;		_i2c_ISR
 20702 ;; This function uses a non-reentrant model
 20703 ;;
 20704                           
 20705                           
 20706                           ;psect for function _do_I2C_RCEN
 20707  0000'                    _do_I2C_RCEN:	
 20708  0000'                    i1l5490:	
 20709                           ;incstack = 0
 20710                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 20711                           
 20712                           
 20713                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 20714  0000' 0021               	movlb	1	; select bank1
 20715  0001' 1180'              	bcf	_i2c_status^(0+128),3
 20716  0002'                    i1l5492:	
 20717                           
 20718                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 20719  0002' 3180' 2000' 3180'  	fcall	_i2c1_driver_startRX
 20720  0005'                    i1l5494:	
 20721                           
 20722                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 20723  0005' 3004               	movlw	4
 20724  0006'                    i1l149:	
 20725  0006' 0008               	return
 20726  0007'                    __end_of_do_I2C_RCEN:	
 20727                           
 20728                           	psect	text75
 20729  0000'                    __ptext75:	
 20730 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 20731 ;; Defined at:
 20732 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 20733 ;; Parameters:    Size  Location     Type
 20734 ;;		None
 20735 ;; Auto vars:     Size  Location     Type
 20736 ;;		None
 20737 ;; Return value:  Size  Location     Type
 20738 ;;                  1    wreg      enum E12722
 20739 ;; Registers used:
 20740 ;;		wreg, status,2, status,0, pclath, cstack
 20741 ;; Tracked objects:
 20742 ;;		On entry : 0/0
 20743 ;;		On exit  : 0/0
 20744 ;;		Unchanged: 0/0
 20745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20750 ;;Total ram usage:        0 bytes
 20751 ;; Hardware stack levels used:    1
 20752 ;; Hardware stack levels required when called:    1
 20753 ;; This function calls:
 20754 ;;		_i2c1_driver_TXData
 20755 ;; This function is called by:
 20756 ;;		_i2c_ISR
 20757 ;; This function uses a non-reentrant model
 20758 ;;
 20759                           
 20760                           
 20761                           ;psect for function _do_I2C_SEND_ADR_WRITE
 20762  0000'                    _do_I2C_SEND_ADR_WRITE:	
 20763  0000'                    i1l5482:	
 20764                           ;incstack = 0
 20765                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20766                           
 20767                           
 20768                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 20769  0000' 0021               	movlb	1	; select bank1
 20770  0001' 1580'              	bsf	_i2c_status^(0+128),3
 20771  0002'                    i1l5484:	
 20772                           
 20773                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 20774  0002' 3501'              	lslf	(_i2c_status^(0+128)+1),w
 20775  0003' 3180' 2000' 3180'  	fcall	_i2c1_driver_TXData
 20776  0006'                    i1l5486:	
 20777                           
 20778                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 20779  0006' 3003               	movlw	3
 20780  0007'                    i1l146:	
 20781  0007' 0008               	return
 20782  0008'                    __end_of_do_I2C_SEND_ADR_WRITE:	
 20783                           
 20784                           	psect	text76
 20785  0000'                    __ptext76:	
 20786 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 20787 ;; Defined at:
 20788 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 20789 ;; Parameters:    Size  Location     Type
 20790 ;;		None
 20791 ;; Auto vars:     Size  Location     Type
 20792 ;;		None
 20793 ;; Return value:  Size  Location     Type
 20794 ;;                  1    wreg      enum E12722
 20795 ;; Registers used:
 20796 ;;		wreg, status,2, status,0, pclath, cstack
 20797 ;; Tracked objects:
 20798 ;;		On entry : 0/0
 20799 ;;		On exit  : 0/0
 20800 ;;		Unchanged: 0/0
 20801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20806 ;;Total ram usage:        0 bytes
 20807 ;; Hardware stack levels used:    1
 20808 ;; Hardware stack levels required when called:    1
 20809 ;; This function calls:
 20810 ;;		_i2c1_driver_TXData
 20811 ;; This function is called by:
 20812 ;;		_i2c_ISR
 20813 ;; This function uses a non-reentrant model
 20814 ;;
 20815                           
 20816                           
 20817                           ;psect for function _do_I2C_SEND_ADR_READ
 20818  0000'                    _do_I2C_SEND_ADR_READ:	
 20819  0000'                    i1l5474:	
 20820                           ;incstack = 0
 20821                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 20822                           
 20823                           
 20824                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 20825  0000' 0021               	movlb	1	; select bank1
 20826  0001' 1580'              	bsf	_i2c_status^(0+128),3
 20827  0002'                    i1l5476:	
 20828                           
 20829                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 20830  0002' 1403               	setc
 20831  0003' 0D01'              	rlf	(_i2c_status^(0+128)+1),w
 20832  0004' 3180' 2000' 3180'  	fcall	_i2c1_driver_TXData
 20833  0007'                    i1l5478:	
 20834                           
 20835                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 20836  0007' 3005               	movlw	5
 20837  0008'                    i1l143:	
 20838  0008' 0008               	return
 20839  0009'                    __end_of_do_I2C_SEND_ADR_READ:	
 20840                           
 20841                           	psect	text77
 20842  0000'                    __ptext77:	
 20843 ;; *************** function _do_I2C_SEND_STOP *****************
 20844 ;; Defined at:
 20845 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 20846 ;; Parameters:    Size  Location     Type
 20847 ;;		None
 20848 ;; Auto vars:     Size  Location     Type
 20849 ;;		None
 20850 ;; Return value:  Size  Location     Type
 20851 ;;                  1    wreg      enum E12722
 20852 ;; Registers used:
 20853 ;;		wreg, status,2, status,0, pclath, cstack
 20854 ;; Tracked objects:
 20855 ;;		On entry : 0/0
 20856 ;;		On exit  : 0/0
 20857 ;;		Unchanged: 0/0
 20858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20863 ;;Total ram usage:        0 bytes
 20864 ;; Hardware stack levels used:    1
 20865 ;; Hardware stack levels required when called:    1
 20866 ;; This function calls:
 20867 ;;		_i2c1_driver_stop
 20868 ;; This function is called by:
 20869 ;;		_do_I2C_DO_ADDRESS_NACK
 20870 ;;		_do_I2C_TX
 20871 ;;		_do_I2C_TX_EMPTY
 20872 ;;		_i2c_ISR
 20873 ;; This function uses a non-reentrant model
 20874 ;;
 20875                           
 20876                           
 20877                           ;psect for function _do_I2C_SEND_STOP
 20878  0000'                    _do_I2C_SEND_STOP:	
 20879  0000'                    i1l5188:	
 20880                           ;incstack = 0
 20881                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 20882                           
 20883                           
 20884                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 20885  0000' 3180' 2000' 3180'  	fcall	_i2c1_driver_stop
 20886  0003'                    i1l5190:	
 20887                           
 20888                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 20889  0003' 3000               	movlw	0
 20890  0004'                    i1l140:	
 20891  0004' 0008               	return
 20892  0005'                    __end_of_do_I2C_SEND_STOP:	
 20893                           
 20894                           	psect	text78
 20895  0000'                    __ptext78:	
 20896 ;; *************** function _do_I2C_SEND_RESTART *****************
 20897 ;; Defined at:
 20898 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 20899 ;; Parameters:    Size  Location     Type
 20900 ;;		None
 20901 ;; Auto vars:     Size  Location     Type
 20902 ;;		None
 20903 ;; Return value:  Size  Location     Type
 20904 ;;                  1    wreg      enum E12722
 20905 ;; Registers used:
 20906 ;;		wreg, status,2, status,0, pclath, cstack
 20907 ;; Tracked objects:
 20908 ;;		On entry : 0/0
 20909 ;;		On exit  : 0/0
 20910 ;;		Unchanged: 0/0
 20911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20916 ;;Total ram usage:        0 bytes
 20917 ;; Hardware stack levels used:    1
 20918 ;; Hardware stack levels required when called:    1
 20919 ;; This function calls:
 20920 ;;		_i2c1_driver_restart
 20921 ;; This function is called by:
 20922 ;;		_do_I2C_DO_ADDRESS_NACK
 20923 ;;		_do_I2C_TX_EMPTY
 20924 ;;		_i2c_ISR
 20925 ;; This function uses a non-reentrant model
 20926 ;;
 20927                           
 20928                           
 20929                           ;psect for function _do_I2C_SEND_RESTART
 20930  0000'                    _do_I2C_SEND_RESTART:	
 20931  0000'                    i1l5182:	
 20932                           ;incstack = 0
 20933                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 20934                           
 20935                           
 20936                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 20937  0000' 3180' 2000' 3180'  	fcall	_i2c1_driver_restart
 20938  0003'                    i1l5184:	
 20939                           
 20940                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 20941  0003' 3001               	movlw	1
 20942  0004'                    i1l137:	
 20943  0004' 0008               	return
 20944  0005'                    __end_of_do_I2C_SEND_RESTART:	
 20945                           
 20946                           	psect	text79
 20947  0000'                    __ptext79:	
 20948 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 20949 ;; Defined at:
 20950 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 20951 ;; Parameters:    Size  Location     Type
 20952 ;;		None
 20953 ;; Auto vars:     Size  Location     Type
 20954 ;;		None
 20955 ;; Return value:  Size  Location     Type
 20956 ;;                  1    wreg      enum E12722
 20957 ;; Registers used:
 20958 ;;		wreg, status,2, status,0, pclath, cstack
 20959 ;; Tracked objects:
 20960 ;;		On entry : 0/0
 20961 ;;		On exit  : 0/0
 20962 ;;		Unchanged: 0/0
 20963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20968 ;;Total ram usage:        0 bytes
 20969 ;; Hardware stack levels used:    1
 20970 ;; Hardware stack levels required when called:    1
 20971 ;; This function calls:
 20972 ;;		_i2c1_driver_restart
 20973 ;; This function is called by:
 20974 ;;		_do_I2C_TX
 20975 ;;		_i2c_ISR
 20976 ;; This function uses a non-reentrant model
 20977 ;;
 20978                           
 20979                           
 20980                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 20981  0000'                    _do_I2C_SEND_RESTART_WRITE:	
 20982  0000'                    i1l5176:	
 20983                           ;incstack = 0
 20984                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20985                           
 20986                           
 20987                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 20988  0000' 3180' 2000' 3180'  	fcall	_i2c1_driver_restart
 20989  0003'                    i1l5178:	
 20990                           
 20991                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 20992  0003' 3002               	movlw	2
 20993  0004'                    i1l134:	
 20994  0004' 0008               	return
 20995  0005'                    __end_of_do_I2C_SEND_RESTART_WRITE:	
 20996                           
 20997                           	psect	text80
 20998  0000'                    __ptext80:	
 20999 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 21000 ;; Defined at:
 21001 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 21002 ;; Parameters:    Size  Location     Type
 21003 ;;		None
 21004 ;; Auto vars:     Size  Location     Type
 21005 ;;		None
 21006 ;; Return value:  Size  Location     Type
 21007 ;;                  1    wreg      enum E12722
 21008 ;; Registers used:
 21009 ;;		wreg, status,2, status,0, pclath, cstack
 21010 ;; Tracked objects:
 21011 ;;		On entry : 0/0
 21012 ;;		On exit  : 0/0
 21013 ;;		Unchanged: 0/0
 21014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21019 ;;Total ram usage:        0 bytes
 21020 ;; Hardware stack levels used:    1
 21021 ;; Hardware stack levels required when called:    1
 21022 ;; This function calls:
 21023 ;;		_i2c1_driver_restart
 21024 ;; This function is called by:
 21025 ;;		_do_I2C_TX
 21026 ;;		_i2c_ISR
 21027 ;; This function uses a non-reentrant model
 21028 ;;
 21029                           
 21030                           
 21031                           ;psect for function _do_I2C_SEND_RESTART_READ
 21032  0000'                    _do_I2C_SEND_RESTART_READ:	
 21033  0000'                    i1l5170:	
 21034                           ;incstack = 0
 21035                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 21036                           
 21037                           
 21038                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 21039  0000' 3180' 2000' 3180'  	fcall	_i2c1_driver_restart
 21040  0003'                    i1l5172:	
 21041                           
 21042                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 21043  0003' 3001               	movlw	1
 21044  0004'                    i1l131:	
 21045  0004' 0008               	return
 21046  0005'                    __end_of_do_I2C_SEND_RESTART_READ:	
 21047                           
 21048                           	psect	text81
 21049  0000'                    __ptext81:	
 21050 ;; *************** function _do_I2C_IDLE *****************
 21051 ;; Defined at:
 21052 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 21053 ;; Parameters:    Size  Location     Type
 21054 ;;		None
 21055 ;; Auto vars:     Size  Location     Type
 21056 ;;		None
 21057 ;; Return value:  Size  Location     Type
 21058 ;;                  1    wreg      enum E12722
 21059 ;; Registers used:
 21060 ;;		wreg, status,2
 21061 ;; Tracked objects:
 21062 ;;		On entry : 0/0
 21063 ;;		On exit  : 0/0
 21064 ;;		Unchanged: 0/0
 21065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21070 ;;Total ram usage:        0 bytes
 21071 ;; Hardware stack levels used:    1
 21072 ;; This function calls:
 21073 ;;		Nothing
 21074 ;; This function is called by:
 21075 ;;		_i2c_ISR
 21076 ;; This function uses a non-reentrant model
 21077 ;;
 21078                           
 21079                           
 21080                           ;psect for function _do_I2C_IDLE
 21081  0000'                    _do_I2C_IDLE:	
 21082  0000'                    i1l5466:	
 21083                           ;incstack = 0
 21084                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 21085                           
 21086                           
 21087                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 21088  0000' 0021               	movlb	1	; select bank1
 21089  0001' 1000'              	bcf	_i2c_status^(0+128),0
 21090  0002'                    i1l5468:	
 21091                           
 21092                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 21093  0002' 018A'              	clrf	(_i2c_status^(0+128)+10)
 21094  0003'                    i1l5470:	
 21095                           
 21096                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 21097  0003' 300E               	movlw	14
 21098  0004'                    i1l128:	
 21099  0004' 0008               	return
 21100  0005'                    __end_of_do_I2C_IDLE:	
 21101                           
 21102                           	psect	text82
 21103  0000'                    __ptext82:	
 21104 ;; *************** function _do_I2C_RESET *****************
 21105 ;; Defined at:
 21106 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 21107 ;; Parameters:    Size  Location     Type
 21108 ;;		None
 21109 ;; Auto vars:     Size  Location     Type
 21110 ;;		None
 21111 ;; Return value:  Size  Location     Type
 21112 ;;                  1    wreg      enum E12722
 21113 ;; Registers used:
 21114 ;;		wreg, status,2, status,0, pclath, cstack
 21115 ;; Tracked objects:
 21116 ;;		On entry : 0/0
 21117 ;;		On exit  : 0/0
 21118 ;;		Unchanged: 0/0
 21119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21124 ;;Total ram usage:        0 bytes
 21125 ;; Hardware stack levels used:    1
 21126 ;; Hardware stack levels required when called:    1
 21127 ;; This function calls:
 21128 ;;		_i2c1_driver_resetBus
 21129 ;; This function is called by:
 21130 ;;		_i2c_ISR
 21131 ;; This function uses a non-reentrant model
 21132 ;;
 21133                           
 21134                           
 21135                           ;psect for function _do_I2C_RESET
 21136  0000'                    _do_I2C_RESET:	
 21137  0000'                    i1l5456:	
 21138                           ;incstack = 0
 21139                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 21140                           
 21141                           
 21142                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 21143  0000' 3180' 2000' 3180'  	fcall	_i2c1_driver_resetBus
 21144  0003'                    i1l5458:	
 21145                           
 21146                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 21147  0003' 0021               	movlb	1	; select bank1
 21148  0004' 1000'              	bcf	_i2c_status^(0+128),0
 21149  0005'                    i1l5460:	
 21150                           
 21151                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 21152  0005' 018A'              	clrf	(_i2c_status^(0+128)+10)
 21153  0006'                    i1l5462:	
 21154                           
 21155                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 21156  0006' 300E               	movlw	14
 21157  0007'                    i1l125:	
 21158  0007' 0008               	return
 21159  0008'                    __end_of_do_I2C_RESET:	
 21160                           
 21161                           	psect	text83
 21162  0000'                    __ptext83:	
 21163 ;; *************** function _do_I2C_TX_EMPTY *****************
 21164 ;; Defined at:
 21165 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 21166 ;; Parameters:    Size  Location     Type
 21167 ;;		None
 21168 ;; Auto vars:     Size  Location     Type
 21169 ;;		None
 21170 ;; Return value:  Size  Location     Type
 21171 ;;                  1    wreg      enum E12722
 21172 ;; Registers used:
 21173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21174 ;; Tracked objects:
 21175 ;;		On entry : 0/0
 21176 ;;		On exit  : 0/0
 21177 ;;		Unchanged: 0/0
 21178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21181 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21182 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21183 ;;Total ram usage:        3 bytes
 21184 ;; Hardware stack levels used:    1
 21185 ;; Hardware stack levels required when called:    3
 21186 ;; This function calls:
 21187 ;;		Absolute function
 21188 ;;		_do_I2C_SEND_RESTART
 21189 ;;		_do_I2C_SEND_STOP
 21190 ;;		_i2c_restartWrite
 21191 ;;		_mssp1_setIRQ
 21192 ;;		_rd1RegCompleteHandler
 21193 ;;		_rd2RegCompleteHandler
 21194 ;;		_rdBlkRegCompleteHandler
 21195 ;;		_returnReset
 21196 ;;		_returnStop
 21197 ;;		_wr1RegCompleteHandler
 21198 ;;		_wr2RegCompleteHandler
 21199 ;; This function is called by:
 21200 ;;		_i2c_ISR
 21201 ;; This function uses a non-reentrant model
 21202 ;;
 21203                           
 21204                           
 21205                           ;psect for function _do_I2C_TX_EMPTY
 21206  0000'                    _do_I2C_TX_EMPTY:	
 21207  0000'                    i1l5592:	
 21208                           ;incstack = 0
 21209                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21210                           
 21211                           
 21212                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 21213  0000' 0021               	movlb	1	; select bank1
 21214  0001' 1500'              	bsf	_i2c_status^(0+128),2
 21215                           
 21216                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 21217  0002' 2800'              	goto	i1l5610
 21218  0003'                    i1l5594:	
 21219                           
 21220                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 21221  0003' 3180' 2000' 3180'  	fcall	_do_I2C_SEND_RESTART
 21222  0006' 2800'              	goto	i1l200
 21223  0007'                    i1l5598:	
 21224                           
 21225                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 21226  0007' 3180' 2000' 3180'  	fcall	_mssp1_setIRQ
 21227  000A'                    i1l5600:	
 21228                           
 21229                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 21230  000A' 3003               	movlw	3
 21231  000B' 2800'              	goto	i1l200
 21232  000C'                    i1l5604:	
 21233                           
 21234                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 21235  000C' 3180' 2000' 3180'  	fcall	_do_I2C_SEND_STOP
 21236  000F' 2800'              	goto	i1l200
 21237  0010'                    i1l5610:	
 21238  0010' 0800'              	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 21239  0011' 008A'              	movwf	??_do_I2C_TX_EMPTY
 21240  0012' 080A'              	movf	??_do_I2C_TX_EMPTY,w
 21241  0013' 0089'              	movwf	rdBlkRegCompleteHandler@p
 21242  0014' 300B               	movlw	11
 21243  0015' 3E00'              	addlw	(low (_i2c_status| 0))& (0+255)
 21244  0016' 0086               	movwf	6
 21245  0017' 0187               	clrf	7
 21246  0018' 3F41               	moviw [1]fsr1
 21247  0019' 008A               	movwf	10
 21248  001A' 3F40               	moviw [0]fsr1
 21249  001B' 000A               	callw
 21250  001C' 3180'              	pagesel	$
 21251  001D' 008B'              	movwf	??_do_I2C_TX_EMPTY+1
 21252  001E' 018C'              	clrf	??_do_I2C_TX_EMPTY+2
 21253                           
 21254                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21255                           ; Switch size 1, requested type "simple"
 21256                           ; Number of cases is 1, Range of values is 0 to 0
 21257                           ; switch strategies available:
 21258                           ; Name         Instructions Cycles
 21259                           ; simple_byte            4     3 (average)
 21260                           ; direct_byte            8     6 (fixed)
 21261                           ; jumptable            260     6 (fixed)
 21262                           ;	Chosen strategy is simple_byte
 21263  001F' 080C'              	movf	??_do_I2C_TX_EMPTY+2,w
 21264  0020' 3A00               	xorlw	0	; case 0
 21265  0021' 1903               	skipnz
 21266  0022' 2800'              	goto	i1l8522
 21267  0023' 2800'              	goto	i1l5604
 21268  0024'                    i1l8522:	
 21269                           
 21270                           ; Switch size 1, requested type "simple"
 21271                           ; Number of cases is 4, Range of values is 1 to 4
 21272                           ; switch strategies available:
 21273                           ; Name         Instructions Cycles
 21274                           ; simple_byte           13     7 (average)
 21275                           ; direct_byte           17     9 (fixed)
 21276                           ; jumptable            263     9 (fixed)
 21277                           ;	Chosen strategy is simple_byte
 21278  0024' 080B'              	movf	??_do_I2C_TX_EMPTY+1,w
 21279  0025' 3A01               	xorlw	1	; case 1
 21280  0026' 1903               	skipnz
 21281  0027' 2800'              	goto	i1l5604
 21282  0028' 3A03               	xorlw	3	; case 2
 21283  0029' 1903               	skipnz
 21284  002A' 2800'              	goto	i1l5594
 21285  002B' 3A01               	xorlw	1	; case 3
 21286  002C' 1903               	skipnz
 21287  002D' 2800'              	goto	i1l5594
 21288  002E' 3A07               	xorlw	7	; case 4
 21289  002F' 1903               	skipnz
 21290  0030' 2800'              	goto	i1l5598
 21291  0031' 2800'              	goto	i1l5604
 21292  0032'                    i1l200:	
 21293  0032' 0008               	return
 21294  0033'                    __end_of_do_I2C_TX_EMPTY:	
 21295                           
 21296                           	psect	text84
 21297  0000'                    __ptext84:	
 21298 ;; *************** function _mssp1_setIRQ *****************
 21299 ;; Defined at:
 21300 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 21301 ;; Parameters:    Size  Location     Type
 21302 ;;		None
 21303 ;; Auto vars:     Size  Location     Type
 21304 ;;		None
 21305 ;; Return value:  Size  Location     Type
 21306 ;;                  1    wreg      void 
 21307 ;; Registers used:
 21308 ;;		None
 21309 ;; Tracked objects:
 21310 ;;		On entry : 0/0
 21311 ;;		On exit  : 0/0
 21312 ;;		Unchanged: 0/0
 21313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21318 ;;Total ram usage:        0 bytes
 21319 ;; Hardware stack levels used:    1
 21320 ;; This function calls:
 21321 ;;		Nothing
 21322 ;; This function is called by:
 21323 ;;		_do_I2C_TX_EMPTY
 21324 ;; This function uses a non-reentrant model
 21325 ;;
 21326                           
 21327                           
 21328                           ;psect for function _mssp1_setIRQ
 21329  0000'                    _mssp1_setIRQ:	
 21330  0000'                    i1l5220:	
 21331                           ;incstack = 0
 21332                           ; Regs used in _mssp1_setIRQ: []
 21333                           
 21334                           
 21335                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 21336  0000' 002E               	movlb	14	; select bank14
 21337  0001' 140F               	bsf	15,0	;volatile
 21338  0002'                    i1l501:	
 21339  0002' 0008               	return
 21340  0003'                    __end_of_mssp1_setIRQ:	
 21341                           
 21342                           	psect	text85
 21343  0000'                    __ptext85:	
 21344 ;; *************** function _i2c1_driver_isNACK *****************
 21345 ;; Defined at:
 21346 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 21347 ;; Parameters:    Size  Location     Type
 21348 ;;		None
 21349 ;; Auto vars:     Size  Location     Type
 21350 ;;		None
 21351 ;; Return value:  Size  Location     Type
 21352 ;;		None               void
 21353 ;; Registers used:
 21354 ;;		wreg, status,2, status,0
 21355 ;; Tracked objects:
 21356 ;;		On entry : 0/0
 21357 ;;		On exit  : 0/0
 21358 ;;		Unchanged: 0/0
 21359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21362 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21363 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21364 ;;Total ram usage:        1 bytes
 21365 ;; Hardware stack levels used:    1
 21366 ;; This function calls:
 21367 ;;		Nothing
 21368 ;; This function is called by:
 21369 ;;		_do_I2C_TX
 21370 ;;		_i2c_ISR
 21371 ;; This function uses a non-reentrant model
 21372 ;;
 21373                           
 21374                           
 21375                           ;psect for function _i2c1_driver_isNACK
 21376  0000'                    _i2c1_driver_isNACK:	
 21377  0000'                    i1l5212:	
 21378                           ;incstack = 0
 21379                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 21380                           
 21381                           
 21382                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 21383  0000' 0023               	movlb	3	; select bank3
 21384  0001' 0E11               	swapf	17,w	;volatile
 21385  0002' 0C89               	rrf	9,f
 21386  0003' 0C89               	rrf	9,f
 21387  0004' 3901               	andlw	1
 21388  0005' 0080'              	movwf	??_i2c1_driver_isNACK
 21389  0006' 0C00'              	rrf	??_i2c1_driver_isNACK,w
 21390  0007'                    i1l536:	
 21391  0007' 0008               	return
 21392  0008'                    __end_of_i2c1_driver_isNACK:	
 21393                           
 21394                           	psect	text86
 21395  0000'                    __ptext86:	
 21396 ;; *************** function _i2c1_driver_TXData *****************
 21397 ;; Defined at:
 21398 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 21399 ;; Parameters:    Size  Location     Type
 21400 ;;  d               1    wreg     unsigned char 
 21401 ;; Auto vars:     Size  Location     Type
 21402 ;;  d               1    0[COMMON] unsigned char 
 21403 ;; Return value:  Size  Location     Type
 21404 ;;                  1    wreg      void 
 21405 ;; Registers used:
 21406 ;;		wreg
 21407 ;; Tracked objects:
 21408 ;;		On entry : 0/0
 21409 ;;		On exit  : 0/0
 21410 ;;		Unchanged: 0/0
 21411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21415 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21416 ;;Total ram usage:        1 bytes
 21417 ;; Hardware stack levels used:    1
 21418 ;; This function calls:
 21419 ;;		Nothing
 21420 ;; This function is called by:
 21421 ;;		_do_I2C_SEND_ADR_READ
 21422 ;;		_do_I2C_SEND_ADR_WRITE
 21423 ;;		_do_I2C_TX
 21424 ;; This function uses a non-reentrant model
 21425 ;;
 21426                           
 21427                           
 21428                           ;psect for function _i2c1_driver_TXData
 21429  0000'                    _i2c1_driver_TXData:	
 21430                           
 21431                           ;incstack = 0
 21432                           ; Regs used in _i2c1_driver_TXData: [wreg]
 21433                           ;i2c1_driver_TXData@d stored from wreg
 21434  0000' 0080'              	movwf	i2c1_driver_TXData@d
 21435  0001'                    i1l5194:	
 21436                           
 21437                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 21438  0001' 0800'              	movf	i2c1_driver_TXData@d,w
 21439  0002' 0023               	movlb	3	; select bank3
 21440  0003' 008C               	movwf	12	;volatile
 21441  0004'                    i1l551:	
 21442  0004' 0008               	return
 21443  0005'                    __end_of_i2c1_driver_TXData:	
 21444                           
 21445                           	psect	text87
 21446  0000'                    __ptext87:	
 21447 ;; *************** function _i2c1_driver_getRXData *****************
 21448 ;; Defined at:
 21449 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 21450 ;; Parameters:    Size  Location     Type
 21451 ;;		None
 21452 ;; Auto vars:     Size  Location     Type
 21453 ;;		None
 21454 ;; Return value:  Size  Location     Type
 21455 ;;                  1    wreg      unsigned char 
 21456 ;; Registers used:
 21457 ;;		wreg
 21458 ;; Tracked objects:
 21459 ;;		On entry : 0/0
 21460 ;;		On exit  : 0/0
 21461 ;;		Unchanged: 0/0
 21462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21467 ;;Total ram usage:        0 bytes
 21468 ;; Hardware stack levels used:    1
 21469 ;; This function calls:
 21470 ;;		Nothing
 21471 ;; This function is called by:
 21472 ;;		_do_I2C_RX
 21473 ;; This function uses a non-reentrant model
 21474 ;;
 21475                           
 21476                           
 21477                           ;psect for function _i2c1_driver_getRXData
 21478  0000'                    _i2c1_driver_getRXData:	
 21479  0000'                    i1l5216:	
 21480                           ;incstack = 0
 21481                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 21482                           
 21483                           
 21484                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 21485  0000' 0023               	movlb	3	; select bank3
 21486  0001' 080C               	movf	12,w	;volatile
 21487  0002'                    i1l542:	
 21488  0002' 0008               	return
 21489  0003'                    __end_of_i2c1_driver_getRXData:	
 21490                           
 21491                           	psect	text88
 21492  0000'                    __ptext88:	
 21493 ;; *************** function _i2c1_driver_sendNACK *****************
 21494 ;; Defined at:
 21495 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 21496 ;; Parameters:    Size  Location     Type
 21497 ;;		None
 21498 ;; Auto vars:     Size  Location     Type
 21499 ;;		None
 21500 ;; Return value:  Size  Location     Type
 21501 ;;                  1    wreg      void 
 21502 ;; Registers used:
 21503 ;;		None
 21504 ;; Tracked objects:
 21505 ;;		On entry : 0/0
 21506 ;;		On exit  : 0/0
 21507 ;;		Unchanged: 0/0
 21508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21513 ;;Total ram usage:        0 bytes
 21514 ;; Hardware stack levels used:    1
 21515 ;; This function calls:
 21516 ;;		Nothing
 21517 ;; This function is called by:
 21518 ;;		_do_I2C_DO_NACK_STOP
 21519 ;;		_do_I2C_DO_NACK_RESTART
 21520 ;; This function uses a non-reentrant model
 21521 ;;
 21522                           
 21523                           
 21524                           ;psect for function _i2c1_driver_sendNACK
 21525  0000'                    _i2c1_driver_sendNACK:	
 21526  0000'                    i1l4974:	
 21527                           ;incstack = 0
 21528                           ; Regs used in _i2c1_driver_sendNACK: []
 21529                           
 21530                           
 21531                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 21532  0000' 0023               	movlb	3	; select bank3
 21533  0001' 1691               	bsf	17,5	;volatile
 21534                           
 21535                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 21536  0002' 1611               	bsf	17,4	;volatile
 21537  0003'                    i1l560:	
 21538  0003' 0008               	return
 21539  0004'                    __end_of_i2c1_driver_sendNACK:	
 21540                           
 21541                           	psect	text89
 21542  0000'                    __ptext89:	
 21543 ;; *************** function _i2c1_driver_resetBus *****************
 21544 ;; Defined at:
 21545 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 21546 ;; Parameters:    Size  Location     Type
 21547 ;;		None
 21548 ;; Auto vars:     Size  Location     Type
 21549 ;;		None
 21550 ;; Return value:  Size  Location     Type
 21551 ;;                  1    wreg      void 
 21552 ;; Registers used:
 21553 ;;		None
 21554 ;; Tracked objects:
 21555 ;;		On entry : 0/0
 21556 ;;		On exit  : 0/0
 21557 ;;		Unchanged: 0/0
 21558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21563 ;;Total ram usage:        0 bytes
 21564 ;; Hardware stack levels used:    1
 21565 ;; This function calls:
 21566 ;;		Nothing
 21567 ;; This function is called by:
 21568 ;;		_do_I2C_RESET
 21569 ;; This function uses a non-reentrant model
 21570 ;;
 21571                           
 21572                           
 21573                           ;psect for function _i2c1_driver_resetBus
 21574  0000'                    _i2c1_driver_resetBus:	
 21575  0000'                    i1l524:	
 21576                           ;incstack = 0
 21577                           ; Regs used in _i2c1_driver_resetBus: []
 21578                           
 21579  0000' 0008               	return
 21580  0001'                    __end_of_i2c1_driver_resetBus:	
 21581                           
 21582                           	psect	text90
 21583  0000'                    __ptext90:	
 21584 ;; *************** function _i2c1_driver_startRX *****************
 21585 ;; Defined at:
 21586 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 21587 ;; Parameters:    Size  Location     Type
 21588 ;;		None
 21589 ;; Auto vars:     Size  Location     Type
 21590 ;;		None
 21591 ;; Return value:  Size  Location     Type
 21592 ;;                  1    wreg      void 
 21593 ;; Registers used:
 21594 ;;		None
 21595 ;; Tracked objects:
 21596 ;;		On entry : 0/0
 21597 ;;		On exit  : 0/0
 21598 ;;		Unchanged: 0/0
 21599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21604 ;;Total ram usage:        0 bytes
 21605 ;; Hardware stack levels used:    1
 21606 ;; This function calls:
 21607 ;;		Nothing
 21608 ;; This function is called by:
 21609 ;;		_do_I2C_RCEN
 21610 ;; This function uses a non-reentrant model
 21611 ;;
 21612                           
 21613                           
 21614                           ;psect for function _i2c1_driver_startRX
 21615  0000'                    _i2c1_driver_startRX:	
 21616  0000'                    i1l5196:	
 21617                           ;incstack = 0
 21618                           ; Regs used in _i2c1_driver_startRX: []
 21619                           
 21620                           
 21621                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 21622  0000' 0023               	movlb	3	; select bank3
 21623  0001' 1591               	bsf	17,3	;volatile
 21624  0002'                    i1l539:	
 21625  0002' 0008               	return
 21626  0003'                    __end_of_i2c1_driver_startRX:	
 21627                           
 21628                           	psect	text91
 21629  0000'                    __ptext91:	
 21630 ;; *************** function _rdBlkRegCompleteHandler *****************
 21631 ;; Defined at:
 21632 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21633 ;; Parameters:    Size  Location     Type
 21634 ;;  p               1    9[COMMON] PTR void 
 21635 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21636 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 21637 ;; Auto vars:     Size  Location     Type
 21638 ;;		None
 21639 ;; Return value:  Size  Location     Type
 21640 ;;                  1    wreg      enum E358
 21641 ;; Registers used:
 21642 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21643 ;; Tracked objects:
 21644 ;;		On entry : 0/0
 21645 ;;		On exit  : 0/0
 21646 ;;		Unchanged: 0/0
 21647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21648 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21651 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21652 ;;Total ram usage:        1 bytes
 21653 ;; Hardware stack levels used:    1
 21654 ;; Hardware stack levels required when called:    2
 21655 ;; This function calls:
 21656 ;;		_i2c_setBuffer
 21657 ;;		_i2c_setDataCompleteCallback
 21658 ;; This function is called by:
 21659 ;;		_i2c_readDataBlock
 21660 ;;		_do_I2C_DO_ADDRESS_NACK
 21661 ;;		_do_I2C_TX
 21662 ;;		_do_I2C_RX
 21663 ;;		_do_I2C_TX_EMPTY
 21664 ;; This function uses a non-reentrant model
 21665 ;;
 21666                           
 21667                           
 21668                           ;psect for function _rdBlkRegCompleteHandler
 21669  0000'                    _rdBlkRegCompleteHandler:	
 21670  0000'                    i1l5262:	
 21671                           ;incstack = 0
 21672                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 21673                           
 21674                           
 21675                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 21676  0000' 0809'              	movf	rdBlkRegCompleteHandler@p,w
 21677  0001' 0086               	movwf	6
 21678  0002' 0187               	clrf	7
 21679  0003' 3F40               	moviw [0]fsr1
 21680  0004' 0080'              	movwf	i2c_setBuffer@bufferSize
 21681  0005' 3F41               	moviw [1]fsr1
 21682  0006' 0081'              	movwf	i2c_setBuffer@bufferSize+1
 21683  0007' 0809'              	movf	rdBlkRegCompleteHandler@p,w
 21684  0008' 3E02               	addlw	2
 21685  0009' 0086               	movwf	6
 21686  000A' 0187               	clrf	7
 21687  000B' 0801               	movf	1,w
 21688  000C' 3180' 2000' 3180'  	fcall	_i2c_setBuffer
 21689                           
 21690                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 21691  000F' 3000               	movlw	0
 21692  0010' 0085'              	movwf	i2c_setDataCompleteCallback@cb
 21693  0011' 0086'              	movwf	i2c_setDataCompleteCallback@cb+1
 21694  0012' 0187'              	clrf	i2c_setDataCompleteCallback@p
 21695  0013' 3180' 2000' 3180'  	fcall	_i2c_setDataCompleteCallback
 21696  0016'                    i1l5264:	
 21697                           
 21698                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 21699  0016' 3002               	movlw	2
 21700  0017'                    i1l303:	
 21701  0017' 0008               	return
 21702  0018'                    __end_of_rdBlkRegCompleteHandler:	
 21703                           
 21704                           	psect	text92
 21705  0000'                    __ptext92:	
 21706 ;; *************** function _rd2RegCompleteHandler *****************
 21707 ;; Defined at:
 21708 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21709 ;; Parameters:    Size  Location     Type
 21710 ;;  p               1    9[COMMON] PTR void 
 21711 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21712 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 21713 ;; Auto vars:     Size  Location     Type
 21714 ;;		None
 21715 ;; Return value:  Size  Location     Type
 21716 ;;                  1    wreg      enum E358
 21717 ;; Registers used:
 21718 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21719 ;; Tracked objects:
 21720 ;;		On entry : 0/0
 21721 ;;		On exit  : 0/0
 21722 ;;		Unchanged: 0/0
 21723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21724 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21727 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21728 ;;Total ram usage:        1 bytes
 21729 ;; Hardware stack levels used:    1
 21730 ;; Hardware stack levels required when called:    2
 21731 ;; This function calls:
 21732 ;;		_i2c_setBuffer
 21733 ;;		_i2c_setDataCompleteCallback
 21734 ;; This function is called by:
 21735 ;;		_i2c_read2ByteRegister
 21736 ;;		_do_I2C_DO_ADDRESS_NACK
 21737 ;;		_do_I2C_TX
 21738 ;;		_do_I2C_RX
 21739 ;;		_do_I2C_TX_EMPTY
 21740 ;; This function uses a non-reentrant model
 21741 ;;
 21742                           
 21743                           
 21744                           ;psect for function _rd2RegCompleteHandler
 21745  0000'                    _rd2RegCompleteHandler:	
 21746  0000'                    i1l5246:	
 21747                           ;incstack = 0
 21748                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 21749                           
 21750                           
 21751                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 21752  0000' 3002               	movlw	2
 21753  0001' 0080'              	movwf	i2c_setBuffer@bufferSize
 21754  0002' 3000               	movlw	0
 21755  0003' 0081'              	movwf	i2c_setBuffer@bufferSize+1
 21756  0004' 0809'              	movf	rd2RegCompleteHandler@p,w
 21757  0005' 3180' 2000' 3180'  	fcall	_i2c_setBuffer
 21758  0008'                    i1l5248:	
 21759                           
 21760                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 21761  0008' 3000               	movlw	0
 21762  0009' 0085'              	movwf	i2c_setDataCompleteCallback@cb
 21763  000A' 0086'              	movwf	i2c_setDataCompleteCallback@cb+1
 21764  000B' 0187'              	clrf	i2c_setDataCompleteCallback@p
 21765  000C' 3180' 2000' 3180'  	fcall	_i2c_setDataCompleteCallback
 21766  000F'                    i1l5250:	
 21767                           
 21768                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 21769  000F' 3002               	movlw	2
 21770  0010'                    i1l279:	
 21771  0010' 0008               	return
 21772  0011'                    __end_of_rd2RegCompleteHandler:	
 21773                           
 21774                           	psect	text93
 21775  0000'                    __ptext93:	
 21776 ;; *************** function _rd1RegCompleteHandler *****************
 21777 ;; Defined at:
 21778 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21779 ;; Parameters:    Size  Location     Type
 21780 ;;  p               1    9[COMMON] PTR void 
 21781 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21782 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 21783 ;; Auto vars:     Size  Location     Type
 21784 ;;		None
 21785 ;; Return value:  Size  Location     Type
 21786 ;;                  1    wreg      enum E358
 21787 ;; Registers used:
 21788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21789 ;; Tracked objects:
 21790 ;;		On entry : 0/0
 21791 ;;		On exit  : 0/0
 21792 ;;		Unchanged: 0/0
 21793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21794 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21797 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21798 ;;Total ram usage:        1 bytes
 21799 ;; Hardware stack levels used:    1
 21800 ;; Hardware stack levels required when called:    2
 21801 ;; This function calls:
 21802 ;;		_i2c_setBuffer
 21803 ;;		_i2c_setDataCompleteCallback
 21804 ;; This function is called by:
 21805 ;;		_i2c_read1ByteRegister
 21806 ;;		_do_I2C_DO_ADDRESS_NACK
 21807 ;;		_do_I2C_TX
 21808 ;;		_do_I2C_RX
 21809 ;;		_do_I2C_TX_EMPTY
 21810 ;; This function uses a non-reentrant model
 21811 ;;
 21812                           
 21813                           
 21814                           ;psect for function _rd1RegCompleteHandler
 21815  0000'                    _rd1RegCompleteHandler:	
 21816  0000'                    i1l5238:	
 21817                           ;incstack = 0
 21818                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 21819                           
 21820                           
 21821                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 21822  0000' 3001               	movlw	1
 21823  0001' 0080'              	movwf	i2c_setBuffer@bufferSize
 21824  0002' 3000               	movlw	0
 21825  0003' 0081'              	movwf	i2c_setBuffer@bufferSize+1
 21826  0004' 0809'              	movf	rd1RegCompleteHandler@p,w
 21827  0005' 3180' 2000' 3180'  	fcall	_i2c_setBuffer
 21828  0008'                    i1l5240:	
 21829                           
 21830                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 21831  0008' 3000               	movlw	0
 21832  0009' 0085'              	movwf	i2c_setDataCompleteCallback@cb
 21833  000A' 0086'              	movwf	i2c_setDataCompleteCallback@cb+1
 21834  000B' 0187'              	clrf	i2c_setDataCompleteCallback@p
 21835  000C' 3180' 2000' 3180'  	fcall	_i2c_setDataCompleteCallback
 21836  000F'                    i1l5242:	
 21837                           
 21838                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 21839  000F' 3002               	movlw	2
 21840  0010'                    i1l264:	
 21841  0010' 0008               	return
 21842  0011'                    __end_of_rd1RegCompleteHandler:	
 21843                           
 21844                           	psect	text94
 21845  0000'                    __ptext94:	
 21846 ;; *************** function _wr1RegCompleteHandler *****************
 21847 ;; Defined at:
 21848 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21849 ;; Parameters:    Size  Location     Type
 21850 ;;  p               1    9[COMMON] PTR void 
 21851 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21852 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 21853 ;; Auto vars:     Size  Location     Type
 21854 ;;		None
 21855 ;; Return value:  Size  Location     Type
 21856 ;;                  1    wreg      enum E358
 21857 ;; Registers used:
 21858 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21859 ;; Tracked objects:
 21860 ;;		On entry : 0/0
 21861 ;;		On exit  : 0/0
 21862 ;;		Unchanged: 0/0
 21863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21864 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21867 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21868 ;;Total ram usage:        1 bytes
 21869 ;; Hardware stack levels used:    1
 21870 ;; Hardware stack levels required when called:    2
 21871 ;; This function calls:
 21872 ;;		_i2c_setBuffer
 21873 ;;		_i2c_setDataCompleteCallback
 21874 ;; This function is called by:
 21875 ;;		_i2c_write1ByteRegister
 21876 ;;		_do_I2C_DO_ADDRESS_NACK
 21877 ;;		_do_I2C_TX
 21878 ;;		_do_I2C_RX
 21879 ;;		_do_I2C_TX_EMPTY
 21880 ;; This function uses a non-reentrant model
 21881 ;;
 21882                           
 21883                           
 21884                           ;psect for function _wr1RegCompleteHandler
 21885  0000'                    _wr1RegCompleteHandler:	
 21886  0000'                    i1l5230:	
 21887                           ;incstack = 0
 21888                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 21889                           
 21890                           
 21891                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 21892  0000' 3001               	movlw	1
 21893  0001' 0080'              	movwf	i2c_setBuffer@bufferSize
 21894  0002' 3000               	movlw	0
 21895  0003' 0081'              	movwf	i2c_setBuffer@bufferSize+1
 21896  0004' 0809'              	movf	wr1RegCompleteHandler@p,w
 21897  0005' 3180' 2000' 3180'  	fcall	_i2c_setBuffer
 21898  0008'                    i1l5232:	
 21899                           
 21900                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 21901  0008' 3000               	movlw	0
 21902  0009' 0085'              	movwf	i2c_setDataCompleteCallback@cb
 21903  000A' 0086'              	movwf	i2c_setDataCompleteCallback@cb+1
 21904  000B' 0187'              	clrf	i2c_setDataCompleteCallback@p
 21905  000C' 3180' 2000' 3180'  	fcall	_i2c_setDataCompleteCallback
 21906  000F'                    i1l5234:	
 21907                           
 21908                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 21909  000F' 3004               	movlw	4
 21910  0010'                    i1l243:	
 21911  0010' 0008               	return
 21912  0011'                    __end_of_wr1RegCompleteHandler:	
 21913                           
 21914                           	psect	text95
 21915  0000'                    __ptext95:	
 21916 ;; *************** function _returnReset *****************
 21917 ;; Defined at:
 21918 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 21919 ;; Parameters:    Size  Location     Type
 21920 ;;  p               1    9[COMMON] PTR void 
 21921 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21922 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 21923 ;; Auto vars:     Size  Location     Type
 21924 ;;		None
 21925 ;; Return value:  Size  Location     Type
 21926 ;;                  1    wreg      enum E12568
 21927 ;; Registers used:
 21928 ;;		wreg
 21929 ;; Tracked objects:
 21930 ;;		On entry : 0/0
 21931 ;;		On exit  : 0/0
 21932 ;;		Unchanged: 0/0
 21933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21934 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21937 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21938 ;;Total ram usage:        1 bytes
 21939 ;; Hardware stack levels used:    1
 21940 ;; This function calls:
 21941 ;;		Nothing
 21942 ;; This function is called by:
 21943 ;;		_i2c_open
 21944 ;;		_do_I2C_DO_ADDRESS_NACK
 21945 ;;		_do_I2C_TX
 21946 ;;		_do_I2C_RX
 21947 ;;		_do_I2C_TX_EMPTY
 21948 ;; This function uses a non-reentrant model
 21949 ;;
 21950                           
 21951                           
 21952                           ;psect for function _returnReset
 21953  0000'                    _returnReset:	
 21954  0000'                    i1l5226:	
 21955                           ;incstack = 0
 21956                           ; Regs used in _returnReset: [wreg]
 21957                           
 21958                           
 21959                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 21960  0000' 3005               	movlw	5
 21961  0001'                    i1l219:	
 21962  0001' 0008               	return
 21963  0002'                    __end_of_returnReset:	
 21964                           
 21965                           	psect	text96
 21966  0000'                    __ptext96:	
 21967 ;; *************** function _returnStop *****************
 21968 ;; Defined at:
 21969 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 21970 ;; Parameters:    Size  Location     Type
 21971 ;;  p               1    9[COMMON] PTR void 
 21972 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 21973 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 21974 ;; Auto vars:     Size  Location     Type
 21975 ;;		None
 21976 ;; Return value:  Size  Location     Type
 21977 ;;                  1    wreg      enum E12568
 21978 ;; Registers used:
 21979 ;;		wreg
 21980 ;; Tracked objects:
 21981 ;;		On entry : 0/0
 21982 ;;		On exit  : 0/0
 21983 ;;		Unchanged: 0/0
 21984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21985 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21988 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21989 ;;Total ram usage:        1 bytes
 21990 ;; Hardware stack levels used:    1
 21991 ;; This function calls:
 21992 ;;		Nothing
 21993 ;; This function is called by:
 21994 ;;		_setCallBack
 21995 ;;		_i2c_open
 21996 ;;		_do_I2C_DO_ADDRESS_NACK
 21997 ;;		_do_I2C_TX
 21998 ;;		_do_I2C_RX
 21999 ;;		_do_I2C_TX_EMPTY
 22000 ;; This function uses a non-reentrant model
 22001 ;;
 22002                           
 22003                           
 22004                           ;psect for function _returnStop
 22005  0000'                    _returnStop:	
 22006  0000'                    i1l5222:	
 22007                           ;incstack = 0
 22008                           ; Regs used in _returnStop: [wreg]
 22009                           
 22010                           
 22011                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 22012  0000' 3001               	movlw	1
 22013  0001'                    i1l216:	
 22014  0001' 0008               	return
 22015  0002'                    __end_of_returnStop:	
 22016                           
 22017                           	psect	text97
 22018  0000'                    __ptext97:	
 22019 ;; *************** function _i2c_restartWrite *****************
 22020 ;; Defined at:
 22021 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 22022 ;; Parameters:    Size  Location     Type
 22023 ;;  p               1    9[COMMON] PTR void 
 22024 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22025 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 22026 ;; Auto vars:     Size  Location     Type
 22027 ;;		None
 22028 ;; Return value:  Size  Location     Type
 22029 ;;                  1    wreg      enum E358
 22030 ;; Registers used:
 22031 ;;		wreg
 22032 ;; Tracked objects:
 22033 ;;		On entry : 0/0
 22034 ;;		On exit  : 0/0
 22035 ;;		Unchanged: 0/0
 22036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22037 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22040 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22041 ;;Total ram usage:        1 bytes
 22042 ;; Hardware stack levels used:    1
 22043 ;; This function calls:
 22044 ;;		Nothing
 22045 ;; This function is called by:
 22046 ;;		_i2c_write1ByteRegister
 22047 ;;		_i2c_writeNBytes
 22048 ;;		_i2c_read1ByteRegister
 22049 ;;		_i2c_read2ByteRegister
 22050 ;;		_i2c_write2ByteRegister
 22051 ;;		_i2c_readDataBlock
 22052 ;;		_do_I2C_DO_ADDRESS_NACK
 22053 ;;		_do_I2C_TX
 22054 ;;		_do_I2C_RX
 22055 ;;		_do_I2C_TX_EMPTY
 22056 ;; This function uses a non-reentrant model
 22057 ;;
 22058                           
 22059                           
 22060                           ;psect for function _i2c_restartWrite
 22061  0000'                    _i2c_restartWrite:	
 22062  0000'                    i1l5158:	
 22063                           ;incstack = 0
 22064                           ; Regs used in _i2c_restartWrite: [wreg]
 22065                           
 22066                           
 22067                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 22068  0000' 3003               	movlw	3
 22069  0001'                    i1l9:	
 22070  0001' 0008               	return
 22071  0002'                    __end_of_i2c_restartWrite:	
 22072                           
 22073                           	psect	text98
 22074  0000'                    __ptext98:	
 22075 ;; *************** function _wr2RegCompleteHandler *****************
 22076 ;; Defined at:
 22077 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 22078 ;; Parameters:    Size  Location     Type
 22079 ;;  p               1    9[COMMON] PTR void 
 22080 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22081 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 22082 ;; Auto vars:     Size  Location     Type
 22083 ;;		None
 22084 ;; Return value:  Size  Location     Type
 22085 ;;                  1    wreg      enum E358
 22086 ;; Registers used:
 22087 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22088 ;; Tracked objects:
 22089 ;;		On entry : 0/0
 22090 ;;		On exit  : 0/0
 22091 ;;		Unchanged: 0/0
 22092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22093 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22096 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22097 ;;Total ram usage:        1 bytes
 22098 ;; Hardware stack levels used:    1
 22099 ;; Hardware stack levels required when called:    2
 22100 ;; This function calls:
 22101 ;;		_i2c_setBuffer
 22102 ;;		_i2c_setDataCompleteCallback
 22103 ;; This function is called by:
 22104 ;;		_i2c_write2ByteRegister
 22105 ;;		_do_I2C_DO_ADDRESS_NACK
 22106 ;;		_do_I2C_TX
 22107 ;;		_do_I2C_RX
 22108 ;;		_do_I2C_TX_EMPTY
 22109 ;; This function uses a non-reentrant model
 22110 ;;
 22111                           
 22112                           
 22113                           ;psect for function _wr2RegCompleteHandler
 22114  0000'                    _wr2RegCompleteHandler:	
 22115  0000'                    i1l5254:	
 22116                           ;incstack = 0
 22117                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 22118                           
 22119                           
 22120                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 22121  0000' 3002               	movlw	2
 22122  0001' 0080'              	movwf	i2c_setBuffer@bufferSize
 22123  0002' 3000               	movlw	0
 22124  0003' 0081'              	movwf	i2c_setBuffer@bufferSize+1
 22125  0004' 0809'              	movf	wr2RegCompleteHandler@p,w
 22126  0005' 3180' 2000' 3180'  	fcall	_i2c_setBuffer
 22127  0008'                    i1l5256:	
 22128                           
 22129                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 22130  0008' 3000               	movlw	0
 22131  0009' 0085'              	movwf	i2c_setDataCompleteCallback@cb
 22132  000A' 0086'              	movwf	i2c_setDataCompleteCallback@cb+1
 22133  000B' 0187'              	clrf	i2c_setDataCompleteCallback@p
 22134  000C' 3180' 2000' 3180'  	fcall	_i2c_setDataCompleteCallback
 22135  000F'                    i1l5258:	
 22136                           
 22137                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 22138  000F' 3004               	movlw	4
 22139  0010'                    i1l291:	
 22140  0010' 0008               	return
 22141  0011'                    __end_of_wr2RegCompleteHandler:	
 22142                           
 22143                           	psect	text99
 22144  0000'                    __ptext99:	
 22145 ;; *************** function _i2c_setDataCompleteCallback *****************
 22146 ;; Defined at:
 22147 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 22148 ;; Parameters:    Size  Location     Type
 22149 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 22150 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 22151 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 22152 ;;  p               1    7[COMMON] PTR void 
 22153 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22154 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 22155 ;; Auto vars:     Size  Location     Type
 22156 ;;		None
 22157 ;; Return value:  Size  Location     Type
 22158 ;;                  1    wreg      void 
 22159 ;; Registers used:
 22160 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22161 ;; Tracked objects:
 22162 ;;		On entry : 0/0
 22163 ;;		On exit  : 0/0
 22164 ;;		Unchanged: 0/0
 22165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22166 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22169 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22170 ;;Total ram usage:        4 bytes
 22171 ;; Hardware stack levels used:    1
 22172 ;; Hardware stack levels required when called:    1
 22173 ;; This function calls:
 22174 ;;		_setCallBack
 22175 ;; This function is called by:
 22176 ;;		_wr1RegCompleteHandler
 22177 ;;		_rd1RegCompleteHandler
 22178 ;;		_rd2RegCompleteHandler
 22179 ;;		_wr2RegCompleteHandler
 22180 ;;		_rdBlkRegCompleteHandler
 22181 ;;		_i2c_write1ByteRegister
 22182 ;;		_i2c_read1ByteRegister
 22183 ;;		_i2c_read2ByteRegister
 22184 ;;		_i2c_write2ByteRegister
 22185 ;;		_i2c_readDataBlock
 22186 ;; This function uses a non-reentrant model
 22187 ;;
 22188                           
 22189                           
 22190                           ;psect for function _i2c_setDataCompleteCallback
 22191  0000'                    _i2c_setDataCompleteCallback:	
 22192  0000'                    i1l4962:	
 22193                           ;incstack = 0
 22194                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 22195                           
 22196                           
 22197                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 22198  0000' 0806'              	movf	i2c_setDataCompleteCallback@cb+1,w
 22199  0001' 0081'              	movwf	setCallBack@cb+1
 22200  0002' 0805'              	movf	i2c_setDataCompleteCallback@cb,w
 22201  0003' 0080'              	movwf	setCallBack@cb
 22202  0004' 0807'              	movf	i2c_setDataCompleteCallback@p,w
 22203  0005' 0088'              	movwf	??_i2c_setDataCompleteCallback
 22204  0006' 0808'              	movf	??_i2c_setDataCompleteCallback,w
 22205  0007' 0082'              	movwf	setCallBack@p
 22206  0008' 3000               	movlw	0
 22207  0009' 3180' 2000' 3180'  	fcall	_setCallBack
 22208  000C'                    i1l73:	
 22209  000C' 0008               	return
 22210  000D'                    __end_of_i2c_setDataCompleteCallback:	
 22211                           
 22212                           	psect	text100
 22213  0000'                    __ptext100:	
 22214 ;; *************** function _setCallBack *****************
 22215 ;; Defined at:
 22216 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 22217 ;; Parameters:    Size  Location     Type
 22218 ;;  idx             1    wreg     enum E12740
 22219 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 22220 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 22221 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), i2c_restartWrite(1), 
 22222 ;;  p               1    2[COMMON] PTR void 
 22223 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 22224 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 22225 ;; Auto vars:     Size  Location     Type
 22226 ;;  idx             1    4[COMMON] enum E12740
 22227 ;; Return value:  Size  Location     Type
 22228 ;;                  1    wreg      void 
 22229 ;; Registers used:
 22230 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22231 ;; Tracked objects:
 22232 ;;		On entry : 0/0
 22233 ;;		On exit  : 0/0
 22234 ;;		Unchanged: 0/0
 22235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22236 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22237 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22238 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22239 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22240 ;;Total ram usage:        5 bytes
 22241 ;; Hardware stack levels used:    1
 22242 ;; This function calls:
 22243 ;;		Nothing
 22244 ;; This function is called by:
 22245 ;;		_i2c_setDataCompleteCallback
 22246 ;;		_i2c_setWriteCollisionCallback
 22247 ;;		_i2c_setAddressNACKCallback
 22248 ;;		_i2c_setDataNACKCallback
 22249 ;;		_i2c_setTimeOutCallback
 22250 ;; This function uses a non-reentrant model
 22251 ;;
 22252                           
 22253                           
 22254                           ;psect for function _setCallBack
 22255  0000'                    _setCallBack:	
 22256                           
 22257                           ;incstack = 0
 22258                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 22259                           ;setCallBack@idx stored from wreg
 22260  0000' 0084'              	movwf	setCallBack@idx
 22261  0001'                    i1l4854:	
 22262                           
 22263                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 22264  0001' 0800'              	movf	setCallBack@cb,w
 22265  0002' 0401'              	iorwf	setCallBack@cb+1,w
 22266  0003' 1903               	btfsc	3,2
 22267  0004' 2800'              	goto	u224_21
 22268  0005' 2800'              	goto	u224_20
 22269  0006'                    u224_21:	
 22270  0006' 2800'              	goto	i1l4858
 22271  0007'                    u224_20:	
 22272  0007'                    i1l4856:	
 22273                           
 22274                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 22275  0007' 3504'              	lslf	setCallBack@idx,w
 22276  0008' 3E00'              	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 22277  0009' 0086               	movwf	6
 22278  000A' 0187               	clrf	7
 22279  000B' 0800'              	movf	setCallBack@cb,w
 22280  000C' 3FC0               	movwi [0]fsr1
 22281  000D' 0801'              	movf	setCallBack@cb+1,w
 22282  000E' 3FC1               	movwi [1]fsr1
 22283                           
 22284                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 22285  000F' 0802'              	movf	setCallBack@p,w
 22286  0010' 0083'              	movwf	??_setCallBack
 22287  0011' 0804'              	movf	setCallBack@idx,w
 22288  0012' 3E00'              	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 22289  0013' 0086               	movwf	6
 22290  0014' 0187               	clrf	7
 22291  0015' 0803'              	movf	??_setCallBack,w
 22292  0016' 0081               	movwf	1
 22293                           
 22294                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 22295  0017' 2800'              	goto	i1l224
 22296  0018'                    i1l4858:	
 22297                           
 22298                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 22299  0018' 3504'              	lslf	setCallBack@idx,w
 22300  0019' 3E00'              	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 22301  001A' 0086               	movwf	6
 22302  001B' 0187               	clrf	7
 22303  001C' 3000'              	movlw	low _returnStop
 22304  001D' 3FC0               	movwi [0]fsr1
 22305  001E' 3000'              	movlw	high _returnStop
 22306  001F' 3FC1               	movwi [1]fsr1
 22307                           
 22308                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 22309  0020' 0804'              	movf	setCallBack@idx,w
 22310  0021' 3E00'              	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 22311  0022' 0086               	movwf	6
 22312  0023' 0187               	clrf	7
 22313  0024' 0181               	clrf	1
 22314  0025'                    i1l224:	
 22315  0025' 0008               	return
 22316  0026'                    __end_of_setCallBack:	
 22317                           
 22318                           	psect	text101
 22319  0000'                    __ptext101:	
 22320 ;; *************** function _i2c_setBuffer *****************
 22321 ;; Defined at:
 22322 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 22323 ;; Parameters:    Size  Location     Type
 22324 ;;  buffer          1    wreg     PTR void 
 22325 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 22326 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 22327 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22328 ;;  bufferSize      2    0[COMMON] unsigned int 
 22329 ;; Auto vars:     Size  Location     Type
 22330 ;;  buffer          1    3[COMMON] PTR void 
 22331 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 22332 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 22333 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 22334 ;; Return value:  Size  Location     Type
 22335 ;;                  1    wreg      void 
 22336 ;; Registers used:
 22337 ;;		wreg
 22338 ;; Tracked objects:
 22339 ;;		On entry : 0/0
 22340 ;;		On exit  : 0/0
 22341 ;;		Unchanged: 0/0
 22342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22345 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22346 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22347 ;;Total ram usage:        4 bytes
 22348 ;; Hardware stack levels used:    1
 22349 ;; This function calls:
 22350 ;;		Nothing
 22351 ;; This function is called by:
 22352 ;;		_wr1RegCompleteHandler
 22353 ;;		_rd1RegCompleteHandler
 22354 ;;		_rd2RegCompleteHandler
 22355 ;;		_wr2RegCompleteHandler
 22356 ;;		_rdBlkRegCompleteHandler
 22357 ;;		_i2c_write1ByteRegister
 22358 ;;		_i2c_writeNBytes
 22359 ;;		_i2c_read1ByteRegister
 22360 ;;		_i2c_read2ByteRegister
 22361 ;;		_i2c_write2ByteRegister
 22362 ;;		_i2c_readDataBlock
 22363 ;;		_i2c_readNBytes
 22364 ;; This function uses a non-reentrant model
 22365 ;;
 22366                           
 22367                           
 22368                           ;psect for function _i2c_setBuffer
 22369  0000'                    _i2c_setBuffer:	
 22370                           
 22371                           ;incstack = 0
 22372                           ; Regs used in _i2c_setBuffer: [wreg]
 22373                           ;i2c_setBuffer@buffer stored from wreg
 22374  0000' 0083'              	movwf	i2c_setBuffer@buffer
 22375  0001'                    i1l4964:	
 22376                           
 22377                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 22378  0001' 0021               	movlb	1	; select bank1
 22379  0002' 1D00'              	btfss	_i2c_status^(0+128),2
 22380  0003' 2800'              	goto	u244_21
 22381  0004' 2800'              	goto	u244_20
 22382  0005'                    u244_21:	
 22383  0005' 2800'              	goto	i1l103
 22384  0006'                    u244_20:	
 22385  0006'                    i1l4966:	
 22386                           
 22387                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 22388  0006' 0803'              	movf	i2c_setBuffer@buffer,w
 22389  0007' 0082'              	movwf	??_i2c_setBuffer
 22390  0008' 0802'              	movf	??_i2c_setBuffer,w
 22391  0009' 0080'              	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 22392                           
 22393                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 22394  000A' 0801'              	movf	i2c_setBuffer@bufferSize+1,w
 22395  000B' 0083'              	movwf	((_i2c_status+1)^(0+128)+3)
 22396  000C' 0800'              	movf	i2c_setBuffer@bufferSize,w
 22397  000D' 0083'              	movwf	(_i2c_status^(0+128)+3)
 22398  000E'                    i1l4968:	
 22399                           
 22400                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 22401  000E' 1100'              	bcf	_i2c_status^(0+128),2
 22402  000F'                    i1l103:	
 22403  000F' 0008               	return
 22404  0010'                    __end_of_i2c_setBuffer:	
 22405                           
 22406                           	psect	text102
 22407  0000'                    __ptext102:	
 22408 ;; *************** function _i2c1_driver_stop *****************
 22409 ;; Defined at:
 22410 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 22411 ;; Parameters:    Size  Location     Type
 22412 ;;		None
 22413 ;; Auto vars:     Size  Location     Type
 22414 ;;		None
 22415 ;; Return value:  Size  Location     Type
 22416 ;;                  1    wreg      void 
 22417 ;; Registers used:
 22418 ;;		None
 22419 ;; Tracked objects:
 22420 ;;		On entry : 0/0
 22421 ;;		On exit  : 0/0
 22422 ;;		Unchanged: 0/0
 22423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22428 ;;Total ram usage:        0 bytes
 22429 ;; Hardware stack levels used:    1
 22430 ;; This function calls:
 22431 ;;		Nothing
 22432 ;; This function is called by:
 22433 ;;		_do_I2C_SEND_STOP
 22434 ;; This function uses a non-reentrant model
 22435 ;;
 22436                           
 22437                           
 22438                           ;psect for function _i2c1_driver_stop
 22439  0000'                    _i2c1_driver_stop:	
 22440  0000'                    i1l4972:	
 22441                           ;incstack = 0
 22442                           ; Regs used in _i2c1_driver_stop: []
 22443                           
 22444                           
 22445                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 22446  0000' 0023               	movlb	3	; select bank3
 22447  0001' 1511               	bsf	17,2	;volatile
 22448  0002'                    i1l533:	
 22449  0002' 0008               	return
 22450  0003'                    __end_of_i2c1_driver_stop:	
 22451                           
 22452                           	psect	text103
 22453  0000'                    __ptext103:	
 22454 ;; *************** function _i2c1_driver_restart *****************
 22455 ;; Defined at:
 22456 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 22457 ;; Parameters:    Size  Location     Type
 22458 ;;		None
 22459 ;; Auto vars:     Size  Location     Type
 22460 ;;		None
 22461 ;; Return value:  Size  Location     Type
 22462 ;;                  1    wreg      void 
 22463 ;; Registers used:
 22464 ;;		None
 22465 ;; Tracked objects:
 22466 ;;		On entry : 0/0
 22467 ;;		On exit  : 0/0
 22468 ;;		Unchanged: 0/0
 22469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22474 ;;Total ram usage:        0 bytes
 22475 ;; Hardware stack levels used:    1
 22476 ;; This function calls:
 22477 ;;		Nothing
 22478 ;; This function is called by:
 22479 ;;		_do_I2C_SEND_RESTART_READ
 22480 ;;		_do_I2C_SEND_RESTART_WRITE
 22481 ;;		_do_I2C_SEND_RESTART
 22482 ;; This function uses a non-reentrant model
 22483 ;;
 22484                           
 22485                           
 22486                           ;psect for function _i2c1_driver_restart
 22487  0000'                    _i2c1_driver_restart:	
 22488  0000'                    i1l4970:	
 22489                           ;incstack = 0
 22490                           ; Regs used in _i2c1_driver_restart: []
 22491                           
 22492                           
 22493                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 22494  0000' 0023               	movlb	3	; select bank3
 22495  0001' 1491               	bsf	17,1	;volatile
 22496  0002'                    i1l530:	
 22497  0002' 0008               	return
 22498  0003'                    __end_of_i2c1_driver_restart:	
 22499                           
 22500                           	psect	text104
 22501  0000'                    __ptext104:	
 22502 ;; *************** function _i2c1_driver_sendACK *****************
 22503 ;; Defined at:
 22504 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 22505 ;; Parameters:    Size  Location     Type
 22506 ;;		None
 22507 ;; Auto vars:     Size  Location     Type
 22508 ;;		None
 22509 ;; Return value:  Size  Location     Type
 22510 ;;                  1    wreg      void 
 22511 ;; Registers used:
 22512 ;;		None
 22513 ;; Tracked objects:
 22514 ;;		On entry : 0/0
 22515 ;;		On exit  : 0/0
 22516 ;;		Unchanged: 0/0
 22517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22522 ;;Total ram usage:        0 bytes
 22523 ;; Hardware stack levels used:    1
 22524 ;; This function calls:
 22525 ;;		Nothing
 22526 ;; This function is called by:
 22527 ;;		_do_I2C_DO_ACK
 22528 ;;		_do_I2C_RX
 22529 ;; This function uses a non-reentrant model
 22530 ;;
 22531                           
 22532                           
 22533                           ;psect for function _i2c1_driver_sendACK
 22534  0000'                    _i2c1_driver_sendACK:	
 22535  0000'                    i1l5198:	
 22536                           ;incstack = 0
 22537                           ; Regs used in _i2c1_driver_sendACK: []
 22538                           
 22539                           
 22540                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 22541  0000' 0023               	movlb	3	; select bank3
 22542  0001' 1291               	bcf	17,5	;volatile
 22543                           
 22544                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 22545  0002' 1611               	bsf	17,4	;volatile
 22546  0003'                    i1l557:	
 22547  0003' 0008               	return
 22548  0004'                    __end_of_i2c1_driver_sendACK:	
 22549                           
 22550                           	psect	text105
 22551  0000'                    __ptext105:	
 22552 ;; *************** function _TMR2_ISR *****************
 22553 ;; Defined at:
 22554 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 22555 ;; Parameters:    Size  Location     Type
 22556 ;;		None
 22557 ;; Auto vars:     Size  Location     Type
 22558 ;;		None
 22559 ;; Return value:  Size  Location     Type
 22560 ;;                  1    wreg      void 
 22561 ;; Registers used:
 22562 ;;		wreg, status,2, status,0, pclath, cstack
 22563 ;; Tracked objects:
 22564 ;;		On entry : 0/0
 22565 ;;		On exit  : 0/0
 22566 ;;		Unchanged: 0/0
 22567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22572 ;;Total ram usage:        0 bytes
 22573 ;; Hardware stack levels used:    1
 22574 ;; Hardware stack levels required when called:    1
 22575 ;; This function calls:
 22576 ;;		Absolute function
 22577 ;;		_TMR2_DefaultInterruptHandler
 22578 ;;		_handler_clock_ms
 22579 ;; This function is called by:
 22580 ;;		_INTERRUPT_InterruptManager
 22581 ;; This function uses a non-reentrant model
 22582 ;;
 22583                           
 22584                           
 22585                           ;psect for function _TMR2_ISR
 22586  0000'                    _TMR2_ISR:	
 22587  0000'                    i1l6078:	
 22588                           ;incstack = 0
 22589                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 22590                           
 22591                           
 22592                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 22593  0000' 002E               	movlb	14	; select bank14
 22594  0001' 1090               	bcf	16,1	;volatile
 22595  0002'                    i1l6080:	
 22596                           
 22597                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 22598  0002' 0021               	movlb	1	; select bank1
 22599  0003' 0800'              	movf	_TMR2_InterruptHandler^(0+128),w
 22600  0004' 0400'              	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 22601  0005' 1903               	btfsc	3,2
 22602  0006' 2800'              	goto	u328_21
 22603  0007' 2800'              	goto	u328_20
 22604  0008'                    u328_21:	
 22605  0008' 2800'              	goto	i1l1100
 22606  0009'                    u328_20:	
 22607  0009'                    i1l6082:	
 22608                           
 22609                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 22610  0009' 0800'              	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 22611  000A' 008A               	movwf	10
 22612  000B' 0800'              	movf	_TMR2_InterruptHandler^(0+128),w
 22613  000C' 000A               	callw
 22614  000D' 3180'              	pagesel	$
 22615  000E'                    i1l1100:	
 22616  000E' 0008               	return
 22617  000F'                    __end_of_TMR2_ISR:	
 22618                           
 22619                           	psect	text106
 22620  0000'                    __ptext106:	
 22621 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 22622 ;; Defined at:
 22623 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 22624 ;; Parameters:    Size  Location     Type
 22625 ;;		None
 22626 ;; Auto vars:     Size  Location     Type
 22627 ;;		None
 22628 ;; Return value:  Size  Location     Type
 22629 ;;                  1    wreg      void 
 22630 ;; Registers used:
 22631 ;;		None
 22632 ;; Tracked objects:
 22633 ;;		On entry : 0/0
 22634 ;;		On exit  : 0/0
 22635 ;;		Unchanged: 0/0
 22636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22641 ;;Total ram usage:        0 bytes
 22642 ;; Hardware stack levels used:    1
 22643 ;; This function calls:
 22644 ;;		Nothing
 22645 ;; This function is called by:
 22646 ;;		_TMR2_Initialize
 22647 ;;		_TMR2_ISR
 22648 ;; This function uses a non-reentrant model
 22649 ;;
 22650                           
 22651                           
 22652                           ;psect for function _TMR2_DefaultInterruptHandler
 22653  0000'                    _TMR2_DefaultInterruptHandler:	
 22654  0000'                    i1l1106:	
 22655                           ;incstack = 0
 22656                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 22657                           
 22658  0000' 0008               	return
 22659  0001'                    __end_of_TMR2_DefaultInterruptHandler:	
 22660                           
 22661                           	psect	text107
 22662  0000'                    __ptext107:	
 22663 ;; *************** function _handler_clock_ms *****************
 22664 ;; Defined at:
 22665 ;;		line 606 in file "main.c"
 22666 ;; Parameters:    Size  Location     Type
 22667 ;;		None
 22668 ;; Auto vars:     Size  Location     Type
 22669 ;;		None
 22670 ;; Return value:  Size  Location     Type
 22671 ;;                  1    wreg      void 
 22672 ;; Registers used:
 22673 ;;		wreg, status,2, status,0
 22674 ;; Tracked objects:
 22675 ;;		On entry : 0/0
 22676 ;;		On exit  : 0/0
 22677 ;;		Unchanged: 0/0
 22678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22681 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22683 ;;Total ram usage:        1 bytes
 22684 ;; Hardware stack levels used:    1
 22685 ;; This function calls:
 22686 ;;		Nothing
 22687 ;; This function is called by:
 22688 ;;		_main
 22689 ;;		_TMR2_ISR
 22690 ;; This function uses a non-reentrant model
 22691 ;;
 22692                           
 22693                           
 22694                           ;psect for function _handler_clock_ms
 22695  0000'                    _handler_clock_ms:	
 22696  0000'                    i1l5860:	
 22697                           ;incstack = 0
 22698                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 22699                           
 22700                           
 22701                           ;main.c: 607:     clkms++;
 22702  0000' 3001               	movlw	1
 22703  0001' 0080'              	movwf	??_handler_clock_ms
 22704  0002' 0800'              	movf	??_handler_clock_ms,w
 22705  0003' 0780'              	addwf	_clkms,f	;volatile
 22706  0004'                    i1l5862:	
 22707                           
 22708                           ;main.c: 609:     if(clkms > 200){
 22709  0004' 30C9               	movlw	201
 22710  0005' 0200'              	subwf	_clkms,w	;volatile
 22711  0006' 1C03               	skipc
 22712  0007' 2800'              	goto	u298_21
 22713  0008' 2800'              	goto	u298_20
 22714  0009'                    u298_21:	
 22715  0009' 2800'              	goto	i1l1433
 22716  000A'                    u298_20:	
 22717  000A'                    i1l5864:	
 22718                           
 22719                           ;main.c: 610:         clkms = 0;
 22720  000A' 0180'              	clrf	_clkms	;volatile
 22721  000B'                    i1l1433:	
 22722  000B' 0008               	return
 22723  000C'                    __end_of_handler_clock_ms:	
 22724                           
 22725                           	psect	text108
 22726  0000'                    __ptext108:	
 22727 ;; *************** function _TMR1_ISR *****************
 22728 ;; Defined at:
 22729 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 22730 ;; Parameters:    Size  Location     Type
 22731 ;;		None
 22732 ;; Auto vars:     Size  Location     Type
 22733 ;;		None
 22734 ;; Return value:  Size  Location     Type
 22735 ;;                  1    wreg      void 
 22736 ;; Registers used:
 22737 ;;		wreg, status,2, status,0, pclath, cstack
 22738 ;; Tracked objects:
 22739 ;;		On entry : 0/0
 22740 ;;		On exit  : 0/0
 22741 ;;		Unchanged: 0/0
 22742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22747 ;;Total ram usage:        0 bytes
 22748 ;; Hardware stack levels used:    1
 22749 ;; Hardware stack levels required when called:    1
 22750 ;; This function calls:
 22751 ;;		Absolute function
 22752 ;;		_TMR1_DefaultInterruptHandler
 22753 ;;		_TMR1_WriteTimer
 22754 ;;		_handler_clock_hms
 22755 ;; This function is called by:
 22756 ;;		_INTERRUPT_InterruptManager
 22757 ;; This function uses a non-reentrant model
 22758 ;;
 22759                           
 22760                           
 22761                           ;psect for function _TMR1_ISR
 22762  0000'                    _TMR1_ISR:	
 22763  0000'                    i1l6070:	
 22764                           ;incstack = 0
 22765                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 22766                           
 22767                           
 22768                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 22769  0000' 002E               	movlb	14	; select bank14
 22770  0001' 1010               	bcf	16,0	;volatile
 22771  0002'                    i1l6072:	
 22772                           
 22773                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 22774  0002' 0020               	movlb	0	; select bank0
 22775  0003' 0801'              	movf	_timer1ReloadVal+1,w	;volatile
 22776  0004' 0081'              	movwf	TMR1_WriteTimer@timerVal+1
 22777  0005' 0800'              	movf	_timer1ReloadVal,w	;volatile
 22778  0006' 0080'              	movwf	TMR1_WriteTimer@timerVal
 22779  0007' 3180' 2000' 3180'  	fcall	_TMR1_WriteTimer
 22780  000A'                    i1l6074:	
 22781                           
 22782                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 22783  000A' 0021               	movlb	1	; select bank1
 22784  000B' 0800'              	movf	_TMR1_InterruptHandler^(0+128),w
 22785  000C' 0400'              	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 22786  000D' 1903               	btfsc	3,2
 22787  000E' 2800'              	goto	u327_21
 22788  000F' 2800'              	goto	u327_20
 22789  0010'                    u327_21:	
 22790  0010' 2800'              	goto	i1l958
 22791  0011'                    u327_20:	
 22792  0011'                    i1l6076:	
 22793                           
 22794                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 22795  0011' 0800'              	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 22796  0012' 008A               	movwf	10
 22797  0013' 0800'              	movf	_TMR1_InterruptHandler^(0+128),w
 22798  0014' 000A               	callw
 22799  0015' 3180'              	pagesel	$
 22800  0016'                    i1l958:	
 22801  0016' 0008               	return
 22802  0017'                    __end_of_TMR1_ISR:	
 22803                           
 22804                           	psect	text109
 22805  0000'                    __ptext109:	
 22806 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 22807 ;; Defined at:
 22808 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 22809 ;; Parameters:    Size  Location     Type
 22810 ;;		None
 22811 ;; Auto vars:     Size  Location     Type
 22812 ;;		None
 22813 ;; Return value:  Size  Location     Type
 22814 ;;                  1    wreg      void 
 22815 ;; Registers used:
 22816 ;;		None
 22817 ;; Tracked objects:
 22818 ;;		On entry : 0/0
 22819 ;;		On exit  : 0/0
 22820 ;;		Unchanged: 0/0
 22821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22826 ;;Total ram usage:        0 bytes
 22827 ;; Hardware stack levels used:    1
 22828 ;; This function calls:
 22829 ;;		Nothing
 22830 ;; This function is called by:
 22831 ;;		_TMR1_Initialize
 22832 ;;		_TMR1_ISR
 22833 ;; This function uses a non-reentrant model
 22834 ;;
 22835                           
 22836                           
 22837                           ;psect for function _TMR1_DefaultInterruptHandler
 22838  0000'                    _TMR1_DefaultInterruptHandler:	
 22839  0000'                    i1l964:	
 22840                           ;incstack = 0
 22841                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 22842                           
 22843  0000' 0008               	return
 22844  0001'                    __end_of_TMR1_DefaultInterruptHandler:	
 22845                           
 22846                           	psect	text110
 22847  0000'                    __ptext110:	
 22848 ;; *************** function _handler_clock_hms *****************
 22849 ;; Defined at:
 22850 ;;		line 580 in file "main.c"
 22851 ;; Parameters:    Size  Location     Type
 22852 ;;		None
 22853 ;; Auto vars:     Size  Location     Type
 22854 ;;		None
 22855 ;; Return value:  Size  Location     Type
 22856 ;;                  1    wreg      void 
 22857 ;; Registers used:
 22858 ;;		wreg, status,2, status,0
 22859 ;; Tracked objects:
 22860 ;;		On entry : 0/0
 22861 ;;		On exit  : 0/0
 22862 ;;		Unchanged: 0/0
 22863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22866 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22867 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22868 ;;Total ram usage:        1 bytes
 22869 ;; Hardware stack levels used:    1
 22870 ;; This function calls:
 22871 ;;		Nothing
 22872 ;; This function is called by:
 22873 ;;		_main
 22874 ;;		_TMR1_ISR
 22875 ;; This function uses a non-reentrant model
 22876 ;;
 22877                           
 22878                           
 22879                           ;psect for function _handler_clock_hms
 22880  0000'                    _handler_clock_hms:	
 22881  0000'                    i1l5840:	
 22882                           ;incstack = 0
 22883                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 22884                           
 22885                           
 22886                           ;main.c: 582:     if(!config_mode){
 22887  0000' 0020               	movlb	0	; select bank0
 22888  0001' 0807'              	movf	_config_mode,w	;volatile
 22889  0002' 1D03               	btfss	3,2
 22890  0003' 2800'              	goto	u293_21
 22891  0004' 2800'              	goto	u293_20
 22892  0005'                    u293_21:	
 22893  0005' 2800'              	goto	i1l5844
 22894  0006'                    u293_20:	
 22895  0006'                    i1l5842:	
 22896  0006' 1003               	clrc
 22897  0007' 1F96               	btfss	22,7	;volatile
 22898  0008' 1403               	setc
 22899  0009' 1803               	btfsc	3,0
 22900  000A' 2800'              	goto	u294_21
 22901  000B' 2800'              	goto	u294_20
 22902  000C'                    u294_21:	
 22903  000C' 0020               	movlb	0	; select bank0
 22904  000D' 1796               	bsf	22,7	;volatile
 22905  000E' 2800'              	goto	u295_24
 22906  000F'                    u294_20:	
 22907  000F' 0020               	movlb	0	; select bank0
 22908  0010' 1396               	bcf	22,7	;volatile
 22909  0011'                    u295_24:	
 22910  0011'                    i1l5844:	
 22911                           
 22912                           ;main.c: 586:     last5s++;
 22913  0011' 3001               	movlw	1
 22914  0012' 0080'              	movwf	??_handler_clock_hms
 22915  0013' 0800'              	movf	??_handler_clock_hms,w
 22916  0014' 078A'              	addwf	_last5s,f	;volatile
 22917  0015'                    i1l5846:	
 22918                           
 22919                           ;main.c: 587:     seg++;
 22920  0015' 3001               	movlw	1
 22921  0016' 0080'              	movwf	??_handler_clock_hms
 22922  0017' 0800'              	movf	??_handler_clock_hms,w
 22923  0018' 078D'              	addwf	_seg,f	;volatile
 22924  0019'                    i1l5848:	
 22925                           
 22926                           ;main.c: 588:     if(seg >= 60) {
 22927  0019' 303C               	movlw	60
 22928  001A' 020D'              	subwf	_seg,w	;volatile
 22929  001B' 1C03               	skipc
 22930  001C' 2800'              	goto	u296_21
 22931  001D' 2800'              	goto	u296_20
 22932  001E'                    u296_21:	
 22933  001E' 2800'              	goto	i1l1429
 22934  001F'                    u296_20:	
 22935  001F'                    i1l5850:	
 22936                           
 22937                           ;main.c: 589:         clkm++;
 22938  001F' 3001               	movlw	1
 22939  0020' 0080'              	movwf	??_handler_clock_hms
 22940  0021' 0800'              	movf	??_handler_clock_hms,w
 22941  0022' 078E'              	addwf	_clkm,f	;volatile
 22942                           
 22943                           ;main.c: 590:         last1m++;
 22944  0023' 3001               	movlw	1
 22945  0024' 0080'              	movwf	??_handler_clock_hms
 22946  0025' 0800'              	movf	??_handler_clock_hms,w
 22947  0026' 0789'              	addwf	_last1m,f	;volatile
 22948  0027'                    i1l5852:	
 22949                           
 22950                           ;main.c: 591:         seg = 0;
 22951  0027' 018D'              	clrf	_seg	;volatile
 22952  0028'                    i1l5854:	
 22953                           
 22954                           ;main.c: 592:         if(clkm >= 60) {
 22955  0028' 303C               	movlw	60
 22956  0029' 020E'              	subwf	_clkm,w	;volatile
 22957  002A' 1C03               	skipc
 22958  002B' 2800'              	goto	u297_21
 22959  002C' 2800'              	goto	u297_20
 22960  002D'                    u297_21:	
 22961  002D' 2800'              	goto	i1l1429
 22962  002E'                    u297_20:	
 22963  002E'                    i1l5856:	
 22964                           
 22965                           ;main.c: 593:             clkh++;
 22966  002E' 3001               	movlw	1
 22967  002F' 0080'              	movwf	??_handler_clock_hms
 22968  0030' 0800'              	movf	??_handler_clock_hms,w
 22969  0031' 078F'              	addwf	_clkh,f	;volatile
 22970  0032'                    i1l5858:	
 22971                           
 22972                           ;main.c: 594:             clkm = 0;
 22973  0032' 018E'              	clrf	_clkm	;volatile
 22974  0033'                    i1l1429:	
 22975  0033' 0008               	return
 22976  0034'                    __end_of_handler_clock_hms:	
 22977                           
 22978                           	psect	text111
 22979  0000'                    __ptext111:	
 22980 ;; *************** function _TMR1_WriteTimer *****************
 22981 ;; Defined at:
 22982 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 22983 ;; Parameters:    Size  Location     Type
 22984 ;;  timerVal        2    0[COMMON] unsigned short 
 22985 ;; Auto vars:     Size  Location     Type
 22986 ;;		None
 22987 ;; Return value:  Size  Location     Type
 22988 ;;                  1    wreg      void 
 22989 ;; Registers used:
 22990 ;;		wreg, status,2
 22991 ;; Tracked objects:
 22992 ;;		On entry : 0/0
 22993 ;;		On exit  : 0/0
 22994 ;;		Unchanged: 0/0
 22995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 22996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 22999 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23000 ;;Total ram usage:        2 bytes
 23001 ;; Hardware stack levels used:    1
 23002 ;; This function calls:
 23003 ;;		Nothing
 23004 ;; This function is called by:
 23005 ;;		_TMR1_ISR
 23006 ;;		_TMR1_Reload
 23007 ;; This function uses a non-reentrant model
 23008 ;;
 23009                           
 23010                           
 23011                           ;psect for function _TMR1_WriteTimer
 23012  0000'                    _TMR1_WriteTimer:	
 23013  0000'                    i1l5768:	
 23014                           ;incstack = 0
 23015                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 23016                           
 23017                           
 23018                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 23019  0000' 0024               	movlb	4	; select bank4
 23020  0001' 1D0E               	btfss	14,2	;volatile
 23021  0002' 2800'              	goto	u284_21
 23022  0003' 2800'              	goto	u284_20
 23023  0004'                    u284_21:	
 23024  0004' 2800'              	goto	i1l5778
 23025  0005'                    u284_20:	
 23026  0005'                    i1l5770:	
 23027                           
 23028                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 23029  0005' 100E               	bcf	14,0	;volatile
 23030  0006'                    i1l5772:	
 23031                           
 23032                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 23033  0006' 0801'              	movf	TMR1_WriteTimer@timerVal+1,w
 23034  0007' 008D               	movwf	13	;volatile
 23035  0008'                    i1l5774:	
 23036                           
 23037                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 23038  0008' 0800'              	movf	TMR1_WriteTimer@timerVal,w
 23039  0009' 008C               	movwf	12	;volatile
 23040  000A'                    i1l5776:	
 23041                           
 23042                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 23043  000A' 140E               	bsf	14,0	;volatile
 23044                           
 23045                           ;mcc_generated_files/tmr1.c: 140:     }
 23046  000B' 2800'              	goto	i1l945
 23047  000C'                    i1l5778:	
 23048                           
 23049                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 23050  000C' 0801'              	movf	TMR1_WriteTimer@timerVal+1,w
 23051  000D' 008D               	movwf	13	;volatile
 23052  000E'                    i1l5780:	
 23053                           
 23054                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 23055  000E' 0800'              	movf	TMR1_WriteTimer@timerVal,w
 23056  000F' 008C               	movwf	12	;volatile
 23057  0010'                    i1l945:	
 23058  0010' 0008               	return
 23059  0011'                    __end_of_TMR1_WriteTimer:	
 23060                           
 23061                           	psect	text112
 23062  0000'                    __ptext112:	
 23063 ;; *************** function _TMR0_ISR *****************
 23064 ;; Defined at:
 23065 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 23066 ;; Parameters:    Size  Location     Type
 23067 ;;		None
 23068 ;; Auto vars:     Size  Location     Type
 23069 ;;		None
 23070 ;; Return value:  Size  Location     Type
 23071 ;;                  1    wreg      void 
 23072 ;; Registers used:
 23073 ;;		wreg, status,2, status,0, pclath, cstack
 23074 ;; Tracked objects:
 23075 ;;		On entry : 0/0
 23076 ;;		On exit  : 0/0
 23077 ;;		Unchanged: 0/0
 23078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23083 ;;Total ram usage:        0 bytes
 23084 ;; Hardware stack levels used:    1
 23085 ;; Hardware stack levels required when called:    2
 23086 ;; This function calls:
 23087 ;;		Absolute function
 23088 ;;		_ISR_3s
 23089 ;;		_TMR0_DefaultInterruptHandler
 23090 ;; This function is called by:
 23091 ;;		_INTERRUPT_InterruptManager
 23092 ;; This function uses a non-reentrant model
 23093 ;;
 23094                           
 23095                           
 23096                           ;psect for function _TMR0_ISR
 23097  0000'                    _TMR0_ISR:	
 23098  0000'                    i1l6064:	
 23099                           ;incstack = 0
 23100                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 23101                           
 23102                           
 23103                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 23104  0000' 002E               	movlb	14	; select bank14
 23105  0001' 128C               	bcf	12,5	;volatile
 23106  0002'                    i1l6066:	
 23107                           
 23108                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 23109  0002' 0021               	movlb	1	; select bank1
 23110  0003' 0800'              	movf	_TMR0_InterruptHandler^(0+128),w
 23111  0004' 0400'              	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 23112  0005' 1903               	btfsc	3,2
 23113  0006' 2800'              	goto	u326_21
 23114  0007' 2800'              	goto	u326_20
 23115  0008'                    u326_21:	
 23116  0008' 2800'              	goto	i1l894
 23117  0009'                    u326_20:	
 23118  0009'                    i1l6068:	
 23119                           
 23120                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 23121  0009' 0800'              	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 23122  000A' 008A               	movwf	10
 23123  000B' 0800'              	movf	_TMR0_InterruptHandler^(0+128),w
 23124  000C' 000A               	callw
 23125  000D' 3180'              	pagesel	$
 23126  000E'                    i1l894:	
 23127  000E' 0008               	return
 23128  000F'                    __end_of_TMR0_ISR:	
 23129                           
 23130                           	psect	text113
 23131  0000'                    __ptext113:	
 23132 ;; *************** function _ISR_3s *****************
 23133 ;; Defined at:
 23134 ;;		line 153 in file "main.c"
 23135 ;; Parameters:    Size  Location     Type
 23136 ;;		None
 23137 ;; Auto vars:     Size  Location     Type
 23138 ;;		None
 23139 ;; Return value:  Size  Location     Type
 23140 ;;                  1    wreg      void 
 23141 ;; Registers used:
 23142 ;;		wreg, status,2, status,0, pclath, cstack
 23143 ;; Tracked objects:
 23144 ;;		On entry : 0/0
 23145 ;;		On exit  : 0/0
 23146 ;;		Unchanged: 0/0
 23147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23150 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23152 ;;Total ram usage:        1 bytes
 23153 ;; Hardware stack levels used:    1
 23154 ;; Hardware stack levels required when called:    1
 23155 ;; This function calls:
 23156 ;;		_TMR0_StopTimer
 23157 ;;		i1_PWM6_LoadDutyValue
 23158 ;; This function is called by:
 23159 ;;		_main
 23160 ;;		_TMR0_ISR
 23161 ;; This function uses a non-reentrant model
 23162 ;;
 23163                           
 23164                           
 23165                           ;psect for function _ISR_3s
 23166  0000'                    _ISR_3s:	
 23167  0000'                    i1l5782:	
 23168                           ;incstack = 0
 23169                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 23170                           
 23171                           
 23172                           ;main.c: 155:     if (threshold){
 23173  0000' 0020               	movlb	0	; select bank0
 23174  0001' 0800'              	movf	_threshold,w
 23175  0002' 0401'              	iorwf	_threshold+1,w
 23176  0003' 1903               	btfsc	3,2
 23177  0004' 2800'              	goto	u285_21
 23178  0005' 2800'              	goto	u285_20
 23179  0006'                    u285_21:	
 23180  0006' 2800'              	goto	i1l1302
 23181  0007'                    u285_20:	
 23182  0007'                    i1l5784:	
 23183                           
 23184                           ;main.c: 156:         PWM6_LoadDutyValue(1023);
 23185  0007' 30FF               	movlw	255
 23186  0008' 0080'              	movwf	i1PWM6_LoadDutyValue@dutyValue
 23187  0009' 3003               	movlw	3
 23188  000A' 0081'              	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 23189  000B' 3180' 2000' 3180'  	fcall	i1_PWM6_LoadDutyValue
 23190  000E'                    i1l5786:	
 23191                           
 23192                           ;main.c: 157:         alarm = 1;
 23193  000E' 3001               	movlw	1
 23194  000F' 0084'              	movwf	??_ISR_3s
 23195  0010' 0804'              	movf	??_ISR_3s,w
 23196  0011' 0020               	movlb	0	; select bank0
 23197  0012' 0086'              	movwf	_alarm	;volatile
 23198  0013'                    i1l1302:	
 23199                           ;main.c: 159:     }
 23200                           
 23201                           
 23202                           ;main.c: 161:     TMR0_StopTimer();
 23203  0013' 3180' 2000' 3180'  	fcall	_TMR0_StopTimer
 23204  0016'                    i1l5788:	
 23205                           
 23206                           ;main.c: 162:     PIE0bits.TMR0IE = 0;
 23207  0016' 002E               	movlb	14	; select bank14
 23208  0017' 1296               	bcf	22,5	;volatile
 23209  0018'                    i1l1303:	
 23210  0018' 0008               	return
 23211  0019'                    __end_of_ISR_3s:	
 23212                           
 23213                           	psect	text114
 23214  0000'                    __ptext114:	
 23215 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 23216 ;; Defined at:
 23217 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 23218 ;; Parameters:    Size  Location     Type
 23219 ;;		None
 23220 ;; Auto vars:     Size  Location     Type
 23221 ;;		None
 23222 ;; Return value:  Size  Location     Type
 23223 ;;                  1    wreg      void 
 23224 ;; Registers used:
 23225 ;;		None
 23226 ;; Tracked objects:
 23227 ;;		On entry : 0/0
 23228 ;;		On exit  : 0/0
 23229 ;;		Unchanged: 0/0
 23230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23235 ;;Total ram usage:        0 bytes
 23236 ;; Hardware stack levels used:    1
 23237 ;; This function calls:
 23238 ;;		Nothing
 23239 ;; This function is called by:
 23240 ;;		_TMR0_Initialize
 23241 ;;		_TMR0_ISR
 23242 ;; This function uses a non-reentrant model
 23243 ;;
 23244                           
 23245                           
 23246                           ;psect for function _TMR0_DefaultInterruptHandler
 23247  0000'                    _TMR0_DefaultInterruptHandler:	
 23248  0000'                    i1l900:	
 23249                           ;incstack = 0
 23250                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 23251                           
 23252  0000' 0008               	return
 23253  0001'                    __end_of_TMR0_DefaultInterruptHandler:	
 23254                           
 23255                           	psect	text115
 23256  0000'                    __ptext115:	
 23257 ;; *************** function _TMR0_StopTimer *****************
 23258 ;; Defined at:
 23259 ;;		line 93 in file "mcc_generated_files/tmr0.c"
 23260 ;; Parameters:    Size  Location     Type
 23261 ;;		None
 23262 ;; Auto vars:     Size  Location     Type
 23263 ;;		None
 23264 ;; Return value:  Size  Location     Type
 23265 ;;                  1    wreg      void 
 23266 ;; Registers used:
 23267 ;;		None
 23268 ;; Tracked objects:
 23269 ;;		On entry : 0/0
 23270 ;;		On exit  : 0/0
 23271 ;;		Unchanged: 0/0
 23272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23277 ;;Total ram usage:        0 bytes
 23278 ;; Hardware stack levels used:    1
 23279 ;; This function calls:
 23280 ;;		Nothing
 23281 ;; This function is called by:
 23282 ;;		_ISR_3s
 23283 ;; This function uses a non-reentrant model
 23284 ;;
 23285                           
 23286                           
 23287                           ;psect for function _TMR0_StopTimer
 23288  0000'                    _TMR0_StopTimer:	
 23289  0000'                    i1l5272:	
 23290                           ;incstack = 0
 23291                           ; Regs used in _TMR0_StopTimer: []
 23292                           
 23293                           
 23294                           ;mcc_generated_files/tmr0.c: 96:     T0CON0bits.T0EN = 0;
 23295  0000' 0020               	movlb	0	; select bank0
 23296  0001' 139E               	bcf	30,7	;volatile
 23297  0002'                    i1l881:	
 23298  0002' 0008               	return
 23299  0003'                    __end_of_TMR0_StopTimer:	
 23300                           
 23301                           	psect	text116
 23302  0000'                    __ptext116:	
 23303 ;; *************** function _INT_ISR *****************
 23304 ;; Defined at:
 23305 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 23306 ;; Parameters:    Size  Location     Type
 23307 ;;		None
 23308 ;; Auto vars:     Size  Location     Type
 23309 ;;		None
 23310 ;; Return value:  Size  Location     Type
 23311 ;;                  1    wreg      void 
 23312 ;; Registers used:
 23313 ;;		wreg, status,2, status,0, pclath, cstack
 23314 ;; Tracked objects:
 23315 ;;		On entry : 0/0
 23316 ;;		On exit  : 0/0
 23317 ;;		Unchanged: 0/0
 23318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23323 ;;Total ram usage:        0 bytes
 23324 ;; Hardware stack levels used:    1
 23325 ;; Hardware stack levels required when called:    3
 23326 ;; This function calls:
 23327 ;;		_INT_CallBack
 23328 ;; This function is called by:
 23329 ;;		_INTERRUPT_InterruptManager
 23330 ;; This function uses a non-reentrant model
 23331 ;;
 23332                           
 23333                           
 23334                           ;psect for function _INT_ISR
 23335  0000'                    _INT_ISR:	
 23336  0000'                    i1l6060:	
 23337                           ;incstack = 0
 23338                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 23339                           
 23340                           
 23341                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 23342  0000' 002E               	movlb	14	; select bank14
 23343  0001' 100C               	bcf	12,0	;volatile
 23344  0002'                    i1l6062:	
 23345                           
 23346                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 23347  0002' 3180' 2000' 3180'  	fcall	_INT_CallBack
 23348  0005'                    i1l334:	
 23349  0005' 0008               	return
 23350  0006'                    __end_of_INT_ISR:	
 23351                           
 23352                           	psect	text117
 23353  0000'                    __ptext117:	
 23354 ;; *************** function _INT_CallBack *****************
 23355 ;; Defined at:
 23356 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 23357 ;; Parameters:    Size  Location     Type
 23358 ;;		None
 23359 ;; Auto vars:     Size  Location     Type
 23360 ;;		None
 23361 ;; Return value:  Size  Location     Type
 23362 ;;                  1    wreg      void 
 23363 ;; Registers used:
 23364 ;;		wreg, status,2, status,0, pclath, cstack
 23365 ;; Tracked objects:
 23366 ;;		On entry : 0/0
 23367 ;;		On exit  : 0/0
 23368 ;;		Unchanged: 0/0
 23369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23374 ;;Total ram usage:        0 bytes
 23375 ;; Hardware stack levels used:    1
 23376 ;; Hardware stack levels required when called:    2
 23377 ;; This function calls:
 23378 ;;		Absolute function
 23379 ;;		_INT_DefaultInterruptHandler
 23380 ;;		_sw1_EXT
 23381 ;; This function is called by:
 23382 ;;		_INT_ISR
 23383 ;; This function uses a non-reentrant model
 23384 ;;
 23385                           
 23386                           
 23387                           ;psect for function _INT_CallBack
 23388  0000'                    _INT_CallBack:	
 23389  0000'                    i1l5620:	
 23390                           ;incstack = 0
 23391                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 23392                           
 23393                           
 23394                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 23395  0000' 0021               	movlb	1	; select bank1
 23396  0001' 0800'              	movf	_INT_InterruptHandler^(0+128),w
 23397  0002' 0400'              	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 23398  0003' 1903               	btfsc	3,2
 23399  0004' 2800'              	goto	u283_21
 23400  0005' 2800'              	goto	u283_20
 23401  0006'                    u283_21:	
 23402  0006' 2800'              	goto	i1l338
 23403  0007'                    u283_20:	
 23404  0007'                    i1l5622:	
 23405                           
 23406                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 23407  0007' 0800'              	movf	(_INT_InterruptHandler+1)^(0+128),w
 23408  0008' 008A               	movwf	10
 23409  0009' 0800'              	movf	_INT_InterruptHandler^(0+128),w
 23410  000A' 000A               	callw
 23411  000B' 3180'              	pagesel	$
 23412  000C'                    i1l338:	
 23413  000C' 0008               	return
 23414  000D'                    __end_of_INT_CallBack:	
 23415                           
 23416                           	psect	text118
 23417  0000'                    __ptext118:	
 23418 ;; *************** function _INT_DefaultInterruptHandler *****************
 23419 ;; Defined at:
 23420 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 23421 ;; Parameters:    Size  Location     Type
 23422 ;;		None
 23423 ;; Auto vars:     Size  Location     Type
 23424 ;;		None
 23425 ;; Return value:  Size  Location     Type
 23426 ;;                  1    wreg      void 
 23427 ;; Registers used:
 23428 ;;		None
 23429 ;; Tracked objects:
 23430 ;;		On entry : 0/0
 23431 ;;		On exit  : 0/0
 23432 ;;		Unchanged: 0/0
 23433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23438 ;;Total ram usage:        0 bytes
 23439 ;; Hardware stack levels used:    1
 23440 ;; This function calls:
 23441 ;;		Nothing
 23442 ;; This function is called by:
 23443 ;;		_EXT_INT_Initialize
 23444 ;;		_INT_CallBack
 23445 ;; This function uses a non-reentrant model
 23446 ;;
 23447                           
 23448                           
 23449                           ;psect for function _INT_DefaultInterruptHandler
 23450  0000'                    _INT_DefaultInterruptHandler:	
 23451  0000'                    i1l344:	
 23452                           ;incstack = 0
 23453                           ; Regs used in _INT_DefaultInterruptHandler: []
 23454                           
 23455  0000' 0008               	return
 23456  0001'                    __end_of_INT_DefaultInterruptHandler:	
 23457                           
 23458                           	psect	text119
 23459  0000'                    __ptext119:	
 23460 ;; *************** function _sw1_EXT *****************
 23461 ;; Defined at:
 23462 ;;		line 131 in file "main.c"
 23463 ;; Parameters:    Size  Location     Type
 23464 ;;		None
 23465 ;; Auto vars:     Size  Location     Type
 23466 ;;		None
 23467 ;; Return value:  Size  Location     Type
 23468 ;;                  1    wreg      void 
 23469 ;; Registers used:
 23470 ;;		wreg, status,2, status,0, pclath, cstack
 23471 ;; Tracked objects:
 23472 ;;		On entry : 0/0
 23473 ;;		On exit  : 0/0
 23474 ;;		Unchanged: 0/0
 23475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23478 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23479 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23480 ;;Total ram usage:        1 bytes
 23481 ;; Hardware stack levels used:    1
 23482 ;; Hardware stack levels required when called:    1
 23483 ;; This function calls:
 23484 ;;		i1_PWM6_LoadDutyValue
 23485 ;;		i1_checkDebounceSW1
 23486 ;; This function is called by:
 23487 ;;		_main
 23488 ;;		_INT_CallBack
 23489 ;; This function uses a non-reentrant model
 23490 ;;
 23491                           
 23492                           
 23493                           ;psect for function _sw1_EXT
 23494  0000'                    _sw1_EXT:	
 23495  0000'                    i1l5298:	
 23496                           ;incstack = 0
 23497                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 23498                           
 23499                           
 23500                           ;main.c: 133:     if(checkDebounceSW1()){
 23501  0000' 3180' 2000' 3180'  	fcall	i1_checkDebounceSW1
 23502  0003' 3A00               	xorlw	0
 23503  0004' 1903               	skipnz
 23504  0005' 2800'              	goto	u271_21
 23505  0006' 2800'              	goto	u271_20
 23506  0007'                    u271_21:	
 23507  0007' 2800'              	goto	i1l1299
 23508  0008'                    u271_20:	
 23509  0008'                    i1l5300:	
 23510                           
 23511                           ;main.c: 134:         if (alarm == 1){
 23512  0008' 0020               	movlb	0	; select bank0
 23513  0009' 0306'              	decf	_alarm,w	;volatile
 23514  000A' 1D03               	btfss	3,2
 23515  000B' 2800'              	goto	u272_21
 23516  000C' 2800'              	goto	u272_20
 23517  000D'                    u272_21:	
 23518  000D' 2800'              	goto	i1l5308
 23519  000E'                    u272_20:	
 23520  000E'                    i1l5302:	
 23521                           
 23522                           ;main.c: 135:             alarm = 0;
 23523  000E' 0186'              	clrf	_alarm	;volatile
 23524  000F'                    i1l5304:	
 23525                           
 23526                           ;main.c: 136:             PWM6_LoadDutyValue(0);
 23527  000F' 3000               	movlw	0
 23528  0010' 0080'              	movwf	i1PWM6_LoadDutyValue@dutyValue
 23529  0011' 0081'              	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 23530  0012' 3180' 2000' 3180'  	fcall	i1_PWM6_LoadDutyValue
 23531  0015'                    i1l5306:	
 23532                           
 23533                           ;main.c: 137:             last_ms = clkms;
 23534  0015' 0800'              	movf	_clkms,w	;volatile
 23535  0016' 0087'              	movwf	??_sw1_EXT
 23536  0017' 0807'              	movf	??_sw1_EXT,w
 23537  0018' 0020               	movlb	0	; select bank0
 23538  0019' 008C'              	movwf	_last_ms
 23539                           
 23540                           ;main.c: 138:         }
 23541  001A' 2800'              	goto	i1l1299
 23542  001B'                    i1l5308:	
 23543                           
 23544                           ;main.c: 140:             if(config_mode == 0){
 23545  001B' 0807'              	movf	_config_mode,w	;volatile
 23546  001C' 1D03               	btfss	3,2
 23547  001D' 2800'              	goto	u273_21
 23548  001E' 2800'              	goto	u273_20
 23549  001F'                    u273_21:	
 23550  001F' 2800'              	goto	i1l1299
 23551  0020'                    u273_20:	
 23552  0020'                    i1l5310:	
 23553                           
 23554                           ;main.c: 141:                 config_mode = 1;
 23555  0020' 3001               	movlw	1
 23556  0021' 0087'              	movwf	??_sw1_EXT
 23557  0022' 0807'              	movf	??_sw1_EXT,w
 23558  0023' 0087'              	movwf	_config_mode	;volatile
 23559  0024'                    i1l1299:	
 23560  0024' 0008               	return
 23561  0025'                    __end_of_sw1_EXT:	
 23562                           
 23563                           	psect	text120
 23564  0000'                    __ptext120:	
 23565 ;; *************** function i1_checkDebounceSW1 *****************
 23566 ;; Defined at:
 23567 ;;		line 621 in file "main.c"
 23568 ;; Parameters:    Size  Location     Type
 23569 ;;		None
 23570 ;; Auto vars:     Size  Location     Type
 23571 ;;		None
 23572 ;; Return value:  Size  Location     Type
 23573 ;;                  1    wreg      unsigned char 
 23574 ;; Registers used:
 23575 ;;		wreg, status,2, status,0
 23576 ;; Tracked objects:
 23577 ;;		On entry : 0/0
 23578 ;;		On exit  : 0/0
 23579 ;;		Unchanged: 0/0
 23580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23583 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23584 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23585 ;;Total ram usage:        7 bytes
 23586 ;; Hardware stack levels used:    1
 23587 ;; This function calls:
 23588 ;;		Nothing
 23589 ;; This function is called by:
 23590 ;;		_sw1_EXT
 23591 ;; This function uses a non-reentrant model
 23592 ;;
 23593                           
 23594                           
 23595                           ;psect for function i1_checkDebounceSW1
 23596  0000'                    i1_checkDebounceSW1:	
 23597  0000'                    i1l5132:	
 23598                           ;incstack = 0
 23599                           ; Regs used in i1_checkDebounceSW1: [wreg+status,2+status,0]
 23600                           
 23601                           
 23602                           ;main.c: 622:     PIE4bits.TMR1IE = 0;
 23603  0000' 002E               	movlb	14	; select bank14
 23604  0001' 101A               	bcf	26,0	;volatile
 23605  0002'                    i1l5134:	
 23606                           
 23607                           ;main.c: 624:     if(clkms - last_ms < 0){
 23608  0002' 0800'              	movf	_clkms,w	;volatile
 23609  0003' 0080'              	movwf	??i1_checkDebounceSW1
 23610  0004' 0181'              	clrf	??i1_checkDebounceSW1+1
 23611  0005' 0801'              	movf	??i1_checkDebounceSW1+1,w
 23612  0006' 0083'              	movwf	??i1_checkDebounceSW1+3
 23613  0007' 0020               	movlb	0	; select bank0
 23614  0008' 080C'              	movf	_last_ms,w
 23615  0009' 0200'              	subwf	??i1_checkDebounceSW1,w
 23616  000A' 0082'              	movwf	??i1_checkDebounceSW1+2
 23617  000B' 1C03               	skipc
 23618  000C' 0383'              	decf	??i1_checkDebounceSW1+3,f
 23619  000D' 1F83'              	btfss	??i1_checkDebounceSW1+3,7
 23620  000E' 2800'              	goto	u266_21
 23621  000F' 2800'              	goto	u266_20
 23622  0010'                    u266_21:	
 23623  0010' 2800'              	goto	i1l5144
 23624  0011'                    u266_20:	
 23625  0011'                    i1l5136:	
 23626                           
 23627                           ;main.c: 626:         if ((200 - last_ms)+ clkms > 15 ){
 23628  0011' 0800'              	movf	_clkms,w	;volatile
 23629  0012' 0080'              	movwf	??i1_checkDebounceSW1
 23630  0013' 0181'              	clrf	??i1_checkDebounceSW1+1
 23631  0014' 0801'              	movf	??i1_checkDebounceSW1+1,w
 23632  0015' 0083'              	movwf	??i1_checkDebounceSW1+3
 23633  0016' 080C'              	movf	_last_ms,w
 23634  0017' 0200'              	subwf	??i1_checkDebounceSW1,w
 23635  0018' 0082'              	movwf	??i1_checkDebounceSW1+2
 23636  0019' 1C03               	skipc
 23637  001A' 0383'              	decf	??i1_checkDebounceSW1+3,f
 23638  001B' 0802'              	movf	??i1_checkDebounceSW1+2,w
 23639  001C' 3EC8               	addlw	200
 23640  001D' 0084'              	movwf	??i1_checkDebounceSW1+4
 23641  001E' 3000               	movlw	0
 23642  001F' 3D03'              	addwfc	??i1_checkDebounceSW1+3,w
 23643  0020' 0085'              	movwf	??i1_checkDebounceSW1+5
 23644  0021' 0805'              	movf	??i1_checkDebounceSW1+5,w
 23645  0022' 3A80               	xorlw	128
 23646  0023' 0086'              	movwf	??i1_checkDebounceSW1+6
 23647  0024' 3080               	movlw	128
 23648  0025' 0206'              	subwf	??i1_checkDebounceSW1+6,w
 23649  0026' 1D03               	skipz
 23650  0027' 2800'              	goto	u267_25
 23651  0028' 3010               	movlw	16
 23652  0029' 0204'              	subwf	??i1_checkDebounceSW1+4,w
 23653  002A'                    u267_25:	
 23654  002A' 1C03               	skipc
 23655  002B' 2800'              	goto	u267_21
 23656  002C' 2800'              	goto	u267_20
 23657  002D'                    u267_21:	
 23658  002D' 2800'              	goto	i1l5144
 23659  002E'                    u267_20:	
 23660  002E'                    i1l5138:	
 23661                           
 23662                           ;main.c: 627:             last_ms = clkms;
 23663  002E' 0800'              	movf	_clkms,w	;volatile
 23664  002F' 0080'              	movwf	??i1_checkDebounceSW1
 23665  0030' 0800'              	movf	??i1_checkDebounceSW1,w
 23666  0031' 0020               	movlb	0	; select bank0
 23667  0032' 008C'              	movwf	_last_ms
 23668  0033'                    i1l5140:	
 23669                           
 23670                           ;main.c: 628:             PIE4bits.TMR1IE = 1;
 23671  0033' 002E               	movlb	14	; select bank14
 23672  0034' 141A               	bsf	26,0	;volatile
 23673                           
 23674                           ;main.c: 629:             return 1;
 23675  0035' 3001               	movlw	1
 23676  0036' 2800'              	goto	i1l1438
 23677  0037'                    i1l5144:	
 23678                           
 23679                           ;main.c: 633:     if(clkms - last_ms < 15){
 23680  0037' 0800'              	movf	_clkms,w	;volatile
 23681  0038' 0080'              	movwf	??i1_checkDebounceSW1
 23682  0039' 0181'              	clrf	??i1_checkDebounceSW1+1
 23683  003A' 0801'              	movf	??i1_checkDebounceSW1+1,w
 23684  003B' 0083'              	movwf	??i1_checkDebounceSW1+3
 23685  003C' 0020               	movlb	0	; select bank0
 23686  003D' 080C'              	movf	_last_ms,w
 23687  003E' 0200'              	subwf	??i1_checkDebounceSW1,w
 23688  003F' 0082'              	movwf	??i1_checkDebounceSW1+2
 23689  0040' 1C03               	skipc
 23690  0041' 0383'              	decf	??i1_checkDebounceSW1+3,f
 23691  0042' 0803'              	movf	??i1_checkDebounceSW1+3,w
 23692  0043' 3A80               	xorlw	128
 23693  0044' 0084'              	movwf	??i1_checkDebounceSW1+4
 23694  0045' 3080               	movlw	128
 23695  0046' 0204'              	subwf	??i1_checkDebounceSW1+4,w
 23696  0047' 1D03               	skipz
 23697  0048' 2800'              	goto	u268_25
 23698  0049' 300F               	movlw	15
 23699  004A' 0202'              	subwf	??i1_checkDebounceSW1+2,w
 23700  004B'                    u268_25:	
 23701  004B' 1803               	skipnc
 23702  004C' 2800'              	goto	u268_21
 23703  004D' 2800'              	goto	u268_20
 23704  004E'                    u268_21:	
 23705  004E' 2800'              	goto	i1l5152
 23706  004F'                    u268_20:	
 23707  004F'                    i1l5146:	
 23708                           
 23709                           ;main.c: 634:         return 0;
 23710  004F' 3000               	movlw	0
 23711  0050' 2800'              	goto	i1l1438
 23712  0051'                    i1l5152:	
 23713                           
 23714                           ;main.c: 637:         last_ms = clkms;
 23715  0051' 0800'              	movf	_clkms,w	;volatile
 23716  0052' 0080'              	movwf	??i1_checkDebounceSW1
 23717  0053' 0800'              	movf	??i1_checkDebounceSW1,w
 23718  0054' 0020               	movlb	0	; select bank0
 23719  0055' 008C'              	movwf	_last_ms
 23720  0056'                    i1l5154:	
 23721                           
 23722                           ;main.c: 638:         PIE4bits.TMR1IE = 1;
 23723  0056' 002E               	movlb	14	; select bank14
 23724  0057' 141A               	bsf	26,0	;volatile
 23725                           
 23726                           ;main.c: 639:         return 1;
 23727  0058' 3001               	movlw	1
 23728  0059'                    i1l1438:	
 23729  0059' 0008               	return
 23730  005A'                    __end_ofi1_checkDebounceSW1:	
 23731                           
 23732                           	psect	text121
 23733  0000'                    __ptext121:	
 23734 ;; *************** function i1_PWM6_LoadDutyValue *****************
 23735 ;; Defined at:
 23736 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 23737 ;; Parameters:    Size  Location     Type
 23738 ;;  dutyValue       2    0[COMMON] unsigned short 
 23739 ;; Auto vars:     Size  Location     Type
 23740 ;;		None
 23741 ;; Return value:  Size  Location     Type
 23742 ;;                  1    wreg      void 
 23743 ;; Registers used:
 23744 ;;		wreg, status,2, status,0
 23745 ;; Tracked objects:
 23746 ;;		On entry : 0/0
 23747 ;;		On exit  : 0/0
 23748 ;;		Unchanged: 0/0
 23749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 23750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23753 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 23754 ;;Total ram usage:        4 bytes
 23755 ;; Hardware stack levels used:    1
 23756 ;; This function calls:
 23757 ;;		Nothing
 23758 ;; This function is called by:
 23759 ;;		_sw1_EXT
 23760 ;;		_ISR_3s
 23761 ;; This function uses a non-reentrant model
 23762 ;;
 23763                           
 23764                           
 23765                           ;psect for function i1_PWM6_LoadDutyValue
 23766  0000'                    i1_PWM6_LoadDutyValue:	
 23767  0000'                    i1l5130:	
 23768                           ;incstack = 0
 23769                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 23770                           
 23771                           
 23772                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 23773  0000' 0801'              	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 23774  0001' 0083'              	movwf	??i1_PWM6_LoadDutyValue+1
 23775  0002' 0800'              	movf	i1PWM6_LoadDutyValue@dutyValue,w
 23776  0003' 0082'              	movwf	??i1_PWM6_LoadDutyValue
 23777  0004' 3683'              	lsrf	??i1_PWM6_LoadDutyValue+1,f
 23778  0005' 0C82'              	rrf	??i1_PWM6_LoadDutyValue,f
 23779  0006' 3683'              	lsrf	??i1_PWM6_LoadDutyValue+1,f
 23780  0007' 0C82'              	rrf	??i1_PWM6_LoadDutyValue,f
 23781  0008' 0802'              	movf	??i1_PWM6_LoadDutyValue,w
 23782  0009' 0027               	movlb	7	; select bank7
 23783  000A' 008D               	movwf	13	;volatile
 23784                           
 23785                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 23786  000B' 0800'              	movf	i1PWM6_LoadDutyValue@dutyValue,w
 23787  000C' 3903               	andlw	3
 23788  000D' 0082'              	movwf	??i1_PWM6_LoadDutyValue
 23789  000E' 3005               	movlw	5
 23790  000F'                    u265_25:	
 23791  000F' 3582'              	lslf	??i1_PWM6_LoadDutyValue,f
 23792  0010' 3EFF               	addlw	-1
 23793  0011' 1D03               	skipz
 23794  0012' 2800'              	goto	u265_25
 23795  0013' 3502'              	lslf	??i1_PWM6_LoadDutyValue,w
 23796  0014' 008C               	movwf	12	;volatile
 23797  0015'                    i1l978:	
 23798  0015' 0008               	return
 23799  0016'                    __end_ofi1_PWM6_LoadDutyValue:	
 23800  007E                     btemp	set	126	;btemp
 23801  007E                     int$flags	set	126
 23802  007E                     wtemp0	set	126


Data Sizes:
    Strings     18
    Constant    37
    Data        25
    BSS         91
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     46      75
    BANK1            80      4      80
    BANK2            80      0      16
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3879$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3885	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3884	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3879	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMMON[1]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[18]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    S66$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    memset@dest	PTR void  size(1) Largest target is 16
		 -> str_rc(BANK1[16]), 

    memset@s	PTR unsigned char  size(1) Largest target is 16
		 -> str_rc(BANK1[16]), 

    write_str_UART@string	PTR unsigned char  size(2) Largest target is 16
		 -> str_rc(BANK1[16]), str_snd(BANK2[16]), 

    sp__memset	PTR void  size(1) Largest target is 16
		 -> str_rc(BANK1[16]), 

    read_str_UART@buff	PTR unsigned char  size(1) Largest target is 16
		 -> str_rc(BANK1[16]), 

    push_ring@ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    push_ring@nreg_pt	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_pt(BANK0[1]), 

    push_ring@nreg_init	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_init(BANK0[1]), 

    ring_buffer@_ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ISR_3s(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ISR_3s(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S383$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S66$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S66$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounceSW1

Critical Paths under _main in BANK0

    _main->_config_routine
    _tsttc->_WriteI2C
    _save_recovery_params->_cksum_w
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _read_str_UART->_memset
    _write_str_UART->_write_UART
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_selectSubfield
    _selectSubfield->_getSubfieldInfo
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _getSubfieldInfo->_increment_subfield
    _limitTempThreshUnits->___awdiv
    _limitHoursUnits->___awdiv
    _increment_subfield->_representLed
    _representLed->_PWM6_LoadDutyValue
    _all_LED->_PWM6_LoadDutyValue
    _mode_select_LED->_PWM6_LoadDutyValue
    _check_thresholds->_PWM6_LoadDutyValue
    _PWM6_LoadDutyValue->___wmul
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   65551
                                             40 BANK0      6     6      0
                                              0 BANK1      4     4      0
                           _ADC_read
                   _DATAEE_WriteByte
                 _EUSART_is_rx_ready
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                   _check_thresholds
                            _cksum_w
                     _config_routine
                   _i2c1_driver_open
                          _push_ring
                          _read_ring
                      _read_str_UART
                        _recoverData
                        _ring_buffer
               _save_recovery_params
                              _tsttc
                     _write_str_UART
 ---------------------------------------------------------------------------------
 (1) _tsttc                                                2     2      0      99
                                              5 BANK0      2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      31
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _save_recovery_params                                 3     3      0    6640
                                             14 BANK0      3     3      0
                   _DATAEE_WriteByte
                            _cksum_w
 ---------------------------------------------------------------------------------
 (1) _ring_buffer                                          7     2      5     796
                                              3 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0   11738
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    2746
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    3925
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0    1278
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _read_str_UART                                        6     5      1    2752
                                             13 BANK0      6     5      1
                     _dump_UART_FIFO
                             _memset
                          _read_UART
                     _write_str_UART
 ---------------------------------------------------------------------------------
 (1) _write_str_UART                                       6     3      3     743
                                              4 BANK0      6     3      3
                         _write_UART
 ---------------------------------------------------------------------------------
 (2) _write_UART                                           1     1      0      31
                                              3 BANK0      1     1      0
                       _EUSART_Write
                  _EUSART_is_tx_done
                 _EUSART_is_tx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_tx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _read_UART                                            0     0      0       0
                        _EUSART_Read
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (2) _memset                                              10     6      4    1233
                                              3 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) _dump_UART_FIFO                                       1     1      0      65
                                              3 BANK0      1     1      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            9     5      4    2773
                                              7 BANK0      9     5      4
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2    1142
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            7     4      3    3300
                                             13 BANK0      7     4      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    2647
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0   25621
                                             37 BANK0      3     3      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
                    _mode_select_LED
                     _selectSubfield
 ---------------------------------------------------------------------------------
 (2) _selectSubfield                                       4     4      0   18007
                                             33 BANK0      4     4      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _getSubfieldInfo
                           _mode_LED
 ---------------------------------------------------------------------------------
 (3) _mode_LED                                             3     3      0    5039
                                             13 BANK0      3     3      0
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (4) _mod4_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod3_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod2_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod1_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _getSubfieldInfo                                      9     9      0   11617
                                             24 BANK0      9     9      0
                            ___awdiv
                            ___awmod
                             ___bmul
                 _increment_subfield
                    _limitHoursUnits
               _limitTempThreshUnits
 ---------------------------------------------------------------------------------
 (4) _limitTempThreshUnits                                 2     2      0    1525
                                             12 BANK0      2     2      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _limitHoursUnits                                      2     2      0    1525
                                             12 BANK0      2     2      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    1525
                                              3 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _increment_subfield                                   6     4      2    4985
                                             18 BANK0      6     4      2
                 _PWM6_LoadDutyValue
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _limitHoursUnits (ARG)
               _limitTempThreshUnits (ARG)
                       _representLed
 ---------------------------------------------------------------------------------
 (5) _representLed                                         5     5      0    2747
                                             13 BANK0      5     5      0
                 _PWM6_LoadDutyValue
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1306
                                              3 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _checkDebounceSW2                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (5) _checkDebounceSW1                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     496
                                              3 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1153
                                              3 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _all_LED                                              1     1      0    1252
                                             13 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_select_LED                                      1     1      0    1252
                                             13 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (1) _check_thresholds                                     2     2      0    1283
                                             13 BANK0      2     2      0
                 _PWM6_LoadDutyValue
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PWM6_LoadDutyValue                                   4     2      2    1252
                                              9 BANK0      4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     844
                    _ADCC_Initialize
                  _EUSART_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     152
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      31
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (8) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (9) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _mssp1_setIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_READ                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_TXData                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_getRXData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_STOP                                 0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_RESTART                              0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_resetBus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_startRX                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _returnStop                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _returnReset                                         1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _i2c_setDataCompleteCallback                         4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (12) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (11) _i2c_setBuffer                                       4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _i2c_restartWrite                                    1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_STOP                                    0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART                                 0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_restart                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_sendACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (9) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (9) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (10) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (9) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (10) _sw1_EXT                                             1     1      0      96
                                              7 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                 i1_checkDebounceSW1
 ---------------------------------------------------------------------------------
 (11) i1_checkDebounceSW1                                  7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (10) i1_PWM6_LoadDutyValue                                4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _INT_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _EUSART_is_rx_ready
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
     ___wmul (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EUSART_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _check_thresholds
     _PWM6_LoadDutyValue
       ___wmul (ARG)
     _TMR0_StartTimer
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _config_routine
     _all_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _checkDebounceSW1
     _checkDebounceSW2
     _mod1_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod2_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod3_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod4_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mode_select_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _selectSubfield
       _all_LED
         _PWM6_LoadDutyValue
           ___wmul (ARG)
       _checkDebounceSW1
       _checkDebounceSW2
       _getSubfieldInfo
         ___awdiv
         ___awmod
         ___bmul
         _increment_subfield
           _PWM6_LoadDutyValue
             ___wmul (ARG)
           _checkDebounceSW1
           _checkDebounceSW2
           _limitHoursUnits (ARG)
             ___awdiv
           _limitTempThreshUnits (ARG)
             ___awdiv
           _representLed (ARG)
             _PWM6_LoadDutyValue
               ___wmul (ARG)
             ___wmul
         _limitHoursUnits
           ___awdiv
         _limitTempThreshUnits
           ___awdiv
       _mode_LED
         _mod1_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod2_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod3_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod4_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
   _i2c1_driver_open
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _read_str_UART
     _dump_UART_FIFO
       _EUSART_Read
       _EUSART_is_rx_ready
     _memset
     _read_UART
       _EUSART_Read
       _EUSART_is_rx_ready
     _write_str_UART
       _write_UART
         _EUSART_Write
         _EUSART_is_tx_done
         _EUSART_is_tx_ready
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
   _ring_buffer
   _save_recovery_params
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
   _tsttc
     _ReadI2C
     _WriteI2C
   _write_str_UART
     _write_UART
       _EUSART_Write
       _EUSART_is_tx_done
       _EUSART_is_tx_ready

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounceSW1
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      4B       5       93.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      4      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      10       9       20.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 09 11:30:50 2019

                            returnReset@p 0009                            read_str_UART@i 0010  
        __end_of_TMR2_SetInterruptHandler 0009                            ___bmul@product 0005  
                             __CFG_CP$OFF 0000                              ___awdiv@sign 0009  
               __size_of_check_thresholds 003C                      __size_of_do_I2C_IDLE 0005  
                     _do_I2C_SEND_RESTART 0000                      __size_of_do_I2C_RCEN 0007  
                     ___wmul@multiplicand 0005               __size_of_PWM6_LoadDutyValue 0019  
                  increment_subfield@exit 0015                               __CFG_LVP$ON 0000  
                                     l341 0008                                       l347 000D  
                                     l452 0008                                       l516 000B  
                                     l455 0007                                       l449 001E  
                                     l771 0015                                       l931 001E  
                                     l780 0008                                       l774 0007  
                                     l777 0006                                       l689 004C  
                                     l961 0008                                       l875 0014  
                                     l878 0002                                       l975 000C  
                                     l897 0008                                       l978 0018  
                                     _PR2 028D                              __CFG_CPD$OFF 0000  
                                     i1l9 0001                           _timer1ReloadVal 0000  
                                     _seg 000D             i2c_setDataCompleteCallback@cb 0005  
                 __size_of_PMD_Initialize 0008                              ___awmod@sign 0009  
                         _TMR2_Initialize 0000                     __size_of_do_I2C_RESET 0008  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                 increment_subfield@limit 0016                              ?_EUSART_Read 0000  
                       read_str_UART@buff 0011                              __CFG_ZCD$OFF 0000  
                         __end_of_LED_bin 001A                                      l1021 001C  
                                    l1022 0023                                      l1103 0008  
                                    l2001 0015                                      l1025 000E  
                                    l1019 0018                                      l1060 0017  
                 ??_rd2RegCompleteHandler 000A                                      l1402 001A  
                                    l1314 0023                                      l1340 003B  
                                    l1421 0019                                      l2141 0053  
                                    l1317 004F                                      l1415 0053  
                                    l1319 0177                                      l2128 005F  
                                    l1504 004A                                      l1345 0057  
                                    l1505 004C                                      l1370 0001  
                                    l1450 0029                                      l1530 00BA  
                                    l1522 009E                                      l1523 00A0  
                                    l1516 0088                                      l1445 004C  
                                    l1357 0081                                      l1453 002E  
                                    l1541 00F3                                      l1525 00A4  
                                    l1517 008B                                      l1438 0059  
                                    l1366 004D                                      l1542 00F5  
                                    l1703 000A                                      l1640 0046  
                                    l1560 0149                                      l1385 015B  
                                    l1633 00C5                                      l1553 0131  
                                    l1529 00B8                                      l1802 0010  
                                    l1650 000F                                      l1554 0134  
                                    l1571 0016                                      l1563 014F  
                                    l1708 000A                                      l1660 001B  
                                    l1572 0018                                      l1492 000F  
                                    l1733 004C                                      l1397 001A  
                                    l2429 00A4                                      l1493 0011  
                                    l1582 0021                                      l1719 001F  
                                    l1647 003E                                      l1823 0017  
                                    l1655 001F                                      l1575 001E  
                                    l1591 0043                                      l1559 0147  
                                    l1808 0018                                      l1816 0029  
                                    l1584 0026                                      l1729 0029  
                                    l1489 0000                                      l1690 0019  
                                    l1675 0000                                      l1579 0059  
                                    l1596 0057                                      l1678 000D  
                    _ADCC_StartConversion 0000                                      l1687 005A  
                                    l1695 000A                                      l1777 004C  
                                    l7010 000D                                      l1698 0009  
                                    l1778 0062                                      l7012 001C  
                                    l7100 0002                                      l7020 0002  
                                    l7014 0039                                      l7006 0002  
                                    l7110 0015                                      l7102 0003  
                                    l7030 0016                                      l7022 0006  
                                    l1975 000B                                      l7200 002C  
                                    l7016 0043                                      l7120 002D  
                                    l7112 0017                                      l7104 0007  
                                    l7040 002A                                      l7032 001A  
                                    l7024 000B                                      l8000 0026  
                                    l1977 001F                                      l7210 004A  
                                    l7202 0036                                      l7130 0045  
                                    l7122 0033                                      l7114 001B  
                                    l7106 000D                                      l7050 0046  
                                    l7042 002E                                      l7034 001C  
                                    l7026 000D                                      l7018 0000  
                                    l7220 0000                                      l7212 004F  
                                    l7204 003A                                      l7132 0048  
                                    l7124 0034                                      l7116 0020  
                                    l7108 000F                                      l7052 004B  
                                    l7044 0032                                      l7036 0022  
                                    l7028 0011                                      l7140 0000  
                                    l7206 003F                                      l7118 0028  
                                    l7126 0039                                      l7134 004D  
                                    l7046 0041                                      l7038 0025  
                                    l7054 0051                                      l7142 0017  
                                    l7310 00D3                                      l7302 0093  
                                    l7230 0011                                      l7222 0000  
                                    l7070 000A                                      l7062 0000  
                                    l8110 0003                                      l7216 0000  
                                    l7400 0029                                      l7208 0045  
                                    l7136 0052                                      l7128 003D  
                                    l7056 0056                                      l7048 0045  
                                    l7160 0019                                      l7152 0000  
                                    l7320 0129                                      l7312 00FA  
                                    l7304 00A6                                      l7080 0002  
                                    l7240 001D                                      l7232 0012  
                                    l7224 0008                                      l7072 000B  
                                    l7064 0004                                      l8200 00CD  
                                    l8120 0023                                      l8112 000B  
                                    l7410 0033                                      l7402 002B  
                                    l7218 0000                                      l7242 0000  
                                    l7250 001E                                      l7170 000B  
                                    l7058 005B                                      l7154 0017  
                                    l7322 0137                                      l7314 010A  
                                    l7306 00C0                                      l7082 0008  
                                    l7090 0002                                      l7234 0013  
                                    l7226 000C                                      l7074 000C  
                                    l7066 0008                                      l8210 013E  
                                    l8202 00EB                                      l8130 002A  
                                    l8122 0023                                      l8114 0013  
                                    l7500 0000                                      l7420 003E  
                                    l7412 0035                                      l7404 002D  
                                    l7260 0044                                      l7252 002E  
                                    l7244 0002                                      l7180 0002  
                                    l7172 000D                                      l7164 0002  
                                    l7148 0019                                      l7308 00C3  
                                    l7084 0000                                      l7092 0008  
                                    l7236 0015                                      l7228 0010  
                                    l7068 0009                                      l7340 0000  
                                    l8220 014F                                      l8204 0114  
                                    l8212 0143                                      l8140 0034  
                                    l8132 002C                                      l8116 001B  
                                    l8108 0000                                      l7430 0049  
                                    l7422 0040                                      l7414 0037  
                                    l7406 002F                                      l7262 004D  
                                    l7254 0037                                      l7246 000B  
                                    l7190 0016                                      l7182 0006  
                                    l7174 0014                                      l7166 0003  
                                    l7318 011C                                      l7326 0147  
                                    l7078 0000                                      l7086 0002  
                                    l7094 0000                                      l7270 0003  
                                    l7238 0017                                      l7510 0000  
                                    l7350 0011                                      l7342 0002  
                                    l8230 017F                                      l8222 015B  
                                    l8214 0148                                      l8206 0120  
                                    l8150 003E                                      l8142 0036  
                                    l8134 002D                                      l8126 0028  
                                    l8118 0023                                      l7504 0000  
                                    l7432 0000                                      l7424 0043  
                                    l7416 0039                                      l7408 0031  
                                    l7440 0000                                      l7264 004F  
                                    l7256 0039                                      l7248 0016  
                                    l7192 001C                                      l7184 000B  
                                    l7168 0007                                      l7088 0000  
                                    l7096 0002                                      l7272 0007  
                                    l7280 0013                                      l7360 0002  
                                    l7512 0003                                      l7352 0015  
                                    l7520 0000                                      l8232 0181  
                                    l8216 014A                                      l8224 0167  
                                    l8208 0123                                      l8160 004D  
                                    l8152 003F                                      l8144 0039  
                                    l8136 002F                                      l8128 0029  
                                    l7370 000B                                      l7434 0003  
                                    l7426 0045                                      l7418 003C  
                                    l7442 0007                                      l7450 0000  
                                    l7530 0014                                      l7522 0000  
                                    l7266 0058                                      l7258 0042  
                                    l7194 001F                                      l7186 000D  
                                    l7178 0000                                      l7290 0003  
                                    l7098 0008                                      l7274 000B  
                                    l7610 0006                                      l7362 000A  
                                    l7514 0010                                      l7354 001E  
                                    l7602 0005                                      l8234 0187  
                                    l8226 0170                                      l8218 014D  
                                    l8170 006E                                      l8162 004E  
                                    l8154 0042                                      l8146 003B  
                                    l8138 0031                                      l7444 0000  
                                    l7436 0004                                      l7428 0047  
                                    l7380 000A                                      l7372 0000  
                                    l7460 000C                                      l7452 0005  
                                    l7508 0000                                      l7532 001C  
                                    l7524 0008                                      l7196 0024  
                                    l7188 0011                                      l7292 0051  
                                    l7276 000F                                      l7268 0002  
                                    l7540 0009                                      l7364 0012  
                                    l7516 0015                                      l7348 0006  
                                    l7604 000D                                      l8228 0179  
                                    l8180 0082                                      l8172 0070  
                                    l8164 0050                                      l8156 0049  
                                    l8148 003C                                      l7446 0012  
                                    l7366 0000                                      l7438 0007  
                                    l7390 0015                                      l7382 000C  
                                    l7374 0000                                      l7470 0007  
                                    l7462 0014                                      l7454 0006  
                                    l7534 001E                                      l7526 000A  
                                    l7198 0028                                      l8510 0098  
                                    l7294 0061                                      l7550 0028  
                                    l7542 0011                                      l7710 0005  
                                    l7630 004E                                      l7622 0029  
                                    l7614 000D                                      l7358 0002  
                                    l7518 001B                                      l7606 0012  
                                    l8190 00A5                                      l8182 0084  
                                    l8174 0076                                      l8166 0051  
                                    l8158 004B                                      l7800 0011  
                                    l7448 0014                                      l7368 0003  
                                    l7392 0017                                      l7384 000E  
                                    l7376 0006                                      l7480 001B  
                                    l7472 0009                                      l7464 0000  
                                    l7456 0009                                      l7720 0000  
                                    l7528 0012                                      l8512 0121  
                                    l7296 0073                                      l7288 0000  
                                    l7552 002D                                      l7544 0016  
                                    l7536 0000                                      l7712 0006  
                                    l7640 0075                                      l7624 0030  
                                    l7616 0014                                      l7608 0002  
                                    l7560 0002                                      l8192 00AC  
                                    l8184 0086                                      l8176 0078  
                                    l8168 0059                                      l7394 0019  
                                    l7386 0010                                      l7378 0008  
                                    l7490 0009                                      l7482 0000  
                                    l7474 0010                                      l7466 0003  
                                    l7458 000B                                      l7730 000F  
                                    l7722 0003                                      l8514 014D  
                                    l7298 0083                                      l7554 0030  
                                    l7546 001B                                      l7538 0005  
                                    l8506 0049                                      l7714 0008  
                                    l7650 009A                                      l7642 0086  
                                    l7634 0058                                      l7626 0038  
                                    l7618 001F                                      l7570 0014  
                                    l7562 0005                                      l7810 0024  
                                    l8194 00AD                                      l8186 008C  
                                    l8178 0080                                      l7804 0000  
                                    l7396 0025                                      l7388 0013  
                                    l7492 0011                                      l7484 0005  
                                    l7476 0012                                      l7468 0005  
                                    l7732 0012                                      l7724 0006  
                                    l8508 001B                                      l7548 0020  
                                    l7556 0033                                      l7708 0000  
                                    l7652 009E                                      l7644 008A  
                                    l7636 006B                                      l7628 0043  
                                    l7660 000D                                      l7740 0002  
                                    l7572 001F                                      l7580 002D  
                                    l7820 005F                                      l7812 0028  
                                    l8196 00B4                                      l8188 0097  
                                    l7494 0002                                      l7398 0027  
                                    l7486 0006                                      l7478 0013  
                                    l7734 0015                                      l7726 0009  
                                    l6950 0007                                      l7558 0037  
                                    l7910 003C                                      l7902 0010  
                                    l7670 0015                                      l7646 008F  
                                    l7654 0000                                      l7750 0022  
                                    l7742 0006                                      l7590 0000  
                                    l7582 0038                                      l7574 002B  
                                    l7830 00A9                                      l7822 0063  
                                    l7814 0037                                      l7806 0000  
                                    l8198 00B5                                      l7496 0005  
                                    l7488 0008                                      l7736 0018  
                                    l7728 000C                                      l6944 0000  
                                    l7920 0012                                      l6960 0000  
                                    l6952 0010                                      l7912 0040  
                                    l7904 0019                                      l7664 0000  
                                    l7648 0096                                      l7656 0001  
                                    l7760 003F                                      l7752 0024  
                                    l7744 0007                                      l7592 000B  
                                    l7584 0048                                      l7568 000A  
                                    l7840 00E4                                      l7832 00BE  
                                    l7824 0072                                      l7816 003B  
                                    l7808 0015                                      l7498 0006  
                                    l7738 001B                                      l7922 001D  
                                    l7930 002D                                      l7914 0002  
                                    l6962 0002                                      l6954 0015  
                                    l6946 0000                                      l7906 001D  
                                    l7666 0008                                      l7658 0005  
                                    l7762 0045                                      l7754 002E  
                                    l7746 0015                                      l7594 001D  
                                    l7850 0122                                      l7842 00F9  
                                    l7834 00CD                                      l7826 0079  
                                    l7818 0050                                      l7932 0033  
                                    l7924 0022                                      l7916 0007  
                                    l6980 0051                                      l6964 0011  
                                    l6972 0037                                      l6956 001B  
                                    l6948 0003                                      l7940 0007  
                                    l7908 0034                                      l7860 0002  
                                    l7668 000F                                      l7756 0035  
                                    l7764 004C                                      l7748 001C  
                                    l7780 007A                                      l7772 0000  
                                    l7852 0138                                      l7844 0108  
                                    l7836 00D1                                      l7828 008F  
                                    l7934 0039                                      l7926 0024  
                                    l7918 000D                                      l6982 0056  
                                    l6974 004F                                      l6966 002E  
                                    l6990 002C                                      l7950 0021  
                                    l7942 000B                                      l7870 0027  
                                    l7862 0008                                      l7766 004F  
                                    l7758 0039                                      l7598 0000  
                                    l7790 00B6                                      l7782 0086  
                                    l7774 000D                                      l7854 014D  
                                    l7846 010C                                      l7838 00E0  
                                    l7928 0027                                      l6968 0033  
                                    l7960 003B                                      l7952 0029  
                                    l7944 0013                                      l7936 0000  
                                    l7864 000D                                      l7872 0032  
                                    l7768 0057                                      l7792 00C2  
                                    l7784 0092                                      l7776 001F  
                                    l7880 0002                                      l7848 011B  
                                    l7794 0000                                      l6994 0033  
                                    l6986 0000                                      l7970 0064  
                                    l7962 003F                                      l7954 002F  
                                    l7946 0019                                      l7938 0003  
                                    l7866 001A                                      l7858 0002  
                                    l7786 009E                                      l7778 0077  
                                    l7890 0026                                      l7882 0004  
                                    l7796 0005                                      l6996 004B  
                                    l6988 000F                                      l7980 0079  
                                    l7972 0069                                      l7956 0033  
                                    l7948 001C                                      l7892 0002  
                                    l7876 0034                                      l7868 0020  
                                    l7788 00AA                                      l7884 0013  
                                    l7798 0009                                      l7974 006C  
                                    l7958 0037                                      l7966 0044  
                                    l7894 000A                                      l7886 001B  
                                    l7990 0004                                      l7968 005C  
                                    l7976 006F                                      l7896 000F  
                                    l7888 001D                                      l7992 0008  
                                    l7978 0073                                      l7994 000C  
                                    l7986 0000                                      l7996 000E  
                                    l7988 0002                                      l7998 001A  
                                    STR_1 0000                                      _LATA 0016  
                                    _LATB 0017                           __end_of_INT_ISR 0006  
                                    _LATC 0018                                      _LATD 0019  
                                    _LATE 001A                                      u5000 0028  
                 __size_of_selectSubfield 004E                                      u5001 0027  
                                    u5010 0057                                      _T2PR 028D  
                                    u5011 0056                                      u5020 0074  
                                    u5100 0022                                      u5021 0073  
                                    u5101 0021                                      u5030 00A4  
                                    u5110 003F                                      u5031 00A3  
                                    u5111 003E                                      u4400 002C  
                                    u4320 0007                                      u5040 000D  
                                    u5120 0045                                      u5200 0037  
                                    u4401 002B                                      u4321 0006  
                                    u5041 000C                                      u5121 0044  
                                    u5201 0036                                      u4410 004B  
                                    u5050 0008                                      u5130 004B  
                                    u5210 004A                                      u4315 0011  
                                    u4411 004A                                      u5051 0007  
                                    u5131 004A                                      u5211 0049  
                                    u4420 000C                                      u5060 000F  
                                    u5140 000D                                      u5300 00B8  
                                    u5220 0050                                      u4405 0028  
                                    u4421 000B                                      u5061 000E  
                                    u5141 000C                                      u5301 00B7  
                                    u5221 004F                                      u4350 001B  
                                    u4510 0041                                      u5070 0015  
                                    u5150 001F                                      u5310 00BE  
                                    u5230 005F                                      u6007 0032  
                                    u4415 0047                                      u4351 001A  
                                    u4335 000C                                      u4511 0040  
                                    u5071 0014                                      u5151 001E  
                                    u5311 00BD                                      u5231 005E  
                                    u5160 0011                                      u4360 0011  
                                    u4600 0045                                      u5400 0147  
                                    u5320 00CD                                      u5240 0072  
                                    u5161 0010                                      u6017 003D  
                                    u4361 0010                                      u4345 0011  
                                    u4601 0044                                      u4505 0033  
                                    u5401 0146                                      u5321 00CC  
                                    u5241 0071                                      u4370 002E  
                                    u4610 0052                                      u4530 0051  
                                    u4450 0006                                      u5090 0005  
                                    u5410 014D                                      u5330 00E0  
                                    u5250 0088                                      u5170 000F  
                                    u6027 0048                                      u4371 002D  
                                    u4435 0010                                      u4611 0051  
                                    u4531 0050                                      u4515 003D  
                                    u4451 0005                                      u5091 0004  
                                    u5411 014C                                      u5331 00DF  
                                    u5251 0087                                      u5171 000E  
                                    u5500 0022                                      u4700 002C  
                                    u4380 004F                                      u4540 0056  
                                    u4460 0011                                      u4620 0017  
                                    u5420 0008                                      u5340 00F3  
                                    u5260 008F                                      u5180 0015  
                                    _PMD0 0796                                      u5501 0021  
                                    u6037 0053                                      u4701 002B  
                                    u4381 004E                                      u4445 001F  
                                    u4541 0055                                      u4525 0047  
                                    u4461 0010                                      u4621 0016  
                                    u5421 0007                                      u5341 00F2  
                                    u5261 008E                                      u5181 0014  
                                    _PMD1 0797                                      u5510 0033  
                                    u4710 0036                                      u4390 000F  
                                    u4550 0015                                      u4470 0022  
                                    u4630 0017                                      u5430 000D  
                                    u5350 00F9                                      u5270 009E  
                                    u5190 0024                                      _PMD2 0798  
                                    u5511 0032                                      u6047 000E  
                                    u4711 0035                                      u4375 002A  
                                    u4391 000E                                      u4551 0014  
                                    u4471 0021                                      u4631 0016  
                                    u5431 000C                                      u5351 00F8  
                                    u5271 009D                                      u5191 0023  
                                    _PMD3 0799                                      u4640 0007  
                                    u4560 0020                                      u5520 0013  
                                    u5440 0020                                      u4800 0029  
                                    u5360 0108                                      u5280 00A4  
                                    _PMD4 079A                                      u6057 0018  
                                    u4641 0006                                      u4385 004B  
                                    u4561 001F                                      u5521 0012  
                                    u5441 001F                                      u4801 0028  
                                    u5361 0107                                      u5281 00A3  
                                    _PMD5 079B                                      u4730 0045  
                                    u4650 0014                                      u4570 0028  
                                    u4490 0032                                      u4810 0009  
                                    u5530 0019                                      u5450 000A  
                                    u5370 011B                                      u5290 00A9  
                                    u6067 0006                                      u4731 0044  
                                    u4715 0032                                      u4651 0013  
                                    u4571 0027                                      u4491 0031  
                                    u4811 0008                                      u5531 0018  
                                    u5451 0009                                      u5371 011A  
                                    u5291 00A8                                      u4740 004A  
                                    u4660 0006                                      u4580 0033  
                                    u4820 0011                                      u5540 0021  
                                    u5460 0019                                      u4900 002B  
                                    u5380 0131                                      u4741 0049  
                                    u4725 003B                                      u4661 0005  
                                    u4581 0032                                      u4485 0026  
                                    u4821 0010                                      u5541 0020  
                                    u5461 0018                                      u4901 002A  
                                    u5381 0130                                      u4670 0011  
                                    u4590 003D                                      u4830 0020  
                                    u5550 0029                                      u4750 001C  
                                    u5470 0046                                      u4910 0038  
                                    u5390 0138                                      u4671 0010  
                                    u4591 003C                                      u4831 001F  
                                    u5551 0028                                      u4751 001B  
                                    u5471 0045                                      u4911 0037  
                                    u5391 0137                                      u5480 0007  
                                    u4680 001C                                      u4840 0028  
                                    u5560 005C                                      u4760 001E  
                                    u4920 0043                                      u5800 0135  
                                    i1l73 000C                                      u5481 0006  
                                    u4681 001B                                      u4841 0027  
                                    u5561 005B                                      u4761 001D  
                                    u4921 0042                                      u5801 0133  
                                    u5490 000D                                      u4850 004D  
                                    u5570 0064                                      u4770 000A  
                                    u4930 0048                                      u5810 0136  
                                    u5491 000C                                      u4851 004C  
                                    u5571 0063                                      u4771 0009  
                                    u4931 0047                                      u5580 0079  
                                    u4780 0012                                      u4940 0057  
                                    u4860 0009                                      u5820 0148  
                                    u5581 0078                                      u4781 0011  
                                    u4941 0056                                      u4861 0008  
                                    u5821 0147                                      u5805 0130  
                                    u4790 001B                                      u4950 000B  
                                    u4870 0014                                      u5830 0177  
                                    u5750 0059                                      u4695 0020  
                                    u4855 0049                                      u4791 001A  
                                    u4951 000A                                      u4871 0013  
                                    u5831 0176                                      u5751 0058  
                                    u4960 0016                                      u4880 001F  
                                    u5840 0187                                      u5760 0080  
                                    u4961 0015                                      u4881 001E  
                                    u5841 0186                                      u5761 007F  
                                    u4970 001D                                      u4890 0026  
                                    u5770 008C                                      u4971 001C  
                                    u4891 0025                                      u5771 008B  
                                    u4980 001B                                      u5780 00CD  
                                    u4981 001A                                      u5781 00CC  
                                    u4990 000C                                      u5790 00EB  
                    ?_do_I2C_SEND_RESTART 0000                                      u4991 000B  
                                    u5791 00EA                                      u5937 016B  
                                    u5947 0002                                      u5795 00E7  
                                    u5957 0070                                      u5967 0034  
                                    u5977 0006                                      u5987 0011  
                                    u5997 0022                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                   ??_wr2RegCompleteHandler 000A  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0005                                      _alaf 0004  
                                    _clkh 000F                 ?_do_I2C_SEND_RESTART_READ 0000  
                                    _clkm 000E                                      _main 0000  
                                    _tala 0006                 __size_of_do_I2C_SEND_STOP 0005  
                  __size_of_do_I2C_DO_ACK 0005                                      _nreg 0008  
                         _TMR0_StartTimer 0000                increment_subfield@init_val 0012  
                                    _temp 0005                                      _pmon 0007  
                      _increment_subfield 0000                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000       __end_of_INT_DefaultInterruptHandler 0001  
             _INT_DefaultInterruptHandler 0000                     ?_do_I2C_SEND_ADR_READ 0000  
         ??_i2c1_driver_clearBusCollision 0000                                      start 0000* 
                 __size_of_dump_UART_FIFO 0019                          __end_of_ADC_read 001A  
         __end_of_INT_SetInterruptHandler 0009                             _i2c_setBuffer 0000  
              ??_TMR1_SetInterruptHandler 0005                             __CFG_CSWEN$ON 0000  
                       ___bmul@multiplier 0006                             __CFG_MCLRE$ON 0000  
                increment_subfield@_value 0017                           __end_of_i2c_ISR 002D  
                         __end_of_ReadI2C 001F                       ?_increment_subfield 0012  
        __size_of_rdBlkRegCompleteHandler 0018                  ??_do_I2C_DO_NACK_RESTART 0000  
               config_routine@select_mode 0026                 __size_of_DATAEE_WriteByte 0024  
                 __end_of_TMR0_Initialize 0015                              _do_I2C_RESET 0000  
          ??_TMR0_DefaultInterruptHandler 0000                             ?_EUSART_Write 0000  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 0009  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                  __end_of_i2c1_driver_open 000C  
                                   ?_main 0000                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                           __end_of___awdiv 0060  
                __end_of_i2c1_driver_stop 0003                                     _ADPRE 009C  
                           __CFG_WDTE$OFF 0000                           __end_of___awmod 0054  
                                   _ADRPT 010D                                     _T1CLK 0211  
                         ___awdiv@divisor 0003                                     _T1CON 020E  
                                   _T2CON 028E                                     _T2HLT 028F  
              __end_of_i2c1_driver_TXData 0005                            __CFG_DEBUG$OFF 0000  
                                   i1l103 000F                                     i1l200 0032  
                                   i1l210 002C                                     i1l131 0004  
                                   i1l140 0004                                     _T2TMR 028C  
                                   i1l125 0007                                     i1l213 0003  
                                   i1l134 0004                                     i1l303 0017  
                                   i1l143 0008                                     i1l224 0025  
                                   i1l216 0001                                     i1l128 0004  
                                   i1l152 0004                                     i1l400 0067  
                                   i1l137 0004                                     i1l146 0007  
                                   _T2RST 0291                                     i1l219 0001  
                                   i1l243 0010                                     i1l155 0004  
                                   i1l164 002B                                     i1l172 0053  
                                   i1l501 0002                                     i1l149 0006  
                                   i1l334 0005                                     i1l158 0004  
                                   i1l344 0000                                     i1l264 0010  
                                   i1l169 0037                                     i1l185 001D  
                                   i1l338 000C                                     i1l530 0002  
                                   i1l186 0049                                     i1l291 0010  
                                   i1l524 0000                                     i1l533 0002  
                                   i1l542 0002                                     i1l382 000F  
                                   i1l279 0010                                     i1l551 0004  
                                   i1l391 0040                                     i1l560 0003  
                                   i1l536 0007                                     i1l384 001B  
                                   i1l393 004F                                     i1l394 0067  
                                   i1l539 0002                                     i1l395 005B  
                                   i1l387 0028                                     i1l900 0000  
                                   i1l557 0003                                     i1l389 0031  
                                   i1l498 0002                                     i1l594 0002  
                                   i1l881 0002                                     i1l945 0010  
                                   i1l964 0000                                     i1l894 000E  
                                   i1l958 0016                                     i1l978 0015  
                         ___awdiv@counter 0008                                     _OSCEN 0891  
                         __end_of_all_LED 005B                                     _TMR0H 001D  
                                   _TMR1H 020D                                     _TMR0L 001C  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
                                   _RXPPS 0ECB         __size_of_TMR0_SetInterruptHandler 0009  
                         _PWM6_Initialize 0000                 ?_TMR0_SetInterruptHandler 0003  
                 ??_ADCC_IsConversionDone 0003                          __end_of_TMR0_ISR 000F  
                        __end_of_TMR1_ISR 0017                          __end_of_TMR2_ISR 000F  
                         __end_of_sw1_EXT 0025                           __end_of_cksum_w 0010  
                    ??_increment_subfield 0014                           _DATAEE_ReadByte 0000  
                                   _alarm 0006                                     _clkms 0000  
              __end_of_i2c1_driver_isNACK 0008                                     _cksum 0000  
                   ?_ADCC_StartConversion 0000                           representLed@aux 0011  
                         representLed@val 0010                ?_do_I2C_SEND_RESTART_WRITE 0000  
                                   _value 0029                         ?_checkDebounceSW1 0000  
                       ?_checkDebounceSW2 0000                     ??_do_I2C_SEND_RESTART 0000  
                                   _tsttc 0000                   __end_of_TMR1_Initialize 001F  
                                   pclath 000A                   __size_of_mssp1_clearIRQ 0003  
                      ??_checkDebounceSW1 0003                        ??_checkDebounceSW2 0003  
                  ?_do_I2C_SEND_ADR_WRITE 0000                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 0000  
                          ?_i2c_setBuffer 0000                              ?_setCallBack 0000  
                    _save_recovery_params 0000                         ??_getSubfieldInfo 0018  
                           _fsmStateTable 0000                           __initialization 0000  
                              _i2c_status 0000                              __end_of_main 018D  
                       ??_limitHoursUnits 000C                            ??_EUSART_Write 0000  
                 __end_of_TMR2_Initialize 0018               ?_INTERRUPT_InterruptManager 0000  
                            ?_recoverData 0000                             setCallBack@cb 0000  
                           _do_I2C_DO_ACK 0000                  _TMR2_SetInterruptHandler 0000  
                                  ??_main 0028                         ?_i2c_restartWrite 0009  
           __size_of_i2c1_driver_sendNACK 0004           getSubfieldInfo@temp_thresh_tens 001F  
                               ??_LED_bin 0005                        ??_i2c_restartWrite 000A  
               __size_of_handler_clock_ms 000C                       read_str_UART@rxData 0012  
           __size_of_i2c1_driver_resetBus 0001                                 ??_INT_ISR 0008  
                 ?_do_I2C_DO_ADDRESS_NACK 0000                            _convertedValue 001F  
                                  _ADACCH 0091                                    _ADACCL 0090  
                 __end_of_TMR0_StartTimer 0003               __size_ofi1_checkDebounceSW1 005A  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  ?_cksum 0000                                    _ADERRH 0117  
                                  _ADERRL 0116              __end_of_limitTempThreshUnits 001B  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                        ___awdiv@dividend 0005                                    _ADUTHL 0110  
                        __end_of_WriteI2C 005A                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                      __CFG_RSTOSC$HFINT1 0000                                    _T0CON0 001E  
                                  _T0CON1 001F                                    _T1GATE 0210  
                                  _T1GCON 020F                                    ?_tsttc 0000  
                                  _RA6PPS 0F16                                    _RC3PPS 0F23  
                                  i1l1100 000E                                    i1l1106 0000  
                 TMR1_WriteTimer@timerVal 0000                                    _RC4PPS 0F24  
                                  i1l1302 0013                                    i1l1303 0018  
                                  i1l1433 000B                                    _ODCONA 0F3A  
                                  _ODCONB 0F45                                    _ODCONC 0F50  
                                  _RC6PPS 0F26                                    _ODCOND 0F5B  
                                  i1l1429 0033                                    _ODCONE 0F66  
                                  i1l1438 0059                                    i1l1299 0024  
                                  i1l5200 0000                                    i1l5130 0000  
                                  i1l5202 0003                                    i1l5140 0033  
                                  i1l5132 0000                                    i1l5300 0008  
                                  i1l5212 0000                                    i1l5220 0000  
                                  i1l5134 0002                                    i1l5310 0020  
                                  i1l5302 000E                                    i1l5222 0000  
                                  i1l5230 0000                                    i1l5206 0000  
                                  i1l5152 0051                                    i1l5136 0011  
                                  i1l5144 0037                                    i1l5304 000F  
                                  i1l5232 0008                                    i1l5240 0008  
                                  i1l5216 0000                                    i1l5208 0003  
                                  i1l5154 0056                                    i1l5146 004F  
                                  i1l5138 002E                                    i1l5306 0015  
                                  i1l5226 0000                                    i1l5234 000F  
                                  i1l5242 000F                                    i1l5250 000F  
                                  i1l5170 0000                                    i1l6050 0003  
                                  i1l5308 001B                                    i1l6060 0000  
                                  i1l5172 0003                                    i1l5500 0003  
                                  i1l6052 0008                                    i1l6062 0002  
                                  i1l6070 0000                                    i1l5254 0000  
                                  i1l5158 0000                                    i1l5238 0000  
                                  i1l5246 0000                                    i1l5262 0000  
                                  i1l5182 0000                                    i1l5190 0003  
                                  i1l6054 000F                                    i1l5272 0000  
                                  i1l6064 0000                                    i1l6072 0002  
                                  i1l6080 0002                                    i1l5256 0008  
                                  i1l5248 0008                                    i1l5264 0016  
                                  i1l5600 000A                                    i1l5176 0000  
                                  i1l5184 0003                                    i1l5512 000B  
                                  i1l5504 0000                                    i1l6056 0015  
                                  i1l6048 0000                                    i1l6066 0002  
                                  i1l6074 000A                                    i1l6082 0009  
                                  i1l5258 000F                                    i1l5194 0001  
                                  i1l5610 0010                                    i1l5178 0003  
                                  i1l5506 0002                                    i1l5530 0008  
                                  i1l5434 0000                                    i1l6058 0000  
                                  i1l5620 0000                                    i1l6068 0009  
                                  i1l6076 0011                                    i1l5196 0000  
                                  i1l5604 000C                                    i1l5460 0005  
                                  i1l5188 0000                                    i1l5508 0007  
                                  i1l5622 0007                                    i1l6078 0000  
                                  i1l5198 0000                                    i1l5462 0006  
                                  i1l5470 0003                                    i1l5518 000F  
                                  i1l5550 0050                                    i1l5534 000C  
                                  i1l5526 0000                                    i1l6510 0013  
                                  i1l5456 0000                                    i1l5552 0052  
                                  i1l5544 0014                                    i1l5560 0000  
                                  i1l6520 002C                                    i1l6512 0017  
                                  i1l6504 0002                                    i1l5298 0000  
                                  i1l5458 0003                                    i1l5466 0000  
                                  i1l5474 0000                                    i1l5482 0000  
                                  i1l5490 0000                                    i1l5546 0039  
                                  i1l5538 0010                                    i1l5562 000A  
                                  i1l5618 0000                                    i1l6530 0048  
                                  i1l6514 001F                                    i1l6506 0007  
                                  i1l5468 0002                                    i1l5476 0002  
                                  i1l5484 0002                                    i1l5492 0002  
                                  i1l5548 0045                                    i1l5564 000E  
                                  i1l6532 0053                                    i1l6524 0035  
                                  i1l6516 0023                                    i1l6508 000B  
                                  i1l4854 0001                                    i1l5478 0007  
                                  i1l5486 0006                                    i1l5494 0005  
                                  i1l5574 001F                                    i1l5566 0018  
                                  i1l6534 0057                                    i1l6526 0039  
                                  i1l5840 0000                                    i1l4856 0007  
                                  i1l5592 0000                                    i1l5584 0027  
                                  i1l5568 001B                                    i1l6536 005F  
                                  i1l6528 0044                                    i1l5770 0005  
                                  i1l5850 001F                                    i1l5842 0006  
                                  i1l4970 0000                                    i1l4858 0018  
                                  i1l4962 0000                                    i1l5594 0003  
                                  i1l5498 0000                                    i1l5578 0023  
                                  i1l6538 0063                                    i1l5780 000E  
                                  i1l5772 0006                                    i1l5852 0027  
                                  i1l5844 0011                                    i1l5860 0000  
                                  i1l4972 0000                                    i1l4964 0001  
                                  i1l5782 0000                                    i1l5774 0008  
                                  i1l5854 0028                                    i1l5846 0015  
                                  i1l5862 0004                                    i1l4966 0006  
                                  i1l4974 0000                                    i1l5598 0007  
                                  i1l5784 0007                                    i1l5776 000A  
                                  i1l5768 0000                                    i1l5856 002E  
                                  i1l5848 0019                                    i1l5864 000A  
                                  i1l4968 000E                                    i1l8520 0023  
                                  i1l5786 000E                                    i1l5778 000C  
                                  i1l5858 0032                                    i1l8522 0024  
                                  i1l5788 0016                                    i1l8516 003B  
                                  i1l8518 0029                                    u224_20 0007  
                                  u400_20 001F                                    u224_21 0006  
                                  u400_21 001E                                    _INLVLA 0F3C  
                                  _INLVLB 0F47                                    _INLVLC 0F52  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  u401_20 0023                                    u401_21 0022  
                                  u410_20 0057                                    u402_20 0027  
                                  u410_21 0056                                    u402_21 0026  
                                  u411_20 005F                                    u403_20 002C  
                                  u411_21 005E                                    u403_21 002B  
                                  u244_20 0006                                    u324_20 0008  
                                  u412_20 0063                                    u404_20 0030  
                                  u244_21 0005                                    u324_21 0007  
                                  u412_21 0062                                    u404_21 002F  
                                  u325_20 000F                                    u405_20 0035  
                                  u325_21 000E                                    u405_21 0034  
                                  u326_20 0009                                    u406_20 0039  
                                  u326_21 0008                                    u406_21 0038  
                                  u271_20 0008                                    u327_20 0011  
                                  u407_20 0044                                    u271_21 0007  
                                  u327_21 0010                                    u407_21 0043  
                                  u272_20 000E                                    u328_20 0009  
                                  u280_20 0007                                    u408_20 0048  
                                  u272_21 000D                                    u328_21 0008  
                                  u280_21 0006                                    u408_21 0047  
                                  _INTPPS 0E90                                    u273_20 0020  
                                  u281_20 0050                                    u409_20 0053  
                                  u273_21 001F                                    u281_21 004F  
                                  u409_21 0052                                    u265_25 000F  
                                  u266_20 0011                                    u282_20 0018  
                                  u266_21 0010                                    u282_21 0017  
                                  u267_20 002E                                    u283_20 0007  
                                  u267_21 002D                                    u283_21 0006  
                                  u267_25 002A                                    u268_20 004F  
                                  u284_20 0005                                    u268_21 004E  
                                  u284_21 0004                                    u268_25 004B  
                                  u285_20 0007                                    u293_20 0006  
                                  u285_21 0006                                    u293_21 0005  
                                  u294_20 000F                                    u294_21 000C  
                                  u295_24 0011                                    u296_20 001F  
                                  u296_21 001E                                    u297_20 002E  
                                  u297_21 002D                                    u298_20 000A  
                                  u298_21 0009                                    u396_20 0007  
                                  u396_21 0006                                    _OSCFRQ 0893  
                                  _ISR_3s 0000                                    u397_20 000B  
                                  u397_21 000A                                    u398_20 0013  
                                  u398_21 0012                                    u399_20 0017  
                                  u399_21 0016                    ??_do_I2C_SEND_ADR_READ 0000  
                rdBlkRegCompleteHandler@p 0009                                 ??_i2c_ISR 0000  
                               ??_ReadI2C 0003                          ??_write_str_UART 0007  
              ??_ADCC_GetConversionResult 0005                     ?_save_recovery_params 0000  
                            ?_ring_buffer 0003                            __CFG_PWRTE$OFF 0000  
            __end_ofi1_PWM6_LoadDutyValue 0016                     _i2c1_driver_getRXData 0000  
                        __end_of_mod1_LED 000B                          __end_of_mod2_LED 000A  
                        __end_of_mod3_LED 000B                          __end_of_mod4_LED 000B  
    __end_of_TMR1_DefaultInterruptHandler 0001     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0000                              _CCPTMRS1bits 021F  
                                  ___bmul 0000               __end_of_do_I2C_DO_NACK_STOP 0005  
     __end_of_i2c_setDataCompleteCallback 000D               _i2c_setDataCompleteCallback 0000  
                                  ___wmul 0000                                 ??___awdiv 0007  
   __end_of_i2c1_driver_clearBusCollision 0003    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 0000                            __CFG_STVREN$ON 0000  
                               ??___awmod 0007           __size_of_do_I2C_DO_NACK_RESTART 0005  
                                  _last1m 0009                                    _last5s 000A  
                               ??_all_LED 000D                          _check_thresholds 0000  
                        __end_of_mode_LED 002A                          ?_TMR0_Initialize 0000  
                                  _memset 0000                   __end_of_PWM6_Initialize 000D  
                        ___awdiv@quotient 000A                     ring_buffer@_ring_byte 0009  
                          ?_do_I2C_DO_ACK 0000                           ___awmod@divisor 0003  
                         ___awmod@counter 0008                                    cksum@i 0007  
                                  _str_rc 002F                             ?_INT_CallBack 0000  
                 __end_of_DATAEE_ReadByte 000F                                 ??_sw1_EXT 0007  
                               ??_cksum_w 000D                           _ADCC_Initialize 0000  
             __end_of_i2c1_driver_sendACK 0004                            _PMD_Initialize 0000  
          __end_of_do_I2C_DO_ADDRESS_NACK 002C               __end_of_i2c1_driver_restart 0003  
                            ?_returnReset 0009                                 ?_ADC_read 0005  
                  ??_ADCC_StartConversion 0003               __end_of_i2c1_driver_startRX 0003  
        __size_of_INT_SetInterruptHandler 0009  TMR2_SetInterruptHandler@InterruptHandler 0003  
TMR1_SetInterruptHandler@InterruptHandler 0003  TMR0_SetInterruptHandler@InterruptHandler 0003  
 INT_SetInterruptHandler@InterruptHandler 0003                   __end_of_TMR1_WriteTimer 0011  
                          _selectSubfield 0000                          ??_config_routine 0025  
                        ?_TMR1_Initialize 0000                         _SYSTEM_Initialize 0000  
                 __end_of__initialization 0029                           ??_i2c_setBuffer 0002  
                        _do_I2C_SEND_STOP 0000                        __size_of_do_I2C_RX 004A  
                      __size_of_do_I2C_TX 0054                        ?_SYSTEM_Initialize 0000  
                          _dump_UART_FIFO 0000                  __size_of_mode_select_LED 0020  
                __size_of_do_I2C_TX_EMPTY 0033                  save_recovery_params@aux1 0010  
                     ___bmul@multiplicand 0003                   _rdBlkRegCompleteHandler 0000  
                  __size_of_read_str_UART 0063                            __pcstackCOMMON 0000  
                            __pidataBANK0 0000                              __pidataBANK2 0000  
                     ??_SYSTEM_Initialize 0005                                 ?_TMR0_ISR 0000  
                               ?_TMR1_ISR 0000                                 ?_TMR2_ISR 0000  
           ?_TMR1_DefaultInterruptHandler 0000                             __end_of_cksum 0020  
                        _DATAEE_WriteByte 0000                        ring_buffer@clock_h 0003  
                      ring_buffer@clock_m 0004                        ring_buffer@clock_s 0005  
                           __end_of_tsttc 0150                          ?_TMR2_Initialize 0000  
                   getSubfieldInfo@h_tens 001B                              LED_bin@value 0003  
                          ??_INT_CallBack 0008                    __end_of_PMD_Initialize 0008  
                   getSubfieldInfo@m_tens 001D               __size_of_EXT_INT_Initialize 000E  
                              ??_ADC_read 0007                    __end_of_selectSubfield 004E  
             ADCC_StartConversion@channel 0003                            setCallBack@idx 0004  
                                 ??_cksum 0005                          ?_TMR0_StartTimer 0000  
                  _do_I2C_DO_NACK_RESTART 0000                 __end_of_SYSTEM_Initialize 001F  
                                 ??_tsttc 0005                            _mssp1_clearIRQ 0000  
                              __pbssBANK0 0000                                __pbssBANK1 0000  
        getSubfieldInfo@temp_thresh_units 0020            __size_of_rd2RegCompleteHandler 0011  
                  __end_of_dump_UART_FIFO 0019                                   ?_ISR_3s 0000  
           __end_of_rd2RegCompleteHandler 0011                        read_ring@nreg_init 0008  
                      __size_of_read_UART 0011                    ??_save_recovery_params 000E  
          __size_of_wr2RegCompleteHandler 0011             __end_of_wr2RegCompleteHandler 0011  
                    read_str_UART@max_len 000D                     _rd1RegCompleteHandler 0000  
                  ?_i2c1_driver_getRXData 0000                        __size_of_read_ring 003F  
                   _wr1RegCompleteHandler 0000              __size_of_i2c_busCollisionISR 0004  
                              __pmaintext 0000                             ??_do_I2C_IDLE 0000  
                    __size_of_setCallBack 0026                             ??_do_I2C_RCEN 0000  
                                 ?___bmul 0003          __end_of_TMR0_SetInterruptHandler 0009  
                 __size_of_TMR0_StopTimer 0003                                   ?___wmul 0003  
                              ??_TMR0_ISR 0005                                ??_TMR1_ISR 0002  
                         __CFG_PPS1WAY$ON 0000                                ??_TMR2_ISR 0001  
                 __end_of_ADCC_Initialize 0016                __end_of_PWM6_LoadDutyValue 0019  
                         ??_do_I2C_DO_ACK 0000                                __pintentry 0000  
                    _limitTempThreshUnits 0000                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                                   ?_memset 0003  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0000                          ?_PWM6_Initialize 0000  
                     i2c_setBuffer@buffer 0003                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                           ?_PMD_Initialize 0000  
          ?_i2c1_driver_clearBusCollision 0000                          ?_DATAEE_ReadByte 0003  
                       ?_i2c1_driver_open 0000                         __end_of_do_I2C_RX 004A  
                       __end_of_do_I2C_TX 0054                         ?_i2c1_driver_stop 0000  
           i1PWM6_LoadDutyValue@dutyValue 0000                      __size_of_recoverData 00C6  
                                 _LED_bin 0000                          _handler_clock_ms 0000  
                      ??_i2c1_driver_open 0003                                   _INT_ISR 0000  
                      ??_i2c1_driver_stop 0000                                   _OSCCON1 088D  
                                 _OSCCON3 088F                             ?_mssp1_setIRQ 0000  
                    i1_PWM6_LoadDutyValue 0000                             _read_str_UART 0000  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                    selectSubfield@subfield 0023  
                                 _NVMCON2 081F                           ?_selectSubfield 0000  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                  __end_of_mssp1_clearIRQ 0003                                   _SSP1MSK 018E  
          __size_of_ADCC_IsConversionDone 0007                                 ?_mod1_LED 0000  
                               ?_mod2_LED 0000                                 ?_mod3_LED 0000  
                               ?_mod4_LED 0000             __end_of_ADCC_IsConversionDone 0007  
                 ??_do_I2C_SEND_ADR_WRITE 0001                        __size_of_push_ring 0047  
                         _getSubfieldInfo 0000                          ?_TMR1_WriteTimer 0000  
             ??_do_I2C_SEND_RESTART_WRITE 0000                        _i2c1_driver_TXData 0000  
                         ?_dump_UART_FIFO 0000                      DATAEE_WriteByte@bAdd 0009  
                      _i2c1_driver_i2cISR 002B                                 ?_mode_LED 0000  
                         __size_of_ISR_3s 0019                                   _i2c_ISR 0000  
                         _limitHoursUnits 0000                 ??_rdBlkRegCompleteHandler 000A  
                                 _ReadI2C 0000                            ring_buffer@lum 0007  
                          ring_buffer@tem 0006                        _i2c1_driver_isNACK 0000  
                     ?_i2c1_driver_TXData 0000                ??_TMR2_SetInterruptHandler 0005  
                   __end_of_num_subfields 0005                      __size_of_ring_buffer 002F  
                    __CFG_SCANE$available 0000                 __size_of_checkDebounceSW1 005A  
               __size_of_checkDebounceSW2 004D                           __size_of___bmul 0016  
                                 ___awdiv 0000                                   ___awmod 0000  
                   ?_limitTempThreshUnits 0000                             ?_representLed 0000  
                         __size_of___wmul 0020                         ??_mode_select_LED 000D  
                       ??_do_I2C_TX_EMPTY 000A                                   _all_LED 0000  
                     ?_i2c1_driver_isNACK 0000                                ??_WriteI2C 0003  
                         __size_of_memset 00A5                                   __ptext1 0000  
                                 __ptext2 0000                                   __ptext3 0000  
                                 __ptext4 0000                                   __ptext5 0000  
                                 __ptext6 0000                                   __ptext7 0000  
                                 __ptext8 0000                                   __ptext9 0000  
                     __end_of_do_I2C_IDLE 0005                       __end_of_do_I2C_RCEN 0007  
                                 _sw1_EXT 0000            ??_TMR1_DefaultInterruptHandler 0000  
                                 _cksum_w 0000                         __end_of_read_UART 0011  
                               _T1CONbits 020E                     _OSCILLATOR_Initialize 0000  
                                 _last_ms 000C                                 _T2CONbits 028E  
             __end_of_do_I2C_SEND_RESTART 0005                            ??_mssp1_setIRQ 0000  
                        ___awmod@dividend 0005                                _duty_cycle 001D  
                             reset_recv@i 000D                            ?_read_str_UART 000D  
       __size_of_TMR1_SetInterruptHandler 0009                     ?i1_PWM6_LoadDutyValue 0000  
                    ??_i2c1_driver_TXData 0000                         __end_of_read_ring 003F  
                ??_PIN_MANAGER_Initialize 0003                 ?_TMR1_SetInterruptHandler 0003  
                               _T2HLTbits 028F                                   _nreg_pt 0010  
                 _INT_SetInterruptHandler 0000                                   _lum_bin 0002  
             __size_of_increment_subfield 0054                           ?_mssp1_clearIRQ 0000  
                              ??_mod1_LED 000D                                ??_mod2_LED 000D  
                              ??_mod3_LED 000D                                ??_mod4_LED 000D  
                                 main@t1m 0003                                   main@t5s 0002  
                _do_I2C_SEND_RESTART_READ 0000                __size_of_SYSTEM_Initialize 001F  
                                 clrloop0 0001                                   _str_snd 0000  
                              _hours_tens 0027                      __size_of_returnReset 0002  
                    end_of_initialization 0029                                 _T2RSTbits 0291  
                    ??_i2c1_driver_isNACK 0000                  __end_of_check_thresholds 003C  
               __size_of_i2c_restartWrite 0002                                   init_ram 0000  
                                 memset@c 0003                                ??_mode_LED 000D  
            __end_of_i2c1_driver_sendNACK 0004                                   memset@k 000A  
                                 memset@n 0005                                   memset@s 000C  
                  ?_rd1RegCompleteHandler 0009                                   initloop 0001  
                    __end_of_INT_CallBack 000D                         _EUSART_Initialize 0000* 
                  ?_wr1RegCompleteHandler 0009              __end_of_i2c1_driver_resetBus 0001  
                              _reset_recv 0000                                _lum_thresh 0004  
                      ?_EUSART_Initialize 0000                             push_ring@nreg 000D  
                        mode_LED@subfield 000F                        _EUSART_is_rx_ready 0000* 
                          ??_representLed 000D                 _do_I2C_SEND_RESTART_WRITE 0000  
                      _EUSART_is_tx_ready 0000*                         ?_ADCC_Initialize 0000  
                       __end_of_push_ring 0047                     __CFG_WDTCPS$WDTCPS_14 0000  
                    write_str_UART@string 0004                       ??_EUSART_Initialize 0000  
                              _returnStop 0000                  _TMR0_SetInterruptHandler 0000  
                               _PORTBbits 000D                       ?_EUSART_is_rx_ready 0000  
                               _PORTCbits 000E           __end_of_rdBlkRegCompleteHandler 0018  
                __end_of_do_I2C_SEND_STOP 0005                      __CFG_WDTCCS$HFINTOSC 0000  
                     ?_EUSART_is_tx_ready 0000                   __end_of_getSubfieldInfo 015C  
              __end_ofi1_checkDebounceSW1 005A                                 _TRISCbits 0013  
    __size_of_i2c_setDataCompleteCallback 000D                   __end_of_limitHoursUnits 001B  
                             returnStop@p 0009                          __CFG_FEXTOSC$OFF 0000  
                       __size_of_ADC_read 001A                  __end_of_DATAEE_WriteByte 0024  
            i2c_setDataCompleteCallback@p 0007                      ??_EUSART_is_rx_ready 0000  
                    ??_EUSART_is_tx_ready 0000                            __end_of_ISR_3s 0019  
           __size_of_do_I2C_SEND_ADR_READ 0009                            _TMR0_StopTimer 0000  
                  ??_limitTempThreshUnits 000C                               _do_I2C_IDLE 0000  
                             _do_I2C_RCEN 0000      __end_of_TMR2_DefaultInterruptHandler 0001  
   __size_of_TMR2_DefaultInterruptHandler 0001              _TMR2_DefaultInterruptHandler 0000  
                              _write_UART 0000                            __end_of___bmul 0016  
                          __end_of___wmul 0020                              _EUSART_Write 0000* 
                       __size_of_TMR0_ISR 000F                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR2_ISR 000F                    ?_OSCILLATOR_Initialize 0000  
                          __end_of_memset 00A5         __size_of_ADCC_GetConversionResult 0009  
               ??_INT_SetInterruptHandler 0005                           ??_read_str_UART 000E  
            __size_of_do_I2C_DO_NACK_STOP 0005                 ?_ADCC_GetConversionResult 0003  
                  ??i1_PWM6_LoadDutyValue 0002                   ?_do_I2C_DO_NACK_RESTART 0000  
                     start_initialization 0000                    getSubfieldInfo@h_units 001C  
                     _i2c_busCollisionISR 0000                  __size_of_TMR0_Initialize 0015  
         __size_of_PIN_MANAGER_Initialize 004D                             ??_EUSART_Read 0000  
                        write_UART@rxData 0003                    getSubfieldInfo@m_units 001E  
                        WriteI2C@data_out 0004             __size_of_ADCC_StartConversion 0008  
                            setCallBack@p 0002              __size_of_i2c1_driver_sendACK 0004  
                 i2c_setBuffer@bufferSize 0000                   ??_i2c1_driver_getRXData 0000  
                  rd1RegCompleteHandler@p 0009                                  ??_ISR_3s 0004  
            __size_of_i2c1_driver_restart 0003              __size_of_i2c1_driver_startRX 0003  
                     DATAEE_ReadByte@bAdd 0003                     __end_of_i2c_setBuffer 0010  
            ?_INT_DefaultInterruptHandler 0000                    __end_of_TMR0_StopTimer 0003  
                __end_of_handler_clock_ms 000C                      ?_i2c_busCollisionISR 0000  
                        __CFG_LPBOREN$OFF 0000                               ?_reset_recv 0000  
                    __end_of_mssp1_setIRQ 0003                  __size_of_TMR1_Initialize 001F  
                                ??___bmul 0004                          ??_PMD_Initialize 0003  
                        _checkDebounceSW1 0000                          _checkDebounceSW2 0000  
                                ??___wmul 0007                    wr1RegCompleteHandler@p 0009  
                           ?_do_I2C_RESET 0000                               __pdataBANK0 0000  
                             __pdataBANK2 0000                                  ??_memset 0007  
                 __size_of_write_str_UART 002A                __end_of_EXT_INT_Initialize 000E  
           ?_TMR2_DefaultInterruptHandler 0000                                memset@dest 0009  
                             ?_returnStop 0009                        write_str_UART@size 0006  
                        ??_selectSubfield 0021            __end_of_do_I2C_DO_NACK_RESTART 0005  
                              read_ring@i 000D                      _i2c1_driver_sendNACK 0000  
                       read_ring@absindex 000F                         __size_of_WriteI2C 005A  
                        ?_getSubfieldInfo 0000                                  ?_LED_bin 0003  
                             __pbssCOMMON 0000                                 ___latbits 0002  
                    _i2c1_driver_resetBus 0000                                  ?_INT_ISR 0000  
                 save_recovery_params@aux 000F                             __pcstackBANK0 0000  
                           __pcstackBANK1 0000                        _PWM6_LoadDutyValue 0000  
                __size_of_TMR2_Initialize 0018                          ??_dump_UART_FIFO 0003  
                               _do_I2C_RX 0000                                 _do_I2C_TX 0000  
                   __size_of_INT_CallBack 000D                          ?_limitHoursUnits 0000  
                    __end_of_representLed 004D            __size_of_do_I2C_SEND_ADR_WRITE 0008  
                       __size_of_mod1_LED 000B                         __size_of_mod2_LED 000A  
           __end_of_do_I2C_SEND_ADR_WRITE 0008                         __size_of_mod3_LED 000B  
                       __size_of_mod4_LED 000B                       ?_PWM6_LoadDutyValue 0009  
                        _i2c_restartWrite 0000                 __size_of_i2c1_driver_open 000C  
                         _mode_select_LED 0000                 __size_of_i2c1_driver_stop 0003  
                        write_str_UART@id 0009                                  ?_i2c_ISR 0000  
                         _do_I2C_TX_EMPTY 0000                                  ?_ReadI2C 0000  
                   _TMR0_InterruptHandler 0004                             ??_setCallBack 0003  
                               __pnvBANK0 0000                                 __pnvBANK1 0000  
                   _rd2RegCompleteHandler 0000                  __size_of_TMR0_StartTimer 0003  
                         ?_TMR0_StopTimer 0000                     ??_i2c_busCollisionISR 0000  
                       __size_of_mode_LED 002A                     __end_of_fsmStateTable 0020  
           __size_of_save_recovery_params 002A                    _PIN_MANAGER_Initialize 0000  
                   _wr2RegCompleteHandler 0000             ??_INT_DefaultInterruptHandler 0000  
                 __size_of_config_routine 0082          __end_of_TMR1_SetInterruptHandler 0009  
                       read_ring@subindex 000A                            ??_do_I2C_RESET 0000  
                                ?___awdiv 0003                                 __ptext100 0000  
                               __ptext101 0000                                 __ptext110 0000  
                               __ptext102 0000                                 __ptext111 0000  
                               __ptext103 0000                                 __ptext120 0000  
                               __ptext112 0000                                 __ptext104 0000  
                               __ptext121 0000                                 __ptext113 0000  
                               __ptext105 0000                                 __ptext114 0000  
                               __ptext106 0000                                 __ptext115 0000  
                               __ptext107 0000                                 __ptext116 0000  
                               __ptext108 0000                                 __ptext117 0000  
                               __ptext109 0000                                 __ptext118 0000  
                               __ptext119 0000                                  ?___awmod 0003  
                             ?_write_UART 0000                  ??_do_I2C_DO_ADDRESS_NACK 000A  
             _i2c1_driver_busCollisionISR 002D                                  ?_all_LED 0000  
                   __end_of_do_I2C_DO_ACK 0005                      ??_PWM6_LoadDutyValue 000B  
                           ??_recoverData 000F              ??_INTERRUPT_InterruptManager 000D  
              ??_do_I2C_SEND_RESTART_READ 0000                     ?_i2c1_driver_sendNACK 0000  
                                ?_sw1_EXT 0000                                  ?_cksum_w 0000  
                            _INT_CallBack 0000                          ??_mssp1_clearIRQ 0000  
                   ?_i2c1_driver_resetBus 0000        __size_of_do_I2C_SEND_RESTART_WRITE 0005  
                                _ADC_read 0000                                ?_do_I2C_RX 0000  
                              ?_do_I2C_TX 0000                  __size_of_PWM6_Initialize 000D  
                               _read_UART 0000                       __size_of_reset_recv 001C  
                          __size_of_cksum 0020                                  _T2CLKCON 0290  
                __size_of_DATAEE_ReadByte 000F                   ??_rd1RegCompleteHandler 000A  
                               _read_ring 0000                            __size_of_tsttc 0150  
                               _min_units 0021                   ??_wr1RegCompleteHandler 000A  
                   _ADCC_IsConversionDone 0000                         ?_check_thresholds 0000  
                       ??_TMR0_Initialize 0005                            ___wmul@product 0007  
                                _LATAbits 0016                       __size_of_returnStop 0002  
                      ??_check_thresholds 000D                                 clear_ram0 0000  
                                _PIE0bits 0716                         _handler_clock_hms 0000  
                               _nreg_init 0011                             ??_ring_buffer 0008  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0069  
              ??_TMR0_SetInterruptHandler 0005                                  _PIR0bits 070C  
                             _config_mode 0007                                  _PIR3bits 070F  
                               _ring_byte 003F                                  _PIR4bits 0710  
                      ?_handler_clock_hms 0000                         _EUSART_is_tx_done 0000* 
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR0_ISR 0000                                  _TMR1_ISR 0000  
                                _TMR2_ISR 0000              ?_i2c_setDataCompleteCallback 0005  
                                _SSP1STAT 018F                       __end_of_setCallBack 0026  
                      ?_EUSART_is_tx_done 0000                          push_ring@nreg_pt 0013  
                               _threshold 0000                       ??_handler_clock_hms 0000  
                       ??_TMR1_Initialize 0005                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                              _ADCON3bits 0096                         ___wmul@multiplier 0003  
                               _push_ring 0000                         ?_do_I2C_SEND_STOP 0000  
                     ??_EUSART_is_tx_done 0000                                  _WPUBbits 0F44  
              __end_of_increment_subfield 0054      __size_of_INT_DefaultInterruptHandler 0001  
          ??_TMR2_DefaultInterruptHandler 0000         __size_of_TMR2_SetInterruptHandler 0009  
                           ??_returnReset 000A                 ?_TMR2_SetInterruptHandler 0003  
                      ??_do_I2C_SEND_STOP 0000               __size_of_i2c1_driver_TXData 0005  
                        __size_of_LED_bin 001A                     DATAEE_WriteByte@bData 000B  
                     __end_of_recoverData 00C6                                ?_read_UART 0000  
       __end_of_do_I2C_SEND_RESTART_WRITE 0005                          __size_of_INT_ISR 0006  
                 __end_of_mode_select_LED 0020                               _EUSART_Read 0000* 
                 __end_of_do_I2C_TX_EMPTY 0033                                ?_read_ring 0007  
                ?_rdBlkRegCompleteHandler 0009                         ?_DATAEE_WriteByte 0009  
                     __size_of_write_UART 0018              __size_of_do_I2C_SEND_RESTART 0005  
             __size_of_i2c1_driver_isNACK 0008                 __end_of_handler_clock_hms 0034  
                   __size_of_mssp1_setIRQ 0003                         ??_TMR2_Initialize 0005  
                  ?_rd2RegCompleteHandler 0009                        ??_DATAEE_WriteByte 000C  
                      i1_checkDebounceSW1 0000                       _do_I2C_DO_NACK_STOP 0000  
                        __size_of_i2c_ISR 002D                    ?_wr2RegCompleteHandler 0009  
                        __size_of_ReadI2C 001F                                _ADSTATbits 0097  
        __end_of_ADCC_GetConversionResult 0009                              ?_do_I2C_IDLE 0000  
                     ?i1_checkDebounceSW1 0000                              ?_do_I2C_RCEN 0000  
                              push_ring@i 0012                   ??_OSCILLATOR_Initialize 0003  
                       ??_TMR0_StartTimer 0003                       __end_of_ring_buffer 002F  
                     _i2c1_driver_sendACK 0000                          __size_of___awdiv 0060  
                          _write_str_UART 0000                          __size_of___awmod 0054  
         __size_of_do_I2C_DO_ADDRESS_NACK 002C                       i2c1_driver_TXData@d 0000  
                  ??_i2c1_driver_sendNACK 0000             ??_i2c_setDataCompleteCallback 0008  
                                _WriteI2C 0000                          __size_of_all_LED 005B  
                     _i2c1_driver_restart 0000                  _TMR1_SetInterruptHandler 0000  
                    ?_do_I2C_DO_NACK_STOP 0000                       _i2c1_driver_startRX 0000  
            __end_of_do_I2C_SEND_ADR_READ 0009                                ?_push_ring 000D  
                  ??_i2c1_driver_resetBus 0000                     _TMR1_InterruptHandler 0002  
                        __size_of_sw1_EXT 0025                          __size_of_cksum_w 0010  
                   __size_of_representLed 004D                                _T0CON0bits 001E  
                __size_of_ADCC_Initialize 0016                          read_ring@nreg_pt 000E  
                            _mssp1_setIRQ 0000                               ??_do_I2C_RX 000A  
                             ??_do_I2C_TX 000A                      ??i1_checkDebounceSW1 0000  
                                __ptext10 0000                                  __ptext11 0000  
                                __ptext20 0000                                  __ptext12 0000  
                                __ptext21 0000                                  __ptext13 0000  
                              _T1GCONbits 020F                                  __ptext30 0000  
                                __ptext22 0000                                  __ptext14 0000  
                                __ptext31 0000                                  __ptext23 0000  
                                __ptext15 0000                                  __ptext40 0000  
                                __ptext32 0000                                  __ptext24 0000  
                                __ptext16 0000                                  __ptext41 0000  
                                __ptext33 0000                                  __ptext25 0000  
                                __ptext17 0000                                  __ptext50 0000  
                                __ptext42 0000                                  __ptext34 0000  
                                __ptext26 0000                                  __ptext18 0000  
                                __ptext51 0000                                  __ptext43 0000  
                                __ptext35 0000                                  __ptext27 0000  
                                __ptext19 0000                                  __ptext60 0000  
                                __ptext52 0000                                  __ptext44 0000  
                                __ptext36 0000                                  __ptext28 0000  
                                __ptext61 0000                                  __ptext53 0000  
                                __ptext45 0000                                  __ptext37 0000  
                                __ptext29 0000                                  __ptext70 0000  
                                __ptext62 0000                                  __ptext54 0000  
                                __ptext46 0000                                  __ptext38 0000  
                                __ptext71 0000                                  __ptext55 0000  
                                __ptext47 0000                                  __ptext39 0000  
                                __ptext80 0000                                  __ptext72 0000  
                                __ptext64 0000                                  __ptext56 0000  
                                __ptext48 0000                                  __ptext81 0000  
                                __ptext73 0000                                  __ptext65 0000  
                                __ptext57 0000                                  __ptext49 0000  
                                __ptext90 0000                                  __ptext82 0000  
                                __ptext74 0000                                  __ptext66 0000  
                                __ptext58 0000                                  __ptext91 0000  
                                __ptext83 0000                                  __ptext75 0000  
                                __ptext67 0000                                  __ptext59 0000  
                                __ptext92 0000                                  __ptext84 0000  
                                __ptext76 0000                                  __ptext68 0000  
                                __ptext93 0000                                  __ptext85 0000  
                                __ptext77 0000                                  __ptext69 0000  
                                __ptext94 0000                                  __ptext86 0000  
                                __ptext78 0000                                  __ptext95 0000  
                                __ptext87 0000                                  __ptext79 0000  
                                __ptext96 0000                                  __ptext88 0000  
                                __ptext97 0000                                  __ptext89 0000  
                                __ptext98 0000                                  __ptext99 0000  
                                _mod1_LED 0000                              _SSP1CON1bits 0190  
                                _mod2_LED 0000                  __end_of_checkDebounceSW1 005A  
                            _SSP1CON2bits 0191                  __end_of_checkDebounceSW2 004D  
                                _mod3_LED 0000                                  _mod4_LED 0000  
                  ?_ADCC_IsConversionDone 0000                      ?_i2c1_driver_sendACK 0000  
                    __end_of_do_I2C_RESET 0008               DATAEE_WriteByte@GIEBitValue 000C  
                    ?_i2c1_driver_restart 0000                       __end_of_returnReset 0002  
                                _last_ms2 000B                          _i2c1_driver_open 0000  
                                _mode_LED 0000                         ??_PWM6_Initialize 0003  
                        _i2c1_driver_stop 0000                             __size_of_main 018D  
                    ?_i2c1_driver_startRX 0000            __size_of_i2c1_driver_getRXData 0003  
                                _min_tens 0023             __end_of_i2c1_driver_getRXData 0003  
    __end_of_TMR0_DefaultInterruptHandler 0001     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 0000                         ??_DATAEE_ReadByte 0005  
                    __CFG_WDTCWS$WDTCWS_7 0000                               _setCallBack 0000  
                      dump_UART_FIFO@dump 0003                              ??_reset_recv 000D  
                       ?_handler_clock_ms 0000                                  _set_mode 0008  
                          _config_routine 0000                                tsttc@value 0006  
                           _num_subfields 0000                    __end_of_write_str_UART 002A  
            __end_of_ADCC_StartConversion 0008                                  int$flags 007E  
                      ??_handler_clock_ms 0000                              _representLed 0000  
           __size_of_limitTempThreshUnits 001B        __end_of_INTERRUPT_InterruptManager 0069  
              _INTERRUPT_InterruptManager 0000                       _mode_field_subfield 0000  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0002  
                                cksum@res 0006          __end_of_do_I2C_SEND_RESTART_READ 0005  
                            ??_returnStop 000A                               _hours_units 0025  
                __end_of_i2c_restartWrite 0002                     ??_do_I2C_DO_NACK_STOP 0000  
                             _recoverData 0000                                _INTCONbits 000B  
                   __end_of_read_str_UART 0063                               _NVMCON1bits 081E  
               check_thresholds@threshold 000E             __size_ofi1_PWM6_LoadDutyValue 0016  
                    _INT_InterruptHandler 0006                               ??_read_UART 0003  
                        ?_mode_select_LED 0000                        __end_of_reset_recv 001C  
                   ??_i2c1_driver_sendACK 0000                        _EXT_INT_Initialize 0000  
                        ?_do_I2C_TX_EMPTY 0000                               ??_read_ring 000B  
                  _do_I2C_DO_ADDRESS_NACK 0000                                  intlevel1 0000* 
                        ??_TMR0_StopTimer 0000                     ??_i2c1_driver_restart 0000  
              __size_of_handler_clock_hms 0034                    rd2RegCompleteHandler@p 0009  
                   ??_i2c1_driver_startRX 0000                   ?_PIN_MANAGER_Initialize 0000  
                       i2c_restartWrite@p 0009                         __CFG_CLKOUTEN$OFF 0000  
                     ?_EXT_INT_Initialize 0000                        __end_of_returnStop 0002  
                  __end_of_config_routine 0082                               _ring_buffer 0000  
           ?_TMR0_DefaultInterruptHandler 0000                           ?_write_str_UART 0004  
                            ??_write_UART 0003                    wr2RegCompleteHandler@p 0009  
                ?_INT_SetInterruptHandler 0003                  _ADCC_GetConversionResult 0000  
                             _temp_thresh 0005                             __pstringtext1 0000  
                           __pstringtext2 0000                             __pstringtext3 0000  
                           __pstringtext4 0000                      ??_EXT_INT_Initialize 0005  
                          read_ring@index 0009                               ??_push_ring 0010  
                              _SSP1DATPPS 0EC6              __end_of_save_recovery_params 002A  
                              _SSP1CLKPPS 0EC5                           _TMR0_Initialize 0000  
                  __size_of_i2c_setBuffer 0010                               _returnReset 0000  
             PWM6_LoadDutyValue@dutyValue 0009                             read_ring@nreg 0007  
          __end_of_PIN_MANAGER_Initialize 004D                         ??_ADCC_Initialize 0003  
             __end_of_i2c_busCollisionISR 0004                  __size_of_getSubfieldInfo 015C  
          __size_of_rd1RegCompleteHandler 0011             __end_of_rd1RegCompleteHandler 0011  
                      __end_of_write_UART 0018                        push_ring@nreg_init 000E  
          __size_of_wr1RegCompleteHandler 0011             __end_of_wr1RegCompleteHandler 0011  
                   _TMR2_InterruptHandler 0000                     _do_I2C_SEND_ADR_WRITE 0000  
                      push_ring@ring_byte 000F                  __size_of_limitHoursUnits 001B  
                    _do_I2C_SEND_ADR_READ 0000                           ?_config_routine 0000  
                         _TMR1_Initialize 0000  
