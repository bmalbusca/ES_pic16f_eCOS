

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 12:33:41 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	intentry,global,class=CODE,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,delta=2
    91                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text80,local,class=CODE,merge=1,delta=2
    99                           	psect	text81,local,class=CODE,merge=1,delta=2
   100                           	psect	text82,local,class=CODE,merge=1,delta=2
   101                           	psect	text83,local,class=CODE,merge=1,delta=2
   102                           	psect	text84,local,class=CODE,merge=1,delta=2
   103                           	psect	text85,local,class=CODE,merge=1,delta=2
   104                           	psect	text86,local,class=CODE,merge=1,delta=2
   105                           	psect	text87,local,class=CODE,merge=1,delta=2
   106                           	psect	text88,local,class=CODE,merge=1,delta=2
   107                           	psect	text89,local,class=CODE,merge=1,delta=2
   108                           	psect	text90,local,class=CODE,merge=1,delta=2
   109                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text94,local,class=CODE,merge=1,delta=2
   113                           	psect	text95,local,class=CODE,merge=1,delta=2
   114                           	psect	text96,local,class=CODE,merge=1,delta=2
   115                           	psect	text97,local,class=CODE,merge=1,delta=2
   116                           	psect	text98,local,class=CODE,merge=1,delta=2
   117                           	psect	text99,local,class=CODE,merge=1,delta=2
   118                           	psect	text100,local,class=CODE,merge=1,delta=2
   119                           	psect	text101,local,class=CODE,merge=1,delta=2
   120                           	psect	text102,local,class=CODE,merge=1,delta=2
   121                           	psect	text103,local,class=CODE,merge=1,delta=2
   122                           	psect	text104,local,class=CODE,merge=1,delta=2
   123                           	psect	text105,local,class=CODE,merge=1,delta=2
   124                           	psect	text106,local,class=CODE,merge=1,delta=2
   125                           	psect	text107,local,class=CODE,merge=1,delta=2
   126                           	psect	text108,local,class=CODE,merge=1,delta=2
   127                           	psect	text109,local,class=CODE,merge=1,delta=2
   128                           	psect	text110,local,class=CODE,merge=1,delta=2
   129                           	dabs	1,0x7E,2
   130  0000                     
   131                           ; Version 2.10
   132                           ; Generated 31/07/2019 GMT
   133                           ; 
   134                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   135                           ; All rights reserved.
   136                           ; 
   137                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   138                           ; 
   139                           ; Redistribution and use in source and binary forms, with or without modification, are
   140                           ; permitted provided that the following conditions are met:
   141                           ; 
   142                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   143                           ;        conditions and the following disclaimer.
   144                           ; 
   145                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   146                           ;        of conditions and the following disclaimer in the documentation and/or other
   147                           ;        materials provided with the distribution.
   148                           ; 
   149                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   150                           ;        software without specific prior written permission.
   151                           ; 
   152                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   153                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   154                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   155                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   156                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   157                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   158                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   159                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   160                           ; 
   161                           ; 
   162                           ; Code-generator required, PIC16F18875 Definitions
   163                           ; 
   164                           ; SFR Addresses
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  0007                     	;# 
   173  0008                     	;# 
   174  0009                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  000D                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001C                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  008C                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0090                     	;# 
   206  0091                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0110                     	;# 
   225  0110                     	;# 
   226  0111                     	;# 
   227  0112                     	;# 
   228  0112                     	;# 
   229  0113                     	;# 
   230  0114                     	;# 
   231  0114                     	;# 
   232  0115                     	;# 
   233  0116                     	;# 
   234  0116                     	;# 
   235  0117                     	;# 
   236  0119                     	;# 
   237  0119                     	;# 
   238  0119                     	;# 
   239  011A                     	;# 
   240  011A                     	;# 
   241  011A                     	;# 
   242  011B                     	;# 
   243  011B                     	;# 
   244  011B                     	;# 
   245  011B                     	;# 
   246  011B                     	;# 
   247  011C                     	;# 
   248  011C                     	;# 
   249  011C                     	;# 
   250  011D                     	;# 
   251  011D                     	;# 
   252  011D                     	;# 
   253  011E                     	;# 
   254  011E                     	;# 
   255  011E                     	;# 
   256  011F                     	;# 
   257  011F                     	;# 
   258  011F                     	;# 
   259  011F                     	;# 
   260  011F                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  018E                     	;# 
   264  018F                     	;# 
   265  0190                     	;# 
   266  0191                     	;# 
   267  0192                     	;# 
   268  0196                     	;# 
   269  0197                     	;# 
   270  0198                     	;# 
   271  0199                     	;# 
   272  019A                     	;# 
   273  019B                     	;# 
   274  019C                     	;# 
   275  020C                     	;# 
   276  020C                     	;# 
   277  020D                     	;# 
   278  020E                     	;# 
   279  020F                     	;# 
   280  020F                     	;# 
   281  0210                     	;# 
   282  0210                     	;# 
   283  0211                     	;# 
   284  0211                     	;# 
   285  0212                     	;# 
   286  0212                     	;# 
   287  0213                     	;# 
   288  0214                     	;# 
   289  0215                     	;# 
   290  0215                     	;# 
   291  0216                     	;# 
   292  0216                     	;# 
   293  0217                     	;# 
   294  0217                     	;# 
   295  0218                     	;# 
   296  0218                     	;# 
   297  0219                     	;# 
   298  021A                     	;# 
   299  021B                     	;# 
   300  021B                     	;# 
   301  021C                     	;# 
   302  021C                     	;# 
   303  021D                     	;# 
   304  021D                     	;# 
   305  021E                     	;# 
   306  021F                     	;# 
   307  028C                     	;# 
   308  028C                     	;# 
   309  028D                     	;# 
   310  028D                     	;# 
   311  028E                     	;# 
   312  028F                     	;# 
   313  0290                     	;# 
   314  0290                     	;# 
   315  0291                     	;# 
   316  0292                     	;# 
   317  0292                     	;# 
   318  0293                     	;# 
   319  0293                     	;# 
   320  0294                     	;# 
   321  0295                     	;# 
   322  0296                     	;# 
   323  0296                     	;# 
   324  0297                     	;# 
   325  0298                     	;# 
   326  0298                     	;# 
   327  0299                     	;# 
   328  0299                     	;# 
   329  029A                     	;# 
   330  029B                     	;# 
   331  029C                     	;# 
   332  029C                     	;# 
   333  029D                     	;# 
   334  030C                     	;# 
   335  030C                     	;# 
   336  030D                     	;# 
   337  030E                     	;# 
   338  030F                     	;# 
   339  0310                     	;# 
   340  0310                     	;# 
   341  0311                     	;# 
   342  0312                     	;# 
   343  0313                     	;# 
   344  0314                     	;# 
   345  0314                     	;# 
   346  0315                     	;# 
   347  0316                     	;# 
   348  0317                     	;# 
   349  0318                     	;# 
   350  0318                     	;# 
   351  0319                     	;# 
   352  031A                     	;# 
   353  031B                     	;# 
   354  031C                     	;# 
   355  031C                     	;# 
   356  031D                     	;# 
   357  031E                     	;# 
   358  031F                     	;# 
   359  038C                     	;# 
   360  038C                     	;# 
   361  038D                     	;# 
   362  038E                     	;# 
   363  0390                     	;# 
   364  0390                     	;# 
   365  0391                     	;# 
   366  0392                     	;# 
   367  040C                     	;# 
   368  040D                     	;# 
   369  040E                     	;# 
   370  040F                     	;# 
   371  0410                     	;# 
   372  0411                     	;# 
   373  0416                     	;# 
   374  0416                     	;# 
   375  0417                     	;# 
   376  0418                     	;# 
   377  0418                     	;# 
   378  0419                     	;# 
   379  041A                     	;# 
   380  041A                     	;# 
   381  041B                     	;# 
   382  041C                     	;# 
   383  041C                     	;# 
   384  041D                     	;# 
   385  041E                     	;# 
   386  041F                     	;# 
   387  048C                     	;# 
   388  048C                     	;# 
   389  048D                     	;# 
   390  048E                     	;# 
   391  048F                     	;# 
   392  048F                     	;# 
   393  0490                     	;# 
   394  0491                     	;# 
   395  0492                     	;# 
   396  0492                     	;# 
   397  0493                     	;# 
   398  0494                     	;# 
   399  0495                     	;# 
   400  0495                     	;# 
   401  0496                     	;# 
   402  0497                     	;# 
   403  0498                     	;# 
   404  0499                     	;# 
   405  049A                     	;# 
   406  049B                     	;# 
   407  049C                     	;# 
   408  049D                     	;# 
   409  050C                     	;# 
   410  050C                     	;# 
   411  050D                     	;# 
   412  050E                     	;# 
   413  050F                     	;# 
   414  050F                     	;# 
   415  0510                     	;# 
   416  0511                     	;# 
   417  0512                     	;# 
   418  0512                     	;# 
   419  0513                     	;# 
   420  0514                     	;# 
   421  0515                     	;# 
   422  0515                     	;# 
   423  0516                     	;# 
   424  0517                     	;# 
   425  0518                     	;# 
   426  0519                     	;# 
   427  051A                     	;# 
   428  051B                     	;# 
   429  051C                     	;# 
   430  051D                     	;# 
   431  058C                     	;# 
   432  058C                     	;# 
   433  058D                     	;# 
   434  058E                     	;# 
   435  058F                     	;# 
   436  058F                     	;# 
   437  0590                     	;# 
   438  0591                     	;# 
   439  0592                     	;# 
   440  0593                     	;# 
   441  060C                     	;# 
   442  060D                     	;# 
   443  060E                     	;# 
   444  060F                     	;# 
   445  0610                     	;# 
   446  0611                     	;# 
   447  0612                     	;# 
   448  0613                     	;# 
   449  0614                     	;# 
   450  0616                     	;# 
   451  0617                     	;# 
   452  0618                     	;# 
   453  0619                     	;# 
   454  061A                     	;# 
   455  061B                     	;# 
   456  061C                     	;# 
   457  061D                     	;# 
   458  061E                     	;# 
   459  068C                     	;# 
   460  068D                     	;# 
   461  068E                     	;# 
   462  068F                     	;# 
   463  0690                     	;# 
   464  0691                     	;# 
   465  0692                     	;# 
   466  0693                     	;# 
   467  0694                     	;# 
   468  070C                     	;# 
   469  070D                     	;# 
   470  070E                     	;# 
   471  070F                     	;# 
   472  0710                     	;# 
   473  0711                     	;# 
   474  0712                     	;# 
   475  0713                     	;# 
   476  0714                     	;# 
   477  0716                     	;# 
   478  0717                     	;# 
   479  0718                     	;# 
   480  0719                     	;# 
   481  071A                     	;# 
   482  071B                     	;# 
   483  071C                     	;# 
   484  071D                     	;# 
   485  071E                     	;# 
   486  0796                     	;# 
   487  0797                     	;# 
   488  0798                     	;# 
   489  0799                     	;# 
   490  079A                     	;# 
   491  079B                     	;# 
   492  080C                     	;# 
   493  080D                     	;# 
   494  080E                     	;# 
   495  080F                     	;# 
   496  0810                     	;# 
   497  0811                     	;# 
   498  0812                     	;# 
   499  0813                     	;# 
   500  0814                     	;# 
   501  081A                     	;# 
   502  081B                     	;# 
   503  081C                     	;# 
   504  081D                     	;# 
   505  081E                     	;# 
   506  081F                     	;# 
   507  088C                     	;# 
   508  088D                     	;# 
   509  088E                     	;# 
   510  088F                     	;# 
   511  0890                     	;# 
   512  0891                     	;# 
   513  0892                     	;# 
   514  0893                     	;# 
   515  0895                     	;# 
   516  0896                     	;# 
   517  0897                     	;# 
   518  0898                     	;# 
   519  0899                     	;# 
   520  089A                     	;# 
   521  089B                     	;# 
   522  090C                     	;# 
   523  090E                     	;# 
   524  090F                     	;# 
   525  091F                     	;# 
   526  091F                     	;# 
   527  098F                     	;# 
   528  098F                     	;# 
   529  0990                     	;# 
   530  0991                     	;# 
   531  0992                     	;# 
   532  0993                     	;# 
   533  0994                     	;# 
   534  0995                     	;# 
   535  0996                     	;# 
   536  0997                     	;# 
   537  0E0F                     	;# 
   538  0E10                     	;# 
   539  0E11                     	;# 
   540  0E12                     	;# 
   541  0E13                     	;# 
   542  0E14                     	;# 
   543  0E15                     	;# 
   544  0E16                     	;# 
   545  0E17                     	;# 
   546  0E18                     	;# 
   547  0E19                     	;# 
   548  0E1A                     	;# 
   549  0E1B                     	;# 
   550  0E1C                     	;# 
   551  0E1D                     	;# 
   552  0E1E                     	;# 
   553  0E1F                     	;# 
   554  0E20                     	;# 
   555  0E21                     	;# 
   556  0E22                     	;# 
   557  0E23                     	;# 
   558  0E24                     	;# 
   559  0E25                     	;# 
   560  0E26                     	;# 
   561  0E27                     	;# 
   562  0E28                     	;# 
   563  0E29                     	;# 
   564  0E2A                     	;# 
   565  0E2B                     	;# 
   566  0E2C                     	;# 
   567  0E2D                     	;# 
   568  0E2E                     	;# 
   569  0E2F                     	;# 
   570  0E30                     	;# 
   571  0E31                     	;# 
   572  0E32                     	;# 
   573  0E33                     	;# 
   574  0E34                     	;# 
   575  0E35                     	;# 
   576  0E36                     	;# 
   577  0E37                     	;# 
   578  0E8F                     	;# 
   579  0E90                     	;# 
   580  0E91                     	;# 
   581  0E92                     	;# 
   582  0E93                     	;# 
   583  0E94                     	;# 
   584  0E95                     	;# 
   585  0E96                     	;# 
   586  0E97                     	;# 
   587  0E9C                     	;# 
   588  0E9D                     	;# 
   589  0E9E                     	;# 
   590  0EA1                     	;# 
   591  0EA2                     	;# 
   592  0EA3                     	;# 
   593  0EA4                     	;# 
   594  0EA5                     	;# 
   595  0EA9                     	;# 
   596  0EAA                     	;# 
   597  0EAB                     	;# 
   598  0EAC                     	;# 
   599  0EB1                     	;# 
   600  0EB2                     	;# 
   601  0EB3                     	;# 
   602  0EB8                     	;# 
   603  0EB9                     	;# 
   604  0EBA                     	;# 
   605  0EBB                     	;# 
   606  0EBC                     	;# 
   607  0EBD                     	;# 
   608  0EBE                     	;# 
   609  0EC3                     	;# 
   610  0EC5                     	;# 
   611  0EC6                     	;# 
   612  0EC7                     	;# 
   613  0EC8                     	;# 
   614  0EC9                     	;# 
   615  0ECA                     	;# 
   616  0ECB                     	;# 
   617  0ECC                     	;# 
   618  0F10                     	;# 
   619  0F11                     	;# 
   620  0F12                     	;# 
   621  0F13                     	;# 
   622  0F14                     	;# 
   623  0F15                     	;# 
   624  0F16                     	;# 
   625  0F17                     	;# 
   626  0F18                     	;# 
   627  0F19                     	;# 
   628  0F1A                     	;# 
   629  0F1B                     	;# 
   630  0F1C                     	;# 
   631  0F1D                     	;# 
   632  0F1E                     	;# 
   633  0F1F                     	;# 
   634  0F20                     	;# 
   635  0F21                     	;# 
   636  0F22                     	;# 
   637  0F23                     	;# 
   638  0F24                     	;# 
   639  0F25                     	;# 
   640  0F26                     	;# 
   641  0F27                     	;# 
   642  0F28                     	;# 
   643  0F29                     	;# 
   644  0F2A                     	;# 
   645  0F2B                     	;# 
   646  0F2C                     	;# 
   647  0F2D                     	;# 
   648  0F2E                     	;# 
   649  0F2F                     	;# 
   650  0F30                     	;# 
   651  0F31                     	;# 
   652  0F32                     	;# 
   653  0F38                     	;# 
   654  0F39                     	;# 
   655  0F3A                     	;# 
   656  0F3B                     	;# 
   657  0F3C                     	;# 
   658  0F3D                     	;# 
   659  0F3E                     	;# 
   660  0F3F                     	;# 
   661  0F40                     	;# 
   662  0F41                     	;# 
   663  0F43                     	;# 
   664  0F44                     	;# 
   665  0F45                     	;# 
   666  0F46                     	;# 
   667  0F47                     	;# 
   668  0F48                     	;# 
   669  0F49                     	;# 
   670  0F4A                     	;# 
   671  0F4B                     	;# 
   672  0F4C                     	;# 
   673  0F4E                     	;# 
   674  0F4F                     	;# 
   675  0F50                     	;# 
   676  0F51                     	;# 
   677  0F52                     	;# 
   678  0F53                     	;# 
   679  0F54                     	;# 
   680  0F55                     	;# 
   681  0F56                     	;# 
   682  0F57                     	;# 
   683  0F59                     	;# 
   684  0F5A                     	;# 
   685  0F5B                     	;# 
   686  0F5C                     	;# 
   687  0F5D                     	;# 
   688  0F61                     	;# 
   689  0F62                     	;# 
   690  0F64                     	;# 
   691  0F65                     	;# 
   692  0F66                     	;# 
   693  0F67                     	;# 
   694  0F68                     	;# 
   695  0F69                     	;# 
   696  0F6A                     	;# 
   697  0F6B                     	;# 
   698  0F6C                     	;# 
   699  0F6D                     	;# 
   700  0FE4                     	;# 
   701  0FE5                     	;# 
   702  0FE6                     	;# 
   703  0FE7                     	;# 
   704  0FE8                     	;# 
   705  0FE9                     	;# 
   706  0FEA                     	;# 
   707  0FEB                     	;# 
   708  0FED                     	;# 
   709  0FEE                     	;# 
   710  0FEF                     	;# 
   711  0000                     	;# 
   712  0001                     	;# 
   713  0002                     	;# 
   714  0003                     	;# 
   715  0004                     	;# 
   716  0005                     	;# 
   717  0006                     	;# 
   718  0007                     	;# 
   719  0008                     	;# 
   720  0009                     	;# 
   721  000A                     	;# 
   722  000B                     	;# 
   723  000C                     	;# 
   724  000D                     	;# 
   725  000E                     	;# 
   726  000F                     	;# 
   727  0010                     	;# 
   728  0011                     	;# 
   729  0012                     	;# 
   730  0013                     	;# 
   731  0014                     	;# 
   732  0015                     	;# 
   733  0016                     	;# 
   734  0017                     	;# 
   735  0018                     	;# 
   736  0019                     	;# 
   737  001A                     	;# 
   738  001C                     	;# 
   739  001C                     	;# 
   740  001D                     	;# 
   741  001D                     	;# 
   742  001E                     	;# 
   743  001F                     	;# 
   744  008C                     	;# 
   745  008C                     	;# 
   746  008D                     	;# 
   747  008E                     	;# 
   748  008E                     	;# 
   749  008F                     	;# 
   750  0090                     	;# 
   751  0090                     	;# 
   752  0091                     	;# 
   753  0093                     	;# 
   754  0094                     	;# 
   755  0095                     	;# 
   756  0096                     	;# 
   757  0097                     	;# 
   758  0098                     	;# 
   759  0099                     	;# 
   760  009A                     	;# 
   761  009B                     	;# 
   762  009C                     	;# 
   763  009D                     	;# 
   764  009E                     	;# 
   765  010C                     	;# 
   766  010D                     	;# 
   767  010E                     	;# 
   768  010E                     	;# 
   769  010F                     	;# 
   770  0110                     	;# 
   771  0110                     	;# 
   772  0111                     	;# 
   773  0112                     	;# 
   774  0112                     	;# 
   775  0113                     	;# 
   776  0114                     	;# 
   777  0114                     	;# 
   778  0115                     	;# 
   779  0116                     	;# 
   780  0116                     	;# 
   781  0117                     	;# 
   782  0119                     	;# 
   783  0119                     	;# 
   784  0119                     	;# 
   785  011A                     	;# 
   786  011A                     	;# 
   787  011A                     	;# 
   788  011B                     	;# 
   789  011B                     	;# 
   790  011B                     	;# 
   791  011B                     	;# 
   792  011B                     	;# 
   793  011C                     	;# 
   794  011C                     	;# 
   795  011C                     	;# 
   796  011D                     	;# 
   797  011D                     	;# 
   798  011D                     	;# 
   799  011E                     	;# 
   800  011E                     	;# 
   801  011E                     	;# 
   802  011F                     	;# 
   803  011F                     	;# 
   804  011F                     	;# 
   805  011F                     	;# 
   806  011F                     	;# 
   807  018C                     	;# 
   808  018D                     	;# 
   809  018E                     	;# 
   810  018F                     	;# 
   811  0190                     	;# 
   812  0191                     	;# 
   813  0192                     	;# 
   814  0196                     	;# 
   815  0197                     	;# 
   816  0198                     	;# 
   817  0199                     	;# 
   818  019A                     	;# 
   819  019B                     	;# 
   820  019C                     	;# 
   821  020C                     	;# 
   822  020C                     	;# 
   823  020D                     	;# 
   824  020E                     	;# 
   825  020F                     	;# 
   826  020F                     	;# 
   827  0210                     	;# 
   828  0210                     	;# 
   829  0211                     	;# 
   830  0211                     	;# 
   831  0212                     	;# 
   832  0212                     	;# 
   833  0213                     	;# 
   834  0214                     	;# 
   835  0215                     	;# 
   836  0215                     	;# 
   837  0216                     	;# 
   838  0216                     	;# 
   839  0217                     	;# 
   840  0217                     	;# 
   841  0218                     	;# 
   842  0218                     	;# 
   843  0219                     	;# 
   844  021A                     	;# 
   845  021B                     	;# 
   846  021B                     	;# 
   847  021C                     	;# 
   848  021C                     	;# 
   849  021D                     	;# 
   850  021D                     	;# 
   851  021E                     	;# 
   852  021F                     	;# 
   853  028C                     	;# 
   854  028C                     	;# 
   855  028D                     	;# 
   856  028D                     	;# 
   857  028E                     	;# 
   858  028F                     	;# 
   859  0290                     	;# 
   860  0290                     	;# 
   861  0291                     	;# 
   862  0292                     	;# 
   863  0292                     	;# 
   864  0293                     	;# 
   865  0293                     	;# 
   866  0294                     	;# 
   867  0295                     	;# 
   868  0296                     	;# 
   869  0296                     	;# 
   870  0297                     	;# 
   871  0298                     	;# 
   872  0298                     	;# 
   873  0299                     	;# 
   874  0299                     	;# 
   875  029A                     	;# 
   876  029B                     	;# 
   877  029C                     	;# 
   878  029C                     	;# 
   879  029D                     	;# 
   880  030C                     	;# 
   881  030C                     	;# 
   882  030D                     	;# 
   883  030E                     	;# 
   884  030F                     	;# 
   885  0310                     	;# 
   886  0310                     	;# 
   887  0311                     	;# 
   888  0312                     	;# 
   889  0313                     	;# 
   890  0314                     	;# 
   891  0314                     	;# 
   892  0315                     	;# 
   893  0316                     	;# 
   894  0317                     	;# 
   895  0318                     	;# 
   896  0318                     	;# 
   897  0319                     	;# 
   898  031A                     	;# 
   899  031B                     	;# 
   900  031C                     	;# 
   901  031C                     	;# 
   902  031D                     	;# 
   903  031E                     	;# 
   904  031F                     	;# 
   905  038C                     	;# 
   906  038C                     	;# 
   907  038D                     	;# 
   908  038E                     	;# 
   909  0390                     	;# 
   910  0390                     	;# 
   911  0391                     	;# 
   912  0392                     	;# 
   913  040C                     	;# 
   914  040D                     	;# 
   915  040E                     	;# 
   916  040F                     	;# 
   917  0410                     	;# 
   918  0411                     	;# 
   919  0416                     	;# 
   920  0416                     	;# 
   921  0417                     	;# 
   922  0418                     	;# 
   923  0418                     	;# 
   924  0419                     	;# 
   925  041A                     	;# 
   926  041A                     	;# 
   927  041B                     	;# 
   928  041C                     	;# 
   929  041C                     	;# 
   930  041D                     	;# 
   931  041E                     	;# 
   932  041F                     	;# 
   933  048C                     	;# 
   934  048C                     	;# 
   935  048D                     	;# 
   936  048E                     	;# 
   937  048F                     	;# 
   938  048F                     	;# 
   939  0490                     	;# 
   940  0491                     	;# 
   941  0492                     	;# 
   942  0492                     	;# 
   943  0493                     	;# 
   944  0494                     	;# 
   945  0495                     	;# 
   946  0495                     	;# 
   947  0496                     	;# 
   948  0497                     	;# 
   949  0498                     	;# 
   950  0499                     	;# 
   951  049A                     	;# 
   952  049B                     	;# 
   953  049C                     	;# 
   954  049D                     	;# 
   955  050C                     	;# 
   956  050C                     	;# 
   957  050D                     	;# 
   958  050E                     	;# 
   959  050F                     	;# 
   960  050F                     	;# 
   961  0510                     	;# 
   962  0511                     	;# 
   963  0512                     	;# 
   964  0512                     	;# 
   965  0513                     	;# 
   966  0514                     	;# 
   967  0515                     	;# 
   968  0515                     	;# 
   969  0516                     	;# 
   970  0517                     	;# 
   971  0518                     	;# 
   972  0519                     	;# 
   973  051A                     	;# 
   974  051B                     	;# 
   975  051C                     	;# 
   976  051D                     	;# 
   977  058C                     	;# 
   978  058C                     	;# 
   979  058D                     	;# 
   980  058E                     	;# 
   981  058F                     	;# 
   982  058F                     	;# 
   983  0590                     	;# 
   984  0591                     	;# 
   985  0592                     	;# 
   986  0593                     	;# 
   987  060C                     	;# 
   988  060D                     	;# 
   989  060E                     	;# 
   990  060F                     	;# 
   991  0610                     	;# 
   992  0611                     	;# 
   993  0612                     	;# 
   994  0613                     	;# 
   995  0614                     	;# 
   996  0616                     	;# 
   997  0617                     	;# 
   998  0618                     	;# 
   999  0619                     	;# 
  1000  061A                     	;# 
  1001  061B                     	;# 
  1002  061C                     	;# 
  1003  061D                     	;# 
  1004  061E                     	;# 
  1005  068C                     	;# 
  1006  068D                     	;# 
  1007  068E                     	;# 
  1008  068F                     	;# 
  1009  0690                     	;# 
  1010  0691                     	;# 
  1011  0692                     	;# 
  1012  0693                     	;# 
  1013  0694                     	;# 
  1014  070C                     	;# 
  1015  070D                     	;# 
  1016  070E                     	;# 
  1017  070F                     	;# 
  1018  0710                     	;# 
  1019  0711                     	;# 
  1020  0712                     	;# 
  1021  0713                     	;# 
  1022  0714                     	;# 
  1023  0716                     	;# 
  1024  0717                     	;# 
  1025  0718                     	;# 
  1026  0719                     	;# 
  1027  071A                     	;# 
  1028  071B                     	;# 
  1029  071C                     	;# 
  1030  071D                     	;# 
  1031  071E                     	;# 
  1032  0796                     	;# 
  1033  0797                     	;# 
  1034  0798                     	;# 
  1035  0799                     	;# 
  1036  079A                     	;# 
  1037  079B                     	;# 
  1038  080C                     	;# 
  1039  080D                     	;# 
  1040  080E                     	;# 
  1041  080F                     	;# 
  1042  0810                     	;# 
  1043  0811                     	;# 
  1044  0812                     	;# 
  1045  0813                     	;# 
  1046  0814                     	;# 
  1047  081A                     	;# 
  1048  081B                     	;# 
  1049  081C                     	;# 
  1050  081D                     	;# 
  1051  081E                     	;# 
  1052  081F                     	;# 
  1053  088C                     	;# 
  1054  088D                     	;# 
  1055  088E                     	;# 
  1056  088F                     	;# 
  1057  0890                     	;# 
  1058  0891                     	;# 
  1059  0892                     	;# 
  1060  0893                     	;# 
  1061  0895                     	;# 
  1062  0896                     	;# 
  1063  0897                     	;# 
  1064  0898                     	;# 
  1065  0899                     	;# 
  1066  089A                     	;# 
  1067  089B                     	;# 
  1068  090C                     	;# 
  1069  090E                     	;# 
  1070  090F                     	;# 
  1071  091F                     	;# 
  1072  091F                     	;# 
  1073  098F                     	;# 
  1074  098F                     	;# 
  1075  0990                     	;# 
  1076  0991                     	;# 
  1077  0992                     	;# 
  1078  0993                     	;# 
  1079  0994                     	;# 
  1080  0995                     	;# 
  1081  0996                     	;# 
  1082  0997                     	;# 
  1083  0E0F                     	;# 
  1084  0E10                     	;# 
  1085  0E11                     	;# 
  1086  0E12                     	;# 
  1087  0E13                     	;# 
  1088  0E14                     	;# 
  1089  0E15                     	;# 
  1090  0E16                     	;# 
  1091  0E17                     	;# 
  1092  0E18                     	;# 
  1093  0E19                     	;# 
  1094  0E1A                     	;# 
  1095  0E1B                     	;# 
  1096  0E1C                     	;# 
  1097  0E1D                     	;# 
  1098  0E1E                     	;# 
  1099  0E1F                     	;# 
  1100  0E20                     	;# 
  1101  0E21                     	;# 
  1102  0E22                     	;# 
  1103  0E23                     	;# 
  1104  0E24                     	;# 
  1105  0E25                     	;# 
  1106  0E26                     	;# 
  1107  0E27                     	;# 
  1108  0E28                     	;# 
  1109  0E29                     	;# 
  1110  0E2A                     	;# 
  1111  0E2B                     	;# 
  1112  0E2C                     	;# 
  1113  0E2D                     	;# 
  1114  0E2E                     	;# 
  1115  0E2F                     	;# 
  1116  0E30                     	;# 
  1117  0E31                     	;# 
  1118  0E32                     	;# 
  1119  0E33                     	;# 
  1120  0E34                     	;# 
  1121  0E35                     	;# 
  1122  0E36                     	;# 
  1123  0E37                     	;# 
  1124  0E8F                     	;# 
  1125  0E90                     	;# 
  1126  0E91                     	;# 
  1127  0E92                     	;# 
  1128  0E93                     	;# 
  1129  0E94                     	;# 
  1130  0E95                     	;# 
  1131  0E96                     	;# 
  1132  0E97                     	;# 
  1133  0E9C                     	;# 
  1134  0E9D                     	;# 
  1135  0E9E                     	;# 
  1136  0EA1                     	;# 
  1137  0EA2                     	;# 
  1138  0EA3                     	;# 
  1139  0EA4                     	;# 
  1140  0EA5                     	;# 
  1141  0EA9                     	;# 
  1142  0EAA                     	;# 
  1143  0EAB                     	;# 
  1144  0EAC                     	;# 
  1145  0EB1                     	;# 
  1146  0EB2                     	;# 
  1147  0EB3                     	;# 
  1148  0EB8                     	;# 
  1149  0EB9                     	;# 
  1150  0EBA                     	;# 
  1151  0EBB                     	;# 
  1152  0EBC                     	;# 
  1153  0EBD                     	;# 
  1154  0EBE                     	;# 
  1155  0EC3                     	;# 
  1156  0EC5                     	;# 
  1157  0EC6                     	;# 
  1158  0EC7                     	;# 
  1159  0EC8                     	;# 
  1160  0EC9                     	;# 
  1161  0ECA                     	;# 
  1162  0ECB                     	;# 
  1163  0ECC                     	;# 
  1164  0F10                     	;# 
  1165  0F11                     	;# 
  1166  0F12                     	;# 
  1167  0F13                     	;# 
  1168  0F14                     	;# 
  1169  0F15                     	;# 
  1170  0F16                     	;# 
  1171  0F17                     	;# 
  1172  0F18                     	;# 
  1173  0F19                     	;# 
  1174  0F1A                     	;# 
  1175  0F1B                     	;# 
  1176  0F1C                     	;# 
  1177  0F1D                     	;# 
  1178  0F1E                     	;# 
  1179  0F1F                     	;# 
  1180  0F20                     	;# 
  1181  0F21                     	;# 
  1182  0F22                     	;# 
  1183  0F23                     	;# 
  1184  0F24                     	;# 
  1185  0F25                     	;# 
  1186  0F26                     	;# 
  1187  0F27                     	;# 
  1188  0F28                     	;# 
  1189  0F29                     	;# 
  1190  0F2A                     	;# 
  1191  0F2B                     	;# 
  1192  0F2C                     	;# 
  1193  0F2D                     	;# 
  1194  0F2E                     	;# 
  1195  0F2F                     	;# 
  1196  0F30                     	;# 
  1197  0F31                     	;# 
  1198  0F32                     	;# 
  1199  0F38                     	;# 
  1200  0F39                     	;# 
  1201  0F3A                     	;# 
  1202  0F3B                     	;# 
  1203  0F3C                     	;# 
  1204  0F3D                     	;# 
  1205  0F3E                     	;# 
  1206  0F3F                     	;# 
  1207  0F40                     	;# 
  1208  0F41                     	;# 
  1209  0F43                     	;# 
  1210  0F44                     	;# 
  1211  0F45                     	;# 
  1212  0F46                     	;# 
  1213  0F47                     	;# 
  1214  0F48                     	;# 
  1215  0F49                     	;# 
  1216  0F4A                     	;# 
  1217  0F4B                     	;# 
  1218  0F4C                     	;# 
  1219  0F4E                     	;# 
  1220  0F4F                     	;# 
  1221  0F50                     	;# 
  1222  0F51                     	;# 
  1223  0F52                     	;# 
  1224  0F53                     	;# 
  1225  0F54                     	;# 
  1226  0F55                     	;# 
  1227  0F56                     	;# 
  1228  0F57                     	;# 
  1229  0F59                     	;# 
  1230  0F5A                     	;# 
  1231  0F5B                     	;# 
  1232  0F5C                     	;# 
  1233  0F5D                     	;# 
  1234  0F61                     	;# 
  1235  0F62                     	;# 
  1236  0F64                     	;# 
  1237  0F65                     	;# 
  1238  0F66                     	;# 
  1239  0F67                     	;# 
  1240  0F68                     	;# 
  1241  0F69                     	;# 
  1242  0F6A                     	;# 
  1243  0F6B                     	;# 
  1244  0F6C                     	;# 
  1245  0F6D                     	;# 
  1246  0FE4                     	;# 
  1247  0FE5                     	;# 
  1248  0FE6                     	;# 
  1249  0FE7                     	;# 
  1250  0FE8                     	;# 
  1251  0FE9                     	;# 
  1252  0FEA                     	;# 
  1253  0FEB                     	;# 
  1254  0FED                     	;# 
  1255  0FEE                     	;# 
  1256  0FEF                     	;# 
  1257  0000                     	;# 
  1258  0001                     	;# 
  1259  0002                     	;# 
  1260  0003                     	;# 
  1261  0004                     	;# 
  1262  0005                     	;# 
  1263  0006                     	;# 
  1264  0007                     	;# 
  1265  0008                     	;# 
  1266  0009                     	;# 
  1267  000A                     	;# 
  1268  000B                     	;# 
  1269  000C                     	;# 
  1270  000D                     	;# 
  1271  000E                     	;# 
  1272  000F                     	;# 
  1273  0010                     	;# 
  1274  0011                     	;# 
  1275  0012                     	;# 
  1276  0013                     	;# 
  1277  0014                     	;# 
  1278  0015                     	;# 
  1279  0016                     	;# 
  1280  0017                     	;# 
  1281  0018                     	;# 
  1282  0019                     	;# 
  1283  001A                     	;# 
  1284  001C                     	;# 
  1285  001C                     	;# 
  1286  001D                     	;# 
  1287  001D                     	;# 
  1288  001E                     	;# 
  1289  001F                     	;# 
  1290  008C                     	;# 
  1291  008C                     	;# 
  1292  008D                     	;# 
  1293  008E                     	;# 
  1294  008E                     	;# 
  1295  008F                     	;# 
  1296  0090                     	;# 
  1297  0090                     	;# 
  1298  0091                     	;# 
  1299  0093                     	;# 
  1300  0094                     	;# 
  1301  0095                     	;# 
  1302  0096                     	;# 
  1303  0097                     	;# 
  1304  0098                     	;# 
  1305  0099                     	;# 
  1306  009A                     	;# 
  1307  009B                     	;# 
  1308  009C                     	;# 
  1309  009D                     	;# 
  1310  009E                     	;# 
  1311  010C                     	;# 
  1312  010D                     	;# 
  1313  010E                     	;# 
  1314  010E                     	;# 
  1315  010F                     	;# 
  1316  0110                     	;# 
  1317  0110                     	;# 
  1318  0111                     	;# 
  1319  0112                     	;# 
  1320  0112                     	;# 
  1321  0113                     	;# 
  1322  0114                     	;# 
  1323  0114                     	;# 
  1324  0115                     	;# 
  1325  0116                     	;# 
  1326  0116                     	;# 
  1327  0117                     	;# 
  1328  0119                     	;# 
  1329  0119                     	;# 
  1330  0119                     	;# 
  1331  011A                     	;# 
  1332  011A                     	;# 
  1333  011A                     	;# 
  1334  011B                     	;# 
  1335  011B                     	;# 
  1336  011B                     	;# 
  1337  011B                     	;# 
  1338  011B                     	;# 
  1339  011C                     	;# 
  1340  011C                     	;# 
  1341  011C                     	;# 
  1342  011D                     	;# 
  1343  011D                     	;# 
  1344  011D                     	;# 
  1345  011E                     	;# 
  1346  011E                     	;# 
  1347  011E                     	;# 
  1348  011F                     	;# 
  1349  011F                     	;# 
  1350  011F                     	;# 
  1351  011F                     	;# 
  1352  011F                     	;# 
  1353  018C                     	;# 
  1354  018D                     	;# 
  1355  018E                     	;# 
  1356  018F                     	;# 
  1357  0190                     	;# 
  1358  0191                     	;# 
  1359  0192                     	;# 
  1360  0196                     	;# 
  1361  0197                     	;# 
  1362  0198                     	;# 
  1363  0199                     	;# 
  1364  019A                     	;# 
  1365  019B                     	;# 
  1366  019C                     	;# 
  1367  020C                     	;# 
  1368  020C                     	;# 
  1369  020D                     	;# 
  1370  020E                     	;# 
  1371  020F                     	;# 
  1372  020F                     	;# 
  1373  0210                     	;# 
  1374  0210                     	;# 
  1375  0211                     	;# 
  1376  0211                     	;# 
  1377  0212                     	;# 
  1378  0212                     	;# 
  1379  0213                     	;# 
  1380  0214                     	;# 
  1381  0215                     	;# 
  1382  0215                     	;# 
  1383  0216                     	;# 
  1384  0216                     	;# 
  1385  0217                     	;# 
  1386  0217                     	;# 
  1387  0218                     	;# 
  1388  0218                     	;# 
  1389  0219                     	;# 
  1390  021A                     	;# 
  1391  021B                     	;# 
  1392  021B                     	;# 
  1393  021C                     	;# 
  1394  021C                     	;# 
  1395  021D                     	;# 
  1396  021D                     	;# 
  1397  021E                     	;# 
  1398  021F                     	;# 
  1399  028C                     	;# 
  1400  028C                     	;# 
  1401  028D                     	;# 
  1402  028D                     	;# 
  1403  028E                     	;# 
  1404  028F                     	;# 
  1405  0290                     	;# 
  1406  0290                     	;# 
  1407  0291                     	;# 
  1408  0292                     	;# 
  1409  0292                     	;# 
  1410  0293                     	;# 
  1411  0293                     	;# 
  1412  0294                     	;# 
  1413  0295                     	;# 
  1414  0296                     	;# 
  1415  0296                     	;# 
  1416  0297                     	;# 
  1417  0298                     	;# 
  1418  0298                     	;# 
  1419  0299                     	;# 
  1420  0299                     	;# 
  1421  029A                     	;# 
  1422  029B                     	;# 
  1423  029C                     	;# 
  1424  029C                     	;# 
  1425  029D                     	;# 
  1426  030C                     	;# 
  1427  030C                     	;# 
  1428  030D                     	;# 
  1429  030E                     	;# 
  1430  030F                     	;# 
  1431  0310                     	;# 
  1432  0310                     	;# 
  1433  0311                     	;# 
  1434  0312                     	;# 
  1435  0313                     	;# 
  1436  0314                     	;# 
  1437  0314                     	;# 
  1438  0315                     	;# 
  1439  0316                     	;# 
  1440  0317                     	;# 
  1441  0318                     	;# 
  1442  0318                     	;# 
  1443  0319                     	;# 
  1444  031A                     	;# 
  1445  031B                     	;# 
  1446  031C                     	;# 
  1447  031C                     	;# 
  1448  031D                     	;# 
  1449  031E                     	;# 
  1450  031F                     	;# 
  1451  038C                     	;# 
  1452  038C                     	;# 
  1453  038D                     	;# 
  1454  038E                     	;# 
  1455  0390                     	;# 
  1456  0390                     	;# 
  1457  0391                     	;# 
  1458  0392                     	;# 
  1459  040C                     	;# 
  1460  040D                     	;# 
  1461  040E                     	;# 
  1462  040F                     	;# 
  1463  0410                     	;# 
  1464  0411                     	;# 
  1465  0416                     	;# 
  1466  0416                     	;# 
  1467  0417                     	;# 
  1468  0418                     	;# 
  1469  0418                     	;# 
  1470  0419                     	;# 
  1471  041A                     	;# 
  1472  041A                     	;# 
  1473  041B                     	;# 
  1474  041C                     	;# 
  1475  041C                     	;# 
  1476  041D                     	;# 
  1477  041E                     	;# 
  1478  041F                     	;# 
  1479  048C                     	;# 
  1480  048C                     	;# 
  1481  048D                     	;# 
  1482  048E                     	;# 
  1483  048F                     	;# 
  1484  048F                     	;# 
  1485  0490                     	;# 
  1486  0491                     	;# 
  1487  0492                     	;# 
  1488  0492                     	;# 
  1489  0493                     	;# 
  1490  0494                     	;# 
  1491  0495                     	;# 
  1492  0495                     	;# 
  1493  0496                     	;# 
  1494  0497                     	;# 
  1495  0498                     	;# 
  1496  0499                     	;# 
  1497  049A                     	;# 
  1498  049B                     	;# 
  1499  049C                     	;# 
  1500  049D                     	;# 
  1501  050C                     	;# 
  1502  050C                     	;# 
  1503  050D                     	;# 
  1504  050E                     	;# 
  1505  050F                     	;# 
  1506  050F                     	;# 
  1507  0510                     	;# 
  1508  0511                     	;# 
  1509  0512                     	;# 
  1510  0512                     	;# 
  1511  0513                     	;# 
  1512  0514                     	;# 
  1513  0515                     	;# 
  1514  0515                     	;# 
  1515  0516                     	;# 
  1516  0517                     	;# 
  1517  0518                     	;# 
  1518  0519                     	;# 
  1519  051A                     	;# 
  1520  051B                     	;# 
  1521  051C                     	;# 
  1522  051D                     	;# 
  1523  058C                     	;# 
  1524  058C                     	;# 
  1525  058D                     	;# 
  1526  058E                     	;# 
  1527  058F                     	;# 
  1528  058F                     	;# 
  1529  0590                     	;# 
  1530  0591                     	;# 
  1531  0592                     	;# 
  1532  0593                     	;# 
  1533  060C                     	;# 
  1534  060D                     	;# 
  1535  060E                     	;# 
  1536  060F                     	;# 
  1537  0610                     	;# 
  1538  0611                     	;# 
  1539  0612                     	;# 
  1540  0613                     	;# 
  1541  0614                     	;# 
  1542  0616                     	;# 
  1543  0617                     	;# 
  1544  0618                     	;# 
  1545  0619                     	;# 
  1546  061A                     	;# 
  1547  061B                     	;# 
  1548  061C                     	;# 
  1549  061D                     	;# 
  1550  061E                     	;# 
  1551  068C                     	;# 
  1552  068D                     	;# 
  1553  068E                     	;# 
  1554  068F                     	;# 
  1555  0690                     	;# 
  1556  0691                     	;# 
  1557  0692                     	;# 
  1558  0693                     	;# 
  1559  0694                     	;# 
  1560  070C                     	;# 
  1561  070D                     	;# 
  1562  070E                     	;# 
  1563  070F                     	;# 
  1564  0710                     	;# 
  1565  0711                     	;# 
  1566  0712                     	;# 
  1567  0713                     	;# 
  1568  0714                     	;# 
  1569  0716                     	;# 
  1570  0717                     	;# 
  1571  0718                     	;# 
  1572  0719                     	;# 
  1573  071A                     	;# 
  1574  071B                     	;# 
  1575  071C                     	;# 
  1576  071D                     	;# 
  1577  071E                     	;# 
  1578  0796                     	;# 
  1579  0797                     	;# 
  1580  0798                     	;# 
  1581  0799                     	;# 
  1582  079A                     	;# 
  1583  079B                     	;# 
  1584  080C                     	;# 
  1585  080D                     	;# 
  1586  080E                     	;# 
  1587  080F                     	;# 
  1588  0810                     	;# 
  1589  0811                     	;# 
  1590  0812                     	;# 
  1591  0813                     	;# 
  1592  0814                     	;# 
  1593  081A                     	;# 
  1594  081B                     	;# 
  1595  081C                     	;# 
  1596  081D                     	;# 
  1597  081E                     	;# 
  1598  081F                     	;# 
  1599  088C                     	;# 
  1600  088D                     	;# 
  1601  088E                     	;# 
  1602  088F                     	;# 
  1603  0890                     	;# 
  1604  0891                     	;# 
  1605  0892                     	;# 
  1606  0893                     	;# 
  1607  0895                     	;# 
  1608  0896                     	;# 
  1609  0897                     	;# 
  1610  0898                     	;# 
  1611  0899                     	;# 
  1612  089A                     	;# 
  1613  089B                     	;# 
  1614  090C                     	;# 
  1615  090E                     	;# 
  1616  090F                     	;# 
  1617  091F                     	;# 
  1618  091F                     	;# 
  1619  098F                     	;# 
  1620  098F                     	;# 
  1621  0990                     	;# 
  1622  0991                     	;# 
  1623  0992                     	;# 
  1624  0993                     	;# 
  1625  0994                     	;# 
  1626  0995                     	;# 
  1627  0996                     	;# 
  1628  0997                     	;# 
  1629  0E0F                     	;# 
  1630  0E10                     	;# 
  1631  0E11                     	;# 
  1632  0E12                     	;# 
  1633  0E13                     	;# 
  1634  0E14                     	;# 
  1635  0E15                     	;# 
  1636  0E16                     	;# 
  1637  0E17                     	;# 
  1638  0E18                     	;# 
  1639  0E19                     	;# 
  1640  0E1A                     	;# 
  1641  0E1B                     	;# 
  1642  0E1C                     	;# 
  1643  0E1D                     	;# 
  1644  0E1E                     	;# 
  1645  0E1F                     	;# 
  1646  0E20                     	;# 
  1647  0E21                     	;# 
  1648  0E22                     	;# 
  1649  0E23                     	;# 
  1650  0E24                     	;# 
  1651  0E25                     	;# 
  1652  0E26                     	;# 
  1653  0E27                     	;# 
  1654  0E28                     	;# 
  1655  0E29                     	;# 
  1656  0E2A                     	;# 
  1657  0E2B                     	;# 
  1658  0E2C                     	;# 
  1659  0E2D                     	;# 
  1660  0E2E                     	;# 
  1661  0E2F                     	;# 
  1662  0E30                     	;# 
  1663  0E31                     	;# 
  1664  0E32                     	;# 
  1665  0E33                     	;# 
  1666  0E34                     	;# 
  1667  0E35                     	;# 
  1668  0E36                     	;# 
  1669  0E37                     	;# 
  1670  0E8F                     	;# 
  1671  0E90                     	;# 
  1672  0E91                     	;# 
  1673  0E92                     	;# 
  1674  0E93                     	;# 
  1675  0E94                     	;# 
  1676  0E95                     	;# 
  1677  0E96                     	;# 
  1678  0E97                     	;# 
  1679  0E9C                     	;# 
  1680  0E9D                     	;# 
  1681  0E9E                     	;# 
  1682  0EA1                     	;# 
  1683  0EA2                     	;# 
  1684  0EA3                     	;# 
  1685  0EA4                     	;# 
  1686  0EA5                     	;# 
  1687  0EA9                     	;# 
  1688  0EAA                     	;# 
  1689  0EAB                     	;# 
  1690  0EAC                     	;# 
  1691  0EB1                     	;# 
  1692  0EB2                     	;# 
  1693  0EB3                     	;# 
  1694  0EB8                     	;# 
  1695  0EB9                     	;# 
  1696  0EBA                     	;# 
  1697  0EBB                     	;# 
  1698  0EBC                     	;# 
  1699  0EBD                     	;# 
  1700  0EBE                     	;# 
  1701  0EC3                     	;# 
  1702  0EC5                     	;# 
  1703  0EC6                     	;# 
  1704  0EC7                     	;# 
  1705  0EC8                     	;# 
  1706  0EC9                     	;# 
  1707  0ECA                     	;# 
  1708  0ECB                     	;# 
  1709  0ECC                     	;# 
  1710  0F10                     	;# 
  1711  0F11                     	;# 
  1712  0F12                     	;# 
  1713  0F13                     	;# 
  1714  0F14                     	;# 
  1715  0F15                     	;# 
  1716  0F16                     	;# 
  1717  0F17                     	;# 
  1718  0F18                     	;# 
  1719  0F19                     	;# 
  1720  0F1A                     	;# 
  1721  0F1B                     	;# 
  1722  0F1C                     	;# 
  1723  0F1D                     	;# 
  1724  0F1E                     	;# 
  1725  0F1F                     	;# 
  1726  0F20                     	;# 
  1727  0F21                     	;# 
  1728  0F22                     	;# 
  1729  0F23                     	;# 
  1730  0F24                     	;# 
  1731  0F25                     	;# 
  1732  0F26                     	;# 
  1733  0F27                     	;# 
  1734  0F28                     	;# 
  1735  0F29                     	;# 
  1736  0F2A                     	;# 
  1737  0F2B                     	;# 
  1738  0F2C                     	;# 
  1739  0F2D                     	;# 
  1740  0F2E                     	;# 
  1741  0F2F                     	;# 
  1742  0F30                     	;# 
  1743  0F31                     	;# 
  1744  0F32                     	;# 
  1745  0F38                     	;# 
  1746  0F39                     	;# 
  1747  0F3A                     	;# 
  1748  0F3B                     	;# 
  1749  0F3C                     	;# 
  1750  0F3D                     	;# 
  1751  0F3E                     	;# 
  1752  0F3F                     	;# 
  1753  0F40                     	;# 
  1754  0F41                     	;# 
  1755  0F43                     	;# 
  1756  0F44                     	;# 
  1757  0F45                     	;# 
  1758  0F46                     	;# 
  1759  0F47                     	;# 
  1760  0F48                     	;# 
  1761  0F49                     	;# 
  1762  0F4A                     	;# 
  1763  0F4B                     	;# 
  1764  0F4C                     	;# 
  1765  0F4E                     	;# 
  1766  0F4F                     	;# 
  1767  0F50                     	;# 
  1768  0F51                     	;# 
  1769  0F52                     	;# 
  1770  0F53                     	;# 
  1771  0F54                     	;# 
  1772  0F55                     	;# 
  1773  0F56                     	;# 
  1774  0F57                     	;# 
  1775  0F59                     	;# 
  1776  0F5A                     	;# 
  1777  0F5B                     	;# 
  1778  0F5C                     	;# 
  1779  0F5D                     	;# 
  1780  0F61                     	;# 
  1781  0F62                     	;# 
  1782  0F64                     	;# 
  1783  0F65                     	;# 
  1784  0F66                     	;# 
  1785  0F67                     	;# 
  1786  0F68                     	;# 
  1787  0F69                     	;# 
  1788  0F6A                     	;# 
  1789  0F6B                     	;# 
  1790  0F6C                     	;# 
  1791  0F6D                     	;# 
  1792  0FE4                     	;# 
  1793  0FE5                     	;# 
  1794  0FE6                     	;# 
  1795  0FE7                     	;# 
  1796  0FE8                     	;# 
  1797  0FE9                     	;# 
  1798  0FEA                     	;# 
  1799  0FEB                     	;# 
  1800  0FED                     	;# 
  1801  0FEE                     	;# 
  1802  0FEF                     	;# 
  1803  0000                     	;# 
  1804  0001                     	;# 
  1805  0002                     	;# 
  1806  0003                     	;# 
  1807  0004                     	;# 
  1808  0005                     	;# 
  1809  0006                     	;# 
  1810  0007                     	;# 
  1811  0008                     	;# 
  1812  0009                     	;# 
  1813  000A                     	;# 
  1814  000B                     	;# 
  1815  000C                     	;# 
  1816  000D                     	;# 
  1817  000E                     	;# 
  1818  000F                     	;# 
  1819  0010                     	;# 
  1820  0011                     	;# 
  1821  0012                     	;# 
  1822  0013                     	;# 
  1823  0014                     	;# 
  1824  0015                     	;# 
  1825  0016                     	;# 
  1826  0017                     	;# 
  1827  0018                     	;# 
  1828  0019                     	;# 
  1829  001A                     	;# 
  1830  001C                     	;# 
  1831  001C                     	;# 
  1832  001D                     	;# 
  1833  001D                     	;# 
  1834  001E                     	;# 
  1835  001F                     	;# 
  1836  008C                     	;# 
  1837  008C                     	;# 
  1838  008D                     	;# 
  1839  008E                     	;# 
  1840  008E                     	;# 
  1841  008F                     	;# 
  1842  0090                     	;# 
  1843  0090                     	;# 
  1844  0091                     	;# 
  1845  0093                     	;# 
  1846  0094                     	;# 
  1847  0095                     	;# 
  1848  0096                     	;# 
  1849  0097                     	;# 
  1850  0098                     	;# 
  1851  0099                     	;# 
  1852  009A                     	;# 
  1853  009B                     	;# 
  1854  009C                     	;# 
  1855  009D                     	;# 
  1856  009E                     	;# 
  1857  010C                     	;# 
  1858  010D                     	;# 
  1859  010E                     	;# 
  1860  010E                     	;# 
  1861  010F                     	;# 
  1862  0110                     	;# 
  1863  0110                     	;# 
  1864  0111                     	;# 
  1865  0112                     	;# 
  1866  0112                     	;# 
  1867  0113                     	;# 
  1868  0114                     	;# 
  1869  0114                     	;# 
  1870  0115                     	;# 
  1871  0116                     	;# 
  1872  0116                     	;# 
  1873  0117                     	;# 
  1874  0119                     	;# 
  1875  0119                     	;# 
  1876  0119                     	;# 
  1877  011A                     	;# 
  1878  011A                     	;# 
  1879  011A                     	;# 
  1880  011B                     	;# 
  1881  011B                     	;# 
  1882  011B                     	;# 
  1883  011B                     	;# 
  1884  011B                     	;# 
  1885  011C                     	;# 
  1886  011C                     	;# 
  1887  011C                     	;# 
  1888  011D                     	;# 
  1889  011D                     	;# 
  1890  011D                     	;# 
  1891  011E                     	;# 
  1892  011E                     	;# 
  1893  011E                     	;# 
  1894  011F                     	;# 
  1895  011F                     	;# 
  1896  011F                     	;# 
  1897  011F                     	;# 
  1898  011F                     	;# 
  1899  018C                     	;# 
  1900  018D                     	;# 
  1901  018E                     	;# 
  1902  018F                     	;# 
  1903  0190                     	;# 
  1904  0191                     	;# 
  1905  0192                     	;# 
  1906  0196                     	;# 
  1907  0197                     	;# 
  1908  0198                     	;# 
  1909  0199                     	;# 
  1910  019A                     	;# 
  1911  019B                     	;# 
  1912  019C                     	;# 
  1913  020C                     	;# 
  1914  020C                     	;# 
  1915  020D                     	;# 
  1916  020E                     	;# 
  1917  020F                     	;# 
  1918  020F                     	;# 
  1919  0210                     	;# 
  1920  0210                     	;# 
  1921  0211                     	;# 
  1922  0211                     	;# 
  1923  0212                     	;# 
  1924  0212                     	;# 
  1925  0213                     	;# 
  1926  0214                     	;# 
  1927  0215                     	;# 
  1928  0215                     	;# 
  1929  0216                     	;# 
  1930  0216                     	;# 
  1931  0217                     	;# 
  1932  0217                     	;# 
  1933  0218                     	;# 
  1934  0218                     	;# 
  1935  0219                     	;# 
  1936  021A                     	;# 
  1937  021B                     	;# 
  1938  021B                     	;# 
  1939  021C                     	;# 
  1940  021C                     	;# 
  1941  021D                     	;# 
  1942  021D                     	;# 
  1943  021E                     	;# 
  1944  021F                     	;# 
  1945  028C                     	;# 
  1946  028C                     	;# 
  1947  028D                     	;# 
  1948  028D                     	;# 
  1949  028E                     	;# 
  1950  028F                     	;# 
  1951  0290                     	;# 
  1952  0290                     	;# 
  1953  0291                     	;# 
  1954  0292                     	;# 
  1955  0292                     	;# 
  1956  0293                     	;# 
  1957  0293                     	;# 
  1958  0294                     	;# 
  1959  0295                     	;# 
  1960  0296                     	;# 
  1961  0296                     	;# 
  1962  0297                     	;# 
  1963  0298                     	;# 
  1964  0298                     	;# 
  1965  0299                     	;# 
  1966  0299                     	;# 
  1967  029A                     	;# 
  1968  029B                     	;# 
  1969  029C                     	;# 
  1970  029C                     	;# 
  1971  029D                     	;# 
  1972  030C                     	;# 
  1973  030C                     	;# 
  1974  030D                     	;# 
  1975  030E                     	;# 
  1976  030F                     	;# 
  1977  0310                     	;# 
  1978  0310                     	;# 
  1979  0311                     	;# 
  1980  0312                     	;# 
  1981  0313                     	;# 
  1982  0314                     	;# 
  1983  0314                     	;# 
  1984  0315                     	;# 
  1985  0316                     	;# 
  1986  0317                     	;# 
  1987  0318                     	;# 
  1988  0318                     	;# 
  1989  0319                     	;# 
  1990  031A                     	;# 
  1991  031B                     	;# 
  1992  031C                     	;# 
  1993  031C                     	;# 
  1994  031D                     	;# 
  1995  031E                     	;# 
  1996  031F                     	;# 
  1997  038C                     	;# 
  1998  038C                     	;# 
  1999  038D                     	;# 
  2000  038E                     	;# 
  2001  0390                     	;# 
  2002  0390                     	;# 
  2003  0391                     	;# 
  2004  0392                     	;# 
  2005  040C                     	;# 
  2006  040D                     	;# 
  2007  040E                     	;# 
  2008  040F                     	;# 
  2009  0410                     	;# 
  2010  0411                     	;# 
  2011  0416                     	;# 
  2012  0416                     	;# 
  2013  0417                     	;# 
  2014  0418                     	;# 
  2015  0418                     	;# 
  2016  0419                     	;# 
  2017  041A                     	;# 
  2018  041A                     	;# 
  2019  041B                     	;# 
  2020  041C                     	;# 
  2021  041C                     	;# 
  2022  041D                     	;# 
  2023  041E                     	;# 
  2024  041F                     	;# 
  2025  048C                     	;# 
  2026  048C                     	;# 
  2027  048D                     	;# 
  2028  048E                     	;# 
  2029  048F                     	;# 
  2030  048F                     	;# 
  2031  0490                     	;# 
  2032  0491                     	;# 
  2033  0492                     	;# 
  2034  0492                     	;# 
  2035  0493                     	;# 
  2036  0494                     	;# 
  2037  0495                     	;# 
  2038  0495                     	;# 
  2039  0496                     	;# 
  2040  0497                     	;# 
  2041  0498                     	;# 
  2042  0499                     	;# 
  2043  049A                     	;# 
  2044  049B                     	;# 
  2045  049C                     	;# 
  2046  049D                     	;# 
  2047  050C                     	;# 
  2048  050C                     	;# 
  2049  050D                     	;# 
  2050  050E                     	;# 
  2051  050F                     	;# 
  2052  050F                     	;# 
  2053  0510                     	;# 
  2054  0511                     	;# 
  2055  0512                     	;# 
  2056  0512                     	;# 
  2057  0513                     	;# 
  2058  0514                     	;# 
  2059  0515                     	;# 
  2060  0515                     	;# 
  2061  0516                     	;# 
  2062  0517                     	;# 
  2063  0518                     	;# 
  2064  0519                     	;# 
  2065  051A                     	;# 
  2066  051B                     	;# 
  2067  051C                     	;# 
  2068  051D                     	;# 
  2069  058C                     	;# 
  2070  058C                     	;# 
  2071  058D                     	;# 
  2072  058E                     	;# 
  2073  058F                     	;# 
  2074  058F                     	;# 
  2075  0590                     	;# 
  2076  0591                     	;# 
  2077  0592                     	;# 
  2078  0593                     	;# 
  2079  060C                     	;# 
  2080  060D                     	;# 
  2081  060E                     	;# 
  2082  060F                     	;# 
  2083  0610                     	;# 
  2084  0611                     	;# 
  2085  0612                     	;# 
  2086  0613                     	;# 
  2087  0614                     	;# 
  2088  0616                     	;# 
  2089  0617                     	;# 
  2090  0618                     	;# 
  2091  0619                     	;# 
  2092  061A                     	;# 
  2093  061B                     	;# 
  2094  061C                     	;# 
  2095  061D                     	;# 
  2096  061E                     	;# 
  2097  068C                     	;# 
  2098  068D                     	;# 
  2099  068E                     	;# 
  2100  068F                     	;# 
  2101  0690                     	;# 
  2102  0691                     	;# 
  2103  0692                     	;# 
  2104  0693                     	;# 
  2105  0694                     	;# 
  2106  070C                     	;# 
  2107  070D                     	;# 
  2108  070E                     	;# 
  2109  070F                     	;# 
  2110  0710                     	;# 
  2111  0711                     	;# 
  2112  0712                     	;# 
  2113  0713                     	;# 
  2114  0714                     	;# 
  2115  0716                     	;# 
  2116  0717                     	;# 
  2117  0718                     	;# 
  2118  0719                     	;# 
  2119  071A                     	;# 
  2120  071B                     	;# 
  2121  071C                     	;# 
  2122  071D                     	;# 
  2123  071E                     	;# 
  2124  0796                     	;# 
  2125  0797                     	;# 
  2126  0798                     	;# 
  2127  0799                     	;# 
  2128  079A                     	;# 
  2129  079B                     	;# 
  2130  080C                     	;# 
  2131  080D                     	;# 
  2132  080E                     	;# 
  2133  080F                     	;# 
  2134  0810                     	;# 
  2135  0811                     	;# 
  2136  0812                     	;# 
  2137  0813                     	;# 
  2138  0814                     	;# 
  2139  081A                     	;# 
  2140  081B                     	;# 
  2141  081C                     	;# 
  2142  081D                     	;# 
  2143  081E                     	;# 
  2144  081F                     	;# 
  2145  088C                     	;# 
  2146  088D                     	;# 
  2147  088E                     	;# 
  2148  088F                     	;# 
  2149  0890                     	;# 
  2150  0891                     	;# 
  2151  0892                     	;# 
  2152  0893                     	;# 
  2153  0895                     	;# 
  2154  0896                     	;# 
  2155  0897                     	;# 
  2156  0898                     	;# 
  2157  0899                     	;# 
  2158  089A                     	;# 
  2159  089B                     	;# 
  2160  090C                     	;# 
  2161  090E                     	;# 
  2162  090F                     	;# 
  2163  091F                     	;# 
  2164  091F                     	;# 
  2165  098F                     	;# 
  2166  098F                     	;# 
  2167  0990                     	;# 
  2168  0991                     	;# 
  2169  0992                     	;# 
  2170  0993                     	;# 
  2171  0994                     	;# 
  2172  0995                     	;# 
  2173  0996                     	;# 
  2174  0997                     	;# 
  2175  0E0F                     	;# 
  2176  0E10                     	;# 
  2177  0E11                     	;# 
  2178  0E12                     	;# 
  2179  0E13                     	;# 
  2180  0E14                     	;# 
  2181  0E15                     	;# 
  2182  0E16                     	;# 
  2183  0E17                     	;# 
  2184  0E18                     	;# 
  2185  0E19                     	;# 
  2186  0E1A                     	;# 
  2187  0E1B                     	;# 
  2188  0E1C                     	;# 
  2189  0E1D                     	;# 
  2190  0E1E                     	;# 
  2191  0E1F                     	;# 
  2192  0E20                     	;# 
  2193  0E21                     	;# 
  2194  0E22                     	;# 
  2195  0E23                     	;# 
  2196  0E24                     	;# 
  2197  0E25                     	;# 
  2198  0E26                     	;# 
  2199  0E27                     	;# 
  2200  0E28                     	;# 
  2201  0E29                     	;# 
  2202  0E2A                     	;# 
  2203  0E2B                     	;# 
  2204  0E2C                     	;# 
  2205  0E2D                     	;# 
  2206  0E2E                     	;# 
  2207  0E2F                     	;# 
  2208  0E30                     	;# 
  2209  0E31                     	;# 
  2210  0E32                     	;# 
  2211  0E33                     	;# 
  2212  0E34                     	;# 
  2213  0E35                     	;# 
  2214  0E36                     	;# 
  2215  0E37                     	;# 
  2216  0E8F                     	;# 
  2217  0E90                     	;# 
  2218  0E91                     	;# 
  2219  0E92                     	;# 
  2220  0E93                     	;# 
  2221  0E94                     	;# 
  2222  0E95                     	;# 
  2223  0E96                     	;# 
  2224  0E97                     	;# 
  2225  0E9C                     	;# 
  2226  0E9D                     	;# 
  2227  0E9E                     	;# 
  2228  0EA1                     	;# 
  2229  0EA2                     	;# 
  2230  0EA3                     	;# 
  2231  0EA4                     	;# 
  2232  0EA5                     	;# 
  2233  0EA9                     	;# 
  2234  0EAA                     	;# 
  2235  0EAB                     	;# 
  2236  0EAC                     	;# 
  2237  0EB1                     	;# 
  2238  0EB2                     	;# 
  2239  0EB3                     	;# 
  2240  0EB8                     	;# 
  2241  0EB9                     	;# 
  2242  0EBA                     	;# 
  2243  0EBB                     	;# 
  2244  0EBC                     	;# 
  2245  0EBD                     	;# 
  2246  0EBE                     	;# 
  2247  0EC3                     	;# 
  2248  0EC5                     	;# 
  2249  0EC6                     	;# 
  2250  0EC7                     	;# 
  2251  0EC8                     	;# 
  2252  0EC9                     	;# 
  2253  0ECA                     	;# 
  2254  0ECB                     	;# 
  2255  0ECC                     	;# 
  2256  0F10                     	;# 
  2257  0F11                     	;# 
  2258  0F12                     	;# 
  2259  0F13                     	;# 
  2260  0F14                     	;# 
  2261  0F15                     	;# 
  2262  0F16                     	;# 
  2263  0F17                     	;# 
  2264  0F18                     	;# 
  2265  0F19                     	;# 
  2266  0F1A                     	;# 
  2267  0F1B                     	;# 
  2268  0F1C                     	;# 
  2269  0F1D                     	;# 
  2270  0F1E                     	;# 
  2271  0F1F                     	;# 
  2272  0F20                     	;# 
  2273  0F21                     	;# 
  2274  0F22                     	;# 
  2275  0F23                     	;# 
  2276  0F24                     	;# 
  2277  0F25                     	;# 
  2278  0F26                     	;# 
  2279  0F27                     	;# 
  2280  0F28                     	;# 
  2281  0F29                     	;# 
  2282  0F2A                     	;# 
  2283  0F2B                     	;# 
  2284  0F2C                     	;# 
  2285  0F2D                     	;# 
  2286  0F2E                     	;# 
  2287  0F2F                     	;# 
  2288  0F30                     	;# 
  2289  0F31                     	;# 
  2290  0F32                     	;# 
  2291  0F38                     	;# 
  2292  0F39                     	;# 
  2293  0F3A                     	;# 
  2294  0F3B                     	;# 
  2295  0F3C                     	;# 
  2296  0F3D                     	;# 
  2297  0F3E                     	;# 
  2298  0F3F                     	;# 
  2299  0F40                     	;# 
  2300  0F41                     	;# 
  2301  0F43                     	;# 
  2302  0F44                     	;# 
  2303  0F45                     	;# 
  2304  0F46                     	;# 
  2305  0F47                     	;# 
  2306  0F48                     	;# 
  2307  0F49                     	;# 
  2308  0F4A                     	;# 
  2309  0F4B                     	;# 
  2310  0F4C                     	;# 
  2311  0F4E                     	;# 
  2312  0F4F                     	;# 
  2313  0F50                     	;# 
  2314  0F51                     	;# 
  2315  0F52                     	;# 
  2316  0F53                     	;# 
  2317  0F54                     	;# 
  2318  0F55                     	;# 
  2319  0F56                     	;# 
  2320  0F57                     	;# 
  2321  0F59                     	;# 
  2322  0F5A                     	;# 
  2323  0F5B                     	;# 
  2324  0F5C                     	;# 
  2325  0F5D                     	;# 
  2326  0F61                     	;# 
  2327  0F62                     	;# 
  2328  0F64                     	;# 
  2329  0F65                     	;# 
  2330  0F66                     	;# 
  2331  0F67                     	;# 
  2332  0F68                     	;# 
  2333  0F69                     	;# 
  2334  0F6A                     	;# 
  2335  0F6B                     	;# 
  2336  0F6C                     	;# 
  2337  0F6D                     	;# 
  2338  0FE4                     	;# 
  2339  0FE5                     	;# 
  2340  0FE6                     	;# 
  2341  0FE7                     	;# 
  2342  0FE8                     	;# 
  2343  0FE9                     	;# 
  2344  0FEA                     	;# 
  2345  0FEB                     	;# 
  2346  0FED                     	;# 
  2347  0FEE                     	;# 
  2348  0FEF                     	;# 
  2349  0000                     	;# 
  2350  0001                     	;# 
  2351  0002                     	;# 
  2352  0003                     	;# 
  2353  0004                     	;# 
  2354  0005                     	;# 
  2355  0006                     	;# 
  2356  0007                     	;# 
  2357  0008                     	;# 
  2358  0009                     	;# 
  2359  000A                     	;# 
  2360  000B                     	;# 
  2361  000C                     	;# 
  2362  000D                     	;# 
  2363  000E                     	;# 
  2364  000F                     	;# 
  2365  0010                     	;# 
  2366  0011                     	;# 
  2367  0012                     	;# 
  2368  0013                     	;# 
  2369  0014                     	;# 
  2370  0015                     	;# 
  2371  0016                     	;# 
  2372  0017                     	;# 
  2373  0018                     	;# 
  2374  0019                     	;# 
  2375  001A                     	;# 
  2376  001C                     	;# 
  2377  001C                     	;# 
  2378  001D                     	;# 
  2379  001D                     	;# 
  2380  001E                     	;# 
  2381  001F                     	;# 
  2382  008C                     	;# 
  2383  008C                     	;# 
  2384  008D                     	;# 
  2385  008E                     	;# 
  2386  008E                     	;# 
  2387  008F                     	;# 
  2388  0090                     	;# 
  2389  0090                     	;# 
  2390  0091                     	;# 
  2391  0093                     	;# 
  2392  0094                     	;# 
  2393  0095                     	;# 
  2394  0096                     	;# 
  2395  0097                     	;# 
  2396  0098                     	;# 
  2397  0099                     	;# 
  2398  009A                     	;# 
  2399  009B                     	;# 
  2400  009C                     	;# 
  2401  009D                     	;# 
  2402  009E                     	;# 
  2403  010C                     	;# 
  2404  010D                     	;# 
  2405  010E                     	;# 
  2406  010E                     	;# 
  2407  010F                     	;# 
  2408  0110                     	;# 
  2409  0110                     	;# 
  2410  0111                     	;# 
  2411  0112                     	;# 
  2412  0112                     	;# 
  2413  0113                     	;# 
  2414  0114                     	;# 
  2415  0114                     	;# 
  2416  0115                     	;# 
  2417  0116                     	;# 
  2418  0116                     	;# 
  2419  0117                     	;# 
  2420  0119                     	;# 
  2421  0119                     	;# 
  2422  0119                     	;# 
  2423  011A                     	;# 
  2424  011A                     	;# 
  2425  011A                     	;# 
  2426  011B                     	;# 
  2427  011B                     	;# 
  2428  011B                     	;# 
  2429  011B                     	;# 
  2430  011B                     	;# 
  2431  011C                     	;# 
  2432  011C                     	;# 
  2433  011C                     	;# 
  2434  011D                     	;# 
  2435  011D                     	;# 
  2436  011D                     	;# 
  2437  011E                     	;# 
  2438  011E                     	;# 
  2439  011E                     	;# 
  2440  011F                     	;# 
  2441  011F                     	;# 
  2442  011F                     	;# 
  2443  011F                     	;# 
  2444  011F                     	;# 
  2445  018C                     	;# 
  2446  018D                     	;# 
  2447  018E                     	;# 
  2448  018F                     	;# 
  2449  0190                     	;# 
  2450  0191                     	;# 
  2451  0192                     	;# 
  2452  0196                     	;# 
  2453  0197                     	;# 
  2454  0198                     	;# 
  2455  0199                     	;# 
  2456  019A                     	;# 
  2457  019B                     	;# 
  2458  019C                     	;# 
  2459  020C                     	;# 
  2460  020C                     	;# 
  2461  020D                     	;# 
  2462  020E                     	;# 
  2463  020F                     	;# 
  2464  020F                     	;# 
  2465  0210                     	;# 
  2466  0210                     	;# 
  2467  0211                     	;# 
  2468  0211                     	;# 
  2469  0212                     	;# 
  2470  0212                     	;# 
  2471  0213                     	;# 
  2472  0214                     	;# 
  2473  0215                     	;# 
  2474  0215                     	;# 
  2475  0216                     	;# 
  2476  0216                     	;# 
  2477  0217                     	;# 
  2478  0217                     	;# 
  2479  0218                     	;# 
  2480  0218                     	;# 
  2481  0219                     	;# 
  2482  021A                     	;# 
  2483  021B                     	;# 
  2484  021B                     	;# 
  2485  021C                     	;# 
  2486  021C                     	;# 
  2487  021D                     	;# 
  2488  021D                     	;# 
  2489  021E                     	;# 
  2490  021F                     	;# 
  2491  028C                     	;# 
  2492  028C                     	;# 
  2493  028D                     	;# 
  2494  028D                     	;# 
  2495  028E                     	;# 
  2496  028F                     	;# 
  2497  0290                     	;# 
  2498  0290                     	;# 
  2499  0291                     	;# 
  2500  0292                     	;# 
  2501  0292                     	;# 
  2502  0293                     	;# 
  2503  0293                     	;# 
  2504  0294                     	;# 
  2505  0295                     	;# 
  2506  0296                     	;# 
  2507  0296                     	;# 
  2508  0297                     	;# 
  2509  0298                     	;# 
  2510  0298                     	;# 
  2511  0299                     	;# 
  2512  0299                     	;# 
  2513  029A                     	;# 
  2514  029B                     	;# 
  2515  029C                     	;# 
  2516  029C                     	;# 
  2517  029D                     	;# 
  2518  030C                     	;# 
  2519  030C                     	;# 
  2520  030D                     	;# 
  2521  030E                     	;# 
  2522  030F                     	;# 
  2523  0310                     	;# 
  2524  0310                     	;# 
  2525  0311                     	;# 
  2526  0312                     	;# 
  2527  0313                     	;# 
  2528  0314                     	;# 
  2529  0314                     	;# 
  2530  0315                     	;# 
  2531  0316                     	;# 
  2532  0317                     	;# 
  2533  0318                     	;# 
  2534  0318                     	;# 
  2535  0319                     	;# 
  2536  031A                     	;# 
  2537  031B                     	;# 
  2538  031C                     	;# 
  2539  031C                     	;# 
  2540  031D                     	;# 
  2541  031E                     	;# 
  2542  031F                     	;# 
  2543  038C                     	;# 
  2544  038C                     	;# 
  2545  038D                     	;# 
  2546  038E                     	;# 
  2547  0390                     	;# 
  2548  0390                     	;# 
  2549  0391                     	;# 
  2550  0392                     	;# 
  2551  040C                     	;# 
  2552  040D                     	;# 
  2553  040E                     	;# 
  2554  040F                     	;# 
  2555  0410                     	;# 
  2556  0411                     	;# 
  2557  0416                     	;# 
  2558  0416                     	;# 
  2559  0417                     	;# 
  2560  0418                     	;# 
  2561  0418                     	;# 
  2562  0419                     	;# 
  2563  041A                     	;# 
  2564  041A                     	;# 
  2565  041B                     	;# 
  2566  041C                     	;# 
  2567  041C                     	;# 
  2568  041D                     	;# 
  2569  041E                     	;# 
  2570  041F                     	;# 
  2571  048C                     	;# 
  2572  048C                     	;# 
  2573  048D                     	;# 
  2574  048E                     	;# 
  2575  048F                     	;# 
  2576  048F                     	;# 
  2577  0490                     	;# 
  2578  0491                     	;# 
  2579  0492                     	;# 
  2580  0492                     	;# 
  2581  0493                     	;# 
  2582  0494                     	;# 
  2583  0495                     	;# 
  2584  0495                     	;# 
  2585  0496                     	;# 
  2586  0497                     	;# 
  2587  0498                     	;# 
  2588  0499                     	;# 
  2589  049A                     	;# 
  2590  049B                     	;# 
  2591  049C                     	;# 
  2592  049D                     	;# 
  2593  050C                     	;# 
  2594  050C                     	;# 
  2595  050D                     	;# 
  2596  050E                     	;# 
  2597  050F                     	;# 
  2598  050F                     	;# 
  2599  0510                     	;# 
  2600  0511                     	;# 
  2601  0512                     	;# 
  2602  0512                     	;# 
  2603  0513                     	;# 
  2604  0514                     	;# 
  2605  0515                     	;# 
  2606  0515                     	;# 
  2607  0516                     	;# 
  2608  0517                     	;# 
  2609  0518                     	;# 
  2610  0519                     	;# 
  2611  051A                     	;# 
  2612  051B                     	;# 
  2613  051C                     	;# 
  2614  051D                     	;# 
  2615  058C                     	;# 
  2616  058C                     	;# 
  2617  058D                     	;# 
  2618  058E                     	;# 
  2619  058F                     	;# 
  2620  058F                     	;# 
  2621  0590                     	;# 
  2622  0591                     	;# 
  2623  0592                     	;# 
  2624  0593                     	;# 
  2625  060C                     	;# 
  2626  060D                     	;# 
  2627  060E                     	;# 
  2628  060F                     	;# 
  2629  0610                     	;# 
  2630  0611                     	;# 
  2631  0612                     	;# 
  2632  0613                     	;# 
  2633  0614                     	;# 
  2634  0616                     	;# 
  2635  0617                     	;# 
  2636  0618                     	;# 
  2637  0619                     	;# 
  2638  061A                     	;# 
  2639  061B                     	;# 
  2640  061C                     	;# 
  2641  061D                     	;# 
  2642  061E                     	;# 
  2643  068C                     	;# 
  2644  068D                     	;# 
  2645  068E                     	;# 
  2646  068F                     	;# 
  2647  0690                     	;# 
  2648  0691                     	;# 
  2649  0692                     	;# 
  2650  0693                     	;# 
  2651  0694                     	;# 
  2652  070C                     	;# 
  2653  070D                     	;# 
  2654  070E                     	;# 
  2655  070F                     	;# 
  2656  0710                     	;# 
  2657  0711                     	;# 
  2658  0712                     	;# 
  2659  0713                     	;# 
  2660  0714                     	;# 
  2661  0716                     	;# 
  2662  0717                     	;# 
  2663  0718                     	;# 
  2664  0719                     	;# 
  2665  071A                     	;# 
  2666  071B                     	;# 
  2667  071C                     	;# 
  2668  071D                     	;# 
  2669  071E                     	;# 
  2670  0796                     	;# 
  2671  0797                     	;# 
  2672  0798                     	;# 
  2673  0799                     	;# 
  2674  079A                     	;# 
  2675  079B                     	;# 
  2676  080C                     	;# 
  2677  080D                     	;# 
  2678  080E                     	;# 
  2679  080F                     	;# 
  2680  0810                     	;# 
  2681  0811                     	;# 
  2682  0812                     	;# 
  2683  0813                     	;# 
  2684  0814                     	;# 
  2685  081A                     	;# 
  2686  081B                     	;# 
  2687  081C                     	;# 
  2688  081D                     	;# 
  2689  081E                     	;# 
  2690  081F                     	;# 
  2691  088C                     	;# 
  2692  088D                     	;# 
  2693  088E                     	;# 
  2694  088F                     	;# 
  2695  0890                     	;# 
  2696  0891                     	;# 
  2697  0892                     	;# 
  2698  0893                     	;# 
  2699  0895                     	;# 
  2700  0896                     	;# 
  2701  0897                     	;# 
  2702  0898                     	;# 
  2703  0899                     	;# 
  2704  089A                     	;# 
  2705  089B                     	;# 
  2706  090C                     	;# 
  2707  090E                     	;# 
  2708  090F                     	;# 
  2709  091F                     	;# 
  2710  091F                     	;# 
  2711  098F                     	;# 
  2712  098F                     	;# 
  2713  0990                     	;# 
  2714  0991                     	;# 
  2715  0992                     	;# 
  2716  0993                     	;# 
  2717  0994                     	;# 
  2718  0995                     	;# 
  2719  0996                     	;# 
  2720  0997                     	;# 
  2721  0E0F                     	;# 
  2722  0E10                     	;# 
  2723  0E11                     	;# 
  2724  0E12                     	;# 
  2725  0E13                     	;# 
  2726  0E14                     	;# 
  2727  0E15                     	;# 
  2728  0E16                     	;# 
  2729  0E17                     	;# 
  2730  0E18                     	;# 
  2731  0E19                     	;# 
  2732  0E1A                     	;# 
  2733  0E1B                     	;# 
  2734  0E1C                     	;# 
  2735  0E1D                     	;# 
  2736  0E1E                     	;# 
  2737  0E1F                     	;# 
  2738  0E20                     	;# 
  2739  0E21                     	;# 
  2740  0E22                     	;# 
  2741  0E23                     	;# 
  2742  0E24                     	;# 
  2743  0E25                     	;# 
  2744  0E26                     	;# 
  2745  0E27                     	;# 
  2746  0E28                     	;# 
  2747  0E29                     	;# 
  2748  0E2A                     	;# 
  2749  0E2B                     	;# 
  2750  0E2C                     	;# 
  2751  0E2D                     	;# 
  2752  0E2E                     	;# 
  2753  0E2F                     	;# 
  2754  0E30                     	;# 
  2755  0E31                     	;# 
  2756  0E32                     	;# 
  2757  0E33                     	;# 
  2758  0E34                     	;# 
  2759  0E35                     	;# 
  2760  0E36                     	;# 
  2761  0E37                     	;# 
  2762  0E8F                     	;# 
  2763  0E90                     	;# 
  2764  0E91                     	;# 
  2765  0E92                     	;# 
  2766  0E93                     	;# 
  2767  0E94                     	;# 
  2768  0E95                     	;# 
  2769  0E96                     	;# 
  2770  0E97                     	;# 
  2771  0E9C                     	;# 
  2772  0E9D                     	;# 
  2773  0E9E                     	;# 
  2774  0EA1                     	;# 
  2775  0EA2                     	;# 
  2776  0EA3                     	;# 
  2777  0EA4                     	;# 
  2778  0EA5                     	;# 
  2779  0EA9                     	;# 
  2780  0EAA                     	;# 
  2781  0EAB                     	;# 
  2782  0EAC                     	;# 
  2783  0EB1                     	;# 
  2784  0EB2                     	;# 
  2785  0EB3                     	;# 
  2786  0EB8                     	;# 
  2787  0EB9                     	;# 
  2788  0EBA                     	;# 
  2789  0EBB                     	;# 
  2790  0EBC                     	;# 
  2791  0EBD                     	;# 
  2792  0EBE                     	;# 
  2793  0EC3                     	;# 
  2794  0EC5                     	;# 
  2795  0EC6                     	;# 
  2796  0EC7                     	;# 
  2797  0EC8                     	;# 
  2798  0EC9                     	;# 
  2799  0ECA                     	;# 
  2800  0ECB                     	;# 
  2801  0ECC                     	;# 
  2802  0F10                     	;# 
  2803  0F11                     	;# 
  2804  0F12                     	;# 
  2805  0F13                     	;# 
  2806  0F14                     	;# 
  2807  0F15                     	;# 
  2808  0F16                     	;# 
  2809  0F17                     	;# 
  2810  0F18                     	;# 
  2811  0F19                     	;# 
  2812  0F1A                     	;# 
  2813  0F1B                     	;# 
  2814  0F1C                     	;# 
  2815  0F1D                     	;# 
  2816  0F1E                     	;# 
  2817  0F1F                     	;# 
  2818  0F20                     	;# 
  2819  0F21                     	;# 
  2820  0F22                     	;# 
  2821  0F23                     	;# 
  2822  0F24                     	;# 
  2823  0F25                     	;# 
  2824  0F26                     	;# 
  2825  0F27                     	;# 
  2826  0F28                     	;# 
  2827  0F29                     	;# 
  2828  0F2A                     	;# 
  2829  0F2B                     	;# 
  2830  0F2C                     	;# 
  2831  0F2D                     	;# 
  2832  0F2E                     	;# 
  2833  0F2F                     	;# 
  2834  0F30                     	;# 
  2835  0F31                     	;# 
  2836  0F32                     	;# 
  2837  0F38                     	;# 
  2838  0F39                     	;# 
  2839  0F3A                     	;# 
  2840  0F3B                     	;# 
  2841  0F3C                     	;# 
  2842  0F3D                     	;# 
  2843  0F3E                     	;# 
  2844  0F3F                     	;# 
  2845  0F40                     	;# 
  2846  0F41                     	;# 
  2847  0F43                     	;# 
  2848  0F44                     	;# 
  2849  0F45                     	;# 
  2850  0F46                     	;# 
  2851  0F47                     	;# 
  2852  0F48                     	;# 
  2853  0F49                     	;# 
  2854  0F4A                     	;# 
  2855  0F4B                     	;# 
  2856  0F4C                     	;# 
  2857  0F4E                     	;# 
  2858  0F4F                     	;# 
  2859  0F50                     	;# 
  2860  0F51                     	;# 
  2861  0F52                     	;# 
  2862  0F53                     	;# 
  2863  0F54                     	;# 
  2864  0F55                     	;# 
  2865  0F56                     	;# 
  2866  0F57                     	;# 
  2867  0F59                     	;# 
  2868  0F5A                     	;# 
  2869  0F5B                     	;# 
  2870  0F5C                     	;# 
  2871  0F5D                     	;# 
  2872  0F61                     	;# 
  2873  0F62                     	;# 
  2874  0F64                     	;# 
  2875  0F65                     	;# 
  2876  0F66                     	;# 
  2877  0F67                     	;# 
  2878  0F68                     	;# 
  2879  0F69                     	;# 
  2880  0F6A                     	;# 
  2881  0F6B                     	;# 
  2882  0F6C                     	;# 
  2883  0F6D                     	;# 
  2884  0FE4                     	;# 
  2885  0FE5                     	;# 
  2886  0FE6                     	;# 
  2887  0FE7                     	;# 
  2888  0FE8                     	;# 
  2889  0FE9                     	;# 
  2890  0FEA                     	;# 
  2891  0FEB                     	;# 
  2892  0FED                     	;# 
  2893  0FEE                     	;# 
  2894  0FEF                     	;# 
  2895  0000                     	;# 
  2896  0001                     	;# 
  2897  0002                     	;# 
  2898  0003                     	;# 
  2899  0004                     	;# 
  2900  0005                     	;# 
  2901  0006                     	;# 
  2902  0007                     	;# 
  2903  0008                     	;# 
  2904  0009                     	;# 
  2905  000A                     	;# 
  2906  000B                     	;# 
  2907  000C                     	;# 
  2908  000D                     	;# 
  2909  000E                     	;# 
  2910  000F                     	;# 
  2911  0010                     	;# 
  2912  0011                     	;# 
  2913  0012                     	;# 
  2914  0013                     	;# 
  2915  0014                     	;# 
  2916  0015                     	;# 
  2917  0016                     	;# 
  2918  0017                     	;# 
  2919  0018                     	;# 
  2920  0019                     	;# 
  2921  001A                     	;# 
  2922  001C                     	;# 
  2923  001C                     	;# 
  2924  001D                     	;# 
  2925  001D                     	;# 
  2926  001E                     	;# 
  2927  001F                     	;# 
  2928  008C                     	;# 
  2929  008C                     	;# 
  2930  008D                     	;# 
  2931  008E                     	;# 
  2932  008E                     	;# 
  2933  008F                     	;# 
  2934  0090                     	;# 
  2935  0090                     	;# 
  2936  0091                     	;# 
  2937  0093                     	;# 
  2938  0094                     	;# 
  2939  0095                     	;# 
  2940  0096                     	;# 
  2941  0097                     	;# 
  2942  0098                     	;# 
  2943  0099                     	;# 
  2944  009A                     	;# 
  2945  009B                     	;# 
  2946  009C                     	;# 
  2947  009D                     	;# 
  2948  009E                     	;# 
  2949  010C                     	;# 
  2950  010D                     	;# 
  2951  010E                     	;# 
  2952  010E                     	;# 
  2953  010F                     	;# 
  2954  0110                     	;# 
  2955  0110                     	;# 
  2956  0111                     	;# 
  2957  0112                     	;# 
  2958  0112                     	;# 
  2959  0113                     	;# 
  2960  0114                     	;# 
  2961  0114                     	;# 
  2962  0115                     	;# 
  2963  0116                     	;# 
  2964  0116                     	;# 
  2965  0117                     	;# 
  2966  0119                     	;# 
  2967  0119                     	;# 
  2968  0119                     	;# 
  2969  011A                     	;# 
  2970  011A                     	;# 
  2971  011A                     	;# 
  2972  011B                     	;# 
  2973  011B                     	;# 
  2974  011B                     	;# 
  2975  011B                     	;# 
  2976  011B                     	;# 
  2977  011C                     	;# 
  2978  011C                     	;# 
  2979  011C                     	;# 
  2980  011D                     	;# 
  2981  011D                     	;# 
  2982  011D                     	;# 
  2983  011E                     	;# 
  2984  011E                     	;# 
  2985  011E                     	;# 
  2986  011F                     	;# 
  2987  011F                     	;# 
  2988  011F                     	;# 
  2989  011F                     	;# 
  2990  011F                     	;# 
  2991  018C                     	;# 
  2992  018D                     	;# 
  2993  018E                     	;# 
  2994  018F                     	;# 
  2995  0190                     	;# 
  2996  0191                     	;# 
  2997  0192                     	;# 
  2998  0196                     	;# 
  2999  0197                     	;# 
  3000  0198                     	;# 
  3001  0199                     	;# 
  3002  019A                     	;# 
  3003  019B                     	;# 
  3004  019C                     	;# 
  3005  020C                     	;# 
  3006  020C                     	;# 
  3007  020D                     	;# 
  3008  020E                     	;# 
  3009  020F                     	;# 
  3010  020F                     	;# 
  3011  0210                     	;# 
  3012  0210                     	;# 
  3013  0211                     	;# 
  3014  0211                     	;# 
  3015  0212                     	;# 
  3016  0212                     	;# 
  3017  0213                     	;# 
  3018  0214                     	;# 
  3019  0215                     	;# 
  3020  0215                     	;# 
  3021  0216                     	;# 
  3022  0216                     	;# 
  3023  0217                     	;# 
  3024  0217                     	;# 
  3025  0218                     	;# 
  3026  0218                     	;# 
  3027  0219                     	;# 
  3028  021A                     	;# 
  3029  021B                     	;# 
  3030  021B                     	;# 
  3031  021C                     	;# 
  3032  021C                     	;# 
  3033  021D                     	;# 
  3034  021D                     	;# 
  3035  021E                     	;# 
  3036  021F                     	;# 
  3037  028C                     	;# 
  3038  028C                     	;# 
  3039  028D                     	;# 
  3040  028D                     	;# 
  3041  028E                     	;# 
  3042  028F                     	;# 
  3043  0290                     	;# 
  3044  0290                     	;# 
  3045  0291                     	;# 
  3046  0292                     	;# 
  3047  0292                     	;# 
  3048  0293                     	;# 
  3049  0293                     	;# 
  3050  0294                     	;# 
  3051  0295                     	;# 
  3052  0296                     	;# 
  3053  0296                     	;# 
  3054  0297                     	;# 
  3055  0298                     	;# 
  3056  0298                     	;# 
  3057  0299                     	;# 
  3058  0299                     	;# 
  3059  029A                     	;# 
  3060  029B                     	;# 
  3061  029C                     	;# 
  3062  029C                     	;# 
  3063  029D                     	;# 
  3064  030C                     	;# 
  3065  030C                     	;# 
  3066  030D                     	;# 
  3067  030E                     	;# 
  3068  030F                     	;# 
  3069  0310                     	;# 
  3070  0310                     	;# 
  3071  0311                     	;# 
  3072  0312                     	;# 
  3073  0313                     	;# 
  3074  0314                     	;# 
  3075  0314                     	;# 
  3076  0315                     	;# 
  3077  0316                     	;# 
  3078  0317                     	;# 
  3079  0318                     	;# 
  3080  0318                     	;# 
  3081  0319                     	;# 
  3082  031A                     	;# 
  3083  031B                     	;# 
  3084  031C                     	;# 
  3085  031C                     	;# 
  3086  031D                     	;# 
  3087  031E                     	;# 
  3088  031F                     	;# 
  3089  038C                     	;# 
  3090  038C                     	;# 
  3091  038D                     	;# 
  3092  038E                     	;# 
  3093  0390                     	;# 
  3094  0390                     	;# 
  3095  0391                     	;# 
  3096  0392                     	;# 
  3097  040C                     	;# 
  3098  040D                     	;# 
  3099  040E                     	;# 
  3100  040F                     	;# 
  3101  0410                     	;# 
  3102  0411                     	;# 
  3103  0416                     	;# 
  3104  0416                     	;# 
  3105  0417                     	;# 
  3106  0418                     	;# 
  3107  0418                     	;# 
  3108  0419                     	;# 
  3109  041A                     	;# 
  3110  041A                     	;# 
  3111  041B                     	;# 
  3112  041C                     	;# 
  3113  041C                     	;# 
  3114  041D                     	;# 
  3115  041E                     	;# 
  3116  041F                     	;# 
  3117  048C                     	;# 
  3118  048C                     	;# 
  3119  048D                     	;# 
  3120  048E                     	;# 
  3121  048F                     	;# 
  3122  048F                     	;# 
  3123  0490                     	;# 
  3124  0491                     	;# 
  3125  0492                     	;# 
  3126  0492                     	;# 
  3127  0493                     	;# 
  3128  0494                     	;# 
  3129  0495                     	;# 
  3130  0495                     	;# 
  3131  0496                     	;# 
  3132  0497                     	;# 
  3133  0498                     	;# 
  3134  0499                     	;# 
  3135  049A                     	;# 
  3136  049B                     	;# 
  3137  049C                     	;# 
  3138  049D                     	;# 
  3139  050C                     	;# 
  3140  050C                     	;# 
  3141  050D                     	;# 
  3142  050E                     	;# 
  3143  050F                     	;# 
  3144  050F                     	;# 
  3145  0510                     	;# 
  3146  0511                     	;# 
  3147  0512                     	;# 
  3148  0512                     	;# 
  3149  0513                     	;# 
  3150  0514                     	;# 
  3151  0515                     	;# 
  3152  0515                     	;# 
  3153  0516                     	;# 
  3154  0517                     	;# 
  3155  0518                     	;# 
  3156  0519                     	;# 
  3157  051A                     	;# 
  3158  051B                     	;# 
  3159  051C                     	;# 
  3160  051D                     	;# 
  3161  058C                     	;# 
  3162  058C                     	;# 
  3163  058D                     	;# 
  3164  058E                     	;# 
  3165  058F                     	;# 
  3166  058F                     	;# 
  3167  0590                     	;# 
  3168  0591                     	;# 
  3169  0592                     	;# 
  3170  0593                     	;# 
  3171  060C                     	;# 
  3172  060D                     	;# 
  3173  060E                     	;# 
  3174  060F                     	;# 
  3175  0610                     	;# 
  3176  0611                     	;# 
  3177  0612                     	;# 
  3178  0613                     	;# 
  3179  0614                     	;# 
  3180  0616                     	;# 
  3181  0617                     	;# 
  3182  0618                     	;# 
  3183  0619                     	;# 
  3184  061A                     	;# 
  3185  061B                     	;# 
  3186  061C                     	;# 
  3187  061D                     	;# 
  3188  061E                     	;# 
  3189  068C                     	;# 
  3190  068D                     	;# 
  3191  068E                     	;# 
  3192  068F                     	;# 
  3193  0690                     	;# 
  3194  0691                     	;# 
  3195  0692                     	;# 
  3196  0693                     	;# 
  3197  0694                     	;# 
  3198  070C                     	;# 
  3199  070D                     	;# 
  3200  070E                     	;# 
  3201  070F                     	;# 
  3202  0710                     	;# 
  3203  0711                     	;# 
  3204  0712                     	;# 
  3205  0713                     	;# 
  3206  0714                     	;# 
  3207  0716                     	;# 
  3208  0717                     	;# 
  3209  0718                     	;# 
  3210  0719                     	;# 
  3211  071A                     	;# 
  3212  071B                     	;# 
  3213  071C                     	;# 
  3214  071D                     	;# 
  3215  071E                     	;# 
  3216  0796                     	;# 
  3217  0797                     	;# 
  3218  0798                     	;# 
  3219  0799                     	;# 
  3220  079A                     	;# 
  3221  079B                     	;# 
  3222  080C                     	;# 
  3223  080D                     	;# 
  3224  080E                     	;# 
  3225  080F                     	;# 
  3226  0810                     	;# 
  3227  0811                     	;# 
  3228  0812                     	;# 
  3229  0813                     	;# 
  3230  0814                     	;# 
  3231  081A                     	;# 
  3232  081B                     	;# 
  3233  081C                     	;# 
  3234  081D                     	;# 
  3235  081E                     	;# 
  3236  081F                     	;# 
  3237  088C                     	;# 
  3238  088D                     	;# 
  3239  088E                     	;# 
  3240  088F                     	;# 
  3241  0890                     	;# 
  3242  0891                     	;# 
  3243  0892                     	;# 
  3244  0893                     	;# 
  3245  0895                     	;# 
  3246  0896                     	;# 
  3247  0897                     	;# 
  3248  0898                     	;# 
  3249  0899                     	;# 
  3250  089A                     	;# 
  3251  089B                     	;# 
  3252  090C                     	;# 
  3253  090E                     	;# 
  3254  090F                     	;# 
  3255  091F                     	;# 
  3256  091F                     	;# 
  3257  098F                     	;# 
  3258  098F                     	;# 
  3259  0990                     	;# 
  3260  0991                     	;# 
  3261  0992                     	;# 
  3262  0993                     	;# 
  3263  0994                     	;# 
  3264  0995                     	;# 
  3265  0996                     	;# 
  3266  0997                     	;# 
  3267  0E0F                     	;# 
  3268  0E10                     	;# 
  3269  0E11                     	;# 
  3270  0E12                     	;# 
  3271  0E13                     	;# 
  3272  0E14                     	;# 
  3273  0E15                     	;# 
  3274  0E16                     	;# 
  3275  0E17                     	;# 
  3276  0E18                     	;# 
  3277  0E19                     	;# 
  3278  0E1A                     	;# 
  3279  0E1B                     	;# 
  3280  0E1C                     	;# 
  3281  0E1D                     	;# 
  3282  0E1E                     	;# 
  3283  0E1F                     	;# 
  3284  0E20                     	;# 
  3285  0E21                     	;# 
  3286  0E22                     	;# 
  3287  0E23                     	;# 
  3288  0E24                     	;# 
  3289  0E25                     	;# 
  3290  0E26                     	;# 
  3291  0E27                     	;# 
  3292  0E28                     	;# 
  3293  0E29                     	;# 
  3294  0E2A                     	;# 
  3295  0E2B                     	;# 
  3296  0E2C                     	;# 
  3297  0E2D                     	;# 
  3298  0E2E                     	;# 
  3299  0E2F                     	;# 
  3300  0E30                     	;# 
  3301  0E31                     	;# 
  3302  0E32                     	;# 
  3303  0E33                     	;# 
  3304  0E34                     	;# 
  3305  0E35                     	;# 
  3306  0E36                     	;# 
  3307  0E37                     	;# 
  3308  0E8F                     	;# 
  3309  0E90                     	;# 
  3310  0E91                     	;# 
  3311  0E92                     	;# 
  3312  0E93                     	;# 
  3313  0E94                     	;# 
  3314  0E95                     	;# 
  3315  0E96                     	;# 
  3316  0E97                     	;# 
  3317  0E9C                     	;# 
  3318  0E9D                     	;# 
  3319  0E9E                     	;# 
  3320  0EA1                     	;# 
  3321  0EA2                     	;# 
  3322  0EA3                     	;# 
  3323  0EA4                     	;# 
  3324  0EA5                     	;# 
  3325  0EA9                     	;# 
  3326  0EAA                     	;# 
  3327  0EAB                     	;# 
  3328  0EAC                     	;# 
  3329  0EB1                     	;# 
  3330  0EB2                     	;# 
  3331  0EB3                     	;# 
  3332  0EB8                     	;# 
  3333  0EB9                     	;# 
  3334  0EBA                     	;# 
  3335  0EBB                     	;# 
  3336  0EBC                     	;# 
  3337  0EBD                     	;# 
  3338  0EBE                     	;# 
  3339  0EC3                     	;# 
  3340  0EC5                     	;# 
  3341  0EC6                     	;# 
  3342  0EC7                     	;# 
  3343  0EC8                     	;# 
  3344  0EC9                     	;# 
  3345  0ECA                     	;# 
  3346  0ECB                     	;# 
  3347  0ECC                     	;# 
  3348  0F10                     	;# 
  3349  0F11                     	;# 
  3350  0F12                     	;# 
  3351  0F13                     	;# 
  3352  0F14                     	;# 
  3353  0F15                     	;# 
  3354  0F16                     	;# 
  3355  0F17                     	;# 
  3356  0F18                     	;# 
  3357  0F19                     	;# 
  3358  0F1A                     	;# 
  3359  0F1B                     	;# 
  3360  0F1C                     	;# 
  3361  0F1D                     	;# 
  3362  0F1E                     	;# 
  3363  0F1F                     	;# 
  3364  0F20                     	;# 
  3365  0F21                     	;# 
  3366  0F22                     	;# 
  3367  0F23                     	;# 
  3368  0F24                     	;# 
  3369  0F25                     	;# 
  3370  0F26                     	;# 
  3371  0F27                     	;# 
  3372  0F28                     	;# 
  3373  0F29                     	;# 
  3374  0F2A                     	;# 
  3375  0F2B                     	;# 
  3376  0F2C                     	;# 
  3377  0F2D                     	;# 
  3378  0F2E                     	;# 
  3379  0F2F                     	;# 
  3380  0F30                     	;# 
  3381  0F31                     	;# 
  3382  0F32                     	;# 
  3383  0F38                     	;# 
  3384  0F39                     	;# 
  3385  0F3A                     	;# 
  3386  0F3B                     	;# 
  3387  0F3C                     	;# 
  3388  0F3D                     	;# 
  3389  0F3E                     	;# 
  3390  0F3F                     	;# 
  3391  0F40                     	;# 
  3392  0F41                     	;# 
  3393  0F43                     	;# 
  3394  0F44                     	;# 
  3395  0F45                     	;# 
  3396  0F46                     	;# 
  3397  0F47                     	;# 
  3398  0F48                     	;# 
  3399  0F49                     	;# 
  3400  0F4A                     	;# 
  3401  0F4B                     	;# 
  3402  0F4C                     	;# 
  3403  0F4E                     	;# 
  3404  0F4F                     	;# 
  3405  0F50                     	;# 
  3406  0F51                     	;# 
  3407  0F52                     	;# 
  3408  0F53                     	;# 
  3409  0F54                     	;# 
  3410  0F55                     	;# 
  3411  0F56                     	;# 
  3412  0F57                     	;# 
  3413  0F59                     	;# 
  3414  0F5A                     	;# 
  3415  0F5B                     	;# 
  3416  0F5C                     	;# 
  3417  0F5D                     	;# 
  3418  0F61                     	;# 
  3419  0F62                     	;# 
  3420  0F64                     	;# 
  3421  0F65                     	;# 
  3422  0F66                     	;# 
  3423  0F67                     	;# 
  3424  0F68                     	;# 
  3425  0F69                     	;# 
  3426  0F6A                     	;# 
  3427  0F6B                     	;# 
  3428  0F6C                     	;# 
  3429  0F6D                     	;# 
  3430  0FE4                     	;# 
  3431  0FE5                     	;# 
  3432  0FE6                     	;# 
  3433  0FE7                     	;# 
  3434  0FE8                     	;# 
  3435  0FE9                     	;# 
  3436  0FEA                     	;# 
  3437  0FEB                     	;# 
  3438  0FED                     	;# 
  3439  0FEE                     	;# 
  3440  0FEF                     	;# 
  3441  0000                     	;# 
  3442  0001                     	;# 
  3443  0002                     	;# 
  3444  0003                     	;# 
  3445  0004                     	;# 
  3446  0005                     	;# 
  3447  0006                     	;# 
  3448  0007                     	;# 
  3449  0008                     	;# 
  3450  0009                     	;# 
  3451  000A                     	;# 
  3452  000B                     	;# 
  3453  000C                     	;# 
  3454  000D                     	;# 
  3455  000E                     	;# 
  3456  000F                     	;# 
  3457  0010                     	;# 
  3458  0011                     	;# 
  3459  0012                     	;# 
  3460  0013                     	;# 
  3461  0014                     	;# 
  3462  0015                     	;# 
  3463  0016                     	;# 
  3464  0017                     	;# 
  3465  0018                     	;# 
  3466  0019                     	;# 
  3467  001A                     	;# 
  3468  001C                     	;# 
  3469  001C                     	;# 
  3470  001D                     	;# 
  3471  001D                     	;# 
  3472  001E                     	;# 
  3473  001F                     	;# 
  3474  008C                     	;# 
  3475  008C                     	;# 
  3476  008D                     	;# 
  3477  008E                     	;# 
  3478  008E                     	;# 
  3479  008F                     	;# 
  3480  0090                     	;# 
  3481  0090                     	;# 
  3482  0091                     	;# 
  3483  0093                     	;# 
  3484  0094                     	;# 
  3485  0095                     	;# 
  3486  0096                     	;# 
  3487  0097                     	;# 
  3488  0098                     	;# 
  3489  0099                     	;# 
  3490  009A                     	;# 
  3491  009B                     	;# 
  3492  009C                     	;# 
  3493  009D                     	;# 
  3494  009E                     	;# 
  3495  010C                     	;# 
  3496  010D                     	;# 
  3497  010E                     	;# 
  3498  010E                     	;# 
  3499  010F                     	;# 
  3500  0110                     	;# 
  3501  0110                     	;# 
  3502  0111                     	;# 
  3503  0112                     	;# 
  3504  0112                     	;# 
  3505  0113                     	;# 
  3506  0114                     	;# 
  3507  0114                     	;# 
  3508  0115                     	;# 
  3509  0116                     	;# 
  3510  0116                     	;# 
  3511  0117                     	;# 
  3512  0119                     	;# 
  3513  0119                     	;# 
  3514  0119                     	;# 
  3515  011A                     	;# 
  3516  011A                     	;# 
  3517  011A                     	;# 
  3518  011B                     	;# 
  3519  011B                     	;# 
  3520  011B                     	;# 
  3521  011B                     	;# 
  3522  011B                     	;# 
  3523  011C                     	;# 
  3524  011C                     	;# 
  3525  011C                     	;# 
  3526  011D                     	;# 
  3527  011D                     	;# 
  3528  011D                     	;# 
  3529  011E                     	;# 
  3530  011E                     	;# 
  3531  011E                     	;# 
  3532  011F                     	;# 
  3533  011F                     	;# 
  3534  011F                     	;# 
  3535  011F                     	;# 
  3536  011F                     	;# 
  3537  018C                     	;# 
  3538  018D                     	;# 
  3539  018E                     	;# 
  3540  018F                     	;# 
  3541  0190                     	;# 
  3542  0191                     	;# 
  3543  0192                     	;# 
  3544  0196                     	;# 
  3545  0197                     	;# 
  3546  0198                     	;# 
  3547  0199                     	;# 
  3548  019A                     	;# 
  3549  019B                     	;# 
  3550  019C                     	;# 
  3551  020C                     	;# 
  3552  020C                     	;# 
  3553  020D                     	;# 
  3554  020E                     	;# 
  3555  020F                     	;# 
  3556  020F                     	;# 
  3557  0210                     	;# 
  3558  0210                     	;# 
  3559  0211                     	;# 
  3560  0211                     	;# 
  3561  0212                     	;# 
  3562  0212                     	;# 
  3563  0213                     	;# 
  3564  0214                     	;# 
  3565  0215                     	;# 
  3566  0215                     	;# 
  3567  0216                     	;# 
  3568  0216                     	;# 
  3569  0217                     	;# 
  3570  0217                     	;# 
  3571  0218                     	;# 
  3572  0218                     	;# 
  3573  0219                     	;# 
  3574  021A                     	;# 
  3575  021B                     	;# 
  3576  021B                     	;# 
  3577  021C                     	;# 
  3578  021C                     	;# 
  3579  021D                     	;# 
  3580  021D                     	;# 
  3581  021E                     	;# 
  3582  021F                     	;# 
  3583  028C                     	;# 
  3584  028C                     	;# 
  3585  028D                     	;# 
  3586  028D                     	;# 
  3587  028E                     	;# 
  3588  028F                     	;# 
  3589  0290                     	;# 
  3590  0290                     	;# 
  3591  0291                     	;# 
  3592  0292                     	;# 
  3593  0292                     	;# 
  3594  0293                     	;# 
  3595  0293                     	;# 
  3596  0294                     	;# 
  3597  0295                     	;# 
  3598  0296                     	;# 
  3599  0296                     	;# 
  3600  0297                     	;# 
  3601  0298                     	;# 
  3602  0298                     	;# 
  3603  0299                     	;# 
  3604  0299                     	;# 
  3605  029A                     	;# 
  3606  029B                     	;# 
  3607  029C                     	;# 
  3608  029C                     	;# 
  3609  029D                     	;# 
  3610  030C                     	;# 
  3611  030C                     	;# 
  3612  030D                     	;# 
  3613  030E                     	;# 
  3614  030F                     	;# 
  3615  0310                     	;# 
  3616  0310                     	;# 
  3617  0311                     	;# 
  3618  0312                     	;# 
  3619  0313                     	;# 
  3620  0314                     	;# 
  3621  0314                     	;# 
  3622  0315                     	;# 
  3623  0316                     	;# 
  3624  0317                     	;# 
  3625  0318                     	;# 
  3626  0318                     	;# 
  3627  0319                     	;# 
  3628  031A                     	;# 
  3629  031B                     	;# 
  3630  031C                     	;# 
  3631  031C                     	;# 
  3632  031D                     	;# 
  3633  031E                     	;# 
  3634  031F                     	;# 
  3635  038C                     	;# 
  3636  038C                     	;# 
  3637  038D                     	;# 
  3638  038E                     	;# 
  3639  0390                     	;# 
  3640  0390                     	;# 
  3641  0391                     	;# 
  3642  0392                     	;# 
  3643  040C                     	;# 
  3644  040D                     	;# 
  3645  040E                     	;# 
  3646  040F                     	;# 
  3647  0410                     	;# 
  3648  0411                     	;# 
  3649  0416                     	;# 
  3650  0416                     	;# 
  3651  0417                     	;# 
  3652  0418                     	;# 
  3653  0418                     	;# 
  3654  0419                     	;# 
  3655  041A                     	;# 
  3656  041A                     	;# 
  3657  041B                     	;# 
  3658  041C                     	;# 
  3659  041C                     	;# 
  3660  041D                     	;# 
  3661  041E                     	;# 
  3662  041F                     	;# 
  3663  048C                     	;# 
  3664  048C                     	;# 
  3665  048D                     	;# 
  3666  048E                     	;# 
  3667  048F                     	;# 
  3668  048F                     	;# 
  3669  0490                     	;# 
  3670  0491                     	;# 
  3671  0492                     	;# 
  3672  0492                     	;# 
  3673  0493                     	;# 
  3674  0494                     	;# 
  3675  0495                     	;# 
  3676  0495                     	;# 
  3677  0496                     	;# 
  3678  0497                     	;# 
  3679  0498                     	;# 
  3680  0499                     	;# 
  3681  049A                     	;# 
  3682  049B                     	;# 
  3683  049C                     	;# 
  3684  049D                     	;# 
  3685  050C                     	;# 
  3686  050C                     	;# 
  3687  050D                     	;# 
  3688  050E                     	;# 
  3689  050F                     	;# 
  3690  050F                     	;# 
  3691  0510                     	;# 
  3692  0511                     	;# 
  3693  0512                     	;# 
  3694  0512                     	;# 
  3695  0513                     	;# 
  3696  0514                     	;# 
  3697  0515                     	;# 
  3698  0515                     	;# 
  3699  0516                     	;# 
  3700  0517                     	;# 
  3701  0518                     	;# 
  3702  0519                     	;# 
  3703  051A                     	;# 
  3704  051B                     	;# 
  3705  051C                     	;# 
  3706  051D                     	;# 
  3707  058C                     	;# 
  3708  058C                     	;# 
  3709  058D                     	;# 
  3710  058E                     	;# 
  3711  058F                     	;# 
  3712  058F                     	;# 
  3713  0590                     	;# 
  3714  0591                     	;# 
  3715  0592                     	;# 
  3716  0593                     	;# 
  3717  060C                     	;# 
  3718  060D                     	;# 
  3719  060E                     	;# 
  3720  060F                     	;# 
  3721  0610                     	;# 
  3722  0611                     	;# 
  3723  0612                     	;# 
  3724  0613                     	;# 
  3725  0614                     	;# 
  3726  0616                     	;# 
  3727  0617                     	;# 
  3728  0618                     	;# 
  3729  0619                     	;# 
  3730  061A                     	;# 
  3731  061B                     	;# 
  3732  061C                     	;# 
  3733  061D                     	;# 
  3734  061E                     	;# 
  3735  068C                     	;# 
  3736  068D                     	;# 
  3737  068E                     	;# 
  3738  068F                     	;# 
  3739  0690                     	;# 
  3740  0691                     	;# 
  3741  0692                     	;# 
  3742  0693                     	;# 
  3743  0694                     	;# 
  3744  070C                     	;# 
  3745  070D                     	;# 
  3746  070E                     	;# 
  3747  070F                     	;# 
  3748  0710                     	;# 
  3749  0711                     	;# 
  3750  0712                     	;# 
  3751  0713                     	;# 
  3752  0714                     	;# 
  3753  0716                     	;# 
  3754  0717                     	;# 
  3755  0718                     	;# 
  3756  0719                     	;# 
  3757  071A                     	;# 
  3758  071B                     	;# 
  3759  071C                     	;# 
  3760  071D                     	;# 
  3761  071E                     	;# 
  3762  0796                     	;# 
  3763  0797                     	;# 
  3764  0798                     	;# 
  3765  0799                     	;# 
  3766  079A                     	;# 
  3767  079B                     	;# 
  3768  080C                     	;# 
  3769  080D                     	;# 
  3770  080E                     	;# 
  3771  080F                     	;# 
  3772  0810                     	;# 
  3773  0811                     	;# 
  3774  0812                     	;# 
  3775  0813                     	;# 
  3776  0814                     	;# 
  3777  081A                     	;# 
  3778  081B                     	;# 
  3779  081C                     	;# 
  3780  081D                     	;# 
  3781  081E                     	;# 
  3782  081F                     	;# 
  3783  088C                     	;# 
  3784  088D                     	;# 
  3785  088E                     	;# 
  3786  088F                     	;# 
  3787  0890                     	;# 
  3788  0891                     	;# 
  3789  0892                     	;# 
  3790  0893                     	;# 
  3791  0895                     	;# 
  3792  0896                     	;# 
  3793  0897                     	;# 
  3794  0898                     	;# 
  3795  0899                     	;# 
  3796  089A                     	;# 
  3797  089B                     	;# 
  3798  090C                     	;# 
  3799  090E                     	;# 
  3800  090F                     	;# 
  3801  091F                     	;# 
  3802  091F                     	;# 
  3803  098F                     	;# 
  3804  098F                     	;# 
  3805  0990                     	;# 
  3806  0991                     	;# 
  3807  0992                     	;# 
  3808  0993                     	;# 
  3809  0994                     	;# 
  3810  0995                     	;# 
  3811  0996                     	;# 
  3812  0997                     	;# 
  3813  0E0F                     	;# 
  3814  0E10                     	;# 
  3815  0E11                     	;# 
  3816  0E12                     	;# 
  3817  0E13                     	;# 
  3818  0E14                     	;# 
  3819  0E15                     	;# 
  3820  0E16                     	;# 
  3821  0E17                     	;# 
  3822  0E18                     	;# 
  3823  0E19                     	;# 
  3824  0E1A                     	;# 
  3825  0E1B                     	;# 
  3826  0E1C                     	;# 
  3827  0E1D                     	;# 
  3828  0E1E                     	;# 
  3829  0E1F                     	;# 
  3830  0E20                     	;# 
  3831  0E21                     	;# 
  3832  0E22                     	;# 
  3833  0E23                     	;# 
  3834  0E24                     	;# 
  3835  0E25                     	;# 
  3836  0E26                     	;# 
  3837  0E27                     	;# 
  3838  0E28                     	;# 
  3839  0E29                     	;# 
  3840  0E2A                     	;# 
  3841  0E2B                     	;# 
  3842  0E2C                     	;# 
  3843  0E2D                     	;# 
  3844  0E2E                     	;# 
  3845  0E2F                     	;# 
  3846  0E30                     	;# 
  3847  0E31                     	;# 
  3848  0E32                     	;# 
  3849  0E33                     	;# 
  3850  0E34                     	;# 
  3851  0E35                     	;# 
  3852  0E36                     	;# 
  3853  0E37                     	;# 
  3854  0E8F                     	;# 
  3855  0E90                     	;# 
  3856  0E91                     	;# 
  3857  0E92                     	;# 
  3858  0E93                     	;# 
  3859  0E94                     	;# 
  3860  0E95                     	;# 
  3861  0E96                     	;# 
  3862  0E97                     	;# 
  3863  0E9C                     	;# 
  3864  0E9D                     	;# 
  3865  0E9E                     	;# 
  3866  0EA1                     	;# 
  3867  0EA2                     	;# 
  3868  0EA3                     	;# 
  3869  0EA4                     	;# 
  3870  0EA5                     	;# 
  3871  0EA9                     	;# 
  3872  0EAA                     	;# 
  3873  0EAB                     	;# 
  3874  0EAC                     	;# 
  3875  0EB1                     	;# 
  3876  0EB2                     	;# 
  3877  0EB3                     	;# 
  3878  0EB8                     	;# 
  3879  0EB9                     	;# 
  3880  0EBA                     	;# 
  3881  0EBB                     	;# 
  3882  0EBC                     	;# 
  3883  0EBD                     	;# 
  3884  0EBE                     	;# 
  3885  0EC3                     	;# 
  3886  0EC5                     	;# 
  3887  0EC6                     	;# 
  3888  0EC7                     	;# 
  3889  0EC8                     	;# 
  3890  0EC9                     	;# 
  3891  0ECA                     	;# 
  3892  0ECB                     	;# 
  3893  0ECC                     	;# 
  3894  0F10                     	;# 
  3895  0F11                     	;# 
  3896  0F12                     	;# 
  3897  0F13                     	;# 
  3898  0F14                     	;# 
  3899  0F15                     	;# 
  3900  0F16                     	;# 
  3901  0F17                     	;# 
  3902  0F18                     	;# 
  3903  0F19                     	;# 
  3904  0F1A                     	;# 
  3905  0F1B                     	;# 
  3906  0F1C                     	;# 
  3907  0F1D                     	;# 
  3908  0F1E                     	;# 
  3909  0F1F                     	;# 
  3910  0F20                     	;# 
  3911  0F21                     	;# 
  3912  0F22                     	;# 
  3913  0F23                     	;# 
  3914  0F24                     	;# 
  3915  0F25                     	;# 
  3916  0F26                     	;# 
  3917  0F27                     	;# 
  3918  0F28                     	;# 
  3919  0F29                     	;# 
  3920  0F2A                     	;# 
  3921  0F2B                     	;# 
  3922  0F2C                     	;# 
  3923  0F2D                     	;# 
  3924  0F2E                     	;# 
  3925  0F2F                     	;# 
  3926  0F30                     	;# 
  3927  0F31                     	;# 
  3928  0F32                     	;# 
  3929  0F38                     	;# 
  3930  0F39                     	;# 
  3931  0F3A                     	;# 
  3932  0F3B                     	;# 
  3933  0F3C                     	;# 
  3934  0F3D                     	;# 
  3935  0F3E                     	;# 
  3936  0F3F                     	;# 
  3937  0F40                     	;# 
  3938  0F41                     	;# 
  3939  0F43                     	;# 
  3940  0F44                     	;# 
  3941  0F45                     	;# 
  3942  0F46                     	;# 
  3943  0F47                     	;# 
  3944  0F48                     	;# 
  3945  0F49                     	;# 
  3946  0F4A                     	;# 
  3947  0F4B                     	;# 
  3948  0F4C                     	;# 
  3949  0F4E                     	;# 
  3950  0F4F                     	;# 
  3951  0F50                     	;# 
  3952  0F51                     	;# 
  3953  0F52                     	;# 
  3954  0F53                     	;# 
  3955  0F54                     	;# 
  3956  0F55                     	;# 
  3957  0F56                     	;# 
  3958  0F57                     	;# 
  3959  0F59                     	;# 
  3960  0F5A                     	;# 
  3961  0F5B                     	;# 
  3962  0F5C                     	;# 
  3963  0F5D                     	;# 
  3964  0F61                     	;# 
  3965  0F62                     	;# 
  3966  0F64                     	;# 
  3967  0F65                     	;# 
  3968  0F66                     	;# 
  3969  0F67                     	;# 
  3970  0F68                     	;# 
  3971  0F69                     	;# 
  3972  0F6A                     	;# 
  3973  0F6B                     	;# 
  3974  0F6C                     	;# 
  3975  0F6D                     	;# 
  3976  0FE4                     	;# 
  3977  0FE5                     	;# 
  3978  0FE6                     	;# 
  3979  0FE7                     	;# 
  3980  0FE8                     	;# 
  3981  0FE9                     	;# 
  3982  0FEA                     	;# 
  3983  0FEB                     	;# 
  3984  0FED                     	;# 
  3985  0FEE                     	;# 
  3986  0FEF                     	;# 
  3987  0000                     	;# 
  3988  0001                     	;# 
  3989  0002                     	;# 
  3990  0003                     	;# 
  3991  0004                     	;# 
  3992  0005                     	;# 
  3993  0006                     	;# 
  3994  0007                     	;# 
  3995  0008                     	;# 
  3996  0009                     	;# 
  3997  000A                     	;# 
  3998  000B                     	;# 
  3999  000C                     	;# 
  4000  000D                     	;# 
  4001  000E                     	;# 
  4002  000F                     	;# 
  4003  0010                     	;# 
  4004  0011                     	;# 
  4005  0012                     	;# 
  4006  0013                     	;# 
  4007  0014                     	;# 
  4008  0015                     	;# 
  4009  0016                     	;# 
  4010  0017                     	;# 
  4011  0018                     	;# 
  4012  0019                     	;# 
  4013  001A                     	;# 
  4014  001C                     	;# 
  4015  001C                     	;# 
  4016  001D                     	;# 
  4017  001D                     	;# 
  4018  001E                     	;# 
  4019  001F                     	;# 
  4020  008C                     	;# 
  4021  008C                     	;# 
  4022  008D                     	;# 
  4023  008E                     	;# 
  4024  008E                     	;# 
  4025  008F                     	;# 
  4026  0090                     	;# 
  4027  0090                     	;# 
  4028  0091                     	;# 
  4029  0093                     	;# 
  4030  0094                     	;# 
  4031  0095                     	;# 
  4032  0096                     	;# 
  4033  0097                     	;# 
  4034  0098                     	;# 
  4035  0099                     	;# 
  4036  009A                     	;# 
  4037  009B                     	;# 
  4038  009C                     	;# 
  4039  009D                     	;# 
  4040  009E                     	;# 
  4041  010C                     	;# 
  4042  010D                     	;# 
  4043  010E                     	;# 
  4044  010E                     	;# 
  4045  010F                     	;# 
  4046  0110                     	;# 
  4047  0110                     	;# 
  4048  0111                     	;# 
  4049  0112                     	;# 
  4050  0112                     	;# 
  4051  0113                     	;# 
  4052  0114                     	;# 
  4053  0114                     	;# 
  4054  0115                     	;# 
  4055  0116                     	;# 
  4056  0116                     	;# 
  4057  0117                     	;# 
  4058  0119                     	;# 
  4059  0119                     	;# 
  4060  0119                     	;# 
  4061  011A                     	;# 
  4062  011A                     	;# 
  4063  011A                     	;# 
  4064  011B                     	;# 
  4065  011B                     	;# 
  4066  011B                     	;# 
  4067  011B                     	;# 
  4068  011B                     	;# 
  4069  011C                     	;# 
  4070  011C                     	;# 
  4071  011C                     	;# 
  4072  011D                     	;# 
  4073  011D                     	;# 
  4074  011D                     	;# 
  4075  011E                     	;# 
  4076  011E                     	;# 
  4077  011E                     	;# 
  4078  011F                     	;# 
  4079  011F                     	;# 
  4080  011F                     	;# 
  4081  011F                     	;# 
  4082  011F                     	;# 
  4083  018C                     	;# 
  4084  018D                     	;# 
  4085  018E                     	;# 
  4086  018F                     	;# 
  4087  0190                     	;# 
  4088  0191                     	;# 
  4089  0192                     	;# 
  4090  0196                     	;# 
  4091  0197                     	;# 
  4092  0198                     	;# 
  4093  0199                     	;# 
  4094  019A                     	;# 
  4095  019B                     	;# 
  4096  019C                     	;# 
  4097  020C                     	;# 
  4098  020C                     	;# 
  4099  020D                     	;# 
  4100  020E                     	;# 
  4101  020F                     	;# 
  4102  020F                     	;# 
  4103  0210                     	;# 
  4104  0210                     	;# 
  4105  0211                     	;# 
  4106  0211                     	;# 
  4107  0212                     	;# 
  4108  0212                     	;# 
  4109  0213                     	;# 
  4110  0214                     	;# 
  4111  0215                     	;# 
  4112  0215                     	;# 
  4113  0216                     	;# 
  4114  0216                     	;# 
  4115  0217                     	;# 
  4116  0217                     	;# 
  4117  0218                     	;# 
  4118  0218                     	;# 
  4119  0219                     	;# 
  4120  021A                     	;# 
  4121  021B                     	;# 
  4122  021B                     	;# 
  4123  021C                     	;# 
  4124  021C                     	;# 
  4125  021D                     	;# 
  4126  021D                     	;# 
  4127  021E                     	;# 
  4128  021F                     	;# 
  4129  028C                     	;# 
  4130  028C                     	;# 
  4131  028D                     	;# 
  4132  028D                     	;# 
  4133  028E                     	;# 
  4134  028F                     	;# 
  4135  0290                     	;# 
  4136  0290                     	;# 
  4137  0291                     	;# 
  4138  0292                     	;# 
  4139  0292                     	;# 
  4140  0293                     	;# 
  4141  0293                     	;# 
  4142  0294                     	;# 
  4143  0295                     	;# 
  4144  0296                     	;# 
  4145  0296                     	;# 
  4146  0297                     	;# 
  4147  0298                     	;# 
  4148  0298                     	;# 
  4149  0299                     	;# 
  4150  0299                     	;# 
  4151  029A                     	;# 
  4152  029B                     	;# 
  4153  029C                     	;# 
  4154  029C                     	;# 
  4155  029D                     	;# 
  4156  030C                     	;# 
  4157  030C                     	;# 
  4158  030D                     	;# 
  4159  030E                     	;# 
  4160  030F                     	;# 
  4161  0310                     	;# 
  4162  0310                     	;# 
  4163  0311                     	;# 
  4164  0312                     	;# 
  4165  0313                     	;# 
  4166  0314                     	;# 
  4167  0314                     	;# 
  4168  0315                     	;# 
  4169  0316                     	;# 
  4170  0317                     	;# 
  4171  0318                     	;# 
  4172  0318                     	;# 
  4173  0319                     	;# 
  4174  031A                     	;# 
  4175  031B                     	;# 
  4176  031C                     	;# 
  4177  031C                     	;# 
  4178  031D                     	;# 
  4179  031E                     	;# 
  4180  031F                     	;# 
  4181  038C                     	;# 
  4182  038C                     	;# 
  4183  038D                     	;# 
  4184  038E                     	;# 
  4185  0390                     	;# 
  4186  0390                     	;# 
  4187  0391                     	;# 
  4188  0392                     	;# 
  4189  040C                     	;# 
  4190  040D                     	;# 
  4191  040E                     	;# 
  4192  040F                     	;# 
  4193  0410                     	;# 
  4194  0411                     	;# 
  4195  0416                     	;# 
  4196  0416                     	;# 
  4197  0417                     	;# 
  4198  0418                     	;# 
  4199  0418                     	;# 
  4200  0419                     	;# 
  4201  041A                     	;# 
  4202  041A                     	;# 
  4203  041B                     	;# 
  4204  041C                     	;# 
  4205  041C                     	;# 
  4206  041D                     	;# 
  4207  041E                     	;# 
  4208  041F                     	;# 
  4209  048C                     	;# 
  4210  048C                     	;# 
  4211  048D                     	;# 
  4212  048E                     	;# 
  4213  048F                     	;# 
  4214  048F                     	;# 
  4215  0490                     	;# 
  4216  0491                     	;# 
  4217  0492                     	;# 
  4218  0492                     	;# 
  4219  0493                     	;# 
  4220  0494                     	;# 
  4221  0495                     	;# 
  4222  0495                     	;# 
  4223  0496                     	;# 
  4224  0497                     	;# 
  4225  0498                     	;# 
  4226  0499                     	;# 
  4227  049A                     	;# 
  4228  049B                     	;# 
  4229  049C                     	;# 
  4230  049D                     	;# 
  4231  050C                     	;# 
  4232  050C                     	;# 
  4233  050D                     	;# 
  4234  050E                     	;# 
  4235  050F                     	;# 
  4236  050F                     	;# 
  4237  0510                     	;# 
  4238  0511                     	;# 
  4239  0512                     	;# 
  4240  0512                     	;# 
  4241  0513                     	;# 
  4242  0514                     	;# 
  4243  0515                     	;# 
  4244  0515                     	;# 
  4245  0516                     	;# 
  4246  0517                     	;# 
  4247  0518                     	;# 
  4248  0519                     	;# 
  4249  051A                     	;# 
  4250  051B                     	;# 
  4251  051C                     	;# 
  4252  051D                     	;# 
  4253  058C                     	;# 
  4254  058C                     	;# 
  4255  058D                     	;# 
  4256  058E                     	;# 
  4257  058F                     	;# 
  4258  058F                     	;# 
  4259  0590                     	;# 
  4260  0591                     	;# 
  4261  0592                     	;# 
  4262  0593                     	;# 
  4263  060C                     	;# 
  4264  060D                     	;# 
  4265  060E                     	;# 
  4266  060F                     	;# 
  4267  0610                     	;# 
  4268  0611                     	;# 
  4269  0612                     	;# 
  4270  0613                     	;# 
  4271  0614                     	;# 
  4272  0616                     	;# 
  4273  0617                     	;# 
  4274  0618                     	;# 
  4275  0619                     	;# 
  4276  061A                     	;# 
  4277  061B                     	;# 
  4278  061C                     	;# 
  4279  061D                     	;# 
  4280  061E                     	;# 
  4281  068C                     	;# 
  4282  068D                     	;# 
  4283  068E                     	;# 
  4284  068F                     	;# 
  4285  0690                     	;# 
  4286  0691                     	;# 
  4287  0692                     	;# 
  4288  0693                     	;# 
  4289  0694                     	;# 
  4290  070C                     	;# 
  4291  070D                     	;# 
  4292  070E                     	;# 
  4293  070F                     	;# 
  4294  0710                     	;# 
  4295  0711                     	;# 
  4296  0712                     	;# 
  4297  0713                     	;# 
  4298  0714                     	;# 
  4299  0716                     	;# 
  4300  0717                     	;# 
  4301  0718                     	;# 
  4302  0719                     	;# 
  4303  071A                     	;# 
  4304  071B                     	;# 
  4305  071C                     	;# 
  4306  071D                     	;# 
  4307  071E                     	;# 
  4308  0796                     	;# 
  4309  0797                     	;# 
  4310  0798                     	;# 
  4311  0799                     	;# 
  4312  079A                     	;# 
  4313  079B                     	;# 
  4314  080C                     	;# 
  4315  080D                     	;# 
  4316  080E                     	;# 
  4317  080F                     	;# 
  4318  0810                     	;# 
  4319  0811                     	;# 
  4320  0812                     	;# 
  4321  0813                     	;# 
  4322  0814                     	;# 
  4323  081A                     	;# 
  4324  081B                     	;# 
  4325  081C                     	;# 
  4326  081D                     	;# 
  4327  081E                     	;# 
  4328  081F                     	;# 
  4329  088C                     	;# 
  4330  088D                     	;# 
  4331  088E                     	;# 
  4332  088F                     	;# 
  4333  0890                     	;# 
  4334  0891                     	;# 
  4335  0892                     	;# 
  4336  0893                     	;# 
  4337  0895                     	;# 
  4338  0896                     	;# 
  4339  0897                     	;# 
  4340  0898                     	;# 
  4341  0899                     	;# 
  4342  089A                     	;# 
  4343  089B                     	;# 
  4344  090C                     	;# 
  4345  090E                     	;# 
  4346  090F                     	;# 
  4347  091F                     	;# 
  4348  091F                     	;# 
  4349  098F                     	;# 
  4350  098F                     	;# 
  4351  0990                     	;# 
  4352  0991                     	;# 
  4353  0992                     	;# 
  4354  0993                     	;# 
  4355  0994                     	;# 
  4356  0995                     	;# 
  4357  0996                     	;# 
  4358  0997                     	;# 
  4359  0E0F                     	;# 
  4360  0E10                     	;# 
  4361  0E11                     	;# 
  4362  0E12                     	;# 
  4363  0E13                     	;# 
  4364  0E14                     	;# 
  4365  0E15                     	;# 
  4366  0E16                     	;# 
  4367  0E17                     	;# 
  4368  0E18                     	;# 
  4369  0E19                     	;# 
  4370  0E1A                     	;# 
  4371  0E1B                     	;# 
  4372  0E1C                     	;# 
  4373  0E1D                     	;# 
  4374  0E1E                     	;# 
  4375  0E1F                     	;# 
  4376  0E20                     	;# 
  4377  0E21                     	;# 
  4378  0E22                     	;# 
  4379  0E23                     	;# 
  4380  0E24                     	;# 
  4381  0E25                     	;# 
  4382  0E26                     	;# 
  4383  0E27                     	;# 
  4384  0E28                     	;# 
  4385  0E29                     	;# 
  4386  0E2A                     	;# 
  4387  0E2B                     	;# 
  4388  0E2C                     	;# 
  4389  0E2D                     	;# 
  4390  0E2E                     	;# 
  4391  0E2F                     	;# 
  4392  0E30                     	;# 
  4393  0E31                     	;# 
  4394  0E32                     	;# 
  4395  0E33                     	;# 
  4396  0E34                     	;# 
  4397  0E35                     	;# 
  4398  0E36                     	;# 
  4399  0E37                     	;# 
  4400  0E8F                     	;# 
  4401  0E90                     	;# 
  4402  0E91                     	;# 
  4403  0E92                     	;# 
  4404  0E93                     	;# 
  4405  0E94                     	;# 
  4406  0E95                     	;# 
  4407  0E96                     	;# 
  4408  0E97                     	;# 
  4409  0E9C                     	;# 
  4410  0E9D                     	;# 
  4411  0E9E                     	;# 
  4412  0EA1                     	;# 
  4413  0EA2                     	;# 
  4414  0EA3                     	;# 
  4415  0EA4                     	;# 
  4416  0EA5                     	;# 
  4417  0EA9                     	;# 
  4418  0EAA                     	;# 
  4419  0EAB                     	;# 
  4420  0EAC                     	;# 
  4421  0EB1                     	;# 
  4422  0EB2                     	;# 
  4423  0EB3                     	;# 
  4424  0EB8                     	;# 
  4425  0EB9                     	;# 
  4426  0EBA                     	;# 
  4427  0EBB                     	;# 
  4428  0EBC                     	;# 
  4429  0EBD                     	;# 
  4430  0EBE                     	;# 
  4431  0EC3                     	;# 
  4432  0EC5                     	;# 
  4433  0EC6                     	;# 
  4434  0EC7                     	;# 
  4435  0EC8                     	;# 
  4436  0EC9                     	;# 
  4437  0ECA                     	;# 
  4438  0ECB                     	;# 
  4439  0ECC                     	;# 
  4440  0F10                     	;# 
  4441  0F11                     	;# 
  4442  0F12                     	;# 
  4443  0F13                     	;# 
  4444  0F14                     	;# 
  4445  0F15                     	;# 
  4446  0F16                     	;# 
  4447  0F17                     	;# 
  4448  0F18                     	;# 
  4449  0F19                     	;# 
  4450  0F1A                     	;# 
  4451  0F1B                     	;# 
  4452  0F1C                     	;# 
  4453  0F1D                     	;# 
  4454  0F1E                     	;# 
  4455  0F1F                     	;# 
  4456  0F20                     	;# 
  4457  0F21                     	;# 
  4458  0F22                     	;# 
  4459  0F23                     	;# 
  4460  0F24                     	;# 
  4461  0F25                     	;# 
  4462  0F26                     	;# 
  4463  0F27                     	;# 
  4464  0F28                     	;# 
  4465  0F29                     	;# 
  4466  0F2A                     	;# 
  4467  0F2B                     	;# 
  4468  0F2C                     	;# 
  4469  0F2D                     	;# 
  4470  0F2E                     	;# 
  4471  0F2F                     	;# 
  4472  0F30                     	;# 
  4473  0F31                     	;# 
  4474  0F32                     	;# 
  4475  0F38                     	;# 
  4476  0F39                     	;# 
  4477  0F3A                     	;# 
  4478  0F3B                     	;# 
  4479  0F3C                     	;# 
  4480  0F3D                     	;# 
  4481  0F3E                     	;# 
  4482  0F3F                     	;# 
  4483  0F40                     	;# 
  4484  0F41                     	;# 
  4485  0F43                     	;# 
  4486  0F44                     	;# 
  4487  0F45                     	;# 
  4488  0F46                     	;# 
  4489  0F47                     	;# 
  4490  0F48                     	;# 
  4491  0F49                     	;# 
  4492  0F4A                     	;# 
  4493  0F4B                     	;# 
  4494  0F4C                     	;# 
  4495  0F4E                     	;# 
  4496  0F4F                     	;# 
  4497  0F50                     	;# 
  4498  0F51                     	;# 
  4499  0F52                     	;# 
  4500  0F53                     	;# 
  4501  0F54                     	;# 
  4502  0F55                     	;# 
  4503  0F56                     	;# 
  4504  0F57                     	;# 
  4505  0F59                     	;# 
  4506  0F5A                     	;# 
  4507  0F5B                     	;# 
  4508  0F5C                     	;# 
  4509  0F5D                     	;# 
  4510  0F61                     	;# 
  4511  0F62                     	;# 
  4512  0F64                     	;# 
  4513  0F65                     	;# 
  4514  0F66                     	;# 
  4515  0F67                     	;# 
  4516  0F68                     	;# 
  4517  0F69                     	;# 
  4518  0F6A                     	;# 
  4519  0F6B                     	;# 
  4520  0F6C                     	;# 
  4521  0F6D                     	;# 
  4522  0FE4                     	;# 
  4523  0FE5                     	;# 
  4524  0FE6                     	;# 
  4525  0FE7                     	;# 
  4526  0FE8                     	;# 
  4527  0FE9                     	;# 
  4528  0FEA                     	;# 
  4529  0FEB                     	;# 
  4530  0FED                     	;# 
  4531  0FEE                     	;# 
  4532  0FEF                     	;# 
  4533  0000                     	;# 
  4534  0001                     	;# 
  4535  0002                     	;# 
  4536  0003                     	;# 
  4537  0004                     	;# 
  4538  0005                     	;# 
  4539  0006                     	;# 
  4540  0007                     	;# 
  4541  0008                     	;# 
  4542  0009                     	;# 
  4543  000A                     	;# 
  4544  000B                     	;# 
  4545  000C                     	;# 
  4546  000D                     	;# 
  4547  000E                     	;# 
  4548  000F                     	;# 
  4549  0010                     	;# 
  4550  0011                     	;# 
  4551  0012                     	;# 
  4552  0013                     	;# 
  4553  0014                     	;# 
  4554  0015                     	;# 
  4555  0016                     	;# 
  4556  0017                     	;# 
  4557  0018                     	;# 
  4558  0019                     	;# 
  4559  001A                     	;# 
  4560  001C                     	;# 
  4561  001C                     	;# 
  4562  001D                     	;# 
  4563  001D                     	;# 
  4564  001E                     	;# 
  4565  001F                     	;# 
  4566  008C                     	;# 
  4567  008C                     	;# 
  4568  008D                     	;# 
  4569  008E                     	;# 
  4570  008E                     	;# 
  4571  008F                     	;# 
  4572  0090                     	;# 
  4573  0090                     	;# 
  4574  0091                     	;# 
  4575  0093                     	;# 
  4576  0094                     	;# 
  4577  0095                     	;# 
  4578  0096                     	;# 
  4579  0097                     	;# 
  4580  0098                     	;# 
  4581  0099                     	;# 
  4582  009A                     	;# 
  4583  009B                     	;# 
  4584  009C                     	;# 
  4585  009D                     	;# 
  4586  009E                     	;# 
  4587  010C                     	;# 
  4588  010D                     	;# 
  4589  010E                     	;# 
  4590  010E                     	;# 
  4591  010F                     	;# 
  4592  0110                     	;# 
  4593  0110                     	;# 
  4594  0111                     	;# 
  4595  0112                     	;# 
  4596  0112                     	;# 
  4597  0113                     	;# 
  4598  0114                     	;# 
  4599  0114                     	;# 
  4600  0115                     	;# 
  4601  0116                     	;# 
  4602  0116                     	;# 
  4603  0117                     	;# 
  4604  0119                     	;# 
  4605  0119                     	;# 
  4606  0119                     	;# 
  4607  011A                     	;# 
  4608  011A                     	;# 
  4609  011A                     	;# 
  4610  011B                     	;# 
  4611  011B                     	;# 
  4612  011B                     	;# 
  4613  011B                     	;# 
  4614  011B                     	;# 
  4615  011C                     	;# 
  4616  011C                     	;# 
  4617  011C                     	;# 
  4618  011D                     	;# 
  4619  011D                     	;# 
  4620  011D                     	;# 
  4621  011E                     	;# 
  4622  011E                     	;# 
  4623  011E                     	;# 
  4624  011F                     	;# 
  4625  011F                     	;# 
  4626  011F                     	;# 
  4627  011F                     	;# 
  4628  011F                     	;# 
  4629  018C                     	;# 
  4630  018D                     	;# 
  4631  018E                     	;# 
  4632  018F                     	;# 
  4633  0190                     	;# 
  4634  0191                     	;# 
  4635  0192                     	;# 
  4636  0196                     	;# 
  4637  0197                     	;# 
  4638  0198                     	;# 
  4639  0199                     	;# 
  4640  019A                     	;# 
  4641  019B                     	;# 
  4642  019C                     	;# 
  4643  020C                     	;# 
  4644  020C                     	;# 
  4645  020D                     	;# 
  4646  020E                     	;# 
  4647  020F                     	;# 
  4648  020F                     	;# 
  4649  0210                     	;# 
  4650  0210                     	;# 
  4651  0211                     	;# 
  4652  0211                     	;# 
  4653  0212                     	;# 
  4654  0212                     	;# 
  4655  0213                     	;# 
  4656  0214                     	;# 
  4657  0215                     	;# 
  4658  0215                     	;# 
  4659  0216                     	;# 
  4660  0216                     	;# 
  4661  0217                     	;# 
  4662  0217                     	;# 
  4663  0218                     	;# 
  4664  0218                     	;# 
  4665  0219                     	;# 
  4666  021A                     	;# 
  4667  021B                     	;# 
  4668  021B                     	;# 
  4669  021C                     	;# 
  4670  021C                     	;# 
  4671  021D                     	;# 
  4672  021D                     	;# 
  4673  021E                     	;# 
  4674  021F                     	;# 
  4675  028C                     	;# 
  4676  028C                     	;# 
  4677  028D                     	;# 
  4678  028D                     	;# 
  4679  028E                     	;# 
  4680  028F                     	;# 
  4681  0290                     	;# 
  4682  0290                     	;# 
  4683  0291                     	;# 
  4684  0292                     	;# 
  4685  0292                     	;# 
  4686  0293                     	;# 
  4687  0293                     	;# 
  4688  0294                     	;# 
  4689  0295                     	;# 
  4690  0296                     	;# 
  4691  0296                     	;# 
  4692  0297                     	;# 
  4693  0298                     	;# 
  4694  0298                     	;# 
  4695  0299                     	;# 
  4696  0299                     	;# 
  4697  029A                     	;# 
  4698  029B                     	;# 
  4699  029C                     	;# 
  4700  029C                     	;# 
  4701  029D                     	;# 
  4702  030C                     	;# 
  4703  030C                     	;# 
  4704  030D                     	;# 
  4705  030E                     	;# 
  4706  030F                     	;# 
  4707  0310                     	;# 
  4708  0310                     	;# 
  4709  0311                     	;# 
  4710  0312                     	;# 
  4711  0313                     	;# 
  4712  0314                     	;# 
  4713  0314                     	;# 
  4714  0315                     	;# 
  4715  0316                     	;# 
  4716  0317                     	;# 
  4717  0318                     	;# 
  4718  0318                     	;# 
  4719  0319                     	;# 
  4720  031A                     	;# 
  4721  031B                     	;# 
  4722  031C                     	;# 
  4723  031C                     	;# 
  4724  031D                     	;# 
  4725  031E                     	;# 
  4726  031F                     	;# 
  4727  038C                     	;# 
  4728  038C                     	;# 
  4729  038D                     	;# 
  4730  038E                     	;# 
  4731  0390                     	;# 
  4732  0390                     	;# 
  4733  0391                     	;# 
  4734  0392                     	;# 
  4735  040C                     	;# 
  4736  040D                     	;# 
  4737  040E                     	;# 
  4738  040F                     	;# 
  4739  0410                     	;# 
  4740  0411                     	;# 
  4741  0416                     	;# 
  4742  0416                     	;# 
  4743  0417                     	;# 
  4744  0418                     	;# 
  4745  0418                     	;# 
  4746  0419                     	;# 
  4747  041A                     	;# 
  4748  041A                     	;# 
  4749  041B                     	;# 
  4750  041C                     	;# 
  4751  041C                     	;# 
  4752  041D                     	;# 
  4753  041E                     	;# 
  4754  041F                     	;# 
  4755  048C                     	;# 
  4756  048C                     	;# 
  4757  048D                     	;# 
  4758  048E                     	;# 
  4759  048F                     	;# 
  4760  048F                     	;# 
  4761  0490                     	;# 
  4762  0491                     	;# 
  4763  0492                     	;# 
  4764  0492                     	;# 
  4765  0493                     	;# 
  4766  0494                     	;# 
  4767  0495                     	;# 
  4768  0495                     	;# 
  4769  0496                     	;# 
  4770  0497                     	;# 
  4771  0498                     	;# 
  4772  0499                     	;# 
  4773  049A                     	;# 
  4774  049B                     	;# 
  4775  049C                     	;# 
  4776  049D                     	;# 
  4777  050C                     	;# 
  4778  050C                     	;# 
  4779  050D                     	;# 
  4780  050E                     	;# 
  4781  050F                     	;# 
  4782  050F                     	;# 
  4783  0510                     	;# 
  4784  0511                     	;# 
  4785  0512                     	;# 
  4786  0512                     	;# 
  4787  0513                     	;# 
  4788  0514                     	;# 
  4789  0515                     	;# 
  4790  0515                     	;# 
  4791  0516                     	;# 
  4792  0517                     	;# 
  4793  0518                     	;# 
  4794  0519                     	;# 
  4795  051A                     	;# 
  4796  051B                     	;# 
  4797  051C                     	;# 
  4798  051D                     	;# 
  4799  058C                     	;# 
  4800  058C                     	;# 
  4801  058D                     	;# 
  4802  058E                     	;# 
  4803  058F                     	;# 
  4804  058F                     	;# 
  4805  0590                     	;# 
  4806  0591                     	;# 
  4807  0592                     	;# 
  4808  0593                     	;# 
  4809  060C                     	;# 
  4810  060D                     	;# 
  4811  060E                     	;# 
  4812  060F                     	;# 
  4813  0610                     	;# 
  4814  0611                     	;# 
  4815  0612                     	;# 
  4816  0613                     	;# 
  4817  0614                     	;# 
  4818  0616                     	;# 
  4819  0617                     	;# 
  4820  0618                     	;# 
  4821  0619                     	;# 
  4822  061A                     	;# 
  4823  061B                     	;# 
  4824  061C                     	;# 
  4825  061D                     	;# 
  4826  061E                     	;# 
  4827  068C                     	;# 
  4828  068D                     	;# 
  4829  068E                     	;# 
  4830  068F                     	;# 
  4831  0690                     	;# 
  4832  0691                     	;# 
  4833  0692                     	;# 
  4834  0693                     	;# 
  4835  0694                     	;# 
  4836  070C                     	;# 
  4837  070D                     	;# 
  4838  070E                     	;# 
  4839  070F                     	;# 
  4840  0710                     	;# 
  4841  0711                     	;# 
  4842  0712                     	;# 
  4843  0713                     	;# 
  4844  0714                     	;# 
  4845  0716                     	;# 
  4846  0717                     	;# 
  4847  0718                     	;# 
  4848  0719                     	;# 
  4849  071A                     	;# 
  4850  071B                     	;# 
  4851  071C                     	;# 
  4852  071D                     	;# 
  4853  071E                     	;# 
  4854  0796                     	;# 
  4855  0797                     	;# 
  4856  0798                     	;# 
  4857  0799                     	;# 
  4858  079A                     	;# 
  4859  079B                     	;# 
  4860  080C                     	;# 
  4861  080D                     	;# 
  4862  080E                     	;# 
  4863  080F                     	;# 
  4864  0810                     	;# 
  4865  0811                     	;# 
  4866  0812                     	;# 
  4867  0813                     	;# 
  4868  0814                     	;# 
  4869  081A                     	;# 
  4870  081B                     	;# 
  4871  081C                     	;# 
  4872  081D                     	;# 
  4873  081E                     	;# 
  4874  081F                     	;# 
  4875  088C                     	;# 
  4876  088D                     	;# 
  4877  088E                     	;# 
  4878  088F                     	;# 
  4879  0890                     	;# 
  4880  0891                     	;# 
  4881  0892                     	;# 
  4882  0893                     	;# 
  4883  0895                     	;# 
  4884  0896                     	;# 
  4885  0897                     	;# 
  4886  0898                     	;# 
  4887  0899                     	;# 
  4888  089A                     	;# 
  4889  089B                     	;# 
  4890  090C                     	;# 
  4891  090E                     	;# 
  4892  090F                     	;# 
  4893  091F                     	;# 
  4894  091F                     	;# 
  4895  098F                     	;# 
  4896  098F                     	;# 
  4897  0990                     	;# 
  4898  0991                     	;# 
  4899  0992                     	;# 
  4900  0993                     	;# 
  4901  0994                     	;# 
  4902  0995                     	;# 
  4903  0996                     	;# 
  4904  0997                     	;# 
  4905  0E0F                     	;# 
  4906  0E10                     	;# 
  4907  0E11                     	;# 
  4908  0E12                     	;# 
  4909  0E13                     	;# 
  4910  0E14                     	;# 
  4911  0E15                     	;# 
  4912  0E16                     	;# 
  4913  0E17                     	;# 
  4914  0E18                     	;# 
  4915  0E19                     	;# 
  4916  0E1A                     	;# 
  4917  0E1B                     	;# 
  4918  0E1C                     	;# 
  4919  0E1D                     	;# 
  4920  0E1E                     	;# 
  4921  0E1F                     	;# 
  4922  0E20                     	;# 
  4923  0E21                     	;# 
  4924  0E22                     	;# 
  4925  0E23                     	;# 
  4926  0E24                     	;# 
  4927  0E25                     	;# 
  4928  0E26                     	;# 
  4929  0E27                     	;# 
  4930  0E28                     	;# 
  4931  0E29                     	;# 
  4932  0E2A                     	;# 
  4933  0E2B                     	;# 
  4934  0E2C                     	;# 
  4935  0E2D                     	;# 
  4936  0E2E                     	;# 
  4937  0E2F                     	;# 
  4938  0E30                     	;# 
  4939  0E31                     	;# 
  4940  0E32                     	;# 
  4941  0E33                     	;# 
  4942  0E34                     	;# 
  4943  0E35                     	;# 
  4944  0E36                     	;# 
  4945  0E37                     	;# 
  4946  0E8F                     	;# 
  4947  0E90                     	;# 
  4948  0E91                     	;# 
  4949  0E92                     	;# 
  4950  0E93                     	;# 
  4951  0E94                     	;# 
  4952  0E95                     	;# 
  4953  0E96                     	;# 
  4954  0E97                     	;# 
  4955  0E9C                     	;# 
  4956  0E9D                     	;# 
  4957  0E9E                     	;# 
  4958  0EA1                     	;# 
  4959  0EA2                     	;# 
  4960  0EA3                     	;# 
  4961  0EA4                     	;# 
  4962  0EA5                     	;# 
  4963  0EA9                     	;# 
  4964  0EAA                     	;# 
  4965  0EAB                     	;# 
  4966  0EAC                     	;# 
  4967  0EB1                     	;# 
  4968  0EB2                     	;# 
  4969  0EB3                     	;# 
  4970  0EB8                     	;# 
  4971  0EB9                     	;# 
  4972  0EBA                     	;# 
  4973  0EBB                     	;# 
  4974  0EBC                     	;# 
  4975  0EBD                     	;# 
  4976  0EBE                     	;# 
  4977  0EC3                     	;# 
  4978  0EC5                     	;# 
  4979  0EC6                     	;# 
  4980  0EC7                     	;# 
  4981  0EC8                     	;# 
  4982  0EC9                     	;# 
  4983  0ECA                     	;# 
  4984  0ECB                     	;# 
  4985  0ECC                     	;# 
  4986  0F10                     	;# 
  4987  0F11                     	;# 
  4988  0F12                     	;# 
  4989  0F13                     	;# 
  4990  0F14                     	;# 
  4991  0F15                     	;# 
  4992  0F16                     	;# 
  4993  0F17                     	;# 
  4994  0F18                     	;# 
  4995  0F19                     	;# 
  4996  0F1A                     	;# 
  4997  0F1B                     	;# 
  4998  0F1C                     	;# 
  4999  0F1D                     	;# 
  5000  0F1E                     	;# 
  5001  0F1F                     	;# 
  5002  0F20                     	;# 
  5003  0F21                     	;# 
  5004  0F22                     	;# 
  5005  0F23                     	;# 
  5006  0F24                     	;# 
  5007  0F25                     	;# 
  5008  0F26                     	;# 
  5009  0F27                     	;# 
  5010  0F28                     	;# 
  5011  0F29                     	;# 
  5012  0F2A                     	;# 
  5013  0F2B                     	;# 
  5014  0F2C                     	;# 
  5015  0F2D                     	;# 
  5016  0F2E                     	;# 
  5017  0F2F                     	;# 
  5018  0F30                     	;# 
  5019  0F31                     	;# 
  5020  0F32                     	;# 
  5021  0F38                     	;# 
  5022  0F39                     	;# 
  5023  0F3A                     	;# 
  5024  0F3B                     	;# 
  5025  0F3C                     	;# 
  5026  0F3D                     	;# 
  5027  0F3E                     	;# 
  5028  0F3F                     	;# 
  5029  0F40                     	;# 
  5030  0F41                     	;# 
  5031  0F43                     	;# 
  5032  0F44                     	;# 
  5033  0F45                     	;# 
  5034  0F46                     	;# 
  5035  0F47                     	;# 
  5036  0F48                     	;# 
  5037  0F49                     	;# 
  5038  0F4A                     	;# 
  5039  0F4B                     	;# 
  5040  0F4C                     	;# 
  5041  0F4E                     	;# 
  5042  0F4F                     	;# 
  5043  0F50                     	;# 
  5044  0F51                     	;# 
  5045  0F52                     	;# 
  5046  0F53                     	;# 
  5047  0F54                     	;# 
  5048  0F55                     	;# 
  5049  0F56                     	;# 
  5050  0F57                     	;# 
  5051  0F59                     	;# 
  5052  0F5A                     	;# 
  5053  0F5B                     	;# 
  5054  0F5C                     	;# 
  5055  0F5D                     	;# 
  5056  0F61                     	;# 
  5057  0F62                     	;# 
  5058  0F64                     	;# 
  5059  0F65                     	;# 
  5060  0F66                     	;# 
  5061  0F67                     	;# 
  5062  0F68                     	;# 
  5063  0F69                     	;# 
  5064  0F6A                     	;# 
  5065  0F6B                     	;# 
  5066  0F6C                     	;# 
  5067  0F6D                     	;# 
  5068  0FE4                     	;# 
  5069  0FE5                     	;# 
  5070  0FE6                     	;# 
  5071  0FE7                     	;# 
  5072  0FE8                     	;# 
  5073  0FE9                     	;# 
  5074  0FEA                     	;# 
  5075  0FEB                     	;# 
  5076  0FED                     	;# 
  5077  0FEE                     	;# 
  5078  0FEF                     	;# 
  5079  0000                     	;# 
  5080  0001                     	;# 
  5081  0002                     	;# 
  5082  0003                     	;# 
  5083  0004                     	;# 
  5084  0005                     	;# 
  5085  0006                     	;# 
  5086  0007                     	;# 
  5087  0008                     	;# 
  5088  0009                     	;# 
  5089  000A                     	;# 
  5090  000B                     	;# 
  5091  000C                     	;# 
  5092  000D                     	;# 
  5093  000E                     	;# 
  5094  000F                     	;# 
  5095  0010                     	;# 
  5096  0011                     	;# 
  5097  0012                     	;# 
  5098  0013                     	;# 
  5099  0014                     	;# 
  5100  0015                     	;# 
  5101  0016                     	;# 
  5102  0017                     	;# 
  5103  0018                     	;# 
  5104  0019                     	;# 
  5105  001A                     	;# 
  5106  001C                     	;# 
  5107  001C                     	;# 
  5108  001D                     	;# 
  5109  001D                     	;# 
  5110  001E                     	;# 
  5111  001F                     	;# 
  5112  008C                     	;# 
  5113  008C                     	;# 
  5114  008D                     	;# 
  5115  008E                     	;# 
  5116  008E                     	;# 
  5117  008F                     	;# 
  5118  0090                     	;# 
  5119  0090                     	;# 
  5120  0091                     	;# 
  5121  0093                     	;# 
  5122  0094                     	;# 
  5123  0095                     	;# 
  5124  0096                     	;# 
  5125  0097                     	;# 
  5126  0098                     	;# 
  5127  0099                     	;# 
  5128  009A                     	;# 
  5129  009B                     	;# 
  5130  009C                     	;# 
  5131  009D                     	;# 
  5132  009E                     	;# 
  5133  010C                     	;# 
  5134  010D                     	;# 
  5135  010E                     	;# 
  5136  010E                     	;# 
  5137  010F                     	;# 
  5138  0110                     	;# 
  5139  0110                     	;# 
  5140  0111                     	;# 
  5141  0112                     	;# 
  5142  0112                     	;# 
  5143  0113                     	;# 
  5144  0114                     	;# 
  5145  0114                     	;# 
  5146  0115                     	;# 
  5147  0116                     	;# 
  5148  0116                     	;# 
  5149  0117                     	;# 
  5150  0119                     	;# 
  5151  0119                     	;# 
  5152  0119                     	;# 
  5153  011A                     	;# 
  5154  011A                     	;# 
  5155  011A                     	;# 
  5156  011B                     	;# 
  5157  011B                     	;# 
  5158  011B                     	;# 
  5159  011B                     	;# 
  5160  011B                     	;# 
  5161  011C                     	;# 
  5162  011C                     	;# 
  5163  011C                     	;# 
  5164  011D                     	;# 
  5165  011D                     	;# 
  5166  011D                     	;# 
  5167  011E                     	;# 
  5168  011E                     	;# 
  5169  011E                     	;# 
  5170  011F                     	;# 
  5171  011F                     	;# 
  5172  011F                     	;# 
  5173  011F                     	;# 
  5174  011F                     	;# 
  5175  018C                     	;# 
  5176  018D                     	;# 
  5177  018E                     	;# 
  5178  018F                     	;# 
  5179  0190                     	;# 
  5180  0191                     	;# 
  5181  0192                     	;# 
  5182  0196                     	;# 
  5183  0197                     	;# 
  5184  0198                     	;# 
  5185  0199                     	;# 
  5186  019A                     	;# 
  5187  019B                     	;# 
  5188  019C                     	;# 
  5189  020C                     	;# 
  5190  020C                     	;# 
  5191  020D                     	;# 
  5192  020E                     	;# 
  5193  020F                     	;# 
  5194  020F                     	;# 
  5195  0210                     	;# 
  5196  0210                     	;# 
  5197  0211                     	;# 
  5198  0211                     	;# 
  5199  0212                     	;# 
  5200  0212                     	;# 
  5201  0213                     	;# 
  5202  0214                     	;# 
  5203  0215                     	;# 
  5204  0215                     	;# 
  5205  0216                     	;# 
  5206  0216                     	;# 
  5207  0217                     	;# 
  5208  0217                     	;# 
  5209  0218                     	;# 
  5210  0218                     	;# 
  5211  0219                     	;# 
  5212  021A                     	;# 
  5213  021B                     	;# 
  5214  021B                     	;# 
  5215  021C                     	;# 
  5216  021C                     	;# 
  5217  021D                     	;# 
  5218  021D                     	;# 
  5219  021E                     	;# 
  5220  021F                     	;# 
  5221  028C                     	;# 
  5222  028C                     	;# 
  5223  028D                     	;# 
  5224  028D                     	;# 
  5225  028E                     	;# 
  5226  028F                     	;# 
  5227  0290                     	;# 
  5228  0290                     	;# 
  5229  0291                     	;# 
  5230  0292                     	;# 
  5231  0292                     	;# 
  5232  0293                     	;# 
  5233  0293                     	;# 
  5234  0294                     	;# 
  5235  0295                     	;# 
  5236  0296                     	;# 
  5237  0296                     	;# 
  5238  0297                     	;# 
  5239  0298                     	;# 
  5240  0298                     	;# 
  5241  0299                     	;# 
  5242  0299                     	;# 
  5243  029A                     	;# 
  5244  029B                     	;# 
  5245  029C                     	;# 
  5246  029C                     	;# 
  5247  029D                     	;# 
  5248  030C                     	;# 
  5249  030C                     	;# 
  5250  030D                     	;# 
  5251  030E                     	;# 
  5252  030F                     	;# 
  5253  0310                     	;# 
  5254  0310                     	;# 
  5255  0311                     	;# 
  5256  0312                     	;# 
  5257  0313                     	;# 
  5258  0314                     	;# 
  5259  0314                     	;# 
  5260  0315                     	;# 
  5261  0316                     	;# 
  5262  0317                     	;# 
  5263  0318                     	;# 
  5264  0318                     	;# 
  5265  0319                     	;# 
  5266  031A                     	;# 
  5267  031B                     	;# 
  5268  031C                     	;# 
  5269  031C                     	;# 
  5270  031D                     	;# 
  5271  031E                     	;# 
  5272  031F                     	;# 
  5273  038C                     	;# 
  5274  038C                     	;# 
  5275  038D                     	;# 
  5276  038E                     	;# 
  5277  0390                     	;# 
  5278  0390                     	;# 
  5279  0391                     	;# 
  5280  0392                     	;# 
  5281  040C                     	;# 
  5282  040D                     	;# 
  5283  040E                     	;# 
  5284  040F                     	;# 
  5285  0410                     	;# 
  5286  0411                     	;# 
  5287  0416                     	;# 
  5288  0416                     	;# 
  5289  0417                     	;# 
  5290  0418                     	;# 
  5291  0418                     	;# 
  5292  0419                     	;# 
  5293  041A                     	;# 
  5294  041A                     	;# 
  5295  041B                     	;# 
  5296  041C                     	;# 
  5297  041C                     	;# 
  5298  041D                     	;# 
  5299  041E                     	;# 
  5300  041F                     	;# 
  5301  048C                     	;# 
  5302  048C                     	;# 
  5303  048D                     	;# 
  5304  048E                     	;# 
  5305  048F                     	;# 
  5306  048F                     	;# 
  5307  0490                     	;# 
  5308  0491                     	;# 
  5309  0492                     	;# 
  5310  0492                     	;# 
  5311  0493                     	;# 
  5312  0494                     	;# 
  5313  0495                     	;# 
  5314  0495                     	;# 
  5315  0496                     	;# 
  5316  0497                     	;# 
  5317  0498                     	;# 
  5318  0499                     	;# 
  5319  049A                     	;# 
  5320  049B                     	;# 
  5321  049C                     	;# 
  5322  049D                     	;# 
  5323  050C                     	;# 
  5324  050C                     	;# 
  5325  050D                     	;# 
  5326  050E                     	;# 
  5327  050F                     	;# 
  5328  050F                     	;# 
  5329  0510                     	;# 
  5330  0511                     	;# 
  5331  0512                     	;# 
  5332  0512                     	;# 
  5333  0513                     	;# 
  5334  0514                     	;# 
  5335  0515                     	;# 
  5336  0515                     	;# 
  5337  0516                     	;# 
  5338  0517                     	;# 
  5339  0518                     	;# 
  5340  0519                     	;# 
  5341  051A                     	;# 
  5342  051B                     	;# 
  5343  051C                     	;# 
  5344  051D                     	;# 
  5345  058C                     	;# 
  5346  058C                     	;# 
  5347  058D                     	;# 
  5348  058E                     	;# 
  5349  058F                     	;# 
  5350  058F                     	;# 
  5351  0590                     	;# 
  5352  0591                     	;# 
  5353  0592                     	;# 
  5354  0593                     	;# 
  5355  060C                     	;# 
  5356  060D                     	;# 
  5357  060E                     	;# 
  5358  060F                     	;# 
  5359  0610                     	;# 
  5360  0611                     	;# 
  5361  0612                     	;# 
  5362  0613                     	;# 
  5363  0614                     	;# 
  5364  0616                     	;# 
  5365  0617                     	;# 
  5366  0618                     	;# 
  5367  0619                     	;# 
  5368  061A                     	;# 
  5369  061B                     	;# 
  5370  061C                     	;# 
  5371  061D                     	;# 
  5372  061E                     	;# 
  5373  068C                     	;# 
  5374  068D                     	;# 
  5375  068E                     	;# 
  5376  068F                     	;# 
  5377  0690                     	;# 
  5378  0691                     	;# 
  5379  0692                     	;# 
  5380  0693                     	;# 
  5381  0694                     	;# 
  5382  070C                     	;# 
  5383  070D                     	;# 
  5384  070E                     	;# 
  5385  070F                     	;# 
  5386  0710                     	;# 
  5387  0711                     	;# 
  5388  0712                     	;# 
  5389  0713                     	;# 
  5390  0714                     	;# 
  5391  0716                     	;# 
  5392  0717                     	;# 
  5393  0718                     	;# 
  5394  0719                     	;# 
  5395  071A                     	;# 
  5396  071B                     	;# 
  5397  071C                     	;# 
  5398  071D                     	;# 
  5399  071E                     	;# 
  5400  0796                     	;# 
  5401  0797                     	;# 
  5402  0798                     	;# 
  5403  0799                     	;# 
  5404  079A                     	;# 
  5405  079B                     	;# 
  5406  080C                     	;# 
  5407  080D                     	;# 
  5408  080E                     	;# 
  5409  080F                     	;# 
  5410  0810                     	;# 
  5411  0811                     	;# 
  5412  0812                     	;# 
  5413  0813                     	;# 
  5414  0814                     	;# 
  5415  081A                     	;# 
  5416  081B                     	;# 
  5417  081C                     	;# 
  5418  081D                     	;# 
  5419  081E                     	;# 
  5420  081F                     	;# 
  5421  088C                     	;# 
  5422  088D                     	;# 
  5423  088E                     	;# 
  5424  088F                     	;# 
  5425  0890                     	;# 
  5426  0891                     	;# 
  5427  0892                     	;# 
  5428  0893                     	;# 
  5429  0895                     	;# 
  5430  0896                     	;# 
  5431  0897                     	;# 
  5432  0898                     	;# 
  5433  0899                     	;# 
  5434  089A                     	;# 
  5435  089B                     	;# 
  5436  090C                     	;# 
  5437  090E                     	;# 
  5438  090F                     	;# 
  5439  091F                     	;# 
  5440  091F                     	;# 
  5441  098F                     	;# 
  5442  098F                     	;# 
  5443  0990                     	;# 
  5444  0991                     	;# 
  5445  0992                     	;# 
  5446  0993                     	;# 
  5447  0994                     	;# 
  5448  0995                     	;# 
  5449  0996                     	;# 
  5450  0997                     	;# 
  5451  0E0F                     	;# 
  5452  0E10                     	;# 
  5453  0E11                     	;# 
  5454  0E12                     	;# 
  5455  0E13                     	;# 
  5456  0E14                     	;# 
  5457  0E15                     	;# 
  5458  0E16                     	;# 
  5459  0E17                     	;# 
  5460  0E18                     	;# 
  5461  0E19                     	;# 
  5462  0E1A                     	;# 
  5463  0E1B                     	;# 
  5464  0E1C                     	;# 
  5465  0E1D                     	;# 
  5466  0E1E                     	;# 
  5467  0E1F                     	;# 
  5468  0E20                     	;# 
  5469  0E21                     	;# 
  5470  0E22                     	;# 
  5471  0E23                     	;# 
  5472  0E24                     	;# 
  5473  0E25                     	;# 
  5474  0E26                     	;# 
  5475  0E27                     	;# 
  5476  0E28                     	;# 
  5477  0E29                     	;# 
  5478  0E2A                     	;# 
  5479  0E2B                     	;# 
  5480  0E2C                     	;# 
  5481  0E2D                     	;# 
  5482  0E2E                     	;# 
  5483  0E2F                     	;# 
  5484  0E30                     	;# 
  5485  0E31                     	;# 
  5486  0E32                     	;# 
  5487  0E33                     	;# 
  5488  0E34                     	;# 
  5489  0E35                     	;# 
  5490  0E36                     	;# 
  5491  0E37                     	;# 
  5492  0E8F                     	;# 
  5493  0E90                     	;# 
  5494  0E91                     	;# 
  5495  0E92                     	;# 
  5496  0E93                     	;# 
  5497  0E94                     	;# 
  5498  0E95                     	;# 
  5499  0E96                     	;# 
  5500  0E97                     	;# 
  5501  0E9C                     	;# 
  5502  0E9D                     	;# 
  5503  0E9E                     	;# 
  5504  0EA1                     	;# 
  5505  0EA2                     	;# 
  5506  0EA3                     	;# 
  5507  0EA4                     	;# 
  5508  0EA5                     	;# 
  5509  0EA9                     	;# 
  5510  0EAA                     	;# 
  5511  0EAB                     	;# 
  5512  0EAC                     	;# 
  5513  0EB1                     	;# 
  5514  0EB2                     	;# 
  5515  0EB3                     	;# 
  5516  0EB8                     	;# 
  5517  0EB9                     	;# 
  5518  0EBA                     	;# 
  5519  0EBB                     	;# 
  5520  0EBC                     	;# 
  5521  0EBD                     	;# 
  5522  0EBE                     	;# 
  5523  0EC3                     	;# 
  5524  0EC5                     	;# 
  5525  0EC6                     	;# 
  5526  0EC7                     	;# 
  5527  0EC8                     	;# 
  5528  0EC9                     	;# 
  5529  0ECA                     	;# 
  5530  0ECB                     	;# 
  5531  0ECC                     	;# 
  5532  0F10                     	;# 
  5533  0F11                     	;# 
  5534  0F12                     	;# 
  5535  0F13                     	;# 
  5536  0F14                     	;# 
  5537  0F15                     	;# 
  5538  0F16                     	;# 
  5539  0F17                     	;# 
  5540  0F18                     	;# 
  5541  0F19                     	;# 
  5542  0F1A                     	;# 
  5543  0F1B                     	;# 
  5544  0F1C                     	;# 
  5545  0F1D                     	;# 
  5546  0F1E                     	;# 
  5547  0F1F                     	;# 
  5548  0F20                     	;# 
  5549  0F21                     	;# 
  5550  0F22                     	;# 
  5551  0F23                     	;# 
  5552  0F24                     	;# 
  5553  0F25                     	;# 
  5554  0F26                     	;# 
  5555  0F27                     	;# 
  5556  0F28                     	;# 
  5557  0F29                     	;# 
  5558  0F2A                     	;# 
  5559  0F2B                     	;# 
  5560  0F2C                     	;# 
  5561  0F2D                     	;# 
  5562  0F2E                     	;# 
  5563  0F2F                     	;# 
  5564  0F30                     	;# 
  5565  0F31                     	;# 
  5566  0F32                     	;# 
  5567  0F38                     	;# 
  5568  0F39                     	;# 
  5569  0F3A                     	;# 
  5570  0F3B                     	;# 
  5571  0F3C                     	;# 
  5572  0F3D                     	;# 
  5573  0F3E                     	;# 
  5574  0F3F                     	;# 
  5575  0F40                     	;# 
  5576  0F41                     	;# 
  5577  0F43                     	;# 
  5578  0F44                     	;# 
  5579  0F45                     	;# 
  5580  0F46                     	;# 
  5581  0F47                     	;# 
  5582  0F48                     	;# 
  5583  0F49                     	;# 
  5584  0F4A                     	;# 
  5585  0F4B                     	;# 
  5586  0F4C                     	;# 
  5587  0F4E                     	;# 
  5588  0F4F                     	;# 
  5589  0F50                     	;# 
  5590  0F51                     	;# 
  5591  0F52                     	;# 
  5592  0F53                     	;# 
  5593  0F54                     	;# 
  5594  0F55                     	;# 
  5595  0F56                     	;# 
  5596  0F57                     	;# 
  5597  0F59                     	;# 
  5598  0F5A                     	;# 
  5599  0F5B                     	;# 
  5600  0F5C                     	;# 
  5601  0F5D                     	;# 
  5602  0F61                     	;# 
  5603  0F62                     	;# 
  5604  0F64                     	;# 
  5605  0F65                     	;# 
  5606  0F66                     	;# 
  5607  0F67                     	;# 
  5608  0F68                     	;# 
  5609  0F69                     	;# 
  5610  0F6A                     	;# 
  5611  0F6B                     	;# 
  5612  0F6C                     	;# 
  5613  0F6D                     	;# 
  5614  0FE4                     	;# 
  5615  0FE5                     	;# 
  5616  0FE6                     	;# 
  5617  0FE7                     	;# 
  5618  0FE8                     	;# 
  5619  0FE9                     	;# 
  5620  0FEA                     	;# 
  5621  0FEB                     	;# 
  5622  0FED                     	;# 
  5623  0FEE                     	;# 
  5624  0FEF                     	;# 
  5625  0000                     	;# 
  5626  0001                     	;# 
  5627  0002                     	;# 
  5628  0003                     	;# 
  5629  0004                     	;# 
  5630  0005                     	;# 
  5631  0006                     	;# 
  5632  0007                     	;# 
  5633  0008                     	;# 
  5634  0009                     	;# 
  5635  000A                     	;# 
  5636  000B                     	;# 
  5637  000C                     	;# 
  5638  000D                     	;# 
  5639  000E                     	;# 
  5640  000F                     	;# 
  5641  0010                     	;# 
  5642  0011                     	;# 
  5643  0012                     	;# 
  5644  0013                     	;# 
  5645  0014                     	;# 
  5646  0015                     	;# 
  5647  0016                     	;# 
  5648  0017                     	;# 
  5649  0018                     	;# 
  5650  0019                     	;# 
  5651  001A                     	;# 
  5652  001C                     	;# 
  5653  001C                     	;# 
  5654  001D                     	;# 
  5655  001D                     	;# 
  5656  001E                     	;# 
  5657  001F                     	;# 
  5658  008C                     	;# 
  5659  008C                     	;# 
  5660  008D                     	;# 
  5661  008E                     	;# 
  5662  008E                     	;# 
  5663  008F                     	;# 
  5664  0090                     	;# 
  5665  0090                     	;# 
  5666  0091                     	;# 
  5667  0093                     	;# 
  5668  0094                     	;# 
  5669  0095                     	;# 
  5670  0096                     	;# 
  5671  0097                     	;# 
  5672  0098                     	;# 
  5673  0099                     	;# 
  5674  009A                     	;# 
  5675  009B                     	;# 
  5676  009C                     	;# 
  5677  009D                     	;# 
  5678  009E                     	;# 
  5679  010C                     	;# 
  5680  010D                     	;# 
  5681  010E                     	;# 
  5682  010E                     	;# 
  5683  010F                     	;# 
  5684  0110                     	;# 
  5685  0110                     	;# 
  5686  0111                     	;# 
  5687  0112                     	;# 
  5688  0112                     	;# 
  5689  0113                     	;# 
  5690  0114                     	;# 
  5691  0114                     	;# 
  5692  0115                     	;# 
  5693  0116                     	;# 
  5694  0116                     	;# 
  5695  0117                     	;# 
  5696  0119                     	;# 
  5697  0119                     	;# 
  5698  0119                     	;# 
  5699  011A                     	;# 
  5700  011A                     	;# 
  5701  011A                     	;# 
  5702  011B                     	;# 
  5703  011B                     	;# 
  5704  011B                     	;# 
  5705  011B                     	;# 
  5706  011B                     	;# 
  5707  011C                     	;# 
  5708  011C                     	;# 
  5709  011C                     	;# 
  5710  011D                     	;# 
  5711  011D                     	;# 
  5712  011D                     	;# 
  5713  011E                     	;# 
  5714  011E                     	;# 
  5715  011E                     	;# 
  5716  011F                     	;# 
  5717  011F                     	;# 
  5718  011F                     	;# 
  5719  011F                     	;# 
  5720  011F                     	;# 
  5721  018C                     	;# 
  5722  018D                     	;# 
  5723  018E                     	;# 
  5724  018F                     	;# 
  5725  0190                     	;# 
  5726  0191                     	;# 
  5727  0192                     	;# 
  5728  0196                     	;# 
  5729  0197                     	;# 
  5730  0198                     	;# 
  5731  0199                     	;# 
  5732  019A                     	;# 
  5733  019B                     	;# 
  5734  019C                     	;# 
  5735  020C                     	;# 
  5736  020C                     	;# 
  5737  020D                     	;# 
  5738  020E                     	;# 
  5739  020F                     	;# 
  5740  020F                     	;# 
  5741  0210                     	;# 
  5742  0210                     	;# 
  5743  0211                     	;# 
  5744  0211                     	;# 
  5745  0212                     	;# 
  5746  0212                     	;# 
  5747  0213                     	;# 
  5748  0214                     	;# 
  5749  0215                     	;# 
  5750  0215                     	;# 
  5751  0216                     	;# 
  5752  0216                     	;# 
  5753  0217                     	;# 
  5754  0217                     	;# 
  5755  0218                     	;# 
  5756  0218                     	;# 
  5757  0219                     	;# 
  5758  021A                     	;# 
  5759  021B                     	;# 
  5760  021B                     	;# 
  5761  021C                     	;# 
  5762  021C                     	;# 
  5763  021D                     	;# 
  5764  021D                     	;# 
  5765  021E                     	;# 
  5766  021F                     	;# 
  5767  028C                     	;# 
  5768  028C                     	;# 
  5769  028D                     	;# 
  5770  028D                     	;# 
  5771  028E                     	;# 
  5772  028F                     	;# 
  5773  0290                     	;# 
  5774  0290                     	;# 
  5775  0291                     	;# 
  5776  0292                     	;# 
  5777  0292                     	;# 
  5778  0293                     	;# 
  5779  0293                     	;# 
  5780  0294                     	;# 
  5781  0295                     	;# 
  5782  0296                     	;# 
  5783  0296                     	;# 
  5784  0297                     	;# 
  5785  0298                     	;# 
  5786  0298                     	;# 
  5787  0299                     	;# 
  5788  0299                     	;# 
  5789  029A                     	;# 
  5790  029B                     	;# 
  5791  029C                     	;# 
  5792  029C                     	;# 
  5793  029D                     	;# 
  5794  030C                     	;# 
  5795  030C                     	;# 
  5796  030D                     	;# 
  5797  030E                     	;# 
  5798  030F                     	;# 
  5799  0310                     	;# 
  5800  0310                     	;# 
  5801  0311                     	;# 
  5802  0312                     	;# 
  5803  0313                     	;# 
  5804  0314                     	;# 
  5805  0314                     	;# 
  5806  0315                     	;# 
  5807  0316                     	;# 
  5808  0317                     	;# 
  5809  0318                     	;# 
  5810  0318                     	;# 
  5811  0319                     	;# 
  5812  031A                     	;# 
  5813  031B                     	;# 
  5814  031C                     	;# 
  5815  031C                     	;# 
  5816  031D                     	;# 
  5817  031E                     	;# 
  5818  031F                     	;# 
  5819  038C                     	;# 
  5820  038C                     	;# 
  5821  038D                     	;# 
  5822  038E                     	;# 
  5823  0390                     	;# 
  5824  0390                     	;# 
  5825  0391                     	;# 
  5826  0392                     	;# 
  5827  040C                     	;# 
  5828  040D                     	;# 
  5829  040E                     	;# 
  5830  040F                     	;# 
  5831  0410                     	;# 
  5832  0411                     	;# 
  5833  0416                     	;# 
  5834  0416                     	;# 
  5835  0417                     	;# 
  5836  0418                     	;# 
  5837  0418                     	;# 
  5838  0419                     	;# 
  5839  041A                     	;# 
  5840  041A                     	;# 
  5841  041B                     	;# 
  5842  041C                     	;# 
  5843  041C                     	;# 
  5844  041D                     	;# 
  5845  041E                     	;# 
  5846  041F                     	;# 
  5847  048C                     	;# 
  5848  048C                     	;# 
  5849  048D                     	;# 
  5850  048E                     	;# 
  5851  048F                     	;# 
  5852  048F                     	;# 
  5853  0490                     	;# 
  5854  0491                     	;# 
  5855  0492                     	;# 
  5856  0492                     	;# 
  5857  0493                     	;# 
  5858  0494                     	;# 
  5859  0495                     	;# 
  5860  0495                     	;# 
  5861  0496                     	;# 
  5862  0497                     	;# 
  5863  0498                     	;# 
  5864  0499                     	;# 
  5865  049A                     	;# 
  5866  049B                     	;# 
  5867  049C                     	;# 
  5868  049D                     	;# 
  5869  050C                     	;# 
  5870  050C                     	;# 
  5871  050D                     	;# 
  5872  050E                     	;# 
  5873  050F                     	;# 
  5874  050F                     	;# 
  5875  0510                     	;# 
  5876  0511                     	;# 
  5877  0512                     	;# 
  5878  0512                     	;# 
  5879  0513                     	;# 
  5880  0514                     	;# 
  5881  0515                     	;# 
  5882  0515                     	;# 
  5883  0516                     	;# 
  5884  0517                     	;# 
  5885  0518                     	;# 
  5886  0519                     	;# 
  5887  051A                     	;# 
  5888  051B                     	;# 
  5889  051C                     	;# 
  5890  051D                     	;# 
  5891  058C                     	;# 
  5892  058C                     	;# 
  5893  058D                     	;# 
  5894  058E                     	;# 
  5895  058F                     	;# 
  5896  058F                     	;# 
  5897  0590                     	;# 
  5898  0591                     	;# 
  5899  0592                     	;# 
  5900  0593                     	;# 
  5901  060C                     	;# 
  5902  060D                     	;# 
  5903  060E                     	;# 
  5904  060F                     	;# 
  5905  0610                     	;# 
  5906  0611                     	;# 
  5907  0612                     	;# 
  5908  0613                     	;# 
  5909  0614                     	;# 
  5910  0616                     	;# 
  5911  0617                     	;# 
  5912  0618                     	;# 
  5913  0619                     	;# 
  5914  061A                     	;# 
  5915  061B                     	;# 
  5916  061C                     	;# 
  5917  061D                     	;# 
  5918  061E                     	;# 
  5919  068C                     	;# 
  5920  068D                     	;# 
  5921  068E                     	;# 
  5922  068F                     	;# 
  5923  0690                     	;# 
  5924  0691                     	;# 
  5925  0692                     	;# 
  5926  0693                     	;# 
  5927  0694                     	;# 
  5928  070C                     	;# 
  5929  070D                     	;# 
  5930  070E                     	;# 
  5931  070F                     	;# 
  5932  0710                     	;# 
  5933  0711                     	;# 
  5934  0712                     	;# 
  5935  0713                     	;# 
  5936  0714                     	;# 
  5937  0716                     	;# 
  5938  0717                     	;# 
  5939  0718                     	;# 
  5940  0719                     	;# 
  5941  071A                     	;# 
  5942  071B                     	;# 
  5943  071C                     	;# 
  5944  071D                     	;# 
  5945  071E                     	;# 
  5946  0796                     	;# 
  5947  0797                     	;# 
  5948  0798                     	;# 
  5949  0799                     	;# 
  5950  079A                     	;# 
  5951  079B                     	;# 
  5952  080C                     	;# 
  5953  080D                     	;# 
  5954  080E                     	;# 
  5955  080F                     	;# 
  5956  0810                     	;# 
  5957  0811                     	;# 
  5958  0812                     	;# 
  5959  0813                     	;# 
  5960  0814                     	;# 
  5961  081A                     	;# 
  5962  081B                     	;# 
  5963  081C                     	;# 
  5964  081D                     	;# 
  5965  081E                     	;# 
  5966  081F                     	;# 
  5967  088C                     	;# 
  5968  088D                     	;# 
  5969  088E                     	;# 
  5970  088F                     	;# 
  5971  0890                     	;# 
  5972  0891                     	;# 
  5973  0892                     	;# 
  5974  0893                     	;# 
  5975  0895                     	;# 
  5976  0896                     	;# 
  5977  0897                     	;# 
  5978  0898                     	;# 
  5979  0899                     	;# 
  5980  089A                     	;# 
  5981  089B                     	;# 
  5982  090C                     	;# 
  5983  090E                     	;# 
  5984  090F                     	;# 
  5985  091F                     	;# 
  5986  091F                     	;# 
  5987  098F                     	;# 
  5988  098F                     	;# 
  5989  0990                     	;# 
  5990  0991                     	;# 
  5991  0992                     	;# 
  5992  0993                     	;# 
  5993  0994                     	;# 
  5994  0995                     	;# 
  5995  0996                     	;# 
  5996  0997                     	;# 
  5997  0E0F                     	;# 
  5998  0E10                     	;# 
  5999  0E11                     	;# 
  6000  0E12                     	;# 
  6001  0E13                     	;# 
  6002  0E14                     	;# 
  6003  0E15                     	;# 
  6004  0E16                     	;# 
  6005  0E17                     	;# 
  6006  0E18                     	;# 
  6007  0E19                     	;# 
  6008  0E1A                     	;# 
  6009  0E1B                     	;# 
  6010  0E1C                     	;# 
  6011  0E1D                     	;# 
  6012  0E1E                     	;# 
  6013  0E1F                     	;# 
  6014  0E20                     	;# 
  6015  0E21                     	;# 
  6016  0E22                     	;# 
  6017  0E23                     	;# 
  6018  0E24                     	;# 
  6019  0E25                     	;# 
  6020  0E26                     	;# 
  6021  0E27                     	;# 
  6022  0E28                     	;# 
  6023  0E29                     	;# 
  6024  0E2A                     	;# 
  6025  0E2B                     	;# 
  6026  0E2C                     	;# 
  6027  0E2D                     	;# 
  6028  0E2E                     	;# 
  6029  0E2F                     	;# 
  6030  0E30                     	;# 
  6031  0E31                     	;# 
  6032  0E32                     	;# 
  6033  0E33                     	;# 
  6034  0E34                     	;# 
  6035  0E35                     	;# 
  6036  0E36                     	;# 
  6037  0E37                     	;# 
  6038  0E8F                     	;# 
  6039  0E90                     	;# 
  6040  0E91                     	;# 
  6041  0E92                     	;# 
  6042  0E93                     	;# 
  6043  0E94                     	;# 
  6044  0E95                     	;# 
  6045  0E96                     	;# 
  6046  0E97                     	;# 
  6047  0E9C                     	;# 
  6048  0E9D                     	;# 
  6049  0E9E                     	;# 
  6050  0EA1                     	;# 
  6051  0EA2                     	;# 
  6052  0EA3                     	;# 
  6053  0EA4                     	;# 
  6054  0EA5                     	;# 
  6055  0EA9                     	;# 
  6056  0EAA                     	;# 
  6057  0EAB                     	;# 
  6058  0EAC                     	;# 
  6059  0EB1                     	;# 
  6060  0EB2                     	;# 
  6061  0EB3                     	;# 
  6062  0EB8                     	;# 
  6063  0EB9                     	;# 
  6064  0EBA                     	;# 
  6065  0EBB                     	;# 
  6066  0EBC                     	;# 
  6067  0EBD                     	;# 
  6068  0EBE                     	;# 
  6069  0EC3                     	;# 
  6070  0EC5                     	;# 
  6071  0EC6                     	;# 
  6072  0EC7                     	;# 
  6073  0EC8                     	;# 
  6074  0EC9                     	;# 
  6075  0ECA                     	;# 
  6076  0ECB                     	;# 
  6077  0ECC                     	;# 
  6078  0F10                     	;# 
  6079  0F11                     	;# 
  6080  0F12                     	;# 
  6081  0F13                     	;# 
  6082  0F14                     	;# 
  6083  0F15                     	;# 
  6084  0F16                     	;# 
  6085  0F17                     	;# 
  6086  0F18                     	;# 
  6087  0F19                     	;# 
  6088  0F1A                     	;# 
  6089  0F1B                     	;# 
  6090  0F1C                     	;# 
  6091  0F1D                     	;# 
  6092  0F1E                     	;# 
  6093  0F1F                     	;# 
  6094  0F20                     	;# 
  6095  0F21                     	;# 
  6096  0F22                     	;# 
  6097  0F23                     	;# 
  6098  0F24                     	;# 
  6099  0F25                     	;# 
  6100  0F26                     	;# 
  6101  0F27                     	;# 
  6102  0F28                     	;# 
  6103  0F29                     	;# 
  6104  0F2A                     	;# 
  6105  0F2B                     	;# 
  6106  0F2C                     	;# 
  6107  0F2D                     	;# 
  6108  0F2E                     	;# 
  6109  0F2F                     	;# 
  6110  0F30                     	;# 
  6111  0F31                     	;# 
  6112  0F32                     	;# 
  6113  0F38                     	;# 
  6114  0F39                     	;# 
  6115  0F3A                     	;# 
  6116  0F3B                     	;# 
  6117  0F3C                     	;# 
  6118  0F3D                     	;# 
  6119  0F3E                     	;# 
  6120  0F3F                     	;# 
  6121  0F40                     	;# 
  6122  0F41                     	;# 
  6123  0F43                     	;# 
  6124  0F44                     	;# 
  6125  0F45                     	;# 
  6126  0F46                     	;# 
  6127  0F47                     	;# 
  6128  0F48                     	;# 
  6129  0F49                     	;# 
  6130  0F4A                     	;# 
  6131  0F4B                     	;# 
  6132  0F4C                     	;# 
  6133  0F4E                     	;# 
  6134  0F4F                     	;# 
  6135  0F50                     	;# 
  6136  0F51                     	;# 
  6137  0F52                     	;# 
  6138  0F53                     	;# 
  6139  0F54                     	;# 
  6140  0F55                     	;# 
  6141  0F56                     	;# 
  6142  0F57                     	;# 
  6143  0F59                     	;# 
  6144  0F5A                     	;# 
  6145  0F5B                     	;# 
  6146  0F5C                     	;# 
  6147  0F5D                     	;# 
  6148  0F61                     	;# 
  6149  0F62                     	;# 
  6150  0F64                     	;# 
  6151  0F65                     	;# 
  6152  0F66                     	;# 
  6153  0F67                     	;# 
  6154  0F68                     	;# 
  6155  0F69                     	;# 
  6156  0F6A                     	;# 
  6157  0F6B                     	;# 
  6158  0F6C                     	;# 
  6159  0F6D                     	;# 
  6160  0FE4                     	;# 
  6161  0FE5                     	;# 
  6162  0FE6                     	;# 
  6163  0FE7                     	;# 
  6164  0FE8                     	;# 
  6165  0FE9                     	;# 
  6166  0FEA                     	;# 
  6167  0FEB                     	;# 
  6168  0FED                     	;# 
  6169  0FEE                     	;# 
  6170  0FEF                     	;# 
  6171  0000                     	;# 
  6172  0001                     	;# 
  6173  0002                     	;# 
  6174  0003                     	;# 
  6175  0004                     	;# 
  6176  0005                     	;# 
  6177  0006                     	;# 
  6178  0007                     	;# 
  6179  0008                     	;# 
  6180  0009                     	;# 
  6181  000A                     	;# 
  6182  000B                     	;# 
  6183  000C                     	;# 
  6184  000D                     	;# 
  6185  000E                     	;# 
  6186  000F                     	;# 
  6187  0010                     	;# 
  6188  0011                     	;# 
  6189  0012                     	;# 
  6190  0013                     	;# 
  6191  0014                     	;# 
  6192  0015                     	;# 
  6193  0016                     	;# 
  6194  0017                     	;# 
  6195  0018                     	;# 
  6196  0019                     	;# 
  6197  001A                     	;# 
  6198  001C                     	;# 
  6199  001C                     	;# 
  6200  001D                     	;# 
  6201  001D                     	;# 
  6202  001E                     	;# 
  6203  001F                     	;# 
  6204  008C                     	;# 
  6205  008C                     	;# 
  6206  008D                     	;# 
  6207  008E                     	;# 
  6208  008E                     	;# 
  6209  008F                     	;# 
  6210  0090                     	;# 
  6211  0090                     	;# 
  6212  0091                     	;# 
  6213  0093                     	;# 
  6214  0094                     	;# 
  6215  0095                     	;# 
  6216  0096                     	;# 
  6217  0097                     	;# 
  6218  0098                     	;# 
  6219  0099                     	;# 
  6220  009A                     	;# 
  6221  009B                     	;# 
  6222  009C                     	;# 
  6223  009D                     	;# 
  6224  009E                     	;# 
  6225  010C                     	;# 
  6226  010D                     	;# 
  6227  010E                     	;# 
  6228  010E                     	;# 
  6229  010F                     	;# 
  6230  0110                     	;# 
  6231  0110                     	;# 
  6232  0111                     	;# 
  6233  0112                     	;# 
  6234  0112                     	;# 
  6235  0113                     	;# 
  6236  0114                     	;# 
  6237  0114                     	;# 
  6238  0115                     	;# 
  6239  0116                     	;# 
  6240  0116                     	;# 
  6241  0117                     	;# 
  6242  0119                     	;# 
  6243  0119                     	;# 
  6244  0119                     	;# 
  6245  011A                     	;# 
  6246  011A                     	;# 
  6247  011A                     	;# 
  6248  011B                     	;# 
  6249  011B                     	;# 
  6250  011B                     	;# 
  6251  011B                     	;# 
  6252  011B                     	;# 
  6253  011C                     	;# 
  6254  011C                     	;# 
  6255  011C                     	;# 
  6256  011D                     	;# 
  6257  011D                     	;# 
  6258  011D                     	;# 
  6259  011E                     	;# 
  6260  011E                     	;# 
  6261  011E                     	;# 
  6262  011F                     	;# 
  6263  011F                     	;# 
  6264  011F                     	;# 
  6265  011F                     	;# 
  6266  011F                     	;# 
  6267  018C                     	;# 
  6268  018D                     	;# 
  6269  018E                     	;# 
  6270  018F                     	;# 
  6271  0190                     	;# 
  6272  0191                     	;# 
  6273  0192                     	;# 
  6274  0196                     	;# 
  6275  0197                     	;# 
  6276  0198                     	;# 
  6277  0199                     	;# 
  6278  019A                     	;# 
  6279  019B                     	;# 
  6280  019C                     	;# 
  6281  020C                     	;# 
  6282  020C                     	;# 
  6283  020D                     	;# 
  6284  020E                     	;# 
  6285  020F                     	;# 
  6286  020F                     	;# 
  6287  0210                     	;# 
  6288  0210                     	;# 
  6289  0211                     	;# 
  6290  0211                     	;# 
  6291  0212                     	;# 
  6292  0212                     	;# 
  6293  0213                     	;# 
  6294  0214                     	;# 
  6295  0215                     	;# 
  6296  0215                     	;# 
  6297  0216                     	;# 
  6298  0216                     	;# 
  6299  0217                     	;# 
  6300  0217                     	;# 
  6301  0218                     	;# 
  6302  0218                     	;# 
  6303  0219                     	;# 
  6304  021A                     	;# 
  6305  021B                     	;# 
  6306  021B                     	;# 
  6307  021C                     	;# 
  6308  021C                     	;# 
  6309  021D                     	;# 
  6310  021D                     	;# 
  6311  021E                     	;# 
  6312  021F                     	;# 
  6313  028C                     	;# 
  6314  028C                     	;# 
  6315  028D                     	;# 
  6316  028D                     	;# 
  6317  028E                     	;# 
  6318  028F                     	;# 
  6319  0290                     	;# 
  6320  0290                     	;# 
  6321  0291                     	;# 
  6322  0292                     	;# 
  6323  0292                     	;# 
  6324  0293                     	;# 
  6325  0293                     	;# 
  6326  0294                     	;# 
  6327  0295                     	;# 
  6328  0296                     	;# 
  6329  0296                     	;# 
  6330  0297                     	;# 
  6331  0298                     	;# 
  6332  0298                     	;# 
  6333  0299                     	;# 
  6334  0299                     	;# 
  6335  029A                     	;# 
  6336  029B                     	;# 
  6337  029C                     	;# 
  6338  029C                     	;# 
  6339  029D                     	;# 
  6340  030C                     	;# 
  6341  030C                     	;# 
  6342  030D                     	;# 
  6343  030E                     	;# 
  6344  030F                     	;# 
  6345  0310                     	;# 
  6346  0310                     	;# 
  6347  0311                     	;# 
  6348  0312                     	;# 
  6349  0313                     	;# 
  6350  0314                     	;# 
  6351  0314                     	;# 
  6352  0315                     	;# 
  6353  0316                     	;# 
  6354  0317                     	;# 
  6355  0318                     	;# 
  6356  0318                     	;# 
  6357  0319                     	;# 
  6358  031A                     	;# 
  6359  031B                     	;# 
  6360  031C                     	;# 
  6361  031C                     	;# 
  6362  031D                     	;# 
  6363  031E                     	;# 
  6364  031F                     	;# 
  6365  038C                     	;# 
  6366  038C                     	;# 
  6367  038D                     	;# 
  6368  038E                     	;# 
  6369  0390                     	;# 
  6370  0390                     	;# 
  6371  0391                     	;# 
  6372  0392                     	;# 
  6373  040C                     	;# 
  6374  040D                     	;# 
  6375  040E                     	;# 
  6376  040F                     	;# 
  6377  0410                     	;# 
  6378  0411                     	;# 
  6379  0416                     	;# 
  6380  0416                     	;# 
  6381  0417                     	;# 
  6382  0418                     	;# 
  6383  0418                     	;# 
  6384  0419                     	;# 
  6385  041A                     	;# 
  6386  041A                     	;# 
  6387  041B                     	;# 
  6388  041C                     	;# 
  6389  041C                     	;# 
  6390  041D                     	;# 
  6391  041E                     	;# 
  6392  041F                     	;# 
  6393  048C                     	;# 
  6394  048C                     	;# 
  6395  048D                     	;# 
  6396  048E                     	;# 
  6397  048F                     	;# 
  6398  048F                     	;# 
  6399  0490                     	;# 
  6400  0491                     	;# 
  6401  0492                     	;# 
  6402  0492                     	;# 
  6403  0493                     	;# 
  6404  0494                     	;# 
  6405  0495                     	;# 
  6406  0495                     	;# 
  6407  0496                     	;# 
  6408  0497                     	;# 
  6409  0498                     	;# 
  6410  0499                     	;# 
  6411  049A                     	;# 
  6412  049B                     	;# 
  6413  049C                     	;# 
  6414  049D                     	;# 
  6415  050C                     	;# 
  6416  050C                     	;# 
  6417  050D                     	;# 
  6418  050E                     	;# 
  6419  050F                     	;# 
  6420  050F                     	;# 
  6421  0510                     	;# 
  6422  0511                     	;# 
  6423  0512                     	;# 
  6424  0512                     	;# 
  6425  0513                     	;# 
  6426  0514                     	;# 
  6427  0515                     	;# 
  6428  0515                     	;# 
  6429  0516                     	;# 
  6430  0517                     	;# 
  6431  0518                     	;# 
  6432  0519                     	;# 
  6433  051A                     	;# 
  6434  051B                     	;# 
  6435  051C                     	;# 
  6436  051D                     	;# 
  6437  058C                     	;# 
  6438  058C                     	;# 
  6439  058D                     	;# 
  6440  058E                     	;# 
  6441  058F                     	;# 
  6442  058F                     	;# 
  6443  0590                     	;# 
  6444  0591                     	;# 
  6445  0592                     	;# 
  6446  0593                     	;# 
  6447  060C                     	;# 
  6448  060D                     	;# 
  6449  060E                     	;# 
  6450  060F                     	;# 
  6451  0610                     	;# 
  6452  0611                     	;# 
  6453  0612                     	;# 
  6454  0613                     	;# 
  6455  0614                     	;# 
  6456  0616                     	;# 
  6457  0617                     	;# 
  6458  0618                     	;# 
  6459  0619                     	;# 
  6460  061A                     	;# 
  6461  061B                     	;# 
  6462  061C                     	;# 
  6463  061D                     	;# 
  6464  061E                     	;# 
  6465  068C                     	;# 
  6466  068D                     	;# 
  6467  068E                     	;# 
  6468  068F                     	;# 
  6469  0690                     	;# 
  6470  0691                     	;# 
  6471  0692                     	;# 
  6472  0693                     	;# 
  6473  0694                     	;# 
  6474  070C                     	;# 
  6475  070D                     	;# 
  6476  070E                     	;# 
  6477  070F                     	;# 
  6478  0710                     	;# 
  6479  0711                     	;# 
  6480  0712                     	;# 
  6481  0713                     	;# 
  6482  0714                     	;# 
  6483  0716                     	;# 
  6484  0717                     	;# 
  6485  0718                     	;# 
  6486  0719                     	;# 
  6487  071A                     	;# 
  6488  071B                     	;# 
  6489  071C                     	;# 
  6490  071D                     	;# 
  6491  071E                     	;# 
  6492  0796                     	;# 
  6493  0797                     	;# 
  6494  0798                     	;# 
  6495  0799                     	;# 
  6496  079A                     	;# 
  6497  079B                     	;# 
  6498  080C                     	;# 
  6499  080D                     	;# 
  6500  080E                     	;# 
  6501  080F                     	;# 
  6502  0810                     	;# 
  6503  0811                     	;# 
  6504  0812                     	;# 
  6505  0813                     	;# 
  6506  0814                     	;# 
  6507  081A                     	;# 
  6508  081B                     	;# 
  6509  081C                     	;# 
  6510  081D                     	;# 
  6511  081E                     	;# 
  6512  081F                     	;# 
  6513  088C                     	;# 
  6514  088D                     	;# 
  6515  088E                     	;# 
  6516  088F                     	;# 
  6517  0890                     	;# 
  6518  0891                     	;# 
  6519  0892                     	;# 
  6520  0893                     	;# 
  6521  0895                     	;# 
  6522  0896                     	;# 
  6523  0897                     	;# 
  6524  0898                     	;# 
  6525  0899                     	;# 
  6526  089A                     	;# 
  6527  089B                     	;# 
  6528  090C                     	;# 
  6529  090E                     	;# 
  6530  090F                     	;# 
  6531  091F                     	;# 
  6532  091F                     	;# 
  6533  098F                     	;# 
  6534  098F                     	;# 
  6535  0990                     	;# 
  6536  0991                     	;# 
  6537  0992                     	;# 
  6538  0993                     	;# 
  6539  0994                     	;# 
  6540  0995                     	;# 
  6541  0996                     	;# 
  6542  0997                     	;# 
  6543  0E0F                     	;# 
  6544  0E10                     	;# 
  6545  0E11                     	;# 
  6546  0E12                     	;# 
  6547  0E13                     	;# 
  6548  0E14                     	;# 
  6549  0E15                     	;# 
  6550  0E16                     	;# 
  6551  0E17                     	;# 
  6552  0E18                     	;# 
  6553  0E19                     	;# 
  6554  0E1A                     	;# 
  6555  0E1B                     	;# 
  6556  0E1C                     	;# 
  6557  0E1D                     	;# 
  6558  0E1E                     	;# 
  6559  0E1F                     	;# 
  6560  0E20                     	;# 
  6561  0E21                     	;# 
  6562  0E22                     	;# 
  6563  0E23                     	;# 
  6564  0E24                     	;# 
  6565  0E25                     	;# 
  6566  0E26                     	;# 
  6567  0E27                     	;# 
  6568  0E28                     	;# 
  6569  0E29                     	;# 
  6570  0E2A                     	;# 
  6571  0E2B                     	;# 
  6572  0E2C                     	;# 
  6573  0E2D                     	;# 
  6574  0E2E                     	;# 
  6575  0E2F                     	;# 
  6576  0E30                     	;# 
  6577  0E31                     	;# 
  6578  0E32                     	;# 
  6579  0E33                     	;# 
  6580  0E34                     	;# 
  6581  0E35                     	;# 
  6582  0E36                     	;# 
  6583  0E37                     	;# 
  6584  0E8F                     	;# 
  6585  0E90                     	;# 
  6586  0E91                     	;# 
  6587  0E92                     	;# 
  6588  0E93                     	;# 
  6589  0E94                     	;# 
  6590  0E95                     	;# 
  6591  0E96                     	;# 
  6592  0E97                     	;# 
  6593  0E9C                     	;# 
  6594  0E9D                     	;# 
  6595  0E9E                     	;# 
  6596  0EA1                     	;# 
  6597  0EA2                     	;# 
  6598  0EA3                     	;# 
  6599  0EA4                     	;# 
  6600  0EA5                     	;# 
  6601  0EA9                     	;# 
  6602  0EAA                     	;# 
  6603  0EAB                     	;# 
  6604  0EAC                     	;# 
  6605  0EB1                     	;# 
  6606  0EB2                     	;# 
  6607  0EB3                     	;# 
  6608  0EB8                     	;# 
  6609  0EB9                     	;# 
  6610  0EBA                     	;# 
  6611  0EBB                     	;# 
  6612  0EBC                     	;# 
  6613  0EBD                     	;# 
  6614  0EBE                     	;# 
  6615  0EC3                     	;# 
  6616  0EC5                     	;# 
  6617  0EC6                     	;# 
  6618  0EC7                     	;# 
  6619  0EC8                     	;# 
  6620  0EC9                     	;# 
  6621  0ECA                     	;# 
  6622  0ECB                     	;# 
  6623  0ECC                     	;# 
  6624  0F10                     	;# 
  6625  0F11                     	;# 
  6626  0F12                     	;# 
  6627  0F13                     	;# 
  6628  0F14                     	;# 
  6629  0F15                     	;# 
  6630  0F16                     	;# 
  6631  0F17                     	;# 
  6632  0F18                     	;# 
  6633  0F19                     	;# 
  6634  0F1A                     	;# 
  6635  0F1B                     	;# 
  6636  0F1C                     	;# 
  6637  0F1D                     	;# 
  6638  0F1E                     	;# 
  6639  0F1F                     	;# 
  6640  0F20                     	;# 
  6641  0F21                     	;# 
  6642  0F22                     	;# 
  6643  0F23                     	;# 
  6644  0F24                     	;# 
  6645  0F25                     	;# 
  6646  0F26                     	;# 
  6647  0F27                     	;# 
  6648  0F28                     	;# 
  6649  0F29                     	;# 
  6650  0F2A                     	;# 
  6651  0F2B                     	;# 
  6652  0F2C                     	;# 
  6653  0F2D                     	;# 
  6654  0F2E                     	;# 
  6655  0F2F                     	;# 
  6656  0F30                     	;# 
  6657  0F31                     	;# 
  6658  0F32                     	;# 
  6659  0F38                     	;# 
  6660  0F39                     	;# 
  6661  0F3A                     	;# 
  6662  0F3B                     	;# 
  6663  0F3C                     	;# 
  6664  0F3D                     	;# 
  6665  0F3E                     	;# 
  6666  0F3F                     	;# 
  6667  0F40                     	;# 
  6668  0F41                     	;# 
  6669  0F43                     	;# 
  6670  0F44                     	;# 
  6671  0F45                     	;# 
  6672  0F46                     	;# 
  6673  0F47                     	;# 
  6674  0F48                     	;# 
  6675  0F49                     	;# 
  6676  0F4A                     	;# 
  6677  0F4B                     	;# 
  6678  0F4C                     	;# 
  6679  0F4E                     	;# 
  6680  0F4F                     	;# 
  6681  0F50                     	;# 
  6682  0F51                     	;# 
  6683  0F52                     	;# 
  6684  0F53                     	;# 
  6685  0F54                     	;# 
  6686  0F55                     	;# 
  6687  0F56                     	;# 
  6688  0F57                     	;# 
  6689  0F59                     	;# 
  6690  0F5A                     	;# 
  6691  0F5B                     	;# 
  6692  0F5C                     	;# 
  6693  0F5D                     	;# 
  6694  0F61                     	;# 
  6695  0F62                     	;# 
  6696  0F64                     	;# 
  6697  0F65                     	;# 
  6698  0F66                     	;# 
  6699  0F67                     	;# 
  6700  0F68                     	;# 
  6701  0F69                     	;# 
  6702  0F6A                     	;# 
  6703  0F6B                     	;# 
  6704  0F6C                     	;# 
  6705  0F6D                     	;# 
  6706  0FE4                     	;# 
  6707  0FE5                     	;# 
  6708  0FE6                     	;# 
  6709  0FE7                     	;# 
  6710  0FE8                     	;# 
  6711  0FE9                     	;# 
  6712  0FEA                     	;# 
  6713  0FEB                     	;# 
  6714  0FED                     	;# 
  6715  0FEE                     	;# 
  6716  0FEF                     	;# 
  6717  0000                     	;# 
  6718  0001                     	;# 
  6719  0002                     	;# 
  6720  0003                     	;# 
  6721  0004                     	;# 
  6722  0005                     	;# 
  6723  0006                     	;# 
  6724  0007                     	;# 
  6725  0008                     	;# 
  6726  0009                     	;# 
  6727  000A                     	;# 
  6728  000B                     	;# 
  6729  000C                     	;# 
  6730  000D                     	;# 
  6731  000E                     	;# 
  6732  000F                     	;# 
  6733  0010                     	;# 
  6734  0011                     	;# 
  6735  0012                     	;# 
  6736  0013                     	;# 
  6737  0014                     	;# 
  6738  0015                     	;# 
  6739  0016                     	;# 
  6740  0017                     	;# 
  6741  0018                     	;# 
  6742  0019                     	;# 
  6743  001A                     	;# 
  6744  001C                     	;# 
  6745  001C                     	;# 
  6746  001D                     	;# 
  6747  001D                     	;# 
  6748  001E                     	;# 
  6749  001F                     	;# 
  6750  008C                     	;# 
  6751  008C                     	;# 
  6752  008D                     	;# 
  6753  008E                     	;# 
  6754  008E                     	;# 
  6755  008F                     	;# 
  6756  0090                     	;# 
  6757  0090                     	;# 
  6758  0091                     	;# 
  6759  0093                     	;# 
  6760  0094                     	;# 
  6761  0095                     	;# 
  6762  0096                     	;# 
  6763  0097                     	;# 
  6764  0098                     	;# 
  6765  0099                     	;# 
  6766  009A                     	;# 
  6767  009B                     	;# 
  6768  009C                     	;# 
  6769  009D                     	;# 
  6770  009E                     	;# 
  6771  010C                     	;# 
  6772  010D                     	;# 
  6773  010E                     	;# 
  6774  010E                     	;# 
  6775  010F                     	;# 
  6776  0110                     	;# 
  6777  0110                     	;# 
  6778  0111                     	;# 
  6779  0112                     	;# 
  6780  0112                     	;# 
  6781  0113                     	;# 
  6782  0114                     	;# 
  6783  0114                     	;# 
  6784  0115                     	;# 
  6785  0116                     	;# 
  6786  0116                     	;# 
  6787  0117                     	;# 
  6788  0119                     	;# 
  6789  0119                     	;# 
  6790  0119                     	;# 
  6791  011A                     	;# 
  6792  011A                     	;# 
  6793  011A                     	;# 
  6794  011B                     	;# 
  6795  011B                     	;# 
  6796  011B                     	;# 
  6797  011B                     	;# 
  6798  011B                     	;# 
  6799  011C                     	;# 
  6800  011C                     	;# 
  6801  011C                     	;# 
  6802  011D                     	;# 
  6803  011D                     	;# 
  6804  011D                     	;# 
  6805  011E                     	;# 
  6806  011E                     	;# 
  6807  011E                     	;# 
  6808  011F                     	;# 
  6809  011F                     	;# 
  6810  011F                     	;# 
  6811  011F                     	;# 
  6812  011F                     	;# 
  6813  018C                     	;# 
  6814  018D                     	;# 
  6815  018E                     	;# 
  6816  018F                     	;# 
  6817  0190                     	;# 
  6818  0191                     	;# 
  6819  0192                     	;# 
  6820  0196                     	;# 
  6821  0197                     	;# 
  6822  0198                     	;# 
  6823  0199                     	;# 
  6824  019A                     	;# 
  6825  019B                     	;# 
  6826  019C                     	;# 
  6827  020C                     	;# 
  6828  020C                     	;# 
  6829  020D                     	;# 
  6830  020E                     	;# 
  6831  020F                     	;# 
  6832  020F                     	;# 
  6833  0210                     	;# 
  6834  0210                     	;# 
  6835  0211                     	;# 
  6836  0211                     	;# 
  6837  0212                     	;# 
  6838  0212                     	;# 
  6839  0213                     	;# 
  6840  0214                     	;# 
  6841  0215                     	;# 
  6842  0215                     	;# 
  6843  0216                     	;# 
  6844  0216                     	;# 
  6845  0217                     	;# 
  6846  0217                     	;# 
  6847  0218                     	;# 
  6848  0218                     	;# 
  6849  0219                     	;# 
  6850  021A                     	;# 
  6851  021B                     	;# 
  6852  021B                     	;# 
  6853  021C                     	;# 
  6854  021C                     	;# 
  6855  021D                     	;# 
  6856  021D                     	;# 
  6857  021E                     	;# 
  6858  021F                     	;# 
  6859  028C                     	;# 
  6860  028C                     	;# 
  6861  028D                     	;# 
  6862  028D                     	;# 
  6863  028E                     	;# 
  6864  028F                     	;# 
  6865  0290                     	;# 
  6866  0290                     	;# 
  6867  0291                     	;# 
  6868  0292                     	;# 
  6869  0292                     	;# 
  6870  0293                     	;# 
  6871  0293                     	;# 
  6872  0294                     	;# 
  6873  0295                     	;# 
  6874  0296                     	;# 
  6875  0296                     	;# 
  6876  0297                     	;# 
  6877  0298                     	;# 
  6878  0298                     	;# 
  6879  0299                     	;# 
  6880  0299                     	;# 
  6881  029A                     	;# 
  6882  029B                     	;# 
  6883  029C                     	;# 
  6884  029C                     	;# 
  6885  029D                     	;# 
  6886  030C                     	;# 
  6887  030C                     	;# 
  6888  030D                     	;# 
  6889  030E                     	;# 
  6890  030F                     	;# 
  6891  0310                     	;# 
  6892  0310                     	;# 
  6893  0311                     	;# 
  6894  0312                     	;# 
  6895  0313                     	;# 
  6896  0314                     	;# 
  6897  0314                     	;# 
  6898  0315                     	;# 
  6899  0316                     	;# 
  6900  0317                     	;# 
  6901  0318                     	;# 
  6902  0318                     	;# 
  6903  0319                     	;# 
  6904  031A                     	;# 
  6905  031B                     	;# 
  6906  031C                     	;# 
  6907  031C                     	;# 
  6908  031D                     	;# 
  6909  031E                     	;# 
  6910  031F                     	;# 
  6911  038C                     	;# 
  6912  038C                     	;# 
  6913  038D                     	;# 
  6914  038E                     	;# 
  6915  0390                     	;# 
  6916  0390                     	;# 
  6917  0391                     	;# 
  6918  0392                     	;# 
  6919  040C                     	;# 
  6920  040D                     	;# 
  6921  040E                     	;# 
  6922  040F                     	;# 
  6923  0410                     	;# 
  6924  0411                     	;# 
  6925  0416                     	;# 
  6926  0416                     	;# 
  6927  0417                     	;# 
  6928  0418                     	;# 
  6929  0418                     	;# 
  6930  0419                     	;# 
  6931  041A                     	;# 
  6932  041A                     	;# 
  6933  041B                     	;# 
  6934  041C                     	;# 
  6935  041C                     	;# 
  6936  041D                     	;# 
  6937  041E                     	;# 
  6938  041F                     	;# 
  6939  048C                     	;# 
  6940  048C                     	;# 
  6941  048D                     	;# 
  6942  048E                     	;# 
  6943  048F                     	;# 
  6944  048F                     	;# 
  6945  0490                     	;# 
  6946  0491                     	;# 
  6947  0492                     	;# 
  6948  0492                     	;# 
  6949  0493                     	;# 
  6950  0494                     	;# 
  6951  0495                     	;# 
  6952  0495                     	;# 
  6953  0496                     	;# 
  6954  0497                     	;# 
  6955  0498                     	;# 
  6956  0499                     	;# 
  6957  049A                     	;# 
  6958  049B                     	;# 
  6959  049C                     	;# 
  6960  049D                     	;# 
  6961  050C                     	;# 
  6962  050C                     	;# 
  6963  050D                     	;# 
  6964  050E                     	;# 
  6965  050F                     	;# 
  6966  050F                     	;# 
  6967  0510                     	;# 
  6968  0511                     	;# 
  6969  0512                     	;# 
  6970  0512                     	;# 
  6971  0513                     	;# 
  6972  0514                     	;# 
  6973  0515                     	;# 
  6974  0515                     	;# 
  6975  0516                     	;# 
  6976  0517                     	;# 
  6977  0518                     	;# 
  6978  0519                     	;# 
  6979  051A                     	;# 
  6980  051B                     	;# 
  6981  051C                     	;# 
  6982  051D                     	;# 
  6983  058C                     	;# 
  6984  058C                     	;# 
  6985  058D                     	;# 
  6986  058E                     	;# 
  6987  058F                     	;# 
  6988  058F                     	;# 
  6989  0590                     	;# 
  6990  0591                     	;# 
  6991  0592                     	;# 
  6992  0593                     	;# 
  6993  060C                     	;# 
  6994  060D                     	;# 
  6995  060E                     	;# 
  6996  060F                     	;# 
  6997  0610                     	;# 
  6998  0611                     	;# 
  6999  0612                     	;# 
  7000  0613                     	;# 
  7001  0614                     	;# 
  7002  0616                     	;# 
  7003  0617                     	;# 
  7004  0618                     	;# 
  7005  0619                     	;# 
  7006  061A                     	;# 
  7007  061B                     	;# 
  7008  061C                     	;# 
  7009  061D                     	;# 
  7010  061E                     	;# 
  7011  068C                     	;# 
  7012  068D                     	;# 
  7013  068E                     	;# 
  7014  068F                     	;# 
  7015  0690                     	;# 
  7016  0691                     	;# 
  7017  0692                     	;# 
  7018  0693                     	;# 
  7019  0694                     	;# 
  7020  070C                     	;# 
  7021  070D                     	;# 
  7022  070E                     	;# 
  7023  070F                     	;# 
  7024  0710                     	;# 
  7025  0711                     	;# 
  7026  0712                     	;# 
  7027  0713                     	;# 
  7028  0714                     	;# 
  7029  0716                     	;# 
  7030  0717                     	;# 
  7031  0718                     	;# 
  7032  0719                     	;# 
  7033  071A                     	;# 
  7034  071B                     	;# 
  7035  071C                     	;# 
  7036  071D                     	;# 
  7037  071E                     	;# 
  7038  0796                     	;# 
  7039  0797                     	;# 
  7040  0798                     	;# 
  7041  0799                     	;# 
  7042  079A                     	;# 
  7043  079B                     	;# 
  7044  080C                     	;# 
  7045  080D                     	;# 
  7046  080E                     	;# 
  7047  080F                     	;# 
  7048  0810                     	;# 
  7049  0811                     	;# 
  7050  0812                     	;# 
  7051  0813                     	;# 
  7052  0814                     	;# 
  7053  081A                     	;# 
  7054  081B                     	;# 
  7055  081C                     	;# 
  7056  081D                     	;# 
  7057  081E                     	;# 
  7058  081F                     	;# 
  7059  088C                     	;# 
  7060  088D                     	;# 
  7061  088E                     	;# 
  7062  088F                     	;# 
  7063  0890                     	;# 
  7064  0891                     	;# 
  7065  0892                     	;# 
  7066  0893                     	;# 
  7067  0895                     	;# 
  7068  0896                     	;# 
  7069  0897                     	;# 
  7070  0898                     	;# 
  7071  0899                     	;# 
  7072  089A                     	;# 
  7073  089B                     	;# 
  7074  090C                     	;# 
  7075  090E                     	;# 
  7076  090F                     	;# 
  7077  091F                     	;# 
  7078  091F                     	;# 
  7079  098F                     	;# 
  7080  098F                     	;# 
  7081  0990                     	;# 
  7082  0991                     	;# 
  7083  0992                     	;# 
  7084  0993                     	;# 
  7085  0994                     	;# 
  7086  0995                     	;# 
  7087  0996                     	;# 
  7088  0997                     	;# 
  7089  0E0F                     	;# 
  7090  0E10                     	;# 
  7091  0E11                     	;# 
  7092  0E12                     	;# 
  7093  0E13                     	;# 
  7094  0E14                     	;# 
  7095  0E15                     	;# 
  7096  0E16                     	;# 
  7097  0E17                     	;# 
  7098  0E18                     	;# 
  7099  0E19                     	;# 
  7100  0E1A                     	;# 
  7101  0E1B                     	;# 
  7102  0E1C                     	;# 
  7103  0E1D                     	;# 
  7104  0E1E                     	;# 
  7105  0E1F                     	;# 
  7106  0E20                     	;# 
  7107  0E21                     	;# 
  7108  0E22                     	;# 
  7109  0E23                     	;# 
  7110  0E24                     	;# 
  7111  0E25                     	;# 
  7112  0E26                     	;# 
  7113  0E27                     	;# 
  7114  0E28                     	;# 
  7115  0E29                     	;# 
  7116  0E2A                     	;# 
  7117  0E2B                     	;# 
  7118  0E2C                     	;# 
  7119  0E2D                     	;# 
  7120  0E2E                     	;# 
  7121  0E2F                     	;# 
  7122  0E30                     	;# 
  7123  0E31                     	;# 
  7124  0E32                     	;# 
  7125  0E33                     	;# 
  7126  0E34                     	;# 
  7127  0E35                     	;# 
  7128  0E36                     	;# 
  7129  0E37                     	;# 
  7130  0E8F                     	;# 
  7131  0E90                     	;# 
  7132  0E91                     	;# 
  7133  0E92                     	;# 
  7134  0E93                     	;# 
  7135  0E94                     	;# 
  7136  0E95                     	;# 
  7137  0E96                     	;# 
  7138  0E97                     	;# 
  7139  0E9C                     	;# 
  7140  0E9D                     	;# 
  7141  0E9E                     	;# 
  7142  0EA1                     	;# 
  7143  0EA2                     	;# 
  7144  0EA3                     	;# 
  7145  0EA4                     	;# 
  7146  0EA5                     	;# 
  7147  0EA9                     	;# 
  7148  0EAA                     	;# 
  7149  0EAB                     	;# 
  7150  0EAC                     	;# 
  7151  0EB1                     	;# 
  7152  0EB2                     	;# 
  7153  0EB3                     	;# 
  7154  0EB8                     	;# 
  7155  0EB9                     	;# 
  7156  0EBA                     	;# 
  7157  0EBB                     	;# 
  7158  0EBC                     	;# 
  7159  0EBD                     	;# 
  7160  0EBE                     	;# 
  7161  0EC3                     	;# 
  7162  0EC5                     	;# 
  7163  0EC6                     	;# 
  7164  0EC7                     	;# 
  7165  0EC8                     	;# 
  7166  0EC9                     	;# 
  7167  0ECA                     	;# 
  7168  0ECB                     	;# 
  7169  0ECC                     	;# 
  7170  0F10                     	;# 
  7171  0F11                     	;# 
  7172  0F12                     	;# 
  7173  0F13                     	;# 
  7174  0F14                     	;# 
  7175  0F15                     	;# 
  7176  0F16                     	;# 
  7177  0F17                     	;# 
  7178  0F18                     	;# 
  7179  0F19                     	;# 
  7180  0F1A                     	;# 
  7181  0F1B                     	;# 
  7182  0F1C                     	;# 
  7183  0F1D                     	;# 
  7184  0F1E                     	;# 
  7185  0F1F                     	;# 
  7186  0F20                     	;# 
  7187  0F21                     	;# 
  7188  0F22                     	;# 
  7189  0F23                     	;# 
  7190  0F24                     	;# 
  7191  0F25                     	;# 
  7192  0F26                     	;# 
  7193  0F27                     	;# 
  7194  0F28                     	;# 
  7195  0F29                     	;# 
  7196  0F2A                     	;# 
  7197  0F2B                     	;# 
  7198  0F2C                     	;# 
  7199  0F2D                     	;# 
  7200  0F2E                     	;# 
  7201  0F2F                     	;# 
  7202  0F30                     	;# 
  7203  0F31                     	;# 
  7204  0F32                     	;# 
  7205  0F38                     	;# 
  7206  0F39                     	;# 
  7207  0F3A                     	;# 
  7208  0F3B                     	;# 
  7209  0F3C                     	;# 
  7210  0F3D                     	;# 
  7211  0F3E                     	;# 
  7212  0F3F                     	;# 
  7213  0F40                     	;# 
  7214  0F41                     	;# 
  7215  0F43                     	;# 
  7216  0F44                     	;# 
  7217  0F45                     	;# 
  7218  0F46                     	;# 
  7219  0F47                     	;# 
  7220  0F48                     	;# 
  7221  0F49                     	;# 
  7222  0F4A                     	;# 
  7223  0F4B                     	;# 
  7224  0F4C                     	;# 
  7225  0F4E                     	;# 
  7226  0F4F                     	;# 
  7227  0F50                     	;# 
  7228  0F51                     	;# 
  7229  0F52                     	;# 
  7230  0F53                     	;# 
  7231  0F54                     	;# 
  7232  0F55                     	;# 
  7233  0F56                     	;# 
  7234  0F57                     	;# 
  7235  0F59                     	;# 
  7236  0F5A                     	;# 
  7237  0F5B                     	;# 
  7238  0F5C                     	;# 
  7239  0F5D                     	;# 
  7240  0F61                     	;# 
  7241  0F62                     	;# 
  7242  0F64                     	;# 
  7243  0F65                     	;# 
  7244  0F66                     	;# 
  7245  0F67                     	;# 
  7246  0F68                     	;# 
  7247  0F69                     	;# 
  7248  0F6A                     	;# 
  7249  0F6B                     	;# 
  7250  0F6C                     	;# 
  7251  0F6D                     	;# 
  7252  0FE4                     	;# 
  7253  0FE5                     	;# 
  7254  0FE6                     	;# 
  7255  0FE7                     	;# 
  7256  0FE8                     	;# 
  7257  0FE9                     	;# 
  7258  0FEA                     	;# 
  7259  0FEB                     	;# 
  7260  0FED                     	;# 
  7261  0FEE                     	;# 
  7262  0FEF                     	;# 
  7263  0000                     	;# 
  7264  0001                     	;# 
  7265  0002                     	;# 
  7266  0003                     	;# 
  7267  0004                     	;# 
  7268  0005                     	;# 
  7269  0006                     	;# 
  7270  0007                     	;# 
  7271  0008                     	;# 
  7272  0009                     	;# 
  7273  000A                     	;# 
  7274  000B                     	;# 
  7275  000C                     	;# 
  7276  000D                     	;# 
  7277  000E                     	;# 
  7278  000F                     	;# 
  7279  0010                     	;# 
  7280  0011                     	;# 
  7281  0012                     	;# 
  7282  0013                     	;# 
  7283  0014                     	;# 
  7284  0015                     	;# 
  7285  0016                     	;# 
  7286  0017                     	;# 
  7287  0018                     	;# 
  7288  0019                     	;# 
  7289  001A                     	;# 
  7290  001C                     	;# 
  7291  001C                     	;# 
  7292  001D                     	;# 
  7293  001D                     	;# 
  7294  001E                     	;# 
  7295  001F                     	;# 
  7296  008C                     	;# 
  7297  008C                     	;# 
  7298  008D                     	;# 
  7299  008E                     	;# 
  7300  008E                     	;# 
  7301  008F                     	;# 
  7302  0090                     	;# 
  7303  0090                     	;# 
  7304  0091                     	;# 
  7305  0093                     	;# 
  7306  0094                     	;# 
  7307  0095                     	;# 
  7308  0096                     	;# 
  7309  0097                     	;# 
  7310  0098                     	;# 
  7311  0099                     	;# 
  7312  009A                     	;# 
  7313  009B                     	;# 
  7314  009C                     	;# 
  7315  009D                     	;# 
  7316  009E                     	;# 
  7317  010C                     	;# 
  7318  010D                     	;# 
  7319  010E                     	;# 
  7320  010E                     	;# 
  7321  010F                     	;# 
  7322  0110                     	;# 
  7323  0110                     	;# 
  7324  0111                     	;# 
  7325  0112                     	;# 
  7326  0112                     	;# 
  7327  0113                     	;# 
  7328  0114                     	;# 
  7329  0114                     	;# 
  7330  0115                     	;# 
  7331  0116                     	;# 
  7332  0116                     	;# 
  7333  0117                     	;# 
  7334  0119                     	;# 
  7335  0119                     	;# 
  7336  0119                     	;# 
  7337  011A                     	;# 
  7338  011A                     	;# 
  7339  011A                     	;# 
  7340  011B                     	;# 
  7341  011B                     	;# 
  7342  011B                     	;# 
  7343  011B                     	;# 
  7344  011B                     	;# 
  7345  011C                     	;# 
  7346  011C                     	;# 
  7347  011C                     	;# 
  7348  011D                     	;# 
  7349  011D                     	;# 
  7350  011D                     	;# 
  7351  011E                     	;# 
  7352  011E                     	;# 
  7353  011E                     	;# 
  7354  011F                     	;# 
  7355  011F                     	;# 
  7356  011F                     	;# 
  7357  011F                     	;# 
  7358  011F                     	;# 
  7359  018C                     	;# 
  7360  018D                     	;# 
  7361  018E                     	;# 
  7362  018F                     	;# 
  7363  0190                     	;# 
  7364  0191                     	;# 
  7365  0192                     	;# 
  7366  0196                     	;# 
  7367  0197                     	;# 
  7368  0198                     	;# 
  7369  0199                     	;# 
  7370  019A                     	;# 
  7371  019B                     	;# 
  7372  019C                     	;# 
  7373  020C                     	;# 
  7374  020C                     	;# 
  7375  020D                     	;# 
  7376  020E                     	;# 
  7377  020F                     	;# 
  7378  020F                     	;# 
  7379  0210                     	;# 
  7380  0210                     	;# 
  7381  0211                     	;# 
  7382  0211                     	;# 
  7383  0212                     	;# 
  7384  0212                     	;# 
  7385  0213                     	;# 
  7386  0214                     	;# 
  7387  0215                     	;# 
  7388  0215                     	;# 
  7389  0216                     	;# 
  7390  0216                     	;# 
  7391  0217                     	;# 
  7392  0217                     	;# 
  7393  0218                     	;# 
  7394  0218                     	;# 
  7395  0219                     	;# 
  7396  021A                     	;# 
  7397  021B                     	;# 
  7398  021B                     	;# 
  7399  021C                     	;# 
  7400  021C                     	;# 
  7401  021D                     	;# 
  7402  021D                     	;# 
  7403  021E                     	;# 
  7404  021F                     	;# 
  7405  028C                     	;# 
  7406  028C                     	;# 
  7407  028D                     	;# 
  7408  028D                     	;# 
  7409  028E                     	;# 
  7410  028F                     	;# 
  7411  0290                     	;# 
  7412  0290                     	;# 
  7413  0291                     	;# 
  7414  0292                     	;# 
  7415  0292                     	;# 
  7416  0293                     	;# 
  7417  0293                     	;# 
  7418  0294                     	;# 
  7419  0295                     	;# 
  7420  0296                     	;# 
  7421  0296                     	;# 
  7422  0297                     	;# 
  7423  0298                     	;# 
  7424  0298                     	;# 
  7425  0299                     	;# 
  7426  0299                     	;# 
  7427  029A                     	;# 
  7428  029B                     	;# 
  7429  029C                     	;# 
  7430  029C                     	;# 
  7431  029D                     	;# 
  7432  030C                     	;# 
  7433  030C                     	;# 
  7434  030D                     	;# 
  7435  030E                     	;# 
  7436  030F                     	;# 
  7437  0310                     	;# 
  7438  0310                     	;# 
  7439  0311                     	;# 
  7440  0312                     	;# 
  7441  0313                     	;# 
  7442  0314                     	;# 
  7443  0314                     	;# 
  7444  0315                     	;# 
  7445  0316                     	;# 
  7446  0317                     	;# 
  7447  0318                     	;# 
  7448  0318                     	;# 
  7449  0319                     	;# 
  7450  031A                     	;# 
  7451  031B                     	;# 
  7452  031C                     	;# 
  7453  031C                     	;# 
  7454  031D                     	;# 
  7455  031E                     	;# 
  7456  031F                     	;# 
  7457  038C                     	;# 
  7458  038C                     	;# 
  7459  038D                     	;# 
  7460  038E                     	;# 
  7461  0390                     	;# 
  7462  0390                     	;# 
  7463  0391                     	;# 
  7464  0392                     	;# 
  7465  040C                     	;# 
  7466  040D                     	;# 
  7467  040E                     	;# 
  7468  040F                     	;# 
  7469  0410                     	;# 
  7470  0411                     	;# 
  7471  0416                     	;# 
  7472  0416                     	;# 
  7473  0417                     	;# 
  7474  0418                     	;# 
  7475  0418                     	;# 
  7476  0419                     	;# 
  7477  041A                     	;# 
  7478  041A                     	;# 
  7479  041B                     	;# 
  7480  041C                     	;# 
  7481  041C                     	;# 
  7482  041D                     	;# 
  7483  041E                     	;# 
  7484  041F                     	;# 
  7485  048C                     	;# 
  7486  048C                     	;# 
  7487  048D                     	;# 
  7488  048E                     	;# 
  7489  048F                     	;# 
  7490  048F                     	;# 
  7491  0490                     	;# 
  7492  0491                     	;# 
  7493  0492                     	;# 
  7494  0492                     	;# 
  7495  0493                     	;# 
  7496  0494                     	;# 
  7497  0495                     	;# 
  7498  0495                     	;# 
  7499  0496                     	;# 
  7500  0497                     	;# 
  7501  0498                     	;# 
  7502  0499                     	;# 
  7503  049A                     	;# 
  7504  049B                     	;# 
  7505  049C                     	;# 
  7506  049D                     	;# 
  7507  050C                     	;# 
  7508  050C                     	;# 
  7509  050D                     	;# 
  7510  050E                     	;# 
  7511  050F                     	;# 
  7512  050F                     	;# 
  7513  0510                     	;# 
  7514  0511                     	;# 
  7515  0512                     	;# 
  7516  0512                     	;# 
  7517  0513                     	;# 
  7518  0514                     	;# 
  7519  0515                     	;# 
  7520  0515                     	;# 
  7521  0516                     	;# 
  7522  0517                     	;# 
  7523  0518                     	;# 
  7524  0519                     	;# 
  7525  051A                     	;# 
  7526  051B                     	;# 
  7527  051C                     	;# 
  7528  051D                     	;# 
  7529  058C                     	;# 
  7530  058C                     	;# 
  7531  058D                     	;# 
  7532  058E                     	;# 
  7533  058F                     	;# 
  7534  058F                     	;# 
  7535  0590                     	;# 
  7536  0591                     	;# 
  7537  0592                     	;# 
  7538  0593                     	;# 
  7539  060C                     	;# 
  7540  060D                     	;# 
  7541  060E                     	;# 
  7542  060F                     	;# 
  7543  0610                     	;# 
  7544  0611                     	;# 
  7545  0612                     	;# 
  7546  0613                     	;# 
  7547  0614                     	;# 
  7548  0616                     	;# 
  7549  0617                     	;# 
  7550  0618                     	;# 
  7551  0619                     	;# 
  7552  061A                     	;# 
  7553  061B                     	;# 
  7554  061C                     	;# 
  7555  061D                     	;# 
  7556  061E                     	;# 
  7557  068C                     	;# 
  7558  068D                     	;# 
  7559  068E                     	;# 
  7560  068F                     	;# 
  7561  0690                     	;# 
  7562  0691                     	;# 
  7563  0692                     	;# 
  7564  0693                     	;# 
  7565  0694                     	;# 
  7566  070C                     	;# 
  7567  070D                     	;# 
  7568  070E                     	;# 
  7569  070F                     	;# 
  7570  0710                     	;# 
  7571  0711                     	;# 
  7572  0712                     	;# 
  7573  0713                     	;# 
  7574  0714                     	;# 
  7575  0716                     	;# 
  7576  0717                     	;# 
  7577  0718                     	;# 
  7578  0719                     	;# 
  7579  071A                     	;# 
  7580  071B                     	;# 
  7581  071C                     	;# 
  7582  071D                     	;# 
  7583  071E                     	;# 
  7584  0796                     	;# 
  7585  0797                     	;# 
  7586  0798                     	;# 
  7587  0799                     	;# 
  7588  079A                     	;# 
  7589  079B                     	;# 
  7590  080C                     	;# 
  7591  080D                     	;# 
  7592  080E                     	;# 
  7593  080F                     	;# 
  7594  0810                     	;# 
  7595  0811                     	;# 
  7596  0812                     	;# 
  7597  0813                     	;# 
  7598  0814                     	;# 
  7599  081A                     	;# 
  7600  081B                     	;# 
  7601  081C                     	;# 
  7602  081D                     	;# 
  7603  081E                     	;# 
  7604  081F                     	;# 
  7605  088C                     	;# 
  7606  088D                     	;# 
  7607  088E                     	;# 
  7608  088F                     	;# 
  7609  0890                     	;# 
  7610  0891                     	;# 
  7611  0892                     	;# 
  7612  0893                     	;# 
  7613  0895                     	;# 
  7614  0896                     	;# 
  7615  0897                     	;# 
  7616  0898                     	;# 
  7617  0899                     	;# 
  7618  089A                     	;# 
  7619  089B                     	;# 
  7620  090C                     	;# 
  7621  090E                     	;# 
  7622  090F                     	;# 
  7623  091F                     	;# 
  7624  091F                     	;# 
  7625  098F                     	;# 
  7626  098F                     	;# 
  7627  0990                     	;# 
  7628  0991                     	;# 
  7629  0992                     	;# 
  7630  0993                     	;# 
  7631  0994                     	;# 
  7632  0995                     	;# 
  7633  0996                     	;# 
  7634  0997                     	;# 
  7635  0E0F                     	;# 
  7636  0E10                     	;# 
  7637  0E11                     	;# 
  7638  0E12                     	;# 
  7639  0E13                     	;# 
  7640  0E14                     	;# 
  7641  0E15                     	;# 
  7642  0E16                     	;# 
  7643  0E17                     	;# 
  7644  0E18                     	;# 
  7645  0E19                     	;# 
  7646  0E1A                     	;# 
  7647  0E1B                     	;# 
  7648  0E1C                     	;# 
  7649  0E1D                     	;# 
  7650  0E1E                     	;# 
  7651  0E1F                     	;# 
  7652  0E20                     	;# 
  7653  0E21                     	;# 
  7654  0E22                     	;# 
  7655  0E23                     	;# 
  7656  0E24                     	;# 
  7657  0E25                     	;# 
  7658  0E26                     	;# 
  7659  0E27                     	;# 
  7660  0E28                     	;# 
  7661  0E29                     	;# 
  7662  0E2A                     	;# 
  7663  0E2B                     	;# 
  7664  0E2C                     	;# 
  7665  0E2D                     	;# 
  7666  0E2E                     	;# 
  7667  0E2F                     	;# 
  7668  0E30                     	;# 
  7669  0E31                     	;# 
  7670  0E32                     	;# 
  7671  0E33                     	;# 
  7672  0E34                     	;# 
  7673  0E35                     	;# 
  7674  0E36                     	;# 
  7675  0E37                     	;# 
  7676  0E8F                     	;# 
  7677  0E90                     	;# 
  7678  0E91                     	;# 
  7679  0E92                     	;# 
  7680  0E93                     	;# 
  7681  0E94                     	;# 
  7682  0E95                     	;# 
  7683  0E96                     	;# 
  7684  0E97                     	;# 
  7685  0E9C                     	;# 
  7686  0E9D                     	;# 
  7687  0E9E                     	;# 
  7688  0EA1                     	;# 
  7689  0EA2                     	;# 
  7690  0EA3                     	;# 
  7691  0EA4                     	;# 
  7692  0EA5                     	;# 
  7693  0EA9                     	;# 
  7694  0EAA                     	;# 
  7695  0EAB                     	;# 
  7696  0EAC                     	;# 
  7697  0EB1                     	;# 
  7698  0EB2                     	;# 
  7699  0EB3                     	;# 
  7700  0EB8                     	;# 
  7701  0EB9                     	;# 
  7702  0EBA                     	;# 
  7703  0EBB                     	;# 
  7704  0EBC                     	;# 
  7705  0EBD                     	;# 
  7706  0EBE                     	;# 
  7707  0EC3                     	;# 
  7708  0EC5                     	;# 
  7709  0EC6                     	;# 
  7710  0EC7                     	;# 
  7711  0EC8                     	;# 
  7712  0EC9                     	;# 
  7713  0ECA                     	;# 
  7714  0ECB                     	;# 
  7715  0ECC                     	;# 
  7716  0F10                     	;# 
  7717  0F11                     	;# 
  7718  0F12                     	;# 
  7719  0F13                     	;# 
  7720  0F14                     	;# 
  7721  0F15                     	;# 
  7722  0F16                     	;# 
  7723  0F17                     	;# 
  7724  0F18                     	;# 
  7725  0F19                     	;# 
  7726  0F1A                     	;# 
  7727  0F1B                     	;# 
  7728  0F1C                     	;# 
  7729  0F1D                     	;# 
  7730  0F1E                     	;# 
  7731  0F1F                     	;# 
  7732  0F20                     	;# 
  7733  0F21                     	;# 
  7734  0F22                     	;# 
  7735  0F23                     	;# 
  7736  0F24                     	;# 
  7737  0F25                     	;# 
  7738  0F26                     	;# 
  7739  0F27                     	;# 
  7740  0F28                     	;# 
  7741  0F29                     	;# 
  7742  0F2A                     	;# 
  7743  0F2B                     	;# 
  7744  0F2C                     	;# 
  7745  0F2D                     	;# 
  7746  0F2E                     	;# 
  7747  0F2F                     	;# 
  7748  0F30                     	;# 
  7749  0F31                     	;# 
  7750  0F32                     	;# 
  7751  0F38                     	;# 
  7752  0F39                     	;# 
  7753  0F3A                     	;# 
  7754  0F3B                     	;# 
  7755  0F3C                     	;# 
  7756  0F3D                     	;# 
  7757  0F3E                     	;# 
  7758  0F3F                     	;# 
  7759  0F40                     	;# 
  7760  0F41                     	;# 
  7761  0F43                     	;# 
  7762  0F44                     	;# 
  7763  0F45                     	;# 
  7764  0F46                     	;# 
  7765  0F47                     	;# 
  7766  0F48                     	;# 
  7767  0F49                     	;# 
  7768  0F4A                     	;# 
  7769  0F4B                     	;# 
  7770  0F4C                     	;# 
  7771  0F4E                     	;# 
  7772  0F4F                     	;# 
  7773  0F50                     	;# 
  7774  0F51                     	;# 
  7775  0F52                     	;# 
  7776  0F53                     	;# 
  7777  0F54                     	;# 
  7778  0F55                     	;# 
  7779  0F56                     	;# 
  7780  0F57                     	;# 
  7781  0F59                     	;# 
  7782  0F5A                     	;# 
  7783  0F5B                     	;# 
  7784  0F5C                     	;# 
  7785  0F5D                     	;# 
  7786  0F61                     	;# 
  7787  0F62                     	;# 
  7788  0F64                     	;# 
  7789  0F65                     	;# 
  7790  0F66                     	;# 
  7791  0F67                     	;# 
  7792  0F68                     	;# 
  7793  0F69                     	;# 
  7794  0F6A                     	;# 
  7795  0F6B                     	;# 
  7796  0F6C                     	;# 
  7797  0F6D                     	;# 
  7798  0FE4                     	;# 
  7799  0FE5                     	;# 
  7800  0FE6                     	;# 
  7801  0FE7                     	;# 
  7802  0FE8                     	;# 
  7803  0FE9                     	;# 
  7804  0FEA                     	;# 
  7805  0FEB                     	;# 
  7806  0FED                     	;# 
  7807  0FEE                     	;# 
  7808  0FEF                     	;# 
  7809  0000                     	;# 
  7810  0001                     	;# 
  7811  0002                     	;# 
  7812  0003                     	;# 
  7813  0004                     	;# 
  7814  0005                     	;# 
  7815  0006                     	;# 
  7816  0007                     	;# 
  7817  0008                     	;# 
  7818  0009                     	;# 
  7819  000A                     	;# 
  7820  000B                     	;# 
  7821  000C                     	;# 
  7822  000D                     	;# 
  7823  000E                     	;# 
  7824  000F                     	;# 
  7825  0010                     	;# 
  7826  0011                     	;# 
  7827  0012                     	;# 
  7828  0013                     	;# 
  7829  0014                     	;# 
  7830  0015                     	;# 
  7831  0016                     	;# 
  7832  0017                     	;# 
  7833  0018                     	;# 
  7834  0019                     	;# 
  7835  001A                     	;# 
  7836  001C                     	;# 
  7837  001C                     	;# 
  7838  001D                     	;# 
  7839  001D                     	;# 
  7840  001E                     	;# 
  7841  001F                     	;# 
  7842  008C                     	;# 
  7843  008C                     	;# 
  7844  008D                     	;# 
  7845  008E                     	;# 
  7846  008E                     	;# 
  7847  008F                     	;# 
  7848  0090                     	;# 
  7849  0090                     	;# 
  7850  0091                     	;# 
  7851  0093                     	;# 
  7852  0094                     	;# 
  7853  0095                     	;# 
  7854  0096                     	;# 
  7855  0097                     	;# 
  7856  0098                     	;# 
  7857  0099                     	;# 
  7858  009A                     	;# 
  7859  009B                     	;# 
  7860  009C                     	;# 
  7861  009D                     	;# 
  7862  009E                     	;# 
  7863  010C                     	;# 
  7864  010D                     	;# 
  7865  010E                     	;# 
  7866  010E                     	;# 
  7867  010F                     	;# 
  7868  0110                     	;# 
  7869  0110                     	;# 
  7870  0111                     	;# 
  7871  0112                     	;# 
  7872  0112                     	;# 
  7873  0113                     	;# 
  7874  0114                     	;# 
  7875  0114                     	;# 
  7876  0115                     	;# 
  7877  0116                     	;# 
  7878  0116                     	;# 
  7879  0117                     	;# 
  7880  0119                     	;# 
  7881  0119                     	;# 
  7882  0119                     	;# 
  7883  011A                     	;# 
  7884  011A                     	;# 
  7885  011A                     	;# 
  7886  011B                     	;# 
  7887  011B                     	;# 
  7888  011B                     	;# 
  7889  011B                     	;# 
  7890  011B                     	;# 
  7891  011C                     	;# 
  7892  011C                     	;# 
  7893  011C                     	;# 
  7894  011D                     	;# 
  7895  011D                     	;# 
  7896  011D                     	;# 
  7897  011E                     	;# 
  7898  011E                     	;# 
  7899  011E                     	;# 
  7900  011F                     	;# 
  7901  011F                     	;# 
  7902  011F                     	;# 
  7903  011F                     	;# 
  7904  011F                     	;# 
  7905  018C                     	;# 
  7906  018D                     	;# 
  7907  018E                     	;# 
  7908  018F                     	;# 
  7909  0190                     	;# 
  7910  0191                     	;# 
  7911  0192                     	;# 
  7912  0196                     	;# 
  7913  0197                     	;# 
  7914  0198                     	;# 
  7915  0199                     	;# 
  7916  019A                     	;# 
  7917  019B                     	;# 
  7918  019C                     	;# 
  7919  020C                     	;# 
  7920  020C                     	;# 
  7921  020D                     	;# 
  7922  020E                     	;# 
  7923  020F                     	;# 
  7924  020F                     	;# 
  7925  0210                     	;# 
  7926  0210                     	;# 
  7927  0211                     	;# 
  7928  0211                     	;# 
  7929  0212                     	;# 
  7930  0212                     	;# 
  7931  0213                     	;# 
  7932  0214                     	;# 
  7933  0215                     	;# 
  7934  0215                     	;# 
  7935  0216                     	;# 
  7936  0216                     	;# 
  7937  0217                     	;# 
  7938  0217                     	;# 
  7939  0218                     	;# 
  7940  0218                     	;# 
  7941  0219                     	;# 
  7942  021A                     	;# 
  7943  021B                     	;# 
  7944  021B                     	;# 
  7945  021C                     	;# 
  7946  021C                     	;# 
  7947  021D                     	;# 
  7948  021D                     	;# 
  7949  021E                     	;# 
  7950  021F                     	;# 
  7951  028C                     	;# 
  7952  028C                     	;# 
  7953  028D                     	;# 
  7954  028D                     	;# 
  7955  028E                     	;# 
  7956  028F                     	;# 
  7957  0290                     	;# 
  7958  0290                     	;# 
  7959  0291                     	;# 
  7960  0292                     	;# 
  7961  0292                     	;# 
  7962  0293                     	;# 
  7963  0293                     	;# 
  7964  0294                     	;# 
  7965  0295                     	;# 
  7966  0296                     	;# 
  7967  0296                     	;# 
  7968  0297                     	;# 
  7969  0298                     	;# 
  7970  0298                     	;# 
  7971  0299                     	;# 
  7972  0299                     	;# 
  7973  029A                     	;# 
  7974  029B                     	;# 
  7975  029C                     	;# 
  7976  029C                     	;# 
  7977  029D                     	;# 
  7978  030C                     	;# 
  7979  030C                     	;# 
  7980  030D                     	;# 
  7981  030E                     	;# 
  7982  030F                     	;# 
  7983  0310                     	;# 
  7984  0310                     	;# 
  7985  0311                     	;# 
  7986  0312                     	;# 
  7987  0313                     	;# 
  7988  0314                     	;# 
  7989  0314                     	;# 
  7990  0315                     	;# 
  7991  0316                     	;# 
  7992  0317                     	;# 
  7993  0318                     	;# 
  7994  0318                     	;# 
  7995  0319                     	;# 
  7996  031A                     	;# 
  7997  031B                     	;# 
  7998  031C                     	;# 
  7999  031C                     	;# 
  8000  031D                     	;# 
  8001  031E                     	;# 
  8002  031F                     	;# 
  8003  038C                     	;# 
  8004  038C                     	;# 
  8005  038D                     	;# 
  8006  038E                     	;# 
  8007  0390                     	;# 
  8008  0390                     	;# 
  8009  0391                     	;# 
  8010  0392                     	;# 
  8011  040C                     	;# 
  8012  040D                     	;# 
  8013  040E                     	;# 
  8014  040F                     	;# 
  8015  0410                     	;# 
  8016  0411                     	;# 
  8017  0416                     	;# 
  8018  0416                     	;# 
  8019  0417                     	;# 
  8020  0418                     	;# 
  8021  0418                     	;# 
  8022  0419                     	;# 
  8023  041A                     	;# 
  8024  041A                     	;# 
  8025  041B                     	;# 
  8026  041C                     	;# 
  8027  041C                     	;# 
  8028  041D                     	;# 
  8029  041E                     	;# 
  8030  041F                     	;# 
  8031  048C                     	;# 
  8032  048C                     	;# 
  8033  048D                     	;# 
  8034  048E                     	;# 
  8035  048F                     	;# 
  8036  048F                     	;# 
  8037  0490                     	;# 
  8038  0491                     	;# 
  8039  0492                     	;# 
  8040  0492                     	;# 
  8041  0493                     	;# 
  8042  0494                     	;# 
  8043  0495                     	;# 
  8044  0495                     	;# 
  8045  0496                     	;# 
  8046  0497                     	;# 
  8047  0498                     	;# 
  8048  0499                     	;# 
  8049  049A                     	;# 
  8050  049B                     	;# 
  8051  049C                     	;# 
  8052  049D                     	;# 
  8053  050C                     	;# 
  8054  050C                     	;# 
  8055  050D                     	;# 
  8056  050E                     	;# 
  8057  050F                     	;# 
  8058  050F                     	;# 
  8059  0510                     	;# 
  8060  0511                     	;# 
  8061  0512                     	;# 
  8062  0512                     	;# 
  8063  0513                     	;# 
  8064  0514                     	;# 
  8065  0515                     	;# 
  8066  0515                     	;# 
  8067  0516                     	;# 
  8068  0517                     	;# 
  8069  0518                     	;# 
  8070  0519                     	;# 
  8071  051A                     	;# 
  8072  051B                     	;# 
  8073  051C                     	;# 
  8074  051D                     	;# 
  8075  058C                     	;# 
  8076  058C                     	;# 
  8077  058D                     	;# 
  8078  058E                     	;# 
  8079  058F                     	;# 
  8080  058F                     	;# 
  8081  0590                     	;# 
  8082  0591                     	;# 
  8083  0592                     	;# 
  8084  0593                     	;# 
  8085  060C                     	;# 
  8086  060D                     	;# 
  8087  060E                     	;# 
  8088  060F                     	;# 
  8089  0610                     	;# 
  8090  0611                     	;# 
  8091  0612                     	;# 
  8092  0613                     	;# 
  8093  0614                     	;# 
  8094  0616                     	;# 
  8095  0617                     	;# 
  8096  0618                     	;# 
  8097  0619                     	;# 
  8098  061A                     	;# 
  8099  061B                     	;# 
  8100  061C                     	;# 
  8101  061D                     	;# 
  8102  061E                     	;# 
  8103  068C                     	;# 
  8104  068D                     	;# 
  8105  068E                     	;# 
  8106  068F                     	;# 
  8107  0690                     	;# 
  8108  0691                     	;# 
  8109  0692                     	;# 
  8110  0693                     	;# 
  8111  0694                     	;# 
  8112  070C                     	;# 
  8113  070D                     	;# 
  8114  070E                     	;# 
  8115  070F                     	;# 
  8116  0710                     	;# 
  8117  0711                     	;# 
  8118  0712                     	;# 
  8119  0713                     	;# 
  8120  0714                     	;# 
  8121  0716                     	;# 
  8122  0717                     	;# 
  8123  0718                     	;# 
  8124  0719                     	;# 
  8125  071A                     	;# 
  8126  071B                     	;# 
  8127  071C                     	;# 
  8128  071D                     	;# 
  8129  071E                     	;# 
  8130  0796                     	;# 
  8131  0797                     	;# 
  8132  0798                     	;# 
  8133  0799                     	;# 
  8134  079A                     	;# 
  8135  079B                     	;# 
  8136  080C                     	;# 
  8137  080D                     	;# 
  8138  080E                     	;# 
  8139  080F                     	;# 
  8140  0810                     	;# 
  8141  0811                     	;# 
  8142  0812                     	;# 
  8143  0813                     	;# 
  8144  0814                     	;# 
  8145  081A                     	;# 
  8146  081B                     	;# 
  8147  081C                     	;# 
  8148  081D                     	;# 
  8149  081E                     	;# 
  8150  081F                     	;# 
  8151  088C                     	;# 
  8152  088D                     	;# 
  8153  088E                     	;# 
  8154  088F                     	;# 
  8155  0890                     	;# 
  8156  0891                     	;# 
  8157  0892                     	;# 
  8158  0893                     	;# 
  8159  0895                     	;# 
  8160  0896                     	;# 
  8161  0897                     	;# 
  8162  0898                     	;# 
  8163  0899                     	;# 
  8164  089A                     	;# 
  8165  089B                     	;# 
  8166  090C                     	;# 
  8167  090E                     	;# 
  8168  090F                     	;# 
  8169  091F                     	;# 
  8170  091F                     	;# 
  8171  098F                     	;# 
  8172  098F                     	;# 
  8173  0990                     	;# 
  8174  0991                     	;# 
  8175  0992                     	;# 
  8176  0993                     	;# 
  8177  0994                     	;# 
  8178  0995                     	;# 
  8179  0996                     	;# 
  8180  0997                     	;# 
  8181  0E0F                     	;# 
  8182  0E10                     	;# 
  8183  0E11                     	;# 
  8184  0E12                     	;# 
  8185  0E13                     	;# 
  8186  0E14                     	;# 
  8187  0E15                     	;# 
  8188  0E16                     	;# 
  8189  0E17                     	;# 
  8190  0E18                     	;# 
  8191  0E19                     	;# 
  8192  0E1A                     	;# 
  8193  0E1B                     	;# 
  8194  0E1C                     	;# 
  8195  0E1D                     	;# 
  8196  0E1E                     	;# 
  8197  0E1F                     	;# 
  8198  0E20                     	;# 
  8199  0E21                     	;# 
  8200  0E22                     	;# 
  8201  0E23                     	;# 
  8202  0E24                     	;# 
  8203  0E25                     	;# 
  8204  0E26                     	;# 
  8205  0E27                     	;# 
  8206  0E28                     	;# 
  8207  0E29                     	;# 
  8208  0E2A                     	;# 
  8209  0E2B                     	;# 
  8210  0E2C                     	;# 
  8211  0E2D                     	;# 
  8212  0E2E                     	;# 
  8213  0E2F                     	;# 
  8214  0E30                     	;# 
  8215  0E31                     	;# 
  8216  0E32                     	;# 
  8217  0E33                     	;# 
  8218  0E34                     	;# 
  8219  0E35                     	;# 
  8220  0E36                     	;# 
  8221  0E37                     	;# 
  8222  0E8F                     	;# 
  8223  0E90                     	;# 
  8224  0E91                     	;# 
  8225  0E92                     	;# 
  8226  0E93                     	;# 
  8227  0E94                     	;# 
  8228  0E95                     	;# 
  8229  0E96                     	;# 
  8230  0E97                     	;# 
  8231  0E9C                     	;# 
  8232  0E9D                     	;# 
  8233  0E9E                     	;# 
  8234  0EA1                     	;# 
  8235  0EA2                     	;# 
  8236  0EA3                     	;# 
  8237  0EA4                     	;# 
  8238  0EA5                     	;# 
  8239  0EA9                     	;# 
  8240  0EAA                     	;# 
  8241  0EAB                     	;# 
  8242  0EAC                     	;# 
  8243  0EB1                     	;# 
  8244  0EB2                     	;# 
  8245  0EB3                     	;# 
  8246  0EB8                     	;# 
  8247  0EB9                     	;# 
  8248  0EBA                     	;# 
  8249  0EBB                     	;# 
  8250  0EBC                     	;# 
  8251  0EBD                     	;# 
  8252  0EBE                     	;# 
  8253  0EC3                     	;# 
  8254  0EC5                     	;# 
  8255  0EC6                     	;# 
  8256  0EC7                     	;# 
  8257  0EC8                     	;# 
  8258  0EC9                     	;# 
  8259  0ECA                     	;# 
  8260  0ECB                     	;# 
  8261  0ECC                     	;# 
  8262  0F10                     	;# 
  8263  0F11                     	;# 
  8264  0F12                     	;# 
  8265  0F13                     	;# 
  8266  0F14                     	;# 
  8267  0F15                     	;# 
  8268  0F16                     	;# 
  8269  0F17                     	;# 
  8270  0F18                     	;# 
  8271  0F19                     	;# 
  8272  0F1A                     	;# 
  8273  0F1B                     	;# 
  8274  0F1C                     	;# 
  8275  0F1D                     	;# 
  8276  0F1E                     	;# 
  8277  0F1F                     	;# 
  8278  0F20                     	;# 
  8279  0F21                     	;# 
  8280  0F22                     	;# 
  8281  0F23                     	;# 
  8282  0F24                     	;# 
  8283  0F25                     	;# 
  8284  0F26                     	;# 
  8285  0F27                     	;# 
  8286  0F28                     	;# 
  8287  0F29                     	;# 
  8288  0F2A                     	;# 
  8289  0F2B                     	;# 
  8290  0F2C                     	;# 
  8291  0F2D                     	;# 
  8292  0F2E                     	;# 
  8293  0F2F                     	;# 
  8294  0F30                     	;# 
  8295  0F31                     	;# 
  8296  0F32                     	;# 
  8297  0F38                     	;# 
  8298  0F39                     	;# 
  8299  0F3A                     	;# 
  8300  0F3B                     	;# 
  8301  0F3C                     	;# 
  8302  0F3D                     	;# 
  8303  0F3E                     	;# 
  8304  0F3F                     	;# 
  8305  0F40                     	;# 
  8306  0F41                     	;# 
  8307  0F43                     	;# 
  8308  0F44                     	;# 
  8309  0F45                     	;# 
  8310  0F46                     	;# 
  8311  0F47                     	;# 
  8312  0F48                     	;# 
  8313  0F49                     	;# 
  8314  0F4A                     	;# 
  8315  0F4B                     	;# 
  8316  0F4C                     	;# 
  8317  0F4E                     	;# 
  8318  0F4F                     	;# 
  8319  0F50                     	;# 
  8320  0F51                     	;# 
  8321  0F52                     	;# 
  8322  0F53                     	;# 
  8323  0F54                     	;# 
  8324  0F55                     	;# 
  8325  0F56                     	;# 
  8326  0F57                     	;# 
  8327  0F59                     	;# 
  8328  0F5A                     	;# 
  8329  0F5B                     	;# 
  8330  0F5C                     	;# 
  8331  0F5D                     	;# 
  8332  0F61                     	;# 
  8333  0F62                     	;# 
  8334  0F64                     	;# 
  8335  0F65                     	;# 
  8336  0F66                     	;# 
  8337  0F67                     	;# 
  8338  0F68                     	;# 
  8339  0F69                     	;# 
  8340  0F6A                     	;# 
  8341  0F6B                     	;# 
  8342  0F6C                     	;# 
  8343  0F6D                     	;# 
  8344  0FE4                     	;# 
  8345  0FE5                     	;# 
  8346  0FE6                     	;# 
  8347  0FE7                     	;# 
  8348  0FE8                     	;# 
  8349  0FE9                     	;# 
  8350  0FEA                     	;# 
  8351  0FEB                     	;# 
  8352  0FED                     	;# 
  8353  0FEE                     	;# 
  8354  0FEF                     	;# 
  8355  0000                     	;# 
  8356  0001                     	;# 
  8357  0002                     	;# 
  8358  0003                     	;# 
  8359  0004                     	;# 
  8360  0005                     	;# 
  8361  0006                     	;# 
  8362  0007                     	;# 
  8363  0008                     	;# 
  8364  0009                     	;# 
  8365  000A                     	;# 
  8366  000B                     	;# 
  8367  000C                     	;# 
  8368  000D                     	;# 
  8369  000E                     	;# 
  8370  000F                     	;# 
  8371  0010                     	;# 
  8372  0011                     	;# 
  8373  0012                     	;# 
  8374  0013                     	;# 
  8375  0014                     	;# 
  8376  0015                     	;# 
  8377  0016                     	;# 
  8378  0017                     	;# 
  8379  0018                     	;# 
  8380  0019                     	;# 
  8381  001A                     	;# 
  8382  001C                     	;# 
  8383  001C                     	;# 
  8384  001D                     	;# 
  8385  001D                     	;# 
  8386  001E                     	;# 
  8387  001F                     	;# 
  8388  008C                     	;# 
  8389  008C                     	;# 
  8390  008D                     	;# 
  8391  008E                     	;# 
  8392  008E                     	;# 
  8393  008F                     	;# 
  8394  0090                     	;# 
  8395  0090                     	;# 
  8396  0091                     	;# 
  8397  0093                     	;# 
  8398  0094                     	;# 
  8399  0095                     	;# 
  8400  0096                     	;# 
  8401  0097                     	;# 
  8402  0098                     	;# 
  8403  0099                     	;# 
  8404  009A                     	;# 
  8405  009B                     	;# 
  8406  009C                     	;# 
  8407  009D                     	;# 
  8408  009E                     	;# 
  8409  010C                     	;# 
  8410  010D                     	;# 
  8411  010E                     	;# 
  8412  010E                     	;# 
  8413  010F                     	;# 
  8414  0110                     	;# 
  8415  0110                     	;# 
  8416  0111                     	;# 
  8417  0112                     	;# 
  8418  0112                     	;# 
  8419  0113                     	;# 
  8420  0114                     	;# 
  8421  0114                     	;# 
  8422  0115                     	;# 
  8423  0116                     	;# 
  8424  0116                     	;# 
  8425  0117                     	;# 
  8426  0119                     	;# 
  8427  0119                     	;# 
  8428  0119                     	;# 
  8429  011A                     	;# 
  8430  011A                     	;# 
  8431  011A                     	;# 
  8432  011B                     	;# 
  8433  011B                     	;# 
  8434  011B                     	;# 
  8435  011B                     	;# 
  8436  011B                     	;# 
  8437  011C                     	;# 
  8438  011C                     	;# 
  8439  011C                     	;# 
  8440  011D                     	;# 
  8441  011D                     	;# 
  8442  011D                     	;# 
  8443  011E                     	;# 
  8444  011E                     	;# 
  8445  011E                     	;# 
  8446  011F                     	;# 
  8447  011F                     	;# 
  8448  011F                     	;# 
  8449  011F                     	;# 
  8450  011F                     	;# 
  8451  018C                     	;# 
  8452  018D                     	;# 
  8453  018E                     	;# 
  8454  018F                     	;# 
  8455  0190                     	;# 
  8456  0191                     	;# 
  8457  0192                     	;# 
  8458  0196                     	;# 
  8459  0197                     	;# 
  8460  0198                     	;# 
  8461  0199                     	;# 
  8462  019A                     	;# 
  8463  019B                     	;# 
  8464  019C                     	;# 
  8465  020C                     	;# 
  8466  020C                     	;# 
  8467  020D                     	;# 
  8468  020E                     	;# 
  8469  020F                     	;# 
  8470  020F                     	;# 
  8471  0210                     	;# 
  8472  0210                     	;# 
  8473  0211                     	;# 
  8474  0211                     	;# 
  8475  0212                     	;# 
  8476  0212                     	;# 
  8477  0213                     	;# 
  8478  0214                     	;# 
  8479  0215                     	;# 
  8480  0215                     	;# 
  8481  0216                     	;# 
  8482  0216                     	;# 
  8483  0217                     	;# 
  8484  0217                     	;# 
  8485  0218                     	;# 
  8486  0218                     	;# 
  8487  0219                     	;# 
  8488  021A                     	;# 
  8489  021B                     	;# 
  8490  021B                     	;# 
  8491  021C                     	;# 
  8492  021C                     	;# 
  8493  021D                     	;# 
  8494  021D                     	;# 
  8495  021E                     	;# 
  8496  021F                     	;# 
  8497  028C                     	;# 
  8498  028C                     	;# 
  8499  028D                     	;# 
  8500  028D                     	;# 
  8501  028E                     	;# 
  8502  028F                     	;# 
  8503  0290                     	;# 
  8504  0290                     	;# 
  8505  0291                     	;# 
  8506  0292                     	;# 
  8507  0292                     	;# 
  8508  0293                     	;# 
  8509  0293                     	;# 
  8510  0294                     	;# 
  8511  0295                     	;# 
  8512  0296                     	;# 
  8513  0296                     	;# 
  8514  0297                     	;# 
  8515  0298                     	;# 
  8516  0298                     	;# 
  8517  0299                     	;# 
  8518  0299                     	;# 
  8519  029A                     	;# 
  8520  029B                     	;# 
  8521  029C                     	;# 
  8522  029C                     	;# 
  8523  029D                     	;# 
  8524  030C                     	;# 
  8525  030C                     	;# 
  8526  030D                     	;# 
  8527  030E                     	;# 
  8528  030F                     	;# 
  8529  0310                     	;# 
  8530  0310                     	;# 
  8531  0311                     	;# 
  8532  0312                     	;# 
  8533  0313                     	;# 
  8534  0314                     	;# 
  8535  0314                     	;# 
  8536  0315                     	;# 
  8537  0316                     	;# 
  8538  0317                     	;# 
  8539  0318                     	;# 
  8540  0318                     	;# 
  8541  0319                     	;# 
  8542  031A                     	;# 
  8543  031B                     	;# 
  8544  031C                     	;# 
  8545  031C                     	;# 
  8546  031D                     	;# 
  8547  031E                     	;# 
  8548  031F                     	;# 
  8549  038C                     	;# 
  8550  038C                     	;# 
  8551  038D                     	;# 
  8552  038E                     	;# 
  8553  0390                     	;# 
  8554  0390                     	;# 
  8555  0391                     	;# 
  8556  0392                     	;# 
  8557  040C                     	;# 
  8558  040D                     	;# 
  8559  040E                     	;# 
  8560  040F                     	;# 
  8561  0410                     	;# 
  8562  0411                     	;# 
  8563  0416                     	;# 
  8564  0416                     	;# 
  8565  0417                     	;# 
  8566  0418                     	;# 
  8567  0418                     	;# 
  8568  0419                     	;# 
  8569  041A                     	;# 
  8570  041A                     	;# 
  8571  041B                     	;# 
  8572  041C                     	;# 
  8573  041C                     	;# 
  8574  041D                     	;# 
  8575  041E                     	;# 
  8576  041F                     	;# 
  8577  048C                     	;# 
  8578  048C                     	;# 
  8579  048D                     	;# 
  8580  048E                     	;# 
  8581  048F                     	;# 
  8582  048F                     	;# 
  8583  0490                     	;# 
  8584  0491                     	;# 
  8585  0492                     	;# 
  8586  0492                     	;# 
  8587  0493                     	;# 
  8588  0494                     	;# 
  8589  0495                     	;# 
  8590  0495                     	;# 
  8591  0496                     	;# 
  8592  0497                     	;# 
  8593  0498                     	;# 
  8594  0499                     	;# 
  8595  049A                     	;# 
  8596  049B                     	;# 
  8597  049C                     	;# 
  8598  049D                     	;# 
  8599  050C                     	;# 
  8600  050C                     	;# 
  8601  050D                     	;# 
  8602  050E                     	;# 
  8603  050F                     	;# 
  8604  050F                     	;# 
  8605  0510                     	;# 
  8606  0511                     	;# 
  8607  0512                     	;# 
  8608  0512                     	;# 
  8609  0513                     	;# 
  8610  0514                     	;# 
  8611  0515                     	;# 
  8612  0515                     	;# 
  8613  0516                     	;# 
  8614  0517                     	;# 
  8615  0518                     	;# 
  8616  0519                     	;# 
  8617  051A                     	;# 
  8618  051B                     	;# 
  8619  051C                     	;# 
  8620  051D                     	;# 
  8621  058C                     	;# 
  8622  058C                     	;# 
  8623  058D                     	;# 
  8624  058E                     	;# 
  8625  058F                     	;# 
  8626  058F                     	;# 
  8627  0590                     	;# 
  8628  0591                     	;# 
  8629  0592                     	;# 
  8630  0593                     	;# 
  8631  060C                     	;# 
  8632  060D                     	;# 
  8633  060E                     	;# 
  8634  060F                     	;# 
  8635  0610                     	;# 
  8636  0611                     	;# 
  8637  0612                     	;# 
  8638  0613                     	;# 
  8639  0614                     	;# 
  8640  0616                     	;# 
  8641  0617                     	;# 
  8642  0618                     	;# 
  8643  0619                     	;# 
  8644  061A                     	;# 
  8645  061B                     	;# 
  8646  061C                     	;# 
  8647  061D                     	;# 
  8648  061E                     	;# 
  8649  068C                     	;# 
  8650  068D                     	;# 
  8651  068E                     	;# 
  8652  068F                     	;# 
  8653  0690                     	;# 
  8654  0691                     	;# 
  8655  0692                     	;# 
  8656  0693                     	;# 
  8657  0694                     	;# 
  8658  070C                     	;# 
  8659  070D                     	;# 
  8660  070E                     	;# 
  8661  070F                     	;# 
  8662  0710                     	;# 
  8663  0711                     	;# 
  8664  0712                     	;# 
  8665  0713                     	;# 
  8666  0714                     	;# 
  8667  0716                     	;# 
  8668  0717                     	;# 
  8669  0718                     	;# 
  8670  0719                     	;# 
  8671  071A                     	;# 
  8672  071B                     	;# 
  8673  071C                     	;# 
  8674  071D                     	;# 
  8675  071E                     	;# 
  8676  0796                     	;# 
  8677  0797                     	;# 
  8678  0798                     	;# 
  8679  0799                     	;# 
  8680  079A                     	;# 
  8681  079B                     	;# 
  8682  080C                     	;# 
  8683  080D                     	;# 
  8684  080E                     	;# 
  8685  080F                     	;# 
  8686  0810                     	;# 
  8687  0811                     	;# 
  8688  0812                     	;# 
  8689  0813                     	;# 
  8690  0814                     	;# 
  8691  081A                     	;# 
  8692  081B                     	;# 
  8693  081C                     	;# 
  8694  081D                     	;# 
  8695  081E                     	;# 
  8696  081F                     	;# 
  8697  088C                     	;# 
  8698  088D                     	;# 
  8699  088E                     	;# 
  8700  088F                     	;# 
  8701  0890                     	;# 
  8702  0891                     	;# 
  8703  0892                     	;# 
  8704  0893                     	;# 
  8705  0895                     	;# 
  8706  0896                     	;# 
  8707  0897                     	;# 
  8708  0898                     	;# 
  8709  0899                     	;# 
  8710  089A                     	;# 
  8711  089B                     	;# 
  8712  090C                     	;# 
  8713  090E                     	;# 
  8714  090F                     	;# 
  8715  091F                     	;# 
  8716  091F                     	;# 
  8717  098F                     	;# 
  8718  098F                     	;# 
  8719  0990                     	;# 
  8720  0991                     	;# 
  8721  0992                     	;# 
  8722  0993                     	;# 
  8723  0994                     	;# 
  8724  0995                     	;# 
  8725  0996                     	;# 
  8726  0997                     	;# 
  8727  0E0F                     	;# 
  8728  0E10                     	;# 
  8729  0E11                     	;# 
  8730  0E12                     	;# 
  8731  0E13                     	;# 
  8732  0E14                     	;# 
  8733  0E15                     	;# 
  8734  0E16                     	;# 
  8735  0E17                     	;# 
  8736  0E18                     	;# 
  8737  0E19                     	;# 
  8738  0E1A                     	;# 
  8739  0E1B                     	;# 
  8740  0E1C                     	;# 
  8741  0E1D                     	;# 
  8742  0E1E                     	;# 
  8743  0E1F                     	;# 
  8744  0E20                     	;# 
  8745  0E21                     	;# 
  8746  0E22                     	;# 
  8747  0E23                     	;# 
  8748  0E24                     	;# 
  8749  0E25                     	;# 
  8750  0E26                     	;# 
  8751  0E27                     	;# 
  8752  0E28                     	;# 
  8753  0E29                     	;# 
  8754  0E2A                     	;# 
  8755  0E2B                     	;# 
  8756  0E2C                     	;# 
  8757  0E2D                     	;# 
  8758  0E2E                     	;# 
  8759  0E2F                     	;# 
  8760  0E30                     	;# 
  8761  0E31                     	;# 
  8762  0E32                     	;# 
  8763  0E33                     	;# 
  8764  0E34                     	;# 
  8765  0E35                     	;# 
  8766  0E36                     	;# 
  8767  0E37                     	;# 
  8768  0E8F                     	;# 
  8769  0E90                     	;# 
  8770  0E91                     	;# 
  8771  0E92                     	;# 
  8772  0E93                     	;# 
  8773  0E94                     	;# 
  8774  0E95                     	;# 
  8775  0E96                     	;# 
  8776  0E97                     	;# 
  8777  0E9C                     	;# 
  8778  0E9D                     	;# 
  8779  0E9E                     	;# 
  8780  0EA1                     	;# 
  8781  0EA2                     	;# 
  8782  0EA3                     	;# 
  8783  0EA4                     	;# 
  8784  0EA5                     	;# 
  8785  0EA9                     	;# 
  8786  0EAA                     	;# 
  8787  0EAB                     	;# 
  8788  0EAC                     	;# 
  8789  0EB1                     	;# 
  8790  0EB2                     	;# 
  8791  0EB3                     	;# 
  8792  0EB8                     	;# 
  8793  0EB9                     	;# 
  8794  0EBA                     	;# 
  8795  0EBB                     	;# 
  8796  0EBC                     	;# 
  8797  0EBD                     	;# 
  8798  0EBE                     	;# 
  8799  0EC3                     	;# 
  8800  0EC5                     	;# 
  8801  0EC6                     	;# 
  8802  0EC7                     	;# 
  8803  0EC8                     	;# 
  8804  0EC9                     	;# 
  8805  0ECA                     	;# 
  8806  0ECB                     	;# 
  8807  0ECC                     	;# 
  8808  0F10                     	;# 
  8809  0F11                     	;# 
  8810  0F12                     	;# 
  8811  0F13                     	;# 
  8812  0F14                     	;# 
  8813  0F15                     	;# 
  8814  0F16                     	;# 
  8815  0F17                     	;# 
  8816  0F18                     	;# 
  8817  0F19                     	;# 
  8818  0F1A                     	;# 
  8819  0F1B                     	;# 
  8820  0F1C                     	;# 
  8821  0F1D                     	;# 
  8822  0F1E                     	;# 
  8823  0F1F                     	;# 
  8824  0F20                     	;# 
  8825  0F21                     	;# 
  8826  0F22                     	;# 
  8827  0F23                     	;# 
  8828  0F24                     	;# 
  8829  0F25                     	;# 
  8830  0F26                     	;# 
  8831  0F27                     	;# 
  8832  0F28                     	;# 
  8833  0F29                     	;# 
  8834  0F2A                     	;# 
  8835  0F2B                     	;# 
  8836  0F2C                     	;# 
  8837  0F2D                     	;# 
  8838  0F2E                     	;# 
  8839  0F2F                     	;# 
  8840  0F30                     	;# 
  8841  0F31                     	;# 
  8842  0F32                     	;# 
  8843  0F38                     	;# 
  8844  0F39                     	;# 
  8845  0F3A                     	;# 
  8846  0F3B                     	;# 
  8847  0F3C                     	;# 
  8848  0F3D                     	;# 
  8849  0F3E                     	;# 
  8850  0F3F                     	;# 
  8851  0F40                     	;# 
  8852  0F41                     	;# 
  8853  0F43                     	;# 
  8854  0F44                     	;# 
  8855  0F45                     	;# 
  8856  0F46                     	;# 
  8857  0F47                     	;# 
  8858  0F48                     	;# 
  8859  0F49                     	;# 
  8860  0F4A                     	;# 
  8861  0F4B                     	;# 
  8862  0F4C                     	;# 
  8863  0F4E                     	;# 
  8864  0F4F                     	;# 
  8865  0F50                     	;# 
  8866  0F51                     	;# 
  8867  0F52                     	;# 
  8868  0F53                     	;# 
  8869  0F54                     	;# 
  8870  0F55                     	;# 
  8871  0F56                     	;# 
  8872  0F57                     	;# 
  8873  0F59                     	;# 
  8874  0F5A                     	;# 
  8875  0F5B                     	;# 
  8876  0F5C                     	;# 
  8877  0F5D                     	;# 
  8878  0F61                     	;# 
  8879  0F62                     	;# 
  8880  0F64                     	;# 
  8881  0F65                     	;# 
  8882  0F66                     	;# 
  8883  0F67                     	;# 
  8884  0F68                     	;# 
  8885  0F69                     	;# 
  8886  0F6A                     	;# 
  8887  0F6B                     	;# 
  8888  0F6C                     	;# 
  8889  0F6D                     	;# 
  8890  0FE4                     	;# 
  8891  0FE5                     	;# 
  8892  0FE6                     	;# 
  8893  0FE7                     	;# 
  8894  0FE8                     	;# 
  8895  0FE9                     	;# 
  8896  0FEA                     	;# 
  8897  0FEB                     	;# 
  8898  0FED                     	;# 
  8899  0FEE                     	;# 
  8900  0FEF                     	;# 
  8901  0000                     	;# 
  8902  0001                     	;# 
  8903  0002                     	;# 
  8904  0003                     	;# 
  8905  0004                     	;# 
  8906  0005                     	;# 
  8907  0006                     	;# 
  8908  0007                     	;# 
  8909  0008                     	;# 
  8910  0009                     	;# 
  8911  000A                     	;# 
  8912  000B                     	;# 
  8913  000C                     	;# 
  8914  000D                     	;# 
  8915  000E                     	;# 
  8916  000F                     	;# 
  8917  0010                     	;# 
  8918  0011                     	;# 
  8919  0012                     	;# 
  8920  0013                     	;# 
  8921  0014                     	;# 
  8922  0015                     	;# 
  8923  0016                     	;# 
  8924  0017                     	;# 
  8925  0018                     	;# 
  8926  0019                     	;# 
  8927  001A                     	;# 
  8928  001C                     	;# 
  8929  001C                     	;# 
  8930  001D                     	;# 
  8931  001D                     	;# 
  8932  001E                     	;# 
  8933  001F                     	;# 
  8934  008C                     	;# 
  8935  008C                     	;# 
  8936  008D                     	;# 
  8937  008E                     	;# 
  8938  008E                     	;# 
  8939  008F                     	;# 
  8940  0090                     	;# 
  8941  0090                     	;# 
  8942  0091                     	;# 
  8943  0093                     	;# 
  8944  0094                     	;# 
  8945  0095                     	;# 
  8946  0096                     	;# 
  8947  0097                     	;# 
  8948  0098                     	;# 
  8949  0099                     	;# 
  8950  009A                     	;# 
  8951  009B                     	;# 
  8952  009C                     	;# 
  8953  009D                     	;# 
  8954  009E                     	;# 
  8955  010C                     	;# 
  8956  010D                     	;# 
  8957  010E                     	;# 
  8958  010E                     	;# 
  8959  010F                     	;# 
  8960  0110                     	;# 
  8961  0110                     	;# 
  8962  0111                     	;# 
  8963  0112                     	;# 
  8964  0112                     	;# 
  8965  0113                     	;# 
  8966  0114                     	;# 
  8967  0114                     	;# 
  8968  0115                     	;# 
  8969  0116                     	;# 
  8970  0116                     	;# 
  8971  0117                     	;# 
  8972  0119                     	;# 
  8973  0119                     	;# 
  8974  0119                     	;# 
  8975  011A                     	;# 
  8976  011A                     	;# 
  8977  011A                     	;# 
  8978  011B                     	;# 
  8979  011B                     	;# 
  8980  011B                     	;# 
  8981  011B                     	;# 
  8982  011B                     	;# 
  8983  011C                     	;# 
  8984  011C                     	;# 
  8985  011C                     	;# 
  8986  011D                     	;# 
  8987  011D                     	;# 
  8988  011D                     	;# 
  8989  011E                     	;# 
  8990  011E                     	;# 
  8991  011E                     	;# 
  8992  011F                     	;# 
  8993  011F                     	;# 
  8994  011F                     	;# 
  8995  011F                     	;# 
  8996  011F                     	;# 
  8997  018C                     	;# 
  8998  018D                     	;# 
  8999  018E                     	;# 
  9000  018F                     	;# 
  9001  0190                     	;# 
  9002  0191                     	;# 
  9003  0192                     	;# 
  9004  0196                     	;# 
  9005  0197                     	;# 
  9006  0198                     	;# 
  9007  0199                     	;# 
  9008  019A                     	;# 
  9009  019B                     	;# 
  9010  019C                     	;# 
  9011  020C                     	;# 
  9012  020C                     	;# 
  9013  020D                     	;# 
  9014  020E                     	;# 
  9015  020F                     	;# 
  9016  020F                     	;# 
  9017  0210                     	;# 
  9018  0210                     	;# 
  9019  0211                     	;# 
  9020  0211                     	;# 
  9021  0212                     	;# 
  9022  0212                     	;# 
  9023  0213                     	;# 
  9024  0214                     	;# 
  9025  0215                     	;# 
  9026  0215                     	;# 
  9027  0216                     	;# 
  9028  0216                     	;# 
  9029  0217                     	;# 
  9030  0217                     	;# 
  9031  0218                     	;# 
  9032  0218                     	;# 
  9033  0219                     	;# 
  9034  021A                     	;# 
  9035  021B                     	;# 
  9036  021B                     	;# 
  9037  021C                     	;# 
  9038  021C                     	;# 
  9039  021D                     	;# 
  9040  021D                     	;# 
  9041  021E                     	;# 
  9042  021F                     	;# 
  9043  028C                     	;# 
  9044  028C                     	;# 
  9045  028D                     	;# 
  9046  028D                     	;# 
  9047  028E                     	;# 
  9048  028F                     	;# 
  9049  0290                     	;# 
  9050  0290                     	;# 
  9051  0291                     	;# 
  9052  0292                     	;# 
  9053  0292                     	;# 
  9054  0293                     	;# 
  9055  0293                     	;# 
  9056  0294                     	;# 
  9057  0295                     	;# 
  9058  0296                     	;# 
  9059  0296                     	;# 
  9060  0297                     	;# 
  9061  0298                     	;# 
  9062  0298                     	;# 
  9063  0299                     	;# 
  9064  0299                     	;# 
  9065  029A                     	;# 
  9066  029B                     	;# 
  9067  029C                     	;# 
  9068  029C                     	;# 
  9069  029D                     	;# 
  9070  030C                     	;# 
  9071  030C                     	;# 
  9072  030D                     	;# 
  9073  030E                     	;# 
  9074  030F                     	;# 
  9075  0310                     	;# 
  9076  0310                     	;# 
  9077  0311                     	;# 
  9078  0312                     	;# 
  9079  0313                     	;# 
  9080  0314                     	;# 
  9081  0314                     	;# 
  9082  0315                     	;# 
  9083  0316                     	;# 
  9084  0317                     	;# 
  9085  0318                     	;# 
  9086  0318                     	;# 
  9087  0319                     	;# 
  9088  031A                     	;# 
  9089  031B                     	;# 
  9090  031C                     	;# 
  9091  031C                     	;# 
  9092  031D                     	;# 
  9093  031E                     	;# 
  9094  031F                     	;# 
  9095  038C                     	;# 
  9096  038C                     	;# 
  9097  038D                     	;# 
  9098  038E                     	;# 
  9099  0390                     	;# 
  9100  0390                     	;# 
  9101  0391                     	;# 
  9102  0392                     	;# 
  9103  040C                     	;# 
  9104  040D                     	;# 
  9105  040E                     	;# 
  9106  040F                     	;# 
  9107  0410                     	;# 
  9108  0411                     	;# 
  9109  0416                     	;# 
  9110  0416                     	;# 
  9111  0417                     	;# 
  9112  0418                     	;# 
  9113  0418                     	;# 
  9114  0419                     	;# 
  9115  041A                     	;# 
  9116  041A                     	;# 
  9117  041B                     	;# 
  9118  041C                     	;# 
  9119  041C                     	;# 
  9120  041D                     	;# 
  9121  041E                     	;# 
  9122  041F                     	;# 
  9123  048C                     	;# 
  9124  048C                     	;# 
  9125  048D                     	;# 
  9126  048E                     	;# 
  9127  048F                     	;# 
  9128  048F                     	;# 
  9129  0490                     	;# 
  9130  0491                     	;# 
  9131  0492                     	;# 
  9132  0492                     	;# 
  9133  0493                     	;# 
  9134  0494                     	;# 
  9135  0495                     	;# 
  9136  0495                     	;# 
  9137  0496                     	;# 
  9138  0497                     	;# 
  9139  0498                     	;# 
  9140  0499                     	;# 
  9141  049A                     	;# 
  9142  049B                     	;# 
  9143  049C                     	;# 
  9144  049D                     	;# 
  9145  050C                     	;# 
  9146  050C                     	;# 
  9147  050D                     	;# 
  9148  050E                     	;# 
  9149  050F                     	;# 
  9150  050F                     	;# 
  9151  0510                     	;# 
  9152  0511                     	;# 
  9153  0512                     	;# 
  9154  0512                     	;# 
  9155  0513                     	;# 
  9156  0514                     	;# 
  9157  0515                     	;# 
  9158  0515                     	;# 
  9159  0516                     	;# 
  9160  0517                     	;# 
  9161  0518                     	;# 
  9162  0519                     	;# 
  9163  051A                     	;# 
  9164  051B                     	;# 
  9165  051C                     	;# 
  9166  051D                     	;# 
  9167  058C                     	;# 
  9168  058C                     	;# 
  9169  058D                     	;# 
  9170  058E                     	;# 
  9171  058F                     	;# 
  9172  058F                     	;# 
  9173  0590                     	;# 
  9174  0591                     	;# 
  9175  0592                     	;# 
  9176  0593                     	;# 
  9177  060C                     	;# 
  9178  060D                     	;# 
  9179  060E                     	;# 
  9180  060F                     	;# 
  9181  0610                     	;# 
  9182  0611                     	;# 
  9183  0612                     	;# 
  9184  0613                     	;# 
  9185  0614                     	;# 
  9186  0616                     	;# 
  9187  0617                     	;# 
  9188  0618                     	;# 
  9189  0619                     	;# 
  9190  061A                     	;# 
  9191  061B                     	;# 
  9192  061C                     	;# 
  9193  061D                     	;# 
  9194  061E                     	;# 
  9195  068C                     	;# 
  9196  068D                     	;# 
  9197  068E                     	;# 
  9198  068F                     	;# 
  9199  0690                     	;# 
  9200  0691                     	;# 
  9201  0692                     	;# 
  9202  0693                     	;# 
  9203  0694                     	;# 
  9204  070C                     	;# 
  9205  070D                     	;# 
  9206  070E                     	;# 
  9207  070F                     	;# 
  9208  0710                     	;# 
  9209  0711                     	;# 
  9210  0712                     	;# 
  9211  0713                     	;# 
  9212  0714                     	;# 
  9213  0716                     	;# 
  9214  0717                     	;# 
  9215  0718                     	;# 
  9216  0719                     	;# 
  9217  071A                     	;# 
  9218  071B                     	;# 
  9219  071C                     	;# 
  9220  071D                     	;# 
  9221  071E                     	;# 
  9222  0796                     	;# 
  9223  0797                     	;# 
  9224  0798                     	;# 
  9225  0799                     	;# 
  9226  079A                     	;# 
  9227  079B                     	;# 
  9228  080C                     	;# 
  9229  080D                     	;# 
  9230  080E                     	;# 
  9231  080F                     	;# 
  9232  0810                     	;# 
  9233  0811                     	;# 
  9234  0812                     	;# 
  9235  0813                     	;# 
  9236  0814                     	;# 
  9237  081A                     	;# 
  9238  081B                     	;# 
  9239  081C                     	;# 
  9240  081D                     	;# 
  9241  081E                     	;# 
  9242  081F                     	;# 
  9243  088C                     	;# 
  9244  088D                     	;# 
  9245  088E                     	;# 
  9246  088F                     	;# 
  9247  0890                     	;# 
  9248  0891                     	;# 
  9249  0892                     	;# 
  9250  0893                     	;# 
  9251  0895                     	;# 
  9252  0896                     	;# 
  9253  0897                     	;# 
  9254  0898                     	;# 
  9255  0899                     	;# 
  9256  089A                     	;# 
  9257  089B                     	;# 
  9258  090C                     	;# 
  9259  090E                     	;# 
  9260  090F                     	;# 
  9261  091F                     	;# 
  9262  091F                     	;# 
  9263  098F                     	;# 
  9264  098F                     	;# 
  9265  0990                     	;# 
  9266  0991                     	;# 
  9267  0992                     	;# 
  9268  0993                     	;# 
  9269  0994                     	;# 
  9270  0995                     	;# 
  9271  0996                     	;# 
  9272  0997                     	;# 
  9273  0E0F                     	;# 
  9274  0E10                     	;# 
  9275  0E11                     	;# 
  9276  0E12                     	;# 
  9277  0E13                     	;# 
  9278  0E14                     	;# 
  9279  0E15                     	;# 
  9280  0E16                     	;# 
  9281  0E17                     	;# 
  9282  0E18                     	;# 
  9283  0E19                     	;# 
  9284  0E1A                     	;# 
  9285  0E1B                     	;# 
  9286  0E1C                     	;# 
  9287  0E1D                     	;# 
  9288  0E1E                     	;# 
  9289  0E1F                     	;# 
  9290  0E20                     	;# 
  9291  0E21                     	;# 
  9292  0E22                     	;# 
  9293  0E23                     	;# 
  9294  0E24                     	;# 
  9295  0E25                     	;# 
  9296  0E26                     	;# 
  9297  0E27                     	;# 
  9298  0E28                     	;# 
  9299  0E29                     	;# 
  9300  0E2A                     	;# 
  9301  0E2B                     	;# 
  9302  0E2C                     	;# 
  9303  0E2D                     	;# 
  9304  0E2E                     	;# 
  9305  0E2F                     	;# 
  9306  0E30                     	;# 
  9307  0E31                     	;# 
  9308  0E32                     	;# 
  9309  0E33                     	;# 
  9310  0E34                     	;# 
  9311  0E35                     	;# 
  9312  0E36                     	;# 
  9313  0E37                     	;# 
  9314  0E8F                     	;# 
  9315  0E90                     	;# 
  9316  0E91                     	;# 
  9317  0E92                     	;# 
  9318  0E93                     	;# 
  9319  0E94                     	;# 
  9320  0E95                     	;# 
  9321  0E96                     	;# 
  9322  0E97                     	;# 
  9323  0E9C                     	;# 
  9324  0E9D                     	;# 
  9325  0E9E                     	;# 
  9326  0EA1                     	;# 
  9327  0EA2                     	;# 
  9328  0EA3                     	;# 
  9329  0EA4                     	;# 
  9330  0EA5                     	;# 
  9331  0EA9                     	;# 
  9332  0EAA                     	;# 
  9333  0EAB                     	;# 
  9334  0EAC                     	;# 
  9335  0EB1                     	;# 
  9336  0EB2                     	;# 
  9337  0EB3                     	;# 
  9338  0EB8                     	;# 
  9339  0EB9                     	;# 
  9340  0EBA                     	;# 
  9341  0EBB                     	;# 
  9342  0EBC                     	;# 
  9343  0EBD                     	;# 
  9344  0EBE                     	;# 
  9345  0EC3                     	;# 
  9346  0EC5                     	;# 
  9347  0EC6                     	;# 
  9348  0EC7                     	;# 
  9349  0EC8                     	;# 
  9350  0EC9                     	;# 
  9351  0ECA                     	;# 
  9352  0ECB                     	;# 
  9353  0ECC                     	;# 
  9354  0F10                     	;# 
  9355  0F11                     	;# 
  9356  0F12                     	;# 
  9357  0F13                     	;# 
  9358  0F14                     	;# 
  9359  0F15                     	;# 
  9360  0F16                     	;# 
  9361  0F17                     	;# 
  9362  0F18                     	;# 
  9363  0F19                     	;# 
  9364  0F1A                     	;# 
  9365  0F1B                     	;# 
  9366  0F1C                     	;# 
  9367  0F1D                     	;# 
  9368  0F1E                     	;# 
  9369  0F1F                     	;# 
  9370  0F20                     	;# 
  9371  0F21                     	;# 
  9372  0F22                     	;# 
  9373  0F23                     	;# 
  9374  0F24                     	;# 
  9375  0F25                     	;# 
  9376  0F26                     	;# 
  9377  0F27                     	;# 
  9378  0F28                     	;# 
  9379  0F29                     	;# 
  9380  0F2A                     	;# 
  9381  0F2B                     	;# 
  9382  0F2C                     	;# 
  9383  0F2D                     	;# 
  9384  0F2E                     	;# 
  9385  0F2F                     	;# 
  9386  0F30                     	;# 
  9387  0F31                     	;# 
  9388  0F32                     	;# 
  9389  0F38                     	;# 
  9390  0F39                     	;# 
  9391  0F3A                     	;# 
  9392  0F3B                     	;# 
  9393  0F3C                     	;# 
  9394  0F3D                     	;# 
  9395  0F3E                     	;# 
  9396  0F3F                     	;# 
  9397  0F40                     	;# 
  9398  0F41                     	;# 
  9399  0F43                     	;# 
  9400  0F44                     	;# 
  9401  0F45                     	;# 
  9402  0F46                     	;# 
  9403  0F47                     	;# 
  9404  0F48                     	;# 
  9405  0F49                     	;# 
  9406  0F4A                     	;# 
  9407  0F4B                     	;# 
  9408  0F4C                     	;# 
  9409  0F4E                     	;# 
  9410  0F4F                     	;# 
  9411  0F50                     	;# 
  9412  0F51                     	;# 
  9413  0F52                     	;# 
  9414  0F53                     	;# 
  9415  0F54                     	;# 
  9416  0F55                     	;# 
  9417  0F56                     	;# 
  9418  0F57                     	;# 
  9419  0F59                     	;# 
  9420  0F5A                     	;# 
  9421  0F5B                     	;# 
  9422  0F5C                     	;# 
  9423  0F5D                     	;# 
  9424  0F61                     	;# 
  9425  0F62                     	;# 
  9426  0F64                     	;# 
  9427  0F65                     	;# 
  9428  0F66                     	;# 
  9429  0F67                     	;# 
  9430  0F68                     	;# 
  9431  0F69                     	;# 
  9432  0F6A                     	;# 
  9433  0F6B                     	;# 
  9434  0F6C                     	;# 
  9435  0F6D                     	;# 
  9436  0FE4                     	;# 
  9437  0FE5                     	;# 
  9438  0FE6                     	;# 
  9439  0FE7                     	;# 
  9440  0FE8                     	;# 
  9441  0FE9                     	;# 
  9442  0FEA                     	;# 
  9443  0FEB                     	;# 
  9444  0FED                     	;# 
  9445  0FEE                     	;# 
  9446  0FEF                     	;# 
  9447                           
  9448 ;; Function _recLumThresh is unused but had its address taken
  9449  0000                     
  9450 ;; Function _recTempThresh is unused but had its address taken
  9451  0000                     
  9452 ;; Function _recAlarm is unused but had its address taken
  9453  0000                     
  9454 ;; Function _limitTempThreshUnits is unused but had its address taken
  9455  0000                     
  9456                           	psect	idataBANK0
  9457  0AEB                     __pidataBANK0:	
  9458                           
  9459                           ;initializer for _mode_field_subfield
  9460  0AEB  34FF               	retlw	255
  9461  0AEC  34FF               	retlw	255
  9462  0AED  34FF               	retlw	255
  9463  0AEE  34FF               	retlw	255
  9464                           
  9465                           ;initializer for _lum_thresh
  9466  0AEF  3402               	retlw	2
  9467                           
  9468                           ;initializer for _temp_thresh
  9469  0AF0  3464               	retlw	100
  9470                           
  9471                           ;initializer for _tala
  9472  0AF1  3403               	retlw	3
  9473                           
  9474                           ;initializer for _pmon
  9475  0AF2  3405               	retlw	5
  9476                           
  9477                           ;initializer for _nreg
  9478  0AF3  341E               	retlw	30
  9479                           
  9480                           	psect	stringtext1
  9481  1000                     __pstringtext1:	
  9482  1000                     _fsmStateTable:	
  9483  1000  343C               	retlw	low _do_I2C_IDLE
  9484  1001  340A               	retlw	high _do_I2C_IDLE
  9485  1002  34AC               	retlw	low _do_I2C_SEND_ADR_READ
  9486  1003  340A               	retlw	high _do_I2C_SEND_ADR_READ
  9487  1004  3494               	retlw	low _do_I2C_SEND_ADR_WRITE
  9488  1005  340A               	retlw	high _do_I2C_SEND_ADR_WRITE
  9489  1006  3415               	retlw	low _do_I2C_TX
  9490  1007  3406               	retlw	high _do_I2C_TX
  9491  1008  3451               	retlw	low _do_I2C_RX
  9492  1009  3407               	retlw	high _do_I2C_RX
  9493  100A  3476               	retlw	low _do_I2C_RCEN
  9494  100B  340A               	retlw	high _do_I2C_RCEN
  9495  100C  3413               	retlw	low _do_I2C_TX_EMPTY
  9496  100D  340F               	retlw	high _do_I2C_TX_EMPTY
  9497  100E  3441               	retlw	low _do_I2C_SEND_RESTART_READ
  9498  100F  340A               	retlw	high _do_I2C_SEND_RESTART_READ
  9499  1010  3446               	retlw	low _do_I2C_SEND_RESTART_WRITE
  9500  1011  340A               	retlw	high _do_I2C_SEND_RESTART_WRITE
  9501  1012  344B               	retlw	low _do_I2C_SEND_RESTART
  9502  1013  340A               	retlw	high _do_I2C_SEND_RESTART
  9503  1014  3450               	retlw	low _do_I2C_SEND_STOP
  9504  1015  340A               	retlw	high _do_I2C_SEND_STOP
  9505  1016  3455               	retlw	low _do_I2C_DO_ACK
  9506  1017  340A               	retlw	high _do_I2C_DO_ACK
  9507  1018  345A               	retlw	low _do_I2C_DO_NACK_STOP
  9508  1019  340A               	retlw	high _do_I2C_DO_NACK_STOP
  9509  101A  345F               	retlw	low _do_I2C_DO_NACK_RESTART
  9510  101B  340A               	retlw	high _do_I2C_DO_NACK_RESTART
  9511  101C  348C               	retlw	low _do_I2C_RESET
  9512  101D  340A               	retlw	high _do_I2C_RESET
  9513  101E  348B               	retlw	low _do_I2C_DO_ADDRESS_NACK
  9514  101F  340E               	retlw	high _do_I2C_DO_ADDRESS_NACK
  9515  1020                     __end_of_fsmStateTable:	
  9516                           
  9517                           	psect	stringtext2
  9518  1020                     __pstringtext2:	
  9519  1020                     _num_subfields:	
  9520  1020  3400               	retlw	0
  9521  1021  3404               	retlw	4
  9522  1022  3401               	retlw	1
  9523  1023  3402               	retlw	2
  9524  1024  3401               	retlw	1
  9525  1025                     __end_of_num_subfields:	
  9526                           
  9527                           	psect	nvBANK1
  9528  00D4                     __pnvBANK1:	
  9529  00D4                     _TMR2_InterruptHandler:	
  9530  00D4                     	ds	2
  9531  00D6                     _TMR1_InterruptHandler:	
  9532  00D6                     	ds	2
  9533  00D8                     _timer1ReloadVal:	
  9534  00D8                     	ds	2
  9535  00DA                     _TMR0_InterruptHandler:	
  9536  00DA                     	ds	2
  9537  00DC                     _INT_InterruptHandler:	
  9538  00DC                     	ds	2
  9539  0016                     _LATAbits	set	22
  9540  000E                     _PORTCbits	set	14
  9541  000D                     _PORTBbits	set	13
  9542  0013                     _TRISCbits	set	19
  9543  001E                     _T0CON0bits	set	30
  9544  001E                     _T0CON0	set	30
  9545  001C                     _TMR0L	set	28
  9546  001D                     _TMR0H	set	29
  9547  001F                     _T0CON1	set	31
  9548  0014                     _TRISD	set	20
  9549  0013                     _TRISC	set	19
  9550  0012                     _TRISB	set	18
  9551  0011                     _TRISA	set	17
  9552  0015                     _TRISE	set	21
  9553  0018                     _LATC	set	24
  9554  0017                     _LATB	set	23
  9555  0016                     _LATA	set	22
  9556  0019                     _LATD	set	25
  9557  001A                     _LATE	set	26
  9558  000B                     _INTCONbits	set	11
  9559  0094                     _ADCON1bits	set	148
  9560  008E                     _ADPREVL	set	142
  9561  008F                     _ADPREVH	set	143
  9562  0097                     _ADSTATbits	set	151
  9563  0090                     _ADACCL	set	144
  9564  0091                     _ADACCH	set	145
  9565  0095                     _ADCON2bits	set	149
  9566  009C                     _ADPRE	set	156
  9567  0096                     _ADCON3bits	set	150
  9568  008C                     _ADRESL	set	140
  9569  008D                     _ADRESH	set	141
  9570  0093                     _ADCON0bits	set	147
  9571  009D                     _ADACQ	set	157
  9572  0093                     _ADCON0	set	147
  9573  0098                     _ADCLK	set	152
  9574  0099                     _ADACT	set	153
  9575  009A                     _ADREF	set	154
  9576  0097                     _ADSTAT	set	151
  9577  0096                     _ADCON3	set	150
  9578  0095                     _ADCON2	set	149
  9579  0094                     _ADCON1	set	148
  9580  009B                     _ADCAP	set	155
  9581  009E                     _ADPCH	set	158
  9582  0116                     _ADERRL	set	278
  9583  0117                     _ADERRH	set	279
  9584  0114                     _ADFLTRL	set	276
  9585  0115                     _ADFLTRH	set	277
  9586  010C                     _ADCNT	set	268
  9587  010D                     _ADRPT	set	269
  9588  0113                     _ADSTPTH	set	275
  9589  0112                     _ADSTPTL	set	274
  9590  0111                     _ADUTHH	set	273
  9591  0110                     _ADUTHL	set	272
  9592  010F                     _ADLTHH	set	271
  9593  010E                     _ADLTHL	set	270
  9594  018F                     _SSP1STATbits	set	399
  9595  018E                     _SSP1MSK	set	398
  9596  018C                     _SSP1BUF	set	396
  9597  0191                     _SSP1CON2bits	set	401
  9598  018D                     _SSP1ADD	set	397
  9599  0191                     _SSP1CON2	set	401
  9600  0190                     _SSP1CON1	set	400
  9601  018F                     _SSP1STAT	set	399
  9602  0190                     _SSP1CON1bits	set	400
  9603  021F                     _CCPTMRS1bits	set	543
  9604  020F                     _T1GCONbits	set	527
  9605  020E                     _T1CONbits	set	526
  9606  020E                     _T1CON	set	526
  9607  020C                     _TMR1L	set	524
  9608  020D                     _TMR1H	set	525
  9609  0211                     _T1CLK	set	529
  9610  0210                     _T1GATE	set	528
  9611  020F                     _T1GCON	set	527
  9612  028D                     _PR2	set	653
  9613  028C                     _TMR2	set	652
  9614  028E                     _T2CONbits	set	654
  9615  0291                     _T2RSTbits	set	657
  9616  028F                     _T2HLTbits	set	655
  9617  028E                     _T2CON	set	654
  9618  028C                     _T2TMR	set	652
  9619  028D                     _T2PR	set	653
  9620  0291                     _T2RST	set	657
  9621  028F                     _T2HLT	set	655
  9622  0290                     _T2CLKCON	set	656
  9623  038C                     _PWM6DCL	set	908
  9624  038D                     _PWM6DCH	set	909
  9625  038E                     _PWM6CON	set	910
  9626  0710                     _PIR4bits	set	1808
  9627  071A                     _PIE4bits	set	1818
  9628  070F                     _PIR3bits	set	1807
  9629  0719                     _PIE3bits	set	1817
  9630  0716                     _PIE0bits	set	1814
  9631  070C                     _PIR0bits	set	1804
  9632  079B                     _PMD5	set	1947
  9633  079A                     _PMD4	set	1946
  9634  0799                     _PMD3	set	1945
  9635  0798                     _PMD2	set	1944
  9636  0797                     _PMD1	set	1943
  9637  0796                     _PMD0	set	1942
  9638  081F                     _NVMCON2	set	2079
  9639  081C                     _NVMDATL	set	2076
  9640  081D                     _NVMDATH	set	2077
  9641  081E                     _NVMCON1bits	set	2078
  9642  081B                     _NVMADRH	set	2075
  9643  081A                     _NVMADRL	set	2074
  9644  0892                     _OSCTUNE	set	2194
  9645  0893                     _OSCFRQ	set	2195
  9646  0891                     _OSCEN	set	2193
  9647  088F                     _OSCCON3	set	2191
  9648  088D                     _OSCCON1	set	2189
  9649  0EC6                     _SSP1DATPPS	set	3782
  9650  0EC5                     _SSP1CLKPPS	set	3781
  9651  0E90                     _INTPPS	set	3728
  9652  0F44                     _WPUBbits	set	3908
  9653  0F16                     _RA6PPS	set	3862
  9654  0F24                     _RC4PPS	set	3876
  9655  0F23                     _RC3PPS	set	3875
  9656  0F68                     _INLVLE	set	3944
  9657  0F5D                     _INLVLD	set	3933
  9658  0F52                     _INLVLC	set	3922
  9659  0F47                     _INLVLB	set	3911
  9660  0F3C                     _INLVLA	set	3900
  9661  0F67                     _SLRCONE	set	3943
  9662  0F5C                     _SLRCOND	set	3932
  9663  0F51                     _SLRCONC	set	3921
  9664  0F46                     _SLRCONB	set	3910
  9665  0F3B                     _SLRCONA	set	3899
  9666  0F5B                     _ODCOND	set	3931
  9667  0F50                     _ODCONC	set	3920
  9668  0F45                     _ODCONB	set	3909
  9669  0F3A                     _ODCONA	set	3898
  9670  0F66                     _ODCONE	set	3942
  9671  0F4F                     _WPUC	set	3919
  9672  0F39                     _WPUA	set	3897
  9673  0F44                     _WPUB	set	3908
  9674  0F65                     _WPUE	set	3941
  9675  0F5A                     _WPUD	set	3930
  9676  0F38                     _ANSELA	set	3896
  9677  0F64                     _ANSELE	set	3940
  9678  0F43                     _ANSELB	set	3907
  9679  0F4E                     _ANSELC	set	3918
  9680  0F59                     _ANSELD	set	3929
  9681  7A7C                     _WPUC4	set	31356
  9682  7A7B                     _WPUC3	set	31355
  9683                           
  9684                           ; #config settings
  9685  0000                     
  9686                           	psect	cinit
  9687  005D                     start_initialization:	
  9688  005D                     __initialization:	
  9689                           
  9690                           ; Initialize objects allocated to BANK0
  9691  005D  30EB               	movlw	low __pidataBANK0
  9692  005E  0084               	movwf	4
  9693  005F  308A               	movlw	(high __pidataBANK0)| (0+128)
  9694  0060  0085               	movwf	5
  9695  0061  3061               	movlw	low __pdataBANK0
  9696  0062  0086               	movwf	6
  9697  0063  3000               	movlw	high __pdataBANK0
  9698  0064  0087               	movwf	7
  9699  0065  3009               	movlw	9
  9700  0066  318A  2270  3180   	fcall	init_ram
  9701                           
  9702                           ; Clear objects allocated to COMMON
  9703  0069  01FD               	clrf	__pbssCOMMON& (0+127)
  9704                           
  9705                           ; Clear objects allocated to BANK0
  9706  006A  304B               	movlw	low __pbssBANK0
  9707  006B  0084               	movwf	4
  9708  006C  3000               	movlw	high __pbssBANK0
  9709  006D  0085               	movwf	5
  9710  006E  3016               	movlw	22
  9711  006F  318A  226A  3180   	fcall	clear_ram0
  9712                           
  9713                           ; Clear objects allocated to BANK1
  9714  0072  30A0               	movlw	low __pbssBANK1
  9715  0073  0084               	movwf	4
  9716  0074  3000               	movlw	high __pbssBANK1
  9717  0075  0085               	movwf	5
  9718  0076  3034               	movlw	52
  9719  0077  318A  226A  3180   	fcall	clear_ram0
  9720  007A                     end_of_initialization:	
  9721                           ;End of C runtime variable initialization code
  9722                           
  9723  007A                     __end_of__initialization:	
  9724  007A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9725  007B  0020               	movlb	0
  9726  007C  3180  287E         	ljmp	_main	;jump to C main() function
  9727                           
  9728                           	psect	bssCOMMON
  9729  007D                     __pbssCOMMON:	
  9730  007D                     _clkms:	
  9731  007D                     	ds	1
  9732                           
  9733                           	psect	bssBANK0
  9734  004B                     __pbssBANK0:	
  9735  004B                     _subfield_info:	
  9736  004B                     	ds	4
  9737  004F                     _lum_threshold:	
  9738  004F                     	ds	2
  9739  0051                     _lum_bin:	
  9740  0051                     	ds	2
  9741  0053                     _alaf:	
  9742  0053                     	ds	1
  9743  0054                     _temp:	
  9744  0054                     	ds	1
  9745  0055                     _alarm:	
  9746  0055                     	ds	1
  9747  0056                     _config_mode:	
  9748  0056                     	ds	1
  9749  0057                     _set_mode:	
  9750  0057                     	ds	1
  9751  0058                     _last1m:	
  9752  0058                     	ds	1
  9753  0059                     _last5s:	
  9754  0059                     	ds	1
  9755  005A                     _last_ms2:	
  9756  005A                     	ds	1
  9757  005B                     _last_ms:	
  9758  005B                     	ds	1
  9759  005C                     _seg:	
  9760  005C                     	ds	1
  9761  005D                     _clkm:	
  9762  005D                     	ds	1
  9763  005E                     _clkh:	
  9764  005E                     	ds	1
  9765  005F                     _nreg_pt:	
  9766  005F                     	ds	1
  9767  0060                     _nreg_init:	
  9768  0060                     	ds	1
  9769                           
  9770                           	psect	dataBANK0
  9771  0061                     __pdataBANK0:	
  9772  0061                     _mode_field_subfield:	
  9773  0061                     	ds	4
  9774  0065                     _lum_thresh:	
  9775  0065                     	ds	1
  9776  0066                     _temp_thresh:	
  9777  0066                     	ds	1
  9778  0067                     _tala:	
  9779  0067                     	ds	1
  9780  0068                     _pmon:	
  9781  0068                     	ds	1
  9782  0069                     _nreg:	
  9783  0069                     	ds	1
  9784                           
  9785                           	psect	bssBANK1
  9786  00A0                     __pbssBANK1:	
  9787  00A0                     _i2c_status:	
  9788  00A0                     	ds	29
  9789  00BD                     _duty_cycle:	
  9790  00BD                     	ds	2
  9791  00BF                     _convertedValue:	
  9792  00BF                     	ds	2
  9793  00C1                     _min_units:	
  9794  00C1                     	ds	2
  9795  00C3                     _min_tens:	
  9796  00C3                     	ds	2
  9797  00C5                     _hours_units:	
  9798  00C5                     	ds	2
  9799  00C7                     _hours_tens:	
  9800  00C7                     	ds	2
  9801  00C9                     _value:	
  9802  00C9                     	ds	2
  9803  00CB                     _i2c1_driver_i2cISR:	
  9804  00CB                     	ds	2
  9805  00CD                     _i2c1_driver_busCollisionISR:	
  9806  00CD                     	ds	2
  9807  00CF                     _ring_byte:	
  9808  00CF                     	ds	5
  9809                           
  9810                           	psect	inittext
  9811  0A70                     init_ram:	
  9812  0A70  00FE               	movwf	btemp
  9813  0A71                     initloop:	
  9814  0A71  0012               	moviw fsr0++
  9815  0A72  001E               	movwi fsr1++
  9816  0A73  0BFE               	decfsz	btemp,f
  9817  0A74  2A71               	goto	initloop
  9818  0A75  3400               	retlw	0
  9819                           
  9820                           	psect	clrtext
  9821  0A6A                     clear_ram0:	
  9822                           ;	Called with FSR0 containing the base address, and
  9823                           ;	WREG with the size to clear
  9824                           
  9825  0A6A  0064               	clrwdt	;clear the watchdog before getting into this loop
  9826  0A6B                     clrloop0:	
  9827  0A6B  0180               	clrf	0	;clear RAM location pointed to by FSR
  9828  0A6C  3101               	addfsr 0,1
  9829  0A6D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9830  0A6E  2A6B               	goto	clrloop0	;have we reached the end yet?
  9831  0A6F  3400               	retlw	0	;all done for this memory range, return
  9832                           
  9833                           	psect	cstackBANK1
  9834  00DE                     __pcstackBANK1:	
  9835  00DE                     	ds	2
  9836  00E0                     main@t5s:	
  9837                           
  9838                           ; 1 bytes @ 0x2
  9839  00E0                     	ds	1
  9840  00E1                     main@t1m:	
  9841                           
  9842                           ; 1 bytes @ 0x3
  9843  00E1                     	ds	1
  9844  00E2                     _main$2460:	
  9845                           
  9846                           ; 1 bytes @ 0x4
  9847  00E2                     	ds	1
  9848                           
  9849                           	psect	cstackCOMMON
  9850  0070                     __pcstackCOMMON:	
  9851  0070                     ?_i2c1_driver_open:	
  9852  0070                     ?_i2c1_driver_isNACK:	
  9853                           ; 1 bit 
  9854                           
  9855  0070                     ?_setCallBack:	
  9856                           ; 1 bit 
  9857                           
  9858  0070                     ?_mssp1_clearIRQ:	
  9859                           ; 1 bytes @ 0x0
  9860                           
  9861  0070                     ??_mssp1_clearIRQ:	
  9862                           ; 1 bytes @ 0x0
  9863                           
  9864  0070                     ?_i2c_busCollisionISR:	
  9865                           ; 1 bytes @ 0x0
  9866                           
  9867  0070                     ??_i2c_busCollisionISR:	
  9868                           ; 1 bytes @ 0x0
  9869                           
  9870  0070                     ?_i2c_ISR:	
  9871                           ; 1 bytes @ 0x0
  9872                           
  9873  0070                     ?_i2c1_driver_resetBus:	
  9874                           ; 1 bytes @ 0x0
  9875                           
  9876  0070                     ??_i2c1_driver_resetBus:	
  9877                           ; 1 bytes @ 0x0
  9878                           
  9879  0070                     ?_i2c1_driver_restart:	
  9880                           ; 1 bytes @ 0x0
  9881                           
  9882  0070                     ??_i2c1_driver_restart:	
  9883                           ; 1 bytes @ 0x0
  9884                           
  9885  0070                     ?_i2c1_driver_stop:	
  9886                           ; 1 bytes @ 0x0
  9887                           
  9888  0070                     ??_i2c1_driver_stop:	
  9889                           ; 1 bytes @ 0x0
  9890                           
  9891  0070                     ?_i2c1_driver_TXData:	
  9892                           ; 1 bytes @ 0x0
  9893                           
  9894  0070                     ??_i2c1_driver_TXData:	
  9895                           ; 1 bytes @ 0x0
  9896                           
  9897  0070                     ?_i2c1_driver_startRX:	
  9898                           ; 1 bytes @ 0x0
  9899                           
  9900  0070                     ??_i2c1_driver_startRX:	
  9901                           ; 1 bytes @ 0x0
  9902                           
  9903  0070                     ?_i2c1_driver_sendACK:	
  9904                           ; 1 bytes @ 0x0
  9905                           
  9906  0070                     ??_i2c1_driver_sendACK:	
  9907                           ; 1 bytes @ 0x0
  9908                           
  9909  0070                     ?_i2c1_driver_sendNACK:	
  9910                           ; 1 bytes @ 0x0
  9911                           
  9912  0070                     ??_i2c1_driver_sendNACK:	
  9913                           ; 1 bytes @ 0x0
  9914                           
  9915  0070                     ??_i2c1_driver_isNACK:	
  9916                           ; 1 bytes @ 0x0
  9917                           
  9918  0070                     ?_i2c1_driver_getRXData:	
  9919                           ; 1 bytes @ 0x0
  9920                           
  9921  0070                     ??_i2c1_driver_getRXData:	
  9922                           ; 1 bytes @ 0x0
  9923                           
  9924  0070                     ?_mssp1_setIRQ:	
  9925                           ; 1 bytes @ 0x0
  9926                           
  9927  0070                     ??_mssp1_setIRQ:	
  9928                           ; 1 bytes @ 0x0
  9929                           
  9930  0070                     ?_i2c1_driver_clearBusCollision:	
  9931                           ; 1 bytes @ 0x0
  9932                           
  9933  0070                     ??_i2c1_driver_clearBusCollision:	
  9934                           ; 1 bytes @ 0x0
  9935                           
  9936  0070                     ?_INT_CallBack:	
  9937                           ; 1 bytes @ 0x0
  9938                           
  9939  0070                     ?_TMR0_ISR:	
  9940                           ; 1 bytes @ 0x0
  9941                           
  9942  0070                     ?_TMR1_ISR:	
  9943                           ; 1 bytes @ 0x0
  9944                           
  9945  0070                     ?_TMR2_ISR:	
  9946                           ; 1 bytes @ 0x0
  9947                           
  9948  0070                     ?_PMD_Initialize:	
  9949                           ; 1 bytes @ 0x0
  9950                           
  9951  0070                     ?_PIN_MANAGER_Initialize:	
  9952                           ; 1 bytes @ 0x0
  9953                           
  9954  0070                     ?_OSCILLATOR_Initialize:	
  9955                           ; 1 bytes @ 0x0
  9956                           
  9957  0070                     ?_PWM6_Initialize:	
  9958                           ; 1 bytes @ 0x0
  9959                           
  9960  0070                     ?_ADCC_Initialize:	
  9961                           ; 1 bytes @ 0x0
  9962                           
  9963  0070                     ?_TMR2_Initialize:	
  9964                           ; 1 bytes @ 0x0
  9965                           
  9966  0070                     ?_TMR1_Initialize:	
  9967                           ; 1 bytes @ 0x0
  9968                           
  9969  0070                     ?_TMR0_Initialize:	
  9970                           ; 1 bytes @ 0x0
  9971                           
  9972  0070                     ?_TMR0_DefaultInterruptHandler:	
  9973                           ; 1 bytes @ 0x0
  9974                           
  9975  0070                     ??_TMR0_DefaultInterruptHandler:	
  9976                           ; 1 bytes @ 0x0
  9977                           
  9978  0070                     ?_TMR1_DefaultInterruptHandler:	
  9979                           ; 1 bytes @ 0x0
  9980                           
  9981  0070                     ??_TMR1_DefaultInterruptHandler:	
  9982                           ; 1 bytes @ 0x0
  9983                           
  9984  0070                     ?_TMR2_DefaultInterruptHandler:	
  9985                           ; 1 bytes @ 0x0
  9986                           
  9987  0070                     ??_TMR2_DefaultInterruptHandler:	
  9988                           ; 1 bytes @ 0x0
  9989                           
  9990  0070                     ?_checkDebounceSW1:	
  9991                           ; 1 bytes @ 0x0
  9992                           
  9993  0070                     ?_handler_clock_hms:	
  9994                           ; 1 bytes @ 0x0
  9995                           
  9996  0070                     ??_handler_clock_hms:	
  9997                           ; 1 bytes @ 0x0
  9998                           
  9999  0070                     ?_handler_clock_ms:	
 10000                           ; 1 bytes @ 0x0
 10001                           
 10002  0070                     ??_handler_clock_ms:	
 10003                           ; 1 bytes @ 0x0
 10004                           
 10005  0070                     ?_recoverData:	
 10006                           ; 1 bytes @ 0x0
 10007                           
 10008  0070                     ?_cksum_w:	
 10009                           ; 1 bytes @ 0x0
 10010                           
 10011  0070                     ?_config_routine:	
 10012                           ; 1 bytes @ 0x0
 10013                           
 10014  0070                     ?_save_recovery_params:	
 10015                           ; 1 bytes @ 0x0
 10016                           
 10017  0070                     ?_all_LED:	
 10018                           ; 1 bytes @ 0x0
 10019                           
 10020  0070                     ?_mod1_LED:	
 10021                           ; 1 bytes @ 0x0
 10022                           
 10023  0070                     ?_mod2_LED:	
 10024                           ; 1 bytes @ 0x0
 10025                           
 10026  0070                     ?_mod3_LED:	
 10027                           ; 1 bytes @ 0x0
 10028                           
 10029  0070                     ?_mod4_LED:	
 10030                           ; 1 bytes @ 0x0
 10031                           
 10032  0070                     ?_checkDebounceSW2:	
 10033                           ; 1 bytes @ 0x0
 10034                           
 10035  0070                     ?_mode_select_LED:	
 10036                           ; 1 bytes @ 0x0
 10037                           
 10038  0070                     ?_selectSubfield:	
 10039                           ; 1 bytes @ 0x0
 10040                           
 10041  0070                     ?_mode_LED:	
 10042                           ; 1 bytes @ 0x0
 10043                           
 10044  0070                     ?_getSubfieldInfo:	
 10045                           ; 1 bytes @ 0x0
 10046                           
 10047  0070                     ?_limitHoursUnits:	
 10048                           ; 1 bytes @ 0x0
 10049                           
 10050  0070                     ?_representLed:	
 10051                           ; 1 bytes @ 0x0
 10052                           
 10053  0070                     ?_cksum:	
 10054                           ; 1 bytes @ 0x0
 10055                           
 10056  0070                     ?_reset_recv:	
 10057                           ; 1 bytes @ 0x0
 10058                           
 10059  0070                     ?_i2c_setBuffer:	
 10060                           ; 1 bytes @ 0x0
 10061                           
 10062  0070                     ?_do_I2C_RESET:	
 10063                           ; 1 bytes @ 0x0
 10064                           
 10065  0070                     ??_do_I2C_RESET:	
 10066                           ; 1 bytes @ 0x0
 10067                           
 10068  0070                     ?_do_I2C_IDLE:	
 10069                           ; 1 bytes @ 0x0
 10070                           
 10071  0070                     ??_do_I2C_IDLE:	
 10072                           ; 1 bytes @ 0x0
 10073                           
 10074  0070                     ?_do_I2C_SEND_RESTART_READ:	
 10075                           ; 1 bytes @ 0x0
 10076                           
 10077  0070                     ??_do_I2C_SEND_RESTART_READ:	
 10078                           ; 1 bytes @ 0x0
 10079                           
 10080  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
 10081                           ; 1 bytes @ 0x0
 10082                           
 10083  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
 10084                           ; 1 bytes @ 0x0
 10085                           
 10086  0070                     ?_do_I2C_SEND_RESTART:	
 10087                           ; 1 bytes @ 0x0
 10088                           
 10089  0070                     ??_do_I2C_SEND_RESTART:	
 10090                           ; 1 bytes @ 0x0
 10091                           
 10092  0070                     ?_do_I2C_SEND_STOP:	
 10093                           ; 1 bytes @ 0x0
 10094                           
 10095  0070                     ??_do_I2C_SEND_STOP:	
 10096                           ; 1 bytes @ 0x0
 10097                           
 10098  0070                     ?_do_I2C_SEND_ADR_READ:	
 10099                           ; 1 bytes @ 0x0
 10100                           
 10101  0070                     ??_do_I2C_SEND_ADR_READ:	
 10102                           ; 1 bytes @ 0x0
 10103                           
 10104  0070                     ?_do_I2C_SEND_ADR_WRITE:	
 10105                           ; 1 bytes @ 0x0
 10106                           
 10107  0070                     ?_do_I2C_RCEN:	
 10108                           ; 1 bytes @ 0x0
 10109                           
 10110  0070                     ??_do_I2C_RCEN:	
 10111                           ; 1 bytes @ 0x0
 10112                           
 10113  0070                     ?_do_I2C_DO_ACK:	
 10114                           ; 1 bytes @ 0x0
 10115                           
 10116  0070                     ??_do_I2C_DO_ACK:	
 10117                           ; 1 bytes @ 0x0
 10118                           
 10119  0070                     ?_do_I2C_DO_NACK_STOP:	
 10120                           ; 1 bytes @ 0x0
 10121                           
 10122  0070                     ??_do_I2C_DO_NACK_STOP:	
 10123                           ; 1 bytes @ 0x0
 10124                           
 10125  0070                     ?_do_I2C_DO_NACK_RESTART:	
 10126                           ; 1 bytes @ 0x0
 10127                           
 10128  0070                     ??_do_I2C_DO_NACK_RESTART:	
 10129                           ; 1 bytes @ 0x0
 10130                           
 10131  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
 10132                           ; 1 bytes @ 0x0
 10133                           
 10134  0070                     ?_do_I2C_TX:	
 10135                           ; 1 bytes @ 0x0
 10136                           
 10137  0070                     ?_do_I2C_RX:	
 10138                           ; 1 bytes @ 0x0
 10139                           
 10140  0070                     ?_do_I2C_TX_EMPTY:	
 10141                           ; 1 bytes @ 0x0
 10142                           
 10143  0070                     ?_INT_ISR:	
 10144                           ; 1 bytes @ 0x0
 10145                           
 10146  0070                     ?_INT_DefaultInterruptHandler:	
 10147                           ; 1 bytes @ 0x0
 10148                           
 10149  0070                     ??_INT_DefaultInterruptHandler:	
 10150                           ; 1 bytes @ 0x0
 10151                           
 10152  0070                     ?_EXT_INT_Initialize:	
 10153                           ; 1 bytes @ 0x0
 10154                           
 10155  0070                     ?_INTERRUPT_InterruptManager:	
 10156                           ; 1 bytes @ 0x0
 10157                           
 10158  0070                     ?_SYSTEM_Initialize:	
 10159                           ; 1 bytes @ 0x0
 10160                           
 10161  0070                     ?_ADCC_StartConversion:	
 10162                           ; 1 bytes @ 0x0
 10163                           
 10164  0070                     ?_ADCC_IsConversionDone:	
 10165                           ; 1 bytes @ 0x0
 10166                           
 10167  0070                     ?_TMR0_StartTimer:	
 10168                           ; 1 bytes @ 0x0
 10169                           
 10170  0070                     ?_TMR0_StopTimer:	
 10171                           ; 1 bytes @ 0x0
 10172                           
 10173  0070                     ??_TMR0_StopTimer:	
 10174                           ; 1 bytes @ 0x0
 10175                           
 10176  0070                     ?_TMR1_WriteTimer:	
 10177                           ; 1 bytes @ 0x0
 10178                           
 10179  0070                     ?_sw1_EXT:	
 10180                           ; 1 bytes @ 0x0
 10181                           
 10182  0070                     ?_ISR_3s:	
 10183                           ; 1 bytes @ 0x0
 10184                           
 10185  0070                     ?_main:	
 10186                           ; 1 bytes @ 0x0
 10187                           
 10188  0070                     ?i1_PWM6_LoadDutyValue:	
 10189                           ; 1 bytes @ 0x0
 10190                           
 10191  0070                     ?i1_checkDebounceSW1:	
 10192                           ; 1 bytes @ 0x0
 10193                           
 10194  0070                     ??i1_checkDebounceSW1:	
 10195                           ; 1 bytes @ 0x0
 10196                           
 10197  0070                     i2c1_driver_TXData@d:	
 10198                           ; 1 bytes @ 0x0
 10199                           
 10200  0070                     i2c_setBuffer@bufferSize:	
 10201                           ; 1 bytes @ 0x0
 10202                           
 10203  0070                     setCallBack@cb:	
 10204                           ; 2 bytes @ 0x0
 10205                           
 10206  0070                     TMR1_WriteTimer@timerVal:	
 10207                           ; 2 bytes @ 0x0
 10208                           
 10209  0070                     i1PWM6_LoadDutyValue@dutyValue:	
 10210                           ; 2 bytes @ 0x0
 10211                           
 10212                           
 10213                           ; 2 bytes @ 0x0
 10214  0070                     	ds	1
 10215  0071                     ??_TMR2_ISR:	
 10216  0071                     ??_do_I2C_SEND_ADR_WRITE:	
 10217                           ; 1 bytes @ 0x1
 10218                           
 10219                           
 10220                           ; 1 bytes @ 0x1
 10221  0071                     	ds	1
 10222  0072                     ??_TMR1_ISR:	
 10223  0072                     ??_i2c_setBuffer:	
 10224                           ; 1 bytes @ 0x2
 10225                           
 10226  0072                     ??_TMR1_WriteTimer:	
 10227                           ; 1 bytes @ 0x2
 10228                           
 10229  0072                     ??i1_PWM6_LoadDutyValue:	
 10230                           ; 1 bytes @ 0x2
 10231                           
 10232  0072                     setCallBack@p:	
 10233                           ; 1 bytes @ 0x2
 10234                           
 10235                           
 10236                           ; 1 bytes @ 0x2
 10237  0072                     	ds	1
 10238  0073                     ??_setCallBack:	
 10239  0073                     i2c_setBuffer@buffer:	
 10240                           ; 1 bytes @ 0x3
 10241                           
 10242                           
 10243                           ; 1 bytes @ 0x3
 10244  0073                     	ds	1
 10245  0074                     ??_ISR_3s:	
 10246  0074                     setCallBack@idx:	
 10247                           ; 1 bytes @ 0x4
 10248                           
 10249                           
 10250                           ; 1 bytes @ 0x4
 10251  0074                     	ds	1
 10252  0075                     ??_TMR0_ISR:	
 10253  0075                     ?_i2c_setDataCompleteCallback:	
 10254                           ; 1 bytes @ 0x5
 10255                           
 10256  0075                     i2c_setDataCompleteCallback@cb:	
 10257                           ; 1 bytes @ 0x5
 10258                           
 10259                           
 10260                           ; 2 bytes @ 0x5
 10261  0075                     	ds	2
 10262  0077                     ??_sw1_EXT:	
 10263  0077                     i2c_setDataCompleteCallback@p:	
 10264                           ; 1 bytes @ 0x7
 10265                           
 10266                           
 10267                           ; 1 bytes @ 0x7
 10268  0077                     	ds	1
 10269  0078                     ??_INT_CallBack:	
 10270  0078                     ??_i2c_setDataCompleteCallback:	
 10271                           ; 1 bytes @ 0x8
 10272                           
 10273  0078                     ??_INT_ISR:	
 10274                           ; 1 bytes @ 0x8
 10275                           
 10276                           
 10277                           ; 1 bytes @ 0x8
 10278  0078                     	ds	1
 10279  0079                     ?_returnStop:	
 10280  0079                     ?_returnReset:	
 10281                           ; 1 bytes @ 0x9
 10282                           
 10283  0079                     ?_i2c_restartWrite:	
 10284                           ; 1 bytes @ 0x9
 10285                           
 10286  0079                     ?_wr1RegCompleteHandler:	
 10287                           ; 1 bytes @ 0x9
 10288                           
 10289  0079                     ?_rd1RegCompleteHandler:	
 10290                           ; 1 bytes @ 0x9
 10291                           
 10292  0079                     ?_rd2RegCompleteHandler:	
 10293                           ; 1 bytes @ 0x9
 10294                           
 10295  0079                     ?_wr2RegCompleteHandler:	
 10296                           ; 1 bytes @ 0x9
 10297                           
 10298  0079                     ?_rdBlkRegCompleteHandler:	
 10299                           ; 1 bytes @ 0x9
 10300                           
 10301  0079                     i2c_restartWrite@p:	
 10302                           ; 1 bytes @ 0x9
 10303                           
 10304  0079                     returnStop@p:	
 10305                           ; 1 bytes @ 0x9
 10306                           
 10307  0079                     returnReset@p:	
 10308                           ; 1 bytes @ 0x9
 10309                           
 10310  0079                     wr1RegCompleteHandler@p:	
 10311                           ; 1 bytes @ 0x9
 10312                           
 10313  0079                     rd1RegCompleteHandler@p:	
 10314                           ; 1 bytes @ 0x9
 10315                           
 10316  0079                     rd2RegCompleteHandler@p:	
 10317                           ; 1 bytes @ 0x9
 10318                           
 10319  0079                     wr2RegCompleteHandler@p:	
 10320                           ; 1 bytes @ 0x9
 10321                           
 10322  0079                     rdBlkRegCompleteHandler@p:	
 10323                           ; 1 bytes @ 0x9
 10324                           
 10325                           
 10326                           ; 1 bytes @ 0x9
 10327  0079                     	ds	1
 10328  007A                     ??_returnStop:	
 10329  007A                     ??_returnReset:	
 10330                           ; 1 bytes @ 0xA
 10331                           
 10332  007A                     ??_i2c_restartWrite:	
 10333                           ; 1 bytes @ 0xA
 10334                           
 10335  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
 10336                           ; 1 bytes @ 0xA
 10337                           
 10338  007A                     ??_do_I2C_TX:	
 10339                           ; 1 bytes @ 0xA
 10340                           
 10341  007A                     ??_do_I2C_RX:	
 10342                           ; 1 bytes @ 0xA
 10343                           
 10344  007A                     ??_do_I2C_TX_EMPTY:	
 10345                           ; 1 bytes @ 0xA
 10346                           
 10347  007A                     ??_wr1RegCompleteHandler:	
 10348                           ; 1 bytes @ 0xA
 10349                           
 10350  007A                     ??_rd1RegCompleteHandler:	
 10351                           ; 1 bytes @ 0xA
 10352                           
 10353  007A                     ??_rd2RegCompleteHandler:	
 10354                           ; 1 bytes @ 0xA
 10355                           
 10356  007A                     ??_wr2RegCompleteHandler:	
 10357                           ; 1 bytes @ 0xA
 10358                           
 10359  007A                     ??_rdBlkRegCompleteHandler:	
 10360                           ; 1 bytes @ 0xA
 10361                           
 10362                           
 10363                           ; 1 bytes @ 0xA
 10364  007A                     	ds	3
 10365  007D                     ??_INTERRUPT_InterruptManager:	
 10366                           
 10367                           	psect	cstackBANK0
 10368  0020                     __pcstackBANK0:	
 10369                           ; 1 bytes @ 0xD
 10370                           
 10371  0020                     ??_i2c_ISR:	
 10372                           
 10373                           ; 1 bytes @ 0x0
 10374  0020                     	ds	3
 10375  0023                     ??_i2c1_driver_open:	
 10376  0023                     ??_PMD_Initialize:	
 10377                           ; 1 bytes @ 0x3
 10378                           
 10379  0023                     ??_PIN_MANAGER_Initialize:	
 10380                           ; 1 bytes @ 0x3
 10381                           
 10382  0023                     ??_OSCILLATOR_Initialize:	
 10383                           ; 1 bytes @ 0x3
 10384                           
 10385  0023                     ??_PWM6_Initialize:	
 10386                           ; 1 bytes @ 0x3
 10387                           
 10388  0023                     ??_ADCC_Initialize:	
 10389                           ; 1 bytes @ 0x3
 10390                           
 10391  0023                     ?_TMR0_SetInterruptHandler:	
 10392                           ; 1 bytes @ 0x3
 10393                           
 10394  0023                     ?_TMR1_SetInterruptHandler:	
 10395                           ; 1 bytes @ 0x3
 10396                           
 10397  0023                     ?_TMR2_SetInterruptHandler:	
 10398                           ; 1 bytes @ 0x3
 10399                           
 10400  0023                     ??_checkDebounceSW1:	
 10401                           ; 1 bytes @ 0x3
 10402                           
 10403  0023                     ?_LED_bin:	
 10404                           ; 1 bytes @ 0x3
 10405                           
 10406  0023                     ?_ring_buffer:	
 10407                           ; 1 bytes @ 0x3
 10408                           
 10409  0023                     ??_checkDebounceSW2:	
 10410                           ; 1 bytes @ 0x3
 10411                           
 10412  0023                     ?_INT_SetInterruptHandler:	
 10413                           ; 1 bytes @ 0x3
 10414                           
 10415  0023                     ??_ADCC_StartConversion:	
 10416                           ; 1 bytes @ 0x3
 10417                           
 10418  0023                     ??_ADCC_IsConversionDone:	
 10419                           ; 1 bytes @ 0x3
 10420                           
 10421  0023                     ??_TMR0_StartTimer:	
 10422                           ; 1 bytes @ 0x3
 10423                           
 10424  0023                     ?_DATAEE_ReadByte:	
 10425                           ; 1 bytes @ 0x3
 10426                           
 10427  0023                     ?___bmul:	
 10428                           ; 1 bytes @ 0x3
 10429                           
 10430  0023                     ?_ADCC_GetConversionResult:	
 10431                           ; 1 bytes @ 0x3
 10432                           
 10433  0023                     ?___wmul:	
 10434                           ; 2 bytes @ 0x3
 10435                           
 10436  0023                     ?___awdiv:	
 10437                           ; 2 bytes @ 0x3
 10438                           
 10439  0023                     ?___awmod:	
 10440                           ; 2 bytes @ 0x3
 10441                           
 10442  0023                     ADCC_StartConversion@channel:	
 10443                           ; 2 bytes @ 0x3
 10444                           
 10445  0023                     ring_buffer@clock_h:	
 10446                           ; 1 bytes @ 0x3
 10447                           
 10448  0023                     ___bmul@multiplicand:	
 10449                           ; 1 bytes @ 0x3
 10450                           
 10451  0023                     INT_SetInterruptHandler@InterruptHandler:	
 10452                           ; 1 bytes @ 0x3
 10453                           
 10454  0023                     TMR0_SetInterruptHandler@InterruptHandler:	
 10455                           ; 2 bytes @ 0x3
 10456                           
 10457  0023                     TMR1_SetInterruptHandler@InterruptHandler:	
 10458                           ; 2 bytes @ 0x3
 10459                           
 10460  0023                     DATAEE_ReadByte@bAdd:	
 10461                           ; 2 bytes @ 0x3
 10462                           
 10463  0023                     TMR2_SetInterruptHandler@InterruptHandler:	
 10464                           ; 2 bytes @ 0x3
 10465                           
 10466  0023                     LED_bin@value:	
 10467                           ; 2 bytes @ 0x3
 10468                           
 10469  0023                     ___wmul@multiplier:	
 10470                           ; 2 bytes @ 0x3
 10471                           
 10472  0023                     ___awdiv@divisor:	
 10473                           ; 2 bytes @ 0x3
 10474                           
 10475  0023                     ___awmod@divisor:	
 10476                           ; 2 bytes @ 0x3
 10477                           
 10478                           
 10479                           ; 2 bytes @ 0x3
 10480  0023                     	ds	1
 10481  0024                     ??___bmul:	
 10482  0024                     ring_buffer@clock_m:	
 10483                           ; 1 bytes @ 0x4
 10484                           
 10485                           
 10486                           ; 1 bytes @ 0x4
 10487  0024                     	ds	1
 10488  0025                     ??_TMR2_Initialize:	
 10489  0025                     ??_TMR1_Initialize:	
 10490                           ; 1 bytes @ 0x5
 10491                           
 10492  0025                     ??_TMR0_Initialize:	
 10493                           ; 1 bytes @ 0x5
 10494                           
 10495  0025                     ??_TMR0_SetInterruptHandler:	
 10496                           ; 1 bytes @ 0x5
 10497                           
 10498  0025                     ??_TMR1_SetInterruptHandler:	
 10499                           ; 1 bytes @ 0x5
 10500                           
 10501  0025                     ??_TMR2_SetInterruptHandler:	
 10502                           ; 1 bytes @ 0x5
 10503                           
 10504  0025                     ??_LED_bin:	
 10505                           ; 1 bytes @ 0x5
 10506                           
 10507  0025                     ??_cksum:	
 10508                           ; 1 bytes @ 0x5
 10509                           
 10510  0025                     ??_INT_SetInterruptHandler:	
 10511                           ; 1 bytes @ 0x5
 10512                           
 10513  0025                     ??_EXT_INT_Initialize:	
 10514                           ; 1 bytes @ 0x5
 10515                           
 10516  0025                     ??_SYSTEM_Initialize:	
 10517                           ; 1 bytes @ 0x5
 10518                           
 10519  0025                     ??_ADCC_GetConversionResult:	
 10520                           ; 1 bytes @ 0x5
 10521                           
 10522  0025                     ??_DATAEE_ReadByte:	
 10523                           ; 1 bytes @ 0x5
 10524                           
 10525  0025                     ?_ADC_read:	
 10526                           ; 1 bytes @ 0x5
 10527                           
 10528  0025                     ring_buffer@clock_s:	
 10529                           ; 2 bytes @ 0x5
 10530                           
 10531  0025                     ___bmul@product:	
 10532                           ; 1 bytes @ 0x5
 10533                           
 10534  0025                     ___wmul@multiplicand:	
 10535                           ; 1 bytes @ 0x5
 10536                           
 10537  0025                     ___awdiv@dividend:	
 10538                           ; 2 bytes @ 0x5
 10539                           
 10540  0025                     ___awmod@dividend:	
 10541                           ; 2 bytes @ 0x5
 10542                           
 10543                           
 10544                           ; 2 bytes @ 0x5
 10545  0025                     	ds	1
 10546  0026                     ring_buffer@tem:	
 10547  0026                     cksum@res:	
 10548                           ; 1 bytes @ 0x6
 10549                           
 10550  0026                     ___bmul@multiplier:	
 10551                           ; 1 bytes @ 0x6
 10552                           
 10553                           
 10554                           ; 1 bytes @ 0x6
 10555  0026                     	ds	1
 10556  0027                     ??_ADC_read:	
 10557  0027                     ?_read_ring:	
 10558                           ; 1 bytes @ 0x7
 10559                           
 10560  0027                     ??___wmul:	
 10561                           ; 1 bytes @ 0x7
 10562                           
 10563  0027                     ??___awdiv:	
 10564                           ; 1 bytes @ 0x7
 10565                           
 10566  0027                     ??___awmod:	
 10567                           ; 1 bytes @ 0x7
 10568                           
 10569  0027                     ring_buffer@lum:	
 10570                           ; 1 bytes @ 0x7
 10571                           
 10572  0027                     read_ring@nreg:	
 10573                           ; 1 bytes @ 0x7
 10574                           
 10575  0027                     cksum@i:	
 10576                           ; 1 bytes @ 0x7
 10577                           
 10578  0027                     ___wmul@product:	
 10579                           ; 2 bytes @ 0x7
 10580                           
 10581                           
 10582                           ; 2 bytes @ 0x7
 10583  0027                     	ds	1
 10584  0028                     ??_ring_buffer:	
 10585  0028                     read_ring@nreg_init:	
 10586                           ; 1 bytes @ 0x8
 10587                           
 10588  0028                     ___awdiv@counter:	
 10589                           ; 1 bytes @ 0x8
 10590                           
 10591  0028                     ___awmod@counter:	
 10592                           ; 1 bytes @ 0x8
 10593                           
 10594                           
 10595                           ; 1 bytes @ 0x8
 10596  0028                     	ds	1
 10597  0029                     ?_PWM6_LoadDutyValue:	
 10598  0029                     ?_DATAEE_WriteByte:	
 10599                           ; 1 bytes @ 0x9
 10600                           
 10601  0029                     ring_buffer@_ring_byte:	
 10602                           ; 1 bytes @ 0x9
 10603                           
 10604  0029                     read_ring@index:	
 10605                           ; 1 bytes @ 0x9
 10606                           
 10607  0029                     ___awdiv@sign:	
 10608                           ; 1 bytes @ 0x9
 10609                           
 10610  0029                     ___awmod@sign:	
 10611                           ; 1 bytes @ 0x9
 10612                           
 10613  0029                     PWM6_LoadDutyValue@dutyValue:	
 10614                           ; 1 bytes @ 0x9
 10615                           
 10616  0029                     DATAEE_WriteByte@bAdd:	
 10617                           ; 2 bytes @ 0x9
 10618                           
 10619                           
 10620                           ; 2 bytes @ 0x9
 10621  0029                     	ds	1
 10622  002A                     read_ring@subindex:	
 10623  002A                     ___awdiv@quotient:	
 10624                           ; 1 bytes @ 0xA
 10625                           
 10626                           
 10627                           ; 2 bytes @ 0xA
 10628  002A                     	ds	1
 10629  002B                     ??_read_ring:	
 10630  002B                     ??_PWM6_LoadDutyValue:	
 10631                           ; 1 bytes @ 0xB
 10632                           
 10633  002B                     DATAEE_WriteByte@bData:	
 10634                           ; 1 bytes @ 0xB
 10635                           
 10636                           
 10637                           ; 1 bytes @ 0xB
 10638  002B                     	ds	1
 10639  002C                     ??_limitHoursUnits:	
 10640  002C                     ??_DATAEE_WriteByte:	
 10641                           ; 1 bytes @ 0xC
 10642                           
 10643  002C                     DATAEE_WriteByte@GIEBitValue:	
 10644                           ; 1 bytes @ 0xC
 10645                           
 10646                           
 10647                           ; 1 bytes @ 0xC
 10648  002C                     	ds	1
 10649  002D                     ?_push_ring:	
 10650  002D                     ??_cksum_w:	
 10651                           ; 1 bytes @ 0xD
 10652                           
 10653  002D                     ??_all_LED:	
 10654                           ; 1 bytes @ 0xD
 10655                           
 10656  002D                     ??_mod1_LED:	
 10657                           ; 1 bytes @ 0xD
 10658                           
 10659  002D                     ??_mod2_LED:	
 10660                           ; 1 bytes @ 0xD
 10661                           
 10662  002D                     ??_mod3_LED:	
 10663                           ; 1 bytes @ 0xD
 10664                           
 10665  002D                     ??_mod4_LED:	
 10666                           ; 1 bytes @ 0xD
 10667                           
 10668  002D                     ??_mode_select_LED:	
 10669                           ; 1 bytes @ 0xD
 10670                           
 10671  002D                     ??_mode_LED:	
 10672                           ; 1 bytes @ 0xD
 10673                           
 10674  002D                     ??_representLed:	
 10675                           ; 1 bytes @ 0xD
 10676                           
 10677  002D                     ??_reset_recv:	
 10678                           ; 1 bytes @ 0xD
 10679                           
 10680  002D                     push_ring@nreg:	
 10681                           ; 1 bytes @ 0xD
 10682                           
 10683  002D                     read_ring@i:	
 10684                           ; 1 bytes @ 0xD
 10685                           
 10686  002D                     reset_recv@i:	
 10687                           ; 1 bytes @ 0xD
 10688                           
 10689                           
 10690                           ; 2 bytes @ 0xD
 10691  002D                     	ds	1
 10692  002E                     ??_save_recovery_params:	
 10693  002E                     push_ring@nreg_init:	
 10694                           ; 1 bytes @ 0xE
 10695                           
 10696  002E                     read_ring@nreg_pt:	
 10697                           ; 1 bytes @ 0xE
 10698                           
 10699                           
 10700                           ; 1 bytes @ 0xE
 10701  002E                     	ds	1
 10702  002F                     ??_recoverData:	
 10703  002F                     save_recovery_params@aux:	
 10704                           ; 1 bytes @ 0xF
 10705                           
 10706  002F                     push_ring@ring_byte:	
 10707                           ; 1 bytes @ 0xF
 10708                           
 10709  002F                     read_ring@absindex:	
 10710                           ; 1 bytes @ 0xF
 10711                           
 10712  002F                     mode_LED@subfield:	
 10713                           ; 1 bytes @ 0xF
 10714                           
 10715                           
 10716                           ; 1 bytes @ 0xF
 10717  002F                     	ds	1
 10718  0030                     ??_push_ring:	
 10719  0030                     save_recovery_params@aux1:	
 10720                           ; 1 bytes @ 0x10
 10721                           
 10722  0030                     representLed@val:	
 10723                           ; 1 bytes @ 0x10
 10724                           
 10725                           
 10726                           ; 1 bytes @ 0x10
 10727  0030                     	ds	1
 10728  0031                     representLed@aux:	
 10729                           
 10730                           ; 1 bytes @ 0x11
 10731  0031                     	ds	1
 10732  0032                     ?_increment_subfield_clk:	
 10733  0032                     push_ring@i:	
 10734                           ; 1 bytes @ 0x12
 10735                           
 10736  0032                     increment_subfield_clk@init_val:	
 10737                           ; 1 bytes @ 0x12
 10738                           
 10739                           
 10740                           ; 2 bytes @ 0x12
 10741  0032                     	ds	1
 10742  0033                     push_ring@nreg_pt:	
 10743                           
 10744                           ; 1 bytes @ 0x13
 10745  0033                     	ds	1
 10746  0034                     ??_increment_subfield_clk:	
 10747                           
 10748                           ; 1 bytes @ 0x14
 10749  0034                     	ds	1
 10750  0035                     increment_subfield_clk@exit:	
 10751                           
 10752                           ; 1 bytes @ 0x15
 10753  0035                     	ds	1
 10754  0036                     increment_subfield_clk@limit:	
 10755                           
 10756                           ; 1 bytes @ 0x16
 10757  0036                     	ds	1
 10758  0037                     increment_subfield_clk@_value:	
 10759                           
 10760                           ; 1 bytes @ 0x17
 10761  0037                     	ds	1
 10762  0038                     ??_getSubfieldInfo:	
 10763                           
 10764                           ; 1 bytes @ 0x18
 10765  0038                     	ds	4
 10766  003C                     getSubfieldInfo@h_units:	
 10767                           
 10768                           ; 1 bytes @ 0x1C
 10769  003C                     	ds	1
 10770  003D                     getSubfieldInfo@m_tens:	
 10771                           
 10772                           ; 1 bytes @ 0x1D
 10773  003D                     	ds	1
 10774  003E                     getSubfieldInfo@m_units:	
 10775                           
 10776                           ; 1 bytes @ 0x1E
 10777  003E                     	ds	1
 10778  003F                     ??_selectSubfield:	
 10779                           
 10780                           ; 1 bytes @ 0x1F
 10781  003F                     	ds	2
 10782  0041                     selectSubfield@subfield:	
 10783                           
 10784                           ; 2 bytes @ 0x21
 10785  0041                     	ds	2
 10786  0043                     ??_config_routine:	
 10787                           
 10788                           ; 1 bytes @ 0x23
 10789  0043                     	ds	1
 10790  0044                     config_routine@select_mode:	
 10791                           
 10792                           ; 2 bytes @ 0x24
 10793  0044                     	ds	2
 10794  0046                     ??_main:	
 10795                           
 10796                           ; 1 bytes @ 0x26
 10797  0046                     	ds	5
 10798                           
 10799                           	psect	maintext
 10800  007E                     __pmaintext:	
 10801 ;;
 10802 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
 10803 ;;
 10804 ;; *************** function _main *****************
 10805 ;; Defined at:
 10806 ;;		line 170 in file "main.c"
 10807 ;; Parameters:    Size  Location     Type
 10808 ;;		None
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;  t1m             1    3[BANK1 ] unsigned char 
 10811 ;;  t5s             1    2[BANK1 ] unsigned char 
 10812 ;; Return value:  Size  Location     Type
 10813 ;;                  1    wreg      void 
 10814 ;; Registers used:
 10815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10816 ;; Tracked objects:
 10817 ;;		On entry : B1F/0
 10818 ;;		On exit  : 0/0
 10819 ;;		Unchanged: 0/0
 10820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10822 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10823 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10824 ;;      Totals:         0       5       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10825 ;;Total ram usage:       10 bytes
 10826 ;; Hardware stack levels required when called:   12
 10827 ;; This function calls:
 10828 ;;		_ADC_read
 10829 ;;		_DATAEE_WriteByte
 10830 ;;		_INT_SetInterruptHandler
 10831 ;;		_LED_bin
 10832 ;;		_PWM6_LoadDutyValue
 10833 ;;		_SYSTEM_Initialize
 10834 ;;		_TMR0_SetInterruptHandler
 10835 ;;		_TMR0_StartTimer
 10836 ;;		_TMR1_SetInterruptHandler
 10837 ;;		_TMR2_SetInterruptHandler
 10838 ;;		_cksum_w
 10839 ;;		_config_routine
 10840 ;;		_i2c1_driver_open
 10841 ;;		_push_ring
 10842 ;;		_read_ring
 10843 ;;		_recoverData
 10844 ;;		_ring_buffer
 10845 ;;		_save_recovery_params
 10846 ;; This function is called by:
 10847 ;;		Startup code after reset
 10848 ;; This function uses a non-reentrant model
 10849 ;;
 10850                           
 10851                           
 10852                           ;psect for function _main
 10853  007E                     _main:	
 10854  007E                     l7397:	
 10855                           ;incstack = 0
 10856                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10857                           
 10858                           
 10859                           ;main.c: 172:     SYSTEM_Initialize();
 10860  007E  318D  252D  3180   	fcall	_SYSTEM_Initialize
 10861                           
 10862                           ;main.c: 173:     TMR0_SetInterruptHandler(ISR_3s);
 10863  0081  30AC               	movlw	low _ISR_3s
 10864  0082  0020               	movlb	0	; select bank0
 10865  0083  00A3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10866  0084  300C               	movlw	high _ISR_3s
 10867  0085  00A4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10868  0086  318A  22D0  3180   	fcall	_TMR0_SetInterruptHandler
 10869                           
 10870                           ;main.c: 174:     TMR1_SetInterruptHandler(handler_clock_hms);
 10871  0089  3046               	movlw	low _handler_clock_hms
 10872  008A  0020               	movlb	0	; select bank0
 10873  008B  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10874  008C  300F               	movlw	high _handler_clock_hms
 10875  008D  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10876  008E  318A  22D9  3180   	fcall	_TMR1_SetInterruptHandler
 10877                           
 10878                           ;main.c: 175:     INT_SetInterruptHandler(sw1_EXT);
 10879  0091  30EC               	movlw	low _sw1_EXT
 10880  0092  0020               	movlb	0	; select bank0
 10881  0093  00A3               	movwf	INT_SetInterruptHandler@InterruptHandler
 10882  0094  300D               	movlw	high _sw1_EXT
 10883  0095  00A4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 10884  0096  318A  22BE  3180   	fcall	_INT_SetInterruptHandler
 10885                           
 10886                           ;main.c: 176:     TMR2_SetInterruptHandler(handler_clock_ms);
 10887  0099  301F               	movlw	low _handler_clock_ms
 10888  009A  0020               	movlb	0	; select bank0
 10889  009B  00A3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 10890  009C  300B               	movlw	high _handler_clock_ms
 10891  009D  00A4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 10892  009E  318A  22E2  3180   	fcall	_TMR2_SetInterruptHandler
 10893  00A1                     l7399:	
 10894  00A1                     l7401:	
 10895  00A1                     l7403:	
 10896  00A1                     l1291:	
 10897  00A1  3096               	movlw	150
 10898  00A2  0020               	movlb	0	; select bank0
 10899  00A3  00C6               	movwf	??_main
 10900  00A4  0846               	movf	??_main,w
 10901  00A5  00E9               	movwf	_nreg
 10902  00A6                     l7407:	
 10903                           
 10904                           ;main.c: 184:     nreg_pt = 0;
 10905  00A6  01DF               	clrf	_nreg_pt
 10906  00A7                     l7409:	
 10907                           
 10908                           ;main.c: 185:     nreg_init = 0;
 10909  00A7  01E0               	clrf	_nreg_init
 10910  00A8                     l7411:	
 10911                           
 10912                           ;main.c: 186:     alaf = 1;
 10913  00A8  01D3               	clrf	_alaf
 10914  00A9  0AD3               	incf	_alaf,f
 10915  00AA                     l7413:	
 10916                           
 10917                           ;main.c: 187:     temp = 0;
 10918  00AA  01D4               	clrf	_temp
 10919  00AB                     l7415:	
 10920                           
 10921                           ;main.c: 188:     lum_bin = 0;
 10922  00AB  01D1               	clrf	_lum_bin
 10923  00AC  01D2               	clrf	_lum_bin+1
 10924  00AD                     l7417:	
 10925                           
 10926                           ;main.c: 189:     lum_threshold = 0;
 10927  00AD  01CF               	clrf	_lum_threshold
 10928  00AE  01D0               	clrf	_lum_threshold+1
 10929  00AF                     l7419:	
 10930                           
 10931                           ;main.c: 190:     duty_cycle = 0;
 10932  00AF  0021               	movlb	1	; select bank1
 10933  00B0  01BD               	clrf	_duty_cycle^(0+128)
 10934  00B1  01BE               	clrf	(_duty_cycle+1)^(0+128)
 10935  00B2                     l7421:	
 10936                           
 10937                           ;main.c: 191:     set_mode= 0;
 10938  00B2  0020               	movlb	0	; select bank0
 10939  00B3  01D7               	clrf	_set_mode	;volatile
 10940  00B4                     l7423:	
 10941                           
 10942                           ;main.c: 194:     i2c1_driver_open();
 10943  00B4  318B  232B  3180   	fcall	_i2c1_driver_open
 10944  00B7                     l7425:	
 10945                           
 10946                           ;main.c: 195:     TRISCbits.TRISC3 = 1;
 10947  00B7  0020               	movlb	0	; select bank0
 10948  00B8  1593               	bsf	19,3	;volatile
 10949  00B9                     l7427:	
 10950                           
 10951                           ;main.c: 196:     TRISCbits.TRISC4 = 1;
 10952  00B9  1613               	bsf	19,4	;volatile
 10953  00BA                     l7429:	
 10954                           
 10955                           ;main.c: 197:     WPUC3 = 1;
 10956  00BA  003E               	movlb	30	; select bank30
 10957  00BB  15CF               	bsf	79,3	;volatile
 10958  00BC                     l7431:	
 10959                           
 10960                           ;main.c: 198:     WPUC4 = 1;
 10961  00BC  164F               	bsf	79,4	;volatile
 10962  00BD                     l7433:	
 10963                           
 10964                           ;main.c: 201:     recoverData();
 10965  00BD  3182  22DF  3180   	fcall	_recoverData
 10966  00C0                     l7435:	
 10967                           
 10968                           ;main.c: 203:     PWM6_LoadDutyValue(0);
 10969  00C0  3000               	movlw	0
 10970  00C1  0020               	movlb	0	; select bank0
 10971  00C2  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 10972  00C3  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10973  00C4  318C  24C5  3180   	fcall	_PWM6_LoadDutyValue
 10974  00C7                     l7437:	
 10975                           
 10976                           ;main.c: 204:     alarm = 0 ;
 10977  00C7  0020               	movlb	0	; select bank0
 10978  00C8  01D5               	clrf	_alarm	;volatile
 10979  00C9                     l7439:	
 10980  00C9  003E               	movlb	30	; select bank30
 10981  00CA  1644               	bsf	68,4	;volatile
 10982  00CB                     l7441:	
 10983                           
 10984                           ;main.c: 208:     (INTCONbits.GIE = 1);
 10985  00CB  178B               	bsf	11,7	;volatile
 10986  00CC                     l7443:	
 10987                           
 10988                           ;main.c: 210:     (INTCONbits.PEIE = 1);
 10989  00CC  170B               	bsf	11,6	;volatile
 10990  00CD                     l1294:	
 10991                           ;main.c: 213:     while (1)
 10992                           
 10993  00CD  0063               	sleep	;# 
 10994  00CE                     l7445:	
 10995                           
 10996                           ;main.c: 217:         __nop();
 10997  00CE  0000               	nop
 10998  00CF                     l7447:	
 10999                           
 11000                           ;main.c: 219:         PIE4bits.TMR1IE = 0;
 11001  00CF  002E               	movlb	14	; select bank14
 11002  00D0  101A               	bcf	26,0	;volatile
 11003  00D1                     l7449:	
 11004                           
 11005                           ;main.c: 220:         t5s = last5s;
 11006  00D1  0020               	movlb	0	; select bank0
 11007  00D2  0859               	movf	_last5s,w	;volatile
 11008  00D3  00C6               	movwf	??_main
 11009  00D4  0846               	movf	??_main,w
 11010  00D5  0021               	movlb	1	; select bank1
 11011  00D6  00E0               	movwf	main@t5s^(0+128)
 11012  00D7                     l7451:	
 11013                           
 11014                           ;main.c: 221:         PIE4bits.TMR1IE = 1;
 11015  00D7  002E               	movlb	14	; select bank14
 11016  00D8  141A               	bsf	26,0	;volatile
 11017  00D9                     l7453:	
 11018                           
 11019                           ;main.c: 223:         if(t5s >= pmon){
 11020  00D9  0020               	movlb	0	; select bank0
 11021  00DA  0868               	movf	_pmon,w
 11022  00DB  0021               	movlb	1	; select bank1
 11023  00DC  0260               	subwf	main@t5s^(0+128),w
 11024  00DD  1C03               	skipc
 11025  00DE  28E0               	goto	u4381
 11026  00DF  28E1               	goto	u4380
 11027  00E0                     u4381:	
 11028  00E0  29F4               	goto	l1295
 11029  00E1                     u4380:	
 11030  00E1                     l7455:	
 11031                           
 11032                           ;main.c: 224:             PIE4bits.TMR1IE = 0;
 11033  00E1  002E               	movlb	14	; select bank14
 11034  00E2  101A               	bcf	26,0	;volatile
 11035  00E3                     l7457:	
 11036                           
 11037                           ;main.c: 225:             last5s =0;
 11038  00E3  0020               	movlb	0	; select bank0
 11039  00E4  01D9               	clrf	_last5s	;volatile
 11040  00E5                     l7459:	
 11041                           
 11042                           ;main.c: 226:             PIE4bits.TMR1IE = 1;
 11043  00E5  002E               	movlb	14	; select bank14
 11044  00E6  141A               	bsf	26,0	;volatile
 11045  00E7                     l7461:	
 11046                           
 11047                           ;main.c: 229:                     if(!config_mode){
 11048  00E7  0020               	movlb	0	; select bank0
 11049  00E8  0856               	movf	_config_mode,w	;volatile
 11050  00E9  1D03               	btfss	3,2
 11051  00EA  28EC               	goto	u4391
 11052  00EB  28ED               	goto	u4390
 11053  00EC                     u4391:	
 11054  00EC  29D8               	goto	l7515
 11055  00ED                     u4390:	
 11056  00ED                     l7463:	
 11057                           
 11058                           ;main.c: 231:                             convertedValue = ADC_read();
 11059  00ED  318C  24DE  3180   	fcall	_ADC_read
 11060  00F0  0020               	movlb	0	; select bank0
 11061  00F1  0826               	movf	?_ADC_read+1,w
 11062  00F2  0021               	movlb	1	; select bank1
 11063  00F3  00C0               	movwf	(_convertedValue+1)^(0+128)
 11064  00F4  0020               	movlb	0	; select bank0
 11065  00F5  0825               	movf	?_ADC_read,w
 11066  00F6  0021               	movlb	1	; select bank1
 11067  00F7  00BF               	movwf	_convertedValue^(0+128)
 11068  00F8                     l7465:	
 11069                           
 11070                           ;main.c: 232:                             lum_bin = (convertedValue >> 8);
 11071  00F8  0840               	movf	(_convertedValue+1)^(0+128),w
 11072  00F9  0020               	movlb	0	; select bank0
 11073  00FA  00C7               	movwf	??_main+1
 11074  00FB  0021               	movlb	1	; select bank1
 11075  00FC  083F               	movf	_convertedValue^(0+128),w
 11076  00FD  0020               	movlb	0	; select bank0
 11077  00FE  00C6               	movwf	??_main
 11078  00FF  0847               	movf	??_main+1,w
 11079  0100  00C6               	movwf	??_main
 11080  0101  01C7               	clrf	??_main+1
 11081  0102  0846               	movf	??_main,w
 11082  0103  00D1               	movwf	_lum_bin
 11083  0104  0847               	movf	??_main+1,w
 11084  0105  00D2               	movwf	_lum_bin+1
 11085  0106                     l7467:	
 11086                           
 11087                           ;main.c: 233:                             LED_bin(lum_bin);
 11088  0106  0852               	movf	_lum_bin+1,w
 11089  0107  00A4               	movwf	LED_bin@value+1
 11090  0108  0851               	movf	_lum_bin,w
 11091  0109  00A3               	movwf	LED_bin@value
 11092  010A  318C  24F8  3180   	fcall	_LED_bin
 11093  010D                     l7469:	
 11094                           
 11095                           ;main.c: 236:                             __nop();
 11096  010D  0000               	nop
 11097  010E                     l7471:	
 11098                           
 11099                           ;main.c: 238:                             __nop();
 11100  010E  0000               	nop
 11101  010F                     l7473:	
 11102                           
 11103                           ;main.c: 241:                             if (temp != read_ring(nreg_pt, nreg, nreg_init
      +                          , 0, 3) || lum_bin != read_ring(nreg_pt, nreg, nreg_init, 0, 4)) {
 11104  010F  0020               	movlb	0	; select bank0
 11105  0110  0869               	movf	_nreg,w
 11106  0111  00C6               	movwf	??_main
 11107  0112  0846               	movf	??_main,w
 11108  0113  00A7               	movwf	read_ring@nreg
 11109  0114  0860               	movf	_nreg_init,w
 11110  0115  00C7               	movwf	??_main+1
 11111  0116  0847               	movf	??_main+1,w
 11112  0117  00A8               	movwf	read_ring@nreg_init
 11113  0118  01A9               	clrf	read_ring@index
 11114  0119  3003               	movlw	3
 11115  011A  00C8               	movwf	??_main+2
 11116  011B  0848               	movf	??_main+2,w
 11117  011C  00AA               	movwf	read_ring@subindex
 11118  011D  085F               	movf	_nreg_pt,w
 11119  011E  318F  277A  3180   	fcall	_read_ring
 11120  0121  0020               	movlb	0	; select bank0
 11121  0122  0654               	xorwf	_temp,w
 11122  0123  1D03               	skipz
 11123  0124  2926               	goto	u4401
 11124  0125  2927               	goto	u4400
 11125  0126                     u4401:	
 11126  0126  2945               	goto	l7477
 11127  0127                     u4400:	
 11128  0127                     l7475:	
 11129  0127  0869               	movf	_nreg,w
 11130  0128  00C6               	movwf	??_main
 11131  0129  0846               	movf	??_main,w
 11132  012A  00A7               	movwf	read_ring@nreg
 11133  012B  0860               	movf	_nreg_init,w
 11134  012C  00C7               	movwf	??_main+1
 11135  012D  0847               	movf	??_main+1,w
 11136  012E  00A8               	movwf	read_ring@nreg_init
 11137  012F  01A9               	clrf	read_ring@index
 11138  0130  3004               	movlw	4
 11139  0131  00C8               	movwf	??_main+2
 11140  0132  0848               	movf	??_main+2,w
 11141  0133  00AA               	movwf	read_ring@subindex
 11142  0134  085F               	movf	_nreg_pt,w
 11143  0135  318F  277A  3180   	fcall	_read_ring
 11144  0138  0020               	movlb	0	; select bank0
 11145  0139  00C9               	movwf	??_main+3
 11146  013A  01CA               	clrf	??_main+4
 11147  013B  0852               	movf	_lum_bin+1,w
 11148  013C  064A               	xorwf	??_main+4,w
 11149  013D  1D03               	skipz
 11150  013E  2941               	goto	u4415
 11151  013F  0851               	movf	_lum_bin,w
 11152  0140  0649               	xorwf	??_main+3,w
 11153  0141                     u4415:	
 11154  0141  1903               	skipnz
 11155  0142  2944               	goto	u4411
 11156  0143  2945               	goto	u4410
 11157  0144                     u4411:	
 11158  0144  297D               	goto	l7483
 11159  0145                     u4410:	
 11160  0145                     l7477:	
 11161                           
 11162                           ;main.c: 242:                                 ring_buffer (ring_byte,clkh, clkm, seg, te
      +                          mp,lum_bin);
 11163  0145  085E               	movf	_clkh,w	;volatile
 11164  0146  00C6               	movwf	??_main
 11165  0147  0846               	movf	??_main,w
 11166  0148  00A3               	movwf	ring_buffer@clock_h
 11167  0149  085D               	movf	_clkm,w	;volatile
 11168  014A  00C7               	movwf	??_main+1
 11169  014B  0847               	movf	??_main+1,w
 11170  014C  00A4               	movwf	ring_buffer@clock_m
 11171  014D  085C               	movf	_seg,w	;volatile
 11172  014E  00C8               	movwf	??_main+2
 11173  014F  0848               	movf	??_main+2,w
 11174  0150  00A5               	movwf	ring_buffer@clock_s
 11175  0151  0854               	movf	_temp,w
 11176  0152  00C9               	movwf	??_main+3
 11177  0153  0849               	movf	??_main+3,w
 11178  0154  00A6               	movwf	ring_buffer@tem
 11179  0155  0851               	movf	_lum_bin,w
 11180  0156  00CA               	movwf	??_main+4
 11181  0157  084A               	movf	??_main+4,w
 11182  0158  00A7               	movwf	ring_buffer@lum
 11183  0159  30CF               	movlw	(low (_ring_byte| 0))& (0+255)
 11184  015A  318E  26E4  3180   	fcall	_ring_buffer
 11185                           
 11186                           ;main.c: 243:                                 push_ring(&nreg_pt, nreg, &nreg_init, ring
      +                          _byte);
 11187  015D  0020               	movlb	0	; select bank0
 11188  015E  0869               	movf	_nreg,w
 11189  015F  00C6               	movwf	??_main
 11190  0160  0846               	movf	??_main,w
 11191  0161  00AD               	movwf	push_ring@nreg
 11192  0162  3060               	movlw	(low (_nreg_init| 0))& (0+255)
 11193  0163  00C7               	movwf	??_main+1
 11194  0164  0847               	movf	??_main+1,w
 11195  0165  00AE               	movwf	push_ring@nreg_init
 11196  0166  30CF               	movlw	(low (_ring_byte| 0))& (0+255)
 11197  0167  00C8               	movwf	??_main+2
 11198  0168  0848               	movf	??_main+2,w
 11199  0169  00AF               	movwf	push_ring@ring_byte
 11200  016A  305F               	movlw	(low (_nreg_pt| 0))& (0+255)
 11201  016B  318F  27B9  3180   	fcall	_push_ring
 11202  016E                     l7479:	
 11203                           
 11204                           ;main.c: 244:                                 DATAEE_WriteByte(0xF0FF - 10 + 4, nreg_pt)
      +                          ;
 11205  016E  30F9               	movlw	249
 11206  016F  0020               	movlb	0	; select bank0
 11207  0170  00A9               	movwf	DATAEE_WriteByte@bAdd
 11208  0171  30F0               	movlw	240
 11209  0172  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11210  0173  085F               	movf	_nreg_pt,w
 11211  0174  00C6               	movwf	??_main
 11212  0175  0846               	movf	??_main,w
 11213  0176  00AB               	movwf	DATAEE_WriteByte@bData
 11214  0177  318D  25C8  3180   	fcall	_DATAEE_WriteByte
 11215  017A                     l7481:	
 11216                           
 11217                           ;main.c: 245:                                 cksum_w();
 11218  017A  318B  23A9  3180   	fcall	_cksum_w
 11219  017D                     l7483:	
 11220                           
 11221                           ;main.c: 249:                             lum_threshold = (lum_bin > 2 || temp > 100 ) &
      +                           alaf;
 11222  017D  0021               	movlb	1	; select bank1
 11223  017E  01E2               	clrf	_main$2460^(0+128)
 11224  017F  0AE2               	incf	_main$2460^(0+128),f
 11225  0180                     l7485:	
 11226  0180  3000               	movlw	0
 11227  0181  0020               	movlb	0	; select bank0
 11228  0182  0252               	subwf	_lum_bin+1,w
 11229  0183  3003               	movlw	3
 11230  0184  1903               	skipnz
 11231  0185  0251               	subwf	_lum_bin,w
 11232  0186  1803               	skipnc
 11233  0187  2989               	goto	u4421
 11234  0188  298A               	goto	u4420
 11235  0189                     u4421:	
 11236  0189  2992               	goto	l7491
 11237  018A                     u4420:	
 11238  018A                     l7487:	
 11239  018A  3065               	movlw	101
 11240  018B  0254               	subwf	_temp,w
 11241  018C  1803               	skipnc
 11242  018D  298F               	goto	u4431
 11243  018E  2990               	goto	u4430
 11244  018F                     u4431:	
 11245  018F  2992               	goto	l7491
 11246  0190                     u4430:	
 11247  0190                     l7489:	
 11248  0190  0021               	movlb	1	; select bank1
 11249  0191  01E2               	clrf	_main$2460^(0+128)
 11250  0192                     l7491:	
 11251  0192  0021               	movlb	1	; select bank1
 11252  0193  0862               	movf	_main$2460^(0+128),w
 11253  0194  0020               	movlb	0	; select bank0
 11254  0195  0553               	andwf	_alaf,w
 11255  0196  00C6               	movwf	??_main
 11256  0197  01C7               	clrf	??_main+1
 11257  0198  0846               	movf	??_main,w
 11258  0199  00CF               	movwf	_lum_threshold
 11259  019A  0847               	movf	??_main+1,w
 11260  019B  00D0               	movwf	_lum_threshold+1
 11261  019C                     l7493:	
 11262                           
 11263                           ;main.c: 251:                             if(lum_threshold){
 11264  019C  084F               	movf	_lum_threshold,w
 11265  019D  0450               	iorwf	_lum_threshold+1,w
 11266  019E  1903               	btfsc	3,2
 11267  019F  29A1               	goto	u4441
 11268  01A0  29A2               	goto	u4440
 11269  01A1                     u4441:	
 11270  01A1  29C8               	goto	l7509
 11271  01A2                     u4440:	
 11272  01A2                     l7495:	
 11273                           
 11274                           ;main.c: 252:                                 if(alarm == 2){
 11275  01A2  3002               	movlw	2
 11276  01A3  0655               	xorwf	_alarm,w	;volatile
 11277  01A4  1D03               	btfss	3,2
 11278  01A5  29A7               	goto	u4451
 11279  01A6  29A8               	goto	u4450
 11280  01A7                     u4451:	
 11281  01A7  29B8               	goto	l7501
 11282  01A8                     u4450:	
 11283  01A8                     l7497:	
 11284                           
 11285                           ;main.c: 253:                                     duty_cycle +=1 ;
 11286  01A8  3001               	movlw	1
 11287  01A9  0021               	movlb	1	; select bank1
 11288  01AA  07BD               	addwf	_duty_cycle^(0+128),f
 11289  01AB  3000               	movlw	0
 11290  01AC  3DBE               	addwfc	(_duty_cycle+1)^(0+128),f
 11291  01AD                     l7499:	
 11292                           
 11293                           ;main.c: 254:                                     PWM6_LoadDutyValue(duty_cycle);
 11294  01AD  083E               	movf	(_duty_cycle+1)^(0+128),w
 11295  01AE  0020               	movlb	0	; select bank0
 11296  01AF  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11297  01B0  0021               	movlb	1	; select bank1
 11298  01B1  083D               	movf	_duty_cycle^(0+128),w
 11299  01B2  0020               	movlb	0	; select bank0
 11300  01B3  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 11301  01B4  318C  24C5  3180   	fcall	_PWM6_LoadDutyValue
 11302                           
 11303                           ;main.c: 255:                                 }
 11304  01B7  29E4               	goto	l7523
 11305  01B8                     l7501:	
 11306  01B8  0855               	movf	_alarm,w	;volatile
 11307  01B9  1D03               	btfss	3,2
 11308  01BA  29BC               	goto	u4461
 11309  01BB  29BD               	goto	u4460
 11310  01BC                     u4461:	
 11311  01BC  29D7               	goto	l1307
 11312  01BD                     u4460:	
 11313  01BD                     l7503:	
 11314                           
 11315                           ;main.c: 257:                                     PIE0bits.TMR0IE = 1;
 11316  01BD  002E               	movlb	14	; select bank14
 11317  01BE  1696               	bsf	22,5	;volatile
 11318  01BF                     l7505:	
 11319                           
 11320                           ;main.c: 258:                                     TMR0_StartTimer();
 11321  01BF  318A  2228  3180   	fcall	_TMR0_StartTimer
 11322  01C2                     l7507:	
 11323                           
 11324                           ;main.c: 259:                                     alarm = 2 ;
 11325  01C2  3002               	movlw	2
 11326  01C3  0020               	movlb	0	; select bank0
 11327  01C4  00C6               	movwf	??_main
 11328  01C5  0846               	movf	??_main,w
 11329  01C6  00D5               	movwf	_alarm	;volatile
 11330  01C7  29E4               	goto	l7523
 11331  01C8                     l7509:	
 11332                           
 11333                           ;main.c: 263:                                 if(alarm == 2){
 11334  01C8  3002               	movlw	2
 11335  01C9  0655               	xorwf	_alarm,w	;volatile
 11336  01CA  1D03               	btfss	3,2
 11337  01CB  29CD               	goto	u4471
 11338  01CC  29CE               	goto	u4470
 11339  01CD                     u4471:	
 11340  01CD  29E4               	goto	l7523
 11341  01CE                     u4470:	
 11342  01CE                     l7511:	
 11343                           
 11344                           ;main.c: 264:                                     PWM6_LoadDutyValue(0);
 11345  01CE  3000               	movlw	0
 11346  01CF  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 11347  01D0  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11348  01D1  318C  24C5  3180   	fcall	_PWM6_LoadDutyValue
 11349  01D4                     l7513:	
 11350                           
 11351                           ;main.c: 265:                                     alarm = 0 ;
 11352  01D4  0020               	movlb	0	; select bank0
 11353  01D5  01D5               	clrf	_alarm	;volatile
 11354  01D6  29E4               	goto	l7523
 11355  01D7                     l1307:	
 11356                           ;main.c: 267:                             }
 11357                           
 11358                           
 11359                           ;main.c: 269:                     }
 11360  01D7  29E4               	goto	l7523
 11361  01D8                     l7515:	
 11362  01D8  0356               	decf	_config_mode,w	;volatile
 11363  01D9  1D03               	btfss	3,2
 11364  01DA  29DC               	goto	u4481
 11365  01DB  29DD               	goto	u4480
 11366  01DC                     u4481:	
 11367  01DC  29E4               	goto	l7523
 11368  01DD                     u4480:	
 11369  01DD                     l7517:	
 11370                           
 11371                           ;main.c: 273:                         (PIE0bits.INTE = 0);
 11372  01DD  002E               	movlb	14	; select bank14
 11373  01DE  1016               	bcf	22,0	;volatile
 11374  01DF                     l7519:	
 11375                           
 11376                           ;main.c: 274:                         config_routine();
 11377  01DF  3183  2377  3180   	fcall	_config_routine
 11378  01E2                     l7521:	
 11379                           
 11380                           ;main.c: 275:                         (PIE0bits.INTE = 1);
 11381  01E2  002E               	movlb	14	; select bank14
 11382  01E3  1416               	bsf	22,0	;volatile
 11383  01E4                     l7523:	
 11384                           
 11385                           ;main.c: 278:                     _delay((unsigned long)((10)*(1000000/4000.0)));
 11386  01E4  3004               	movlw	4
 11387  01E5  0020               	movlb	0	; select bank0
 11388  01E6  00C6               	movwf	??_main
 11389  01E7  303D               	movlw	61
 11390  01E8                     u4607:	
 11391  01E8  0B89               	decfsz	9,f
 11392  01E9  29E8               	goto	u4607
 11393  01EA  0BC6               	decfsz	??_main,f
 11394  01EB  29E8               	goto	u4607
 11395  01EC  3200               	nop2
 11396  01ED                     l7525:	
 11397                           
 11398                           ;main.c: 280:             }while(alarm == 2);
 11399  01ED  3002               	movlw	2
 11400  01EE  0020               	movlb	0	; select bank0
 11401  01EF  0655               	xorwf	_alarm,w	;volatile
 11402  01F0  1903               	btfsc	3,2
 11403  01F1  29F3               	goto	u4491
 11404  01F2  29F4               	goto	u4490
 11405  01F3                     u4491:	
 11406  01F3  28E7               	goto	l7461
 11407  01F4                     u4490:	
 11408  01F4                     l1295:	
 11409                           ;main.c: 282:         }
 11410                           
 11411                           
 11412                           ;main.c: 284:        PIE4bits.TMR1IE = 0;
 11413  01F4  002E               	movlb	14	; select bank14
 11414  01F5  101A               	bcf	26,0	;volatile
 11415  01F6                     l7527:	
 11416                           
 11417                           ;main.c: 285:        t1m = last1m;
 11418  01F6  0020               	movlb	0	; select bank0
 11419  01F7  0858               	movf	_last1m,w	;volatile
 11420  01F8  00C6               	movwf	??_main
 11421  01F9  0846               	movf	??_main,w
 11422  01FA  0021               	movlb	1	; select bank1
 11423  01FB  00E1               	movwf	main@t1m^(0+128)
 11424  01FC                     l7529:	
 11425                           
 11426                           ;main.c: 286:        PIE4bits.TMR1IE = 1;
 11427  01FC  002E               	movlb	14	; select bank14
 11428  01FD  141A               	bsf	26,0	;volatile
 11429  01FE                     l7531:	
 11430                           
 11431                           ;main.c: 288:        if (t1m >= 1) {
 11432  01FE  0021               	movlb	1	; select bank1
 11433  01FF  0861               	movf	main@t1m^(0+128),w
 11434  0200  1903               	btfsc	3,2
 11435  0201  2A03               	goto	u4501
 11436  0202  2A04               	goto	u4500
 11437  0203                     u4501:	
 11438  0203  28CD               	goto	l1294
 11439  0204                     u4500:	
 11440  0204                     l7533:	
 11441                           
 11442                           ;main.c: 289:          save_recovery_params();
 11443  0204  318E  2661  3180   	fcall	_save_recovery_params
 11444  0207  28CD               	goto	l1294
 11445  0208  3180  285B         	ljmp	start
 11446  020A                     __end_of_main:	
 11447                           
 11448                           	psect	text1
 11449  0E61                     __ptext1:	
 11450 ;; *************** function _save_recovery_params *****************
 11451 ;; Defined at:
 11452 ;;		line 721 in file "main.c"
 11453 ;; Parameters:    Size  Location     Type
 11454 ;;		None
 11455 ;; Auto vars:     Size  Location     Type
 11456 ;;  aux1            1   16[BANK0 ] unsigned char 
 11457 ;;  aux             1   15[BANK0 ] unsigned char 
 11458 ;; Return value:  Size  Location     Type
 11459 ;;                  1    wreg      void 
 11460 ;; Registers used:
 11461 ;;		wreg, status,2, status,0, pclath, cstack
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11468 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11469 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11470 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11471 ;;Total ram usage:        3 bytes
 11472 ;; Hardware stack levels used:    1
 11473 ;; Hardware stack levels required when called:    9
 11474 ;; This function calls:
 11475 ;;		_DATAEE_WriteByte
 11476 ;;		_cksum_w
 11477 ;; This function is called by:
 11478 ;;		_main
 11479 ;; This function uses a non-reentrant model
 11480 ;;
 11481                           
 11482                           
 11483                           ;psect for function _save_recovery_params
 11484  0E61                     _save_recovery_params:	
 11485  0E61                     l7271:	
 11486                           ;incstack = 0
 11487                           ; Regs used in _save_recovery_params: [wreg+status,2+status,0+pclath+cstack]
 11488                           
 11489                           
 11490                           ;main.c: 723:     unsigned char aux, aux1;;main.c: 724:     PIE4bits.TMR1IE = 0;
 11491  0E61  002E               	movlb	14	; select bank14
 11492  0E62  101A               	bcf	26,0	;volatile
 11493  0E63                     l7273:	
 11494                           
 11495                           ;main.c: 725:     last1m = 0;
 11496  0E63  0020               	movlb	0	; select bank0
 11497  0E64  01D8               	clrf	_last1m	;volatile
 11498  0E65                     l7275:	
 11499                           
 11500                           ;main.c: 726:     aux = clkh;
 11501  0E65  085E               	movf	_clkh,w	;volatile
 11502  0E66  00AE               	movwf	??_save_recovery_params
 11503  0E67  082E               	movf	??_save_recovery_params,w
 11504  0E68  00AF               	movwf	save_recovery_params@aux
 11505  0E69                     l7277:	
 11506                           
 11507                           ;main.c: 727:     aux1 = clkm;
 11508  0E69  085D               	movf	_clkm,w	;volatile
 11509  0E6A  00AE               	movwf	??_save_recovery_params
 11510  0E6B  082E               	movf	??_save_recovery_params,w
 11511  0E6C  00B0               	movwf	save_recovery_params@aux1
 11512  0E6D                     l7279:	
 11513                           
 11514                           ;main.c: 728:     PIE4bits.TMR1IE = 1;
 11515  0E6D  002E               	movlb	14	; select bank14
 11516  0E6E  141A               	bsf	26,0	;volatile
 11517  0E6F                     l7281:	
 11518                           
 11519                           ;main.c: 729:     DATAEE_WriteByte(0xF0FF - 10 + 1, aux);
 11520  0E6F  30F6               	movlw	246
 11521  0E70  0020               	movlb	0	; select bank0
 11522  0E71  00A9               	movwf	DATAEE_WriteByte@bAdd
 11523  0E72  30F0               	movlw	240
 11524  0E73  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11525  0E74  082F               	movf	save_recovery_params@aux,w
 11526  0E75  00AE               	movwf	??_save_recovery_params
 11527  0E76  082E               	movf	??_save_recovery_params,w
 11528  0E77  00AB               	movwf	DATAEE_WriteByte@bData
 11529  0E78  318D  25C8  318E   	fcall	_DATAEE_WriteByte
 11530  0E7B                     l7283:	
 11531                           
 11532                           ;main.c: 730:     DATAEE_WriteByte(0xF0FF - 10 + 2, aux1);
 11533  0E7B  30F7               	movlw	247
 11534  0E7C  0020               	movlb	0	; select bank0
 11535  0E7D  00A9               	movwf	DATAEE_WriteByte@bAdd
 11536  0E7E  30F0               	movlw	240
 11537  0E7F  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11538  0E80  0830               	movf	save_recovery_params@aux1,w
 11539  0E81  00AE               	movwf	??_save_recovery_params
 11540  0E82  082E               	movf	??_save_recovery_params,w
 11541  0E83  00AB               	movwf	DATAEE_WriteByte@bData
 11542  0E84  318D  25C8  318E   	fcall	_DATAEE_WriteByte
 11543  0E87                     l7285:	
 11544                           
 11545                           ;main.c: 731:     cksum_w();
 11546  0E87  318B  23A9  318E   	fcall	_cksum_w
 11547  0E8A                     l1450:	
 11548  0E8A  0008               	return
 11549  0E8B                     __end_of_save_recovery_params:	
 11550                           
 11551                           	psect	text2
 11552  0EE4                     __ptext2:	
 11553 ;; *************** function _ring_buffer *****************
 11554 ;; Defined at:
 11555 ;;		line 736 in file "main.c"
 11556 ;; Parameters:    Size  Location     Type
 11557 ;;  _ring_byte      1    wreg     PTR unsigned char 
 11558 ;;		 -> ring_byte(5), 
 11559 ;;  clock_h         1    3[BANK0 ] unsigned char 
 11560 ;;  clock_m         1    4[BANK0 ] unsigned char 
 11561 ;;  clock_s         1    5[BANK0 ] unsigned char 
 11562 ;;  tem             1    6[BANK0 ] unsigned char 
 11563 ;;  lum             1    7[BANK0 ] unsigned char 
 11564 ;; Auto vars:     Size  Location     Type
 11565 ;;  _ring_byte      1    9[BANK0 ] PTR unsigned char 
 11566 ;;		 -> ring_byte(5), 
 11567 ;; Return value:  Size  Location     Type
 11568 ;;                  1    wreg      void 
 11569 ;; Registers used:
 11570 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11571 ;; Tracked objects:
 11572 ;;		On entry : 0/0
 11573 ;;		On exit  : 0/0
 11574 ;;		Unchanged: 0/0
 11575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11576 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11577 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11578 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11579 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11580 ;;Total ram usage:        7 bytes
 11581 ;; Hardware stack levels used:    1
 11582 ;; Hardware stack levels required when called:    6
 11583 ;; This function calls:
 11584 ;;		Nothing
 11585 ;; This function is called by:
 11586 ;;		_main
 11587 ;; This function uses a non-reentrant model
 11588 ;;
 11589                           
 11590                           
 11591                           ;psect for function _ring_buffer
 11592  0EE4                     _ring_buffer:	
 11593                           
 11594                           ;incstack = 0
 11595                           ; Regs used in _ring_buffer: [wreg+fsr1l+fsr1h+status,2+status,0]
 11596                           ;ring_buffer@_ring_byte stored from wreg
 11597  0EE4  0020               	movlb	0	; select bank0
 11598  0EE5  00A9               	movwf	ring_buffer@_ring_byte
 11599  0EE6                     l7185:	
 11600                           
 11601                           ;main.c: 738:     PIE4bits.TMR1IE = 0;
 11602  0EE6  002E               	movlb	14	; select bank14
 11603  0EE7  101A               	bcf	26,0	;volatile
 11604  0EE8                     l7187:	
 11605                           
 11606                           ;main.c: 739:     _ring_byte[0] = clock_h;
 11607  0EE8  0020               	movlb	0	; select bank0
 11608  0EE9  0823               	movf	ring_buffer@clock_h,w
 11609  0EEA  00A8               	movwf	??_ring_buffer
 11610  0EEB  0829               	movf	ring_buffer@_ring_byte,w
 11611  0EEC  0086               	movwf	6
 11612  0EED  0187               	clrf	7
 11613  0EEE  0828               	movf	??_ring_buffer,w
 11614  0EEF  0081               	movwf	1
 11615                           
 11616                           ;main.c: 740:     _ring_byte[1] = clock_m;
 11617  0EF0  0824               	movf	ring_buffer@clock_m,w
 11618  0EF1  00A8               	movwf	??_ring_buffer
 11619  0EF2  0A29               	incf	ring_buffer@_ring_byte,w
 11620  0EF3  0086               	movwf	6
 11621  0EF4  0187               	clrf	7
 11622  0EF5  0828               	movf	??_ring_buffer,w
 11623  0EF6  0081               	movwf	1
 11624  0EF7                     l7189:	
 11625                           
 11626                           ;main.c: 741:     _ring_byte[2] = clock_s;
 11627  0EF7  0825               	movf	ring_buffer@clock_s,w
 11628  0EF8  00A8               	movwf	??_ring_buffer
 11629  0EF9  0829               	movf	ring_buffer@_ring_byte,w
 11630  0EFA  3E02               	addlw	2
 11631  0EFB  0086               	movwf	6
 11632  0EFC  0187               	clrf	7
 11633  0EFD  0828               	movf	??_ring_buffer,w
 11634  0EFE  0081               	movwf	1
 11635  0EFF                     l7191:	
 11636                           
 11637                           ;main.c: 742:     PIE4bits.TMR1IE = 1;
 11638  0EFF  002E               	movlb	14	; select bank14
 11639  0F00  141A               	bsf	26,0	;volatile
 11640  0F01                     l7193:	
 11641                           
 11642                           ;main.c: 743:     _ring_byte[3] = tem;
 11643  0F01  0020               	movlb	0	; select bank0
 11644  0F02  0826               	movf	ring_buffer@tem,w
 11645  0F03  00A8               	movwf	??_ring_buffer
 11646  0F04  0829               	movf	ring_buffer@_ring_byte,w
 11647  0F05  3E03               	addlw	3
 11648  0F06  0086               	movwf	6
 11649  0F07  0187               	clrf	7
 11650  0F08  0828               	movf	??_ring_buffer,w
 11651  0F09  0081               	movwf	1
 11652  0F0A                     l7195:	
 11653                           
 11654                           ;main.c: 744:     _ring_byte[4] = lum;
 11655  0F0A  0827               	movf	ring_buffer@lum,w
 11656  0F0B  00A8               	movwf	??_ring_buffer
 11657  0F0C  0829               	movf	ring_buffer@_ring_byte,w
 11658  0F0D  3E04               	addlw	4
 11659  0F0E  0086               	movwf	6
 11660  0F0F  0187               	clrf	7
 11661  0F10  0828               	movf	??_ring_buffer,w
 11662  0F11  0081               	movwf	1
 11663  0F12                     l1453:	
 11664  0F12  0008               	return
 11665  0F13                     __end_of_ring_buffer:	
 11666                           
 11667                           	psect	text3
 11668  02DF                     __ptext3:	
 11669 ;; *************** function _recoverData *****************
 11670 ;; Defined at:
 11671 ;;		line 11 in file "eeprom_rw.c"
 11672 ;; Parameters:    Size  Location     Type
 11673 ;;		None
 11674 ;; Auto vars:     Size  Location     Type
 11675 ;;		None
 11676 ;; Return value:  Size  Location     Type
 11677 ;;                  1    wreg      void 
 11678 ;; Registers used:
 11679 ;;		wreg, status,2, status,0, pclath, cstack
 11680 ;; Tracked objects:
 11681 ;;		On entry : 0/0
 11682 ;;		On exit  : 0/0
 11683 ;;		Unchanged: 0/0
 11684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11687 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11688 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11689 ;;Total ram usage:        1 bytes
 11690 ;; Hardware stack levels used:    1
 11691 ;; Hardware stack levels required when called:    9
 11692 ;; This function calls:
 11693 ;;		_DATAEE_ReadByte
 11694 ;;		_DATAEE_WriteByte
 11695 ;;		_cksum
 11696 ;;		_cksum_w
 11697 ;;		_reset_recv
 11698 ;; This function is called by:
 11699 ;;		_main
 11700 ;; This function uses a non-reentrant model
 11701 ;;
 11702                           
 11703                           
 11704                           ;psect for function _recoverData
 11705  02DF                     _recoverData:	
 11706  02DF                     l7133:	
 11707                           ;incstack = 0
 11708                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 11709                           
 11710                           
 11711                           ;eeprom_rw.c: 13:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 11712  02DF  30F5               	movlw	245
 11713  02E0  0020               	movlb	0	; select bank0
 11714  02E1  00A3               	movwf	DATAEE_ReadByte@bAdd
 11715  02E2  30F0               	movlw	240
 11716  02E3  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11717  02E4  318B  238A  3182   	fcall	_DATAEE_ReadByte
 11718  02E7  3AAB               	xorlw	171
 11719  02E8  1D03               	skipz
 11720  02E9  2AEB               	goto	u4051
 11721  02EA  2AEC               	goto	u4050
 11722  02EB                     u4051:	
 11723  02EB  2B40               	goto	l7139
 11724  02EC                     u4050:	
 11725  02EC                     l7135:	
 11726                           
 11727                           ;eeprom_rw.c: 14:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 11728  02EC  318D  25A8  3182   	fcall	_cksum
 11729  02EF  0020               	movlb	0	; select bank0
 11730  02F0  00AF               	movwf	??_recoverData
 11731  02F1  30FF               	movlw	255
 11732  02F2  00A3               	movwf	DATAEE_ReadByte@bAdd
 11733  02F3  30F0               	movlw	240
 11734  02F4  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11735  02F5  318B  238A  3182   	fcall	_DATAEE_ReadByte
 11736  02F8  0020               	movlb	0	; select bank0
 11737  02F9  062F               	xorwf	??_recoverData,w
 11738  02FA  1D03               	skipz
 11739  02FB  2AFD               	goto	u4061
 11740  02FC  2AFE               	goto	u4060
 11741  02FD                     u4061:	
 11742  02FD  2B40               	goto	l7139
 11743  02FE                     u4060:	
 11744  02FE                     l7137:	
 11745                           
 11746                           ;eeprom_rw.c: 15:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 11747  02FE  30F6               	movlw	246
 11748  02FF  00A3               	movwf	DATAEE_ReadByte@bAdd
 11749  0300  30F0               	movlw	240
 11750  0301  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11751  0302  318B  238A  3182   	fcall	_DATAEE_ReadByte
 11752  0305  0020               	movlb	0	; select bank0
 11753  0306  00AF               	movwf	??_recoverData
 11754  0307  082F               	movf	??_recoverData,w
 11755  0308  00DE               	movwf	_clkh	;volatile
 11756                           
 11757                           ;eeprom_rw.c: 16:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 11758  0309  30F7               	movlw	247
 11759  030A  00A3               	movwf	DATAEE_ReadByte@bAdd
 11760  030B  30F0               	movlw	240
 11761  030C  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11762  030D  318B  238A  3182   	fcall	_DATAEE_ReadByte
 11763  0310  0020               	movlb	0	; select bank0
 11764  0311  00AF               	movwf	??_recoverData
 11765  0312  082F               	movf	??_recoverData,w
 11766  0313  00DD               	movwf	_clkm	;volatile
 11767                           
 11768                           ;eeprom_rw.c: 17:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 11769  0314  30F8               	movlw	248
 11770  0315  00A3               	movwf	DATAEE_ReadByte@bAdd
 11771  0316  30F0               	movlw	240
 11772  0317  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11773  0318  318B  238A  3182   	fcall	_DATAEE_ReadByte
 11774  031B  0020               	movlb	0	; select bank0
 11775  031C  00AF               	movwf	??_recoverData
 11776  031D  082F               	movf	??_recoverData,w
 11777  031E  00E9               	movwf	_nreg
 11778                           
 11779                           ;eeprom_rw.c: 18:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 11780  031F  30F9               	movlw	249
 11781  0320  00A3               	movwf	DATAEE_ReadByte@bAdd
 11782  0321  30F0               	movlw	240
 11783  0322  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11784  0323  318B  238A  3182   	fcall	_DATAEE_ReadByte
 11785  0326  0020               	movlb	0	; select bank0
 11786  0327  00AF               	movwf	??_recoverData
 11787  0328  082F               	movf	??_recoverData,w
 11788  0329  00DF               	movwf	_nreg_pt
 11789                           
 11790                           ;eeprom_rw.c: 19:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 5);
 11791  032A  30FA               	movlw	250
 11792  032B  00A3               	movwf	DATAEE_ReadByte@bAdd
 11793  032C  30F0               	movlw	240
 11794  032D  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11795  032E  318B  238A  3182   	fcall	_DATAEE_ReadByte
 11796  0331  0020               	movlb	0	; select bank0
 11797  0332  00AF               	movwf	??_recoverData
 11798  0333  082F               	movf	??_recoverData,w
 11799  0334  00E8               	movwf	_pmon
 11800                           
 11801                           ;eeprom_rw.c: 20:             tala = DATAEE_ReadByte(0xF0FF - 10 + 6);
 11802  0335  30FB               	movlw	251
 11803  0336  00A3               	movwf	DATAEE_ReadByte@bAdd
 11804  0337  30F0               	movlw	240
 11805  0338  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11806  0339  318B  238A  3182   	fcall	_DATAEE_ReadByte
 11807  033C  0020               	movlb	0	; select bank0
 11808  033D  00AF               	movwf	??_recoverData
 11809  033E  082F               	movf	??_recoverData,w
 11810  033F  00E7               	movwf	_tala
 11811  0340                     l7139:	
 11812                           
 11813                           ;eeprom_rw.c: 24:     reset_recv();
 11814  0340  3187  27E4  3182   	fcall	_reset_recv
 11815  0343                     l7141:	
 11816                           
 11817                           ;eeprom_rw.c: 27:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 11818  0343  30F5               	movlw	245
 11819  0344  0020               	movlb	0	; select bank0
 11820  0345  00A9               	movwf	DATAEE_WriteByte@bAdd
 11821  0346  30F0               	movlw	240
 11822  0347  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11823  0348  30AB               	movlw	171
 11824  0349  00AF               	movwf	??_recoverData
 11825  034A  082F               	movf	??_recoverData,w
 11826  034B  00AB               	movwf	DATAEE_WriteByte@bData
 11827  034C  318D  25C8  3182   	fcall	_DATAEE_WriteByte
 11828  034F                     l7143:	
 11829                           
 11830                           ;eeprom_rw.c: 28:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 11831  034F  30F8               	movlw	248
 11832  0350  0020               	movlb	0	; select bank0
 11833  0351  00A9               	movwf	DATAEE_WriteByte@bAdd
 11834  0352  30F0               	movlw	240
 11835  0353  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11836  0354  0869               	movf	_nreg,w
 11837  0355  00AF               	movwf	??_recoverData
 11838  0356  082F               	movf	??_recoverData,w
 11839  0357  00AB               	movwf	DATAEE_WriteByte@bData
 11840  0358  318D  25C8  3182   	fcall	_DATAEE_WriteByte
 11841  035B                     l7145:	
 11842                           
 11843                           ;eeprom_rw.c: 29:     DATAEE_WriteByte(0xF0FF - 10 + 5, pmon);
 11844  035B  30FA               	movlw	250
 11845  035C  0020               	movlb	0	; select bank0
 11846  035D  00A9               	movwf	DATAEE_WriteByte@bAdd
 11847  035E  30F0               	movlw	240
 11848  035F  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11849  0360  0868               	movf	_pmon,w
 11850  0361  00AF               	movwf	??_recoverData
 11851  0362  082F               	movf	??_recoverData,w
 11852  0363  00AB               	movwf	DATAEE_WriteByte@bData
 11853  0364  318D  25C8  3182   	fcall	_DATAEE_WriteByte
 11854  0367                     l7147:	
 11855                           
 11856                           ;eeprom_rw.c: 30:     DATAEE_WriteByte(0xF0FF - 10 + 6, tala);
 11857  0367  30FB               	movlw	251
 11858  0368  0020               	movlb	0	; select bank0
 11859  0369  00A9               	movwf	DATAEE_WriteByte@bAdd
 11860  036A  30F0               	movlw	240
 11861  036B  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11862  036C  0867               	movf	_tala,w
 11863  036D  00AF               	movwf	??_recoverData
 11864  036E  082F               	movf	??_recoverData,w
 11865  036F  00AB               	movwf	DATAEE_WriteByte@bData
 11866  0370  318D  25C8  3182   	fcall	_DATAEE_WriteByte
 11867  0373                     l7149:	
 11868                           
 11869                           ;eeprom_rw.c: 31:     cksum_w();
 11870  0373  318B  23A9  3182   	fcall	_cksum_w
 11871  0376                     l1629:	
 11872  0376  0008               	return
 11873  0377                     __end_of_recoverData:	
 11874                           
 11875                           	psect	text4
 11876  07E4                     __ptext4:	
 11877 ;; *************** function _reset_recv *****************
 11878 ;; Defined at:
 11879 ;;		line 75 in file "eeprom_rw.c"
 11880 ;; Parameters:    Size  Location     Type
 11881 ;;		None
 11882 ;; Auto vars:     Size  Location     Type
 11883 ;;  i               2   13[BANK0 ] unsigned int 
 11884 ;; Return value:  Size  Location     Type
 11885 ;;                  1    wreg      void 
 11886 ;; Registers used:
 11887 ;;		wreg, status,2, status,0, pclath, cstack
 11888 ;; Tracked objects:
 11889 ;;		On entry : 0/0
 11890 ;;		On exit  : 0/0
 11891 ;;		Unchanged: 0/0
 11892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11894 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11896 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11897 ;;Total ram usage:        2 bytes
 11898 ;; Hardware stack levels used:    1
 11899 ;; Hardware stack levels required when called:    7
 11900 ;; This function calls:
 11901 ;;		_DATAEE_WriteByte
 11902 ;; This function is called by:
 11903 ;;		_recoverData
 11904 ;; This function uses a non-reentrant model
 11905 ;;
 11906                           
 11907                           
 11908                           ;psect for function _reset_recv
 11909  07E4                     _reset_recv:	
 11910  07E4                     l7041:	
 11911                           ;incstack = 0
 11912                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 11913                           
 11914                           
 11915                           ;eeprom_rw.c: 77:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 11916  07E4  30F5               	movlw	245
 11917  07E5  0020               	movlb	0	; select bank0
 11918  07E6  00AD               	movwf	reset_recv@i
 11919  07E7  30F0               	movlw	240
 11920  07E8  00AE               	movwf	reset_recv@i+1
 11921  07E9                     l7045:	
 11922                           
 11923                           ;eeprom_rw.c: 78:         DATAEE_WriteByte(i, 0);
 11924  07E9  082E               	movf	reset_recv@i+1,w
 11925  07EA  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11926  07EB  082D               	movf	reset_recv@i,w
 11927  07EC  00A9               	movwf	DATAEE_WriteByte@bAdd
 11928  07ED  01AB               	clrf	DATAEE_WriteByte@bData
 11929  07EE  318D  25C8  3187   	fcall	_DATAEE_WriteByte
 11930  07F1                     l7047:	
 11931  07F1  3001               	movlw	1
 11932  07F2  0020               	movlb	0	; select bank0
 11933  07F3  07AD               	addwf	reset_recv@i,f
 11934  07F4  3000               	movlw	0
 11935  07F5  3DAE               	addwfc	reset_recv@i+1,f
 11936  07F6                     l7049:	
 11937  07F6  30F1               	movlw	241
 11938  07F7  022E               	subwf	reset_recv@i+1,w
 11939  07F8  3000               	movlw	0
 11940  07F9  1903               	skipnz
 11941  07FA  022D               	subwf	reset_recv@i,w
 11942  07FB  1C03               	skipc
 11943  07FC  2FFE               	goto	u4001
 11944  07FD  2FFF               	goto	u4000
 11945  07FE                     u4001:	
 11946  07FE  2FE9               	goto	l7045
 11947  07FF                     u4000:	
 11948  07FF                     l1656:	
 11949  07FF  0008               	return
 11950  0800                     __end_of_reset_recv:	
 11951                           
 11952                           	psect	text5
 11953  0BA9                     __ptext5:	
 11954 ;; *************** function _cksum_w *****************
 11955 ;; Defined at:
 11956 ;;		line 61 in file "eeprom_rw.c"
 11957 ;; Parameters:    Size  Location     Type
 11958 ;;		None
 11959 ;; Auto vars:     Size  Location     Type
 11960 ;;		None
 11961 ;; Return value:  Size  Location     Type
 11962 ;;                  1    wreg      void 
 11963 ;; Registers used:
 11964 ;;		wreg, status,2, status,0, pclath, cstack
 11965 ;; Tracked objects:
 11966 ;;		On entry : 0/0
 11967 ;;		On exit  : 0/0
 11968 ;;		Unchanged: 0/0
 11969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11972 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11973 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11974 ;;Total ram usage:        1 bytes
 11975 ;; Hardware stack levels used:    1
 11976 ;; Hardware stack levels required when called:    8
 11977 ;; This function calls:
 11978 ;;		_DATAEE_WriteByte
 11979 ;;		_cksum
 11980 ;; This function is called by:
 11981 ;;		_main
 11982 ;;		_save_recovery_params
 11983 ;;		_recoverData
 11984 ;; This function uses a non-reentrant model
 11985 ;;
 11986                           
 11987                           
 11988                           ;psect for function _cksum_w
 11989  0BA9                     _cksum_w:	
 11990  0BA9                     l7001:	
 11991                           ;incstack = 0
 11992                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 11993                           
 11994                           
 11995                           ;eeprom_rw.c: 63:     DATAEE_WriteByte(0xF0FF, cksum());
 11996  0BA9  30FF               	movlw	255
 11997  0BAA  0020               	movlb	0	; select bank0
 11998  0BAB  00A9               	movwf	DATAEE_WriteByte@bAdd
 11999  0BAC  30F0               	movlw	240
 12000  0BAD  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12001  0BAE  318D  25A8  318B   	fcall	_cksum
 12002  0BB1  0020               	movlb	0	; select bank0
 12003  0BB2  00AD               	movwf	??_cksum_w
 12004  0BB3  082D               	movf	??_cksum_w,w
 12005  0BB4  00AB               	movwf	DATAEE_WriteByte@bData
 12006  0BB5  318D  25C8  318B   	fcall	_DATAEE_WriteByte
 12007  0BB8                     l1646:	
 12008  0BB8  0008               	return
 12009  0BB9                     __end_of_cksum_w:	
 12010                           
 12011                           	psect	text6
 12012  0DA8                     __ptext6:	
 12013 ;; *************** function _cksum *****************
 12014 ;; Defined at:
 12015 ;;		line 66 in file "eeprom_rw.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;		None
 12018 ;; Auto vars:     Size  Location     Type
 12019 ;;  i               2    7[BANK0 ] unsigned int 
 12020 ;;  res             1    6[BANK0 ] unsigned char 
 12021 ;; Return value:  Size  Location     Type
 12022 ;;                  1    wreg      unsigned char 
 12023 ;; Registers used:
 12024 ;;		wreg, status,2, status,0, pclath, cstack
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12031 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12032 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12033 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12034 ;;Total ram usage:        4 bytes
 12035 ;; Hardware stack levels used:    1
 12036 ;; Hardware stack levels required when called:    7
 12037 ;; This function calls:
 12038 ;;		_DATAEE_ReadByte
 12039 ;; This function is called by:
 12040 ;;		_recoverData
 12041 ;;		_cksum_w
 12042 ;; This function uses a non-reentrant model
 12043 ;;
 12044                           
 12045                           
 12046                           ;psect for function _cksum
 12047  0DA8                     _cksum:	
 12048  0DA8                     l6845:	
 12049                           ;incstack = 0
 12050                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 12051                           
 12052                           
 12053                           ;eeprom_rw.c: 68:     unsigned char res = 0;
 12054  0DA8  0020               	movlb	0	; select bank0
 12055  0DA9  01A6               	clrf	cksum@res
 12056  0DAA                     l6847:	
 12057                           
 12058                           ;eeprom_rw.c: 69:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 12059  0DAA  30F5               	movlw	245
 12060  0DAB  00A7               	movwf	cksum@i
 12061  0DAC  30F0               	movlw	240
 12062  0DAD  00A8               	movwf	cksum@i+1
 12063  0DAE                     l6853:	
 12064                           
 12065                           ;eeprom_rw.c: 70:         res += DATAEE_ReadByte(i);
 12066  0DAE  0828               	movf	cksum@i+1,w
 12067  0DAF  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12068  0DB0  0827               	movf	cksum@i,w
 12069  0DB1  00A3               	movwf	DATAEE_ReadByte@bAdd
 12070  0DB2  318B  238A  318D   	fcall	_DATAEE_ReadByte
 12071  0DB5  0020               	movlb	0	; select bank0
 12072  0DB6  00A5               	movwf	??_cksum
 12073  0DB7  0825               	movf	??_cksum,w
 12074  0DB8  07A6               	addwf	cksum@res,f
 12075  0DB9                     l6855:	
 12076                           
 12077                           ;eeprom_rw.c: 71:     }
 12078  0DB9  3001               	movlw	1
 12079  0DBA  07A7               	addwf	cksum@i,f
 12080  0DBB  3000               	movlw	0
 12081  0DBC  3DA8               	addwfc	cksum@i+1,f
 12082  0DBD                     l6857:	
 12083  0DBD  30F0               	movlw	240
 12084  0DBE  0228               	subwf	cksum@i+1,w
 12085  0DBF  30FF               	movlw	255
 12086  0DC0  1903               	skipnz
 12087  0DC1  0227               	subwf	cksum@i,w
 12088  0DC2  1C03               	skipc
 12089  0DC3  2DC5               	goto	u3941
 12090  0DC4  2DC6               	goto	u3940
 12091  0DC5                     u3941:	
 12092  0DC5  2DAE               	goto	l6853
 12093  0DC6                     u3940:	
 12094  0DC6                     l6859:	
 12095                           
 12096                           ;eeprom_rw.c: 72:     return res;
 12097  0DC6  0826               	movf	cksum@res,w
 12098  0DC7                     l1651:	
 12099  0DC7  0008               	return
 12100  0DC8                     __end_of_cksum:	
 12101                           
 12102                           	psect	text7
 12103  0F7A                     __ptext7:	
 12104 ;; *************** function _read_ring *****************
 12105 ;; Defined at:
 12106 ;;		line 43 in file "eeprom_rw.c"
 12107 ;; Parameters:    Size  Location     Type
 12108 ;;  nreg_pt         1    wreg     unsigned char 
 12109 ;;  nreg            1    7[BANK0 ] unsigned char 
 12110 ;;  nreg_init       1    8[BANK0 ] unsigned char 
 12111 ;;  index           1    9[BANK0 ] unsigned char 
 12112 ;;  subindex        1   10[BANK0 ] unsigned char 
 12113 ;; Auto vars:     Size  Location     Type
 12114 ;;  nreg_pt         1   14[BANK0 ] unsigned char 
 12115 ;;  absindex        1   15[BANK0 ] unsigned char 
 12116 ;;  i               1   13[BANK0 ] unsigned char 
 12117 ;; Return value:  Size  Location     Type
 12118 ;;                  1    wreg      unsigned char 
 12119 ;; Registers used:
 12120 ;;		wreg, status,2, status,0, pclath, cstack
 12121 ;; Tracked objects:
 12122 ;;		On entry : 0/0
 12123 ;;		On exit  : 0/0
 12124 ;;		Unchanged: 0/0
 12125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12126 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12127 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12128 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12129 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12130 ;;Total ram usage:        9 bytes
 12131 ;; Hardware stack levels used:    1
 12132 ;; Hardware stack levels required when called:    7
 12133 ;; This function calls:
 12134 ;;		_DATAEE_ReadByte
 12135 ;;		___bmul
 12136 ;; This function is called by:
 12137 ;;		_main
 12138 ;; This function uses a non-reentrant model
 12139 ;;
 12140                           
 12141                           
 12142                           ;psect for function _read_ring
 12143  0F7A                     _read_ring:	
 12144                           
 12145                           ;incstack = 0
 12146                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
 12147                           ;read_ring@nreg_pt stored from wreg
 12148  0F7A  0020               	movlb	0	; select bank0
 12149  0F7B  00AE               	movwf	read_ring@nreg_pt
 12150  0F7C                     l7163:	
 12151  0F7C                     l7165:	
 12152                           
 12153                           ;eeprom_rw.c: 48:     if(index <= nreg && nreg_init) {
 12154  0F7C  0829               	movf	read_ring@index,w
 12155  0F7D  0227               	subwf	read_ring@nreg,w
 12156  0F7E  1C03               	skipc
 12157  0F7F  2F81               	goto	u4081
 12158  0F80  2F82               	goto	u4080
 12159  0F81                     u4081:	
 12160  0F81  2FAC               	goto	l7177
 12161  0F82                     u4080:	
 12162  0F82                     l7167:	
 12163  0F82  0828               	movf	read_ring@nreg_init,w
 12164  0F83  1903               	btfsc	3,2
 12165  0F84  2F86               	goto	u4091
 12166  0F85  2F87               	goto	u4090
 12167  0F86                     u4091:	
 12168  0F86  2FAC               	goto	l7177
 12169  0F87                     u4090:	
 12170  0F87                     l7169:	
 12171                           
 12172                           ;eeprom_rw.c: 49:         absindex = 5 * index + subindex;
 12173  0F87  3005               	movlw	5
 12174  0F88  00AB               	movwf	??_read_ring
 12175  0F89  082B               	movf	??_read_ring,w
 12176  0F8A  00A3               	movwf	___bmul@multiplicand
 12177  0F8B  0829               	movf	read_ring@index,w
 12178  0F8C  318C  244F  318F   	fcall	___bmul
 12179  0F8F  0020               	movlb	0	; select bank0
 12180  0F90  072A               	addwf	read_ring@subindex,w
 12181  0F91  00AC               	movwf	??_read_ring+1
 12182  0F92  082C               	movf	??_read_ring+1,w
 12183  0F93  00AF               	movwf	read_ring@absindex
 12184  0F94                     l7171:	
 12185                           
 12186                           ;eeprom_rw.c: 50:         if(absindex <= nreg_pt)
 12187  0F94  082F               	movf	read_ring@absindex,w
 12188  0F95  022E               	subwf	read_ring@nreg_pt,w
 12189  0F96  1C03               	skipc
 12190  0F97  2F99               	goto	u4101
 12191  0F98  2F9A               	goto	u4100
 12192  0F99                     u4101:	
 12193  0F99  2FA1               	goto	l7175
 12194  0F9A                     u4100:	
 12195  0F9A                     l7173:	
 12196                           
 12197                           ;eeprom_rw.c: 51:             i = nreg_pt - 5 + absindex;
 12198  0F9A  082E               	movf	read_ring@nreg_pt,w
 12199  0F9B  072F               	addwf	read_ring@absindex,w
 12200  0F9C  3EFB               	addlw	251
 12201  0F9D  00AB               	movwf	??_read_ring
 12202  0F9E  082B               	movf	??_read_ring,w
 12203  0F9F  00AD               	movwf	read_ring@i
 12204  0FA0  2FAE               	goto	l7181
 12205  0FA1                     l7175:	
 12206                           
 12207                           ;eeprom_rw.c: 53:             i = nreg - (nreg_pt - 5 + absindex);
 12208  0FA1  032E               	decf	read_ring@nreg_pt,w
 12209  0FA2  3AFF               	xorlw	255
 12210  0FA3  00AB               	movwf	??_read_ring
 12211  0FA4  082F               	movf	read_ring@absindex,w
 12212  0FA5  022B               	subwf	??_read_ring,w
 12213  0FA6  0727               	addwf	read_ring@nreg,w
 12214  0FA7  3E05               	addlw	5
 12215  0FA8  00AC               	movwf	??_read_ring+1
 12216  0FA9  082C               	movf	??_read_ring+1,w
 12217  0FAA  00AD               	movwf	read_ring@i
 12218  0FAB  2FAE               	goto	l7181
 12219  0FAC                     l7177:	
 12220                           
 12221                           ;eeprom_rw.c: 56:         return 0;
 12222  0FAC  3000               	movlw	0
 12223  0FAD  2FB8               	goto	l1643
 12224  0FAE                     l7181:	
 12225                           
 12226                           ;eeprom_rw.c: 58:     return DATAEE_ReadByte(0xF000 + i);
 12227  0FAE  082D               	movf	read_ring@i,w
 12228  0FAF  3E00               	addlw	0
 12229  0FB0  00A3               	movwf	DATAEE_ReadByte@bAdd
 12230  0FB1  30F0               	movlw	240
 12231  0FB2  1803               	skipnc
 12232  0FB3  30F1               	movlw	241
 12233  0FB4  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12234  0FB5  318B  238A  318F   	fcall	_DATAEE_ReadByte
 12235  0FB8                     l1643:	
 12236  0FB8  0008               	return
 12237  0FB9                     __end_of_read_ring:	
 12238                           
 12239                           	psect	text8
 12240  0C4F                     __ptext8:	
 12241 ;; *************** function ___bmul *****************
 12242 ;; Defined at:
 12243 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8.c"
 12244 ;; Parameters:    Size  Location     Type
 12245 ;;  multiplier      1    wreg     unsigned char 
 12246 ;;  multiplicand    1    3[BANK0 ] unsigned char 
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;  multiplier      1    6[BANK0 ] unsigned char 
 12249 ;;  product         1    5[BANK0 ] unsigned char 
 12250 ;; Return value:  Size  Location     Type
 12251 ;;                  1    wreg      unsigned char 
 12252 ;; Registers used:
 12253 ;;		wreg, status,2, status,0
 12254 ;; Tracked objects:
 12255 ;;		On entry : 0/0
 12256 ;;		On exit  : 0/0
 12257 ;;		Unchanged: 0/0
 12258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12259 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12260 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12261 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12263 ;;Total ram usage:        4 bytes
 12264 ;; Hardware stack levels used:    1
 12265 ;; Hardware stack levels required when called:    6
 12266 ;; This function calls:
 12267 ;;		Nothing
 12268 ;; This function is called by:
 12269 ;;		_read_ring
 12270 ;; This function uses a non-reentrant model
 12271 ;;
 12272                           
 12273                           
 12274                           ;psect for function ___bmul
 12275  0C4F                     ___bmul:	
 12276                           
 12277                           ;incstack = 0
 12278                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12279                           ;___bmul@multiplier stored from wreg
 12280  0C4F  0020               	movlb	0	; select bank0
 12281  0C50  00A6               	movwf	___bmul@multiplier
 12282  0C51                     l7051:	
 12283  0C51  01A5               	clrf	___bmul@product
 12284  0C52                     l7053:	
 12285  0C52  1C26               	btfss	___bmul@multiplier,0
 12286  0C53  2C55               	goto	u4011
 12287  0C54  2C56               	goto	u4010
 12288  0C55                     u4011:	
 12289  0C55  2C5A               	goto	l7057
 12290  0C56                     u4010:	
 12291  0C56                     l7055:	
 12292  0C56  0823               	movf	___bmul@multiplicand,w
 12293  0C57  00A4               	movwf	??___bmul
 12294  0C58  0824               	movf	??___bmul,w
 12295  0C59  07A5               	addwf	___bmul@product,f
 12296  0C5A                     l7057:	
 12297  0C5A  1003               	clrc
 12298  0C5B  0DA3               	rlf	___bmul@multiplicand,f
 12299  0C5C                     l7059:	
 12300  0C5C  1003               	clrc
 12301  0C5D  0CA6               	rrf	___bmul@multiplier,f
 12302  0C5E  0826               	movf	___bmul@multiplier,w
 12303  0C5F  1D03               	btfss	3,2
 12304  0C60  2C62               	goto	u4021
 12305  0C61  2C63               	goto	u4020
 12306  0C62                     u4021:	
 12307  0C62  2C52               	goto	l7053
 12308  0C63                     u4020:	
 12309  0C63                     l7061:	
 12310  0C63  0825               	movf	___bmul@product,w
 12311  0C64                     l1907:	
 12312  0C64  0008               	return
 12313  0C65                     __end_of___bmul:	
 12314                           
 12315                           	psect	text9
 12316  0B8A                     __ptext9:	
 12317 ;; *************** function _DATAEE_ReadByte *****************
 12318 ;; Defined at:
 12319 ;;		line 202 in file "mcc_generated_files/memory.c"
 12320 ;; Parameters:    Size  Location     Type
 12321 ;;  bAdd            2    3[BANK0 ] unsigned short 
 12322 ;; Auto vars:     Size  Location     Type
 12323 ;;		None
 12324 ;; Return value:  Size  Location     Type
 12325 ;;                  1    wreg      unsigned char 
 12326 ;; Registers used:
 12327 ;;		wreg, status,2
 12328 ;; Tracked objects:
 12329 ;;		On entry : 0/0
 12330 ;;		On exit  : 0/0
 12331 ;;		Unchanged: 0/0
 12332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12333 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12336 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12337 ;;Total ram usage:        2 bytes
 12338 ;; Hardware stack levels used:    1
 12339 ;; Hardware stack levels required when called:    6
 12340 ;; This function calls:
 12341 ;;		Nothing
 12342 ;; This function is called by:
 12343 ;;		_recoverData
 12344 ;;		_read_ring
 12345 ;;		_cksum
 12346 ;; This function uses a non-reentrant model
 12347 ;;
 12348                           
 12349                           
 12350                           ;psect for function _DATAEE_ReadByte
 12351  0B8A                     _DATAEE_ReadByte:	
 12352  0B8A                     l6601:	
 12353                           ;incstack = 0
 12354                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 12355                           
 12356                           
 12357                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 12358  0B8A  0020               	movlb	0	; select bank0
 12359  0B8B  0824               	movf	DATAEE_ReadByte@bAdd+1,w
 12360  0B8C  0030               	movlb	16	; select bank16
 12361  0B8D  009B               	movwf	27	;volatile
 12362  0B8E                     l6603:	
 12363                           
 12364                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 12365  0B8E  0020               	movlb	0	; select bank0
 12366  0B8F  0823               	movf	DATAEE_ReadByte@bAdd,w
 12367  0B90  0030               	movlb	16	; select bank16
 12368  0B91  009A               	movwf	26	;volatile
 12369  0B92                     l6605:	
 12370                           
 12371                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 12372  0B92  171E               	bsf	30,6	;volsfr
 12373  0B93                     l6607:	
 12374                           
 12375                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 12376  0B93  141E               	bsf	30,0	;volsfr
 12377  0B94                     l6609:	
 12378                           
 12379                           ;mcc_generated_files/memory.c: 208:     __nop();
 12380  0B94  0000               	nop
 12381  0B95                     l6611:	
 12382                           
 12383                           ;mcc_generated_files/memory.c: 209:     __nop();
 12384  0B95  0000               	nop
 12385  0B96                     l6613:	
 12386                           
 12387                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 12388  0B96  0030               	movlb	16	; select bank16
 12389  0B97  081C               	movf	28,w	;volatile
 12390  0B98                     l1011:	
 12391  0B98  0008               	return
 12392  0B99                     __end_of_DATAEE_ReadByte:	
 12393                           
 12394                           	psect	text10
 12395  0FB9                     __ptext10:	
 12396 ;; *************** function _push_ring *****************
 12397 ;; Defined at:
 12398 ;;		line 34 in file "eeprom_rw.c"
 12399 ;; Parameters:    Size  Location     Type
 12400 ;;  nreg_pt         1    wreg     PTR unsigned char 
 12401 ;;		 -> nreg_pt(1), 
 12402 ;;  nreg            1   13[BANK0 ] unsigned char 
 12403 ;;  nreg_init       1   14[BANK0 ] PTR unsigned char 
 12404 ;;		 -> nreg_init(1), 
 12405 ;;  ring_byte       1   15[BANK0 ] PTR unsigned char 
 12406 ;;		 -> ring_byte(5), 
 12407 ;; Auto vars:     Size  Location     Type
 12408 ;;  nreg_pt         1   19[BANK0 ] PTR unsigned char 
 12409 ;;		 -> nreg_pt(1), 
 12410 ;;  i               1   18[BANK0 ] unsigned char 
 12411 ;; Return value:  Size  Location     Type
 12412 ;;                  1    wreg      void 
 12413 ;; Registers used:
 12414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12415 ;; Tracked objects:
 12416 ;;		On entry : 0/0
 12417 ;;		On exit  : 0/0
 12418 ;;		Unchanged: 0/0
 12419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12420 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12421 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12422 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12423 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12424 ;;Total ram usage:        7 bytes
 12425 ;; Hardware stack levels used:    1
 12426 ;; Hardware stack levels required when called:    7
 12427 ;; This function calls:
 12428 ;;		_DATAEE_WriteByte
 12429 ;; This function is called by:
 12430 ;;		_main
 12431 ;; This function uses a non-reentrant model
 12432 ;;
 12433                           
 12434                           
 12435                           ;psect for function _push_ring
 12436  0FB9                     _push_ring:	
 12437                           
 12438                           ;incstack = 0
 12439                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12440                           ;push_ring@nreg_pt stored from wreg
 12441  0FB9  0020               	movlb	0	; select bank0
 12442  0FBA  00B3               	movwf	push_ring@nreg_pt
 12443  0FBB                     l7197:	
 12444                           
 12445                           ;eeprom_rw.c: 34: void push_ring(unsigned char* nreg_pt, unsigned char nreg, unsigned ch
      +                          ar* nreg_init, unsigned char* ring_byte);eeprom_rw.c: 35: { if(!(*nreg_init)) (*nreg_ini
      +                          t) = 1;
 12446  0FBB  082E               	movf	push_ring@nreg_init,w
 12447  0FBC  0086               	movwf	6
 12448  0FBD  0187               	clrf	7
 12449  0FBE  0801               	movf	1,w
 12450  0FBF  1D03               	btfss	3,2
 12451  0FC0  2FC2               	goto	u4111
 12452  0FC1  2FC3               	goto	u4110
 12453  0FC2                     u4111:	
 12454  0FC2  2FC8               	goto	l7201
 12455  0FC3                     u4110:	
 12456  0FC3                     l7199:	
 12457  0FC3  082E               	movf	push_ring@nreg_init,w
 12458  0FC4  0086               	movwf	6
 12459  0FC5  0187               	clrf	7
 12460  0FC6  0181               	clrf	1
 12461  0FC7  0A81               	incf	1,f
 12462  0FC8                     l7201:	
 12463                           
 12464                           ;eeprom_rw.c: 36:     for(unsigned char i = 0; i < 5; i++) {
 12465  0FC8  01B2               	clrf	push_ring@i
 12466  0FC9                     l7207:	
 12467                           
 12468                           ;eeprom_rw.c: 37:         if((*nreg_pt) >= nreg) (*nreg_pt) = 0;
 12469  0FC9  0833               	movf	push_ring@nreg_pt,w
 12470  0FCA  0086               	movwf	6
 12471  0FCB  0187               	clrf	7
 12472  0FCC  082D               	movf	push_ring@nreg,w
 12473  0FCD  0201               	subwf	1,w
 12474  0FCE  1C03               	skipc
 12475  0FCF  2FD1               	goto	u4121
 12476  0FD0  2FD2               	goto	u4120
 12477  0FD1                     u4121:	
 12478  0FD1  2FD6               	goto	l7211
 12479  0FD2                     u4120:	
 12480  0FD2                     l7209:	
 12481  0FD2  0833               	movf	push_ring@nreg_pt,w
 12482  0FD3  0086               	movwf	6
 12483  0FD4  0187               	clrf	7
 12484  0FD5  0181               	clrf	1
 12485  0FD6                     l7211:	
 12486                           
 12487                           ;eeprom_rw.c: 38:         DATAEE_WriteByte(0xF000 + (*nreg_pt), ring_byte[i]);
 12488  0FD6  0833               	movf	push_ring@nreg_pt,w
 12489  0FD7  0086               	movwf	6
 12490  0FD8  0187               	clrf	7
 12491  0FD9  0801               	movf	1,w
 12492  0FDA  3E00               	addlw	0
 12493  0FDB  00A9               	movwf	DATAEE_WriteByte@bAdd
 12494  0FDC  30F0               	movlw	240
 12495  0FDD  1803               	skipnc
 12496  0FDE  30F1               	movlw	241
 12497  0FDF  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12498  0FE0  0832               	movf	push_ring@i,w
 12499  0FE1  072F               	addwf	push_ring@ring_byte,w
 12500  0FE2  00B0               	movwf	??_push_ring
 12501  0FE3  0830               	movf	??_push_ring,w
 12502  0FE4  0086               	movwf	6
 12503  0FE5  0187               	clrf	7
 12504  0FE6  0801               	movf	1,w
 12505  0FE7  00B1               	movwf	??_push_ring+1
 12506  0FE8  0831               	movf	??_push_ring+1,w
 12507  0FE9  00AB               	movwf	DATAEE_WriteByte@bData
 12508  0FEA  318D  25C8  318F   	fcall	_DATAEE_WriteByte
 12509  0FED                     l7213:	
 12510                           
 12511                           ;eeprom_rw.c: 39:         (*nreg_pt)++;
 12512  0FED  3001               	movlw	1
 12513  0FEE  0020               	movlb	0	; select bank0
 12514  0FEF  00B0               	movwf	??_push_ring
 12515  0FF0  0833               	movf	push_ring@nreg_pt,w
 12516  0FF1  0086               	movwf	6
 12517  0FF2  0187               	clrf	7
 12518  0FF3  0830               	movf	??_push_ring,w
 12519  0FF4  0781               	addwf	1,f
 12520  0FF5                     l7215:	
 12521                           
 12522                           ;eeprom_rw.c: 40:     }
 12523  0FF5  3001               	movlw	1
 12524  0FF6  00B0               	movwf	??_push_ring
 12525  0FF7  0830               	movf	??_push_ring,w
 12526  0FF8  07B2               	addwf	push_ring@i,f
 12527  0FF9                     l7217:	
 12528  0FF9  3005               	movlw	5
 12529  0FFA  0232               	subwf	push_ring@i,w
 12530  0FFB  1C03               	skipc
 12531  0FFC  2FFE               	goto	u4131
 12532  0FFD  2FFF               	goto	u4130
 12533  0FFE                     u4131:	
 12534  0FFE  2FC9               	goto	l7207
 12535  0FFF                     u4130:	
 12536  0FFF                     l1636:	
 12537  0FFF  0008               	return
 12538  1000                     __end_of_push_ring:	
 12539                           
 12540                           	psect	text11
 12541  0DC8                     __ptext11:	
 12542 ;; *************** function _DATAEE_WriteByte *****************
 12543 ;; Defined at:
 12544 ;;		line 180 in file "mcc_generated_files/memory.c"
 12545 ;; Parameters:    Size  Location     Type
 12546 ;;  bAdd            2    9[BANK0 ] unsigned short 
 12547 ;;  bData           1   11[BANK0 ] unsigned char 
 12548 ;; Auto vars:     Size  Location     Type
 12549 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 12550 ;; Return value:  Size  Location     Type
 12551 ;;                  1    wreg      void 
 12552 ;; Registers used:
 12553 ;;		wreg, status,2, status,0
 12554 ;; Tracked objects:
 12555 ;;		On entry : 0/0
 12556 ;;		On exit  : 0/0
 12557 ;;		Unchanged: 0/0
 12558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12559 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12560 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12562 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12563 ;;Total ram usage:        4 bytes
 12564 ;; Hardware stack levels used:    1
 12565 ;; Hardware stack levels required when called:    6
 12566 ;; This function calls:
 12567 ;;		Nothing
 12568 ;; This function is called by:
 12569 ;;		_main
 12570 ;;		_save_recovery_params
 12571 ;;		_recoverData
 12572 ;;		_push_ring
 12573 ;;		_cksum_w
 12574 ;;		_reset_recv
 12575 ;; This function uses a non-reentrant model
 12576 ;;
 12577                           
 12578                           
 12579                           ;psect for function _DATAEE_WriteByte
 12580  0DC8                     _DATAEE_WriteByte:	
 12581  0DC8                     l6735:	
 12582                           ;incstack = 0
 12583                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 12584                           
 12585                           
 12586                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 12587  0DC8  3000               	movlw	0
 12588  0DC9  1B8B               	btfsc	11,7	;volatile
 12589  0DCA  3001               	movlw	1
 12590  0DCB  0020               	movlb	0	; select bank0
 12591  0DCC  00AC               	movwf	DATAEE_WriteByte@GIEBitValue
 12592                           
 12593                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 12594  0DCD  082A               	movf	DATAEE_WriteByte@bAdd+1,w
 12595  0DCE  0030               	movlb	16	; select bank16
 12596  0DCF  009B               	movwf	27	;volatile
 12597  0DD0                     l6737:	
 12598                           
 12599                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 12600  0DD0  0020               	movlb	0	; select bank0
 12601  0DD1  0829               	movf	DATAEE_WriteByte@bAdd,w
 12602  0DD2  0030               	movlb	16	; select bank16
 12603  0DD3  009A               	movwf	26	;volatile
 12604  0DD4                     l6739:	
 12605                           
 12606                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 12607  0DD4  0020               	movlb	0	; select bank0
 12608  0DD5  082B               	movf	DATAEE_WriteByte@bData,w
 12609  0DD6  0030               	movlb	16	; select bank16
 12610  0DD7  009C               	movwf	28	;volatile
 12611  0DD8                     l6741:	
 12612                           
 12613                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 12614  0DD8  171E               	bsf	30,6	;volsfr
 12615  0DD9                     l6743:	
 12616                           
 12617                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 12618  0DD9  151E               	bsf	30,2	;volsfr
 12619  0DDA                     l6745:	
 12620                           
 12621                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 12622  0DDA  138B               	bcf	11,7	;volatile
 12623  0DDB                     l6747:	
 12624                           
 12625                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 12626  0DDB  3055               	movlw	85
 12627  0DDC  009F               	movwf	31	;volsfr
 12628  0DDD                     l6749:	
 12629                           
 12630                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 12631  0DDD  30AA               	movlw	170
 12632  0DDE  009F               	movwf	31	;volsfr
 12633  0DDF                     l6751:	
 12634                           
 12635                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 12636  0DDF  149E               	bsf	30,1	;volsfr
 12637  0DE0                     l1005:	
 12638                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 12639                           
 12640                           
 12641                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 12642  0DE0  189E               	btfsc	30,1	;volsfr
 12643  0DE1  2DE3               	goto	u3931
 12644  0DE2  2DE4               	goto	u3930
 12645  0DE3                     u3931:	
 12646  0DE3  2DE0               	goto	l1005
 12647  0DE4                     u3930:	
 12648  0DE4                     l1007:	
 12649                           
 12650                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 12651  0DE4  111E               	bcf	30,2	;volsfr
 12652  0DE5                     l6753:	
 12653                           
 12654                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 12655  0DE5  0020               	movlb	0	; select bank0
 12656  0DE6  0C2C               	rrf	DATAEE_WriteByte@GIEBitValue,w
 12657  0DE7  1C03               	skipc
 12658  0DE8  138B               	bcf	11,7	;volatile
 12659  0DE9  1803               	skipnc
 12660  0DEA  178B               	bsf	11,7	;volatile
 12661  0DEB                     l1008:	
 12662  0DEB  0008               	return
 12663  0DEC                     __end_of_DATAEE_WriteByte:	
 12664                           
 12665                           	psect	text12
 12666  0B2B                     __ptext12:	
 12667 ;; *************** function _i2c1_driver_open *****************
 12668 ;; Defined at:
 12669 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
 12670 ;; Parameters:    Size  Location     Type
 12671 ;;		None
 12672 ;; Auto vars:     Size  Location     Type
 12673 ;;		None
 12674 ;; Return value:  Size  Location     Type
 12675 ;;		None               void
 12676 ;; Registers used:
 12677 ;;		wreg, status,2
 12678 ;; Tracked objects:
 12679 ;;		On entry : 0/0
 12680 ;;		On exit  : 0/0
 12681 ;;		Unchanged: 0/0
 12682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12687 ;;Total ram usage:        0 bytes
 12688 ;; Hardware stack levels used:    1
 12689 ;; Hardware stack levels required when called:    6
 12690 ;; This function calls:
 12691 ;;		Nothing
 12692 ;; This function is called by:
 12693 ;;		_main
 12694 ;;		_i2c_open
 12695 ;;		_I2C_Initialize
 12696 ;; This function uses a non-reentrant model
 12697 ;;
 12698                           
 12699                           
 12700                           ;psect for function _i2c1_driver_open
 12701  0B2B                     _i2c1_driver_open:	
 12702  0B2B                     l7101:	
 12703                           ;incstack = 0
 12704                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 12705                           
 12706  0B2B  0023               	movlb	3	; select bank3
 12707  0B2C  1A90               	btfsc	16,5	;volatile
 12708  0B2D  2B2F               	goto	u4041
 12709  0B2E  2B30               	goto	u4040
 12710  0B2F                     u4041:	
 12711  0B2F  2B36               	goto	l506
 12712  0B30                     u4040:	
 12713  0B30                     l7103:	
 12714  0B30  018F               	clrf	15	;volatile
 12715  0B31                     l7105:	
 12716  0B31  3028               	movlw	40
 12717  0B32  0090               	movwf	16	;volatile
 12718  0B33                     l7107:	
 12719  0B33  0191               	clrf	17	;volatile
 12720  0B34  3003               	movlw	3
 12721  0B35  008D               	movwf	13	;volatile
 12722  0B36                     l506:	
 12723  0B36  0008               	return
 12724  0B37                     __end_of_i2c1_driver_open:	
 12725                           
 12726                           	psect	text13
 12727  0377                     __ptext13:	
 12728 ;; *************** function _config_routine *****************
 12729 ;; Defined at:
 12730 ;;		line 303 in file "main.c"
 12731 ;; Parameters:    Size  Location     Type
 12732 ;;		None
 12733 ;; Auto vars:     Size  Location     Type
 12734 ;;  select_mode     2   36[BANK0 ] unsigned int 
 12735 ;; Return value:  Size  Location     Type
 12736 ;;                  1    wreg      void 
 12737 ;; Registers used:
 12738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12739 ;; Tracked objects:
 12740 ;;		On entry : 0/0
 12741 ;;		On exit  : 0/0
 12742 ;;		Unchanged: 0/0
 12743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12745 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12746 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12747 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12748 ;;Total ram usage:        3 bytes
 12749 ;; Hardware stack levels used:    1
 12750 ;; Hardware stack levels required when called:   11
 12751 ;; This function calls:
 12752 ;;		_all_LED
 12753 ;;		_checkDebounceSW1
 12754 ;;		_checkDebounceSW2
 12755 ;;		_mod1_LED
 12756 ;;		_mod2_LED
 12757 ;;		_mod3_LED
 12758 ;;		_mod4_LED
 12759 ;;		_mode_select_LED
 12760 ;;		_selectSubfield
 12761 ;; This function is called by:
 12762 ;;		_main
 12763 ;; This function uses a non-reentrant model
 12764 ;;
 12765                           
 12766                           
 12767                           ;psect for function _config_routine
 12768  0377                     _config_routine:	
 12769  0377                     l7219:	
 12770                           ;incstack = 0
 12771                           ; Regs used in _config_routine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12772                           
 12773                           
 12774                           ;main.c: 305:     unsigned int select_mode =0;
 12775  0377  0020               	movlb	0	; select bank0
 12776  0378  01C4               	clrf	config_routine@select_mode
 12777  0379  01C5               	clrf	config_routine@select_mode+1
 12778  037A                     l7221:	
 12779                           
 12780                           ;main.c: 306:     last_ms = clkms;
 12781  037A  087D               	movf	_clkms,w	;volatile
 12782  037B  00C3               	movwf	??_config_routine
 12783  037C  0843               	movf	??_config_routine,w
 12784  037D  00DB               	movwf	_last_ms
 12785  037E                     l7223:	
 12786                           
 12787                           ;main.c: 307:     last_ms2 = clkms;
 12788  037E  087D               	movf	_clkms,w	;volatile
 12789  037F  00C3               	movwf	??_config_routine
 12790  0380  0843               	movf	??_config_routine,w
 12791  0381  00DA               	movwf	_last_ms2
 12792  0382                     l7225:	
 12793                           
 12794                           ;main.c: 310:         if(mode_field_subfield[0] == -1 && select_mode == 0){
 12795  0382  0A61               	incf	_mode_field_subfield,w
 12796  0383  1D03               	skipz
 12797  0384  2B89               	goto	u4141
 12798  0385  0A62               	incf	_mode_field_subfield+1,w
 12799  0386  1D03               	btfss	3,2
 12800  0387  2B89               	goto	u4141
 12801  0388  2B8A               	goto	u4140
 12802  0389                     u4141:	
 12803  0389  2B93               	goto	l7231
 12804  038A                     u4140:	
 12805  038A                     l7227:	
 12806  038A  0844               	movf	config_routine@select_mode,w
 12807  038B  0445               	iorwf	config_routine@select_mode+1,w
 12808  038C  1D03               	btfss	3,2
 12809  038D  2B8F               	goto	u4151
 12810  038E  2B90               	goto	u4150
 12811  038F                     u4151:	
 12812  038F  2B93               	goto	l7231
 12813  0390                     u4150:	
 12814  0390                     l7229:	
 12815                           
 12816                           ;main.c: 311:             all_LED();
 12817  0390  3184  245E  3183   	fcall	_all_LED
 12818  0393                     l7231:	
 12819                           
 12820                           ;main.c: 314:         if(!PORTBbits.RB4){
 12821  0393  0020               	movlb	0	; select bank0
 12822  0394  1A0D               	btfsc	13,4	;volatile
 12823  0395  2B97               	goto	u4161
 12824  0396  2B98               	goto	u4160
 12825  0397                     u4161:	
 12826  0397  2BCE               	goto	l1320
 12827  0398                     u4160:	
 12828  0398                     l7233:	
 12829                           
 12830                           ;main.c: 315:             if(checkDebounceSW1()){
 12831  0398  3184  24B9  3183   	fcall	_checkDebounceSW1
 12832  039B  3A00               	xorlw	0
 12833  039C  1903               	skipnz
 12834  039D  2B9F               	goto	u4171
 12835  039E  2BA0               	goto	u4170
 12836  039F                     u4171:	
 12837  039F  2BCE               	goto	l1320
 12838  03A0                     u4170:	
 12839  03A0                     l7235:	
 12840                           
 12841                           ;main.c: 317:                 select_mode +=1;
 12842  03A0  3001               	movlw	1
 12843  03A1  0020               	movlb	0	; select bank0
 12844  03A2  07C4               	addwf	config_routine@select_mode,f
 12845  03A3  3000               	movlw	0
 12846  03A4  3DC5               	addwfc	config_routine@select_mode+1,f
 12847                           
 12848                           ;main.c: 319:                 switch(select_mode){
 12849  03A5  2BBB               	goto	l7249
 12850  03A6                     l7237:	
 12851  03A6  318A  22FE  3183   	fcall	_mod1_LED
 12852  03A9  2BCE               	goto	l1320
 12853  03AA                     l7239:	
 12854  03AA  318A  22F4  3183   	fcall	_mod2_LED
 12855  03AD  2BCE               	goto	l1320
 12856  03AE                     l7241:	
 12857  03AE  318B  2309  3183   	fcall	_mod3_LED
 12858  03B1  2BCE               	goto	l1320
 12859  03B2                     l7243:	
 12860  03B2  318B  2314  3183   	fcall	_mod4_LED
 12861  03B5  2BCE               	goto	l1320
 12862  03B6                     l7245:	
 12863  03B6  01C4               	clrf	config_routine@select_mode
 12864  03B7  01C5               	clrf	config_routine@select_mode+1
 12865  03B8  01D6               	clrf	_config_mode	;volatile
 12866  03B9  01D5               	clrf	_alarm	;volatile
 12867                           
 12868                           ;main.c: 325:                     break;
 12869  03BA  2BCE               	goto	l1320
 12870  03BB                     l7249:	
 12871                           
 12872                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12873                           ; Switch size 1, requested type "simple"
 12874                           ; Number of cases is 1, Range of values is 0 to 0
 12875                           ; switch strategies available:
 12876                           ; Name         Instructions Cycles
 12877                           ; simple_byte            4     3 (average)
 12878                           ; direct_byte            8     6 (fixed)
 12879                           ; jumptable            260     6 (fixed)
 12880                           ;	Chosen strategy is simple_byte
 12881  03BB  0845               	movf	config_routine@select_mode+1,w
 12882  03BC  3A00               	xorlw	0	; case 0
 12883  03BD  1903               	skipnz
 12884  03BE  2BC0               	goto	l7817
 12885  03BF  2BB6               	goto	l7245
 12886  03C0                     l7817:	
 12887                           
 12888                           ; Switch size 1, requested type "simple"
 12889                           ; Number of cases is 4, Range of values is 1 to 4
 12890                           ; switch strategies available:
 12891                           ; Name         Instructions Cycles
 12892                           ; simple_byte           13     7 (average)
 12893                           ; direct_byte           17     9 (fixed)
 12894                           ; jumptable            263     9 (fixed)
 12895                           ;	Chosen strategy is simple_byte
 12896  03C0  0844               	movf	config_routine@select_mode,w
 12897  03C1  3A01               	xorlw	1	; case 1
 12898  03C2  1903               	skipnz
 12899  03C3  2BA6               	goto	l7237
 12900  03C4  3A03               	xorlw	3	; case 2
 12901  03C5  1903               	skipnz
 12902  03C6  2BAA               	goto	l7239
 12903  03C7  3A01               	xorlw	1	; case 3
 12904  03C8  1903               	skipnz
 12905  03C9  2BAE               	goto	l7241
 12906  03CA  3A07               	xorlw	7	; case 4
 12907  03CB  1903               	skipnz
 12908  03CC  2BB2               	goto	l7243
 12909  03CD  2BB6               	goto	l7245
 12910  03CE                     l1320:	
 12911                           ;main.c: 329:         }
 12912                           
 12913                           
 12914                           ;main.c: 332:         if(!PORTCbits.RC5){
 12915  03CE  0020               	movlb	0	; select bank0
 12916  03CF  1A8E               	btfsc	14,5	;volatile
 12917  03D0  2BD2               	goto	u4181
 12918  03D1  2BD3               	goto	u4180
 12919  03D2                     u4181:	
 12920  03D2  2BEB               	goto	l7261
 12921  03D3                     u4180:	
 12922  03D3                     l7251:	
 12923                           
 12924                           ;main.c: 333:             if(checkDebounceSW2()){
 12925  03D3  3187  2704  3183   	fcall	_checkDebounceSW2
 12926  03D6  3A00               	xorlw	0
 12927  03D7  1903               	skipnz
 12928  03D8  2BDA               	goto	u4191
 12929  03D9  2BDB               	goto	u4190
 12930  03DA                     u4191:	
 12931  03DA  2BEB               	goto	l7261
 12932  03DB                     u4190:	
 12933  03DB                     l7253:	
 12934                           
 12935                           ;main.c: 334:                 mode_field_subfield[0] = select_mode;
 12936  03DB  0020               	movlb	0	; select bank0
 12937  03DC  0845               	movf	config_routine@select_mode+1,w
 12938  03DD  00E2               	movwf	_mode_field_subfield+1
 12939  03DE  0844               	movf	config_routine@select_mode,w
 12940  03DF  00E1               	movwf	_mode_field_subfield
 12941  03E0                     l7255:	
 12942                           
 12943                           ;main.c: 335:                 mode_select_LED();
 12944  03E0  318D  2568  3183   	fcall	_mode_select_LED
 12945  03E3                     l7257:	
 12946                           
 12947                           ;main.c: 336:                 selectSubfield();
 12948  03E3  3186  2669  3183   	fcall	_selectSubfield
 12949  03E6                     l7259:	
 12950                           
 12951                           ;main.c: 337:                 select_mode = mode_field_subfield[0];
 12952  03E6  0020               	movlb	0	; select bank0
 12953  03E7  0862               	movf	_mode_field_subfield+1,w
 12954  03E8  00C5               	movwf	config_routine@select_mode+1
 12955  03E9  0861               	movf	_mode_field_subfield,w
 12956  03EA  00C4               	movwf	config_routine@select_mode
 12957  03EB                     l7261:	
 12958                           
 12959                           ;main.c: 341:         _delay((unsigned long)((2)*(1000000/4000.0)));
 12960  03EB  30A6               	movlw	166
 12961  03EC                     u4617:	
 12962  03EC  0B89               	decfsz	9,f
 12963  03ED  2BEC               	goto	u4617
 12964  03EE  3200               	nop2
 12965  03EF                     l7263:	
 12966                           
 12967                           ;main.c: 343:     }while(config_mode == 1);
 12968  03EF  0020               	movlb	0	; select bank0
 12969  03F0  0356               	decf	_config_mode,w	;volatile
 12970  03F1  1903               	btfsc	3,2
 12971  03F2  2BF4               	goto	u4201
 12972  03F3  2BF5               	goto	u4200
 12973  03F4                     u4201:	
 12974  03F4  2B82               	goto	l7225
 12975  03F5                     u4200:	
 12976  03F5                     l7265:	
 12977                           
 12978                           ;main.c: 345:     mode_field_subfield[0] = -1;
 12979  03F5  30FF               	movlw	255
 12980  03F6  00E1               	movwf	_mode_field_subfield
 12981  03F7  30FF               	movlw	255
 12982  03F8  00E2               	movwf	_mode_field_subfield+1
 12983                           
 12984                           ;main.c: 346:     mode_field_subfield[1] = -1;
 12985  03F9  30FF               	movlw	255
 12986  03FA  00E3               	movwf	_mode_field_subfield+2
 12987  03FB  30FF               	movlw	255
 12988  03FC  00E4               	movwf	_mode_field_subfield+3
 12989  03FD                     l1332:	
 12990  03FD  0008               	return
 12991  03FE                     __end_of_config_routine:	
 12992                           
 12993                           	psect	text14
 12994  0669                     __ptext14:	
 12995 ;; *************** function _selectSubfield *****************
 12996 ;; Defined at:
 12997 ;;		line 355 in file "main.c"
 12998 ;; Parameters:    Size  Location     Type
 12999 ;;		None
 13000 ;; Auto vars:     Size  Location     Type
 13001 ;;  subfield        2   33[BANK0 ] unsigned int 
 13002 ;; Return value:  Size  Location     Type
 13003 ;;                  1    wreg      void 
 13004 ;; Registers used:
 13005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13006 ;; Tracked objects:
 13007 ;;		On entry : 0/0
 13008 ;;		On exit  : 0/0
 13009 ;;		Unchanged: 0/0
 13010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13012 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13013 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13014 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13015 ;;Total ram usage:        4 bytes
 13016 ;; Hardware stack levels used:    1
 13017 ;; Hardware stack levels required when called:   10
 13018 ;; This function calls:
 13019 ;;		_all_LED
 13020 ;;		_checkDebounceSW1
 13021 ;;		_checkDebounceSW2
 13022 ;;		_getSubfieldInfo
 13023 ;;		_mode_LED
 13024 ;; This function is called by:
 13025 ;;		_config_routine
 13026 ;; This function uses a non-reentrant model
 13027 ;;
 13028                           
 13029                           
 13030                           ;psect for function _selectSubfield
 13031  0669                     _selectSubfield:	
 13032  0669                     l7017:	
 13033                           ;incstack = 0
 13034                           ; Regs used in _selectSubfield: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13035                           
 13036                           
 13037                           ;main.c: 356:     unsigned int subfield = 1;
 13038  0669  3001               	movlw	1
 13039  066A  0020               	movlb	0	; select bank0
 13040  066B  00C1               	movwf	selectSubfield@subfield
 13041  066C  3000               	movlw	0
 13042  066D  00C2               	movwf	selectSubfield@subfield+1
 13043  066E                     l7019:	
 13044                           
 13045                           ;main.c: 360:         if(!PORTBbits.RB4){
 13046  066E  1A0D               	btfsc	13,4	;volatile
 13047  066F  2E71               	goto	u3951
 13048  0670  2E72               	goto	u3950
 13049  0671                     u3951:	
 13050  0671  2E7F               	goto	l7025
 13051  0672                     u3950:	
 13052  0672                     l7021:	
 13053                           
 13054                           ;main.c: 361:             if(checkDebounceSW1()){
 13055  0672  3184  24B9  3186   	fcall	_checkDebounceSW1
 13056  0675  3A00               	xorlw	0
 13057  0676  1903               	skipnz
 13058  0677  2E79               	goto	u3961
 13059  0678  2E7A               	goto	u3960
 13060  0679                     u3961:	
 13061  0679  2E7F               	goto	l7025
 13062  067A                     u3960:	
 13063  067A                     l7023:	
 13064                           
 13065                           ;main.c: 362:                 subfield +=1;
 13066  067A  3001               	movlw	1
 13067  067B  0020               	movlb	0	; select bank0
 13068  067C  07C1               	addwf	selectSubfield@subfield,f
 13069  067D  3000               	movlw	0
 13070  067E  3DC2               	addwfc	selectSubfield@subfield+1,f
 13071  067F                     l7025:	
 13072                           
 13073                           ;main.c: 367:         mode_LED( subfield);
 13074  067F  0020               	movlb	0	; select bank0
 13075  0680  0841               	movf	selectSubfield@subfield,w
 13076  0681  318E  2637  3186   	fcall	_mode_LED
 13077  0684                     l7027:	
 13078                           
 13079                           ;main.c: 369:         if(!PORTCbits.RC5){
 13080  0684  0020               	movlb	0	; select bank0
 13081  0685  1A8E               	btfsc	14,5	;volatile
 13082  0686  2E88               	goto	u3971
 13083  0687  2E89               	goto	u3970
 13084  0688                     u3971:	
 13085  0688  2E9C               	goto	l7037
 13086  0689                     u3970:	
 13087  0689                     l7029:	
 13088                           
 13089                           ;main.c: 370:             if(checkDebounceSW2()){
 13090  0689  3187  2704  3186   	fcall	_checkDebounceSW2
 13091  068C  3A00               	xorlw	0
 13092  068D  1903               	skipnz
 13093  068E  2E90               	goto	u3981
 13094  068F  2E91               	goto	u3980
 13095  0690                     u3981:	
 13096  0690  2E9C               	goto	l7037
 13097  0691                     u3980:	
 13098  0691                     l7031:	
 13099                           
 13100                           ;main.c: 371:                 mode_field_subfield[1] = subfield;
 13101  0691  0020               	movlb	0	; select bank0
 13102  0692  0842               	movf	selectSubfield@subfield+1,w
 13103  0693  00E4               	movwf	_mode_field_subfield+3
 13104  0694  0841               	movf	selectSubfield@subfield,w
 13105  0695  00E3               	movwf	_mode_field_subfield+2
 13106  0696                     l7033:	
 13107                           
 13108                           ;main.c: 372:                 getSubfieldInfo();
 13109  0696  3182  220A  3186   	fcall	_getSubfieldInfo
 13110  0699                     l7035:	
 13111                           
 13112                           ;main.c: 373:                 all_LED();
 13113  0699  3184  245E  3186   	fcall	_all_LED
 13114  069C                     l7037:	
 13115                           
 13116                           ;main.c: 378:         _delay((unsigned long)((2)*(1000000/4000.0)));
 13117  069C  30A6               	movlw	166
 13118  069D                     u4627:	
 13119  069D  0B89               	decfsz	9,f
 13120  069E  2E9D               	goto	u4627
 13121  069F  3200               	nop2
 13122  06A0                     l7039:	
 13123                           
 13124                           ;main.c: 380:     }while(subfield <= num_subfields[mode_field_subfield[0]]);
 13125  06A0  0020               	movlb	0	; select bank0
 13126  06A1  0862               	movf	_mode_field_subfield+1,w
 13127  06A2  0085               	movwf	5
 13128  06A3  0861               	movf	_mode_field_subfield,w
 13129  06A4  0084               	movwf	4
 13130  06A5  3020               	movlw	low (_num_subfields| (0+32768))
 13131  06A6  0784               	addwf	4,f
 13132  06A7  3090               	movlw	high (_num_subfields| (0+32768))
 13133  06A8  3D85               	addwfc	5,f
 13134  06A9  0800               	movf	0,w	;code access
 13135  06AA  00BF               	movwf	??_selectSubfield
 13136  06AB  01C0               	clrf	??_selectSubfield+1
 13137  06AC  0842               	movf	selectSubfield@subfield+1,w
 13138  06AD  0240               	subwf	??_selectSubfield+1,w
 13139  06AE  1D03               	skipz
 13140  06AF  2EB2               	goto	u3995
 13141  06B0  0841               	movf	selectSubfield@subfield,w
 13142  06B1  023F               	subwf	??_selectSubfield,w
 13143  06B2                     u3995:	
 13144  06B2  1803               	skipnc
 13145  06B3  2EB5               	goto	u3991
 13146  06B4  2EB6               	goto	u3990
 13147  06B5                     u3991:	
 13148  06B5  2E6E               	goto	l7019
 13149  06B6                     u3990:	
 13150  06B6                     l1341:	
 13151  06B6  0008               	return
 13152  06B7                     __end_of_selectSubfield:	
 13153                           
 13154                           	psect	text15
 13155  0E37                     __ptext15:	
 13156 ;; *************** function _mode_LED *****************
 13157 ;; Defined at:
 13158 ;;		line 113 in file "leds.c"
 13159 ;; Parameters:    Size  Location     Type
 13160 ;;  subfield        1    wreg     unsigned char 
 13161 ;; Auto vars:     Size  Location     Type
 13162 ;;  subfield        1   15[BANK0 ] unsigned char 
 13163 ;; Return value:  Size  Location     Type
 13164 ;;                  1    wreg      void 
 13165 ;; Registers used:
 13166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13167 ;; Tracked objects:
 13168 ;;		On entry : 0/0
 13169 ;;		On exit  : 0/0
 13170 ;;		Unchanged: 0/0
 13171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13173 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13174 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13175 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13176 ;;Total ram usage:        3 bytes
 13177 ;; Hardware stack levels used:    1
 13178 ;; Hardware stack levels required when called:    8
 13179 ;; This function calls:
 13180 ;;		_mod1_LED
 13181 ;;		_mod2_LED
 13182 ;;		_mod3_LED
 13183 ;;		_mod4_LED
 13184 ;; This function is called by:
 13185 ;;		_selectSubfield
 13186 ;; This function uses a non-reentrant model
 13187 ;;
 13188                           
 13189                           
 13190                           ;psect for function _mode_LED
 13191  0E37                     _mode_LED:	
 13192                           
 13193                           ;incstack = 0
 13194                           ; Regs used in _mode_LED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13195                           ;mode_LED@subfield stored from wreg
 13196  0E37  0020               	movlb	0	; select bank0
 13197  0E38  00AF               	movwf	mode_LED@subfield
 13198  0E39                     l6781:	
 13199                           
 13200                           ;leds.c: 114:         switch(subfield){
 13201  0E39  2E4A               	goto	l6793
 13202  0E3A                     l6783:	
 13203  0E3A  318A  22FE  318E   	fcall	_mod1_LED
 13204  0E3D  2E60               	goto	l1725
 13205  0E3E                     l6785:	
 13206  0E3E  318A  22F4  318E   	fcall	_mod2_LED
 13207  0E41  2E60               	goto	l1725
 13208  0E42                     l6787:	
 13209  0E42  318B  2309  318E   	fcall	_mod3_LED
 13210  0E45  2E60               	goto	l1725
 13211  0E46                     l6789:	
 13212  0E46  318B  2314  318E   	fcall	_mod4_LED
 13213  0E49  2E60               	goto	l1725
 13214  0E4A                     l6793:	
 13215  0E4A  082F               	movf	mode_LED@subfield,w
 13216  0E4B  00AD               	movwf	??_mode_LED
 13217  0E4C  01AE               	clrf	??_mode_LED+1
 13218                           
 13219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13220                           ; Switch size 1, requested type "simple"
 13221                           ; Number of cases is 1, Range of values is 0 to 0
 13222                           ; switch strategies available:
 13223                           ; Name         Instructions Cycles
 13224                           ; simple_byte            4     3 (average)
 13225                           ; direct_byte            8     6 (fixed)
 13226                           ; jumptable            260     6 (fixed)
 13227                           ;	Chosen strategy is simple_byte
 13228  0E4D  082E               	movf	??_mode_LED+1,w
 13229  0E4E  3A00               	xorlw	0	; case 0
 13230  0E4F  1903               	skipnz
 13231  0E50  2E52               	goto	l7819
 13232  0E51  2E60               	goto	l1725
 13233  0E52                     l7819:	
 13234                           
 13235                           ; Switch size 1, requested type "simple"
 13236                           ; Number of cases is 4, Range of values is 1 to 4
 13237                           ; switch strategies available:
 13238                           ; Name         Instructions Cycles
 13239                           ; simple_byte           13     7 (average)
 13240                           ; direct_byte           17     9 (fixed)
 13241                           ; jumptable            263     9 (fixed)
 13242                           ;	Chosen strategy is simple_byte
 13243  0E52  082D               	movf	??_mode_LED,w
 13244  0E53  3A01               	xorlw	1	; case 1
 13245  0E54  1903               	skipnz
 13246  0E55  2E3A               	goto	l6783
 13247  0E56  3A03               	xorlw	3	; case 2
 13248  0E57  1903               	skipnz
 13249  0E58  2E3E               	goto	l6785
 13250  0E59  3A01               	xorlw	1	; case 3
 13251  0E5A  1903               	skipnz
 13252  0E5B  2E42               	goto	l6787
 13253  0E5C  3A07               	xorlw	7	; case 4
 13254  0E5D  1903               	skipnz
 13255  0E5E  2E46               	goto	l6789
 13256  0E5F  2E60               	goto	l1725
 13257  0E60                     l1725:	
 13258  0E60  0008               	return
 13259  0E61                     __end_of_mode_LED:	
 13260                           
 13261                           	psect	text16
 13262  0B14                     __ptext16:	
 13263 ;; *************** function _mod4_LED *****************
 13264 ;; Defined at:
 13265 ;;		line 84 in file "leds.c"
 13266 ;; Parameters:    Size  Location     Type
 13267 ;;		None
 13268 ;; Auto vars:     Size  Location     Type
 13269 ;;		None
 13270 ;; Return value:  Size  Location     Type
 13271 ;;                  1    wreg      void 
 13272 ;; Registers used:
 13273 ;;		wreg, status,2, status,0, pclath, cstack
 13274 ;; Tracked objects:
 13275 ;;		On entry : 0/0
 13276 ;;		On exit  : 0/0
 13277 ;;		Unchanged: 0/0
 13278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13283 ;;Total ram usage:        0 bytes
 13284 ;; Hardware stack levels used:    1
 13285 ;; Hardware stack levels required when called:    7
 13286 ;; This function calls:
 13287 ;;		_PWM6_LoadDutyValue
 13288 ;; This function is called by:
 13289 ;;		_config_routine
 13290 ;;		_mode_LED
 13291 ;; This function uses a non-reentrant model
 13292 ;;
 13293                           
 13294                           
 13295                           ;psect for function _mod4_LED
 13296  0B14                     _mod4_LED:	
 13297  0B14                     l6633:	
 13298                           ;incstack = 0
 13299                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 13300                           
 13301                           
 13302                           ;leds.c: 85:     LATA = 0;
 13303  0B14  0020               	movlb	0	; select bank0
 13304  0B15  0196               	clrf	22	;volatile
 13305  0B16                     l6635:	
 13306                           
 13307                           ;leds.c: 86:     PWM6_LoadDutyValue(0);
 13308  0B16  3000               	movlw	0
 13309  0B17  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13310  0B18  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13311  0B19  318C  24C5  318B   	fcall	_PWM6_LoadDutyValue
 13312  0B1C                     l6637:	
 13313  0B1C  0020               	movlb	0	; select bank0
 13314  0B1D  1616               	bsf	22,4	;volatile
 13315  0B1E                     l1704:	
 13316  0B1E  0008               	return
 13317  0B1F                     __end_of_mod4_LED:	
 13318                           
 13319                           	psect	text17
 13320  0B09                     __ptext17:	
 13321 ;; *************** function _mod3_LED *****************
 13322 ;; Defined at:
 13323 ;;		line 77 in file "leds.c"
 13324 ;; Parameters:    Size  Location     Type
 13325 ;;		None
 13326 ;; Auto vars:     Size  Location     Type
 13327 ;;		None
 13328 ;; Return value:  Size  Location     Type
 13329 ;;                  1    wreg      void 
 13330 ;; Registers used:
 13331 ;;		wreg, status,2, status,0, pclath, cstack
 13332 ;; Tracked objects:
 13333 ;;		On entry : 0/0
 13334 ;;		On exit  : 0/0
 13335 ;;		Unchanged: 0/0
 13336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13341 ;;Total ram usage:        0 bytes
 13342 ;; Hardware stack levels used:    1
 13343 ;; Hardware stack levels required when called:    7
 13344 ;; This function calls:
 13345 ;;		_PWM6_LoadDutyValue
 13346 ;; This function is called by:
 13347 ;;		_config_routine
 13348 ;;		_mode_LED
 13349 ;; This function uses a non-reentrant model
 13350 ;;
 13351                           
 13352                           
 13353                           ;psect for function _mod3_LED
 13354  0B09                     _mod3_LED:	
 13355  0B09                     l6627:	
 13356                           ;incstack = 0
 13357                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 13358                           
 13359                           
 13360                           ;leds.c: 78:     LATA = 0;
 13361  0B09  0020               	movlb	0	; select bank0
 13362  0B0A  0196               	clrf	22	;volatile
 13363  0B0B                     l6629:	
 13364                           
 13365                           ;leds.c: 79:     PWM6_LoadDutyValue(0);
 13366  0B0B  3000               	movlw	0
 13367  0B0C  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13368  0B0D  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13369  0B0E  318C  24C5  318B   	fcall	_PWM6_LoadDutyValue
 13370  0B11                     l6631:	
 13371  0B11  0020               	movlb	0	; select bank0
 13372  0B12  1696               	bsf	22,5	;volatile
 13373  0B13                     l1699:	
 13374  0B13  0008               	return
 13375  0B14                     __end_of_mod3_LED:	
 13376                           
 13377                           	psect	text18
 13378  0AF4                     __ptext18:	
 13379 ;; *************** function _mod2_LED *****************
 13380 ;; Defined at:
 13381 ;;		line 72 in file "leds.c"
 13382 ;; Parameters:    Size  Location     Type
 13383 ;;		None
 13384 ;; Auto vars:     Size  Location     Type
 13385 ;;		None
 13386 ;; Return value:  Size  Location     Type
 13387 ;;                  1    wreg      void 
 13388 ;; Registers used:
 13389 ;;		wreg, status,2, status,0, pclath, cstack
 13390 ;; Tracked objects:
 13391 ;;		On entry : 0/0
 13392 ;;		On exit  : 0/0
 13393 ;;		Unchanged: 0/0
 13394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13399 ;;Total ram usage:        0 bytes
 13400 ;; Hardware stack levels used:    1
 13401 ;; Hardware stack levels required when called:    7
 13402 ;; This function calls:
 13403 ;;		_PWM6_LoadDutyValue
 13404 ;; This function is called by:
 13405 ;;		_config_routine
 13406 ;;		_mode_LED
 13407 ;; This function uses a non-reentrant model
 13408 ;;
 13409                           
 13410                           
 13411                           ;psect for function _mod2_LED
 13412  0AF4                     _mod2_LED:	
 13413  0AF4                     l6623:	
 13414                           ;incstack = 0
 13415                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 13416                           
 13417                           
 13418                           ;leds.c: 73:     LATA = 0;
 13419  0AF4  0020               	movlb	0	; select bank0
 13420  0AF5  0196               	clrf	22	;volatile
 13421  0AF6                     l6625:	
 13422                           
 13423                           ;leds.c: 74:     PWM6_LoadDutyValue(1023);
 13424  0AF6  30FF               	movlw	255
 13425  0AF7  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13426  0AF8  3003               	movlw	3
 13427  0AF9  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13428  0AFA  318C  24C5  318A   	fcall	_PWM6_LoadDutyValue
 13429  0AFD                     l1694:	
 13430  0AFD  0008               	return
 13431  0AFE                     __end_of_mod2_LED:	
 13432                           
 13433                           	psect	text19
 13434  0AFE                     __ptext19:	
 13435 ;; *************** function _mod1_LED *****************
 13436 ;; Defined at:
 13437 ;;		line 65 in file "leds.c"
 13438 ;; Parameters:    Size  Location     Type
 13439 ;;		None
 13440 ;; Auto vars:     Size  Location     Type
 13441 ;;		None
 13442 ;; Return value:  Size  Location     Type
 13443 ;;                  1    wreg      void 
 13444 ;; Registers used:
 13445 ;;		wreg, status,2, status,0, pclath, cstack
 13446 ;; Tracked objects:
 13447 ;;		On entry : 0/0
 13448 ;;		On exit  : 0/0
 13449 ;;		Unchanged: 0/0
 13450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13455 ;;Total ram usage:        0 bytes
 13456 ;; Hardware stack levels used:    1
 13457 ;; Hardware stack levels required when called:    7
 13458 ;; This function calls:
 13459 ;;		_PWM6_LoadDutyValue
 13460 ;; This function is called by:
 13461 ;;		_config_routine
 13462 ;;		_mode_LED
 13463 ;; This function uses a non-reentrant model
 13464 ;;
 13465                           
 13466                           
 13467                           ;psect for function _mod1_LED
 13468  0AFE                     _mod1_LED:	
 13469  0AFE                     l6617:	
 13470                           ;incstack = 0
 13471                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 13472                           
 13473                           
 13474                           ;leds.c: 66:     LATA = 0;
 13475  0AFE  0020               	movlb	0	; select bank0
 13476  0AFF  0196               	clrf	22	;volatile
 13477  0B00                     l6619:	
 13478                           
 13479                           ;leds.c: 67:     PWM6_LoadDutyValue(0);
 13480  0B00  3000               	movlw	0
 13481  0B01  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13482  0B02  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13483  0B03  318C  24C5  318A   	fcall	_PWM6_LoadDutyValue
 13484  0B06                     l6621:	
 13485  0B06  0020               	movlb	0	; select bank0
 13486  0B07  1796               	bsf	22,7	;volatile
 13487  0B08                     l1691:	
 13488  0B08  0008               	return
 13489  0B09                     __end_of_mod1_LED:	
 13490                           
 13491                           	psect	text20
 13492  020A                     __ptext20:	
 13493 ;; *************** function _getSubfieldInfo *****************
 13494 ;; Defined at:
 13495 ;;		line 390 in file "main.c"
 13496 ;; Parameters:    Size  Location     Type
 13497 ;;		None
 13498 ;; Auto vars:     Size  Location     Type
 13499 ;;  m_units         1   30[BANK0 ] unsigned char 
 13500 ;;  m_tens          1   29[BANK0 ] unsigned char 
 13501 ;;  h_units         1   28[BANK0 ] unsigned char 
 13502 ;;  h_tens          1    0        unsigned char 
 13503 ;; Return value:  Size  Location     Type
 13504 ;;                  1    wreg      void 
 13505 ;; Registers used:
 13506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13507 ;; Tracked objects:
 13508 ;;		On entry : 0/0
 13509 ;;		On exit  : 0/0
 13510 ;;		Unchanged: 0/0
 13511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13513 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13514 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13515 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13516 ;;Total ram usage:        7 bytes
 13517 ;; Hardware stack levels used:    1
 13518 ;; Hardware stack levels required when called:    9
 13519 ;; This function calls:
 13520 ;;		___awdiv
 13521 ;;		___awmod
 13522 ;;		_increment_subfield_clk
 13523 ;;		_limitHoursUnits
 13524 ;; This function is called by:
 13525 ;;		_selectSubfield
 13526 ;; This function uses a non-reentrant model
 13527 ;;
 13528                           
 13529                           
 13530                           ;psect for function _getSubfieldInfo
 13531  020A                     _getSubfieldInfo:	
 13532  020A                     l6801:	
 13533                           ;incstack = 0
 13534                           ; Regs used in _getSubfieldInfo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13535                           
 13536  020A  0020               	movlb	0	; select bank0
 13537  020B  01BC               	clrf	getSubfieldInfo@h_units
 13538  020C  01BD               	clrf	getSubfieldInfo@m_tens
 13539  020D  01BE               	clrf	getSubfieldInfo@m_units
 13540                           
 13541                           ;main.c: 392:     switch(mode_field_subfield[0]){
 13542  020E  2ACB               	goto	l6831
 13543  020F                     l1345:	
 13544                           ;main.c: 393:         case 1:
 13545                           
 13546                           
 13547                           ;main.c: 394:    PIE4bits.TMR1IE = 0;
 13548  020F  002E               	movlb	14	; select bank14
 13549  0210  101A               	bcf	26,0	;volatile
 13550                           
 13551                           ;main.c: 396:             switch(mode_field_subfield[1]){
 13552  0211  2A74               	goto	l6813
 13553  0212                     l6803:	
 13554  0212  300A               	movlw	10
 13555  0213  00A3               	movwf	___awdiv@divisor
 13556  0214  3000               	movlw	0
 13557  0215  00A4               	movwf	___awdiv@divisor+1
 13558  0216  085E               	movf	_clkh,w	;volatile
 13559  0217  00B8               	movwf	??_getSubfieldInfo
 13560  0218  01B9               	clrf	??_getSubfieldInfo+1
 13561  0219  0838               	movf	??_getSubfieldInfo,w
 13562  021A  00A5               	movwf	___awdiv@dividend
 13563  021B  0839               	movf	??_getSubfieldInfo+1,w
 13564  021C  00A6               	movwf	___awdiv@dividend+1
 13565  021D  3183  23FE  3182   	fcall	___awdiv
 13566  0220  0020               	movlb	0	; select bank0
 13567  0221  0824               	movf	?___awdiv+1,w
 13568  0222  00B3               	movwf	increment_subfield_clk@init_val+1
 13569  0223  0823               	movf	?___awdiv,w
 13570  0224  00B2               	movwf	increment_subfield_clk@init_val
 13571  0225  3002               	movlw	2
 13572  0226  3185  256D  3182   	fcall	_increment_subfield_clk
 13573                           
 13574                           ;main.c: 400:                  break;
 13575  0229  2A88               	goto	l1348
 13576  022A                     l6805:	
 13577  022A  300A               	movlw	10
 13578  022B  00A3               	movwf	___awmod@divisor
 13579  022C  3000               	movlw	0
 13580  022D  00A4               	movwf	___awmod@divisor+1
 13581  022E  085E               	movf	_clkh,w	;volatile
 13582  022F  00B8               	movwf	??_getSubfieldInfo
 13583  0230  01B9               	clrf	??_getSubfieldInfo+1
 13584  0231  0838               	movf	??_getSubfieldInfo,w
 13585  0232  00A5               	movwf	___awmod@dividend
 13586  0233  0839               	movf	??_getSubfieldInfo+1,w
 13587  0234  00A6               	movwf	___awmod@dividend+1
 13588  0235  3185  25C1  3182   	fcall	___awmod
 13589  0238  0020               	movlb	0	; select bank0
 13590  0239  0824               	movf	?___awmod+1,w
 13591  023A  00B3               	movwf	increment_subfield_clk@init_val+1
 13592  023B  0823               	movf	?___awmod,w
 13593  023C  00B2               	movwf	increment_subfield_clk@init_val
 13594  023D  318D  2512  3182   	fcall	_limitHoursUnits
 13595  0240  3185  256D  3182   	fcall	_increment_subfield_clk
 13596                           
 13597                           ;main.c: 403:                  break;
 13598  0243  2A88               	goto	l1348
 13599  0244                     l6807:	
 13600  0244  300A               	movlw	10
 13601  0245  00A3               	movwf	___awdiv@divisor
 13602  0246  3000               	movlw	0
 13603  0247  00A4               	movwf	___awdiv@divisor+1
 13604  0248  085D               	movf	_clkm,w	;volatile
 13605  0249  00B8               	movwf	??_getSubfieldInfo
 13606  024A  01B9               	clrf	??_getSubfieldInfo+1
 13607  024B  0838               	movf	??_getSubfieldInfo,w
 13608  024C  00A5               	movwf	___awdiv@dividend
 13609  024D  0839               	movf	??_getSubfieldInfo+1,w
 13610  024E  00A6               	movwf	___awdiv@dividend+1
 13611  024F  3183  23FE  3182   	fcall	___awdiv
 13612  0252  0020               	movlb	0	; select bank0
 13613  0253  0824               	movf	?___awdiv+1,w
 13614  0254  00B3               	movwf	increment_subfield_clk@init_val+1
 13615  0255  0823               	movf	?___awdiv,w
 13616  0256  00B2               	movwf	increment_subfield_clk@init_val
 13617  0257  3005               	movlw	5
 13618  0258  3185  256D  3182   	fcall	_increment_subfield_clk
 13619                           
 13620                           ;main.c: 406:                  break;
 13621  025B  2A88               	goto	l1348
 13622  025C                     l6809:	
 13623  025C  300A               	movlw	10
 13624  025D  00A3               	movwf	___awmod@divisor
 13625  025E  3000               	movlw	0
 13626  025F  00A4               	movwf	___awmod@divisor+1
 13627  0260  085E               	movf	_clkh,w	;volatile
 13628  0261  00B8               	movwf	??_getSubfieldInfo
 13629  0262  01B9               	clrf	??_getSubfieldInfo+1
 13630  0263  0838               	movf	??_getSubfieldInfo,w
 13631  0264  00A5               	movwf	___awmod@dividend
 13632  0265  0839               	movf	??_getSubfieldInfo+1,w
 13633  0266  00A6               	movwf	___awmod@dividend+1
 13634  0267  3185  25C1  3182   	fcall	___awmod
 13635  026A  0020               	movlb	0	; select bank0
 13636  026B  0824               	movf	?___awmod+1,w
 13637  026C  00B3               	movwf	increment_subfield_clk@init_val+1
 13638  026D  0823               	movf	?___awmod,w
 13639  026E  00B2               	movwf	increment_subfield_clk@init_val
 13640  026F  3009               	movlw	9
 13641  0270  3185  256D  3182   	fcall	_increment_subfield_clk
 13642                           
 13643                           ;main.c: 409:                      break;
 13644  0273  2A88               	goto	l1348
 13645  0274                     l6813:	
 13646                           
 13647                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13648                           ; Switch size 1, requested type "simple"
 13649                           ; Number of cases is 1, Range of values is 0 to 0
 13650                           ; switch strategies available:
 13651                           ; Name         Instructions Cycles
 13652                           ; simple_byte            4     3 (average)
 13653                           ; direct_byte            8     6 (fixed)
 13654                           ; jumptable            260     6 (fixed)
 13655                           ;	Chosen strategy is simple_byte
 13656  0274  0020               	movlb	0	; select bank0
 13657  0275  0864               	movf	_mode_field_subfield+3,w
 13658  0276  3A00               	xorlw	0	; case 0
 13659  0277  1903               	skipnz
 13660  0278  2A7A               	goto	l7821
 13661  0279  2A88               	goto	l1348
 13662  027A                     l7821:	
 13663                           
 13664                           ; Switch size 1, requested type "simple"
 13665                           ; Number of cases is 4, Range of values is 1 to 4
 13666                           ; switch strategies available:
 13667                           ; Name         Instructions Cycles
 13668                           ; simple_byte           13     7 (average)
 13669                           ; direct_byte           17     9 (fixed)
 13670                           ; jumptable            263     9 (fixed)
 13671                           ;	Chosen strategy is simple_byte
 13672  027A  0863               	movf	_mode_field_subfield+2,w
 13673  027B  3A01               	xorlw	1	; case 1
 13674  027C  1903               	skipnz
 13675  027D  2A12               	goto	l6803
 13676  027E  3A03               	xorlw	3	; case 2
 13677  027F  1903               	skipnz
 13678  0280  2A2A               	goto	l6805
 13679  0281  3A01               	xorlw	1	; case 3
 13680  0282  1903               	skipnz
 13681  0283  2A44               	goto	l6807
 13682  0284  3A07               	xorlw	7	; case 4
 13683  0285  1903               	skipnz
 13684  0286  2A5C               	goto	l6809
 13685  0287  2A88               	goto	l1348
 13686  0288                     l1348:	
 13687                           
 13688                           ;main.c: 412:       PIE4bits.TMR1IE = 0;
 13689  0288  002E               	movlb	14	; select bank14
 13690  0289  101A               	bcf	26,0	;volatile
 13691                           
 13692                           ;main.c: 414:         break;
 13693  028A  2ADE               	goto	l1360
 13694  028B                     l6815:	
 13695                           
 13696                           ;main.c: 417:             subfield_info.limit = (unsigned char(*)(void))1;
 13697  028B  3001               	movlw	1
 13698  028C  00CB               	movwf	_subfield_info
 13699  028D  3000               	movlw	0
 13700  028E  00CC               	movwf	_subfield_info+1
 13701                           
 13702                           ;main.c: 418:             subfield_info.reconstruct_subfield = &recAlarm;
 13703  028F  3000               	movlw	0
 13704  0290  00CD               	movwf	low ((_subfield_info| 0+2))
 13705  0291  3000               	movlw	0
 13706  0292  00CE               	movwf	(low ((_subfield_info| 0+2))+1)
 13707  0293                     l6817:	
 13708                           
 13709                           ;main.c: 419:             alaf = increment_subfield_clk( 1, alaf );
 13710  0293  0853               	movf	_alaf,w
 13711  0294  00B8               	movwf	??_getSubfieldInfo
 13712  0295  01B9               	clrf	??_getSubfieldInfo+1
 13713  0296  0838               	movf	??_getSubfieldInfo,w
 13714  0297  00B2               	movwf	increment_subfield_clk@init_val
 13715  0298  0839               	movf	??_getSubfieldInfo+1,w
 13716  0299  00B3               	movwf	increment_subfield_clk@init_val+1
 13717  029A  3001               	movlw	1
 13718  029B  3185  256D  3182   	fcall	_increment_subfield_clk
 13719  029E  0020               	movlb	0	; select bank0
 13720  029F  00BA               	movwf	??_getSubfieldInfo+2
 13721  02A0  083A               	movf	??_getSubfieldInfo+2,w
 13722  02A1  00D3               	movwf	_alaf
 13723                           
 13724                           ;main.c: 420:  break;
 13725  02A2  2ADE               	goto	l1360
 13726  02A3                     l6819:	
 13727                           
 13728                           ;main.c: 425:                     subfield_info.limit = (unsigned char(*)(void))5;
 13729  02A3  3005               	movlw	5
 13730  02A4  00CB               	movwf	_subfield_info
 13731  02A5  3000               	movlw	0
 13732  02A6  00CC               	movwf	_subfield_info+1
 13733                           
 13734                           ;main.c: 426:                     subfield_info.reconstruct_subfield = &recTempThresh;
 13735  02A7  3000               	movlw	0
 13736  02A8  00CD               	movwf	low ((_subfield_info| 0+2))
 13737  02A9  3000               	movlw	0
 13738  02AA  00CE               	movwf	(low ((_subfield_info| 0+2))+1)
 13739                           
 13740                           ;main.c: 427:                 break;
 13741  02AB  2ADE               	goto	l1360
 13742  02AC                     l6821:	
 13743                           
 13744                           ;main.c: 429:                     subfield_info.limit = &limitTempThreshUnits;
 13745  02AC  3000               	movlw	0
 13746  02AD  00CB               	movwf	_subfield_info
 13747  02AE  3000               	movlw	0
 13748  02AF  00CC               	movwf	_subfield_info+1
 13749                           
 13750                           ;main.c: 430:                     subfield_info.reconstruct_subfield = &recTempThresh;
 13751  02B0  3000               	movlw	0
 13752  02B1  00CD               	movwf	low ((_subfield_info| 0+2))
 13753  02B2  3000               	movlw	0
 13754  02B3  00CE               	movwf	(low ((_subfield_info| 0+2))+1)
 13755                           
 13756                           ;main.c: 431:                 break;
 13757  02B4  2ADE               	goto	l1360
 13758  02B5                     l6825:	
 13759                           
 13760                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13761                           ; Switch size 1, requested type "simple"
 13762                           ; Number of cases is 1, Range of values is 0 to 0
 13763                           ; switch strategies available:
 13764                           ; Name         Instructions Cycles
 13765                           ; simple_byte            4     3 (average)
 13766                           ; direct_byte            8     6 (fixed)
 13767                           ; jumptable            260     6 (fixed)
 13768                           ;	Chosen strategy is simple_byte
 13769  02B5  0864               	movf	_mode_field_subfield+3,w
 13770  02B6  3A00               	xorlw	0	; case 0
 13771  02B7  1903               	skipnz
 13772  02B8  2ABA               	goto	l7823
 13773  02B9  2ADE               	goto	l1360
 13774  02BA                     l7823:	
 13775                           
 13776                           ; Switch size 1, requested type "simple"
 13777                           ; Number of cases is 2, Range of values is 1 to 2
 13778                           ; switch strategies available:
 13779                           ; Name         Instructions Cycles
 13780                           ; simple_byte            7     4 (average)
 13781                           ; direct_byte           13     9 (fixed)
 13782                           ; jumptable            263     9 (fixed)
 13783                           ;	Chosen strategy is simple_byte
 13784  02BA  0863               	movf	_mode_field_subfield+2,w
 13785  02BB  3A01               	xorlw	1	; case 1
 13786  02BC  1903               	skipnz
 13787  02BD  2AA3               	goto	l6819
 13788  02BE  3A03               	xorlw	3	; case 2
 13789  02BF  1903               	skipnz
 13790  02C0  2AAC               	goto	l6821
 13791  02C1  2ADE               	goto	l1360
 13792  02C2                     l6827:	
 13793                           
 13794                           ;main.c: 436:             subfield_info.limit = (unsigned char(*)(void))3;
 13795  02C2  3003               	movlw	3
 13796  02C3  00CB               	movwf	_subfield_info
 13797  02C4  3000               	movlw	0
 13798  02C5  00CC               	movwf	_subfield_info+1
 13799                           
 13800                           ;main.c: 437:             subfield_info.reconstruct_subfield = &recLumThresh;
 13801  02C6  3000               	movlw	0
 13802  02C7  00CD               	movwf	low ((_subfield_info| 0+2))
 13803  02C8  3000               	movlw	0
 13804  02C9  00CE               	movwf	(low ((_subfield_info| 0+2))+1)
 13805                           
 13806                           ;main.c: 438:         break;
 13807  02CA  2ADE               	goto	l1360
 13808  02CB                     l6831:	
 13809                           
 13810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13811                           ; Switch size 1, requested type "simple"
 13812                           ; Number of cases is 1, Range of values is 0 to 0
 13813                           ; switch strategies available:
 13814                           ; Name         Instructions Cycles
 13815                           ; simple_byte            4     3 (average)
 13816                           ; direct_byte            8     6 (fixed)
 13817                           ; jumptable            260     6 (fixed)
 13818                           ;	Chosen strategy is simple_byte
 13819  02CB  0862               	movf	_mode_field_subfield+1,w
 13820  02CC  3A00               	xorlw	0	; case 0
 13821  02CD  1903               	skipnz
 13822  02CE  2AD0               	goto	l7825
 13823  02CF  2ADE               	goto	l1360
 13824  02D0                     l7825:	
 13825                           
 13826                           ; Switch size 1, requested type "simple"
 13827                           ; Number of cases is 4, Range of values is 1 to 4
 13828                           ; switch strategies available:
 13829                           ; Name         Instructions Cycles
 13830                           ; simple_byte           13     7 (average)
 13831                           ; direct_byte           17     9 (fixed)
 13832                           ; jumptable            263     9 (fixed)
 13833                           ;	Chosen strategy is simple_byte
 13834  02D0  0861               	movf	_mode_field_subfield,w
 13835  02D1  3A01               	xorlw	1	; case 1
 13836  02D2  1903               	skipnz
 13837  02D3  2A0F               	goto	l1345
 13838  02D4  3A03               	xorlw	3	; case 2
 13839  02D5  1903               	skipnz
 13840  02D6  2A8B               	goto	l6815
 13841  02D7  3A01               	xorlw	1	; case 3
 13842  02D8  1903               	skipnz
 13843  02D9  2AB5               	goto	l6825
 13844  02DA  3A07               	xorlw	7	; case 4
 13845  02DB  1903               	skipnz
 13846  02DC  2AC2               	goto	l6827
 13847  02DD  2ADE               	goto	l1360
 13848  02DE                     l1360:	
 13849  02DE  0008               	return
 13850  02DF                     __end_of_getSubfieldInfo:	
 13851                           
 13852                           	psect	text21
 13853  0D12                     __ptext21:	
 13854 ;; *************** function _limitHoursUnits *****************
 13855 ;; Defined at:
 13856 ;;		line 524 in file "main.c"
 13857 ;; Parameters:    Size  Location     Type
 13858 ;;		None
 13859 ;; Auto vars:     Size  Location     Type
 13860 ;;		None
 13861 ;; Return value:  Size  Location     Type
 13862 ;;                  1    wreg      unsigned char 
 13863 ;; Registers used:
 13864 ;;		wreg, status,2, status,0, pclath, cstack
 13865 ;; Tracked objects:
 13866 ;;		On entry : 0/0
 13867 ;;		On exit  : 0/0
 13868 ;;		Unchanged: 0/0
 13869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13872 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13873 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13874 ;;Total ram usage:        2 bytes
 13875 ;; Hardware stack levels used:    1
 13876 ;; Hardware stack levels required when called:    7
 13877 ;; This function calls:
 13878 ;;		___awdiv
 13879 ;; This function is called by:
 13880 ;;		_getSubfieldInfo
 13881 ;; This function uses a non-reentrant model
 13882 ;;
 13883                           
 13884                           
 13885                           ;psect for function _limitHoursUnits
 13886  0D12                     _limitHoursUnits:	
 13887  0D12                     l6679:	
 13888                           ;incstack = 0
 13889                           ; Regs used in _limitHoursUnits: [wreg+status,2+status,0+pclath+cstack]
 13890                           
 13891                           
 13892                           ;main.c: 526:     if((clkh / 10) == 2){
 13893  0D12  300A               	movlw	10
 13894  0D13  0020               	movlb	0	; select bank0
 13895  0D14  00A3               	movwf	___awdiv@divisor
 13896  0D15  3000               	movlw	0
 13897  0D16  00A4               	movwf	___awdiv@divisor+1
 13898  0D17  085E               	movf	_clkh,w	;volatile
 13899  0D18  00AC               	movwf	??_limitHoursUnits
 13900  0D19  01AD               	clrf	??_limitHoursUnits+1
 13901  0D1A  082C               	movf	??_limitHoursUnits,w
 13902  0D1B  00A5               	movwf	___awdiv@dividend
 13903  0D1C  082D               	movf	??_limitHoursUnits+1,w
 13904  0D1D  00A6               	movwf	___awdiv@dividend+1
 13905  0D1E  3183  23FE  318D   	fcall	___awdiv
 13906  0D21  3002               	movlw	2
 13907  0D22  0020               	movlb	0	; select bank0
 13908  0D23  0623               	xorwf	?___awdiv,w
 13909  0D24  0424               	iorwf	?___awdiv+1,w
 13910  0D25  1D03               	btfss	3,2
 13911  0D26  2D28               	goto	u3831
 13912  0D27  2D29               	goto	u3830
 13913  0D28                     u3831:	
 13914  0D28  2D2B               	goto	l6687
 13915  0D29                     u3830:	
 13916  0D29                     l6681:	
 13917                           
 13918                           ;main.c: 527:         return 3;
 13919  0D29  3003               	movlw	3
 13920  0D2A  2D2C               	goto	l1390
 13921  0D2B                     l6687:	
 13922                           
 13923                           ;main.c: 529:         return 9;
 13924  0D2B  3009               	movlw	9
 13925  0D2C                     l1390:	
 13926  0D2C  0008               	return
 13927  0D2D                     __end_of_limitHoursUnits:	
 13928                           
 13929                           	psect	text22
 13930  03FE                     __ptext22:	
 13931 ;; *************** function ___awdiv *****************
 13932 ;; Defined at:
 13933 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 13934 ;; Parameters:    Size  Location     Type
 13935 ;;  divisor         2    3[BANK0 ] int 
 13936 ;;  dividend        2    5[BANK0 ] int 
 13937 ;; Auto vars:     Size  Location     Type
 13938 ;;  quotient        2   10[BANK0 ] int 
 13939 ;;  sign            1    9[BANK0 ] unsigned char 
 13940 ;;  counter         1    8[BANK0 ] unsigned char 
 13941 ;; Return value:  Size  Location     Type
 13942 ;;                  2    3[BANK0 ] int 
 13943 ;; Registers used:
 13944 ;;		wreg, status,2, status,0
 13945 ;; Tracked objects:
 13946 ;;		On entry : 0/0
 13947 ;;		On exit  : 0/0
 13948 ;;		Unchanged: 0/0
 13949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13950 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13951 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13952 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13953 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13954 ;;Total ram usage:        9 bytes
 13955 ;; Hardware stack levels used:    1
 13956 ;; Hardware stack levels required when called:    6
 13957 ;; This function calls:
 13958 ;;		Nothing
 13959 ;; This function is called by:
 13960 ;;		_getSubfieldInfo
 13961 ;;		_recTempThresh
 13962 ;;		_limitTempThreshUnits
 13963 ;;		_limitHoursUnits
 13964 ;;		_recMinutes
 13965 ;;		_recHour
 13966 ;; This function uses a non-reentrant model
 13967 ;;
 13968                           
 13969                           
 13970                           ;psect for function ___awdiv
 13971  03FE                     ___awdiv:	
 13972  03FE                     l6557:	
 13973                           ;incstack = 0
 13974                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13975                           
 13976  03FE  0020               	movlb	0	; select bank0
 13977  03FF  01A9               	clrf	___awdiv@sign
 13978  0400                     l6559:	
 13979  0400  1FA4               	btfss	___awdiv@divisor+1,7
 13980  0401  2C03               	goto	u3661
 13981  0402  2C04               	goto	u3660
 13982  0403                     u3661:	
 13983  0403  2C0B               	goto	l6565
 13984  0404                     u3660:	
 13985  0404                     l6561:	
 13986  0404  09A3               	comf	___awdiv@divisor,f
 13987  0405  09A4               	comf	___awdiv@divisor+1,f
 13988  0406  0AA3               	incf	___awdiv@divisor,f
 13989  0407  1903               	skipnz
 13990  0408  0AA4               	incf	___awdiv@divisor+1,f
 13991  0409                     l6563:	
 13992  0409  01A9               	clrf	___awdiv@sign
 13993  040A  0AA9               	incf	___awdiv@sign,f
 13994  040B                     l6565:	
 13995  040B  1FA6               	btfss	___awdiv@dividend+1,7
 13996  040C  2C0E               	goto	u3671
 13997  040D  2C0F               	goto	u3670
 13998  040E                     u3671:	
 13999  040E  2C18               	goto	l6571
 14000  040F                     u3670:	
 14001  040F                     l6567:	
 14002  040F  09A5               	comf	___awdiv@dividend,f
 14003  0410  09A6               	comf	___awdiv@dividend+1,f
 14004  0411  0AA5               	incf	___awdiv@dividend,f
 14005  0412  1903               	skipnz
 14006  0413  0AA6               	incf	___awdiv@dividend+1,f
 14007  0414                     l6569:	
 14008  0414  3001               	movlw	1
 14009  0415  00A7               	movwf	??___awdiv
 14010  0416  0827               	movf	??___awdiv,w
 14011  0417  06A9               	xorwf	___awdiv@sign,f
 14012  0418                     l6571:	
 14013  0418  01AA               	clrf	___awdiv@quotient
 14014  0419  01AB               	clrf	___awdiv@quotient+1
 14015  041A                     l6573:	
 14016  041A  0823               	movf	___awdiv@divisor,w
 14017  041B  0424               	iorwf	___awdiv@divisor+1,w
 14018  041C  1903               	btfsc	3,2
 14019  041D  2C1F               	goto	u3681
 14020  041E  2C20               	goto	u3680
 14021  041F                     u3681:	
 14022  041F  2C4F               	goto	l6593
 14023  0420                     u3680:	
 14024  0420                     l6575:	
 14025  0420  01A8               	clrf	___awdiv@counter
 14026  0421  0AA8               	incf	___awdiv@counter,f
 14027  0422  2C2C               	goto	l6581
 14028  0423                     l6577:	
 14029  0423  3001               	movlw	1
 14030  0424                     u3695:	
 14031  0424  35A3               	lslf	___awdiv@divisor,f
 14032  0425  0DA4               	rlf	___awdiv@divisor+1,f
 14033  0426  0B89               	decfsz	9,f
 14034  0427  2C24               	goto	u3695
 14035  0428                     l6579:	
 14036  0428  3001               	movlw	1
 14037  0429  00A7               	movwf	??___awdiv
 14038  042A  0827               	movf	??___awdiv,w
 14039  042B  07A8               	addwf	___awdiv@counter,f
 14040  042C                     l6581:	
 14041  042C  1FA4               	btfss	___awdiv@divisor+1,7
 14042  042D  2C2F               	goto	u3701
 14043  042E  2C30               	goto	u3700
 14044  042F                     u3701:	
 14045  042F  2C23               	goto	l6577
 14046  0430                     u3700:	
 14047  0430                     l6583:	
 14048  0430  3001               	movlw	1
 14049  0431                     u3715:	
 14050  0431  35AA               	lslf	___awdiv@quotient,f
 14051  0432  0DAB               	rlf	___awdiv@quotient+1,f
 14052  0433  0B89               	decfsz	9,f
 14053  0434  2C31               	goto	u3715
 14054  0435  0824               	movf	___awdiv@divisor+1,w
 14055  0436  0226               	subwf	___awdiv@dividend+1,w
 14056  0437  1D03               	skipz
 14057  0438  2C3B               	goto	u3725
 14058  0439  0823               	movf	___awdiv@divisor,w
 14059  043A  0225               	subwf	___awdiv@dividend,w
 14060  043B                     u3725:	
 14061  043B  1C03               	skipc
 14062  043C  2C3E               	goto	u3721
 14063  043D  2C3F               	goto	u3720
 14064  043E                     u3721:	
 14065  043E  2C44               	goto	l6589
 14066  043F                     u3720:	
 14067  043F                     l6585:	
 14068  043F  0823               	movf	___awdiv@divisor,w
 14069  0440  02A5               	subwf	___awdiv@dividend,f
 14070  0441  0824               	movf	___awdiv@divisor+1,w
 14071  0442  3BA6               	subwfb	___awdiv@dividend+1,f
 14072  0443                     l6587:	
 14073  0443  142A               	bsf	___awdiv@quotient,0
 14074  0444                     l6589:	
 14075  0444  3001               	movlw	1
 14076  0445                     u3735:	
 14077  0445  36A4               	lsrf	___awdiv@divisor+1,f
 14078  0446  0CA3               	rrf	___awdiv@divisor,f
 14079  0447  0B89               	decfsz	9,f
 14080  0448  2C45               	goto	u3735
 14081  0449                     l6591:	
 14082  0449  3001               	movlw	1
 14083  044A  02A8               	subwf	___awdiv@counter,f
 14084  044B  1D03               	btfss	3,2
 14085  044C  2C4E               	goto	u3741
 14086  044D  2C4F               	goto	u3740
 14087  044E                     u3741:	
 14088  044E  2C30               	goto	l6583
 14089  044F                     u3740:	
 14090  044F                     l6593:	
 14091  044F  0829               	movf	___awdiv@sign,w
 14092  0450  1903               	btfsc	3,2
 14093  0451  2C53               	goto	u3751
 14094  0452  2C54               	goto	u3750
 14095  0453                     u3751:	
 14096  0453  2C59               	goto	l6597
 14097  0454                     u3750:	
 14098  0454                     l6595:	
 14099  0454  09AA               	comf	___awdiv@quotient,f
 14100  0455  09AB               	comf	___awdiv@quotient+1,f
 14101  0456  0AAA               	incf	___awdiv@quotient,f
 14102  0457  1903               	skipnz
 14103  0458  0AAB               	incf	___awdiv@quotient+1,f
 14104  0459                     l6597:	
 14105  0459  082B               	movf	___awdiv@quotient+1,w
 14106  045A  00A4               	movwf	?___awdiv+1
 14107  045B  082A               	movf	___awdiv@quotient,w
 14108  045C  00A3               	movwf	?___awdiv
 14109  045D                     l2034:	
 14110  045D  0008               	return
 14111  045E                     __end_of___awdiv:	
 14112                           
 14113                           	psect	text23
 14114  056D                     __ptext23:	
 14115 ;; *************** function _increment_subfield_clk *****************
 14116 ;; Defined at:
 14117 ;;		line 575 in file "main.c"
 14118 ;; Parameters:    Size  Location     Type
 14119 ;;  limit           1    wreg     unsigned char 
 14120 ;;  init_val        2   18[BANK0 ] unsigned int 
 14121 ;; Auto vars:     Size  Location     Type
 14122 ;;  limit           1   22[BANK0 ] unsigned char 
 14123 ;;  _value          1   23[BANK0 ] unsigned char 
 14124 ;;  exit            1   21[BANK0 ] unsigned char 
 14125 ;; Return value:  Size  Location     Type
 14126 ;;                  1    wreg      unsigned char 
 14127 ;; Registers used:
 14128 ;;		wreg, status,2, status,0, pclath, cstack
 14129 ;; Tracked objects:
 14130 ;;		On entry : 0/0
 14131 ;;		On exit  : 0/0
 14132 ;;		Unchanged: 0/0
 14133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14134 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14135 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14136 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14137 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14138 ;;Total ram usage:        6 bytes
 14139 ;; Hardware stack levels used:    1
 14140 ;; Hardware stack levels required when called:    8
 14141 ;; This function calls:
 14142 ;;		_PWM6_LoadDutyValue
 14143 ;;		_checkDebounceSW1
 14144 ;;		_checkDebounceSW2
 14145 ;;		_representLed
 14146 ;; This function is called by:
 14147 ;;		_getSubfieldInfo
 14148 ;; This function uses a non-reentrant model
 14149 ;;
 14150                           
 14151                           
 14152                           ;psect for function _increment_subfield_clk
 14153  056D                     _increment_subfield_clk:	
 14154                           
 14155                           ;incstack = 0
 14156                           ; Regs used in _increment_subfield_clk: [wreg+status,2+status,0+pclath+cstack]
 14157                           ;increment_subfield_clk@limit stored from wreg
 14158  056D  0020               	movlb	0	; select bank0
 14159  056E  00B6               	movwf	increment_subfield_clk@limit
 14160  056F                     l6639:	
 14161                           
 14162                           ;main.c: 577:     unsigned char exit = 0;
 14163  056F  01B5               	clrf	increment_subfield_clk@exit
 14164  0570                     l6641:	
 14165                           
 14166                           ;main.c: 578:     unsigned char _value = init_val;
 14167  0570  0832               	movf	increment_subfield_clk@init_val,w
 14168  0571  00B4               	movwf	??_increment_subfield_clk
 14169  0572  0834               	movf	??_increment_subfield_clk,w
 14170  0573  00B7               	movwf	increment_subfield_clk@_value
 14171  0574                     l6643:	
 14172                           
 14173                           ;main.c: 580:     PWM6_LoadDutyValue(0);
 14174  0574  3000               	movlw	0
 14175  0575  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 14176  0576  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 14177  0577  318C  24C5  3185   	fcall	_PWM6_LoadDutyValue
 14178  057A                     l6645:	
 14179                           
 14180                           ;main.c: 581:     LATA = 0;
 14181  057A  0020               	movlb	0	; select bank0
 14182  057B  0196               	clrf	22	;volatile
 14183  057C                     l6647:	
 14184                           
 14185                           ;main.c: 583:     if(_value > limit) _value = 0;
 14186  057C  0837               	movf	increment_subfield_clk@_value,w
 14187  057D  0236               	subwf	increment_subfield_clk@limit,w
 14188  057E  1803               	skipnc
 14189  057F  2D81               	goto	u3761
 14190  0580  2D82               	goto	u3760
 14191  0581                     u3761:	
 14192  0581  2DBA               	goto	l6673
 14193  0582                     u3760:	
 14194  0582                     l6649:	
 14195  0582  01B7               	clrf	increment_subfield_clk@_value
 14196  0583  2DBA               	goto	l6673
 14197  0584                     l6651:	
 14198                           
 14199                           ;main.c: 586:      representLed(_value);
 14200  0584  0837               	movf	increment_subfield_clk@_value,w
 14201  0585  3186  26B7  3185   	fcall	_representLed
 14202  0588                     l6653:	
 14203                           
 14204                           ;main.c: 587:         if(!PORTCbits.RC5){
 14205  0588  0020               	movlb	0	; select bank0
 14206  0589  1A8E               	btfsc	14,5	;volatile
 14207  058A  2D8C               	goto	u3771
 14208  058B  2D8D               	goto	u3770
 14209  058C                     u3771:	
 14210  058C  2DA6               	goto	l6665
 14211  058D                     u3770:	
 14212  058D                     l6655:	
 14213                           
 14214                           ;main.c: 588:             if(checkDebounceSW2()){
 14215  058D  3187  2704  3185   	fcall	_checkDebounceSW2
 14216  0590  3A00               	xorlw	0
 14217  0591  1903               	skipnz
 14218  0592  2D94               	goto	u3781
 14219  0593  2D95               	goto	u3780
 14220  0594                     u3781:	
 14221  0594  2DA1               	goto	l6663
 14222  0595                     u3780:	
 14223  0595                     l6657:	
 14224                           
 14225                           ;main.c: 589:                 _value++;
 14226  0595  3001               	movlw	1
 14227  0596  0020               	movlb	0	; select bank0
 14228  0597  00B4               	movwf	??_increment_subfield_clk
 14229  0598  0834               	movf	??_increment_subfield_clk,w
 14230  0599  07B7               	addwf	increment_subfield_clk@_value,f
 14231  059A                     l6659:	
 14232                           
 14233                           ;main.c: 590:                 if(_value > limit) _value = 0;
 14234  059A  0837               	movf	increment_subfield_clk@_value,w
 14235  059B  0236               	subwf	increment_subfield_clk@limit,w
 14236  059C  1803               	skipnc
 14237  059D  2D9F               	goto	u3791
 14238  059E  2DA0               	goto	u3790
 14239  059F                     u3791:	
 14240  059F  2DA1               	goto	l6663
 14241  05A0                     u3790:	
 14242  05A0                     l6661:	
 14243  05A0  01B7               	clrf	increment_subfield_clk@_value
 14244  05A1                     l6663:	
 14245                           
 14246                           ;main.c: 592:             last_ms2 = clkms;
 14247  05A1  087D               	movf	_clkms,w	;volatile
 14248  05A2  0020               	movlb	0	; select bank0
 14249  05A3  00B4               	movwf	??_increment_subfield_clk
 14250  05A4  0834               	movf	??_increment_subfield_clk,w
 14251  05A5  00DA               	movwf	_last_ms2
 14252  05A6                     l6665:	
 14253                           
 14254                           ;main.c: 595:         if(!PORTBbits.RB4){
 14255  05A6  1A0D               	btfsc	13,4	;volatile
 14256  05A7  2DA9               	goto	u3801
 14257  05A8  2DAA               	goto	u3800
 14258  05A9                     u3801:	
 14259  05A9  2DBA               	goto	l6673
 14260  05AA                     u3800:	
 14261  05AA                     l6667:	
 14262                           
 14263                           ;main.c: 596:             if(checkDebounceSW1()){
 14264  05AA  3184  24B9  3185   	fcall	_checkDebounceSW1
 14265  05AD  3A00               	xorlw	0
 14266  05AE  1903               	skipnz
 14267  05AF  2DB1               	goto	u3811
 14268  05B0  2DB2               	goto	u3810
 14269  05B1                     u3811:	
 14270  05B1  2DB5               	goto	l6671
 14271  05B2                     u3810:	
 14272  05B2                     l6669:	
 14273                           
 14274                           ;main.c: 597:                 exit = 1;
 14275  05B2  0020               	movlb	0	; select bank0
 14276  05B3  01B5               	clrf	increment_subfield_clk@exit
 14277  05B4  0AB5               	incf	increment_subfield_clk@exit,f
 14278  05B5                     l6671:	
 14279                           
 14280                           ;main.c: 599:             last_ms = clkms;
 14281  05B5  087D               	movf	_clkms,w	;volatile
 14282  05B6  0020               	movlb	0	; select bank0
 14283  05B7  00B4               	movwf	??_increment_subfield_clk
 14284  05B8  0834               	movf	??_increment_subfield_clk,w
 14285  05B9  00DB               	movwf	_last_ms
 14286  05BA                     l6673:	
 14287                           
 14288                           ;main.c: 585:     while(exit == 0){
 14289  05BA  0835               	movf	increment_subfield_clk@exit,w
 14290  05BB  1903               	btfsc	3,2
 14291  05BC  2DBE               	goto	u3821
 14292  05BD  2DBF               	goto	u3820
 14293  05BE                     u3821:	
 14294  05BE  2D84               	goto	l6651
 14295  05BF                     u3820:	
 14296  05BF                     l6675:	
 14297                           
 14298                           ;main.c: 602: return _value;
 14299  05BF  0837               	movf	increment_subfield_clk@_value,w
 14300  05C0                     l1415:	
 14301  05C0  0008               	return
 14302  05C1                     __end_of_increment_subfield_clk:	
 14303                           
 14304                           	psect	text24
 14305  06B7                     __ptext24:	
 14306 ;; *************** function _representLed *****************
 14307 ;; Defined at:
 14308 ;;		line 134 in file "leds.c"
 14309 ;; Parameters:    Size  Location     Type
 14310 ;;  val             1    wreg     unsigned char 
 14311 ;; Auto vars:     Size  Location     Type
 14312 ;;  val             1   16[BANK0 ] unsigned char 
 14313 ;;  aux             1   17[BANK0 ] unsigned char 
 14314 ;; Return value:  Size  Location     Type
 14315 ;;                  1    wreg      void 
 14316 ;; Registers used:
 14317 ;;		wreg, status,2, status,0, pclath, cstack
 14318 ;; Tracked objects:
 14319 ;;		On entry : 0/0
 14320 ;;		On exit  : 0/0
 14321 ;;		Unchanged: 0/0
 14322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14324 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14325 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14326 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14327 ;;Total ram usage:        5 bytes
 14328 ;; Hardware stack levels used:    1
 14329 ;; Hardware stack levels required when called:    7
 14330 ;; This function calls:
 14331 ;;		_PWM6_LoadDutyValue
 14332 ;;		___wmul
 14333 ;; This function is called by:
 14334 ;;		_increment_subfield_clk
 14335 ;;		_increment_subfield
 14336 ;; This function uses a non-reentrant model
 14337 ;;
 14338                           
 14339                           
 14340                           ;psect for function _representLed
 14341  06B7                     _representLed:	
 14342                           
 14343                           ;incstack = 0
 14344                           ; Regs used in _representLed: [wreg+status,2+status,0+pclath+cstack]
 14345                           ;representLed@val stored from wreg
 14346  06B7  0020               	movlb	0	; select bank0
 14347  06B8  00B0               	movwf	representLed@val
 14348  06B9                     l6545:	
 14349                           
 14350                           ;leds.c: 134: void representLed(unsigned char val);leds.c: 135: {;leds.c: 136:     unsig
      +                          ned char aux = val;
 14351  06B9  0830               	movf	representLed@val,w
 14352  06BA  00AD               	movwf	??_representLed
 14353  06BB  082D               	movf	??_representLed,w
 14354  06BC  00B1               	movwf	representLed@aux
 14355                           
 14356                           ;leds.c: 137:     if(val > 99)
 14357  06BD  3064               	movlw	100
 14358  06BE  0230               	subwf	representLed@val,w
 14359  06BF  1C03               	skipc
 14360  06C0  2EC2               	goto	u3631
 14361  06C1  2EC3               	goto	u3630
 14362  06C2                     u3631:	
 14363  06C2  2EC4               	goto	l6549
 14364  06C3                     u3630:	
 14365  06C3  2F03               	goto	l1729
 14366  06C4                     l6549:	
 14367                           
 14368                           ;leds.c: 140:     LATAbits.LATA7 = aux >> 3;
 14369  06C4  0831               	movf	representLed@aux,w
 14370  06C5  00AD               	movwf	??_representLed
 14371  06C6  3003               	movlw	3
 14372  06C7                     u3645:	
 14373  06C7  36AD               	lsrf	??_representLed,f
 14374  06C8  0B89               	decfsz	9,f
 14375  06C9  2EC7               	goto	u3645
 14376  06CA  082D               	movf	??_representLed,w
 14377  06CB  00AE               	movwf	??_representLed+1
 14378  06CC  0CAE               	rrf	??_representLed+1,f
 14379  06CD  0CAE               	rrf	??_representLed+1,f
 14380  06CE  0816               	movf	22,w	;volatile
 14381  06CF  062E               	xorwf	??_representLed+1,w
 14382  06D0  397F               	andlw	-129
 14383  06D1  062E               	xorwf	??_representLed+1,w
 14384  06D2  0096               	movwf	22	;volatile
 14385  06D3                     l6551:	
 14386                           
 14387                           ;leds.c: 141:     PWM6_LoadDutyValue(((aux >> 2) & 1)*1023);
 14388  06D3  0831               	movf	representLed@aux,w
 14389  06D4  00AD               	movwf	??_representLed
 14390  06D5  3002               	movlw	2
 14391  06D6                     u3655:	
 14392  06D6  36AD               	lsrf	??_representLed,f
 14393  06D7  0B89               	decfsz	9,f
 14394  06D8  2ED6               	goto	u3655
 14395  06D9  082D               	movf	??_representLed,w
 14396  06DA  3901               	andlw	1
 14397  06DB  00AE               	movwf	??_representLed+1
 14398  06DC  01AF               	clrf	??_representLed+2
 14399  06DD  082E               	movf	??_representLed+1,w
 14400  06DE  00A3               	movwf	___wmul@multiplier
 14401  06DF  082F               	movf	??_representLed+2,w
 14402  06E0  00A4               	movwf	___wmul@multiplier+1
 14403  06E1  30FF               	movlw	255
 14404  06E2  00A5               	movwf	___wmul@multiplicand
 14405  06E3  3003               	movlw	3
 14406  06E4  00A6               	movwf	___wmul@multiplicand+1
 14407  06E5  318D  2588  3186   	fcall	___wmul
 14408  06E8  0020               	movlb	0	; select bank0
 14409  06E9  0824               	movf	?___wmul+1,w
 14410  06EA  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 14411  06EB  0823               	movf	?___wmul,w
 14412  06EC  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 14413  06ED  318C  24C5  3186   	fcall	_PWM6_LoadDutyValue
 14414  06F0                     l6553:	
 14415                           
 14416                           ;leds.c: 142:     LATAbits.LATA5 = aux >> 1;
 14417  06F0  0020               	movlb	0	; select bank0
 14418  06F1  3631               	lsrf	representLed@aux,w
 14419  06F2  00AD               	movwf	??_representLed
 14420  06F3  0EAD               	swapf	??_representLed,f
 14421  06F4  0DAD               	rlf	??_representLed,f
 14422  06F5  0816               	movf	22,w	;volatile
 14423  06F6  062D               	xorwf	??_representLed,w
 14424  06F7  39DF               	andlw	-33
 14425  06F8  062D               	xorwf	??_representLed,w
 14426  06F9  0096               	movwf	22	;volatile
 14427  06FA                     l6555:	
 14428                           
 14429                           ;leds.c: 143:     LATAbits.LATA4 = aux & 1;
 14430  06FA  0831               	movf	representLed@aux,w
 14431  06FB  3901               	andlw	1
 14432  06FC  00AD               	movwf	??_representLed
 14433  06FD  0EAD               	swapf	??_representLed,f
 14434  06FE  0816               	movf	22,w	;volatile
 14435  06FF  062D               	xorwf	??_representLed,w
 14436  0700  39EF               	andlw	-17
 14437  0701  062D               	xorwf	??_representLed,w
 14438  0702  0096               	movwf	22	;volatile
 14439  0703                     l1729:	
 14440  0703  0008               	return
 14441  0704                     __end_of_representLed:	
 14442                           
 14443                           	psect	text25
 14444  0D88                     __ptext25:	
 14445 ;; *************** function ___wmul *****************
 14446 ;; Defined at:
 14447 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 14448 ;; Parameters:    Size  Location     Type
 14449 ;;  multiplier      2    3[BANK0 ] unsigned int 
 14450 ;;  multiplicand    2    5[BANK0 ] unsigned int 
 14451 ;; Auto vars:     Size  Location     Type
 14452 ;;  product         2    7[BANK0 ] unsigned int 
 14453 ;; Return value:  Size  Location     Type
 14454 ;;                  2    3[BANK0 ] unsigned int 
 14455 ;; Registers used:
 14456 ;;		wreg, status,2, status,0
 14457 ;; Tracked objects:
 14458 ;;		On entry : 0/0
 14459 ;;		On exit  : 0/0
 14460 ;;		Unchanged: 0/0
 14461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14462 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14463 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14465 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14466 ;;Total ram usage:        6 bytes
 14467 ;; Hardware stack levels used:    1
 14468 ;; Hardware stack levels required when called:    6
 14469 ;; This function calls:
 14470 ;;		Nothing
 14471 ;; This function is called by:
 14472 ;;		_representLed
 14473 ;; This function uses a non-reentrant model
 14474 ;;
 14475                           
 14476                           
 14477                           ;psect for function ___wmul
 14478  0D88                     ___wmul:	
 14479  0D88                     l6485:	
 14480                           ;incstack = 0
 14481                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14482                           
 14483  0D88  0020               	movlb	0	; select bank0
 14484  0D89  01A7               	clrf	___wmul@product
 14485  0D8A  01A8               	clrf	___wmul@product+1
 14486  0D8B                     l6487:	
 14487  0D8B  1C23               	btfss	___wmul@multiplier,0
 14488  0D8C  2D8E               	goto	u3531
 14489  0D8D  2D8F               	goto	u3530
 14490  0D8E                     u3531:	
 14491  0D8E  2D93               	goto	l1881
 14492  0D8F                     u3530:	
 14493  0D8F                     l6489:	
 14494  0D8F  0825               	movf	___wmul@multiplicand,w
 14495  0D90  07A7               	addwf	___wmul@product,f
 14496  0D91  0826               	movf	___wmul@multiplicand+1,w
 14497  0D92  3DA8               	addwfc	___wmul@product+1,f
 14498  0D93                     l1881:	
 14499  0D93  3001               	movlw	1
 14500  0D94                     u3545:	
 14501  0D94  35A5               	lslf	___wmul@multiplicand,f
 14502  0D95  0DA6               	rlf	___wmul@multiplicand+1,f
 14503  0D96  0B89               	decfsz	9,f
 14504  0D97  2D94               	goto	u3545
 14505  0D98                     l6491:	
 14506  0D98  3001               	movlw	1
 14507  0D99                     u3555:	
 14508  0D99  36A4               	lsrf	___wmul@multiplier+1,f
 14509  0D9A  0CA3               	rrf	___wmul@multiplier,f
 14510  0D9B  0B89               	decfsz	9,f
 14511  0D9C  2D99               	goto	u3555
 14512  0D9D                     l6493:	
 14513  0D9D  0823               	movf	___wmul@multiplier,w
 14514  0D9E  0424               	iorwf	___wmul@multiplier+1,w
 14515  0D9F  1D03               	btfss	3,2
 14516  0DA0  2DA2               	goto	u3561
 14517  0DA1  2DA3               	goto	u3560
 14518  0DA2                     u3561:	
 14519  0DA2  2D8B               	goto	l6487
 14520  0DA3                     u3560:	
 14521  0DA3                     l6495:	
 14522  0DA3  0828               	movf	___wmul@product+1,w
 14523  0DA4  00A4               	movwf	?___wmul+1
 14524  0DA5  0827               	movf	___wmul@product,w
 14525  0DA6  00A3               	movwf	?___wmul
 14526  0DA7                     l1883:	
 14527  0DA7  0008               	return
 14528  0DA8                     __end_of___wmul:	
 14529                           
 14530                           	psect	text26
 14531  0704                     __ptext26:	
 14532 ;; *************** function _checkDebounceSW2 *****************
 14533 ;; Defined at:
 14534 ;;		line 701 in file "main.c"
 14535 ;; Parameters:    Size  Location     Type
 14536 ;;		None
 14537 ;; Auto vars:     Size  Location     Type
 14538 ;;		None
 14539 ;; Return value:  Size  Location     Type
 14540 ;;                  1    wreg      unsigned char 
 14541 ;; Registers used:
 14542 ;;		wreg, status,2, status,0
 14543 ;; Tracked objects:
 14544 ;;		On entry : 0/0
 14545 ;;		On exit  : 0/0
 14546 ;;		Unchanged: 0/0
 14547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14550 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14551 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14552 ;;Total ram usage:        7 bytes
 14553 ;; Hardware stack levels used:    1
 14554 ;; Hardware stack levels required when called:    6
 14555 ;; This function calls:
 14556 ;;		Nothing
 14557 ;; This function is called by:
 14558 ;;		_config_routine
 14559 ;;		_selectSubfield
 14560 ;;		_increment_subfield_clk
 14561 ;;		_increment_subfield
 14562 ;; This function uses a non-reentrant model
 14563 ;;
 14564                           
 14565                           
 14566                           ;psect for function _checkDebounceSW2
 14567  0704                     _checkDebounceSW2:	
 14568  0704                     l6525:	
 14569                           ;incstack = 0
 14570                           ; Regs used in _checkDebounceSW2: [wreg+status,2+status,0]
 14571                           
 14572                           
 14573                           ;main.c: 704:     if(clkms - last_ms2 < 0){
 14574  0704  087D               	movf	_clkms,w	;volatile
 14575  0705  0020               	movlb	0	; select bank0
 14576  0706  00A3               	movwf	??_checkDebounceSW2
 14577  0707  01A4               	clrf	??_checkDebounceSW2+1
 14578  0708  0824               	movf	??_checkDebounceSW2+1,w
 14579  0709  00A6               	movwf	??_checkDebounceSW2+3
 14580  070A  085A               	movf	_last_ms2,w
 14581  070B  0223               	subwf	??_checkDebounceSW2,w
 14582  070C  00A5               	movwf	??_checkDebounceSW2+2
 14583  070D  1C03               	skipc
 14584  070E  03A6               	decf	??_checkDebounceSW2+3,f
 14585  070F  1FA6               	btfss	??_checkDebounceSW2+3,7
 14586  0710  2F12               	goto	u3601
 14587  0711  2F13               	goto	u3600
 14588  0712                     u3601:	
 14589  0712  2F37               	goto	l6533
 14590  0713                     u3600:	
 14591  0713                     l6527:	
 14592                           
 14593                           ;main.c: 706:         if ((200 - last_ms2)+ clkms > 15 ){
 14594  0713  087D               	movf	_clkms,w	;volatile
 14595  0714  00A3               	movwf	??_checkDebounceSW2
 14596  0715  01A4               	clrf	??_checkDebounceSW2+1
 14597  0716  0824               	movf	??_checkDebounceSW2+1,w
 14598  0717  00A6               	movwf	??_checkDebounceSW2+3
 14599  0718  085A               	movf	_last_ms2,w
 14600  0719  0223               	subwf	??_checkDebounceSW2,w
 14601  071A  00A5               	movwf	??_checkDebounceSW2+2
 14602  071B  1C03               	skipc
 14603  071C  03A6               	decf	??_checkDebounceSW2+3,f
 14604  071D  0825               	movf	??_checkDebounceSW2+2,w
 14605  071E  3EC8               	addlw	200
 14606  071F  00A7               	movwf	??_checkDebounceSW2+4
 14607  0720  3000               	movlw	0
 14608  0721  3D26               	addwfc	??_checkDebounceSW2+3,w
 14609  0722  00A8               	movwf	??_checkDebounceSW2+5
 14610  0723  0828               	movf	??_checkDebounceSW2+5,w
 14611  0724  3A80               	xorlw	128
 14612  0725  00A9               	movwf	??_checkDebounceSW2+6
 14613  0726  3080               	movlw	128
 14614  0727  0229               	subwf	??_checkDebounceSW2+6,w
 14615  0728  1D03               	skipz
 14616  0729  2F2C               	goto	u3615
 14617  072A  3010               	movlw	16
 14618  072B  0227               	subwf	??_checkDebounceSW2+4,w
 14619  072C                     u3615:	
 14620  072C  1C03               	skipc
 14621  072D  2F2F               	goto	u3611
 14622  072E  2F30               	goto	u3610
 14623  072F                     u3611:	
 14624  072F  2F37               	goto	l6533
 14625  0730                     u3610:	
 14626  0730                     l6529:	
 14627                           
 14628                           ;main.c: 707:             last_ms2 = clkms;
 14629  0730  087D               	movf	_clkms,w	;volatile
 14630  0731  0020               	movlb	0	; select bank0
 14631  0732  00A3               	movwf	??_checkDebounceSW2
 14632  0733  0823               	movf	??_checkDebounceSW2,w
 14633  0734  00DA               	movwf	_last_ms2
 14634                           
 14635                           ;main.c: 708:             return 1;
 14636  0735  3001               	movlw	1
 14637  0736  2F50               	goto	l1445
 14638  0737                     l6533:	
 14639                           
 14640                           ;main.c: 712:     if(clkms - last_ms2 < 15){
 14641  0737  087D               	movf	_clkms,w	;volatile
 14642  0738  0020               	movlb	0	; select bank0
 14643  0739  00A3               	movwf	??_checkDebounceSW2
 14644  073A  01A4               	clrf	??_checkDebounceSW2+1
 14645  073B  0824               	movf	??_checkDebounceSW2+1,w
 14646  073C  00A6               	movwf	??_checkDebounceSW2+3
 14647  073D  085A               	movf	_last_ms2,w
 14648  073E  0223               	subwf	??_checkDebounceSW2,w
 14649  073F  00A5               	movwf	??_checkDebounceSW2+2
 14650  0740  1C03               	skipc
 14651  0741  03A6               	decf	??_checkDebounceSW2+3,f
 14652  0742  0826               	movf	??_checkDebounceSW2+3,w
 14653  0743  3A80               	xorlw	128
 14654  0744  00A7               	movwf	??_checkDebounceSW2+4
 14655  0745  3080               	movlw	128
 14656  0746  0227               	subwf	??_checkDebounceSW2+4,w
 14657  0747  1D03               	skipz
 14658  0748  2F4B               	goto	u3625
 14659  0749  300F               	movlw	15
 14660  074A  0225               	subwf	??_checkDebounceSW2+2,w
 14661  074B                     u3625:	
 14662  074B  1803               	skipnc
 14663  074C  2F4E               	goto	u3621
 14664  074D  2F4F               	goto	u3620
 14665  074E                     u3621:	
 14666  074E  2F30               	goto	l6529
 14667  074F                     u3620:	
 14668  074F                     l6535:	
 14669                           
 14670                           ;main.c: 713:         return 0;
 14671  074F  3000               	movlw	0
 14672  0750                     l1445:	
 14673  0750  0008               	return
 14674  0751                     __end_of_checkDebounceSW2:	
 14675                           
 14676                           	psect	text27
 14677  04B9                     __ptext27:	
 14678 ;; *************** function _checkDebounceSW1 *****************
 14679 ;; Defined at:
 14680 ;;		line 672 in file "main.c"
 14681 ;; Parameters:    Size  Location     Type
 14682 ;;		None
 14683 ;; Auto vars:     Size  Location     Type
 14684 ;;		None
 14685 ;; Return value:  Size  Location     Type
 14686 ;;                  1    wreg      unsigned char 
 14687 ;; Registers used:
 14688 ;;		wreg, status,2, status,0
 14689 ;; Tracked objects:
 14690 ;;		On entry : 0/0
 14691 ;;		On exit  : 0/0
 14692 ;;		Unchanged: 0/0
 14693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14696 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14697 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14698 ;;Total ram usage:        7 bytes
 14699 ;; Hardware stack levels used:    1
 14700 ;; Hardware stack levels required when called:    6
 14701 ;; This function calls:
 14702 ;;		Nothing
 14703 ;; This function is called by:
 14704 ;;		_config_routine
 14705 ;;		_selectSubfield
 14706 ;;		_increment_subfield_clk
 14707 ;;		_increment_subfield
 14708 ;; This function uses a non-reentrant model
 14709 ;;
 14710                           
 14711                           
 14712                           ;psect for function _checkDebounceSW1
 14713  04B9                     _checkDebounceSW1:	
 14714  04B9                     l6499:	
 14715                           ;incstack = 0
 14716                           ; Regs used in _checkDebounceSW1: [wreg+status,2+status,0]
 14717                           
 14718                           
 14719                           ;main.c: 673:     PIE4bits.TMR1IE = 0;
 14720  04B9  002E               	movlb	14	; select bank14
 14721  04BA  101A               	bcf	26,0	;volatile
 14722  04BB                     l6501:	
 14723                           
 14724                           ;main.c: 675:     if(clkms - last_ms < 0){
 14725  04BB  087D               	movf	_clkms,w	;volatile
 14726  04BC  0020               	movlb	0	; select bank0
 14727  04BD  00A3               	movwf	??_checkDebounceSW1
 14728  04BE  01A4               	clrf	??_checkDebounceSW1+1
 14729  04BF  0824               	movf	??_checkDebounceSW1+1,w
 14730  04C0  00A6               	movwf	??_checkDebounceSW1+3
 14731  04C1  085B               	movf	_last_ms,w
 14732  04C2  0223               	subwf	??_checkDebounceSW1,w
 14733  04C3  00A5               	movwf	??_checkDebounceSW1+2
 14734  04C4  1C03               	skipc
 14735  04C5  03A6               	decf	??_checkDebounceSW1+3,f
 14736  04C6  1FA6               	btfss	??_checkDebounceSW1+3,7
 14737  04C7  2CC9               	goto	u3571
 14738  04C8  2CCA               	goto	u3570
 14739  04C9                     u3571:	
 14740  04C9  2CF0               	goto	l6511
 14741  04CA                     u3570:	
 14742  04CA                     l6503:	
 14743                           
 14744                           ;main.c: 677:         if ((200 - last_ms)+ clkms > 15 ){
 14745  04CA  087D               	movf	_clkms,w	;volatile
 14746  04CB  00A3               	movwf	??_checkDebounceSW1
 14747  04CC  01A4               	clrf	??_checkDebounceSW1+1
 14748  04CD  0824               	movf	??_checkDebounceSW1+1,w
 14749  04CE  00A6               	movwf	??_checkDebounceSW1+3
 14750  04CF  085B               	movf	_last_ms,w
 14751  04D0  0223               	subwf	??_checkDebounceSW1,w
 14752  04D1  00A5               	movwf	??_checkDebounceSW1+2
 14753  04D2  1C03               	skipc
 14754  04D3  03A6               	decf	??_checkDebounceSW1+3,f
 14755  04D4  0825               	movf	??_checkDebounceSW1+2,w
 14756  04D5  3EC8               	addlw	200
 14757  04D6  00A7               	movwf	??_checkDebounceSW1+4
 14758  04D7  3000               	movlw	0
 14759  04D8  3D26               	addwfc	??_checkDebounceSW1+3,w
 14760  04D9  00A8               	movwf	??_checkDebounceSW1+5
 14761  04DA  0828               	movf	??_checkDebounceSW1+5,w
 14762  04DB  3A80               	xorlw	128
 14763  04DC  00A9               	movwf	??_checkDebounceSW1+6
 14764  04DD  3080               	movlw	128
 14765  04DE  0229               	subwf	??_checkDebounceSW1+6,w
 14766  04DF  1D03               	skipz
 14767  04E0  2CE3               	goto	u3585
 14768  04E1  3010               	movlw	16
 14769  04E2  0227               	subwf	??_checkDebounceSW1+4,w
 14770  04E3                     u3585:	
 14771  04E3  1C03               	skipc
 14772  04E4  2CE6               	goto	u3581
 14773  04E5  2CE7               	goto	u3580
 14774  04E6                     u3581:	
 14775  04E6  2CF0               	goto	l6511
 14776  04E7                     u3580:	
 14777  04E7                     l6505:	
 14778                           
 14779                           ;main.c: 678:             last_ms = clkms;
 14780  04E7  087D               	movf	_clkms,w	;volatile
 14781  04E8  0020               	movlb	0	; select bank0
 14782  04E9  00A3               	movwf	??_checkDebounceSW1
 14783  04EA  0823               	movf	??_checkDebounceSW1,w
 14784  04EB  00DB               	movwf	_last_ms
 14785  04EC                     l6507:	
 14786                           
 14787                           ;main.c: 679:             PIE4bits.TMR1IE = 1;
 14788  04EC  002E               	movlb	14	; select bank14
 14789  04ED  141A               	bsf	26,0	;volatile
 14790                           
 14791                           ;main.c: 680:             return 1;
 14792  04EE  3001               	movlw	1
 14793  04EF  2D12               	goto	l1438
 14794  04F0                     l6511:	
 14795                           
 14796                           ;main.c: 684:     if(clkms - last_ms < 15){
 14797  04F0  087D               	movf	_clkms,w	;volatile
 14798  04F1  0020               	movlb	0	; select bank0
 14799  04F2  00A3               	movwf	??_checkDebounceSW1
 14800  04F3  01A4               	clrf	??_checkDebounceSW1+1
 14801  04F4  0824               	movf	??_checkDebounceSW1+1,w
 14802  04F5  00A6               	movwf	??_checkDebounceSW1+3
 14803  04F6  085B               	movf	_last_ms,w
 14804  04F7  0223               	subwf	??_checkDebounceSW1,w
 14805  04F8  00A5               	movwf	??_checkDebounceSW1+2
 14806  04F9  1C03               	skipc
 14807  04FA  03A6               	decf	??_checkDebounceSW1+3,f
 14808  04FB  0826               	movf	??_checkDebounceSW1+3,w
 14809  04FC  3A80               	xorlw	128
 14810  04FD  00A7               	movwf	??_checkDebounceSW1+4
 14811  04FE  3080               	movlw	128
 14812  04FF  0227               	subwf	??_checkDebounceSW1+4,w
 14813  0500  1D03               	skipz
 14814  0501  2D04               	goto	u3595
 14815  0502  300F               	movlw	15
 14816  0503  0225               	subwf	??_checkDebounceSW1+2,w
 14817  0504                     u3595:	
 14818  0504  1803               	skipnc
 14819  0505  2D07               	goto	u3591
 14820  0506  2D08               	goto	u3590
 14821  0507                     u3591:	
 14822  0507  2D0A               	goto	l6519
 14823  0508                     u3590:	
 14824  0508                     l6513:	
 14825                           
 14826                           ;main.c: 685:         return 0;
 14827  0508  3000               	movlw	0
 14828  0509  2D12               	goto	l1438
 14829  050A                     l6519:	
 14830                           
 14831                           ;main.c: 688:         last_ms = clkms;
 14832  050A  087D               	movf	_clkms,w	;volatile
 14833  050B  0020               	movlb	0	; select bank0
 14834  050C  00A3               	movwf	??_checkDebounceSW1
 14835  050D  0823               	movf	??_checkDebounceSW1,w
 14836  050E  00DB               	movwf	_last_ms
 14837  050F                     l6521:	
 14838                           
 14839                           ;main.c: 689:         PIE4bits.TMR1IE = 1;
 14840  050F  002E               	movlb	14	; select bank14
 14841  0510  141A               	bsf	26,0	;volatile
 14842                           
 14843                           ;main.c: 690:         return 1;
 14844  0511  3001               	movlw	1
 14845  0512                     l1438:	
 14846  0512  0008               	return
 14847  0513                     __end_of_checkDebounceSW1:	
 14848                           
 14849                           	psect	text28
 14850  05C1                     __ptext28:	
 14851 ;; *************** function ___awmod *****************
 14852 ;; Defined at:
 14853 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 14854 ;; Parameters:    Size  Location     Type
 14855 ;;  divisor         2    3[BANK0 ] int 
 14856 ;;  dividend        2    5[BANK0 ] int 
 14857 ;; Auto vars:     Size  Location     Type
 14858 ;;  sign            1    9[BANK0 ] unsigned char 
 14859 ;;  counter         1    8[BANK0 ] unsigned char 
 14860 ;; Return value:  Size  Location     Type
 14861 ;;                  2    3[BANK0 ] int 
 14862 ;; Registers used:
 14863 ;;		wreg, status,2, status,0
 14864 ;; Tracked objects:
 14865 ;;		On entry : 0/0
 14866 ;;		On exit  : 0/0
 14867 ;;		Unchanged: 0/0
 14868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14869 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14870 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14871 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14872 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14873 ;;Total ram usage:        7 bytes
 14874 ;; Hardware stack levels used:    1
 14875 ;; Hardware stack levels required when called:    6
 14876 ;; This function calls:
 14877 ;;		Nothing
 14878 ;; This function is called by:
 14879 ;;		_getSubfieldInfo
 14880 ;;		_recTempThresh
 14881 ;;		_recMinutes
 14882 ;;		_recHour
 14883 ;; This function uses a non-reentrant model
 14884 ;;
 14885                           
 14886                           
 14887                           ;psect for function ___awmod
 14888  05C1                     ___awmod:	
 14889  05C1                     l6691:	
 14890                           ;incstack = 0
 14891                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 14892                           
 14893  05C1  0020               	movlb	0	; select bank0
 14894  05C2  01A9               	clrf	___awmod@sign
 14895  05C3                     l6693:	
 14896  05C3  1FA6               	btfss	___awmod@dividend+1,7
 14897  05C4  2DC6               	goto	u3841
 14898  05C5  2DC7               	goto	u3840
 14899  05C6                     u3841:	
 14900  05C6  2DCE               	goto	l6699
 14901  05C7                     u3840:	
 14902  05C7                     l6695:	
 14903  05C7  09A5               	comf	___awmod@dividend,f
 14904  05C8  09A6               	comf	___awmod@dividend+1,f
 14905  05C9  0AA5               	incf	___awmod@dividend,f
 14906  05CA  1903               	skipnz
 14907  05CB  0AA6               	incf	___awmod@dividend+1,f
 14908  05CC                     l6697:	
 14909  05CC  01A9               	clrf	___awmod@sign
 14910  05CD  0AA9               	incf	___awmod@sign,f
 14911  05CE                     l6699:	
 14912  05CE  1FA4               	btfss	___awmod@divisor+1,7
 14913  05CF  2DD1               	goto	u3851
 14914  05D0  2DD2               	goto	u3850
 14915  05D1                     u3851:	
 14916  05D1  2DD7               	goto	l6703
 14917  05D2                     u3850:	
 14918  05D2                     l6701:	
 14919  05D2  09A3               	comf	___awmod@divisor,f
 14920  05D3  09A4               	comf	___awmod@divisor+1,f
 14921  05D4  0AA3               	incf	___awmod@divisor,f
 14922  05D5  1903               	skipnz
 14923  05D6  0AA4               	incf	___awmod@divisor+1,f
 14924  05D7                     l6703:	
 14925  05D7  0823               	movf	___awmod@divisor,w
 14926  05D8  0424               	iorwf	___awmod@divisor+1,w
 14927  05D9  1903               	btfsc	3,2
 14928  05DA  2DDC               	goto	u3861
 14929  05DB  2DDD               	goto	u3860
 14930  05DC                     u3861:	
 14931  05DC  2E06               	goto	l6721
 14932  05DD                     u3860:	
 14933  05DD                     l6705:	
 14934  05DD  01A8               	clrf	___awmod@counter
 14935  05DE  0AA8               	incf	___awmod@counter,f
 14936  05DF  2DE9               	goto	l6711
 14937  05E0                     l6707:	
 14938  05E0  3001               	movlw	1
 14939  05E1                     u3875:	
 14940  05E1  35A3               	lslf	___awmod@divisor,f
 14941  05E2  0DA4               	rlf	___awmod@divisor+1,f
 14942  05E3  0B89               	decfsz	9,f
 14943  05E4  2DE1               	goto	u3875
 14944  05E5                     l6709:	
 14945  05E5  3001               	movlw	1
 14946  05E6  00A7               	movwf	??___awmod
 14947  05E7  0827               	movf	??___awmod,w
 14948  05E8  07A8               	addwf	___awmod@counter,f
 14949  05E9                     l6711:	
 14950  05E9  1FA4               	btfss	___awmod@divisor+1,7
 14951  05EA  2DEC               	goto	u3881
 14952  05EB  2DED               	goto	u3880
 14953  05EC                     u3881:	
 14954  05EC  2DE0               	goto	l6707
 14955  05ED                     u3880:	
 14956  05ED                     l6713:	
 14957  05ED  0824               	movf	___awmod@divisor+1,w
 14958  05EE  0226               	subwf	___awmod@dividend+1,w
 14959  05EF  1D03               	skipz
 14960  05F0  2DF3               	goto	u3895
 14961  05F1  0823               	movf	___awmod@divisor,w
 14962  05F2  0225               	subwf	___awmod@dividend,w
 14963  05F3                     u3895:	
 14964  05F3  1C03               	skipc
 14965  05F4  2DF6               	goto	u3891
 14966  05F5  2DF7               	goto	u3890
 14967  05F6                     u3891:	
 14968  05F6  2DFB               	goto	l6717
 14969  05F7                     u3890:	
 14970  05F7                     l6715:	
 14971  05F7  0823               	movf	___awmod@divisor,w
 14972  05F8  02A5               	subwf	___awmod@dividend,f
 14973  05F9  0824               	movf	___awmod@divisor+1,w
 14974  05FA  3BA6               	subwfb	___awmod@dividend+1,f
 14975  05FB                     l6717:	
 14976  05FB  3001               	movlw	1
 14977  05FC                     u3905:	
 14978  05FC  36A4               	lsrf	___awmod@divisor+1,f
 14979  05FD  0CA3               	rrf	___awmod@divisor,f
 14980  05FE  0B89               	decfsz	9,f
 14981  05FF  2DFC               	goto	u3905
 14982  0600                     l6719:	
 14983  0600  3001               	movlw	1
 14984  0601  02A8               	subwf	___awmod@counter,f
 14985  0602  1D03               	btfss	3,2
 14986  0603  2E05               	goto	u3911
 14987  0604  2E06               	goto	u3910
 14988  0605                     u3911:	
 14989  0605  2DED               	goto	l6713
 14990  0606                     u3910:	
 14991  0606                     l6721:	
 14992  0606  0829               	movf	___awmod@sign,w
 14993  0607  1903               	btfsc	3,2
 14994  0608  2E0A               	goto	u3921
 14995  0609  2E0B               	goto	u3920
 14996  060A                     u3921:	
 14997  060A  2E10               	goto	l6725
 14998  060B                     u3920:	
 14999  060B                     l6723:	
 15000  060B  09A5               	comf	___awmod@dividend,f
 15001  060C  09A6               	comf	___awmod@dividend+1,f
 15002  060D  0AA5               	incf	___awmod@dividend,f
 15003  060E  1903               	skipnz
 15004  060F  0AA6               	incf	___awmod@dividend+1,f
 15005  0610                     l6725:	
 15006  0610  0826               	movf	___awmod@dividend+1,w
 15007  0611  00A4               	movwf	?___awmod+1
 15008  0612  0825               	movf	___awmod@dividend,w
 15009  0613  00A3               	movwf	?___awmod
 15010  0614                     l2047:	
 15011  0614  0008               	return
 15012  0615                     __end_of___awmod:	
 15013                           
 15014                           	psect	text29
 15015  045E                     __ptext29:	
 15016 ;; *************** function _all_LED *****************
 15017 ;; Defined at:
 15018 ;;		line 20 in file "leds.c"
 15019 ;; Parameters:    Size  Location     Type
 15020 ;;		None
 15021 ;; Auto vars:     Size  Location     Type
 15022 ;;		None
 15023 ;; Return value:  Size  Location     Type
 15024 ;;                  1    wreg      void 
 15025 ;; Registers used:
 15026 ;;		wreg, status,2, status,0, pclath, cstack
 15027 ;; Tracked objects:
 15028 ;;		On entry : 0/0
 15029 ;;		On exit  : 0/0
 15030 ;;		Unchanged: 0/0
 15031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15034 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15035 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15036 ;;Total ram usage:        1 bytes
 15037 ;; Hardware stack levels used:    1
 15038 ;; Hardware stack levels required when called:    7
 15039 ;; This function calls:
 15040 ;;		_PWM6_LoadDutyValue
 15041 ;; This function is called by:
 15042 ;;		_config_routine
 15043 ;;		_selectSubfield
 15044 ;; This function uses a non-reentrant model
 15045 ;;
 15046                           
 15047                           
 15048                           ;psect for function _all_LED
 15049  045E                     _all_LED:	
 15050  045E                     l1671:	
 15051                           ;incstack = 0
 15052                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 15053                           ;leds.c: 22:     do { LATAbits.LATA7 = 1; } while(0);
 15054                           
 15055  045E  0020               	movlb	0	; select bank0
 15056  045F  1796               	bsf	22,7	;volatile
 15057  0460                     l6757:	
 15058                           
 15059                           ;leds.c: 23:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15060  0460  3021               	movlw	33
 15061  0461  0020               	movlb	0	; select bank0
 15062  0462  00AD               	movwf	??_all_LED
 15063  0463  3076               	movlw	118
 15064  0464                     u4637:	
 15065  0464  0B89               	decfsz	9,f
 15066  0465  2C64               	goto	u4637
 15067  0466  0BAD               	decfsz	??_all_LED,f
 15068  0467  2C64               	goto	u4637
 15069  0468  0000               	nop
 15070  0469                     l6759:	
 15071  0469  0020               	movlb	0	; select bank0
 15072  046A  1396               	bcf	22,7	;volatile
 15073  046B                     l1674:	
 15074                           
 15075                           ;leds.c: 25:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15076  046B  3021               	movlw	33
 15077  046C  0020               	movlb	0	; select bank0
 15078  046D  00AD               	movwf	??_all_LED
 15079  046E  3076               	movlw	118
 15080  046F                     u4647:	
 15081  046F  0B89               	decfsz	9,f
 15082  0470  2C6F               	goto	u4647
 15083  0471  0BAD               	decfsz	??_all_LED,f
 15084  0472  2C6F               	goto	u4647
 15085  0473  0000               	nop
 15086  0474                     l6761:	
 15087                           
 15088                           ;leds.c: 26:     PWM6_LoadDutyValue(1023);
 15089  0474  30FF               	movlw	255
 15090  0475  0020               	movlb	0	; select bank0
 15091  0476  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15092  0477  3003               	movlw	3
 15093  0478  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15094  0479  318C  24C5  3184   	fcall	_PWM6_LoadDutyValue
 15095  047C                     l6763:	
 15096                           
 15097                           ;leds.c: 27:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15098  047C  3021               	movlw	33
 15099  047D  0020               	movlb	0	; select bank0
 15100  047E  00AD               	movwf	??_all_LED
 15101  047F  3076               	movlw	118
 15102  0480                     u4657:	
 15103  0480  0B89               	decfsz	9,f
 15104  0481  2C80               	goto	u4657
 15105  0482  0BAD               	decfsz	??_all_LED,f
 15106  0483  2C80               	goto	u4657
 15107  0484  0000               	nop
 15108                           
 15109                           ;leds.c: 28:     PWM6_LoadDutyValue(0);
 15110  0485  3000               	movlw	0
 15111  0486  0020               	movlb	0	; select bank0
 15112  0487  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15113  0488  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15114  0489  318C  24C5  3184   	fcall	_PWM6_LoadDutyValue
 15115  048C                     l6765:	
 15116                           
 15117                           ;leds.c: 29:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15118  048C  3021               	movlw	33
 15119  048D  0020               	movlb	0	; select bank0
 15120  048E  00AD               	movwf	??_all_LED
 15121  048F  3076               	movlw	118
 15122  0490                     u4667:	
 15123  0490  0B89               	decfsz	9,f
 15124  0491  2C90               	goto	u4667
 15125  0492  0BAD               	decfsz	??_all_LED,f
 15126  0493  2C90               	goto	u4667
 15127  0494  0000               	nop
 15128  0495                     l6767:	
 15129  0495  0020               	movlb	0	; select bank0
 15130  0496  1696               	bsf	22,5	;volatile
 15131  0497                     l6769:	
 15132                           
 15133                           ;leds.c: 31:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15134  0497  3021               	movlw	33
 15135  0498  0020               	movlb	0	; select bank0
 15136  0499  00AD               	movwf	??_all_LED
 15137  049A  3076               	movlw	118
 15138  049B                     u4677:	
 15139  049B  0B89               	decfsz	9,f
 15140  049C  2C9B               	goto	u4677
 15141  049D  0BAD               	decfsz	??_all_LED,f
 15142  049E  2C9B               	goto	u4677
 15143  049F  0000               	nop
 15144  04A0                     l6771:	
 15145  04A0  0020               	movlb	0	; select bank0
 15146  04A1  1296               	bcf	22,5	;volatile
 15147  04A2                     l6773:	
 15148                           
 15149                           ;leds.c: 33:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15150  04A2  3021               	movlw	33
 15151  04A3  0020               	movlb	0	; select bank0
 15152  04A4  00AD               	movwf	??_all_LED
 15153  04A5  3076               	movlw	118
 15154  04A6                     u4687:	
 15155  04A6  0B89               	decfsz	9,f
 15156  04A7  2CA6               	goto	u4687
 15157  04A8  0BAD               	decfsz	??_all_LED,f
 15158  04A9  2CA6               	goto	u4687
 15159  04AA  0000               	nop
 15160  04AB                     l6775:	
 15161  04AB  0020               	movlb	0	; select bank0
 15162  04AC  1616               	bsf	22,4	;volatile
 15163  04AD                     l6777:	
 15164                           
 15165                           ;leds.c: 35:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15166  04AD  3021               	movlw	33
 15167  04AE  0020               	movlb	0	; select bank0
 15168  04AF  00AD               	movwf	??_all_LED
 15169  04B0  3076               	movlw	118
 15170  04B1                     u4697:	
 15171  04B1  0B89               	decfsz	9,f
 15172  04B2  2CB1               	goto	u4697
 15173  04B3  0BAD               	decfsz	??_all_LED,f
 15174  04B4  2CB1               	goto	u4697
 15175  04B5  0000               	nop
 15176  04B6                     l6779:	
 15177  04B6  0020               	movlb	0	; select bank0
 15178  04B7  1216               	bcf	22,4	;volatile
 15179  04B8                     l1683:	
 15180  04B8  0008               	return
 15181  04B9                     __end_of_all_LED:	
 15182                           
 15183                           	psect	text30
 15184  0D68                     __ptext30:	
 15185 ;; *************** function _mode_select_LED *****************
 15186 ;; Defined at:
 15187 ;;		line 98 in file "leds.c"
 15188 ;; Parameters:    Size  Location     Type
 15189 ;;		None
 15190 ;; Auto vars:     Size  Location     Type
 15191 ;;		None
 15192 ;; Return value:  Size  Location     Type
 15193 ;;                  1    wreg      void 
 15194 ;; Registers used:
 15195 ;;		wreg, status,2, status,0, pclath, cstack
 15196 ;; Tracked objects:
 15197 ;;		On entry : 0/0
 15198 ;;		On exit  : 0/0
 15199 ;;		Unchanged: 0/0
 15200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15203 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15204 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15205 ;;Total ram usage:        1 bytes
 15206 ;; Hardware stack levels used:    1
 15207 ;; Hardware stack levels required when called:    7
 15208 ;; This function calls:
 15209 ;;		_PWM6_LoadDutyValue
 15210 ;; This function is called by:
 15211 ;;		_config_routine
 15212 ;; This function uses a non-reentrant model
 15213 ;;
 15214                           
 15215                           
 15216                           ;psect for function _mode_select_LED
 15217  0D68                     _mode_select_LED:	
 15218  0D68                     l7003:	
 15219                           ;incstack = 0
 15220                           ; Regs used in _mode_select_LED: [wreg+status,2+status,0+pclath+cstack]
 15221                           
 15222                           
 15223                           ;leds.c: 101:     PWM6_LoadDutyValue(1023);
 15224  0D68  30FF               	movlw	255
 15225  0D69  0020               	movlb	0	; select bank0
 15226  0D6A  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15227  0D6B  3003               	movlw	3
 15228  0D6C  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15229  0D6D  318C  24C5  318D   	fcall	_PWM6_LoadDutyValue
 15230  0D70                     l7005:	
 15231  0D70  0020               	movlb	0	; select bank0
 15232  0D71  1616               	bsf	22,4	;volatile
 15233  0D72                     l7007:	
 15234                           
 15235                           ;leds.c: 103:     _delay((unsigned long)((500)*(1000000/4000.0)));
 15236  0D72  30A3               	movlw	163
 15237  0D73  0020               	movlb	0	; select bank0
 15238  0D74  00AD               	movwf	??_mode_select_LED
 15239  0D75  3055               	movlw	85
 15240  0D76                     u4707:	
 15241  0D76  0B89               	decfsz	9,f
 15242  0D77  2D76               	goto	u4707
 15243  0D78  0BAD               	decfsz	??_mode_select_LED,f
 15244  0D79  2D76               	goto	u4707
 15245  0D7A                     l7009:	
 15246  0D7A  0020               	movlb	0	; select bank0
 15247  0D7B  1696               	bsf	22,5	;volatile
 15248  0D7C                     l7011:	
 15249                           
 15250                           ;leds.c: 105:     _delay((unsigned long)((500)*(1000000/4000.0)));
 15251  0D7C  30A3               	movlw	163
 15252  0D7D  0020               	movlb	0	; select bank0
 15253  0D7E  00AD               	movwf	??_mode_select_LED
 15254  0D7F  3055               	movlw	85
 15255  0D80                     u4717:	
 15256  0D80  0B89               	decfsz	9,f
 15257  0D81  2D80               	goto	u4717
 15258  0D82  0BAD               	decfsz	??_mode_select_LED,f
 15259  0D83  2D80               	goto	u4717
 15260  0D84                     l7013:	
 15261  0D84  0020               	movlb	0	; select bank0
 15262  0D85  1216               	bcf	22,4	;volatile
 15263  0D86                     l7015:	
 15264  0D86  1296               	bcf	22,5	;volatile
 15265  0D87                     l1715:	
 15266  0D87  0008               	return
 15267  0D88                     __end_of_mode_select_LED:	
 15268                           
 15269                           	psect	text31
 15270  0CC5                     __ptext31:	
 15271 ;; *************** function _PWM6_LoadDutyValue *****************
 15272 ;; Defined at:
 15273 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 15274 ;; Parameters:    Size  Location     Type
 15275 ;;  dutyValue       2    9[BANK0 ] unsigned short 
 15276 ;; Auto vars:     Size  Location     Type
 15277 ;;		None
 15278 ;; Return value:  Size  Location     Type
 15279 ;;                  1    wreg      void 
 15280 ;; Registers used:
 15281 ;;		wreg, status,2, status,0
 15282 ;; Tracked objects:
 15283 ;;		On entry : 0/0
 15284 ;;		On exit  : 0/0
 15285 ;;		Unchanged: 0/0
 15286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15287 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15289 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15290 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15291 ;;Total ram usage:        4 bytes
 15292 ;; Hardware stack levels used:    1
 15293 ;; Hardware stack levels required when called:    6
 15294 ;; This function calls:
 15295 ;;		Nothing
 15296 ;; This function is called by:
 15297 ;;		_main
 15298 ;;		_increment_subfield_clk
 15299 ;;		_all_LED
 15300 ;;		_mod1_LED
 15301 ;;		_mod2_LED
 15302 ;;		_mod3_LED
 15303 ;;		_mod4_LED
 15304 ;;		_mode_select_LED
 15305 ;;		_representLed
 15306 ;;		_increment_subfield
 15307 ;; This function uses a non-reentrant model
 15308 ;;
 15309                           
 15310                           
 15311                           ;psect for function _PWM6_LoadDutyValue
 15312  0CC5                     _PWM6_LoadDutyValue:	
 15313  0CC5                     l6483:	
 15314                           ;incstack = 0
 15315                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 15316                           
 15317                           
 15318                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 15319  0CC5  0020               	movlb	0	; select bank0
 15320  0CC6  082A               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 15321  0CC7  00AC               	movwf	??_PWM6_LoadDutyValue+1
 15322  0CC8  0829               	movf	PWM6_LoadDutyValue@dutyValue,w
 15323  0CC9  00AB               	movwf	??_PWM6_LoadDutyValue
 15324  0CCA  36AC               	lsrf	??_PWM6_LoadDutyValue+1,f
 15325  0CCB  0CAB               	rrf	??_PWM6_LoadDutyValue,f
 15326  0CCC  36AC               	lsrf	??_PWM6_LoadDutyValue+1,f
 15327  0CCD  0CAB               	rrf	??_PWM6_LoadDutyValue,f
 15328  0CCE  082B               	movf	??_PWM6_LoadDutyValue,w
 15329  0CCF  0027               	movlb	7	; select bank7
 15330  0CD0  008D               	movwf	13	;volatile
 15331                           
 15332                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 15333  0CD1  0020               	movlb	0	; select bank0
 15334  0CD2  0829               	movf	PWM6_LoadDutyValue@dutyValue,w
 15335  0CD3  3903               	andlw	3
 15336  0CD4  00AB               	movwf	??_PWM6_LoadDutyValue
 15337  0CD5  3005               	movlw	5
 15338  0CD6                     u3525:	
 15339  0CD6  35AB               	lslf	??_PWM6_LoadDutyValue,f
 15340  0CD7  3EFF               	addlw	-1
 15341  0CD8  1D03               	skipz
 15342  0CD9  2CD6               	goto	u3525
 15343  0CDA  352B               	lslf	??_PWM6_LoadDutyValue,w
 15344  0CDB  0027               	movlb	7	; select bank7
 15345  0CDC  008C               	movwf	12	;volatile
 15346  0CDD                     l964:	
 15347  0CDD  0008               	return
 15348  0CDE                     __end_of_PWM6_LoadDutyValue:	
 15349                           
 15350                           	psect	text32
 15351  0A28                     __ptext32:	
 15352 ;; *************** function _TMR0_StartTimer *****************
 15353 ;; Defined at:
 15354 ;;		line 87 in file "mcc_generated_files/tmr0.c"
 15355 ;; Parameters:    Size  Location     Type
 15356 ;;		None
 15357 ;; Auto vars:     Size  Location     Type
 15358 ;;		None
 15359 ;; Return value:  Size  Location     Type
 15360 ;;                  1    wreg      void 
 15361 ;; Registers used:
 15362 ;;		None
 15363 ;; Tracked objects:
 15364 ;;		On entry : 0/0
 15365 ;;		On exit  : 0/0
 15366 ;;		Unchanged: 0/0
 15367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15372 ;;Total ram usage:        0 bytes
 15373 ;; Hardware stack levels used:    1
 15374 ;; Hardware stack levels required when called:    6
 15375 ;; This function calls:
 15376 ;;		Nothing
 15377 ;; This function is called by:
 15378 ;;		_main
 15379 ;; This function uses a non-reentrant model
 15380 ;;
 15381                           
 15382                           
 15383                           ;psect for function _TMR0_StartTimer
 15384  0A28                     _TMR0_StartTimer:	
 15385  0A28                     l7131:	
 15386                           ;incstack = 0
 15387                           ; Regs used in _TMR0_StartTimer: []
 15388                           
 15389                           
 15390                           ;mcc_generated_files/tmr0.c: 90:     T0CON0bits.T0EN = 1;
 15391  0A28  0020               	movlb	0	; select bank0
 15392  0A29  179E               	bsf	30,7	;volatile
 15393  0A2A                     l864:	
 15394  0A2A  0008               	return
 15395  0A2B                     __end_of_TMR0_StartTimer:	
 15396                           
 15397                           	psect	text33
 15398  0D2D                     __ptext33:	
 15399 ;; *************** function _SYSTEM_Initialize *****************
 15400 ;; Defined at:
 15401 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15402 ;; Parameters:    Size  Location     Type
 15403 ;;		None
 15404 ;; Auto vars:     Size  Location     Type
 15405 ;;		None
 15406 ;; Return value:  Size  Location     Type
 15407 ;;                  1    wreg      void 
 15408 ;; Registers used:
 15409 ;;		wreg, status,2, status,0, pclath, cstack
 15410 ;; Tracked objects:
 15411 ;;		On entry : 0/0
 15412 ;;		On exit  : 0/0
 15413 ;;		Unchanged: 0/0
 15414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15419 ;;Total ram usage:        0 bytes
 15420 ;; Hardware stack levels used:    1
 15421 ;; Hardware stack levels required when called:    8
 15422 ;; This function calls:
 15423 ;;		_ADCC_Initialize
 15424 ;;		_EXT_INT_Initialize
 15425 ;;		_OSCILLATOR_Initialize
 15426 ;;		_PIN_MANAGER_Initialize
 15427 ;;		_PMD_Initialize
 15428 ;;		_PWM6_Initialize
 15429 ;;		_TMR0_Initialize
 15430 ;;		_TMR1_Initialize
 15431 ;;		_TMR2_Initialize
 15432 ;; This function is called by:
 15433 ;;		_main
 15434 ;; This function uses a non-reentrant model
 15435 ;;
 15436                           
 15437                           
 15438                           ;psect for function _SYSTEM_Initialize
 15439  0D2D                     _SYSTEM_Initialize:	
 15440  0D2D                     l7113:	
 15441                           ;incstack = 0
 15442                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15443                           
 15444                           
 15445                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 15446  0D2D  318A  22A4  318D   	fcall	_PMD_Initialize
 15447  0D30                     l7115:	
 15448                           
 15449                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 15450  0D30  3187  279B  318D   	fcall	_PIN_MANAGER_Initialize
 15451  0D33                     l7117:	
 15452                           
 15453                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 15454  0D33  318A  22C7  318D   	fcall	_OSCILLATOR_Initialize
 15455  0D36                     l7119:	
 15456                           
 15457                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 15458  0D36  318B  2351  318D   	fcall	_PWM6_Initialize
 15459  0D39                     l7121:	
 15460                           
 15461                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 15462  0D39  318C  2439  318D   	fcall	_ADCC_Initialize
 15463  0D3C                     l7123:	
 15464                           
 15465                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 15466  0D3C  318C  2494  318D   	fcall	_TMR2_Initialize
 15467  0D3F                     l7125:	
 15468                           
 15469                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 15470  0D3F  318D  2549  318D   	fcall	_TMR1_Initialize
 15471  0D42                     l7127:	
 15472                           
 15473                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
 15474  0D42  318B  235E  318D   	fcall	_EXT_INT_Initialize
 15475  0D45                     l7129:	
 15476                           
 15477                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 15478  0D45  318C  240E  318D   	fcall	_TMR0_Initialize
 15479  0D48                     l439:	
 15480  0D48  0008               	return
 15481  0D49                     __end_of_SYSTEM_Initialize:	
 15482                           
 15483                           	psect	text34
 15484  0C94                     __ptext34:	
 15485 ;; *************** function _TMR2_Initialize *****************
 15486 ;; Defined at:
 15487 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 15488 ;; Parameters:    Size  Location     Type
 15489 ;;		None
 15490 ;; Auto vars:     Size  Location     Type
 15491 ;;		None
 15492 ;; Return value:  Size  Location     Type
 15493 ;;                  1    wreg      void 
 15494 ;; Registers used:
 15495 ;;		wreg, status,2, status,0, pclath, cstack
 15496 ;; Tracked objects:
 15497 ;;		On entry : 0/0
 15498 ;;		On exit  : 0/0
 15499 ;;		Unchanged: 0/0
 15500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15505 ;;Total ram usage:        0 bytes
 15506 ;; Hardware stack levels used:    1
 15507 ;; Hardware stack levels required when called:    7
 15508 ;; This function calls:
 15509 ;;		_TMR2_SetInterruptHandler
 15510 ;; This function is called by:
 15511 ;;		_SYSTEM_Initialize
 15512 ;; This function uses a non-reentrant model
 15513 ;;
 15514                           
 15515                           
 15516                           ;psect for function _TMR2_Initialize
 15517  0C94                     _TMR2_Initialize:	
 15518  0C94                     l6943:	
 15519                           ;incstack = 0
 15520                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15521                           
 15522                           
 15523                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 15524  0C94  3001               	movlw	1
 15525  0C95  0025               	movlb	5	; select bank5
 15526  0C96  0090               	movwf	16	;volatile
 15527                           
 15528                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 15529  0C97  3020               	movlw	32
 15530  0C98  008F               	movwf	15	;volatile
 15531  0C99                     l6945:	
 15532                           
 15533                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 15534  0C99  0191               	clrf	17	;volatile
 15535  0C9A                     l6947:	
 15536                           
 15537                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 15538  0C9A  309B               	movlw	155
 15539  0C9B  008D               	movwf	13	;volatile
 15540                           
 15541                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 15542  0C9C  018C               	clrf	12	;volatile
 15543  0C9D                     l6949:	
 15544                           
 15545                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 15546  0C9D  002E               	movlb	14	; select bank14
 15547  0C9E  1090               	bcf	16,1	;volatile
 15548  0C9F                     l6951:	
 15549                           
 15550                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 15551  0C9F  149A               	bsf	26,1	;volatile
 15552  0CA0                     l6953:	
 15553                           
 15554                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 15555  0CA0  300A               	movlw	low _TMR2_DefaultInterruptHandler
 15556  0CA1  0020               	movlb	0	; select bank0
 15557  0CA2  00A3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 15558  0CA3  300A               	movlw	high _TMR2_DefaultInterruptHandler
 15559  0CA4  00A4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 15560  0CA5  318A  22E2  318C   	fcall	_TMR2_SetInterruptHandler
 15561  0CA8                     l6955:	
 15562                           
 15563                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 15564  0CA8  30B1               	movlw	177
 15565  0CA9  0025               	movlb	5	; select bank5
 15566  0CAA  008E               	movwf	14	;volatile
 15567  0CAB                     l1046:	
 15568  0CAB  0008               	return
 15569  0CAC                     __end_of_TMR2_Initialize:	
 15570                           
 15571                           	psect	text35
 15572  0AE2                     __ptext35:	
 15573 ;; *************** function _TMR2_SetInterruptHandler *****************
 15574 ;; Defined at:
 15575 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 15576 ;; Parameters:    Size  Location     Type
 15577 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 15578 ;;		 -> handler_clock_ms(1), TMR2_DefaultInterruptHandler(1), 
 15579 ;; Auto vars:     Size  Location     Type
 15580 ;;		None
 15581 ;; Return value:  Size  Location     Type
 15582 ;;                  1    wreg      void 
 15583 ;; Registers used:
 15584 ;;		wreg
 15585 ;; Tracked objects:
 15586 ;;		On entry : 0/0
 15587 ;;		On exit  : 0/0
 15588 ;;		Unchanged: 0/0
 15589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15590 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15593 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15594 ;;Total ram usage:        2 bytes
 15595 ;; Hardware stack levels used:    1
 15596 ;; Hardware stack levels required when called:    6
 15597 ;; This function calls:
 15598 ;;		Nothing
 15599 ;; This function is called by:
 15600 ;;		_TMR2_Initialize
 15601 ;;		_main
 15602 ;; This function uses a non-reentrant model
 15603 ;;
 15604                           
 15605                           
 15606                           ;psect for function _TMR2_SetInterruptHandler
 15607  0AE2                     _TMR2_SetInterruptHandler:	
 15608  0AE2                     l6755:	
 15609                           ;incstack = 0
 15610                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 15611                           
 15612                           
 15613                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 15614  0AE2  0020               	movlb	0	; select bank0
 15615  0AE3  0824               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 15616  0AE4  0021               	movlb	1	; select bank1
 15617  0AE5  00D5               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 15618  0AE6  0020               	movlb	0	; select bank0
 15619  0AE7  0823               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 15620  0AE8  0021               	movlb	1	; select bank1
 15621  0AE9  00D4               	movwf	_TMR2_InterruptHandler^(0+128)
 15622  0AEA                     l1089:	
 15623  0AEA  0008               	return
 15624  0AEB                     __end_of_TMR2_SetInterruptHandler:	
 15625                           
 15626                           	psect	text36
 15627  0D49                     __ptext36:	
 15628 ;; *************** function _TMR1_Initialize *****************
 15629 ;; Defined at:
 15630 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 15631 ;; Parameters:    Size  Location     Type
 15632 ;;		None
 15633 ;; Auto vars:     Size  Location     Type
 15634 ;;		None
 15635 ;; Return value:  Size  Location     Type
 15636 ;;                  1    wreg      void 
 15637 ;; Registers used:
 15638 ;;		wreg, status,2, status,0, pclath, cstack
 15639 ;; Tracked objects:
 15640 ;;		On entry : 0/0
 15641 ;;		On exit  : 0/0
 15642 ;;		Unchanged: 0/0
 15643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15648 ;;Total ram usage:        0 bytes
 15649 ;; Hardware stack levels used:    1
 15650 ;; Hardware stack levels required when called:    7
 15651 ;; This function calls:
 15652 ;;		_TMR1_SetInterruptHandler
 15653 ;; This function is called by:
 15654 ;;		_SYSTEM_Initialize
 15655 ;; This function uses a non-reentrant model
 15656 ;;
 15657                           
 15658                           
 15659                           ;psect for function _TMR1_Initialize
 15660  0D49                     _TMR1_Initialize:	
 15661  0D49                     l6957:	
 15662                           ;incstack = 0
 15663                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15664                           
 15665                           
 15666                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 15667  0D49  0024               	movlb	4	; select bank4
 15668  0D4A  018F               	clrf	15	;volatile
 15669                           
 15670                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 15671  0D4B  0190               	clrf	16	;volatile
 15672  0D4C                     l6959:	
 15673                           
 15674                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 15675  0D4C  3004               	movlw	4
 15676  0D4D  0091               	movwf	17	;volatile
 15677  0D4E                     l6961:	
 15678                           
 15679                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 15680  0D4E  30E1               	movlw	225
 15681  0D4F  008D               	movwf	13	;volatile
 15682  0D50                     l6963:	
 15683                           
 15684                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 15685  0D50  30BA               	movlw	186
 15686  0D51  008C               	movwf	12	;volatile
 15687  0D52                     l6965:	
 15688                           
 15689                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 15690  0D52  080D               	movf	13,w	;volatile
 15691  0D53  0021               	movlb	1	; select bank1
 15692  0D54  00D9               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 15693  0D55  0024               	movlb	4	; select bank4
 15694  0D56  080C               	movf	12,w	;volatile
 15695  0D57  0021               	movlb	1	; select bank1
 15696  0D58  00D8               	movwf	_timer1ReloadVal^(0+128)	;volatile
 15697  0D59                     l6967:	
 15698                           
 15699                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 15700  0D59  002E               	movlb	14	; select bank14
 15701  0D5A  1010               	bcf	16,0	;volatile
 15702  0D5B                     l6969:	
 15703                           
 15704                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 15705  0D5B  141A               	bsf	26,0	;volatile
 15706  0D5C                     l6971:	
 15707                           
 15708                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 15709  0D5C  3009               	movlw	low _TMR1_DefaultInterruptHandler
 15710  0D5D  0020               	movlb	0	; select bank0
 15711  0D5E  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 15712  0D5F  300A               	movlw	high _TMR1_DefaultInterruptHandler
 15713  0D60  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 15714  0D61  318A  22D9  318D   	fcall	_TMR1_SetInterruptHandler
 15715  0D64                     l6973:	
 15716                           
 15717                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 15718  0D64  3015               	movlw	21
 15719  0D65  0024               	movlb	4	; select bank4
 15720  0D66  008E               	movwf	14	;volatile
 15721  0D67                     l917:	
 15722  0D67  0008               	return
 15723  0D68                     __end_of_TMR1_Initialize:	
 15724                           
 15725                           	psect	text37
 15726  0AD9                     __ptext37:	
 15727 ;; *************** function _TMR1_SetInterruptHandler *****************
 15728 ;; Defined at:
 15729 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 15730 ;; Parameters:    Size  Location     Type
 15731 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 15732 ;;		 -> handler_clock_hms(1), TMR1_DefaultInterruptHandler(1), 
 15733 ;; Auto vars:     Size  Location     Type
 15734 ;;		None
 15735 ;; Return value:  Size  Location     Type
 15736 ;;                  1    wreg      void 
 15737 ;; Registers used:
 15738 ;;		wreg
 15739 ;; Tracked objects:
 15740 ;;		On entry : 0/0
 15741 ;;		On exit  : 0/0
 15742 ;;		Unchanged: 0/0
 15743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15744 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15747 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15748 ;;Total ram usage:        2 bytes
 15749 ;; Hardware stack levels used:    1
 15750 ;; Hardware stack levels required when called:    6
 15751 ;; This function calls:
 15752 ;;		Nothing
 15753 ;; This function is called by:
 15754 ;;		_TMR1_Initialize
 15755 ;;		_main
 15756 ;; This function uses a non-reentrant model
 15757 ;;
 15758                           
 15759                           
 15760                           ;psect for function _TMR1_SetInterruptHandler
 15761  0AD9                     _TMR1_SetInterruptHandler:	
 15762  0AD9                     l6733:	
 15763                           ;incstack = 0
 15764                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 15765                           
 15766                           
 15767                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 15768  0AD9  0020               	movlb	0	; select bank0
 15769  0ADA  0824               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 15770  0ADB  0021               	movlb	1	; select bank1
 15771  0ADC  00D7               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 15772  0ADD  0020               	movlb	0	; select bank0
 15773  0ADE  0823               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 15774  0ADF  0021               	movlb	1	; select bank1
 15775  0AE0  00D6               	movwf	_TMR1_InterruptHandler^(0+128)
 15776  0AE1                     l947:	
 15777  0AE1  0008               	return
 15778  0AE2                     __end_of_TMR1_SetInterruptHandler:	
 15779                           
 15780                           	psect	text38
 15781  0C0E                     __ptext38:	
 15782 ;; *************** function _TMR0_Initialize *****************
 15783 ;; Defined at:
 15784 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 15785 ;; Parameters:    Size  Location     Type
 15786 ;;		None
 15787 ;; Auto vars:     Size  Location     Type
 15788 ;;		None
 15789 ;; Return value:  Size  Location     Type
 15790 ;;                  1    wreg      void 
 15791 ;; Registers used:
 15792 ;;		wreg, status,2, status,0, pclath, cstack
 15793 ;; Tracked objects:
 15794 ;;		On entry : 0/0
 15795 ;;		On exit  : 0/0
 15796 ;;		Unchanged: 0/0
 15797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15802 ;;Total ram usage:        0 bytes
 15803 ;; Hardware stack levels used:    1
 15804 ;; Hardware stack levels required when called:    7
 15805 ;; This function calls:
 15806 ;;		_TMR0_SetInterruptHandler
 15807 ;; This function is called by:
 15808 ;;		_SYSTEM_Initialize
 15809 ;; This function uses a non-reentrant model
 15810 ;;
 15811                           
 15812                           
 15813                           ;psect for function _TMR0_Initialize
 15814  0C0E                     _TMR0_Initialize:	
 15815  0C0E                     l6975:	
 15816                           ;incstack = 0
 15817                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15818                           
 15819                           
 15820                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x96;
 15821  0C0E  3096               	movlw	150
 15822  0C0F  0020               	movlb	0	; select bank0
 15823  0C10  009F               	movwf	31	;volatile
 15824                           
 15825                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x90;
 15826  0C11  3090               	movlw	144
 15827  0C12  009D               	movwf	29	;volatile
 15828  0C13                     l6977:	
 15829                           
 15830                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 15831  0C13  019C               	clrf	28	;volatile
 15832  0C14                     l6979:	
 15833                           
 15834                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 15835  0C14  002E               	movlb	14	; select bank14
 15836  0C15  128C               	bcf	12,5	;volatile
 15837  0C16                     l6981:	
 15838                           
 15839                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 15840  0C16  1696               	bsf	22,5	;volatile
 15841  0C17                     l6983:	
 15842                           
 15843                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 15844  0C17  3008               	movlw	low _TMR0_DefaultInterruptHandler
 15845  0C18  0020               	movlb	0	; select bank0
 15846  0C19  00A3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 15847  0C1A  300A               	movlw	high _TMR0_DefaultInterruptHandler
 15848  0C1B  00A4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 15849  0C1C  318A  22D0  318C   	fcall	_TMR0_SetInterruptHandler
 15850  0C1F                     l6985:	
 15851                           
 15852                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x09;
 15853  0C1F  3009               	movlw	9
 15854  0C20  0020               	movlb	0	; select bank0
 15855  0C21  009E               	movwf	30	;volatile
 15856  0C22                     l861:	
 15857  0C22  0008               	return
 15858  0C23                     __end_of_TMR0_Initialize:	
 15859                           
 15860                           	psect	text39
 15861  0AD0                     __ptext39:	
 15862 ;; *************** function _TMR0_SetInterruptHandler *****************
 15863 ;; Defined at:
 15864 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 15865 ;; Parameters:    Size  Location     Type
 15866 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 15867 ;;		 -> ISR_3s(1), TMR0_DefaultInterruptHandler(1), 
 15868 ;; Auto vars:     Size  Location     Type
 15869 ;;		None
 15870 ;; Return value:  Size  Location     Type
 15871 ;;                  1    wreg      void 
 15872 ;; Registers used:
 15873 ;;		wreg
 15874 ;; Tracked objects:
 15875 ;;		On entry : 0/0
 15876 ;;		On exit  : 0/0
 15877 ;;		Unchanged: 0/0
 15878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15879 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15882 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15883 ;;Total ram usage:        2 bytes
 15884 ;; Hardware stack levels used:    1
 15885 ;; Hardware stack levels required when called:    6
 15886 ;; This function calls:
 15887 ;;		Nothing
 15888 ;; This function is called by:
 15889 ;;		_TMR0_Initialize
 15890 ;;		_main
 15891 ;; This function uses a non-reentrant model
 15892 ;;
 15893                           
 15894                           
 15895                           ;psect for function _TMR0_SetInterruptHandler
 15896  0AD0                     _TMR0_SetInterruptHandler:	
 15897  0AD0                     l6731:	
 15898                           ;incstack = 0
 15899                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 15900                           
 15901                           
 15902                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 15903  0AD0  0020               	movlb	0	; select bank0
 15904  0AD1  0824               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 15905  0AD2  0021               	movlb	1	; select bank1
 15906  0AD3  00DB               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 15907  0AD4  0020               	movlb	0	; select bank0
 15908  0AD5  0823               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 15909  0AD6  0021               	movlb	1	; select bank1
 15910  0AD7  00DA               	movwf	_TMR0_InterruptHandler^(0+128)
 15911  0AD8                     l883:	
 15912  0AD8  0008               	return
 15913  0AD9                     __end_of_TMR0_SetInterruptHandler:	
 15914                           
 15915                           	psect	text40
 15916  0B51                     __ptext40:	
 15917 ;; *************** function _PWM6_Initialize *****************
 15918 ;; Defined at:
 15919 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 15920 ;; Parameters:    Size  Location     Type
 15921 ;;		None
 15922 ;; Auto vars:     Size  Location     Type
 15923 ;;		None
 15924 ;; Return value:  Size  Location     Type
 15925 ;;                  1    wreg      void 
 15926 ;; Registers used:
 15927 ;;		wreg, status,2, status,0
 15928 ;; Tracked objects:
 15929 ;;		On entry : 0/0
 15930 ;;		On exit  : 0/0
 15931 ;;		Unchanged: 0/0
 15932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15937 ;;Total ram usage:        0 bytes
 15938 ;; Hardware stack levels used:    1
 15939 ;; Hardware stack levels required when called:    6
 15940 ;; This function calls:
 15941 ;;		Nothing
 15942 ;; This function is called by:
 15943 ;;		_SYSTEM_Initialize
 15944 ;; This function uses a non-reentrant model
 15945 ;;
 15946                           
 15947                           
 15948                           ;psect for function _PWM6_Initialize
 15949  0B51                     _PWM6_Initialize:	
 15950  0B51                     l6933:	
 15951                           ;incstack = 0
 15952                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 15953                           
 15954                           
 15955                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 15956  0B51  3080               	movlw	128
 15957  0B52  0027               	movlb	7	; select bank7
 15958  0B53  008E               	movwf	14	;volatile
 15959                           
 15960                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 15961  0B54  303E               	movlw	62
 15962  0B55  008D               	movwf	13	;volatile
 15963                           
 15964                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 15965  0B56  3040               	movlw	64
 15966  0B57  008C               	movwf	12	;volatile
 15967  0B58                     l6935:	
 15968                           
 15969                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 15970  0B58  0024               	movlb	4	; select bank4
 15971  0B59  081F               	movf	31,w	;volatile
 15972  0B5A  39F3               	andlw	-13
 15973  0B5B  3804               	iorlw	4
 15974  0B5C  009F               	movwf	31	;volatile
 15975  0B5D                     l961:	
 15976  0B5D  0008               	return
 15977  0B5E                     __end_of_PWM6_Initialize:	
 15978                           
 15979                           	psect	text41
 15980  0AA4                     __ptext41:	
 15981 ;; *************** function _PMD_Initialize *****************
 15982 ;; Defined at:
 15983 ;;		line 77 in file "mcc_generated_files/mcc.c"
 15984 ;; Parameters:    Size  Location     Type
 15985 ;;		None
 15986 ;; Auto vars:     Size  Location     Type
 15987 ;;		None
 15988 ;; Return value:  Size  Location     Type
 15989 ;;                  1    wreg      void 
 15990 ;; Registers used:
 15991 ;;		status,2
 15992 ;; Tracked objects:
 15993 ;;		On entry : 0/0
 15994 ;;		On exit  : 0/0
 15995 ;;		Unchanged: 0/0
 15996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16001 ;;Total ram usage:        0 bytes
 16002 ;; Hardware stack levels used:    1
 16003 ;; Hardware stack levels required when called:    6
 16004 ;; This function calls:
 16005 ;;		Nothing
 16006 ;; This function is called by:
 16007 ;;		_SYSTEM_Initialize
 16008 ;; This function uses a non-reentrant model
 16009 ;;
 16010                           
 16011                           
 16012                           ;psect for function _PMD_Initialize
 16013  0AA4                     _PMD_Initialize:	
 16014  0AA4                     l6869:	
 16015                           ;incstack = 0
 16016                           ; Regs used in _PMD_Initialize: [status,2]
 16017                           
 16018                           
 16019                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 16020  0AA4  002F               	movlb	15	; select bank15
 16021  0AA5  0196               	clrf	22	;volatile
 16022                           
 16023                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 16024  0AA6  0197               	clrf	23	;volatile
 16025                           
 16026                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 16027  0AA7  0198               	clrf	24	;volatile
 16028                           
 16029                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 16030  0AA8  0199               	clrf	25	;volatile
 16031                           
 16032                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 16033  0AA9  019A               	clrf	26	;volatile
 16034                           
 16035                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 16036  0AAA  019B               	clrf	27	;volatile
 16037  0AAB                     l445:	
 16038  0AAB  0008               	return
 16039  0AAC                     __end_of_PMD_Initialize:	
 16040                           
 16041                           	psect	text42
 16042  079B                     __ptext42:	
 16043 ;; *************** function _PIN_MANAGER_Initialize *****************
 16044 ;; Defined at:
 16045 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 16046 ;; Parameters:    Size  Location     Type
 16047 ;;		None
 16048 ;; Auto vars:     Size  Location     Type
 16049 ;;		None
 16050 ;; Return value:  Size  Location     Type
 16051 ;;                  1    wreg      void 
 16052 ;; Registers used:
 16053 ;;		wreg, status,2
 16054 ;; Tracked objects:
 16055 ;;		On entry : 0/0
 16056 ;;		On exit  : 0/0
 16057 ;;		Unchanged: 0/0
 16058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16063 ;;Total ram usage:        0 bytes
 16064 ;; Hardware stack levels used:    1
 16065 ;; Hardware stack levels required when called:    6
 16066 ;; This function calls:
 16067 ;;		Nothing
 16068 ;; This function is called by:
 16069 ;;		_SYSTEM_Initialize
 16070 ;; This function uses a non-reentrant model
 16071 ;;
 16072                           
 16073                           
 16074                           ;psect for function _PIN_MANAGER_Initialize
 16075  079B                     _PIN_MANAGER_Initialize:	
 16076  079B                     l6871:	
 16077                           ;incstack = 0
 16078                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 16079                           
 16080                           
 16081                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 16082  079B  0020               	movlb	0	; select bank0
 16083  079C  019A               	clrf	26	;volatile
 16084                           
 16085                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 16086  079D  0199               	clrf	25	;volatile
 16087                           
 16088                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 16089  079E  0196               	clrf	22	;volatile
 16090                           
 16091                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 16092  079F  0197               	clrf	23	;volatile
 16093                           
 16094                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 16095  07A0  0198               	clrf	24	;volatile
 16096  07A1                     l6873:	
 16097                           
 16098                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 16099  07A1  3007               	movlw	7
 16100  07A2  0095               	movwf	21	;volatile
 16101  07A3                     l6875:	
 16102                           
 16103                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 16104  07A3  300F               	movlw	15
 16105  07A4  0091               	movwf	17	;volatile
 16106  07A5                     l6877:	
 16107                           
 16108                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 16109  07A5  30FF               	movlw	255
 16110  07A6  0092               	movwf	18	;volatile
 16111  07A7                     l6879:	
 16112                           
 16113                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 16114  07A7  30FF               	movlw	255
 16115  07A8  0093               	movwf	19	;volatile
 16116  07A9                     l6881:	
 16117                           
 16118                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 16119  07A9  30FF               	movlw	255
 16120  07AA  0094               	movwf	20	;volatile
 16121  07AB                     l6883:	
 16122                           
 16123                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 16124  07AB  30FF               	movlw	255
 16125  07AC  003E               	movlb	30	; select bank30
 16126  07AD  00D9               	movwf	89	;volatile
 16127  07AE                     l6885:	
 16128                           
 16129                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 16130  07AE  30C7               	movlw	199
 16131  07AF  00CE               	movwf	78	;volatile
 16132  07B0                     l6887:	
 16133                           
 16134                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 16135  07B0  30EF               	movlw	239
 16136  07B1  00C3               	movwf	67	;volatile
 16137  07B2                     l6889:	
 16138                           
 16139                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 16140  07B2  3007               	movlw	7
 16141  07B3  00E4               	movwf	100	;volatile
 16142  07B4                     l6891:	
 16143                           
 16144                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 16145  07B4  30FF               	movlw	255
 16146  07B5  00B8               	movwf	56	;volatile
 16147                           
 16148                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 16149  07B6  01DA               	clrf	90	;volatile
 16150                           
 16151                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 16152  07B7  01E5               	clrf	101	;volatile
 16153                           
 16154                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 16155  07B8  01C4               	clrf	68	;volatile
 16156                           
 16157                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 16158  07B9  01B9               	clrf	57	;volatile
 16159                           
 16160                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 16161  07BA  01CF               	clrf	79	;volatile
 16162                           
 16163                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 16164  07BB  01E6               	clrf	102	;volatile
 16165                           
 16166                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 16167  07BC  01BA               	clrf	58	;volatile
 16168                           
 16169                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 16170  07BD  01C5               	clrf	69	;volatile
 16171                           
 16172                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 16173  07BE  01D0               	clrf	80	;volatile
 16174                           
 16175                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 16176  07BF  01DB               	clrf	91	;volatile
 16177  07C0                     l6893:	
 16178                           
 16179                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 16180  07C0  30FF               	movlw	255
 16181  07C1  00BB               	movwf	59	;volatile
 16182  07C2                     l6895:	
 16183                           
 16184                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 16185  07C2  30FF               	movlw	255
 16186  07C3  00C6               	movwf	70	;volatile
 16187  07C4                     l6897:	
 16188                           
 16189                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 16190  07C4  30FF               	movlw	255
 16191  07C5  00D1               	movwf	81	;volatile
 16192  07C6                     l6899:	
 16193                           
 16194                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 16195  07C6  30FF               	movlw	255
 16196  07C7  00DC               	movwf	92	;volatile
 16197  07C8                     l6901:	
 16198                           
 16199                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 16200  07C8  3007               	movlw	7
 16201  07C9  00E7               	movwf	103	;volatile
 16202  07CA                     l6903:	
 16203                           
 16204                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 16205  07CA  30FF               	movlw	255
 16206  07CB  00BC               	movwf	60	;volatile
 16207  07CC                     l6905:	
 16208                           
 16209                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 16210  07CC  30FF               	movlw	255
 16211  07CD  00C7               	movwf	71	;volatile
 16212  07CE                     l6907:	
 16213                           
 16214                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 16215  07CE  30FF               	movlw	255
 16216  07CF  00D2               	movwf	82	;volatile
 16217  07D0                     l6909:	
 16218                           
 16219                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 16220  07D0  30FF               	movlw	255
 16221  07D1  00DD               	movwf	93	;volatile
 16222  07D2                     l6911:	
 16223                           
 16224                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 16225  07D2  3007               	movlw	7
 16226  07D3  00E8               	movwf	104	;volatile
 16227  07D4                     l6913:	
 16228                           
 16229                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 16230  07D4  300C               	movlw	12
 16231  07D5  003D               	movlb	29	; select bank29
 16232  07D6  0090               	movwf	16	;volatile
 16233  07D7                     l6915:	
 16234                           
 16235                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 16236  07D7  3013               	movlw	19
 16237  07D8  00C5               	movwf	69	;volatile
 16238  07D9                     l6917:	
 16239                           
 16240                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 16241  07D9  3014               	movlw	20
 16242  07DA  003E               	movlb	30	; select bank30
 16243  07DB  00A3               	movwf	35	;volatile
 16244  07DC                     l6919:	
 16245                           
 16246                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 16247  07DC  3015               	movlw	21
 16248  07DD  00A4               	movwf	36	;volatile
 16249  07DE                     l6921:	
 16250                           
 16251                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 16252  07DE  300E               	movlw	14
 16253  07DF  0096               	movwf	22	;volatile
 16254  07E0                     l6923:	
 16255                           
 16256                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 16257  07E0  3014               	movlw	20
 16258  07E1  003D               	movlb	29	; select bank29
 16259  07E2  00C6               	movwf	70	;volatile
 16260  07E3                     l675:	
 16261  07E3  0008               	return
 16262  07E4                     __end_of_PIN_MANAGER_Initialize:	
 16263                           
 16264                           	psect	text43
 16265  0AC7                     __ptext43:	
 16266 ;; *************** function _OSCILLATOR_Initialize *****************
 16267 ;; Defined at:
 16268 ;;		line 63 in file "mcc_generated_files/mcc.c"
 16269 ;; Parameters:    Size  Location     Type
 16270 ;;		None
 16271 ;; Auto vars:     Size  Location     Type
 16272 ;;		None
 16273 ;; Return value:  Size  Location     Type
 16274 ;;                  1    wreg      void 
 16275 ;; Registers used:
 16276 ;;		wreg, status,2
 16277 ;; Tracked objects:
 16278 ;;		On entry : 0/0
 16279 ;;		On exit  : 0/0
 16280 ;;		Unchanged: 0/0
 16281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16286 ;;Total ram usage:        0 bytes
 16287 ;; Hardware stack levels used:    1
 16288 ;; Hardware stack levels required when called:    6
 16289 ;; This function calls:
 16290 ;;		Nothing
 16291 ;; This function is called by:
 16292 ;;		_SYSTEM_Initialize
 16293 ;; This function uses a non-reentrant model
 16294 ;;
 16295                           
 16296                           
 16297                           ;psect for function _OSCILLATOR_Initialize
 16298  0AC7                     _OSCILLATOR_Initialize:	
 16299  0AC7                     l6925:	
 16300                           ;incstack = 0
 16301                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 16302                           
 16303                           
 16304                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 16305  0AC7  3062               	movlw	98
 16306  0AC8  0031               	movlb	17	; select bank17
 16307  0AC9  008D               	movwf	13	;volatile
 16308  0ACA                     l6927:	
 16309                           
 16310                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 16311  0ACA  018F               	clrf	15	;volatile
 16312  0ACB                     l6929:	
 16313                           
 16314                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 16315  0ACB  0191               	clrf	17	;volatile
 16316                           
 16317                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 16318  0ACC  3002               	movlw	2
 16319  0ACD  0093               	movwf	19	;volatile
 16320  0ACE                     l6931:	
 16321                           
 16322                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 16323  0ACE  0192               	clrf	18	;volatile
 16324  0ACF                     l442:	
 16325  0ACF  0008               	return
 16326  0AD0                     __end_of_OSCILLATOR_Initialize:	
 16327                           
 16328                           	psect	text44
 16329  0B5E                     __ptext44:	
 16330 ;; *************** function _EXT_INT_Initialize *****************
 16331 ;; Defined at:
 16332 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 16333 ;; Parameters:    Size  Location     Type
 16334 ;;		None
 16335 ;; Auto vars:     Size  Location     Type
 16336 ;;		None
 16337 ;; Return value:  Size  Location     Type
 16338 ;;                  1    wreg      void 
 16339 ;; Registers used:
 16340 ;;		wreg, status,2, status,0, pclath, cstack
 16341 ;; Tracked objects:
 16342 ;;		On entry : 0/0
 16343 ;;		On exit  : 0/0
 16344 ;;		Unchanged: 0/0
 16345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16350 ;;Total ram usage:        0 bytes
 16351 ;; Hardware stack levels used:    1
 16352 ;; Hardware stack levels required when called:    7
 16353 ;; This function calls:
 16354 ;;		_INT_SetInterruptHandler
 16355 ;; This function is called by:
 16356 ;;		_SYSTEM_Initialize
 16357 ;; This function uses a non-reentrant model
 16358 ;;
 16359                           
 16360                           
 16361                           ;psect for function _EXT_INT_Initialize
 16362  0B5E                     _EXT_INT_Initialize:	
 16363  0B5E                     l6863:	
 16364                           ;incstack = 0
 16365                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16366                           
 16367                           
 16368                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 16369  0B5E  002E               	movlb	14	; select bank14
 16370  0B5F  100C               	bcf	12,0	;volatile
 16371                           
 16372                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 16373  0B60  140B               	bsf	11,0	;volatile
 16374  0B61                     l6865:	
 16375                           
 16376                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 16377  0B61  3007               	movlw	low _INT_DefaultInterruptHandler
 16378  0B62  0020               	movlb	0	; select bank0
 16379  0B63  00A3               	movwf	INT_SetInterruptHandler@InterruptHandler
 16380  0B64  300A               	movlw	high _INT_DefaultInterruptHandler
 16381  0B65  00A4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 16382  0B66  318A  22BE  318B   	fcall	_INT_SetInterruptHandler
 16383  0B69                     l6867:	
 16384                           
 16385                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 16386  0B69  002E               	movlb	14	; select bank14
 16387  0B6A  1416               	bsf	22,0	;volatile
 16388  0B6B                     l347:	
 16389  0B6B  0008               	return
 16390  0B6C                     __end_of_EXT_INT_Initialize:	
 16391                           
 16392                           	psect	text45
 16393  0ABE                     __ptext45:	
 16394 ;; *************** function _INT_SetInterruptHandler *****************
 16395 ;; Defined at:
 16396 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 16397 ;; Parameters:    Size  Location     Type
 16398 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 16399 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 16400 ;; Auto vars:     Size  Location     Type
 16401 ;;		None
 16402 ;; Return value:  Size  Location     Type
 16403 ;;                  1    wreg      void 
 16404 ;; Registers used:
 16405 ;;		wreg
 16406 ;; Tracked objects:
 16407 ;;		On entry : 0/0
 16408 ;;		On exit  : 0/0
 16409 ;;		Unchanged: 0/0
 16410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16411 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16414 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16415 ;;Total ram usage:        2 bytes
 16416 ;; Hardware stack levels used:    1
 16417 ;; Hardware stack levels required when called:    6
 16418 ;; This function calls:
 16419 ;;		Nothing
 16420 ;; This function is called by:
 16421 ;;		_EXT_INT_Initialize
 16422 ;;		_main
 16423 ;; This function uses a non-reentrant model
 16424 ;;
 16425                           
 16426                           
 16427                           ;psect for function _INT_SetInterruptHandler
 16428  0ABE                     _INT_SetInterruptHandler:	
 16429  0ABE                     l6729:	
 16430                           ;incstack = 0
 16431                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 16432                           
 16433                           
 16434                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 16435  0ABE  0020               	movlb	0	; select bank0
 16436  0ABF  0824               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 16437  0AC0  0021               	movlb	1	; select bank1
 16438  0AC1  00DD               	movwf	(_INT_InterruptHandler+1)^(0+128)
 16439  0AC2  0020               	movlb	0	; select bank0
 16440  0AC3  0823               	movf	INT_SetInterruptHandler@InterruptHandler,w
 16441  0AC4  0021               	movlb	1	; select bank1
 16442  0AC5  00DC               	movwf	_INT_InterruptHandler^(0+128)
 16443  0AC6                     l341:	
 16444  0AC6  0008               	return
 16445  0AC7                     __end_of_INT_SetInterruptHandler:	
 16446                           
 16447                           	psect	text46
 16448  0C39                     __ptext46:	
 16449 ;; *************** function _ADCC_Initialize *****************
 16450 ;; Defined at:
 16451 ;;		line 63 in file "mcc_generated_files/adcc.c"
 16452 ;; Parameters:    Size  Location     Type
 16453 ;;		None
 16454 ;; Auto vars:     Size  Location     Type
 16455 ;;		None
 16456 ;; Return value:  Size  Location     Type
 16457 ;;                  1    wreg      void 
 16458 ;; Registers used:
 16459 ;;		wreg, status,2
 16460 ;; Tracked objects:
 16461 ;;		On entry : 0/0
 16462 ;;		On exit  : 0/0
 16463 ;;		Unchanged: 0/0
 16464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16469 ;;Total ram usage:        0 bytes
 16470 ;; Hardware stack levels used:    1
 16471 ;; Hardware stack levels required when called:    6
 16472 ;; This function calls:
 16473 ;;		Nothing
 16474 ;; This function is called by:
 16475 ;;		_SYSTEM_Initialize
 16476 ;; This function uses a non-reentrant model
 16477 ;;
 16478                           
 16479                           
 16480                           ;psect for function _ADCC_Initialize
 16481  0C39                     _ADCC_Initialize:	
 16482  0C39                     l6937:	
 16483                           ;incstack = 0
 16484                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 16485                           
 16486                           
 16487                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 16488  0C39  0022               	movlb	2	; select bank2
 16489  0C3A  018E               	clrf	14	;volatile
 16490                           
 16491                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 16492  0C3B  018F               	clrf	15	;volatile
 16493                           
 16494                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 16495  0C3C  0190               	clrf	16	;volatile
 16496                           
 16497                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 16498  0C3D  0191               	clrf	17	;volatile
 16499                           
 16500                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 16501  0C3E  0192               	clrf	18	;volatile
 16502                           
 16503                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 16504  0C3F  0193               	clrf	19	;volatile
 16505                           
 16506                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 16507  0C40  018D               	clrf	13	;volatile
 16508                           
 16509                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 16510  0C41  0021               	movlb	1	; select bank1
 16511  0C42  019E               	clrf	30	;volatile
 16512                           
 16513                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 16514  0C43  019B               	clrf	27	;volatile
 16515                           
 16516                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 16517  0C44  0194               	clrf	20	;volatile
 16518                           
 16519                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 16520  0C45  0195               	clrf	21	;volatile
 16521                           
 16522                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 16523  0C46  0196               	clrf	22	;volatile
 16524                           
 16525                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 16526  0C47  0197               	clrf	23	;volatile
 16527                           
 16528                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 16529  0C48  019A               	clrf	26	;volatile
 16530                           
 16531                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 16532  0C49  0199               	clrf	25	;volatile
 16533                           
 16534                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 16535  0C4A  0198               	clrf	24	;volatile
 16536  0C4B                     l6939:	
 16537                           
 16538                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 16539  0C4B  3084               	movlw	132
 16540  0C4C  0093               	movwf	19	;volatile
 16541  0C4D                     l6941:	
 16542                           
 16543                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 16544  0C4D  019D               	clrf	29	;volatile
 16545  0C4E                     l757:	
 16546  0C4E  0008               	return
 16547  0C4F                     __end_of_ADCC_Initialize:	
 16548                           
 16549                           	psect	text47
 16550  0CF8                     __ptext47:	
 16551 ;; *************** function _LED_bin *****************
 16552 ;; Defined at:
 16553 ;;		line 48 in file "leds.c"
 16554 ;; Parameters:    Size  Location     Type
 16555 ;;  value           2    3[BANK0 ] unsigned int 
 16556 ;; Auto vars:     Size  Location     Type
 16557 ;;		None
 16558 ;; Return value:  Size  Location     Type
 16559 ;;                  1    wreg      void 
 16560 ;; Registers used:
 16561 ;;		wreg, status,2, status,0
 16562 ;; Tracked objects:
 16563 ;;		On entry : 0/0
 16564 ;;		On exit  : 0/0
 16565 ;;		Unchanged: 0/0
 16566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16567 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16569 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16570 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16571 ;;Total ram usage:        5 bytes
 16572 ;; Hardware stack levels used:    1
 16573 ;; Hardware stack levels required when called:    6
 16574 ;; This function calls:
 16575 ;;		Nothing
 16576 ;; This function is called by:
 16577 ;;		_main
 16578 ;; This function uses a non-reentrant model
 16579 ;;
 16580                           
 16581                           
 16582                           ;psect for function _LED_bin
 16583  0CF8                     _LED_bin:	
 16584  0CF8                     l7161:	
 16585                           ;incstack = 0
 16586                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 16587                           
 16588                           
 16589                           ;leds.c: 50:     LATAbits.LATA4 = (value & 1);
 16590  0CF8  0020               	movlb	0	; select bank0
 16591  0CF9  0823               	movf	LED_bin@value,w
 16592  0CFA  3901               	andlw	1
 16593  0CFB  00A5               	movwf	??_LED_bin
 16594  0CFC  0EA5               	swapf	??_LED_bin,f
 16595  0CFD  0816               	movf	22,w	;volatile
 16596  0CFE  0625               	xorwf	??_LED_bin,w
 16597  0CFF  39EF               	andlw	-17
 16598  0D00  0625               	xorwf	??_LED_bin,w
 16599  0D01  0096               	movwf	22	;volatile
 16600                           
 16601                           ;leds.c: 51:     LATAbits.LATA5 = (value >>1);
 16602  0D02  0824               	movf	LED_bin@value+1,w
 16603  0D03  00A6               	movwf	??_LED_bin+1
 16604  0D04  0823               	movf	LED_bin@value,w
 16605  0D05  00A5               	movwf	??_LED_bin
 16606  0D06  36A6               	lsrf	??_LED_bin+1,f
 16607  0D07  0CA5               	rrf	??_LED_bin,f
 16608  0D08  0825               	movf	??_LED_bin,w
 16609  0D09  00A7               	movwf	??_LED_bin+2
 16610  0D0A  0EA7               	swapf	??_LED_bin+2,f
 16611  0D0B  0DA7               	rlf	??_LED_bin+2,f
 16612  0D0C  0816               	movf	22,w	;volatile
 16613  0D0D  0627               	xorwf	??_LED_bin+2,w
 16614  0D0E  39DF               	andlw	-33
 16615  0D0F  0627               	xorwf	??_LED_bin+2,w
 16616  0D10  0096               	movwf	22	;volatile
 16617  0D11                     l1686:	
 16618  0D11  0008               	return
 16619  0D12                     __end_of_LED_bin:	
 16620                           
 16621                           	psect	text48
 16622  0CDE                     __ptext48:	
 16623 ;; *************** function _ADC_read *****************
 16624 ;; Defined at:
 16625 ;;		line 615 in file "main.c"
 16626 ;; Parameters:    Size  Location     Type
 16627 ;;		None
 16628 ;; Auto vars:     Size  Location     Type
 16629 ;;		None
 16630 ;; Return value:  Size  Location     Type
 16631 ;;                  2    5[BANK0 ] unsigned int 
 16632 ;; Registers used:
 16633 ;;		wreg, status,2, status,0, pclath, cstack
 16634 ;; Tracked objects:
 16635 ;;		On entry : 0/0
 16636 ;;		On exit  : 0/0
 16637 ;;		Unchanged: 0/0
 16638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16639 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16642 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16643 ;;Total ram usage:        2 bytes
 16644 ;; Hardware stack levels used:    1
 16645 ;; Hardware stack levels required when called:    7
 16646 ;; This function calls:
 16647 ;;		_ADCC_GetConversionResult
 16648 ;;		_ADCC_IsConversionDone
 16649 ;;		_ADCC_StartConversion
 16650 ;; This function is called by:
 16651 ;;		_main
 16652 ;; This function uses a non-reentrant model
 16653 ;;
 16654                           
 16655                           
 16656                           ;psect for function _ADC_read
 16657  0CDE                     _ADC_read:	
 16658  0CDE                     l7151:	
 16659                           ;incstack = 0
 16660                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 16661                           
 16662                           
 16663                           ;main.c: 617:     ADCC_StartConversion(channel_ANA0);
 16664  0CDE  3000               	movlw	0
 16665  0CDF  318A  229C  318C   	fcall	_ADCC_StartConversion
 16666                           
 16667                           ;main.c: 618:     while(!ADCC_IsConversionDone()){
 16668  0CE2  2CE7               	goto	l7155
 16669  0CE3                     l7153:	
 16670                           
 16671                           ;main.c: 619:         _delay((unsigned long)((1)*(1000000/4000.0)));
 16672  0CE3  3053               	movlw	83
 16673  0CE4                     u4727:	
 16674  0CE4  0B89               	decfsz	9,f
 16675  0CE5  2CE4               	goto	u4727
 16676  0CE6  0000               	nop
 16677  0CE7                     l7155:	
 16678                           
 16679                           ;main.c: 618:     while(!ADCC_IsConversionDone()){
 16680  0CE7  318A  227D  318C   	fcall	_ADCC_IsConversionDone
 16681  0CEA  3A00               	xorlw	0
 16682  0CEB  1903               	skipnz
 16683  0CEC  2CEE               	goto	u4071
 16684  0CED  2CEF               	goto	u4070
 16685  0CEE                     u4071:	
 16686  0CEE  2CE3               	goto	l7153
 16687  0CEF                     u4070:	
 16688  0CEF                     l7157:	
 16689                           
 16690                           ;main.c: 622:     return ADCC_GetConversionResult();
 16691  0CEF  318A  22B5  318C   	fcall	_ADCC_GetConversionResult
 16692  0CF2  0020               	movlb	0	; select bank0
 16693  0CF3  0824               	movf	?_ADCC_GetConversionResult+1,w
 16694  0CF4  00A6               	movwf	?_ADC_read+1
 16695  0CF5  0823               	movf	?_ADCC_GetConversionResult,w
 16696  0CF6  00A5               	movwf	?_ADC_read
 16697  0CF7                     l1421:	
 16698  0CF7  0008               	return
 16699  0CF8                     __end_of_ADC_read:	
 16700                           
 16701                           	psect	text49
 16702  0A9C                     __ptext49:	
 16703 ;; *************** function _ADCC_StartConversion *****************
 16704 ;; Defined at:
 16705 ;;		line 106 in file "mcc_generated_files/adcc.c"
 16706 ;; Parameters:    Size  Location     Type
 16707 ;;  channel         1    wreg     enum E12246
 16708 ;; Auto vars:     Size  Location     Type
 16709 ;;  channel         1    3[BANK0 ] enum E12246
 16710 ;; Return value:  Size  Location     Type
 16711 ;;                  1    wreg      void 
 16712 ;; Registers used:
 16713 ;;		wreg
 16714 ;; Tracked objects:
 16715 ;;		On entry : 0/0
 16716 ;;		On exit  : 0/0
 16717 ;;		Unchanged: 0/0
 16718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16720 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16722 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16723 ;;Total ram usage:        1 bytes
 16724 ;; Hardware stack levels used:    1
 16725 ;; Hardware stack levels required when called:    6
 16726 ;; This function calls:
 16727 ;;		Nothing
 16728 ;; This function is called by:
 16729 ;;		_ADC_read
 16730 ;; This function uses a non-reentrant model
 16731 ;;
 16732                           
 16733                           
 16734                           ;psect for function _ADCC_StartConversion
 16735  0A9C                     _ADCC_StartConversion:	
 16736                           
 16737                           ;incstack = 0
 16738                           ; Regs used in _ADCC_StartConversion: [wreg]
 16739                           ;ADCC_StartConversion@channel stored from wreg
 16740  0A9C  0020               	movlb	0	; select bank0
 16741  0A9D  00A3               	movwf	ADCC_StartConversion@channel
 16742  0A9E                     l6987:	
 16743                           
 16744                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 16745  0A9E  0823               	movf	ADCC_StartConversion@channel,w
 16746  0A9F  0021               	movlb	1	; select bank1
 16747  0AA0  009E               	movwf	30	;volatile
 16748  0AA1                     l6989:	
 16749                           
 16750                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 16751  0AA1  1793               	bsf	19,7	;volatile
 16752  0AA2                     l6991:	
 16753                           
 16754                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 16755  0AA2  1413               	bsf	19,0	;volatile
 16756  0AA3                     l760:	
 16757  0AA3  0008               	return
 16758  0AA4                     __end_of_ADCC_StartConversion:	
 16759                           
 16760                           	psect	text50
 16761  0A7D                     __ptext50:	
 16762 ;; *************** function _ADCC_IsConversionDone *****************
 16763 ;; Defined at:
 16764 ;;		line 118 in file "mcc_generated_files/adcc.c"
 16765 ;; Parameters:    Size  Location     Type
 16766 ;;		None
 16767 ;; Auto vars:     Size  Location     Type
 16768 ;;		None
 16769 ;; Return value:  Size  Location     Type
 16770 ;;                  1    wreg      _Bool 
 16771 ;; Registers used:
 16772 ;;		wreg, status,0
 16773 ;; Tracked objects:
 16774 ;;		On entry : 0/0
 16775 ;;		On exit  : 0/0
 16776 ;;		Unchanged: 0/0
 16777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16782 ;;Total ram usage:        0 bytes
 16783 ;; Hardware stack levels used:    1
 16784 ;; Hardware stack levels required when called:    6
 16785 ;; This function calls:
 16786 ;;		Nothing
 16787 ;; This function is called by:
 16788 ;;		_ADC_read
 16789 ;; This function uses a non-reentrant model
 16790 ;;
 16791                           
 16792                           
 16793                           ;psect for function _ADCC_IsConversionDone
 16794  0A7D                     _ADCC_IsConversionDone:	
 16795  0A7D                     l6993:	
 16796                           ;incstack = 0
 16797                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 16798                           
 16799                           
 16800                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 16801  0A7D  1003               	clrc
 16802  0A7E  0021               	movlb	1	; select bank1
 16803  0A7F  1C13               	btfss	19,0	;volatile
 16804  0A80  1403               	setc
 16805  0A81  3000               	movlw	0
 16806  0A82  3D09               	addwfc	9,w
 16807  0A83                     l763:	
 16808  0A83  0008               	return
 16809  0A84                     __end_of_ADCC_IsConversionDone:	
 16810                           
 16811                           	psect	text51
 16812  0AB5                     __ptext51:	
 16813 ;; *************** function _ADCC_GetConversionResult *****************
 16814 ;; Defined at:
 16815 ;;		line 124 in file "mcc_generated_files/adcc.c"
 16816 ;; Parameters:    Size  Location     Type
 16817 ;;		None
 16818 ;; Auto vars:     Size  Location     Type
 16819 ;;		None
 16820 ;; Return value:  Size  Location     Type
 16821 ;;                  2    3[BANK0 ] unsigned short 
 16822 ;; Registers used:
 16823 ;;		wreg
 16824 ;; Tracked objects:
 16825 ;;		On entry : 0/0
 16826 ;;		On exit  : 0/0
 16827 ;;		Unchanged: 0/0
 16828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16829 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16832 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16833 ;;Total ram usage:        2 bytes
 16834 ;; Hardware stack levels used:    1
 16835 ;; Hardware stack levels required when called:    6
 16836 ;; This function calls:
 16837 ;;		Nothing
 16838 ;; This function is called by:
 16839 ;;		_ADC_read
 16840 ;; This function uses a non-reentrant model
 16841 ;;
 16842                           
 16843                           
 16844                           ;psect for function _ADCC_GetConversionResult
 16845  0AB5                     _ADCC_GetConversionResult:	
 16846  0AB5                     l6997:	
 16847                           ;incstack = 0
 16848                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 16849                           
 16850                           
 16851                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 16852  0AB5  0021               	movlb	1	; select bank1
 16853  0AB6  080D               	movf	13,w	;volatile
 16854  0AB7  0020               	movlb	0	; select bank0
 16855  0AB8  00A4               	movwf	?_ADCC_GetConversionResult+1
 16856  0AB9  0021               	movlb	1	; select bank1
 16857  0ABA  080C               	movf	12,w	;volatile
 16858  0ABB  0020               	movlb	0	; select bank0
 16859  0ABC  00A3               	movwf	?_ADCC_GetConversionResult
 16860  0ABD                     l766:	
 16861  0ABD  0008               	return
 16862  0ABE                     __end_of_ADCC_GetConversionResult:	
 16863                           
 16864                           	psect	intentry
 16865  0004                     __pintentry:	
 16866 ;; *************** function _INTERRUPT_InterruptManager *****************
 16867 ;; Defined at:
 16868 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16869 ;; Parameters:    Size  Location     Type
 16870 ;;		None
 16871 ;; Auto vars:     Size  Location     Type
 16872 ;;		None
 16873 ;; Return value:  Size  Location     Type
 16874 ;;                  1    wreg      void 
 16875 ;; Registers used:
 16876 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16877 ;; Tracked objects:
 16878 ;;		On entry : 0/0
 16879 ;;		On exit  : 0/0
 16880 ;;		Unchanged: 0/0
 16881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16886 ;;Total ram usage:        0 bytes
 16887 ;; Hardware stack levels used:    1
 16888 ;; Hardware stack levels required when called:    5
 16889 ;; This function calls:
 16890 ;;		Absolute function
 16891 ;;		_INT_ISR
 16892 ;;		_TMR0_ISR
 16893 ;;		_TMR1_ISR
 16894 ;;		_TMR2_ISR
 16895 ;;		_i2c_ISR
 16896 ;;		_i2c_busCollisionISR
 16897 ;; This function is called by:
 16898 ;;		Interrupt level 1
 16899 ;; This function uses a non-reentrant model
 16900 ;;
 16901                           
 16902  0004                     _INTERRUPT_InterruptManager:	
 16903                           
 16904                           ;incstack = 0
 16905  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 16906                           
 16907                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16908  0005  3180               	pagesel	$
 16909  0006                     i1l6033:	
 16910                           
 16911                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 16912  0006  002E               	movlb	14	; select bank14
 16913  0007  1C16               	btfss	22,0	;volatile
 16914  0008  280A               	goto	u317_21
 16915  0009  280B               	goto	u317_20
 16916  000A                     u317_21:	
 16917  000A  2813               	goto	i1l378
 16918  000B                     u317_20:	
 16919  000B                     i1l6035:	
 16920  000B  1C0C               	btfss	12,0	;volatile
 16921  000C  280E               	goto	u318_21
 16922  000D  280F               	goto	u318_20
 16923  000E                     u318_21:	
 16924  000E  2813               	goto	i1l378
 16925  000F                     u318_20:	
 16926  000F                     i1l6037:	
 16927                           
 16928                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 16929  000F  318A  2264  3180   	fcall	_INT_ISR
 16930                           
 16931                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 16932  0012  2859               	goto	i1l392
 16933  0013                     i1l378:	
 16934                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 16935                           
 16936  0013  1E96               	btfss	22,5	;volatile
 16937  0014  2816               	goto	u319_21
 16938  0015  2817               	goto	u319_20
 16939  0016                     u319_21:	
 16940  0016  281F               	goto	i1l380
 16941  0017                     u319_20:	
 16942  0017                     i1l6039:	
 16943  0017  1E8C               	btfss	12,5	;volatile
 16944  0018  281A               	goto	u320_21
 16945  0019  281B               	goto	u320_20
 16946  001A                     u320_21:	
 16947  001A  281F               	goto	i1l380
 16948  001B                     u320_20:	
 16949  001B                     i1l6041:	
 16950                           
 16951                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 16952  001B  318B  236C  3180   	fcall	_TMR0_ISR
 16953                           
 16954                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 16955  001E  2859               	goto	i1l392
 16956  001F                     i1l380:	
 16957                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 16958                           
 16959  001F  1F0B               	btfss	11,6	;volatile
 16960  0020  2822               	goto	u321_21
 16961  0021  2823               	goto	u321_20
 16962  0022                     u321_21:	
 16963  0022  2859               	goto	i1l386
 16964  0023                     u321_20:	
 16965  0023                     i1l6043:	
 16966                           
 16967                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 16968  0023  1C99               	btfss	25,1	;volatile
 16969  0024  2826               	goto	u322_21
 16970  0025  2827               	goto	u322_20
 16971  0026                     u322_21:	
 16972  0026  2832               	goto	i1l383
 16973  0027                     u322_20:	
 16974  0027                     i1l6045:	
 16975  0027  1C8F               	btfss	15,1	;volatile
 16976  0028  282A               	goto	u323_21
 16977  0029  282B               	goto	u323_20
 16978  002A                     u323_21:	
 16979  002A  2832               	goto	i1l383
 16980  002B                     u323_20:	
 16981  002B                     i1l6047:	
 16982                           
 16983                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_busCollisionISR();
 16984  002B  0021               	movlb	1	; select bank1
 16985  002C  084E               	movf	(_i2c1_driver_busCollisionISR+1)^(0+128),w
 16986  002D  008A               	movwf	10
 16987  002E  084D               	movf	_i2c1_driver_busCollisionISR^(0+128),w
 16988  002F  000A               	callw
 16989  0030  3180               	pagesel	$
 16990                           
 16991                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 16992  0031  2859               	goto	i1l392
 16993  0032                     i1l383:	
 16994                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 16995                           
 16996  0032  1C19               	btfss	25,0	;volatile
 16997  0033  2835               	goto	u324_21
 16998  0034  2836               	goto	u324_20
 16999  0035                     u324_21:	
 17000  0035  2841               	goto	i1l385
 17001  0036                     u324_20:	
 17002  0036                     i1l6049:	
 17003  0036  1C0F               	btfss	15,0	;volatile
 17004  0037  2839               	goto	u325_21
 17005  0038  283A               	goto	u325_20
 17006  0039                     u325_21:	
 17007  0039  2841               	goto	i1l385
 17008  003A                     u325_20:	
 17009  003A                     i1l6051:	
 17010                           
 17011                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_i2cISR();
 17012  003A  0021               	movlb	1	; select bank1
 17013  003B  084C               	movf	(_i2c1_driver_i2cISR+1)^(0+128),w
 17014  003C  008A               	movwf	10
 17015  003D  084B               	movf	_i2c1_driver_i2cISR^(0+128),w
 17016  003E  000A               	callw
 17017  003F  3180               	pagesel	$
 17018                           
 17019                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 17020  0040  2859               	goto	i1l392
 17021  0041                     i1l385:	
 17022                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 17023                           
 17024  0041  1C1A               	btfss	26,0	;volatile
 17025  0042  2844               	goto	u326_21
 17026  0043  2845               	goto	u326_20
 17027  0044                     u326_21:	
 17028  0044  284D               	goto	i1l387
 17029  0045                     u326_20:	
 17030  0045                     i1l6053:	
 17031  0045  1C10               	btfss	16,0	;volatile
 17032  0046  2848               	goto	u327_21
 17033  0047  2849               	goto	u327_20
 17034  0048                     u327_21:	
 17035  0048  284D               	goto	i1l387
 17036  0049                     u327_20:	
 17037  0049                     i1l6055:	
 17038                           
 17039                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 17040  0049  318C  2465  3180   	fcall	_TMR1_ISR
 17041                           
 17042                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 17043  004C  2859               	goto	i1l392
 17044  004D                     i1l387:	
 17045                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 17046                           
 17047  004D  1C9A               	btfss	26,1	;volatile
 17048  004E  2850               	goto	u328_21
 17049  004F  2851               	goto	u328_20
 17050  0050                     u328_21:	
 17051  0050  2859               	goto	i1l386
 17052  0051                     u328_20:	
 17053  0051                     i1l6057:	
 17054  0051  1C90               	btfss	16,1	;volatile
 17055  0052  2854               	goto	u329_21
 17056  0053  2855               	goto	u329_20
 17057  0054                     u329_21:	
 17058  0054  2859               	goto	i1l386
 17059  0055                     u329_20:	
 17060  0055                     i1l6059:	
 17061                           
 17062                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR2_ISR();
 17063  0055  318B  237B  3180   	fcall	_TMR2_ISR
 17064                           
 17065                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 17066  0058  2859               	goto	i1l392
 17067  0059                     i1l386:	
 17068  0059                     i1l392:	
 17069  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 17070  005A  0009               	retfie
 17071  005B                     __end_of_INTERRUPT_InterruptManager:	
 17072                           
 17073                           	psect	text53
 17074  0A33                     __ptext53:	
 17075 ;; *************** function _i2c_busCollisionISR *****************
 17076 ;; Defined at:
 17077 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 17078 ;; Parameters:    Size  Location     Type
 17079 ;;		None
 17080 ;; Auto vars:     Size  Location     Type
 17081 ;;		None
 17082 ;; Return value:  Size  Location     Type
 17083 ;;                  1    wreg      void 
 17084 ;; Registers used:
 17085 ;;		status,2, status,0, pclath, cstack
 17086 ;; Tracked objects:
 17087 ;;		On entry : 0/0
 17088 ;;		On exit  : 0/0
 17089 ;;		Unchanged: 0/0
 17090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17095 ;;Total ram usage:        0 bytes
 17096 ;; Hardware stack levels used:    1
 17097 ;; Hardware stack levels required when called:    1
 17098 ;; This function calls:
 17099 ;;		_i2c1_driver_clearBusCollision
 17100 ;; This function is called by:
 17101 ;;		_i2c_open
 17102 ;;		_INTERRUPT_InterruptManager
 17103 ;; This function uses a non-reentrant model
 17104 ;;
 17105                           
 17106                           
 17107                           ;psect for function _i2c_busCollisionISR
 17108  0A33                     _i2c_busCollisionISR:	
 17109  0A33                     i1l5685:	
 17110                           ;incstack = 0
 17111                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 17112                           
 17113                           
 17114                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 17115  0A33  318A  2225  318A   	fcall	_i2c1_driver_clearBusCollision
 17116  0A36                     i1l213:	
 17117  0A36  0008               	return
 17118  0A37                     __end_of_i2c_busCollisionISR:	
 17119                           
 17120                           	psect	text54
 17121  0A25                     __ptext54:	
 17122 ;; *************** function _i2c1_driver_clearBusCollision *****************
 17123 ;; Defined at:
 17124 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 17125 ;; Parameters:    Size  Location     Type
 17126 ;;		None
 17127 ;; Auto vars:     Size  Location     Type
 17128 ;;		None
 17129 ;; Return value:  Size  Location     Type
 17130 ;;                  1    wreg      void 
 17131 ;; Registers used:
 17132 ;;		None
 17133 ;; Tracked objects:
 17134 ;;		On entry : 0/0
 17135 ;;		On exit  : 0/0
 17136 ;;		Unchanged: 0/0
 17137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17142 ;;Total ram usage:        0 bytes
 17143 ;; Hardware stack levels used:    1
 17144 ;; This function calls:
 17145 ;;		Nothing
 17146 ;; This function is called by:
 17147 ;;		_i2c_busCollisionISR
 17148 ;; This function uses a non-reentrant model
 17149 ;;
 17150                           
 17151                           
 17152                           ;psect for function _i2c1_driver_clearBusCollision
 17153  0A25                     _i2c1_driver_clearBusCollision:	
 17154  0A25                     i1l5349:	
 17155                           ;incstack = 0
 17156                           ; Regs used in _i2c1_driver_clearBusCollision: []
 17157                           
 17158                           
 17159                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 17160  0A25  002E               	movlb	14	; select bank14
 17161  0A26  108F               	bcf	15,1	;volatile
 17162  0A27                     i1l584:	
 17163  0A27  0008               	return
 17164  0A28                     __end_of_i2c1_driver_clearBusCollision:	
 17165                           
 17166                           	psect	text55
 17167  0EB7                     __ptext55:	
 17168 ;; *************** function _i2c_ISR *****************
 17169 ;; Defined at:
 17170 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 17171 ;; Parameters:    Size  Location     Type
 17172 ;;		None
 17173 ;; Auto vars:     Size  Location     Type
 17174 ;;		None
 17175 ;; Return value:  Size  Location     Type
 17176 ;;                  1    wreg      void 
 17177 ;; Registers used:
 17178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17179 ;; Tracked objects:
 17180 ;;		On entry : 0/0
 17181 ;;		On exit  : 0/0
 17182 ;;		Unchanged: 0/0
 17183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17186 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17187 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17188 ;;Total ram usage:        3 bytes
 17189 ;; Hardware stack levels used:    1
 17190 ;; Hardware stack levels required when called:    4
 17191 ;; This function calls:
 17192 ;;		_do_I2C_DO_ACK
 17193 ;;		_do_I2C_DO_ADDRESS_NACK
 17194 ;;		_do_I2C_DO_NACK_RESTART
 17195 ;;		_do_I2C_DO_NACK_STOP
 17196 ;;		_do_I2C_IDLE
 17197 ;;		_do_I2C_RCEN
 17198 ;;		_do_I2C_RESET
 17199 ;;		_do_I2C_RX
 17200 ;;		_do_I2C_SEND_ADR_READ
 17201 ;;		_do_I2C_SEND_ADR_WRITE
 17202 ;;		_do_I2C_SEND_RESTART
 17203 ;;		_do_I2C_SEND_RESTART_READ
 17204 ;;		_do_I2C_SEND_RESTART_WRITE
 17205 ;;		_do_I2C_SEND_STOP
 17206 ;;		_do_I2C_TX
 17207 ;;		_do_I2C_TX_EMPTY
 17208 ;;		_i2c1_driver_isNACK
 17209 ;;		_mssp1_clearIRQ
 17210 ;; This function is called by:
 17211 ;;		_i2c_open
 17212 ;;		_i2c_poller
 17213 ;;		_INTERRUPT_InterruptManager
 17214 ;; This function uses a non-reentrant model
 17215 ;;
 17216                           
 17217                           
 17218                           ;psect for function _i2c_ISR
 17219  0EB7                     _i2c_ISR:	
 17220  0EB7                     i1l5675:	
 17221                           ;incstack = 0
 17222                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17223                           
 17224                           
 17225                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 17226  0EB7  318A  2222  318E   	fcall	_mssp1_clearIRQ
 17227  0EBA                     i1l5677:	
 17228                           
 17229                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 17230  0EBA  0021               	movlb	1	; select bank1
 17231  0EBB  1DA0               	btfss	_i2c_status^(0+128),3
 17232  0EBC  2EBE               	goto	u277_21
 17233  0EBD  2EBF               	goto	u277_20
 17234  0EBE                     u277_21:	
 17235  0EBE  2ECC               	goto	i1l5683
 17236  0EBF                     u277_20:	
 17237  0EBF                     i1l5679:	
 17238  0EBF  318A  2284  318E   	fcall	_i2c1_driver_isNACK
 17239  0EC2  1C03               	btfss	3,0
 17240  0EC3  2EC5               	goto	u278_21
 17241  0EC4  2EC6               	goto	u278_20
 17242  0EC5                     u278_21:	
 17243  0EC5  2ECC               	goto	i1l5683
 17244  0EC6                     u278_20:	
 17245  0EC6                     i1l5681:	
 17246                           
 17247                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 17248  0EC6  300F               	movlw	15
 17249  0EC7  0020               	movlb	0	; select bank0
 17250  0EC8  00A0               	movwf	??_i2c_ISR
 17251  0EC9  0820               	movf	??_i2c_ISR,w
 17252  0ECA  0021               	movlb	1	; select bank1
 17253  0ECB  00A9               	movwf	(_i2c_status^(0+128)+9)
 17254  0ECC                     i1l5683:	
 17255                           
 17256                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 17257  0ECC  0021               	movlb	1	; select bank1
 17258  0ECD  0829               	movf	(_i2c_status^(0+128)+9),w
 17259  0ECE  0020               	movlb	0	; select bank0
 17260  0ECF  00A0               	movwf	??_i2c_ISR
 17261  0ED0  01A1               	clrf	??_i2c_ISR+1
 17262  0ED1  35A0               	lslf	??_i2c_ISR,f
 17263  0ED2  0DA1               	rlf	??_i2c_ISR+1,f
 17264  0ED3  3000               	movlw	low (_fsmStateTable| (0+32768))
 17265  0ED4  0720               	addwf	??_i2c_ISR,w
 17266  0ED5  0084               	movwf	4
 17267  0ED6  3090               	movlw	high (_fsmStateTable| (0+32768))
 17268  0ED7  3D21               	addwfc	??_i2c_ISR+1,w
 17269  0ED8  0085               	movwf	5
 17270  0ED9  3F01               	moviw [1]fsr0
 17271  0EDA  008A               	movwf	10
 17272  0EDB  3F00               	moviw [0]fsr0
 17273  0EDC  000A               	callw
 17274  0EDD  318E               	pagesel	$
 17275  0EDE  0020               	movlb	0	; select bank0
 17276  0EDF  00A2               	movwf	??_i2c_ISR+2
 17277  0EE0  0822               	movf	??_i2c_ISR+2,w
 17278  0EE1  0021               	movlb	1	; select bank1
 17279  0EE2  00A9               	movwf	(_i2c_status^(0+128)+9)
 17280  0EE3                     i1l210:	
 17281  0EE3  0008               	return
 17282  0EE4                     __end_of_i2c_ISR:	
 17283                           
 17284                           	psect	text56
 17285  0A22                     __ptext56:	
 17286 ;; *************** function _mssp1_clearIRQ *****************
 17287 ;; Defined at:
 17288 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 17289 ;; Parameters:    Size  Location     Type
 17290 ;;		None
 17291 ;; Auto vars:     Size  Location     Type
 17292 ;;		None
 17293 ;; Return value:  Size  Location     Type
 17294 ;;                  1    wreg      void 
 17295 ;; Registers used:
 17296 ;;		None
 17297 ;; Tracked objects:
 17298 ;;		On entry : 0/0
 17299 ;;		On exit  : 0/0
 17300 ;;		Unchanged: 0/0
 17301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17306 ;;Total ram usage:        0 bytes
 17307 ;; Hardware stack levels used:    1
 17308 ;; This function calls:
 17309 ;;		Nothing
 17310 ;; This function is called by:
 17311 ;;		_i2c_ISR
 17312 ;;		_i2c_open
 17313 ;;		_i2c_close
 17314 ;; This function uses a non-reentrant model
 17315 ;;
 17316                           
 17317                           
 17318                           ;psect for function _mssp1_clearIRQ
 17319  0A22                     _mssp1_clearIRQ:	
 17320  0A22                     i1l5165:	
 17321                           ;incstack = 0
 17322                           ; Regs used in _mssp1_clearIRQ: []
 17323                           
 17324                           
 17325                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 17326  0A22  002E               	movlb	14	; select bank14
 17327  0A23  100F               	bcf	15,0	;volatile
 17328  0A24                     i1l488:	
 17329  0A24  0008               	return
 17330  0A25                     __end_of_mssp1_clearIRQ:	
 17331                           
 17332                           	psect	text57
 17333  0751                     __ptext57:	
 17334 ;; *************** function _do_I2C_RX *****************
 17335 ;; Defined at:
 17336 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 17337 ;; Parameters:    Size  Location     Type
 17338 ;;		None
 17339 ;; Auto vars:     Size  Location     Type
 17340 ;;		None
 17341 ;; Return value:  Size  Location     Type
 17342 ;;                  1    wreg      enum E12722
 17343 ;; Registers used:
 17344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17345 ;; Tracked objects:
 17346 ;;		On entry : 0/0
 17347 ;;		On exit  : 0/0
 17348 ;;		Unchanged: 0/0
 17349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17352 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17353 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17354 ;;Total ram usage:        3 bytes
 17355 ;; Hardware stack levels used:    1
 17356 ;; Hardware stack levels required when called:    3
 17357 ;; This function calls:
 17358 ;;		Absolute function
 17359 ;;		_do_I2C_DO_NACK_RESTART
 17360 ;;		_do_I2C_DO_NACK_STOP
 17361 ;;		_i2c1_driver_getRXData
 17362 ;;		_i2c1_driver_sendACK
 17363 ;;		_i2c_restartWrite
 17364 ;;		_rd1RegCompleteHandler
 17365 ;;		_rd2RegCompleteHandler
 17366 ;;		_rdBlkRegCompleteHandler
 17367 ;;		_returnReset
 17368 ;;		_returnStop
 17369 ;;		_wr1RegCompleteHandler
 17370 ;;		_wr2RegCompleteHandler
 17371 ;; This function is called by:
 17372 ;;		_i2c_ISR
 17373 ;; This function uses a non-reentrant model
 17374 ;;
 17375                           
 17376                           
 17377                           ;psect for function _do_I2C_RX
 17378  0751                     _do_I2C_RX:	
 17379  0751                     i1l5291:	
 17380                           ;incstack = 0
 17381                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17382                           
 17383                           
 17384                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 17385  0751  318A  221C  3187   	fcall	_i2c1_driver_getRXData
 17386  0754  00FA               	movwf	??_do_I2C_RX
 17387  0755  0021               	movlb	1	; select bank1
 17388  0756  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 17389  0757  0086               	movwf	6
 17390  0758  0187               	clrf	7
 17391  0759  087A               	movf	??_do_I2C_RX,w
 17392  075A  0081               	movwf	1
 17393  075B                     i1l5293:	
 17394  075B  3001               	movlw	1
 17395  075C  00FA               	movwf	??_do_I2C_RX
 17396  075D  087A               	movf	??_do_I2C_RX,w
 17397  075E  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 17398  075F                     i1l5295:	
 17399                           
 17400                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 17401  075F  3001               	movlw	1
 17402  0760  02A3               	subwf	(_i2c_status^(0+128)+3),f
 17403  0761  3000               	movlw	0
 17404  0762  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 17405  0763  0823               	movf	(_i2c_status^(0+128)+3),w
 17406  0764  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 17407  0765  1903               	btfsc	3,2
 17408  0766  2F68               	goto	u256_21
 17409  0767  2F69               	goto	u256_20
 17410  0768                     u256_21:	
 17411  0768  2F6E               	goto	i1l185
 17412  0769                     u256_20:	
 17413  0769                     i1l5297:	
 17414                           
 17415                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 17416  0769  318A  222B  3187   	fcall	_i2c1_driver_sendACK
 17417  076C                     i1l5299:	
 17418                           
 17419                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 17420  076C  3005               	movlw	5
 17421  076D  2F9A               	goto	i1l186
 17422  076E                     i1l185:	
 17423                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 17424                           
 17425                           
 17426                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 17427  076E  1520               	bsf	_i2c_status^(0+128),2
 17428                           
 17429                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 17430  076F  2F78               	goto	i1l5315
 17431  0770                     i1l5305:	
 17432                           
 17433                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 17434  0770  318A  225F  3187   	fcall	_do_I2C_DO_NACK_RESTART
 17435  0773  2F9A               	goto	i1l186
 17436  0774                     i1l5309:	
 17437                           
 17438                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 17439  0774  318A  225A  3187   	fcall	_do_I2C_DO_NACK_STOP
 17440  0777  2F9A               	goto	i1l186
 17441  0778                     i1l5315:	
 17442  0778  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 17443  0779  00FA               	movwf	??_do_I2C_RX
 17444  077A  087A               	movf	??_do_I2C_RX,w
 17445  077B  00F9               	movwf	rdBlkRegCompleteHandler@p
 17446  077C  300B               	movlw	11
 17447  077D  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17448  077E  0086               	movwf	6
 17449  077F  0187               	clrf	7
 17450  0780  3F41               	moviw [1]fsr1
 17451  0781  008A               	movwf	10
 17452  0782  3F40               	moviw [0]fsr1
 17453  0783  000A               	callw
 17454  0784  3187               	pagesel	$
 17455  0785  00FB               	movwf	??_do_I2C_RX+1
 17456  0786  01FC               	clrf	??_do_I2C_RX+2
 17457                           
 17458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17459                           ; Switch size 1, requested type "simple"
 17460                           ; Number of cases is 1, Range of values is 0 to 0
 17461                           ; switch strategies available:
 17462                           ; Name         Instructions Cycles
 17463                           ; simple_byte            4     3 (average)
 17464                           ; direct_byte            8     6 (fixed)
 17465                           ; jumptable            260     6 (fixed)
 17466                           ;	Chosen strategy is simple_byte
 17467  0787  087C               	movf	??_do_I2C_RX+2,w
 17468  0788  3A00               	xorlw	0	; case 0
 17469  0789  1903               	skipnz
 17470  078A  2F8C               	goto	i1l7827
 17471  078B  2F74               	goto	i1l5309
 17472  078C                     i1l7827:	
 17473                           
 17474                           ; Switch size 1, requested type "simple"
 17475                           ; Number of cases is 4, Range of values is 1 to 4
 17476                           ; switch strategies available:
 17477                           ; Name         Instructions Cycles
 17478                           ; simple_byte           13     7 (average)
 17479                           ; direct_byte           17     9 (fixed)
 17480                           ; jumptable            263     9 (fixed)
 17481                           ;	Chosen strategy is simple_byte
 17482  078C  087B               	movf	??_do_I2C_RX+1,w
 17483  078D  3A01               	xorlw	1	; case 1
 17484  078E  1903               	skipnz
 17485  078F  2F74               	goto	i1l5309
 17486  0790  3A03               	xorlw	3	; case 2
 17487  0791  1903               	skipnz
 17488  0792  2F70               	goto	i1l5305
 17489  0793  3A01               	xorlw	1	; case 3
 17490  0794  1903               	skipnz
 17491  0795  2F70               	goto	i1l5305
 17492  0796  3A07               	xorlw	7	; case 4
 17493  0797  1903               	skipnz
 17494  0798  2F74               	goto	i1l5309
 17495  0799  2F74               	goto	i1l5309
 17496  079A                     i1l186:	
 17497  079A  0008               	return
 17498  079B                     __end_of_do_I2C_RX:	
 17499                           
 17500                           	psect	text58
 17501  0615                     __ptext58:	
 17502 ;; *************** function _do_I2C_TX *****************
 17503 ;; Defined at:
 17504 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 17505 ;; Parameters:    Size  Location     Type
 17506 ;;		None
 17507 ;; Auto vars:     Size  Location     Type
 17508 ;;		None
 17509 ;; Return value:  Size  Location     Type
 17510 ;;                  1    wreg      enum E12722
 17511 ;; Registers used:
 17512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17513 ;; Tracked objects:
 17514 ;;		On entry : 0/0
 17515 ;;		On exit  : 0/0
 17516 ;;		Unchanged: 0/0
 17517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17520 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17521 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17522 ;;Total ram usage:        3 bytes
 17523 ;; Hardware stack levels used:    1
 17524 ;; Hardware stack levels required when called:    3
 17525 ;; This function calls:
 17526 ;;		Absolute function
 17527 ;;		_do_I2C_SEND_RESTART_READ
 17528 ;;		_do_I2C_SEND_RESTART_WRITE
 17529 ;;		_do_I2C_SEND_STOP
 17530 ;;		_i2c1_driver_TXData
 17531 ;;		_i2c1_driver_isNACK
 17532 ;;		_i2c_restartWrite
 17533 ;;		_rd1RegCompleteHandler
 17534 ;;		_rd2RegCompleteHandler
 17535 ;;		_rdBlkRegCompleteHandler
 17536 ;;		_returnReset
 17537 ;;		_returnStop
 17538 ;;		_wr1RegCompleteHandler
 17539 ;;		_wr2RegCompleteHandler
 17540 ;; This function is called by:
 17541 ;;		_i2c_ISR
 17542 ;; This function uses a non-reentrant model
 17543 ;;
 17544                           
 17545                           
 17546                           ;psect for function _do_I2C_TX
 17547  0615                     _do_I2C_TX:	
 17548  0615                     i1l5257:	
 17549                           ;incstack = 0
 17550                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17551                           
 17552                           
 17553                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 17554  0615  318A  2284  3186   	fcall	_i2c1_driver_isNACK
 17555  0618  1C03               	btfss	3,0
 17556  0619  2E1B               	goto	u254_21
 17557  061A  2E1C               	goto	u254_20
 17558  061B                     u254_21:	
 17559  061B  2E4C               	goto	i1l169
 17560  061C                     u254_20:	
 17561  061C  2E29               	goto	i1l5275
 17562  061D                     i1l5261:	
 17563                           
 17564                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 17565  061D  318A  2241  3186   	fcall	_do_I2C_SEND_RESTART_READ
 17566  0620  2E68               	goto	i1l172
 17567  0621                     i1l5265:	
 17568                           
 17569                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 17570  0621  318A  2246  3186   	fcall	_do_I2C_SEND_RESTART_WRITE
 17571  0624  2E68               	goto	i1l172
 17572  0625                     i1l5269:	
 17573                           
 17574                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 17575  0625  318A  2250  3186   	fcall	_do_I2C_SEND_STOP
 17576  0628  2E68               	goto	i1l172
 17577  0629                     i1l5275:	
 17578  0629  0021               	movlb	1	; select bank1
 17579  062A  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 17580  062B  00FA               	movwf	??_do_I2C_TX
 17581  062C  087A               	movf	??_do_I2C_TX,w
 17582  062D  00F9               	movwf	rdBlkRegCompleteHandler@p
 17583  062E  3011               	movlw	17
 17584  062F  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17585  0630  0086               	movwf	6
 17586  0631  0187               	clrf	7
 17587  0632  3F41               	moviw [1]fsr1
 17588  0633  008A               	movwf	10
 17589  0634  3F40               	moviw [0]fsr1
 17590  0635  000A               	callw
 17591  0636  3186               	pagesel	$
 17592  0637  00FB               	movwf	??_do_I2C_TX+1
 17593  0638  01FC               	clrf	??_do_I2C_TX+2
 17594                           
 17595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17596                           ; Switch size 1, requested type "simple"
 17597                           ; Number of cases is 1, Range of values is 0 to 0
 17598                           ; switch strategies available:
 17599                           ; Name         Instructions Cycles
 17600                           ; simple_byte            4     3 (average)
 17601                           ; direct_byte            8     6 (fixed)
 17602                           ; jumptable            260     6 (fixed)
 17603                           ;	Chosen strategy is simple_byte
 17604  0639  087C               	movf	??_do_I2C_TX+2,w
 17605  063A  3A00               	xorlw	0	; case 0
 17606  063B  1903               	skipnz
 17607  063C  2E3E               	goto	i1l7829
 17608  063D  2E25               	goto	i1l5269
 17609  063E                     i1l7829:	
 17610                           
 17611                           ; Switch size 1, requested type "simple"
 17612                           ; Number of cases is 4, Range of values is 1 to 4
 17613                           ; switch strategies available:
 17614                           ; Name         Instructions Cycles
 17615                           ; simple_byte           13     7 (average)
 17616                           ; direct_byte           17     9 (fixed)
 17617                           ; jumptable            263     9 (fixed)
 17618                           ;	Chosen strategy is simple_byte
 17619  063E  087B               	movf	??_do_I2C_TX+1,w
 17620  063F  3A01               	xorlw	1	; case 1
 17621  0640  1903               	skipnz
 17622  0641  2E25               	goto	i1l5269
 17623  0642  3A03               	xorlw	3	; case 2
 17624  0643  1903               	skipnz
 17625  0644  2E1D               	goto	i1l5261
 17626  0645  3A01               	xorlw	1	; case 3
 17627  0646  1903               	skipnz
 17628  0647  2E21               	goto	i1l5265
 17629  0648  3A07               	xorlw	7	; case 4
 17630  0649  1903               	skipnz
 17631  064A  2E25               	goto	i1l5269
 17632  064B  2E25               	goto	i1l5269
 17633  064C                     i1l169:	
 17634                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 17635                           
 17636                           
 17637                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 17638  064C  0021               	movlb	1	; select bank1
 17639  064D  11A0               	bcf	_i2c_status^(0+128),3
 17640  064E                     i1l5277:	
 17641                           
 17642                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 17643  064E  3002               	movlw	2
 17644  064F  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17645  0650  0086               	movwf	6
 17646  0651  0187               	clrf	7
 17647  0652  3F40               	moviw [0]fsr1
 17648  0653  0084               	movwf	4
 17649  0654  0185               	clrf	5
 17650  0655  0A81               	incf	1,f
 17651  0656  0800               	movf	0,w
 17652  0657  318A  2237  3186   	fcall	_i2c1_driver_TXData
 17653  065A                     i1l5279:	
 17654                           
 17655                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 17656  065A  3001               	movlw	1
 17657  065B  0021               	movlb	1	; select bank1
 17658  065C  02A3               	subwf	(_i2c_status^(0+128)+3),f
 17659  065D  3000               	movlw	0
 17660  065E  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 17661  065F  0823               	movf	(_i2c_status^(0+128)+3),w
 17662  0660  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 17663  0661  1D03               	btfss	3,2
 17664  0662  2E64               	goto	u255_21
 17665  0663  2E65               	goto	u255_20
 17666  0664                     u255_21:	
 17667  0664  2E67               	goto	i1l5283
 17668  0665                     u255_20:	
 17669  0665                     i1l5281:	
 17670  0665  3006               	movlw	6
 17671  0666  2E68               	goto	i1l172
 17672  0667                     i1l5283:	
 17673  0667  3003               	movlw	3
 17674  0668                     i1l172:	
 17675  0668  0008               	return
 17676  0669                     __end_of_do_I2C_TX:	
 17677                           
 17678                           	psect	text59
 17679  0E8B                     __ptext59:	
 17680 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 17681 ;; Defined at:
 17682 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 17683 ;; Parameters:    Size  Location     Type
 17684 ;;		None
 17685 ;; Auto vars:     Size  Location     Type
 17686 ;;		None
 17687 ;; Return value:  Size  Location     Type
 17688 ;;                  1    wreg      enum E12722
 17689 ;; Registers used:
 17690 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17691 ;; Tracked objects:
 17692 ;;		On entry : 0/0
 17693 ;;		On exit  : 0/0
 17694 ;;		Unchanged: 0/0
 17695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17698 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17699 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17700 ;;Total ram usage:        3 bytes
 17701 ;; Hardware stack levels used:    1
 17702 ;; Hardware stack levels required when called:    3
 17703 ;; This function calls:
 17704 ;;		Absolute function
 17705 ;;		_do_I2C_SEND_RESTART
 17706 ;;		_do_I2C_SEND_STOP
 17707 ;;		_i2c_restartWrite
 17708 ;;		_rd1RegCompleteHandler
 17709 ;;		_rd2RegCompleteHandler
 17710 ;;		_rdBlkRegCompleteHandler
 17711 ;;		_returnReset
 17712 ;;		_returnStop
 17713 ;;		_wr1RegCompleteHandler
 17714 ;;		_wr2RegCompleteHandler
 17715 ;; This function is called by:
 17716 ;;		_i2c_ISR
 17717 ;; This function uses a non-reentrant model
 17718 ;;
 17719                           
 17720                           
 17721                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 17722  0E8B                     _do_I2C_DO_ADDRESS_NACK:	
 17723  0E8B                     i1l5235:	
 17724                           ;incstack = 0
 17725                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17726                           
 17727                           
 17728                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 17729  0E8B  0021               	movlb	1	; select bank1
 17730  0E8C  11A0               	bcf	_i2c_status^(0+128),3
 17731  0E8D                     i1l5237:	
 17732                           
 17733                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 17734  0E8D  3002               	movlw	2
 17735  0E8E  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 17736  0E8F  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 17737  0E90  00AA               	movwf	(_i2c_status^(0+128)+10)
 17738                           
 17739                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 17740  0E91  2E9A               	goto	i1l5249
 17741  0E92                     i1l5239:	
 17742                           
 17743                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 17744  0E92  318A  224B  318E   	fcall	_do_I2C_SEND_RESTART
 17745  0E95  2EB6               	goto	i1l164
 17746  0E96                     i1l5243:	
 17747                           
 17748                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 17749  0E96  318A  2250  318E   	fcall	_do_I2C_SEND_STOP
 17750  0E99  2EB6               	goto	i1l164
 17751  0E9A                     i1l5249:	
 17752  0E9A  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 17753  0E9B  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 17754  0E9C  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 17755  0E9D  00F9               	movwf	rdBlkRegCompleteHandler@p
 17756  0E9E  300F               	movlw	15
 17757  0E9F  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17758  0EA0  0086               	movwf	6
 17759  0EA1  0187               	clrf	7
 17760  0EA2  3F41               	moviw [1]fsr1
 17761  0EA3  008A               	movwf	10
 17762  0EA4  3F40               	moviw [0]fsr1
 17763  0EA5  000A               	callw
 17764  0EA6  318E               	pagesel	$
 17765  0EA7  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 17766  0EA8  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 17767                           
 17768                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17769                           ; Switch size 1, requested type "simple"
 17770                           ; Number of cases is 1, Range of values is 0 to 0
 17771                           ; switch strategies available:
 17772                           ; Name         Instructions Cycles
 17773                           ; simple_byte            4     3 (average)
 17774                           ; direct_byte            8     6 (fixed)
 17775                           ; jumptable            260     6 (fixed)
 17776                           ;	Chosen strategy is simple_byte
 17777  0EA9  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 17778  0EAA  3A00               	xorlw	0	; case 0
 17779  0EAB  1903               	skipnz
 17780  0EAC  2EAE               	goto	i1l7831
 17781  0EAD  2E96               	goto	i1l5243
 17782  0EAE                     i1l7831:	
 17783                           
 17784                           ; Switch size 1, requested type "simple"
 17785                           ; Number of cases is 2, Range of values is 2 to 3
 17786                           ; switch strategies available:
 17787                           ; Name         Instructions Cycles
 17788                           ; simple_byte            7     4 (average)
 17789                           ; direct_byte           13     9 (fixed)
 17790                           ; jumptable            263     9 (fixed)
 17791                           ;	Chosen strategy is simple_byte
 17792  0EAE  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 17793  0EAF  3A02               	xorlw	2	; case 2
 17794  0EB0  1903               	skipnz
 17795  0EB1  2E92               	goto	i1l5239
 17796  0EB2  3A01               	xorlw	1	; case 3
 17797  0EB3  1903               	skipnz
 17798  0EB4  2E92               	goto	i1l5239
 17799  0EB5  2E96               	goto	i1l5243
 17800  0EB6                     i1l164:	
 17801  0EB6  0008               	return
 17802  0EB7                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 17803                           
 17804                           	psect	text60
 17805  0A5F                     __ptext60:	
 17806 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 17807 ;; Defined at:
 17808 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 17809 ;; Parameters:    Size  Location     Type
 17810 ;;		None
 17811 ;; Auto vars:     Size  Location     Type
 17812 ;;		None
 17813 ;; Return value:  Size  Location     Type
 17814 ;;                  1    wreg      enum E12722
 17815 ;; Registers used:
 17816 ;;		wreg, status,2, status,0, pclath, cstack
 17817 ;; Tracked objects:
 17818 ;;		On entry : 0/0
 17819 ;;		On exit  : 0/0
 17820 ;;		Unchanged: 0/0
 17821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17826 ;;Total ram usage:        0 bytes
 17827 ;; Hardware stack levels used:    1
 17828 ;; Hardware stack levels required when called:    1
 17829 ;; This function calls:
 17830 ;;		_i2c1_driver_sendNACK
 17831 ;; This function is called by:
 17832 ;;		_do_I2C_RX
 17833 ;;		_i2c_ISR
 17834 ;; This function uses a non-reentrant model
 17835 ;;
 17836                           
 17837                           
 17838                           ;psect for function _do_I2C_DO_NACK_RESTART
 17839  0A5F                     _do_I2C_DO_NACK_RESTART:	
 17840  0A5F                     i1l4953:	
 17841                           ;incstack = 0
 17842                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 17843                           
 17844                           
 17845                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 17846  0A5F  318A  222F  318A   	fcall	_i2c1_driver_sendNACK
 17847  0A62                     i1l4955:	
 17848                           
 17849                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 17850  0A62  3009               	movlw	9
 17851  0A63                     i1l158:	
 17852  0A63  0008               	return
 17853  0A64                     __end_of_do_I2C_DO_NACK_RESTART:	
 17854                           
 17855                           	psect	text61
 17856  0A5A                     __ptext61:	
 17857 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 17858 ;; Defined at:
 17859 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 17860 ;; Parameters:    Size  Location     Type
 17861 ;;		None
 17862 ;; Auto vars:     Size  Location     Type
 17863 ;;		None
 17864 ;; Return value:  Size  Location     Type
 17865 ;;                  1    wreg      enum E12722
 17866 ;; Registers used:
 17867 ;;		wreg, status,2, status,0, pclath, cstack
 17868 ;; Tracked objects:
 17869 ;;		On entry : 0/0
 17870 ;;		On exit  : 0/0
 17871 ;;		Unchanged: 0/0
 17872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17877 ;;Total ram usage:        0 bytes
 17878 ;; Hardware stack levels used:    1
 17879 ;; Hardware stack levels required when called:    1
 17880 ;; This function calls:
 17881 ;;		_i2c1_driver_sendNACK
 17882 ;; This function is called by:
 17883 ;;		_do_I2C_RX
 17884 ;;		_i2c_ISR
 17885 ;; This function uses a non-reentrant model
 17886 ;;
 17887                           
 17888                           
 17889                           ;psect for function _do_I2C_DO_NACK_STOP
 17890  0A5A                     _do_I2C_DO_NACK_STOP:	
 17891  0A5A                     i1l4947:	
 17892                           ;incstack = 0
 17893                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 17894                           
 17895                           
 17896                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 17897  0A5A  318A  222F  318A   	fcall	_i2c1_driver_sendNACK
 17898  0A5D                     i1l4949:	
 17899                           
 17900                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 17901  0A5D  300A               	movlw	10
 17902  0A5E                     i1l155:	
 17903  0A5E  0008               	return
 17904  0A5F                     __end_of_do_I2C_DO_NACK_STOP:	
 17905                           
 17906                           	psect	text62
 17907  0A55                     __ptext62:	
 17908 ;; *************** function _do_I2C_DO_ACK *****************
 17909 ;; Defined at:
 17910 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 17911 ;; Parameters:    Size  Location     Type
 17912 ;;		None
 17913 ;; Auto vars:     Size  Location     Type
 17914 ;;		None
 17915 ;; Return value:  Size  Location     Type
 17916 ;;                  1    wreg      enum E12722
 17917 ;; Registers used:
 17918 ;;		wreg, status,2, status,0, pclath, cstack
 17919 ;; Tracked objects:
 17920 ;;		On entry : 0/0
 17921 ;;		On exit  : 0/0
 17922 ;;		Unchanged: 0/0
 17923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17928 ;;Total ram usage:        0 bytes
 17929 ;; Hardware stack levels used:    1
 17930 ;; Hardware stack levels required when called:    1
 17931 ;; This function calls:
 17932 ;;		_i2c1_driver_sendACK
 17933 ;; This function is called by:
 17934 ;;		_i2c_ISR
 17935 ;; This function uses a non-reentrant model
 17936 ;;
 17937                           
 17938                           
 17939                           ;psect for function _do_I2C_DO_ACK
 17940  0A55                     _do_I2C_DO_ACK:	
 17941  0A55                     i1l5229:	
 17942                           ;incstack = 0
 17943                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 17944                           
 17945                           
 17946                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 17947  0A55  318A  222B  318A   	fcall	_i2c1_driver_sendACK
 17948  0A58                     i1l5231:	
 17949                           
 17950                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 17951  0A58  3005               	movlw	5
 17952  0A59                     i1l152:	
 17953  0A59  0008               	return
 17954  0A5A                     __end_of_do_I2C_DO_ACK:	
 17955                           
 17956                           	psect	text63
 17957  0A76                     __ptext63:	
 17958 ;; *************** function _do_I2C_RCEN *****************
 17959 ;; Defined at:
 17960 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 17961 ;; Parameters:    Size  Location     Type
 17962 ;;		None
 17963 ;; Auto vars:     Size  Location     Type
 17964 ;;		None
 17965 ;; Return value:  Size  Location     Type
 17966 ;;                  1    wreg      enum E12722
 17967 ;; Registers used:
 17968 ;;		wreg, status,2, status,0, pclath, cstack
 17969 ;; Tracked objects:
 17970 ;;		On entry : 0/0
 17971 ;;		On exit  : 0/0
 17972 ;;		Unchanged: 0/0
 17973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17978 ;;Total ram usage:        0 bytes
 17979 ;; Hardware stack levels used:    1
 17980 ;; Hardware stack levels required when called:    1
 17981 ;; This function calls:
 17982 ;;		_i2c1_driver_startRX
 17983 ;; This function is called by:
 17984 ;;		_i2c_ISR
 17985 ;; This function uses a non-reentrant model
 17986 ;;
 17987                           
 17988                           
 17989                           ;psect for function _do_I2C_RCEN
 17990  0A76                     _do_I2C_RCEN:	
 17991  0A76                     i1l5221:	
 17992                           ;incstack = 0
 17993                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 17994                           
 17995                           
 17996                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 17997  0A76  0021               	movlb	1	; select bank1
 17998  0A77  11A0               	bcf	_i2c_status^(0+128),3
 17999  0A78                     i1l5223:	
 18000                           
 18001                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 18002  0A78  318A  2219  318A   	fcall	_i2c1_driver_startRX
 18003  0A7B                     i1l5225:	
 18004                           
 18005                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 18006  0A7B  3004               	movlw	4
 18007  0A7C                     i1l149:	
 18008  0A7C  0008               	return
 18009  0A7D                     __end_of_do_I2C_RCEN:	
 18010                           
 18011                           	psect	text64
 18012  0A94                     __ptext64:	
 18013 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 18014 ;; Defined at:
 18015 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 18016 ;; Parameters:    Size  Location     Type
 18017 ;;		None
 18018 ;; Auto vars:     Size  Location     Type
 18019 ;;		None
 18020 ;; Return value:  Size  Location     Type
 18021 ;;                  1    wreg      enum E12722
 18022 ;; Registers used:
 18023 ;;		wreg, status,2, status,0, pclath, cstack
 18024 ;; Tracked objects:
 18025 ;;		On entry : 0/0
 18026 ;;		On exit  : 0/0
 18027 ;;		Unchanged: 0/0
 18028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18033 ;;Total ram usage:        0 bytes
 18034 ;; Hardware stack levels used:    1
 18035 ;; Hardware stack levels required when called:    1
 18036 ;; This function calls:
 18037 ;;		_i2c1_driver_TXData
 18038 ;; This function is called by:
 18039 ;;		_i2c_ISR
 18040 ;; This function uses a non-reentrant model
 18041 ;;
 18042                           
 18043                           
 18044                           ;psect for function _do_I2C_SEND_ADR_WRITE
 18045  0A94                     _do_I2C_SEND_ADR_WRITE:	
 18046  0A94                     i1l5213:	
 18047                           ;incstack = 0
 18048                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 18049                           
 18050                           
 18051                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 18052  0A94  0021               	movlb	1	; select bank1
 18053  0A95  15A0               	bsf	_i2c_status^(0+128),3
 18054  0A96                     i1l5215:	
 18055                           
 18056                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 18057  0A96  3521               	lslf	(_i2c_status^(0+128)+1),w
 18058  0A97  318A  2237  318A   	fcall	_i2c1_driver_TXData
 18059  0A9A                     i1l5217:	
 18060                           
 18061                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 18062  0A9A  3003               	movlw	3
 18063  0A9B                     i1l146:	
 18064  0A9B  0008               	return
 18065  0A9C                     __end_of_do_I2C_SEND_ADR_WRITE:	
 18066                           
 18067                           	psect	text65
 18068  0AAC                     __ptext65:	
 18069 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 18070 ;; Defined at:
 18071 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 18072 ;; Parameters:    Size  Location     Type
 18073 ;;		None
 18074 ;; Auto vars:     Size  Location     Type
 18075 ;;		None
 18076 ;; Return value:  Size  Location     Type
 18077 ;;                  1    wreg      enum E12722
 18078 ;; Registers used:
 18079 ;;		wreg, status,2, status,0, pclath, cstack
 18080 ;; Tracked objects:
 18081 ;;		On entry : 0/0
 18082 ;;		On exit  : 0/0
 18083 ;;		Unchanged: 0/0
 18084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18089 ;;Total ram usage:        0 bytes
 18090 ;; Hardware stack levels used:    1
 18091 ;; Hardware stack levels required when called:    1
 18092 ;; This function calls:
 18093 ;;		_i2c1_driver_TXData
 18094 ;; This function is called by:
 18095 ;;		_i2c_ISR
 18096 ;; This function uses a non-reentrant model
 18097 ;;
 18098                           
 18099                           
 18100                           ;psect for function _do_I2C_SEND_ADR_READ
 18101  0AAC                     _do_I2C_SEND_ADR_READ:	
 18102  0AAC                     i1l5205:	
 18103                           ;incstack = 0
 18104                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 18105                           
 18106                           
 18107                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 18108  0AAC  0021               	movlb	1	; select bank1
 18109  0AAD  15A0               	bsf	_i2c_status^(0+128),3
 18110  0AAE                     i1l5207:	
 18111                           
 18112                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 18113  0AAE  1403               	setc
 18114  0AAF  0D21               	rlf	(_i2c_status^(0+128)+1),w
 18115  0AB0  318A  2237  318A   	fcall	_i2c1_driver_TXData
 18116  0AB3                     i1l5209:	
 18117                           
 18118                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 18119  0AB3  3005               	movlw	5
 18120  0AB4                     i1l143:	
 18121  0AB4  0008               	return
 18122  0AB5                     __end_of_do_I2C_SEND_ADR_READ:	
 18123                           
 18124                           	psect	text66
 18125  0A50                     __ptext66:	
 18126 ;; *************** function _do_I2C_SEND_STOP *****************
 18127 ;; Defined at:
 18128 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 18129 ;; Parameters:    Size  Location     Type
 18130 ;;		None
 18131 ;; Auto vars:     Size  Location     Type
 18132 ;;		None
 18133 ;; Return value:  Size  Location     Type
 18134 ;;                  1    wreg      enum E12722
 18135 ;; Registers used:
 18136 ;;		wreg, status,2, status,0, pclath, cstack
 18137 ;; Tracked objects:
 18138 ;;		On entry : 0/0
 18139 ;;		On exit  : 0/0
 18140 ;;		Unchanged: 0/0
 18141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18146 ;;Total ram usage:        0 bytes
 18147 ;; Hardware stack levels used:    1
 18148 ;; Hardware stack levels required when called:    1
 18149 ;; This function calls:
 18150 ;;		_i2c1_driver_stop
 18151 ;; This function is called by:
 18152 ;;		_do_I2C_DO_ADDRESS_NACK
 18153 ;;		_do_I2C_TX
 18154 ;;		_do_I2C_TX_EMPTY
 18155 ;;		_i2c_ISR
 18156 ;; This function uses a non-reentrant model
 18157 ;;
 18158                           
 18159                           
 18160                           ;psect for function _do_I2C_SEND_STOP
 18161  0A50                     _do_I2C_SEND_STOP:	
 18162  0A50                     i1l4935:	
 18163                           ;incstack = 0
 18164                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 18165                           
 18166                           
 18167                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 18168  0A50  318A  2216  318A   	fcall	_i2c1_driver_stop
 18169  0A53                     i1l4937:	
 18170                           
 18171                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 18172  0A53  3000               	movlw	0
 18173  0A54                     i1l140:	
 18174  0A54  0008               	return
 18175  0A55                     __end_of_do_I2C_SEND_STOP:	
 18176                           
 18177                           	psect	text67
 18178  0A4B                     __ptext67:	
 18179 ;; *************** function _do_I2C_SEND_RESTART *****************
 18180 ;; Defined at:
 18181 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 18182 ;; Parameters:    Size  Location     Type
 18183 ;;		None
 18184 ;; Auto vars:     Size  Location     Type
 18185 ;;		None
 18186 ;; Return value:  Size  Location     Type
 18187 ;;                  1    wreg      enum E12722
 18188 ;; Registers used:
 18189 ;;		wreg, status,2, status,0, pclath, cstack
 18190 ;; Tracked objects:
 18191 ;;		On entry : 0/0
 18192 ;;		On exit  : 0/0
 18193 ;;		Unchanged: 0/0
 18194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18199 ;;Total ram usage:        0 bytes
 18200 ;; Hardware stack levels used:    1
 18201 ;; Hardware stack levels required when called:    1
 18202 ;; This function calls:
 18203 ;;		_i2c1_driver_restart
 18204 ;; This function is called by:
 18205 ;;		_do_I2C_DO_ADDRESS_NACK
 18206 ;;		_do_I2C_TX_EMPTY
 18207 ;;		_i2c_ISR
 18208 ;; This function uses a non-reentrant model
 18209 ;;
 18210                           
 18211                           
 18212                           ;psect for function _do_I2C_SEND_RESTART
 18213  0A4B                     _do_I2C_SEND_RESTART:	
 18214  0A4B                     i1l4929:	
 18215                           ;incstack = 0
 18216                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18217                           
 18218                           
 18219                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 18220  0A4B  318A  2213  318A   	fcall	_i2c1_driver_restart
 18221  0A4E                     i1l4931:	
 18222                           
 18223                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 18224  0A4E  3001               	movlw	1
 18225  0A4F                     i1l137:	
 18226  0A4F  0008               	return
 18227  0A50                     __end_of_do_I2C_SEND_RESTART:	
 18228                           
 18229                           	psect	text68
 18230  0A46                     __ptext68:	
 18231 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 18232 ;; Defined at:
 18233 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 18234 ;; Parameters:    Size  Location     Type
 18235 ;;		None
 18236 ;; Auto vars:     Size  Location     Type
 18237 ;;		None
 18238 ;; Return value:  Size  Location     Type
 18239 ;;                  1    wreg      enum E12722
 18240 ;; Registers used:
 18241 ;;		wreg, status,2, status,0, pclath, cstack
 18242 ;; Tracked objects:
 18243 ;;		On entry : 0/0
 18244 ;;		On exit  : 0/0
 18245 ;;		Unchanged: 0/0
 18246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18251 ;;Total ram usage:        0 bytes
 18252 ;; Hardware stack levels used:    1
 18253 ;; Hardware stack levels required when called:    1
 18254 ;; This function calls:
 18255 ;;		_i2c1_driver_restart
 18256 ;; This function is called by:
 18257 ;;		_do_I2C_TX
 18258 ;;		_i2c_ISR
 18259 ;; This function uses a non-reentrant model
 18260 ;;
 18261                           
 18262                           
 18263                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 18264  0A46                     _do_I2C_SEND_RESTART_WRITE:	
 18265  0A46                     i1l4923:	
 18266                           ;incstack = 0
 18267                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 18268                           
 18269                           
 18270                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 18271  0A46  318A  2213  318A   	fcall	_i2c1_driver_restart
 18272  0A49                     i1l4925:	
 18273                           
 18274                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 18275  0A49  3002               	movlw	2
 18276  0A4A                     i1l134:	
 18277  0A4A  0008               	return
 18278  0A4B                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 18279                           
 18280                           	psect	text69
 18281  0A41                     __ptext69:	
 18282 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 18283 ;; Defined at:
 18284 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 18285 ;; Parameters:    Size  Location     Type
 18286 ;;		None
 18287 ;; Auto vars:     Size  Location     Type
 18288 ;;		None
 18289 ;; Return value:  Size  Location     Type
 18290 ;;                  1    wreg      enum E12722
 18291 ;; Registers used:
 18292 ;;		wreg, status,2, status,0, pclath, cstack
 18293 ;; Tracked objects:
 18294 ;;		On entry : 0/0
 18295 ;;		On exit  : 0/0
 18296 ;;		Unchanged: 0/0
 18297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18302 ;;Total ram usage:        0 bytes
 18303 ;; Hardware stack levels used:    1
 18304 ;; Hardware stack levels required when called:    1
 18305 ;; This function calls:
 18306 ;;		_i2c1_driver_restart
 18307 ;; This function is called by:
 18308 ;;		_do_I2C_TX
 18309 ;;		_i2c_ISR
 18310 ;; This function uses a non-reentrant model
 18311 ;;
 18312                           
 18313                           
 18314                           ;psect for function _do_I2C_SEND_RESTART_READ
 18315  0A41                     _do_I2C_SEND_RESTART_READ:	
 18316  0A41                     i1l4917:	
 18317                           ;incstack = 0
 18318                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 18319                           
 18320                           
 18321                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 18322  0A41  318A  2213  318A   	fcall	_i2c1_driver_restart
 18323  0A44                     i1l4919:	
 18324                           
 18325                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 18326  0A44  3001               	movlw	1
 18327  0A45                     i1l131:	
 18328  0A45  0008               	return
 18329  0A46                     __end_of_do_I2C_SEND_RESTART_READ:	
 18330                           
 18331                           	psect	text70
 18332  0A3C                     __ptext70:	
 18333 ;; *************** function _do_I2C_IDLE *****************
 18334 ;; Defined at:
 18335 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 18336 ;; Parameters:    Size  Location     Type
 18337 ;;		None
 18338 ;; Auto vars:     Size  Location     Type
 18339 ;;		None
 18340 ;; Return value:  Size  Location     Type
 18341 ;;                  1    wreg      enum E12722
 18342 ;; Registers used:
 18343 ;;		wreg, status,2
 18344 ;; Tracked objects:
 18345 ;;		On entry : 0/0
 18346 ;;		On exit  : 0/0
 18347 ;;		Unchanged: 0/0
 18348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18353 ;;Total ram usage:        0 bytes
 18354 ;; Hardware stack levels used:    1
 18355 ;; This function calls:
 18356 ;;		Nothing
 18357 ;; This function is called by:
 18358 ;;		_i2c_ISR
 18359 ;; This function uses a non-reentrant model
 18360 ;;
 18361                           
 18362                           
 18363                           ;psect for function _do_I2C_IDLE
 18364  0A3C                     _do_I2C_IDLE:	
 18365  0A3C                     i1l5197:	
 18366                           ;incstack = 0
 18367                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 18368                           
 18369                           
 18370                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 18371  0A3C  0021               	movlb	1	; select bank1
 18372  0A3D  1020               	bcf	_i2c_status^(0+128),0
 18373  0A3E                     i1l5199:	
 18374                           
 18375                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 18376  0A3E  01AA               	clrf	(_i2c_status^(0+128)+10)
 18377  0A3F                     i1l5201:	
 18378                           
 18379                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 18380  0A3F  300E               	movlw	14
 18381  0A40                     i1l128:	
 18382  0A40  0008               	return
 18383  0A41                     __end_of_do_I2C_IDLE:	
 18384                           
 18385                           	psect	text71
 18386  0A8C                     __ptext71:	
 18387 ;; *************** function _do_I2C_RESET *****************
 18388 ;; Defined at:
 18389 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 18390 ;; Parameters:    Size  Location     Type
 18391 ;;		None
 18392 ;; Auto vars:     Size  Location     Type
 18393 ;;		None
 18394 ;; Return value:  Size  Location     Type
 18395 ;;                  1    wreg      enum E12722
 18396 ;; Registers used:
 18397 ;;		wreg, status,2, status,0, pclath, cstack
 18398 ;; Tracked objects:
 18399 ;;		On entry : 0/0
 18400 ;;		On exit  : 0/0
 18401 ;;		Unchanged: 0/0
 18402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18407 ;;Total ram usage:        0 bytes
 18408 ;; Hardware stack levels used:    1
 18409 ;; Hardware stack levels required when called:    1
 18410 ;; This function calls:
 18411 ;;		_i2c1_driver_resetBus
 18412 ;; This function is called by:
 18413 ;;		_i2c_ISR
 18414 ;; This function uses a non-reentrant model
 18415 ;;
 18416                           
 18417                           
 18418                           ;psect for function _do_I2C_RESET
 18419  0A8C                     _do_I2C_RESET:	
 18420  0A8C                     i1l5187:	
 18421                           ;incstack = 0
 18422                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 18423                           
 18424                           
 18425                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 18426  0A8C  318A  220B  318A   	fcall	_i2c1_driver_resetBus
 18427  0A8F                     i1l5189:	
 18428                           
 18429                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 18430  0A8F  0021               	movlb	1	; select bank1
 18431  0A90  1020               	bcf	_i2c_status^(0+128),0
 18432  0A91                     i1l5191:	
 18433                           
 18434                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 18435  0A91  01AA               	clrf	(_i2c_status^(0+128)+10)
 18436  0A92                     i1l5193:	
 18437                           
 18438                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 18439  0A92  300E               	movlw	14
 18440  0A93                     i1l125:	
 18441  0A93  0008               	return
 18442  0A94                     __end_of_do_I2C_RESET:	
 18443                           
 18444                           	psect	text72
 18445  0F13                     __ptext72:	
 18446 ;; *************** function _do_I2C_TX_EMPTY *****************
 18447 ;; Defined at:
 18448 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 18449 ;; Parameters:    Size  Location     Type
 18450 ;;		None
 18451 ;; Auto vars:     Size  Location     Type
 18452 ;;		None
 18453 ;; Return value:  Size  Location     Type
 18454 ;;                  1    wreg      enum E12722
 18455 ;; Registers used:
 18456 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18457 ;; Tracked objects:
 18458 ;;		On entry : 0/0
 18459 ;;		On exit  : 0/0
 18460 ;;		Unchanged: 0/0
 18461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18464 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18465 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18466 ;;Total ram usage:        3 bytes
 18467 ;; Hardware stack levels used:    1
 18468 ;; Hardware stack levels required when called:    3
 18469 ;; This function calls:
 18470 ;;		Absolute function
 18471 ;;		_do_I2C_SEND_RESTART
 18472 ;;		_do_I2C_SEND_STOP
 18473 ;;		_i2c_restartWrite
 18474 ;;		_mssp1_setIRQ
 18475 ;;		_rd1RegCompleteHandler
 18476 ;;		_rd2RegCompleteHandler
 18477 ;;		_rdBlkRegCompleteHandler
 18478 ;;		_returnReset
 18479 ;;		_returnStop
 18480 ;;		_wr1RegCompleteHandler
 18481 ;;		_wr2RegCompleteHandler
 18482 ;; This function is called by:
 18483 ;;		_i2c_ISR
 18484 ;; This function uses a non-reentrant model
 18485 ;;
 18486                           
 18487                           
 18488                           ;psect for function _do_I2C_TX_EMPTY
 18489  0F13                     _do_I2C_TX_EMPTY:	
 18490  0F13                     i1l5323:	
 18491                           ;incstack = 0
 18492                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18493                           
 18494                           
 18495                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 18496  0F13  0021               	movlb	1	; select bank1
 18497  0F14  1520               	bsf	_i2c_status^(0+128),2
 18498                           
 18499                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 18500  0F15  2F23               	goto	i1l5341
 18501  0F16                     i1l5325:	
 18502                           
 18503                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 18504  0F16  318A  224B  318F   	fcall	_do_I2C_SEND_RESTART
 18505  0F19  2F45               	goto	i1l200
 18506  0F1A                     i1l5329:	
 18507                           
 18508                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 18509  0F1A  318A  221F  318F   	fcall	_mssp1_setIRQ
 18510  0F1D                     i1l5331:	
 18511                           
 18512                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 18513  0F1D  3003               	movlw	3
 18514  0F1E  2F45               	goto	i1l200
 18515  0F1F                     i1l5335:	
 18516                           
 18517                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 18518  0F1F  318A  2250  318F   	fcall	_do_I2C_SEND_STOP
 18519  0F22  2F45               	goto	i1l200
 18520  0F23                     i1l5341:	
 18521  0F23  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 18522  0F24  00FA               	movwf	??_do_I2C_TX_EMPTY
 18523  0F25  087A               	movf	??_do_I2C_TX_EMPTY,w
 18524  0F26  00F9               	movwf	rdBlkRegCompleteHandler@p
 18525  0F27  300B               	movlw	11
 18526  0F28  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 18527  0F29  0086               	movwf	6
 18528  0F2A  0187               	clrf	7
 18529  0F2B  3F41               	moviw [1]fsr1
 18530  0F2C  008A               	movwf	10
 18531  0F2D  3F40               	moviw [0]fsr1
 18532  0F2E  000A               	callw
 18533  0F2F  318F               	pagesel	$
 18534  0F30  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 18535  0F31  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 18536                           
 18537                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18538                           ; Switch size 1, requested type "simple"
 18539                           ; Number of cases is 1, Range of values is 0 to 0
 18540                           ; switch strategies available:
 18541                           ; Name         Instructions Cycles
 18542                           ; simple_byte            4     3 (average)
 18543                           ; direct_byte            8     6 (fixed)
 18544                           ; jumptable            260     6 (fixed)
 18545                           ;	Chosen strategy is simple_byte
 18546  0F32  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 18547  0F33  3A00               	xorlw	0	; case 0
 18548  0F34  1903               	skipnz
 18549  0F35  2F37               	goto	i1l7833
 18550  0F36  2F1F               	goto	i1l5335
 18551  0F37                     i1l7833:	
 18552                           
 18553                           ; Switch size 1, requested type "simple"
 18554                           ; Number of cases is 4, Range of values is 1 to 4
 18555                           ; switch strategies available:
 18556                           ; Name         Instructions Cycles
 18557                           ; simple_byte           13     7 (average)
 18558                           ; direct_byte           17     9 (fixed)
 18559                           ; jumptable            263     9 (fixed)
 18560                           ;	Chosen strategy is simple_byte
 18561  0F37  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 18562  0F38  3A01               	xorlw	1	; case 1
 18563  0F39  1903               	skipnz
 18564  0F3A  2F1F               	goto	i1l5335
 18565  0F3B  3A03               	xorlw	3	; case 2
 18566  0F3C  1903               	skipnz
 18567  0F3D  2F16               	goto	i1l5325
 18568  0F3E  3A01               	xorlw	1	; case 3
 18569  0F3F  1903               	skipnz
 18570  0F40  2F16               	goto	i1l5325
 18571  0F41  3A07               	xorlw	7	; case 4
 18572  0F42  1903               	skipnz
 18573  0F43  2F1A               	goto	i1l5329
 18574  0F44  2F1F               	goto	i1l5335
 18575  0F45                     i1l200:	
 18576  0F45  0008               	return
 18577  0F46                     __end_of_do_I2C_TX_EMPTY:	
 18578                           
 18579                           	psect	text73
 18580  0A1F                     __ptext73:	
 18581 ;; *************** function _mssp1_setIRQ *****************
 18582 ;; Defined at:
 18583 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 18584 ;; Parameters:    Size  Location     Type
 18585 ;;		None
 18586 ;; Auto vars:     Size  Location     Type
 18587 ;;		None
 18588 ;; Return value:  Size  Location     Type
 18589 ;;                  1    wreg      void 
 18590 ;; Registers used:
 18591 ;;		None
 18592 ;; Tracked objects:
 18593 ;;		On entry : 0/0
 18594 ;;		On exit  : 0/0
 18595 ;;		Unchanged: 0/0
 18596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18601 ;;Total ram usage:        0 bytes
 18602 ;; Hardware stack levels used:    1
 18603 ;; This function calls:
 18604 ;;		Nothing
 18605 ;; This function is called by:
 18606 ;;		_do_I2C_TX_EMPTY
 18607 ;; This function uses a non-reentrant model
 18608 ;;
 18609                           
 18610                           
 18611                           ;psect for function _mssp1_setIRQ
 18612  0A1F                     _mssp1_setIRQ:	
 18613  0A1F                     i1l4967:	
 18614                           ;incstack = 0
 18615                           ; Regs used in _mssp1_setIRQ: []
 18616                           
 18617                           
 18618                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 18619  0A1F  002E               	movlb	14	; select bank14
 18620  0A20  140F               	bsf	15,0	;volatile
 18621  0A21                     i1l491:	
 18622  0A21  0008               	return
 18623  0A22                     __end_of_mssp1_setIRQ:	
 18624                           
 18625                           	psect	text74
 18626  0A84                     __ptext74:	
 18627 ;; *************** function _i2c1_driver_isNACK *****************
 18628 ;; Defined at:
 18629 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 18630 ;; Parameters:    Size  Location     Type
 18631 ;;		None
 18632 ;; Auto vars:     Size  Location     Type
 18633 ;;		None
 18634 ;; Return value:  Size  Location     Type
 18635 ;;		None               void
 18636 ;; Registers used:
 18637 ;;		wreg, status,2, status,0
 18638 ;; Tracked objects:
 18639 ;;		On entry : 0/0
 18640 ;;		On exit  : 0/0
 18641 ;;		Unchanged: 0/0
 18642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18645 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18646 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18647 ;;Total ram usage:        1 bytes
 18648 ;; Hardware stack levels used:    1
 18649 ;; This function calls:
 18650 ;;		Nothing
 18651 ;; This function is called by:
 18652 ;;		_do_I2C_TX
 18653 ;;		_i2c_ISR
 18654 ;; This function uses a non-reentrant model
 18655 ;;
 18656                           
 18657                           
 18658                           ;psect for function _i2c1_driver_isNACK
 18659  0A84                     _i2c1_driver_isNACK:	
 18660  0A84                     i1l4959:	
 18661                           ;incstack = 0
 18662                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 18663                           
 18664                           
 18665                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 18666  0A84  0023               	movlb	3	; select bank3
 18667  0A85  0E11               	swapf	17,w	;volatile
 18668  0A86  0C89               	rrf	9,f
 18669  0A87  0C89               	rrf	9,f
 18670  0A88  3901               	andlw	1
 18671  0A89  00F0               	movwf	??_i2c1_driver_isNACK
 18672  0A8A  0C70               	rrf	??_i2c1_driver_isNACK,w
 18673  0A8B                     i1l526:	
 18674  0A8B  0008               	return
 18675  0A8C                     __end_of_i2c1_driver_isNACK:	
 18676                           
 18677                           	psect	text75
 18678  0A37                     __ptext75:	
 18679 ;; *************** function _i2c1_driver_TXData *****************
 18680 ;; Defined at:
 18681 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 18682 ;; Parameters:    Size  Location     Type
 18683 ;;  d               1    wreg     unsigned char 
 18684 ;; Auto vars:     Size  Location     Type
 18685 ;;  d               1    0[COMMON] unsigned char 
 18686 ;; Return value:  Size  Location     Type
 18687 ;;                  1    wreg      void 
 18688 ;; Registers used:
 18689 ;;		wreg
 18690 ;; Tracked objects:
 18691 ;;		On entry : 0/0
 18692 ;;		On exit  : 0/0
 18693 ;;		Unchanged: 0/0
 18694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18699 ;;Total ram usage:        1 bytes
 18700 ;; Hardware stack levels used:    1
 18701 ;; This function calls:
 18702 ;;		Nothing
 18703 ;; This function is called by:
 18704 ;;		_do_I2C_SEND_ADR_READ
 18705 ;;		_do_I2C_SEND_ADR_WRITE
 18706 ;;		_do_I2C_TX
 18707 ;; This function uses a non-reentrant model
 18708 ;;
 18709                           
 18710                           
 18711                           ;psect for function _i2c1_driver_TXData
 18712  0A37                     _i2c1_driver_TXData:	
 18713                           
 18714                           ;incstack = 0
 18715                           ; Regs used in _i2c1_driver_TXData: [wreg]
 18716                           ;i2c1_driver_TXData@d stored from wreg
 18717  0A37  00F0               	movwf	i2c1_driver_TXData@d
 18718  0A38                     i1l4941:	
 18719                           
 18720                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 18721  0A38  0870               	movf	i2c1_driver_TXData@d,w
 18722  0A39  0023               	movlb	3	; select bank3
 18723  0A3A  008C               	movwf	12	;volatile
 18724  0A3B                     i1l541:	
 18725  0A3B  0008               	return
 18726  0A3C                     __end_of_i2c1_driver_TXData:	
 18727                           
 18728                           	psect	text76
 18729  0A1C                     __ptext76:	
 18730 ;; *************** function _i2c1_driver_getRXData *****************
 18731 ;; Defined at:
 18732 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 18733 ;; Parameters:    Size  Location     Type
 18734 ;;		None
 18735 ;; Auto vars:     Size  Location     Type
 18736 ;;		None
 18737 ;; Return value:  Size  Location     Type
 18738 ;;                  1    wreg      unsigned char 
 18739 ;; Registers used:
 18740 ;;		wreg
 18741 ;; Tracked objects:
 18742 ;;		On entry : 0/0
 18743 ;;		On exit  : 0/0
 18744 ;;		Unchanged: 0/0
 18745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18750 ;;Total ram usage:        0 bytes
 18751 ;; Hardware stack levels used:    1
 18752 ;; This function calls:
 18753 ;;		Nothing
 18754 ;; This function is called by:
 18755 ;;		_do_I2C_RX
 18756 ;; This function uses a non-reentrant model
 18757 ;;
 18758                           
 18759                           
 18760                           ;psect for function _i2c1_driver_getRXData
 18761  0A1C                     _i2c1_driver_getRXData:	
 18762  0A1C                     i1l4963:	
 18763                           ;incstack = 0
 18764                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 18765                           
 18766                           
 18767                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 18768  0A1C  0023               	movlb	3	; select bank3
 18769  0A1D  080C               	movf	12,w	;volatile
 18770  0A1E                     i1l532:	
 18771  0A1E  0008               	return
 18772  0A1F                     __end_of_i2c1_driver_getRXData:	
 18773                           
 18774                           	psect	text77
 18775  0A2F                     __ptext77:	
 18776 ;; *************** function _i2c1_driver_sendNACK *****************
 18777 ;; Defined at:
 18778 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 18779 ;; Parameters:    Size  Location     Type
 18780 ;;		None
 18781 ;; Auto vars:     Size  Location     Type
 18782 ;;		None
 18783 ;; Return value:  Size  Location     Type
 18784 ;;                  1    wreg      void 
 18785 ;; Registers used:
 18786 ;;		None
 18787 ;; Tracked objects:
 18788 ;;		On entry : 0/0
 18789 ;;		On exit  : 0/0
 18790 ;;		Unchanged: 0/0
 18791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18796 ;;Total ram usage:        0 bytes
 18797 ;; Hardware stack levels used:    1
 18798 ;; This function calls:
 18799 ;;		Nothing
 18800 ;; This function is called by:
 18801 ;;		_do_I2C_DO_NACK_STOP
 18802 ;;		_do_I2C_DO_NACK_RESTART
 18803 ;; This function uses a non-reentrant model
 18804 ;;
 18805                           
 18806                           
 18807                           ;psect for function _i2c1_driver_sendNACK
 18808  0A2F                     _i2c1_driver_sendNACK:	
 18809  0A2F                     i1l4747:	
 18810                           ;incstack = 0
 18811                           ; Regs used in _i2c1_driver_sendNACK: []
 18812                           
 18813                           
 18814                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 18815  0A2F  0023               	movlb	3	; select bank3
 18816  0A30  1691               	bsf	17,5	;volatile
 18817                           
 18818                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 18819  0A31  1611               	bsf	17,4	;volatile
 18820  0A32                     i1l550:	
 18821  0A32  0008               	return
 18822  0A33                     __end_of_i2c1_driver_sendNACK:	
 18823                           
 18824                           	psect	text78
 18825  0A0B                     __ptext78:	
 18826 ;; *************** function _i2c1_driver_resetBus *****************
 18827 ;; Defined at:
 18828 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 18829 ;; Parameters:    Size  Location     Type
 18830 ;;		None
 18831 ;; Auto vars:     Size  Location     Type
 18832 ;;		None
 18833 ;; Return value:  Size  Location     Type
 18834 ;;                  1    wreg      void 
 18835 ;; Registers used:
 18836 ;;		None
 18837 ;; Tracked objects:
 18838 ;;		On entry : 0/0
 18839 ;;		On exit  : 0/0
 18840 ;;		Unchanged: 0/0
 18841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18846 ;;Total ram usage:        0 bytes
 18847 ;; Hardware stack levels used:    1
 18848 ;; This function calls:
 18849 ;;		Nothing
 18850 ;; This function is called by:
 18851 ;;		_do_I2C_RESET
 18852 ;; This function uses a non-reentrant model
 18853 ;;
 18854                           
 18855                           
 18856                           ;psect for function _i2c1_driver_resetBus
 18857  0A0B                     _i2c1_driver_resetBus:	
 18858  0A0B                     i1l514:	
 18859                           ;incstack = 0
 18860                           ; Regs used in _i2c1_driver_resetBus: []
 18861                           
 18862  0A0B  0008               	return
 18863  0A0C                     __end_of_i2c1_driver_resetBus:	
 18864                           
 18865                           	psect	text79
 18866  0A19                     __ptext79:	
 18867 ;; *************** function _i2c1_driver_startRX *****************
 18868 ;; Defined at:
 18869 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 18870 ;; Parameters:    Size  Location     Type
 18871 ;;		None
 18872 ;; Auto vars:     Size  Location     Type
 18873 ;;		None
 18874 ;; Return value:  Size  Location     Type
 18875 ;;                  1    wreg      void 
 18876 ;; Registers used:
 18877 ;;		None
 18878 ;; Tracked objects:
 18879 ;;		On entry : 0/0
 18880 ;;		On exit  : 0/0
 18881 ;;		Unchanged: 0/0
 18882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18887 ;;Total ram usage:        0 bytes
 18888 ;; Hardware stack levels used:    1
 18889 ;; This function calls:
 18890 ;;		Nothing
 18891 ;; This function is called by:
 18892 ;;		_do_I2C_RCEN
 18893 ;; This function uses a non-reentrant model
 18894 ;;
 18895                           
 18896                           
 18897                           ;psect for function _i2c1_driver_startRX
 18898  0A19                     _i2c1_driver_startRX:	
 18899  0A19                     i1l4943:	
 18900                           ;incstack = 0
 18901                           ; Regs used in _i2c1_driver_startRX: []
 18902                           
 18903                           
 18904                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 18905  0A19  0023               	movlb	3	; select bank3
 18906  0A1A  1591               	bsf	17,3	;volatile
 18907  0A1B                     i1l529:	
 18908  0A1B  0008               	return
 18909  0A1C                     __end_of_i2c1_driver_startRX:	
 18910                           
 18911                           	psect	text80
 18912  0C7C                     __ptext80:	
 18913 ;; *************** function _rdBlkRegCompleteHandler *****************
 18914 ;; Defined at:
 18915 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 18916 ;; Parameters:    Size  Location     Type
 18917 ;;  p               1    9[COMMON] PTR void 
 18918 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 18919 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 18920 ;; Auto vars:     Size  Location     Type
 18921 ;;		None
 18922 ;; Return value:  Size  Location     Type
 18923 ;;                  1    wreg      enum E358
 18924 ;; Registers used:
 18925 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18926 ;; Tracked objects:
 18927 ;;		On entry : 0/0
 18928 ;;		On exit  : 0/0
 18929 ;;		Unchanged: 0/0
 18930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18931 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18934 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18935 ;;Total ram usage:        1 bytes
 18936 ;; Hardware stack levels used:    1
 18937 ;; Hardware stack levels required when called:    2
 18938 ;; This function calls:
 18939 ;;		_i2c_setBuffer
 18940 ;;		_i2c_setDataCompleteCallback
 18941 ;; This function is called by:
 18942 ;;		_i2c_readDataBlock
 18943 ;;		_do_I2C_DO_ADDRESS_NACK
 18944 ;;		_do_I2C_TX
 18945 ;;		_do_I2C_RX
 18946 ;;		_do_I2C_TX_EMPTY
 18947 ;; This function uses a non-reentrant model
 18948 ;;
 18949                           
 18950                           
 18951                           ;psect for function _rdBlkRegCompleteHandler
 18952  0C7C                     _rdBlkRegCompleteHandler:	
 18953  0C7C                     i1l5009:	
 18954                           ;incstack = 0
 18955                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 18956                           
 18957                           
 18958                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 18959  0C7C  0879               	movf	rdBlkRegCompleteHandler@p,w
 18960  0C7D  0086               	movwf	6
 18961  0C7E  0187               	clrf	7
 18962  0C7F  3F40               	moviw [0]fsr1
 18963  0C80  00F0               	movwf	i2c_setBuffer@bufferSize
 18964  0C81  3F41               	moviw [1]fsr1
 18965  0C82  00F1               	movwf	i2c_setBuffer@bufferSize+1
 18966  0C83  0879               	movf	rdBlkRegCompleteHandler@p,w
 18967  0C84  3E02               	addlw	2
 18968  0C85  0086               	movwf	6
 18969  0C86  0187               	clrf	7
 18970  0C87  0801               	movf	1,w
 18971  0C88  318B  2399  318C   	fcall	_i2c_setBuffer
 18972                           
 18973                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 18974  0C8B  3000               	movlw	0
 18975  0C8C  00F5               	movwf	i2c_setDataCompleteCallback@cb
 18976  0C8D  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 18977  0C8E  01F7               	clrf	i2c_setDataCompleteCallback@p
 18978  0C8F  318B  2344  318C   	fcall	_i2c_setDataCompleteCallback
 18979  0C92                     i1l5011:	
 18980                           
 18981                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 18982  0C92  3002               	movlw	2
 18983  0C93                     i1l303:	
 18984  0C93  0008               	return
 18985  0C94                     __end_of_rdBlkRegCompleteHandler:	
 18986                           
 18987                           	psect	text81
 18988  0BFD                     __ptext81:	
 18989 ;; *************** function _rd2RegCompleteHandler *****************
 18990 ;; Defined at:
 18991 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 18992 ;; Parameters:    Size  Location     Type
 18993 ;;  p               1    9[COMMON] PTR void 
 18994 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 18995 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 18996 ;; Auto vars:     Size  Location     Type
 18997 ;;		None
 18998 ;; Return value:  Size  Location     Type
 18999 ;;                  1    wreg      enum E358
 19000 ;; Registers used:
 19001 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19002 ;; Tracked objects:
 19003 ;;		On entry : 0/0
 19004 ;;		On exit  : 0/0
 19005 ;;		Unchanged: 0/0
 19006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19007 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19011 ;;Total ram usage:        1 bytes
 19012 ;; Hardware stack levels used:    1
 19013 ;; Hardware stack levels required when called:    2
 19014 ;; This function calls:
 19015 ;;		_i2c_setBuffer
 19016 ;;		_i2c_setDataCompleteCallback
 19017 ;; This function is called by:
 19018 ;;		_i2c_read2ByteRegister
 19019 ;;		_do_I2C_DO_ADDRESS_NACK
 19020 ;;		_do_I2C_TX
 19021 ;;		_do_I2C_RX
 19022 ;;		_do_I2C_TX_EMPTY
 19023 ;; This function uses a non-reentrant model
 19024 ;;
 19025                           
 19026                           
 19027                           ;psect for function _rd2RegCompleteHandler
 19028  0BFD                     _rd2RegCompleteHandler:	
 19029  0BFD                     i1l4993:	
 19030                           ;incstack = 0
 19031                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19032                           
 19033                           
 19034                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 19035  0BFD  3002               	movlw	2
 19036  0BFE  00F0               	movwf	i2c_setBuffer@bufferSize
 19037  0BFF  3000               	movlw	0
 19038  0C00  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19039  0C01  0879               	movf	rd2RegCompleteHandler@p,w
 19040  0C02  318B  2399  318B   	fcall	_i2c_setBuffer
 19041  0C05                     i1l4995:	
 19042                           
 19043                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 19044  0C05  3000               	movlw	0
 19045  0C06  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19046  0C07  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19047  0C08  01F7               	clrf	i2c_setDataCompleteCallback@p
 19048  0C09  318B  2344  318B   	fcall	_i2c_setDataCompleteCallback
 19049  0C0C                     i1l4997:	
 19050                           
 19051                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 19052  0C0C  3002               	movlw	2
 19053  0C0D                     i1l279:	
 19054  0C0D  0008               	return
 19055  0C0E                     __end_of_rd2RegCompleteHandler:	
 19056                           
 19057                           	psect	text82
 19058  0BEC                     __ptext82:	
 19059 ;; *************** function _rd1RegCompleteHandler *****************
 19060 ;; Defined at:
 19061 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19062 ;; Parameters:    Size  Location     Type
 19063 ;;  p               1    9[COMMON] PTR void 
 19064 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19065 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19066 ;; Auto vars:     Size  Location     Type
 19067 ;;		None
 19068 ;; Return value:  Size  Location     Type
 19069 ;;                  1    wreg      enum E358
 19070 ;; Registers used:
 19071 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19072 ;; Tracked objects:
 19073 ;;		On entry : 0/0
 19074 ;;		On exit  : 0/0
 19075 ;;		Unchanged: 0/0
 19076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19077 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19080 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19081 ;;Total ram usage:        1 bytes
 19082 ;; Hardware stack levels used:    1
 19083 ;; Hardware stack levels required when called:    2
 19084 ;; This function calls:
 19085 ;;		_i2c_setBuffer
 19086 ;;		_i2c_setDataCompleteCallback
 19087 ;; This function is called by:
 19088 ;;		_i2c_read1ByteRegister
 19089 ;;		_do_I2C_DO_ADDRESS_NACK
 19090 ;;		_do_I2C_TX
 19091 ;;		_do_I2C_RX
 19092 ;;		_do_I2C_TX_EMPTY
 19093 ;; This function uses a non-reentrant model
 19094 ;;
 19095                           
 19096                           
 19097                           ;psect for function _rd1RegCompleteHandler
 19098  0BEC                     _rd1RegCompleteHandler:	
 19099  0BEC                     i1l4985:	
 19100                           ;incstack = 0
 19101                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19102                           
 19103                           
 19104                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 19105  0BEC  3001               	movlw	1
 19106  0BED  00F0               	movwf	i2c_setBuffer@bufferSize
 19107  0BEE  3000               	movlw	0
 19108  0BEF  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19109  0BF0  0879               	movf	rd1RegCompleteHandler@p,w
 19110  0BF1  318B  2399  318B   	fcall	_i2c_setBuffer
 19111  0BF4                     i1l4987:	
 19112                           
 19113                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 19114  0BF4  3000               	movlw	0
 19115  0BF5  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19116  0BF6  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19117  0BF7  01F7               	clrf	i2c_setDataCompleteCallback@p
 19118  0BF8  318B  2344  318B   	fcall	_i2c_setDataCompleteCallback
 19119  0BFB                     i1l4989:	
 19120                           
 19121                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 19122  0BFB  3002               	movlw	2
 19123  0BFC                     i1l264:	
 19124  0BFC  0008               	return
 19125  0BFD                     __end_of_rd1RegCompleteHandler:	
 19126                           
 19127                           	psect	text83
 19128  0BDB                     __ptext83:	
 19129 ;; *************** function _wr1RegCompleteHandler *****************
 19130 ;; Defined at:
 19131 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19132 ;; Parameters:    Size  Location     Type
 19133 ;;  p               1    9[COMMON] PTR void 
 19134 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19135 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19136 ;; Auto vars:     Size  Location     Type
 19137 ;;		None
 19138 ;; Return value:  Size  Location     Type
 19139 ;;                  1    wreg      enum E358
 19140 ;; Registers used:
 19141 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19142 ;; Tracked objects:
 19143 ;;		On entry : 0/0
 19144 ;;		On exit  : 0/0
 19145 ;;		Unchanged: 0/0
 19146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19147 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19150 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19151 ;;Total ram usage:        1 bytes
 19152 ;; Hardware stack levels used:    1
 19153 ;; Hardware stack levels required when called:    2
 19154 ;; This function calls:
 19155 ;;		_i2c_setBuffer
 19156 ;;		_i2c_setDataCompleteCallback
 19157 ;; This function is called by:
 19158 ;;		_i2c_write1ByteRegister
 19159 ;;		_do_I2C_DO_ADDRESS_NACK
 19160 ;;		_do_I2C_TX
 19161 ;;		_do_I2C_RX
 19162 ;;		_do_I2C_TX_EMPTY
 19163 ;; This function uses a non-reentrant model
 19164 ;;
 19165                           
 19166                           
 19167                           ;psect for function _wr1RegCompleteHandler
 19168  0BDB                     _wr1RegCompleteHandler:	
 19169  0BDB                     i1l4977:	
 19170                           ;incstack = 0
 19171                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19172                           
 19173                           
 19174                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 19175  0BDB  3001               	movlw	1
 19176  0BDC  00F0               	movwf	i2c_setBuffer@bufferSize
 19177  0BDD  3000               	movlw	0
 19178  0BDE  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19179  0BDF  0879               	movf	wr1RegCompleteHandler@p,w
 19180  0BE0  318B  2399  318B   	fcall	_i2c_setBuffer
 19181  0BE3                     i1l4979:	
 19182                           
 19183                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 19184  0BE3  3000               	movlw	0
 19185  0BE4  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19186  0BE5  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19187  0BE6  01F7               	clrf	i2c_setDataCompleteCallback@p
 19188  0BE7  318B  2344  318B   	fcall	_i2c_setDataCompleteCallback
 19189  0BEA                     i1l4981:	
 19190                           
 19191                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 19192  0BEA  3004               	movlw	4
 19193  0BEB                     i1l243:	
 19194  0BEB  0008               	return
 19195  0BEC                     __end_of_wr1RegCompleteHandler:	
 19196                           
 19197                           	psect	text84
 19198  0002                     __ptext84:	
 19199 ;; *************** function _returnReset *****************
 19200 ;; Defined at:
 19201 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 19202 ;; Parameters:    Size  Location     Type
 19203 ;;  p               1    9[COMMON] PTR void 
 19204 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19205 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19206 ;; Auto vars:     Size  Location     Type
 19207 ;;		None
 19208 ;; Return value:  Size  Location     Type
 19209 ;;                  1    wreg      enum E12568
 19210 ;; Registers used:
 19211 ;;		wreg
 19212 ;; Tracked objects:
 19213 ;;		On entry : 0/0
 19214 ;;		On exit  : 0/0
 19215 ;;		Unchanged: 0/0
 19216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19217 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19221 ;;Total ram usage:        1 bytes
 19222 ;; Hardware stack levels used:    1
 19223 ;; This function calls:
 19224 ;;		Nothing
 19225 ;; This function is called by:
 19226 ;;		_i2c_open
 19227 ;;		_do_I2C_DO_ADDRESS_NACK
 19228 ;;		_do_I2C_TX
 19229 ;;		_do_I2C_RX
 19230 ;;		_do_I2C_TX_EMPTY
 19231 ;; This function uses a non-reentrant model
 19232 ;;
 19233                           
 19234                           
 19235                           ;psect for function _returnReset
 19236  0002                     _returnReset:	
 19237  0002                     i1l4973:	
 19238                           ;incstack = 0
 19239                           ; Regs used in _returnReset: [wreg]
 19240                           
 19241                           
 19242                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 19243  0002  3005               	movlw	5
 19244  0003                     i1l219:	
 19245  0003  0008               	return
 19246  0004                     __end_of_returnReset:	
 19247                           
 19248                           	psect	text85
 19249  0A0E                     __ptext85:	
 19250 ;; *************** function _returnStop *****************
 19251 ;; Defined at:
 19252 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 19253 ;; Parameters:    Size  Location     Type
 19254 ;;  p               1    9[COMMON] PTR void 
 19255 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19256 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19257 ;; Auto vars:     Size  Location     Type
 19258 ;;		None
 19259 ;; Return value:  Size  Location     Type
 19260 ;;                  1    wreg      enum E12568
 19261 ;; Registers used:
 19262 ;;		wreg
 19263 ;; Tracked objects:
 19264 ;;		On entry : 0/0
 19265 ;;		On exit  : 0/0
 19266 ;;		Unchanged: 0/0
 19267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19268 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19271 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19272 ;;Total ram usage:        1 bytes
 19273 ;; Hardware stack levels used:    1
 19274 ;; This function calls:
 19275 ;;		Nothing
 19276 ;; This function is called by:
 19277 ;;		_setCallBack
 19278 ;;		_i2c_open
 19279 ;;		_do_I2C_DO_ADDRESS_NACK
 19280 ;;		_do_I2C_TX
 19281 ;;		_do_I2C_RX
 19282 ;;		_do_I2C_TX_EMPTY
 19283 ;; This function uses a non-reentrant model
 19284 ;;
 19285                           
 19286                           
 19287                           ;psect for function _returnStop
 19288  0A0E                     _returnStop:	
 19289  0A0E                     i1l4969:	
 19290                           ;incstack = 0
 19291                           ; Regs used in _returnStop: [wreg]
 19292                           
 19293                           
 19294                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 19295  0A0E  3001               	movlw	1
 19296  0A0F                     i1l216:	
 19297  0A0F  0008               	return
 19298  0A10                     __end_of_returnStop:	
 19299                           
 19300                           	psect	text86
 19301  0A0C                     __ptext86:	
 19302 ;; *************** function _i2c_restartWrite *****************
 19303 ;; Defined at:
 19304 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 19305 ;; Parameters:    Size  Location     Type
 19306 ;;  p               1    9[COMMON] PTR void 
 19307 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19308 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19309 ;; Auto vars:     Size  Location     Type
 19310 ;;		None
 19311 ;; Return value:  Size  Location     Type
 19312 ;;                  1    wreg      enum E358
 19313 ;; Registers used:
 19314 ;;		wreg
 19315 ;; Tracked objects:
 19316 ;;		On entry : 0/0
 19317 ;;		On exit  : 0/0
 19318 ;;		Unchanged: 0/0
 19319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19320 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19323 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19324 ;;Total ram usage:        1 bytes
 19325 ;; Hardware stack levels used:    1
 19326 ;; This function calls:
 19327 ;;		Nothing
 19328 ;; This function is called by:
 19329 ;;		_i2c_write1ByteRegister
 19330 ;;		_i2c_writeNBytes
 19331 ;;		_i2c_read1ByteRegister
 19332 ;;		_i2c_read2ByteRegister
 19333 ;;		_i2c_write2ByteRegister
 19334 ;;		_i2c_readDataBlock
 19335 ;;		_do_I2C_DO_ADDRESS_NACK
 19336 ;;		_do_I2C_TX
 19337 ;;		_do_I2C_RX
 19338 ;;		_do_I2C_TX_EMPTY
 19339 ;; This function uses a non-reentrant model
 19340 ;;
 19341                           
 19342                           
 19343                           ;psect for function _i2c_restartWrite
 19344  0A0C                     _i2c_restartWrite:	
 19345  0A0C                     i1l4905:	
 19346                           ;incstack = 0
 19347                           ; Regs used in _i2c_restartWrite: [wreg]
 19348                           
 19349                           
 19350                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 19351  0A0C  3003               	movlw	3
 19352  0A0D                     i1l9:	
 19353  0A0D  0008               	return
 19354  0A0E                     __end_of_i2c_restartWrite:	
 19355                           
 19356                           	psect	text87
 19357  0BCA                     __ptext87:	
 19358 ;; *************** function _wr2RegCompleteHandler *****************
 19359 ;; Defined at:
 19360 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19361 ;; Parameters:    Size  Location     Type
 19362 ;;  p               1    9[COMMON] PTR void 
 19363 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19364 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19365 ;; Auto vars:     Size  Location     Type
 19366 ;;		None
 19367 ;; Return value:  Size  Location     Type
 19368 ;;                  1    wreg      enum E358
 19369 ;; Registers used:
 19370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19371 ;; Tracked objects:
 19372 ;;		On entry : 0/0
 19373 ;;		On exit  : 0/0
 19374 ;;		Unchanged: 0/0
 19375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19376 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19379 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19380 ;;Total ram usage:        1 bytes
 19381 ;; Hardware stack levels used:    1
 19382 ;; Hardware stack levels required when called:    2
 19383 ;; This function calls:
 19384 ;;		_i2c_setBuffer
 19385 ;;		_i2c_setDataCompleteCallback
 19386 ;; This function is called by:
 19387 ;;		_i2c_write2ByteRegister
 19388 ;;		_do_I2C_DO_ADDRESS_NACK
 19389 ;;		_do_I2C_TX
 19390 ;;		_do_I2C_RX
 19391 ;;		_do_I2C_TX_EMPTY
 19392 ;; This function uses a non-reentrant model
 19393 ;;
 19394                           
 19395                           
 19396                           ;psect for function _wr2RegCompleteHandler
 19397  0BCA                     _wr2RegCompleteHandler:	
 19398  0BCA                     i1l5001:	
 19399                           ;incstack = 0
 19400                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19401                           
 19402                           
 19403                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 19404  0BCA  3002               	movlw	2
 19405  0BCB  00F0               	movwf	i2c_setBuffer@bufferSize
 19406  0BCC  3000               	movlw	0
 19407  0BCD  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19408  0BCE  0879               	movf	wr2RegCompleteHandler@p,w
 19409  0BCF  318B  2399  318B   	fcall	_i2c_setBuffer
 19410  0BD2                     i1l5003:	
 19411                           
 19412                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 19413  0BD2  3000               	movlw	0
 19414  0BD3  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19415  0BD4  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19416  0BD5  01F7               	clrf	i2c_setDataCompleteCallback@p
 19417  0BD6  318B  2344  318B   	fcall	_i2c_setDataCompleteCallback
 19418  0BD9                     i1l5005:	
 19419                           
 19420                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 19421  0BD9  3004               	movlw	4
 19422  0BDA                     i1l291:	
 19423  0BDA  0008               	return
 19424  0BDB                     __end_of_wr2RegCompleteHandler:	
 19425                           
 19426                           	psect	text88
 19427  0B44                     __ptext88:	
 19428 ;; *************** function _i2c_setDataCompleteCallback *****************
 19429 ;; Defined at:
 19430 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 19431 ;; Parameters:    Size  Location     Type
 19432 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 19433 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 19434 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 19435 ;;  p               1    7[COMMON] PTR void 
 19436 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19437 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19438 ;; Auto vars:     Size  Location     Type
 19439 ;;		None
 19440 ;; Return value:  Size  Location     Type
 19441 ;;                  1    wreg      void 
 19442 ;; Registers used:
 19443 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19444 ;; Tracked objects:
 19445 ;;		On entry : 0/0
 19446 ;;		On exit  : 0/0
 19447 ;;		Unchanged: 0/0
 19448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19449 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19452 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19453 ;;Total ram usage:        4 bytes
 19454 ;; Hardware stack levels used:    1
 19455 ;; Hardware stack levels required when called:    1
 19456 ;; This function calls:
 19457 ;;		_setCallBack
 19458 ;; This function is called by:
 19459 ;;		_wr1RegCompleteHandler
 19460 ;;		_rd1RegCompleteHandler
 19461 ;;		_rd2RegCompleteHandler
 19462 ;;		_wr2RegCompleteHandler
 19463 ;;		_rdBlkRegCompleteHandler
 19464 ;;		_i2c_write1ByteRegister
 19465 ;;		_i2c_read1ByteRegister
 19466 ;;		_i2c_read2ByteRegister
 19467 ;;		_i2c_write2ByteRegister
 19468 ;;		_i2c_readDataBlock
 19469 ;; This function uses a non-reentrant model
 19470 ;;
 19471                           
 19472                           
 19473                           ;psect for function _i2c_setDataCompleteCallback
 19474  0B44                     _i2c_setDataCompleteCallback:	
 19475  0B44                     i1l4735:	
 19476                           ;incstack = 0
 19477                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 19478                           
 19479                           
 19480                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 19481  0B44  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 19482  0B45  00F1               	movwf	setCallBack@cb+1
 19483  0B46  0875               	movf	i2c_setDataCompleteCallback@cb,w
 19484  0B47  00F0               	movwf	setCallBack@cb
 19485  0B48  0877               	movf	i2c_setDataCompleteCallback@p,w
 19486  0B49  00F8               	movwf	??_i2c_setDataCompleteCallback
 19487  0B4A  0878               	movf	??_i2c_setDataCompleteCallback,w
 19488  0B4B  00F2               	movwf	setCallBack@p
 19489  0B4C  3000               	movlw	0
 19490  0B4D  318E  2611  318B   	fcall	_setCallBack
 19491  0B50                     i1l73:	
 19492  0B50  0008               	return
 19493  0B51                     __end_of_i2c_setDataCompleteCallback:	
 19494                           
 19495                           	psect	text89
 19496  0E11                     __ptext89:	
 19497 ;; *************** function _setCallBack *****************
 19498 ;; Defined at:
 19499 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 19500 ;; Parameters:    Size  Location     Type
 19501 ;;  idx             1    wreg     enum E12740
 19502 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 19503 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 19504 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), i2c_restartWrite(1), 
 19505 ;;  p               1    2[COMMON] PTR void 
 19506 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19507 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19508 ;; Auto vars:     Size  Location     Type
 19509 ;;  idx             1    4[COMMON] enum E12740
 19510 ;; Return value:  Size  Location     Type
 19511 ;;                  1    wreg      void 
 19512 ;; Registers used:
 19513 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19514 ;; Tracked objects:
 19515 ;;		On entry : 0/0
 19516 ;;		On exit  : 0/0
 19517 ;;		Unchanged: 0/0
 19518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19519 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19522 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19523 ;;Total ram usage:        5 bytes
 19524 ;; Hardware stack levels used:    1
 19525 ;; This function calls:
 19526 ;;		Nothing
 19527 ;; This function is called by:
 19528 ;;		_i2c_setDataCompleteCallback
 19529 ;;		_i2c_setWriteCollisionCallback
 19530 ;;		_i2c_setAddressNACKCallback
 19531 ;;		_i2c_setDataNACKCallback
 19532 ;;		_i2c_setTimeOutCallback
 19533 ;; This function uses a non-reentrant model
 19534 ;;
 19535                           
 19536                           
 19537                           ;psect for function _setCallBack
 19538  0E11                     _setCallBack:	
 19539                           
 19540                           ;incstack = 0
 19541                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 19542                           ;setCallBack@idx stored from wreg
 19543  0E11  00F4               	movwf	setCallBack@idx
 19544  0E12                     i1l4627:	
 19545                           
 19546                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 19547  0E12  0870               	movf	setCallBack@cb,w
 19548  0E13  0471               	iorwf	setCallBack@cb+1,w
 19549  0E14  1903               	btfsc	3,2
 19550  0E15  2E17               	goto	u203_21
 19551  0E16  2E18               	goto	u203_20
 19552  0E17                     u203_21:	
 19553  0E17  2E29               	goto	i1l4631
 19554  0E18                     u203_20:	
 19555  0E18                     i1l4629:	
 19556                           
 19557                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 19558  0E18  3574               	lslf	setCallBack@idx,w
 19559  0E19  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 19560  0E1A  0086               	movwf	6
 19561  0E1B  0187               	clrf	7
 19562  0E1C  0870               	movf	setCallBack@cb,w
 19563  0E1D  3FC0               	movwi [0]fsr1
 19564  0E1E  0871               	movf	setCallBack@cb+1,w
 19565  0E1F  3FC1               	movwi [1]fsr1
 19566                           
 19567                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 19568  0E20  0872               	movf	setCallBack@p,w
 19569  0E21  00F3               	movwf	??_setCallBack
 19570  0E22  0874               	movf	setCallBack@idx,w
 19571  0E23  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 19572  0E24  0086               	movwf	6
 19573  0E25  0187               	clrf	7
 19574  0E26  0873               	movf	??_setCallBack,w
 19575  0E27  0081               	movwf	1
 19576                           
 19577                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 19578  0E28  2E36               	goto	i1l224
 19579  0E29                     i1l4631:	
 19580                           
 19581                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 19582  0E29  3574               	lslf	setCallBack@idx,w
 19583  0E2A  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 19584  0E2B  0086               	movwf	6
 19585  0E2C  0187               	clrf	7
 19586  0E2D  300E               	movlw	low _returnStop
 19587  0E2E  3FC0               	movwi [0]fsr1
 19588  0E2F  300A               	movlw	high _returnStop
 19589  0E30  3FC1               	movwi [1]fsr1
 19590                           
 19591                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 19592  0E31  0874               	movf	setCallBack@idx,w
 19593  0E32  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 19594  0E33  0086               	movwf	6
 19595  0E34  0187               	clrf	7
 19596  0E35  0181               	clrf	1
 19597  0E36                     i1l224:	
 19598  0E36  0008               	return
 19599  0E37                     __end_of_setCallBack:	
 19600                           
 19601                           	psect	text90
 19602  0B99                     __ptext90:	
 19603 ;; *************** function _i2c_setBuffer *****************
 19604 ;; Defined at:
 19605 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 19606 ;; Parameters:    Size  Location     Type
 19607 ;;  buffer          1    wreg     PTR void 
 19608 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 19609 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 19610 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 19611 ;;  bufferSize      2    0[COMMON] unsigned int 
 19612 ;; Auto vars:     Size  Location     Type
 19613 ;;  buffer          1    3[COMMON] PTR void 
 19614 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 19615 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 19616 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 19617 ;; Return value:  Size  Location     Type
 19618 ;;                  1    wreg      void 
 19619 ;; Registers used:
 19620 ;;		wreg
 19621 ;; Tracked objects:
 19622 ;;		On entry : 0/0
 19623 ;;		On exit  : 0/0
 19624 ;;		Unchanged: 0/0
 19625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19628 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19629 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19630 ;;Total ram usage:        4 bytes
 19631 ;; Hardware stack levels used:    1
 19632 ;; This function calls:
 19633 ;;		Nothing
 19634 ;; This function is called by:
 19635 ;;		_wr1RegCompleteHandler
 19636 ;;		_rd1RegCompleteHandler
 19637 ;;		_rd2RegCompleteHandler
 19638 ;;		_wr2RegCompleteHandler
 19639 ;;		_rdBlkRegCompleteHandler
 19640 ;;		_i2c_write1ByteRegister
 19641 ;;		_i2c_writeNBytes
 19642 ;;		_i2c_read1ByteRegister
 19643 ;;		_i2c_read2ByteRegister
 19644 ;;		_i2c_write2ByteRegister
 19645 ;;		_i2c_readDataBlock
 19646 ;;		_i2c_readNBytes
 19647 ;; This function uses a non-reentrant model
 19648 ;;
 19649                           
 19650                           
 19651                           ;psect for function _i2c_setBuffer
 19652  0B99                     _i2c_setBuffer:	
 19653                           
 19654                           ;incstack = 0
 19655                           ; Regs used in _i2c_setBuffer: [wreg]
 19656                           ;i2c_setBuffer@buffer stored from wreg
 19657  0B99  00F3               	movwf	i2c_setBuffer@buffer
 19658  0B9A                     i1l4737:	
 19659                           
 19660                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 19661  0B9A  0021               	movlb	1	; select bank1
 19662  0B9B  1D20               	btfss	_i2c_status^(0+128),2
 19663  0B9C  2B9E               	goto	u223_21
 19664  0B9D  2B9F               	goto	u223_20
 19665  0B9E                     u223_21:	
 19666  0B9E  2BA8               	goto	i1l103
 19667  0B9F                     u223_20:	
 19668  0B9F                     i1l4739:	
 19669                           
 19670                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 19671  0B9F  0873               	movf	i2c_setBuffer@buffer,w
 19672  0BA0  00F2               	movwf	??_i2c_setBuffer
 19673  0BA1  0872               	movf	??_i2c_setBuffer,w
 19674  0BA2  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 19675                           
 19676                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 19677  0BA3  0871               	movf	i2c_setBuffer@bufferSize+1,w
 19678  0BA4  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 19679  0BA5  0870               	movf	i2c_setBuffer@bufferSize,w
 19680  0BA6  00A3               	movwf	(_i2c_status^(0+128)+3)
 19681  0BA7                     i1l4741:	
 19682                           
 19683                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 19684  0BA7  1120               	bcf	_i2c_status^(0+128),2
 19685  0BA8                     i1l103:	
 19686  0BA8  0008               	return
 19687  0BA9                     __end_of_i2c_setBuffer:	
 19688                           
 19689                           	psect	text91
 19690  0A16                     __ptext91:	
 19691 ;; *************** function _i2c1_driver_stop *****************
 19692 ;; Defined at:
 19693 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 19694 ;; Parameters:    Size  Location     Type
 19695 ;;		None
 19696 ;; Auto vars:     Size  Location     Type
 19697 ;;		None
 19698 ;; Return value:  Size  Location     Type
 19699 ;;                  1    wreg      void 
 19700 ;; Registers used:
 19701 ;;		None
 19702 ;; Tracked objects:
 19703 ;;		On entry : 0/0
 19704 ;;		On exit  : 0/0
 19705 ;;		Unchanged: 0/0
 19706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19711 ;;Total ram usage:        0 bytes
 19712 ;; Hardware stack levels used:    1
 19713 ;; This function calls:
 19714 ;;		Nothing
 19715 ;; This function is called by:
 19716 ;;		_do_I2C_SEND_STOP
 19717 ;; This function uses a non-reentrant model
 19718 ;;
 19719                           
 19720                           
 19721                           ;psect for function _i2c1_driver_stop
 19722  0A16                     _i2c1_driver_stop:	
 19723  0A16                     i1l4745:	
 19724                           ;incstack = 0
 19725                           ; Regs used in _i2c1_driver_stop: []
 19726                           
 19727                           
 19728                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 19729  0A16  0023               	movlb	3	; select bank3
 19730  0A17  1511               	bsf	17,2	;volatile
 19731  0A18                     i1l523:	
 19732  0A18  0008               	return
 19733  0A19                     __end_of_i2c1_driver_stop:	
 19734                           
 19735                           	psect	text92
 19736  0A13                     __ptext92:	
 19737 ;; *************** function _i2c1_driver_restart *****************
 19738 ;; Defined at:
 19739 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 19740 ;; Parameters:    Size  Location     Type
 19741 ;;		None
 19742 ;; Auto vars:     Size  Location     Type
 19743 ;;		None
 19744 ;; Return value:  Size  Location     Type
 19745 ;;                  1    wreg      void 
 19746 ;; Registers used:
 19747 ;;		None
 19748 ;; Tracked objects:
 19749 ;;		On entry : 0/0
 19750 ;;		On exit  : 0/0
 19751 ;;		Unchanged: 0/0
 19752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19757 ;;Total ram usage:        0 bytes
 19758 ;; Hardware stack levels used:    1
 19759 ;; This function calls:
 19760 ;;		Nothing
 19761 ;; This function is called by:
 19762 ;;		_do_I2C_SEND_RESTART_READ
 19763 ;;		_do_I2C_SEND_RESTART_WRITE
 19764 ;;		_do_I2C_SEND_RESTART
 19765 ;; This function uses a non-reentrant model
 19766 ;;
 19767                           
 19768                           
 19769                           ;psect for function _i2c1_driver_restart
 19770  0A13                     _i2c1_driver_restart:	
 19771  0A13                     i1l4743:	
 19772                           ;incstack = 0
 19773                           ; Regs used in _i2c1_driver_restart: []
 19774                           
 19775                           
 19776                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 19777  0A13  0023               	movlb	3	; select bank3
 19778  0A14  1491               	bsf	17,1	;volatile
 19779  0A15                     i1l520:	
 19780  0A15  0008               	return
 19781  0A16                     __end_of_i2c1_driver_restart:	
 19782                           
 19783                           	psect	text93
 19784  0A2B                     __ptext93:	
 19785 ;; *************** function _i2c1_driver_sendACK *****************
 19786 ;; Defined at:
 19787 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 19788 ;; Parameters:    Size  Location     Type
 19789 ;;		None
 19790 ;; Auto vars:     Size  Location     Type
 19791 ;;		None
 19792 ;; Return value:  Size  Location     Type
 19793 ;;                  1    wreg      void 
 19794 ;; Registers used:
 19795 ;;		None
 19796 ;; Tracked objects:
 19797 ;;		On entry : 0/0
 19798 ;;		On exit  : 0/0
 19799 ;;		Unchanged: 0/0
 19800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19805 ;;Total ram usage:        0 bytes
 19806 ;; Hardware stack levels used:    1
 19807 ;; This function calls:
 19808 ;;		Nothing
 19809 ;; This function is called by:
 19810 ;;		_do_I2C_DO_ACK
 19811 ;;		_do_I2C_RX
 19812 ;; This function uses a non-reentrant model
 19813 ;;
 19814                           
 19815                           
 19816                           ;psect for function _i2c1_driver_sendACK
 19817  0A2B                     _i2c1_driver_sendACK:	
 19818  0A2B                     i1l4945:	
 19819                           ;incstack = 0
 19820                           ; Regs used in _i2c1_driver_sendACK: []
 19821                           
 19822                           
 19823                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 19824  0A2B  0023               	movlb	3	; select bank3
 19825  0A2C  1291               	bcf	17,5	;volatile
 19826                           
 19827                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 19828  0A2D  1611               	bsf	17,4	;volatile
 19829  0A2E                     i1l547:	
 19830  0A2E  0008               	return
 19831  0A2F                     __end_of_i2c1_driver_sendACK:	
 19832                           
 19833                           	psect	text94
 19834  0B7B                     __ptext94:	
 19835 ;; *************** function _TMR2_ISR *****************
 19836 ;; Defined at:
 19837 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 19838 ;; Parameters:    Size  Location     Type
 19839 ;;		None
 19840 ;; Auto vars:     Size  Location     Type
 19841 ;;		None
 19842 ;; Return value:  Size  Location     Type
 19843 ;;                  1    wreg      void 
 19844 ;; Registers used:
 19845 ;;		wreg, status,2, status,0, pclath, cstack
 19846 ;; Tracked objects:
 19847 ;;		On entry : 0/0
 19848 ;;		On exit  : 0/0
 19849 ;;		Unchanged: 0/0
 19850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19855 ;;Total ram usage:        0 bytes
 19856 ;; Hardware stack levels used:    1
 19857 ;; Hardware stack levels required when called:    1
 19858 ;; This function calls:
 19859 ;;		Absolute function
 19860 ;;		_TMR2_DefaultInterruptHandler
 19861 ;;		_handler_clock_ms
 19862 ;; This function is called by:
 19863 ;;		_INTERRUPT_InterruptManager
 19864 ;; This function uses a non-reentrant model
 19865 ;;
 19866                           
 19867                           
 19868                           ;psect for function _TMR2_ISR
 19869  0B7B                     _TMR2_ISR:	
 19870  0B7B                     i1l5705:	
 19871                           ;incstack = 0
 19872                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 19873                           
 19874                           
 19875                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 19876  0B7B  002E               	movlb	14	; select bank14
 19877  0B7C  1090               	bcf	16,1	;volatile
 19878  0B7D                     i1l5707:	
 19879                           
 19880                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 19881  0B7D  0021               	movlb	1	; select bank1
 19882  0B7E  0854               	movf	_TMR2_InterruptHandler^(0+128),w
 19883  0B7F  0455               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 19884  0B80  1903               	btfsc	3,2
 19885  0B81  2B83               	goto	u281_21
 19886  0B82  2B84               	goto	u281_20
 19887  0B83                     u281_21:	
 19888  0B83  2B89               	goto	i1l1086
 19889  0B84                     u281_20:	
 19890  0B84                     i1l5709:	
 19891                           
 19892                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 19893  0B84  0855               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 19894  0B85  008A               	movwf	10
 19895  0B86  0854               	movf	_TMR2_InterruptHandler^(0+128),w
 19896  0B87  000A               	callw
 19897  0B88  318B               	pagesel	$
 19898  0B89                     i1l1086:	
 19899  0B89  0008               	return
 19900  0B8A                     __end_of_TMR2_ISR:	
 19901                           
 19902                           	psect	text95
 19903  0A0A                     __ptext95:	
 19904 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 19905 ;; Defined at:
 19906 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 19907 ;; Parameters:    Size  Location     Type
 19908 ;;		None
 19909 ;; Auto vars:     Size  Location     Type
 19910 ;;		None
 19911 ;; Return value:  Size  Location     Type
 19912 ;;                  1    wreg      void 
 19913 ;; Registers used:
 19914 ;;		None
 19915 ;; Tracked objects:
 19916 ;;		On entry : 0/0
 19917 ;;		On exit  : 0/0
 19918 ;;		Unchanged: 0/0
 19919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19924 ;;Total ram usage:        0 bytes
 19925 ;; Hardware stack levels used:    1
 19926 ;; This function calls:
 19927 ;;		Nothing
 19928 ;; This function is called by:
 19929 ;;		_TMR2_Initialize
 19930 ;;		_TMR2_ISR
 19931 ;; This function uses a non-reentrant model
 19932 ;;
 19933                           
 19934                           
 19935                           ;psect for function _TMR2_DefaultInterruptHandler
 19936  0A0A                     _TMR2_DefaultInterruptHandler:	
 19937  0A0A                     i1l1092:	
 19938                           ;incstack = 0
 19939                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 19940                           
 19941  0A0A  0008               	return
 19942  0A0B                     __end_of_TMR2_DefaultInterruptHandler:	
 19943                           
 19944                           	psect	text96
 19945  0B1F                     __ptext96:	
 19946 ;; *************** function _handler_clock_ms *****************
 19947 ;; Defined at:
 19948 ;;		line 657 in file "main.c"
 19949 ;; Parameters:    Size  Location     Type
 19950 ;;		None
 19951 ;; Auto vars:     Size  Location     Type
 19952 ;;		None
 19953 ;; Return value:  Size  Location     Type
 19954 ;;                  1    wreg      void 
 19955 ;; Registers used:
 19956 ;;		wreg, status,2, status,0
 19957 ;; Tracked objects:
 19958 ;;		On entry : 0/0
 19959 ;;		On exit  : 0/0
 19960 ;;		Unchanged: 0/0
 19961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19965 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19966 ;;Total ram usage:        1 bytes
 19967 ;; Hardware stack levels used:    1
 19968 ;; This function calls:
 19969 ;;		Nothing
 19970 ;; This function is called by:
 19971 ;;		_main
 19972 ;;		_TMR2_ISR
 19973 ;; This function uses a non-reentrant model
 19974 ;;
 19975                           
 19976                           
 19977                           ;psect for function _handler_clock_ms
 19978  0B1F                     _handler_clock_ms:	
 19979  0B1F                     i1l5575:	
 19980                           ;incstack = 0
 19981                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 19982                           
 19983                           
 19984                           ;main.c: 658:     clkms++;
 19985  0B1F  3001               	movlw	1
 19986  0B20  00F0               	movwf	??_handler_clock_ms
 19987  0B21  0870               	movf	??_handler_clock_ms,w
 19988  0B22  07FD               	addwf	_clkms,f	;volatile
 19989  0B23                     i1l5577:	
 19990                           
 19991                           ;main.c: 660:     if(clkms > 200){
 19992  0B23  30C9               	movlw	201
 19993  0B24  027D               	subwf	_clkms,w	;volatile
 19994  0B25  1C03               	skipc
 19995  0B26  2B28               	goto	u270_21
 19996  0B27  2B29               	goto	u270_20
 19997  0B28                     u270_21:	
 19998  0B28  2B2A               	goto	i1l1433
 19999  0B29                     u270_20:	
 20000  0B29                     i1l5579:	
 20001                           
 20002                           ;main.c: 661:         clkms = 0;
 20003  0B29  01FD               	clrf	_clkms	;volatile
 20004  0B2A                     i1l1433:	
 20005  0B2A  0008               	return
 20006  0B2B                     __end_of_handler_clock_ms:	
 20007                           
 20008                           	psect	text97
 20009  0C65                     __ptext97:	
 20010 ;; *************** function _TMR1_ISR *****************
 20011 ;; Defined at:
 20012 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 20013 ;; Parameters:    Size  Location     Type
 20014 ;;		None
 20015 ;; Auto vars:     Size  Location     Type
 20016 ;;		None
 20017 ;; Return value:  Size  Location     Type
 20018 ;;                  1    wreg      void 
 20019 ;; Registers used:
 20020 ;;		wreg, status,2, status,0, pclath, cstack
 20021 ;; Tracked objects:
 20022 ;;		On entry : 0/0
 20023 ;;		On exit  : 0/0
 20024 ;;		Unchanged: 0/0
 20025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20030 ;;Total ram usage:        0 bytes
 20031 ;; Hardware stack levels used:    1
 20032 ;; Hardware stack levels required when called:    1
 20033 ;; This function calls:
 20034 ;;		Absolute function
 20035 ;;		_TMR1_DefaultInterruptHandler
 20036 ;;		_TMR1_WriteTimer
 20037 ;;		_handler_clock_hms
 20038 ;; This function is called by:
 20039 ;;		_INTERRUPT_InterruptManager
 20040 ;; This function uses a non-reentrant model
 20041 ;;
 20042                           
 20043                           
 20044                           ;psect for function _TMR1_ISR
 20045  0C65                     _TMR1_ISR:	
 20046  0C65                     i1l5697:	
 20047                           ;incstack = 0
 20048                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 20049                           
 20050                           
 20051                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 20052  0C65  002E               	movlb	14	; select bank14
 20053  0C66  1010               	bcf	16,0	;volatile
 20054  0C67                     i1l5699:	
 20055                           
 20056                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 20057  0C67  0021               	movlb	1	; select bank1
 20058  0C68  0859               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 20059  0C69  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 20060  0C6A  0858               	movf	_timer1ReloadVal^(0+128),w	;volatile
 20061  0C6B  00F0               	movwf	TMR1_WriteTimer@timerVal
 20062  0C6C  318B  23B9  318C   	fcall	_TMR1_WriteTimer
 20063  0C6F                     i1l5701:	
 20064                           
 20065                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 20066  0C6F  0021               	movlb	1	; select bank1
 20067  0C70  0856               	movf	_TMR1_InterruptHandler^(0+128),w
 20068  0C71  0457               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 20069  0C72  1903               	btfsc	3,2
 20070  0C73  2C75               	goto	u280_21
 20071  0C74  2C76               	goto	u280_20
 20072  0C75                     u280_21:	
 20073  0C75  2C7B               	goto	i1l944
 20074  0C76                     u280_20:	
 20075  0C76                     i1l5703:	
 20076                           
 20077                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 20078  0C76  0857               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 20079  0C77  008A               	movwf	10
 20080  0C78  0856               	movf	_TMR1_InterruptHandler^(0+128),w
 20081  0C79  000A               	callw
 20082  0C7A  318C               	pagesel	$
 20083  0C7B                     i1l944:	
 20084  0C7B  0008               	return
 20085  0C7C                     __end_of_TMR1_ISR:	
 20086                           
 20087                           	psect	text98
 20088  0A09                     __ptext98:	
 20089 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 20090 ;; Defined at:
 20091 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 20092 ;; Parameters:    Size  Location     Type
 20093 ;;		None
 20094 ;; Auto vars:     Size  Location     Type
 20095 ;;		None
 20096 ;; Return value:  Size  Location     Type
 20097 ;;                  1    wreg      void 
 20098 ;; Registers used:
 20099 ;;		None
 20100 ;; Tracked objects:
 20101 ;;		On entry : 0/0
 20102 ;;		On exit  : 0/0
 20103 ;;		Unchanged: 0/0
 20104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20109 ;;Total ram usage:        0 bytes
 20110 ;; Hardware stack levels used:    1
 20111 ;; This function calls:
 20112 ;;		Nothing
 20113 ;; This function is called by:
 20114 ;;		_TMR1_Initialize
 20115 ;;		_TMR1_ISR
 20116 ;; This function uses a non-reentrant model
 20117 ;;
 20118                           
 20119                           
 20120                           ;psect for function _TMR1_DefaultInterruptHandler
 20121  0A09                     _TMR1_DefaultInterruptHandler:	
 20122  0A09                     i1l950:	
 20123                           ;incstack = 0
 20124                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 20125                           
 20126  0A09  0008               	return
 20127  0A0A                     __end_of_TMR1_DefaultInterruptHandler:	
 20128                           
 20129                           	psect	text99
 20130  0F46                     __ptext99:	
 20131 ;; *************** function _handler_clock_hms *****************
 20132 ;; Defined at:
 20133 ;;		line 631 in file "main.c"
 20134 ;; Parameters:    Size  Location     Type
 20135 ;;		None
 20136 ;; Auto vars:     Size  Location     Type
 20137 ;;		None
 20138 ;; Return value:  Size  Location     Type
 20139 ;;                  1    wreg      void 
 20140 ;; Registers used:
 20141 ;;		wreg, status,2, status,0
 20142 ;; Tracked objects:
 20143 ;;		On entry : 0/0
 20144 ;;		On exit  : 0/0
 20145 ;;		Unchanged: 0/0
 20146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20149 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20150 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20151 ;;Total ram usage:        1 bytes
 20152 ;; Hardware stack levels used:    1
 20153 ;; This function calls:
 20154 ;;		Nothing
 20155 ;; This function is called by:
 20156 ;;		_main
 20157 ;;		_TMR1_ISR
 20158 ;; This function uses a non-reentrant model
 20159 ;;
 20160                           
 20161                           
 20162                           ;psect for function _handler_clock_hms
 20163  0F46                     _handler_clock_hms:	
 20164  0F46                     i1l5555:	
 20165                           ;incstack = 0
 20166                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 20167                           
 20168                           
 20169                           ;main.c: 633:     if(!config_mode){
 20170  0F46  0020               	movlb	0	; select bank0
 20171  0F47  0856               	movf	_config_mode,w	;volatile
 20172  0F48  1D03               	btfss	3,2
 20173  0F49  2F4B               	goto	u265_21
 20174  0F4A  2F4C               	goto	u265_20
 20175  0F4B                     u265_21:	
 20176  0F4B  2F57               	goto	i1l5559
 20177  0F4C                     u265_20:	
 20178  0F4C                     i1l5557:	
 20179  0F4C  1003               	clrc
 20180  0F4D  1F96               	btfss	22,7	;volatile
 20181  0F4E  1403               	setc
 20182  0F4F  1803               	btfsc	3,0
 20183  0F50  2F52               	goto	u266_21
 20184  0F51  2F55               	goto	u266_20
 20185  0F52                     u266_21:	
 20186  0F52  0020               	movlb	0	; select bank0
 20187  0F53  1796               	bsf	22,7	;volatile
 20188  0F54  2F57               	goto	u267_24
 20189  0F55                     u266_20:	
 20190  0F55  0020               	movlb	0	; select bank0
 20191  0F56  1396               	bcf	22,7	;volatile
 20192  0F57                     u267_24:	
 20193  0F57                     i1l5559:	
 20194                           
 20195                           ;main.c: 637:     last5s++;
 20196  0F57  3001               	movlw	1
 20197  0F58  00F0               	movwf	??_handler_clock_hms
 20198  0F59  0870               	movf	??_handler_clock_hms,w
 20199  0F5A  07D9               	addwf	_last5s,f	;volatile
 20200  0F5B                     i1l5561:	
 20201                           
 20202                           ;main.c: 638:     seg++;
 20203  0F5B  3001               	movlw	1
 20204  0F5C  00F0               	movwf	??_handler_clock_hms
 20205  0F5D  0870               	movf	??_handler_clock_hms,w
 20206  0F5E  07DC               	addwf	_seg,f	;volatile
 20207  0F5F                     i1l5563:	
 20208                           
 20209                           ;main.c: 639:     if(seg >= 60) {
 20210  0F5F  303C               	movlw	60
 20211  0F60  025C               	subwf	_seg,w	;volatile
 20212  0F61  1C03               	skipc
 20213  0F62  2F64               	goto	u268_21
 20214  0F63  2F65               	goto	u268_20
 20215  0F64                     u268_21:	
 20216  0F64  2F79               	goto	i1l1429
 20217  0F65                     u268_20:	
 20218  0F65                     i1l5565:	
 20219                           
 20220                           ;main.c: 640:         clkm++;
 20221  0F65  3001               	movlw	1
 20222  0F66  00F0               	movwf	??_handler_clock_hms
 20223  0F67  0870               	movf	??_handler_clock_hms,w
 20224  0F68  07DD               	addwf	_clkm,f	;volatile
 20225                           
 20226                           ;main.c: 641:         last1m++;
 20227  0F69  3001               	movlw	1
 20228  0F6A  00F0               	movwf	??_handler_clock_hms
 20229  0F6B  0870               	movf	??_handler_clock_hms,w
 20230  0F6C  07D8               	addwf	_last1m,f	;volatile
 20231  0F6D                     i1l5567:	
 20232                           
 20233                           ;main.c: 642:         seg = 0;
 20234  0F6D  01DC               	clrf	_seg	;volatile
 20235  0F6E                     i1l5569:	
 20236                           
 20237                           ;main.c: 643:         if(clkm >= 60) {
 20238  0F6E  303C               	movlw	60
 20239  0F6F  025D               	subwf	_clkm,w	;volatile
 20240  0F70  1C03               	skipc
 20241  0F71  2F73               	goto	u269_21
 20242  0F72  2F74               	goto	u269_20
 20243  0F73                     u269_21:	
 20244  0F73  2F79               	goto	i1l1429
 20245  0F74                     u269_20:	
 20246  0F74                     i1l5571:	
 20247                           
 20248                           ;main.c: 644:             clkh++;
 20249  0F74  3001               	movlw	1
 20250  0F75  00F0               	movwf	??_handler_clock_hms
 20251  0F76  0870               	movf	??_handler_clock_hms,w
 20252  0F77  07DE               	addwf	_clkh,f	;volatile
 20253  0F78                     i1l5573:	
 20254                           
 20255                           ;main.c: 645:             clkm = 0;
 20256  0F78  01DD               	clrf	_clkm	;volatile
 20257  0F79                     i1l1429:	
 20258  0F79  0008               	return
 20259  0F7A                     __end_of_handler_clock_hms:	
 20260                           
 20261                           	psect	text100
 20262  0BB9                     __ptext100:	
 20263 ;; *************** function _TMR1_WriteTimer *****************
 20264 ;; Defined at:
 20265 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 20266 ;; Parameters:    Size  Location     Type
 20267 ;;  timerVal        2    0[COMMON] unsigned short 
 20268 ;; Auto vars:     Size  Location     Type
 20269 ;;		None
 20270 ;; Return value:  Size  Location     Type
 20271 ;;                  1    wreg      void 
 20272 ;; Registers used:
 20273 ;;		wreg, status,2
 20274 ;; Tracked objects:
 20275 ;;		On entry : 0/0
 20276 ;;		On exit  : 0/0
 20277 ;;		Unchanged: 0/0
 20278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20279 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20282 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20283 ;;Total ram usage:        2 bytes
 20284 ;; Hardware stack levels used:    1
 20285 ;; This function calls:
 20286 ;;		Nothing
 20287 ;; This function is called by:
 20288 ;;		_TMR1_ISR
 20289 ;;		_TMR1_Reload
 20290 ;; This function uses a non-reentrant model
 20291 ;;
 20292                           
 20293                           
 20294                           ;psect for function _TMR1_WriteTimer
 20295  0BB9                     _TMR1_WriteTimer:	
 20296  0BB9                     i1l5493:	
 20297                           ;incstack = 0
 20298                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 20299                           
 20300                           
 20301                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 20302  0BB9  0024               	movlb	4	; select bank4
 20303  0BBA  1D0E               	btfss	14,2	;volatile
 20304  0BBB  2BBD               	goto	u258_21
 20305  0BBC  2BBE               	goto	u258_20
 20306  0BBD                     u258_21:	
 20307  0BBD  2BC5               	goto	i1l5503
 20308  0BBE                     u258_20:	
 20309  0BBE                     i1l5495:	
 20310                           
 20311                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 20312  0BBE  100E               	bcf	14,0	;volatile
 20313  0BBF                     i1l5497:	
 20314                           
 20315                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 20316  0BBF  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 20317  0BC0  008D               	movwf	13	;volatile
 20318  0BC1                     i1l5499:	
 20319                           
 20320                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 20321  0BC1  0870               	movf	TMR1_WriteTimer@timerVal,w
 20322  0BC2  008C               	movwf	12	;volatile
 20323  0BC3                     i1l5501:	
 20324                           
 20325                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 20326  0BC3  140E               	bsf	14,0	;volatile
 20327                           
 20328                           ;mcc_generated_files/tmr1.c: 140:     }
 20329  0BC4  2BC9               	goto	i1l931
 20330  0BC5                     i1l5503:	
 20331                           
 20332                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 20333  0BC5  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 20334  0BC6  008D               	movwf	13	;volatile
 20335  0BC7                     i1l5505:	
 20336                           
 20337                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 20338  0BC7  0870               	movf	TMR1_WriteTimer@timerVal,w
 20339  0BC8  008C               	movwf	12	;volatile
 20340  0BC9                     i1l931:	
 20341  0BC9  0008               	return
 20342  0BCA                     __end_of_TMR1_WriteTimer:	
 20343                           
 20344                           	psect	text101
 20345  0B6C                     __ptext101:	
 20346 ;; *************** function _TMR0_ISR *****************
 20347 ;; Defined at:
 20348 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 20349 ;; Parameters:    Size  Location     Type
 20350 ;;		None
 20351 ;; Auto vars:     Size  Location     Type
 20352 ;;		None
 20353 ;; Return value:  Size  Location     Type
 20354 ;;                  1    wreg      void 
 20355 ;; Registers used:
 20356 ;;		wreg, status,2, status,0, pclath, cstack
 20357 ;; Tracked objects:
 20358 ;;		On entry : 0/0
 20359 ;;		On exit  : 0/0
 20360 ;;		Unchanged: 0/0
 20361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20366 ;;Total ram usage:        0 bytes
 20367 ;; Hardware stack levels used:    1
 20368 ;; Hardware stack levels required when called:    2
 20369 ;; This function calls:
 20370 ;;		Absolute function
 20371 ;;		_ISR_3s
 20372 ;;		_TMR0_DefaultInterruptHandler
 20373 ;; This function is called by:
 20374 ;;		_INTERRUPT_InterruptManager
 20375 ;; This function uses a non-reentrant model
 20376 ;;
 20377                           
 20378                           
 20379                           ;psect for function _TMR0_ISR
 20380  0B6C                     _TMR0_ISR:	
 20381  0B6C                     i1l5691:	
 20382                           ;incstack = 0
 20383                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 20384                           
 20385                           
 20386                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 20387  0B6C  002E               	movlb	14	; select bank14
 20388  0B6D  128C               	bcf	12,5	;volatile
 20389  0B6E                     i1l5693:	
 20390                           
 20391                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 20392  0B6E  0021               	movlb	1	; select bank1
 20393  0B6F  085A               	movf	_TMR0_InterruptHandler^(0+128),w
 20394  0B70  045B               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 20395  0B71  1903               	btfsc	3,2
 20396  0B72  2B74               	goto	u279_21
 20397  0B73  2B75               	goto	u279_20
 20398  0B74                     u279_21:	
 20399  0B74  2B7A               	goto	i1l880
 20400  0B75                     u279_20:	
 20401  0B75                     i1l5695:	
 20402                           
 20403                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 20404  0B75  085B               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 20405  0B76  008A               	movwf	10
 20406  0B77  085A               	movf	_TMR0_InterruptHandler^(0+128),w
 20407  0B78  000A               	callw
 20408  0B79  318B               	pagesel	$
 20409  0B7A                     i1l880:	
 20410  0B7A  0008               	return
 20411  0B7B                     __end_of_TMR0_ISR:	
 20412                           
 20413                           	psect	text102
 20414  0CAC                     __ptext102:	
 20415 ;; *************** function _ISR_3s *****************
 20416 ;; Defined at:
 20417 ;;		line 151 in file "main.c"
 20418 ;; Parameters:    Size  Location     Type
 20419 ;;		None
 20420 ;; Auto vars:     Size  Location     Type
 20421 ;;		None
 20422 ;; Return value:  Size  Location     Type
 20423 ;;                  1    wreg      void 
 20424 ;; Registers used:
 20425 ;;		wreg, status,2, status,0, pclath, cstack
 20426 ;; Tracked objects:
 20427 ;;		On entry : 0/0
 20428 ;;		On exit  : 0/0
 20429 ;;		Unchanged: 0/0
 20430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20433 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20434 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20435 ;;Total ram usage:        1 bytes
 20436 ;; Hardware stack levels used:    1
 20437 ;; Hardware stack levels required when called:    1
 20438 ;; This function calls:
 20439 ;;		_TMR0_StopTimer
 20440 ;;		i1_PWM6_LoadDutyValue
 20441 ;; This function is called by:
 20442 ;;		_main
 20443 ;;		_TMR0_ISR
 20444 ;; This function uses a non-reentrant model
 20445 ;;
 20446                           
 20447                           
 20448                           ;psect for function _ISR_3s
 20449  0CAC                     _ISR_3s:	
 20450  0CAC                     i1l5507:	
 20451                           ;incstack = 0
 20452                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 20453                           
 20454                           
 20455                           ;main.c: 153:     if (lum_threshold){
 20456  0CAC  0020               	movlb	0	; select bank0
 20457  0CAD  084F               	movf	_lum_threshold,w
 20458  0CAE  0450               	iorwf	_lum_threshold+1,w
 20459  0CAF  1903               	btfsc	3,2
 20460  0CB0  2CB2               	goto	u259_21
 20461  0CB1  2CB3               	goto	u259_20
 20462  0CB2                     u259_21:	
 20463  0CB2  2CBF               	goto	i1l1282
 20464  0CB3                     u259_20:	
 20465  0CB3                     i1l5509:	
 20466                           
 20467                           ;main.c: 154:         PWM6_LoadDutyValue(1023);
 20468  0CB3  30FF               	movlw	255
 20469  0CB4  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 20470  0CB5  3003               	movlw	3
 20471  0CB6  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 20472  0CB7  318C  2423  318C   	fcall	i1_PWM6_LoadDutyValue
 20473  0CBA                     i1l5511:	
 20474                           
 20475                           ;main.c: 155:         alarm = 1;
 20476  0CBA  3001               	movlw	1
 20477  0CBB  00F4               	movwf	??_ISR_3s
 20478  0CBC  0874               	movf	??_ISR_3s,w
 20479  0CBD  0020               	movlb	0	; select bank0
 20480  0CBE  00D5               	movwf	_alarm	;volatile
 20481  0CBF                     i1l1282:	
 20482                           ;main.c: 157:     }
 20483                           
 20484                           
 20485                           ;main.c: 159:     TMR0_StopTimer();
 20486  0CBF  318A  2210  318C   	fcall	_TMR0_StopTimer
 20487  0CC2                     i1l5513:	
 20488                           
 20489                           ;main.c: 160:     PIE0bits.TMR0IE = 0;
 20490  0CC2  002E               	movlb	14	; select bank14
 20491  0CC3  1296               	bcf	22,5	;volatile
 20492  0CC4                     i1l1283:	
 20493  0CC4  0008               	return
 20494  0CC5                     __end_of_ISR_3s:	
 20495                           
 20496                           	psect	text103
 20497  0A08                     __ptext103:	
 20498 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 20499 ;; Defined at:
 20500 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 20501 ;; Parameters:    Size  Location     Type
 20502 ;;		None
 20503 ;; Auto vars:     Size  Location     Type
 20504 ;;		None
 20505 ;; Return value:  Size  Location     Type
 20506 ;;                  1    wreg      void 
 20507 ;; Registers used:
 20508 ;;		None
 20509 ;; Tracked objects:
 20510 ;;		On entry : 0/0
 20511 ;;		On exit  : 0/0
 20512 ;;		Unchanged: 0/0
 20513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20518 ;;Total ram usage:        0 bytes
 20519 ;; Hardware stack levels used:    1
 20520 ;; This function calls:
 20521 ;;		Nothing
 20522 ;; This function is called by:
 20523 ;;		_TMR0_Initialize
 20524 ;;		_TMR0_ISR
 20525 ;; This function uses a non-reentrant model
 20526 ;;
 20527                           
 20528                           
 20529                           ;psect for function _TMR0_DefaultInterruptHandler
 20530  0A08                     _TMR0_DefaultInterruptHandler:	
 20531  0A08                     i1l886:	
 20532                           ;incstack = 0
 20533                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 20534                           
 20535  0A08  0008               	return
 20536  0A09                     __end_of_TMR0_DefaultInterruptHandler:	
 20537                           
 20538                           	psect	text104
 20539  0A10                     __ptext104:	
 20540 ;; *************** function _TMR0_StopTimer *****************
 20541 ;; Defined at:
 20542 ;;		line 93 in file "mcc_generated_files/tmr0.c"
 20543 ;; Parameters:    Size  Location     Type
 20544 ;;		None
 20545 ;; Auto vars:     Size  Location     Type
 20546 ;;		None
 20547 ;; Return value:  Size  Location     Type
 20548 ;;                  1    wreg      void 
 20549 ;; Registers used:
 20550 ;;		None
 20551 ;; Tracked objects:
 20552 ;;		On entry : 0/0
 20553 ;;		On exit  : 0/0
 20554 ;;		Unchanged: 0/0
 20555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20560 ;;Total ram usage:        0 bytes
 20561 ;; Hardware stack levels used:    1
 20562 ;; This function calls:
 20563 ;;		Nothing
 20564 ;; This function is called by:
 20565 ;;		_ISR_3s
 20566 ;; This function uses a non-reentrant model
 20567 ;;
 20568                           
 20569                           
 20570                           ;psect for function _TMR0_StopTimer
 20571  0A10                     _TMR0_StopTimer:	
 20572  0A10                     i1l5019:	
 20573                           ;incstack = 0
 20574                           ; Regs used in _TMR0_StopTimer: []
 20575                           
 20576                           
 20577                           ;mcc_generated_files/tmr0.c: 96:     T0CON0bits.T0EN = 0;
 20578  0A10  0020               	movlb	0	; select bank0
 20579  0A11  139E               	bcf	30,7	;volatile
 20580  0A12                     i1l867:	
 20581  0A12  0008               	return
 20582  0A13                     __end_of_TMR0_StopTimer:	
 20583                           
 20584                           	psect	text105
 20585  0A64                     __ptext105:	
 20586 ;; *************** function _INT_ISR *****************
 20587 ;; Defined at:
 20588 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 20589 ;; Parameters:    Size  Location     Type
 20590 ;;		None
 20591 ;; Auto vars:     Size  Location     Type
 20592 ;;		None
 20593 ;; Return value:  Size  Location     Type
 20594 ;;                  1    wreg      void 
 20595 ;; Registers used:
 20596 ;;		wreg, status,2, status,0, pclath, cstack
 20597 ;; Tracked objects:
 20598 ;;		On entry : 0/0
 20599 ;;		On exit  : 0/0
 20600 ;;		Unchanged: 0/0
 20601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20606 ;;Total ram usage:        0 bytes
 20607 ;; Hardware stack levels used:    1
 20608 ;; Hardware stack levels required when called:    3
 20609 ;; This function calls:
 20610 ;;		_INT_CallBack
 20611 ;; This function is called by:
 20612 ;;		_INTERRUPT_InterruptManager
 20613 ;; This function uses a non-reentrant model
 20614 ;;
 20615                           
 20616                           
 20617                           ;psect for function _INT_ISR
 20618  0A64                     _INT_ISR:	
 20619  0A64                     i1l5687:	
 20620                           ;incstack = 0
 20621                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 20622                           
 20623                           
 20624                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 20625  0A64  002E               	movlb	14	; select bank14
 20626  0A65  100C               	bcf	12,0	;volatile
 20627  0A66                     i1l5689:	
 20628                           
 20629                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 20630  0A66  318B  2337  318A   	fcall	_INT_CallBack
 20631  0A69                     i1l334:	
 20632  0A69  0008               	return
 20633  0A6A                     __end_of_INT_ISR:	
 20634                           
 20635                           	psect	text106
 20636  0B37                     __ptext106:	
 20637 ;; *************** function _INT_CallBack *****************
 20638 ;; Defined at:
 20639 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 20640 ;; Parameters:    Size  Location     Type
 20641 ;;		None
 20642 ;; Auto vars:     Size  Location     Type
 20643 ;;		None
 20644 ;; Return value:  Size  Location     Type
 20645 ;;                  1    wreg      void 
 20646 ;; Registers used:
 20647 ;;		wreg, status,2, status,0, pclath, cstack
 20648 ;; Tracked objects:
 20649 ;;		On entry : 0/0
 20650 ;;		On exit  : 0/0
 20651 ;;		Unchanged: 0/0
 20652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20657 ;;Total ram usage:        0 bytes
 20658 ;; Hardware stack levels used:    1
 20659 ;; Hardware stack levels required when called:    2
 20660 ;; This function calls:
 20661 ;;		Absolute function
 20662 ;;		_INT_DefaultInterruptHandler
 20663 ;;		_sw1_EXT
 20664 ;; This function is called by:
 20665 ;;		_INT_ISR
 20666 ;; This function uses a non-reentrant model
 20667 ;;
 20668                           
 20669                           
 20670                           ;psect for function _INT_CallBack
 20671  0B37                     _INT_CallBack:	
 20672  0B37                     i1l5351:	
 20673                           ;incstack = 0
 20674                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 20675                           
 20676                           
 20677                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 20678  0B37  0021               	movlb	1	; select bank1
 20679  0B38  085C               	movf	_INT_InterruptHandler^(0+128),w
 20680  0B39  045D               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 20681  0B3A  1903               	btfsc	3,2
 20682  0B3B  2B3D               	goto	u257_21
 20683  0B3C  2B3E               	goto	u257_20
 20684  0B3D                     u257_21:	
 20685  0B3D  2B43               	goto	i1l338
 20686  0B3E                     u257_20:	
 20687  0B3E                     i1l5353:	
 20688                           
 20689                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 20690  0B3E  085D               	movf	(_INT_InterruptHandler+1)^(0+128),w
 20691  0B3F  008A               	movwf	10
 20692  0B40  085C               	movf	_INT_InterruptHandler^(0+128),w
 20693  0B41  000A               	callw
 20694  0B42  318B               	pagesel	$
 20695  0B43                     i1l338:	
 20696  0B43  0008               	return
 20697  0B44                     __end_of_INT_CallBack:	
 20698                           
 20699                           	psect	text107
 20700  0A07                     __ptext107:	
 20701 ;; *************** function _INT_DefaultInterruptHandler *****************
 20702 ;; Defined at:
 20703 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 20704 ;; Parameters:    Size  Location     Type
 20705 ;;		None
 20706 ;; Auto vars:     Size  Location     Type
 20707 ;;		None
 20708 ;; Return value:  Size  Location     Type
 20709 ;;                  1    wreg      void 
 20710 ;; Registers used:
 20711 ;;		None
 20712 ;; Tracked objects:
 20713 ;;		On entry : 0/0
 20714 ;;		On exit  : 0/0
 20715 ;;		Unchanged: 0/0
 20716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20721 ;;Total ram usage:        0 bytes
 20722 ;; Hardware stack levels used:    1
 20723 ;; This function calls:
 20724 ;;		Nothing
 20725 ;; This function is called by:
 20726 ;;		_EXT_INT_Initialize
 20727 ;;		_INT_CallBack
 20728 ;; This function uses a non-reentrant model
 20729 ;;
 20730                           
 20731                           
 20732                           ;psect for function _INT_DefaultInterruptHandler
 20733  0A07                     _INT_DefaultInterruptHandler:	
 20734  0A07                     i1l344:	
 20735                           ;incstack = 0
 20736                           ; Regs used in _INT_DefaultInterruptHandler: []
 20737                           
 20738  0A07  0008               	return
 20739  0A08                     __end_of_INT_DefaultInterruptHandler:	
 20740                           
 20741                           	psect	text108
 20742  0DEC                     __ptext108:	
 20743 ;; *************** function _sw1_EXT *****************
 20744 ;; Defined at:
 20745 ;;		line 129 in file "main.c"
 20746 ;; Parameters:    Size  Location     Type
 20747 ;;		None
 20748 ;; Auto vars:     Size  Location     Type
 20749 ;;		None
 20750 ;; Return value:  Size  Location     Type
 20751 ;;                  1    wreg      void 
 20752 ;; Registers used:
 20753 ;;		wreg, status,2, status,0, pclath, cstack
 20754 ;; Tracked objects:
 20755 ;;		On entry : 0/0
 20756 ;;		On exit  : 0/0
 20757 ;;		Unchanged: 0/0
 20758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20761 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20762 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20763 ;;Total ram usage:        1 bytes
 20764 ;; Hardware stack levels used:    1
 20765 ;; Hardware stack levels required when called:    1
 20766 ;; This function calls:
 20767 ;;		i1_PWM6_LoadDutyValue
 20768 ;;		i1_checkDebounceSW1
 20769 ;; This function is called by:
 20770 ;;		_main
 20771 ;;		_INT_CallBack
 20772 ;; This function uses a non-reentrant model
 20773 ;;
 20774                           
 20775                           
 20776                           ;psect for function _sw1_EXT
 20777  0DEC                     _sw1_EXT:	
 20778  0DEC                     i1l5045:	
 20779                           ;incstack = 0
 20780                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 20781                           
 20782                           
 20783                           ;main.c: 131:     if(checkDebounceSW1()){
 20784  0DEC  3185  2513  318D   	fcall	i1_checkDebounceSW1
 20785  0DEF  3A00               	xorlw	0
 20786  0DF0  1903               	skipnz
 20787  0DF1  2DF3               	goto	u247_21
 20788  0DF2  2DF4               	goto	u247_20
 20789  0DF3                     u247_21:	
 20790  0DF3  2E10               	goto	i1l1279
 20791  0DF4                     u247_20:	
 20792  0DF4                     i1l5047:	
 20793                           
 20794                           ;main.c: 132:         if (alarm == 1){
 20795  0DF4  0020               	movlb	0	; select bank0
 20796  0DF5  0355               	decf	_alarm,w	;volatile
 20797  0DF6  1D03               	btfss	3,2
 20798  0DF7  2DF9               	goto	u248_21
 20799  0DF8  2DFA               	goto	u248_20
 20800  0DF9                     u248_21:	
 20801  0DF9  2E07               	goto	i1l5055
 20802  0DFA                     u248_20:	
 20803  0DFA                     i1l5049:	
 20804                           
 20805                           ;main.c: 133:             alarm = 0;
 20806  0DFA  01D5               	clrf	_alarm	;volatile
 20807  0DFB                     i1l5051:	
 20808                           
 20809                           ;main.c: 134:             PWM6_LoadDutyValue(0);
 20810  0DFB  3000               	movlw	0
 20811  0DFC  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 20812  0DFD  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 20813  0DFE  318C  2423  318D   	fcall	i1_PWM6_LoadDutyValue
 20814  0E01                     i1l5053:	
 20815                           
 20816                           ;main.c: 135:             last_ms = clkms;
 20817  0E01  087D               	movf	_clkms,w	;volatile
 20818  0E02  00F7               	movwf	??_sw1_EXT
 20819  0E03  0877               	movf	??_sw1_EXT,w
 20820  0E04  0020               	movlb	0	; select bank0
 20821  0E05  00DB               	movwf	_last_ms
 20822                           
 20823                           ;main.c: 136:         }
 20824  0E06  2E10               	goto	i1l1279
 20825  0E07                     i1l5055:	
 20826                           
 20827                           ;main.c: 138:             if(config_mode == 0){
 20828  0E07  0856               	movf	_config_mode,w	;volatile
 20829  0E08  1D03               	btfss	3,2
 20830  0E09  2E0B               	goto	u249_21
 20831  0E0A  2E0C               	goto	u249_20
 20832  0E0B                     u249_21:	
 20833  0E0B  2E10               	goto	i1l1279
 20834  0E0C                     u249_20:	
 20835  0E0C                     i1l5057:	
 20836                           
 20837                           ;main.c: 139:                 config_mode = 1;
 20838  0E0C  3001               	movlw	1
 20839  0E0D  00F7               	movwf	??_sw1_EXT
 20840  0E0E  0877               	movf	??_sw1_EXT,w
 20841  0E0F  00D6               	movwf	_config_mode	;volatile
 20842  0E10                     i1l1279:	
 20843  0E10  0008               	return
 20844  0E11                     __end_of_sw1_EXT:	
 20845                           
 20846                           	psect	text109
 20847  0513                     __ptext109:	
 20848 ;; *************** function i1_checkDebounceSW1 *****************
 20849 ;; Defined at:
 20850 ;;		line 672 in file "main.c"
 20851 ;; Parameters:    Size  Location     Type
 20852 ;;		None
 20853 ;; Auto vars:     Size  Location     Type
 20854 ;;		None
 20855 ;; Return value:  Size  Location     Type
 20856 ;;                  1    wreg      unsigned char 
 20857 ;; Registers used:
 20858 ;;		wreg, status,2, status,0
 20859 ;; Tracked objects:
 20860 ;;		On entry : 0/0
 20861 ;;		On exit  : 0/0
 20862 ;;		Unchanged: 0/0
 20863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20866 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20867 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20868 ;;Total ram usage:        7 bytes
 20869 ;; Hardware stack levels used:    1
 20870 ;; This function calls:
 20871 ;;		Nothing
 20872 ;; This function is called by:
 20873 ;;		_sw1_EXT
 20874 ;; This function uses a non-reentrant model
 20875 ;;
 20876                           
 20877                           
 20878                           ;psect for function i1_checkDebounceSW1
 20879  0513                     i1_checkDebounceSW1:	
 20880  0513                     i1l4879:	
 20881                           ;incstack = 0
 20882                           ; Regs used in i1_checkDebounceSW1: [wreg+status,2+status,0]
 20883                           
 20884                           
 20885                           ;main.c: 673:     PIE4bits.TMR1IE = 0;
 20886  0513  002E               	movlb	14	; select bank14
 20887  0514  101A               	bcf	26,0	;volatile
 20888  0515                     i1l4881:	
 20889                           
 20890                           ;main.c: 675:     if(clkms - last_ms < 0){
 20891  0515  087D               	movf	_clkms,w	;volatile
 20892  0516  00F0               	movwf	??i1_checkDebounceSW1
 20893  0517  01F1               	clrf	??i1_checkDebounceSW1+1
 20894  0518  0871               	movf	??i1_checkDebounceSW1+1,w
 20895  0519  00F3               	movwf	??i1_checkDebounceSW1+3
 20896  051A  0020               	movlb	0	; select bank0
 20897  051B  085B               	movf	_last_ms,w
 20898  051C  0270               	subwf	??i1_checkDebounceSW1,w
 20899  051D  00F2               	movwf	??i1_checkDebounceSW1+2
 20900  051E  1C03               	skipc
 20901  051F  03F3               	decf	??i1_checkDebounceSW1+3,f
 20902  0520  1FF3               	btfss	??i1_checkDebounceSW1+3,7
 20903  0521  2D23               	goto	u242_21
 20904  0522  2D24               	goto	u242_20
 20905  0523                     u242_21:	
 20906  0523  2D4A               	goto	i1l4891
 20907  0524                     u242_20:	
 20908  0524                     i1l4883:	
 20909                           
 20910                           ;main.c: 677:         if ((200 - last_ms)+ clkms > 15 ){
 20911  0524  087D               	movf	_clkms,w	;volatile
 20912  0525  00F0               	movwf	??i1_checkDebounceSW1
 20913  0526  01F1               	clrf	??i1_checkDebounceSW1+1
 20914  0527  0871               	movf	??i1_checkDebounceSW1+1,w
 20915  0528  00F3               	movwf	??i1_checkDebounceSW1+3
 20916  0529  085B               	movf	_last_ms,w
 20917  052A  0270               	subwf	??i1_checkDebounceSW1,w
 20918  052B  00F2               	movwf	??i1_checkDebounceSW1+2
 20919  052C  1C03               	skipc
 20920  052D  03F3               	decf	??i1_checkDebounceSW1+3,f
 20921  052E  0872               	movf	??i1_checkDebounceSW1+2,w
 20922  052F  3EC8               	addlw	200
 20923  0530  00F4               	movwf	??i1_checkDebounceSW1+4
 20924  0531  3000               	movlw	0
 20925  0532  3D73               	addwfc	??i1_checkDebounceSW1+3,w
 20926  0533  00F5               	movwf	??i1_checkDebounceSW1+5
 20927  0534  0875               	movf	??i1_checkDebounceSW1+5,w
 20928  0535  3A80               	xorlw	128
 20929  0536  00F6               	movwf	??i1_checkDebounceSW1+6
 20930  0537  3080               	movlw	128
 20931  0538  0276               	subwf	??i1_checkDebounceSW1+6,w
 20932  0539  1D03               	skipz
 20933  053A  2D3D               	goto	u243_25
 20934  053B  3010               	movlw	16
 20935  053C  0274               	subwf	??i1_checkDebounceSW1+4,w
 20936  053D                     u243_25:	
 20937  053D  1C03               	skipc
 20938  053E  2D40               	goto	u243_21
 20939  053F  2D41               	goto	u243_20
 20940  0540                     u243_21:	
 20941  0540  2D4A               	goto	i1l4891
 20942  0541                     u243_20:	
 20943  0541                     i1l4885:	
 20944                           
 20945                           ;main.c: 678:             last_ms = clkms;
 20946  0541  087D               	movf	_clkms,w	;volatile
 20947  0542  00F0               	movwf	??i1_checkDebounceSW1
 20948  0543  0870               	movf	??i1_checkDebounceSW1,w
 20949  0544  0020               	movlb	0	; select bank0
 20950  0545  00DB               	movwf	_last_ms
 20951  0546                     i1l4887:	
 20952                           
 20953                           ;main.c: 679:             PIE4bits.TMR1IE = 1;
 20954  0546  002E               	movlb	14	; select bank14
 20955  0547  141A               	bsf	26,0	;volatile
 20956                           
 20957                           ;main.c: 680:             return 1;
 20958  0548  3001               	movlw	1
 20959  0549  2D6C               	goto	i1l1438
 20960  054A                     i1l4891:	
 20961                           
 20962                           ;main.c: 684:     if(clkms - last_ms < 15){
 20963  054A  087D               	movf	_clkms,w	;volatile
 20964  054B  00F0               	movwf	??i1_checkDebounceSW1
 20965  054C  01F1               	clrf	??i1_checkDebounceSW1+1
 20966  054D  0871               	movf	??i1_checkDebounceSW1+1,w
 20967  054E  00F3               	movwf	??i1_checkDebounceSW1+3
 20968  054F  0020               	movlb	0	; select bank0
 20969  0550  085B               	movf	_last_ms,w
 20970  0551  0270               	subwf	??i1_checkDebounceSW1,w
 20971  0552  00F2               	movwf	??i1_checkDebounceSW1+2
 20972  0553  1C03               	skipc
 20973  0554  03F3               	decf	??i1_checkDebounceSW1+3,f
 20974  0555  0873               	movf	??i1_checkDebounceSW1+3,w
 20975  0556  3A80               	xorlw	128
 20976  0557  00F4               	movwf	??i1_checkDebounceSW1+4
 20977  0558  3080               	movlw	128
 20978  0559  0274               	subwf	??i1_checkDebounceSW1+4,w
 20979  055A  1D03               	skipz
 20980  055B  2D5E               	goto	u244_25
 20981  055C  300F               	movlw	15
 20982  055D  0272               	subwf	??i1_checkDebounceSW1+2,w
 20983  055E                     u244_25:	
 20984  055E  1803               	skipnc
 20985  055F  2D61               	goto	u244_21
 20986  0560  2D62               	goto	u244_20
 20987  0561                     u244_21:	
 20988  0561  2D64               	goto	i1l4899
 20989  0562                     u244_20:	
 20990  0562                     i1l4893:	
 20991                           
 20992                           ;main.c: 685:         return 0;
 20993  0562  3000               	movlw	0
 20994  0563  2D6C               	goto	i1l1438
 20995  0564                     i1l4899:	
 20996                           
 20997                           ;main.c: 688:         last_ms = clkms;
 20998  0564  087D               	movf	_clkms,w	;volatile
 20999  0565  00F0               	movwf	??i1_checkDebounceSW1
 21000  0566  0870               	movf	??i1_checkDebounceSW1,w
 21001  0567  0020               	movlb	0	; select bank0
 21002  0568  00DB               	movwf	_last_ms
 21003  0569                     i1l4901:	
 21004                           
 21005                           ;main.c: 689:         PIE4bits.TMR1IE = 1;
 21006  0569  002E               	movlb	14	; select bank14
 21007  056A  141A               	bsf	26,0	;volatile
 21008                           
 21009                           ;main.c: 690:         return 1;
 21010  056B  3001               	movlw	1
 21011  056C                     i1l1438:	
 21012  056C  0008               	return
 21013  056D                     __end_ofi1_checkDebounceSW1:	
 21014                           
 21015                           	psect	text110
 21016  0C23                     __ptext110:	
 21017 ;; *************** function i1_PWM6_LoadDutyValue *****************
 21018 ;; Defined at:
 21019 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 21020 ;; Parameters:    Size  Location     Type
 21021 ;;  dutyValue       2    0[COMMON] unsigned short 
 21022 ;; Auto vars:     Size  Location     Type
 21023 ;;		None
 21024 ;; Return value:  Size  Location     Type
 21025 ;;                  1    wreg      void 
 21026 ;; Registers used:
 21027 ;;		wreg, status,2, status,0
 21028 ;; Tracked objects:
 21029 ;;		On entry : 0/0
 21030 ;;		On exit  : 0/0
 21031 ;;		Unchanged: 0/0
 21032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21033 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21035 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21036 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21037 ;;Total ram usage:        4 bytes
 21038 ;; Hardware stack levels used:    1
 21039 ;; This function calls:
 21040 ;;		Nothing
 21041 ;; This function is called by:
 21042 ;;		_sw1_EXT
 21043 ;;		_ISR_3s
 21044 ;; This function uses a non-reentrant model
 21045 ;;
 21046                           
 21047                           
 21048                           ;psect for function i1_PWM6_LoadDutyValue
 21049  0C23                     i1_PWM6_LoadDutyValue:	
 21050  0C23                     i1l4877:	
 21051                           ;incstack = 0
 21052                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 21053                           
 21054                           
 21055                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 21056  0C23  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 21057  0C24  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 21058  0C25  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 21059  0C26  00F2               	movwf	??i1_PWM6_LoadDutyValue
 21060  0C27  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 21061  0C28  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 21062  0C29  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 21063  0C2A  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 21064  0C2B  0872               	movf	??i1_PWM6_LoadDutyValue,w
 21065  0C2C  0027               	movlb	7	; select bank7
 21066  0C2D  008D               	movwf	13	;volatile
 21067                           
 21068                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 21069  0C2E  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 21070  0C2F  3903               	andlw	3
 21071  0C30  00F2               	movwf	??i1_PWM6_LoadDutyValue
 21072  0C31  3005               	movlw	5
 21073  0C32                     u241_25:	
 21074  0C32  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 21075  0C33  3EFF               	addlw	-1
 21076  0C34  1D03               	skipz
 21077  0C35  2C32               	goto	u241_25
 21078  0C36  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 21079  0C37  008C               	movwf	12	;volatile
 21080  0C38                     i1l964:	
 21081  0C38  0008               	return
 21082  0C39                     __end_ofi1_PWM6_LoadDutyValue:	
 21083  007E                     btemp	set	126	;btemp
 21084  007E                     int$flags	set	126
 21085  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    37
    Data        9
    BSS         75
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     43      74
    BANK1            80      5      67
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3779$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3785	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3784	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3779	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    push_ring@ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    push_ring@nreg_pt	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_pt(BANK0[1]), 

    push_ring@nreg_init	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_init(BANK0[1]), 

    ring_buffer@_ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    S2082Subfield_Info_Struct$reconstruct_subfield	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> recLumThresh(), recTempThresh(), recAlarm(), Absolute function(), 

    subfield_info.reconstruct_subfield	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> recLumThresh(), recTempThresh(), recAlarm(), Absolute function(), 

    S2082Subfield_Info_Struct$limit	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), limitTempThreshUnits(), Absolute function(), Absolute function(), 
		 -> Absolute function(), 

    subfield_info.limit	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), limitTempThreshUnits(), Absolute function(), Absolute function(), 
		 -> Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ISR_3s(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ISR_3s(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S383$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S66$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S66$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounceSW1

Critical Paths under _main in BANK0

    _main->_config_routine
    _save_recovery_params->_cksum_w
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_selectSubfield
    _selectSubfield->_getSubfieldInfo
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _getSubfieldInfo->_increment_subfield_clk
    _limitHoursUnits->___awdiv
    _increment_subfield_clk->_representLed
    _representLed->_PWM6_LoadDutyValue
    _all_LED->_PWM6_LoadDutyValue
    _mode_select_LED->_PWM6_LoadDutyValue
    _PWM6_LoadDutyValue->___wmul
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   52729
                                             38 BANK0      5     5      0
                                              0 BANK1      5     5      0
                           _ADC_read
                   _DATAEE_WriteByte
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                            _cksum_w
                     _config_routine
                   _i2c1_driver_open
                          _push_ring
                          _read_ring
                        _recoverData
                        _ring_buffer
               _save_recovery_params
 ---------------------------------------------------------------------------------
 (1) _save_recovery_params                                 3     3      0    5020
                                             14 BANK0      3     3      0
                   _DATAEE_WriteByte
                            _cksum_w
 ---------------------------------------------------------------------------------
 (1) _ring_buffer                                          7     2      5     796
                                              3 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0    9038
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    2026
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    3025
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0    1098
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            9     5      4    2323
                                              7 BANK0      9     5      4
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     226
                                              3 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     962
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            7     4      3    2580
                                             13 BANK0      7     4      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    1927
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0   24659
                                             35 BANK0      3     3      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
                    _mode_select_LED
                     _selectSubfield
 ---------------------------------------------------------------------------------
 (2) _selectSubfield                                       4     4      0   16502
                                             31 BANK0      4     4      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _getSubfieldInfo
                           _mode_LED
 ---------------------------------------------------------------------------------
 (3) _mode_LED                                             3     3      0    5399
                                             13 BANK0      3     3      0
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (4) _mod4_LED                                             0     0      0    1342
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod3_LED                                             0     0      0    1342
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod2_LED                                             0     0      0    1342
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod1_LED                                             0     0      0    1342
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _getSubfieldInfo                                      7     7      0    9662
                                             24 BANK0      7     7      0
                            ___awdiv
                            ___awmod
             _increment_subfield_clk
                    _limitHoursUnits
 ---------------------------------------------------------------------------------
 (4) _limitHoursUnits                                      2     2      0    1705
                                             12 BANK0      2     2      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    1705
                                              3 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _increment_subfield_clk                               6     4      2    4895
                                             18 BANK0      6     4      2
                 _PWM6_LoadDutyValue
                            ___awdiv (ARG)
                            ___awmod (ARG)
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _limitHoursUnits (ARG)
                       _representLed
 ---------------------------------------------------------------------------------
 (5) _representLed                                         5     5      0    2837
                                             13 BANK0      5     5      0
                 _PWM6_LoadDutyValue
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1306
                                              3 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _checkDebounceSW2                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (5) _checkDebounceSW1                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1333
                                              3 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _all_LED                                              1     1      0    1342
                                             13 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_select_LED                                      1     1      0    1342
                                             13 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (5) _PWM6_LoadDutyValue                                   4     2      2    1342
                                              9 BANK0      4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     844
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     152
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      31
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (8) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (9) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _mssp1_setIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_READ                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_TXData                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_getRXData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_STOP                                 0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_RESTART                              0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_resetBus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_startRX                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _returnStop                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _returnReset                                         1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _i2c_setDataCompleteCallback                         4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (12) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (11) _i2c_setBuffer                                       4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _i2c_restartWrite                                    1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_STOP                                    0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART                                 0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_restart                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_sendACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (9) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (9) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (10) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (9) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (10) _sw1_EXT                                             1     1      0      96
                                              7 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                 i1_checkDebounceSW1
 ---------------------------------------------------------------------------------
 (11) i1_checkDebounceSW1                                  7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (10) i1_PWM6_LoadDutyValue                                4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _INT_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
     ___wmul (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _config_routine
     _all_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _checkDebounceSW1
     _checkDebounceSW2
     _mod1_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod2_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod3_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod4_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mode_select_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _selectSubfield
       _all_LED
         _PWM6_LoadDutyValue
           ___wmul (ARG)
       _checkDebounceSW1
       _checkDebounceSW2
       _getSubfieldInfo
         ___awdiv
         ___awmod
         _increment_subfield_clk
           _PWM6_LoadDutyValue
             ___wmul (ARG)
           ___awdiv (ARG)
           ___awmod (ARG)
           _checkDebounceSW1 (ARG)
           _checkDebounceSW2 (ARG)
           _limitHoursUnits (ARG)
             ___awdiv
           _representLed (ARG)
             _PWM6_LoadDutyValue
               ___wmul (ARG)
             ___wmul
         _limitHoursUnits
           ___awdiv
       _mode_LED
         _mod1_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod2_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod3_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod4_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
   _i2c1_driver_open
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
   _ring_buffer
   _save_recovery_params
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounceSW1
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2B      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      5      43       7       83.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 12:33:41 2019

                            returnReset@p 0079          __end_of_TMR2_SetInterruptHandler 0AEB  
                          ___bmul@product 0025                               __CFG_CP$OFF 0000  
                            ___awdiv@sign 0029                      __size_of_do_I2C_IDLE 0005  
                           _subfield_info 004B                       _do_I2C_SEND_RESTART 0A4B  
                    __size_of_do_I2C_RCEN 0007                       ___wmul@multiplicand 0025  
             __size_of_PWM6_LoadDutyValue 0019                               __CFG_LVP$ON 0000  
                                     l341 0AC6                                       l442 0ACF  
                                     l506 0B36                                       l347 0B6B  
                                     l445 0AAB                                       l439 0D48  
                                     l760 0AA3                                       l763 0A83  
                                     l675 07E3                                       l757 0C4E  
                                     l861 0C22                                       l917 0D67  
                                     l766 0ABD                                       l864 0A2A  
                                     l961 0B5D                                       l883 0AD8  
                                     l947 0AE1                                       l964 0CDD  
                                     _PR2 028D                              __CFG_CPD$OFF 0000  
                                     i1l9 0A0D                           _timer1ReloadVal 00D8  
                                     _seg 005C             i2c_setDataCompleteCallback@cb 0075  
                 __size_of_PMD_Initialize 0008                              ___awmod@sign 0029  
                         _TMR2_Initialize 0C94                     __size_of_do_I2C_RESET 0008  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_ZCD$OFF 0000                           __end_of_LED_bin 0D12  
                                    l1011 0B98                                      l1005 0DE0  
                                    l1007 0DE4                                      l1008 0DEB  
                 ??_rd2RegCompleteHandler 007A                                      l1046 0CAB  
                                    l1320 03CE                                      l2034 045D  
                                    l1307 01D7                                      l1332 03FD  
                                    l1421 0CF7                                      l1341 06B6  
                                    l2047 0614                                      l1415 05C0  
                                    l1360 02DE                                      l1089 0AEA  
                                    l1345 020F                                      l1450 0E8A  
                                    l1291 00A1                                      l1348 0288  
                                    l1445 0750                                      l1453 0F12  
                                    l1438 0512                                      l1390 0D2C  
                                    l1294 00CD                                      l1295 01F4  
                                    l1704 0B1E                                      l1715 0D87  
                                    l1643 0FB8                                      l1651 0DC7  
                                    l1636 0FFF                                      l1725 0E60  
                                    l1629 0376                                      l1646 0BB8  
                                    l1671 045E                                      l1656 07FF  
                                    l1729 0703                                      l1674 046B  
                                    l1683 04B8                                      l1691 0B08  
                                    l1907 0C64                                      l1686 0D11  
                                    l1694 0AFD                      _ADCC_StartConversion 0A9C  
                                    l1881 0D93                                      l7001 0BA9  
                                    l7011 0D7C                                      l7003 0D68  
                                    l1883 0DA7                                      l1699 0B13  
                                    l7013 0D84                                      l7005 0D70  
                                    l7021 0672                                      l7101 0B2B  
                                    l7015 0D86                                      l7007 0D72  
                                    l7031 0691                                      l7023 067A  
                                    l7103 0B30                                      l7121 0D39  
                                    l7113 0D2D                                      l7009 0D7A  
                                    l7033 0696                                      l7025 067F  
                                    l7017 0669                                      l7105 0B31  
                                    l7201 0FC8                                      l7041 07E4  
                                    l7123 0D3C                                      l7115 0D30  
                                    l7131 0A28                                      l7035 0699  
                                    l7027 0684                                      l7019 066E  
                                    l7107 0B33                                      l7211 0FD6  
                                    l7051 0C51                                      l7125 0D3F  
                                    l7117 0D33                                      l6501 04BB  
                                    l7029 0689                                      l7037 069C  
                                    l7221 037A                                      l7213 0FED  
                                    l7061 0C63                                      l7053 0C52  
                                    l7045 07E9                                      l7141 0343  
                                    l7133 02DF                                      l7151 0CDE  
                                    l7127 0D42                                      l7119 0D36  
                                    l6503 04CA                                      l6511 04F0  
                                    l7039 06A0                                      l7231 0393  
                                    l7223 037E                                      l7215 0FF5  
                                    l7207 0FC9                                      l7055 0C56  
                                    l7047 07F1                                      l7143 034F  
                                    l7135 02EC                                      l7153 0CE3  
                                    l7161 0CF8                                      l7129 0D45  
                                    l6521 050F                                      l6513 0508  
                                    l6505 04E7                                      l7241 03AE  
                                    l7233 0398                                      l7225 0382  
                                    l7217 0FF9                                      l7209 0FD2  
                                    l6601 0B8A                                      l7057 0C5A  
                                    l7049 07F6                                      l7145 035B  
                                    l7137 02FE                                      l7401 00A1  
                                    l7155 0CE7                                      l6507 04EC  
                                    l7251 03D3                                      l7243 03B2  
                                    l7235 03A0                                      l7227 038A  
                                    l7219 0377                                      l6611 0B95  
                                    l6603 0B8E                                      l7059 0C5C  
                                    l7171 0F94                                      l7163 0F7C  
                                    l7147 0367                                      l7139 0340  
                                    l7411 00A8                                      l7403 00A1  
                                    l7157 0CEF                                      l6701 05D2  
                                    l6533 0737                                      l6525 0704  
                                    l6621 0B06                                      l7253 03DB  
                                    l7261 03EB                                      l7245 03B6  
                                    l7237 03A6                                      l7229 0390  
                                    l6613 0B96                                      l6605 0B92  
                                    l7181 0FAE                                      l7173 0F9A  
                                    l7165 0F7C                                      l7149 0373  
                                    l7501 01B8                                      l7421 00B2  
                                    l7413 00AA                                      l6711 05E9  
                                    l6703 05D7                                      l6519 050A  
                                    l6535 074F                                      l6527 0713  
                                    l6551 06D3                                      l6623 0AF4  
                                    l6631 0B11                                      l7263 03EF  
                                    l7255 03E0                                      l7239 03AA  
                                    l6607 0B93                                      l7175 0FA1  
                                    l7167 0F82                                      l7191 0EFF  
                                    l7271 0E61                                      l7511 01CE  
                                    l7503 01BD                                      l7431 00BC  
                                    l7423 00B4                                      l7415 00AB  
                                    l7407 00A6                                      l6713 05ED  
                                    l6705 05DD                                      l6721 0606  
                                    l6529 0730                                      l6553 06F0  
                                    l6545 06B9                                      l6641 0570  
                                    l6561 0404                                      l6801 020A  
                                    l6617 0AFE                                      l6625 0AF6  
                                    l6633 0B14                                      l7265 03F5  
                                    l7257 03E3                                      l7249 03BB  
                                    l6609 0B94                                      l7169 0F87  
                                    l7177 0FAC                                      l7193 0F01  
                                    l7185 0EE6                                      l7281 0E6F  
                                    l7273 0E63                                      l7521 01E2  
                                    l7513 01D4                                      l7505 01BF  
                                    l7441 00CB                                      l7433 00BD  
                                    l7425 00B7                                      l7417 00AD  
                                    l7409 00A7                                      l6731 0AD0  
                                    l6483 0CC5                                      l6723 060B  
                                    l6715 05F7                                      l6707 05E0  
                                    l6491 0D98                                      l6555 06FA  
                                    l6651 0584                                      l6643 0574  
                                    l6571 0418                                      l6563 0409  
                                    l6803 0212                                      l6619 0B00  
                                    l6627 0B09                                      l6635 0B16  
                                    l7259 03E6                                      l7195 0F0A  
                                    l7187 0EE8                                      l7283 0E7B  
                                    l7275 0E65                                      l7531 01FE  
                                    l7507 01C2                                      l7523 01E4  
                                    l7515 01D8                                      l7451 00D7  
                                    l7443 00CC                                      l7435 00C0  
                                    l7427 00B9                                      l7419 00AF  
                                    l6901 07C8                                      l6733 0AD9  
                                    l6725 0610                                      l6717 05FB  
                                    l6709 05E5                                      l6493 0D9D  
                                    l6485 0D88                                      l6549 06C4  
                                    l6661 05A0                                      l6653 0588  
                                    l6645 057A                                      l6581 042C  
                                    l6573 041A                                      l6565 040B  
                                    l6557 03FE                                      l6821 02AC  
                                    l6805 022A                                      l6813 0274  
                                    l6629 0B0B                                      l6637 0B1C  
                                    l6741 0DD8                                      l7197 0FBB  
                                    l7189 0EF7                                      l7285 0E87  
                                    l7277 0E69                                      l7533 0204  
                                    l7525 01ED                                      l7517 01DD  
                                    l7509 01C8                                      l7461 00E7  
                                    l7453 00D9                                      l7445 00CE  
                                    l7437 00C7                                      l7429 00BA  
                                    l6911 07D2                                      l6903 07CA  
                                    l6719 0600                                      l6495 0DA3  
                                    l6487 0D8B                                      l6671 05B5  
                                    l6663 05A1                                      l6655 058D  
                                    l6647 057C                                      l6639 056F  
                                    l6591 0449                                      l6583 0430  
                                    l6575 0420                                      l6567 040F  
                                    l6559 0400                                      l6815 028B  
                                    l6807 0244                                      l6831 02CB  
                                    l6751 0DDF                                      l6743 0DD9  
                                    l6735 0DC8                                      l7199 0FC3  
                                    l7279 0E6D                                      l7527 01F6  
                                    l7519 01DF                                      l7471 010E  
                                    l7463 00ED                                      l7455 00E1  
                                    l7447 00CF                                      l7439 00C9  
                                    l6729 0ABE                                      l6921 07DE  
                                    l6913 07D4                                      l6905 07CC  
                                    l6761 0474                                      l6489 0D8F  
                                    l6657 0595                                      l6665 05A6  
                                    l6649 0582                                      l6673 05BA  
                                    l6585 043F                                      l6577 0423  
                                    l6593 044F                                      l6569 0414  
                                    l6681 0D29                                      l6825 02B5  
                                    l6817 0293                                      l6809 025C  
                                    l6753 0DE5                                      l6745 0DDA  
                                    l6737 0DD0                                      l7529 01FC  
                                    l7481 017A                                      l7473 010F  
                                    l7465 00F8                                      l7457 00E3  
                                    l7449 00D1                                      l6931 0ACE  
                                    l6923 07E0                                      l6915 07D7  
                                    l6907 07CE                                      l6755 0AE2  
                                    l6771 04A0                                      l6763 047C  
                                    l6691 05C1                                      l6499 04B9  
                                    l6675 05BF                                      l6667 05AA  
                                    l6659 059A                                      l6595 0454  
                                    l6587 0443                                      l6579 0428  
                                    l6827 02C2                                      l6819 02A3  
                                    l6747 0DDB                                      l6739 0DD4  
                                    l7491 0192                                      l7483 017D  
                                    l7475 0127                                      l7467 0106  
                                    l7459 00E5                                      l6941 0C4D  
                                    l6925 0AC7                                      l6917 07D9  
                                    l6909 07D0                                      l6933 0B51  
                                    l6773 04A2                                      l6765 048C  
                                    l6757 0460                                      l6693 05C3  
                                    l6669 05B2                                      l6597 0459  
                                    l6589 0444                                      l7821 027A  
                                    l6781 0E39                                      l6749 0DDD  
                                    l6853 0DAE                                      l6845 0DA8  
                                    l7493 019C                                      l7485 0180  
                                    l7477 0145                                      l7469 010D  
                                    l7397 007E                                      l6863 0B5E  
                                    l6927 0ACA                                      l6919 07DC  
                                    l6871 079B                                      l6935 0B58  
                                    l6951 0C9F                                      l6943 0C94  
                                    l6775 04AB                                      l6767 0495  
                                    l6759 0469                                      l6695 05C7  
                                    l6687 0D2B                                      l6679 0D12  
                                    l7823 02BA                                      l6783 0E3A  
                                    l6855 0DB9                                      l6847 0DAA  
                                    l7495 01A2                                      l7487 018A  
                                    l7479 016E                                      l7399 00A1  
                                    l6937 0C39                                      l6865 0B61  
                                    l6929 0ACB                                      l6881 07A9  
                                    l6873 07A1                                      l6961 0D4E  
                                    l6953 0CA0                                      l6945 0C99  
                                    l6777 04AD                                      l6769 0497  
                                    l6697 05CC                                      l7825 02D0  
                                    l6785 0E3E                                      l6793 0E4A  
                                    l7817 03C0                                      l6857 0DBD  
                                    l7497 01A8                                      l7489 0190  
                                    l6939 0C4B                                      l6867 0B69  
                                    l6891 07B4                                      l6883 07AB  
                                    l6875 07A3                                      l6971 0D5C  
                                    l6963 0D50                                      l6955 0CA8  
                                    l6947 0C9A                                      l6779 04B6  
                                    l6699 05CE                                      l7819 0E52  
                                    l6787 0E42                                      l6859 0DC6  
                                    l7499 01AD                                      l6893 07C0  
                                    l6885 07AE                                      l6877 07A5  
                                    l6869 0AA4                                      l6981 0C16  
                                    l6973 0D64                                      l6965 0D52  
                                    l6957 0D49                                      l6949 0C9D  
                                    l6789 0E46                                      l6991 0AA2  
                                    l6895 07C2                                      l6887 07B0  
                                    l6879 07A7                                      l6983 0C17  
                                    l6975 0C0E                                      l6967 0D59  
                                    l6959 0D4C                                      l6993 0A7D  
                                    l6897 07C4                                      l6889 07B2  
                                    l6985 0C1F                                      l6977 0C13  
                                    l6969 0D5B                                      l6987 0A9E  
                                    l6899 07C6                                      l6979 0C14  
                                    l6997 0AB5                                      l6989 0AA1  
                                    _LATA 0016                                      _LATB 0017  
                         __end_of_INT_ISR 0A6A                                      _LATC 0018  
                                    u4000 07FF                                      _LATD 0019  
                                    u4001 07FE                                      _LATE 001A  
                                    u4010 0C56                                      u4011 0C55  
                                    u4020 0C63                                      u4100 0F9A  
                                    u4021 0C62                                      u4101 0F99  
                                    u4110 0FC3                                      u4111 0FC2  
                                    u4200 03F5                                      u4040 0B30  
                                    u4120 0FD2                   __size_of_selectSubfield 004E  
                                    u4201 03F4                                      u4041 0B2F  
                                    u4121 0FD1                                      u4130 0FFF  
                                    u4050 02EC                                      _T2PR 028D  
                                    u4131 0FFE                                      u4051 02EB  
                                    u4140 038A                                      u4060 02FE  
                                    u4141 0389                                      u4061 02FD  
                                    u4070 0CEF                                      u4150 0390  
                                    u4071 0CEE                                      u4151 038F  
                                    u3600 0713                                      u4160 0398  
                                    u4080 0F82                                      u4400 0127  
                                    u3601 0712                                      u4161 0397  
                                    u4081 0F81                                      u4401 0126  
                                    u3610 0730                                      u3530 0D8F  
                                    u4170 03A0                                      u4090 0F87  
                                    u4410 0145                                      u3611 072F  
                                    u3531 0D8E                                      u4171 039F  
                                    u4091 0F86                                      u4411 0144  
                                    u3620 074F                                      u3700 0430  
                                    u4180 03D3                                      u4500 0204  
                                    u4420 018A                                      u3525 0CD6  
                                    u3621 074E                                      u3701 042F  
                                    u4181 03D2                                      u4501 0203  
                                    u4421 0189                                      u3630 06C3  
                                    u4190 03DB                                      u4430 0190  
                                    u3615 072C                                      u3631 06C2  
                                    u4191 03DA                                      u4431 018F  
                                    u4415 0141                                      u3560 0DA3  
                                    u3800 05AA                                      u3720 043F  
                                    u4440 01A2                                      u3625 074B  
                                    u3561 0DA2                                      u3545 0D94  
                                    u3801 05A9                                      u3721 043E  
                                    u4441 01A1                                      u3570 04CA  
                                    u3810 05B2                                      u4450 01A8  
                                    u3571 04C9                                      u3555 0D99  
                                    u3811 05B1                                      u3715 0431  
                                    u4451 01A7                                      u3580 04E7  
                                    u3820 05BF                                      u3740 044F  
                                    u3660 0404                                      u4460 01BD  
                                    u4380 00E1                                      _PMD0 0796  
                                    u3581 04E6                                      u3645 06C7  
                                    u3821 05BE                                      u3741 044E  
                                    u3725 043B                                      u3661 0403  
                                    u4461 01BC                                      u4381 00E0  
                                    _PMD1 0797                                      u3910 0606  
                                    u3590 0508                                      u3750 0454  
                                    u3670 040F                                      u3830 0D29  
                                    u4470 01CE                                      u4390 00ED  
                                    _PMD2 0798                                      u3911 0605  
                                    u3591 0507                                      u3655 06D6  
                                    u3751 0453                                      u3735 0445  
                                    u3671 040E                                      u3831 0D28  
                                    u4607 01E8                                      u4471 01CD  
                                    u4391 00EC                                      _PMD3 0799  
                                    u3920 060B                                      u3840 05C7  
                                    u3760 0582                                      u3680 0420  
                                    u4480 01DD                                      _PMD4 079A  
                                    u3921 060A                                      u3905 05FC  
                                    u3841 05C6                                      u3585 04E3  
                                    u3761 0581                                      u3681 041F  
                                    u4617 03EC                                      u4481 01DC  
                                    _PMD5 079B                                      u3850 05D2  
                                    u3770 058D                                      u3930 0DE4  
                                    u4490 01F4                                      u4707 0D76  
                                    u3851 05D1                                      u3595 0504  
                                    u3771 058C                                      u4627 069D  
                                    u3931 0DE3                                      u4491 01F3  
                                    u3860 05DD                                      u3780 0595  
                                    u3940 0DC6                                      u4717 0D80  
                                    u4637 0464                                      u3861 05DC  
                                    u3781 0594                                      u3941 0DC5  
                                    u3790 05A0                                      u3950 0672  
                                    u4727 0CE4                                      u4647 046F  
                                    u3791 059F                                      u3695 0424  
                                    u3951 0671                                      u3880 05ED  
                                    u3960 067A                                      i1l73 0B50  
                                    u4657 0480                                      u3881 05EC  
                                    u3961 0679                                      u3890 05F7  
                                    u3970 0689                                      u4667 0490  
                                    u3891 05F6                                      u3875 05E1  
                                    u3971 0688                                      u3980 0691  
                                    u4677 049B                                      u3981 0690  
                                    u3990 06B6                                      u4687 04A6  
                                    u3895 05F3                                      u3991 06B5  
                                    u4697 04B1                                      u3995 06B2  
                    ?_do_I2C_SEND_RESTART 0070                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                   ??_wr2RegCompleteHandler 007A  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0005                                      _alaf 0053  
                                    _clkh 005E                 ?_do_I2C_SEND_RESTART_READ 0070  
                                    _clkm 005D                                      _main 007E  
                                    _tala 0067                 __size_of_do_I2C_SEND_STOP 0005  
                  __size_of_do_I2C_DO_ACK 0005                                      _nreg 0069  
                         _TMR0_StartTimer 0A28                                      _temp 0054  
                                    _pmon 0068                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000       __end_of_INT_DefaultInterruptHandler 0A08  
             _INT_DefaultInterruptHandler 0A07                     ?_do_I2C_SEND_ADR_READ 0070  
         ??_i2c1_driver_clearBusCollision 0070                                      start 005B  
                        __end_of_ADC_read 0CF8           __end_of_INT_SetInterruptHandler 0AC7  
                           _i2c_setBuffer 0B99                ??_TMR1_SetInterruptHandler 0025  
                           __CFG_CSWEN$ON 0000                         ___bmul@multiplier 0026  
                           __CFG_MCLRE$ON 0000                           __end_of_i2c_ISR 0EE4  
        __size_of_rdBlkRegCompleteHandler 0018                  ??_do_I2C_DO_NACK_RESTART 0070  
               config_routine@select_mode 0044                 __size_of_DATAEE_WriteByte 0024  
                 __end_of_TMR0_Initialize 0C23                              _do_I2C_RESET 0A8C  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0AD0                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                __end_of_i2c1_driver_open 0B37                                     ?_main 0070  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                         __end_of___awdiv 045E                  __end_of_i2c1_driver_stop 0A19  
                                   _ADPRE 009C                             __CFG_WDTE$OFF 0000  
                         __end_of___awmod 0615                                     _ADRPT 010D  
                                   _T1CLK 0211                           ___awdiv@divisor 0023  
                                   _T1CON 020E                                     _T2CON 028E  
                                   _T2HLT 028F                __end_of_i2c1_driver_TXData 0A3C  
                          __CFG_DEBUG$OFF 0000                                     i1l103 0BA8  
                                   i1l200 0F45                                     i1l210 0EE3  
                                   i1l131 0A45                                     i1l140 0A54  
                                   _T2TMR 028C                                     i1l125 0A93  
                                   i1l213 0A36                                     i1l134 0A4A  
                                   i1l303 0C93                                     i1l143 0AB4  
                                   i1l224 0E36                                     i1l216 0A0F  
                                   i1l128 0A40                                     i1l152 0A59  
                                   i1l137 0A4F                                     i1l146 0A9B  
                                   _T2RST 0291                                     i1l219 0003  
                                   i1l243 0BEB                                     i1l155 0A5E  
                                   i1l164 0EB6                                     i1l172 0668  
                                   i1l149 0A7C                                     i1l334 0A69  
                                   i1l158 0A63                                     i1l344 0A07  
                                   i1l520 0A15                                     i1l264 0BFC  
                                   i1l169 064C                                     i1l185 076E  
                                   i1l338 0B43                                     i1l514 0A0B  
                                   i1l186 079A                                     i1l523 0A18  
                                   i1l291 0BDA                                     i1l532 0A1E  
                                   i1l380 001F                                     i1l541 0A3B  
                                   i1l550 0A32                                     i1l526 0A8B  
                                   i1l279 0C0D                                     i1l383 0032  
                                   i1l392 0059                                     i1l529 0A1B  
                                   i1l385 0041                                     i1l386 0059  
                                   i1l378 0013                                     i1l547 0A2E  
                                   i1l491 0A21                                     i1l387 004D  
                                   i1l488 0A24                                     i1l584 0A27  
                                   i1l931 0BC9                                     i1l950 0A09  
                                   i1l880 0B7A                                     i1l944 0C7B  
                                   i1l867 0A12                                     i1l964 0C38  
                                   i1l886 0A08                           ___awdiv@counter 0028  
                                   _OSCEN 0891                           __end_of_all_LED 04B9  
                                   _TMR0H 001D                                     _TMR1H 020D  
                                   _TMR0L 001C                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C         __size_of_TMR0_SetInterruptHandler 0009  
                         _PWM6_Initialize 0B51                 ?_TMR0_SetInterruptHandler 0023  
                 ??_ADCC_IsConversionDone 0023                          __end_of_TMR0_ISR 0B7B  
                        __end_of_TMR1_ISR 0C7C                          __end_of_TMR2_ISR 0B8A  
                         __end_of_sw1_EXT 0E11                           __end_of_cksum_w 0BB9  
                         _DATAEE_ReadByte 0B8A                                     _alarm 0055  
                                   _clkms 007D                __end_of_i2c1_driver_isNACK 0A8C  
                                   _cksum 0DA8                     ?_ADCC_StartConversion 0070  
                         representLed@aux 0031                           representLed@val 0030  
              ?_do_I2C_SEND_RESTART_WRITE 0070                                     _value 00C9  
                       ?_checkDebounceSW1 0070                         ?_checkDebounceSW2 0070  
                   ??_do_I2C_SEND_RESTART 0070                   __end_of_TMR1_Initialize 0D68  
                                   pclath 000A                   __size_of_mssp1_clearIRQ 0003  
                      ??_checkDebounceSW1 0023                        ??_checkDebounceSW2 0023  
                  ?_do_I2C_SEND_ADR_WRITE 0070                                     status 0003  
                                   wtemp0 007E                           _TMR1_WriteTimer 0BB9  
                          ?_i2c_setBuffer 0070                              ?_setCallBack 0070  
                 ?_increment_subfield_clk 0032                      _save_recovery_params 0E61  
                       ??_getSubfieldInfo 0038                             _fsmStateTable 1000  
                         __initialization 005D                                _i2c_status 00A0  
                            __end_of_main 020A                         ??_limitHoursUnits 002C  
                 __end_of_TMR2_Initialize 0CAC               ?_INTERRUPT_InterruptManager 0070  
                            ?_recoverData 0070                             setCallBack@cb 0070  
                           _do_I2C_DO_ACK 0A55                  _TMR2_SetInterruptHandler 0AE2  
                                  ??_main 0046                         ?_i2c_restartWrite 0079  
           __size_of_i2c1_driver_sendNACK 0004                increment_subfield_clk@exit 0035  
                               ??_LED_bin 0025                        ??_i2c_restartWrite 007A  
               __size_of_handler_clock_ms 000C             __size_of_i2c1_driver_resetBus 0001  
                               ??_INT_ISR 0078                   ?_do_I2C_DO_ADDRESS_NACK 0070  
                          _convertedValue 00BF                                    _ADACCH 0091  
                                  _ADACCL 0090                   __end_of_TMR0_StartTimer 0A2B  
             __size_ofi1_checkDebounceSW1 005A                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    ?_cksum 0070  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                        ___awdiv@dividend 0025                                    _ADUTHL 0110  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 001E                                    _T0CON1 001F  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  _RA6PPS 0F16                                    _RC3PPS 0F23  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l1092 0A0A                                    i1l1086 0B89  
                                  i1l1433 0B2A                                    _ODCONA 0F3A  
                                  i1l1282 0CBF                                    _ODCONB 0F45  
                                  i1l1283 0CC4                                    _ODCONC 0F50  
                                  _ODCOND 0F5B                                    i1l1429 0F79  
                                  _ODCONE 0F66                                    i1l1438 056C  
                                  i1l1279 0E10                                    i1l5001 0BCA  
                                  i1l5003 0BD2                                    i1l5011 0C92  
                                  i1l5005 0BD9                                    i1l5009 0C7C  
                                  i1l5201 0A3F                                    i1l5051 0DFB  
                                  i1l5019 0A10                                    i1l5053 0E01  
                                  i1l5045 0DEC                                    i1l5205 0AAC  
                                  i1l5213 0A94                                    i1l5221 0A76  
                                  i1l5055 0E07                                    i1l5047 0DF4  
                                  i1l5207 0AAE                                    i1l5215 0A96  
                                  i1l5223 0A78                                    i1l5231 0A58  
                                  u203_20 0E18                                    i1l5057 0E0C  
                                  i1l5049 0DFA                                    u203_21 0E17  
                                  i1l5209 0AB3                                    i1l5217 0A9A  
                                  i1l5225 0A7B                                    i1l5305 0770  
                                  i1l6041 001B                                    i1l6033 0006  
                                  i1l5331 0F1D                                    i1l5323 0F13  
                                  i1l5243 0E96                                    i1l5235 0E8B  
                                  i1l5315 0778                                    i1l6051 003A  
                                  i1l6043 0023                                    i1l6035 000B  
                                  i1l5501 0BC3                                    i1l5325 0F16  
                                  i1l5341 0F23                                    i1l5229 0A55  
                                  i1l5237 0E8D                                    i1l5261 061D  
                                  i1l5309 0774                                    i1l5165 0A22  
                                  i1l6053 0045                                    i1l6045 0027  
                                  i1l6037 000F                                    i1l5351 0B37  
                                  i1l5511 0CBA                                    i1l5503 0BC5  
                                  i1l4631 0E29                                    i1l5335 0F1F  
                                  i1l5191 0A91                                    i1l5239 0E92  
                                  i1l6055 0049                                    i1l6047 002B  
                                  i1l6039 0017                                    i1l5353 0B3E  
                                  i1l5513 0CC2                                    i1l5505 0BC7  
                                  i1l5329 0F1A                                    i1l5193 0A92  
                                  i1l5249 0E9A                                    i1l5281 0665  
                                  i1l5265 0621                                    i1l5257 0615  
                                  i1l6057 0051                                    i1l6049 0036  
                                  i1l5507 0CAC                                    i1l4627 0E12  
                                  i1l5187 0A8C                                    i1l5283 0667  
                                  i1l5275 0629                                    i1l5291 0751  
                                  i1l6059 0055                                    i1l4901 0569  
                                  i1l5509 0CB3                                    i1l5701 0C6F  
                                  i1l4741 0BA7                                    i1l4629 0E18  
                                  i1l5189 0A8F                                    i1l5197 0A3C  
                                  i1l5277 064E                                    i1l5269 0625  
                                  i1l5293 075B                                    i1l5349 0A25  
                                  i1l5703 0C76                                    i1l4743 0A13  
                                  i1l4735 0B44                                    i1l5199 0A3E  
                                  i1l5279 065A                                    i1l5295 075F  
                                  i1l5561 0F5B                                    i1l5705 0B7B  
                                  i1l4745 0A16                                    i1l4737 0B9A  
                                  i1l4905 0A0C                                    i1l5297 0769  
                                  i1l5571 0F74                                    i1l5563 0F5F  
                                  i1l5555 0F46                                    i1l5707 0B7D  
                                  i1l4739 0B9F                                    i1l4747 0A2F  
                                  i1l4923 0A46                                    i1l4931 0A4E  
                                  i1l5299 076C                                    i1l5493 0BB9  
                                  i1l5573 0F78                                    i1l5565 0F65  
                                  i1l5557 0F4C                                    i1l5709 0B84  
                                  i1l4941 0A38                                    i1l4917 0A41  
                                  i1l4925 0A49                                    i1l5495 0BBE  
                                  i1l5567 0F6D                                    i1l5559 0F57  
                                  i1l5575 0B1F                                    i1l4943 0A19  
                                  i1l4919 0A44                                    i1l4935 0A50  
                                  i1l4881 0515                                    i1l5497 0BBF  
                                  i1l5569 0F6E                                    i1l5577 0B23  
                                  i1l4945 0A2B                                    i1l4929 0A4B  
                                  i1l4937 0A53                                    i1l4953 0A5F  
                                  i1l5681 0EC6                                    i1l4883 0524  
                                  i1l4891 054A                                    i1l5691 0B6C  
                                  i1l5499 0BC1                                    i1l5579 0B29  
                                  i1l4963 0A1C                                    i1l4947 0A5A  
                                  i1l4955 0A62                                    i1l5683 0ECC  
                                  i1l5675 0EB7                                    i1l4877 0C23  
                                  i1l4893 0562                                    i1l4885 0541  
                                  i1l5693 0B6E                                    i1l4973 0002  
                                  i1l4981 0BEA                                    i1l4949 0A5D  
                                  i1l5677 0EBA                                    i1l5685 0A33  
                                  i1l4887 0546                                    i1l4879 0513  
                                  i1l5687 0A64                                    i1l5695 0B75  
                                  i1l4959 0A84                                    i1l4967 0A1F  
                                  i1l5679 0EBF                                    u223_20 0B9F  
                                  i1l5689 0A66                                    i1l5697 0C65  
                                  u223_21 0B9E                                    i1l4969 0A0E  
                                  i1l4977 0BDB                                    i1l4985 0BEC  
                                  i1l4993 0BFD                                    i1l4899 0564  
                                  i1l5699 0C67                                    i1l4979 0BE3  
                                  i1l4987 0BF4                                    i1l4995 0C05  
                                  i1l4989 0BFB                                    i1l4997 0C0C  
                                  i1l7831 0EAE                                    u320_20 001B  
                                  i1l7833 0F37                                    u320_21 001A  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  i1l7827 078C                                    _INLVLC 0F52  
                                  _INLVLD 0F5D                                    i1l7829 063E  
                                  _INLVLE 0F68                                    u321_20 0023  
                                  u321_21 0022                                    u241_25 0C32  
                                  u242_20 0524                                    u322_20 0027  
                                  u242_21 0523                                    u322_21 0026  
                                  u243_20 0541                                    u323_20 002B  
                                  u243_21 0540                                    u323_21 002A  
                                  u243_25 053D                                    u244_20 0562  
                                  u324_20 0036                                    u244_21 0561  
                                  u324_21 0035                                    u244_25 055E  
                                  u325_20 003A                                    u317_20 000B  
                                  u325_21 0039                                    u317_21 000A  
                                  u270_20 0B29                                    u254_20 061C  
                                  u326_20 0045                                    u318_20 000F  
                                  u270_21 0B28                                    u254_21 061B  
                                  u326_21 0044                                    u318_21 000E  
                                  u247_20 0DF4                                    u255_20 0665  
                                  u327_20 0049                                    u319_20 0017  
                                  u247_21 0DF3                                    u255_21 0664  
                                  u327_21 0048                                    u319_21 0016  
                                  u248_20 0DFA                                    u280_20 0C76  
                                  u256_20 0769                                    u328_20 0051  
                                  u248_21 0DF9                                    u280_21 0C75  
                                  u256_21 0768                                    u328_21 0050  
                                  _INTPPS 0E90                                    u249_20 0E0C  
                                  u257_20 0B3E                                    u265_20 0F4C  
                                  u281_20 0B84                                    u329_20 0055  
                                  u249_21 0E0B                                    u257_21 0B3D  
                                  u265_21 0F4B                                    u281_21 0B83  
                                  u329_21 0054                                    u258_20 0BBE  
                                  u266_20 0F55                                    u258_21 0BBD  
                                  u266_21 0F52                                    u259_20 0CB3  
                                  u259_21 0CB2                                    u267_24 0F57  
                                  u268_20 0F65                                    u268_21 0F64  
                                  u269_20 0F74                                    u277_20 0EBF  
                                  u269_21 0F73                                    u277_21 0EBE  
                                  u278_20 0EC6                                    u278_21 0EC5  
                                  u279_20 0B75                                    u279_21 0B74  
                                  _OSCFRQ 0893                                    _ISR_3s 0CAC  
                  ??_do_I2C_SEND_ADR_READ 0070                  rdBlkRegCompleteHandler@p 0079  
          __end_of_increment_subfield_clk 05C1                                 ??_i2c_ISR 0020  
              ??_ADCC_GetConversionResult 0025                     ?_save_recovery_params 0070  
                            ?_ring_buffer 0023                            __CFG_PWRTE$OFF 0000  
            __end_ofi1_PWM6_LoadDutyValue 0C39                     _i2c1_driver_getRXData 0A1C  
                        __end_of_mod1_LED 0B09                          __end_of_mod2_LED 0AFE  
                        __end_of_mod3_LED 0B14                          __end_of_mod4_LED 0B1F  
    __end_of_TMR1_DefaultInterruptHandler 0A0A     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0A09                              _CCPTMRS1bits 021F  
                                  ___bmul 0C4F               __end_of_do_I2C_DO_NACK_STOP 0A5F  
     __end_of_i2c_setDataCompleteCallback 0B51               _i2c_setDataCompleteCallback 0B44  
                                  ___wmul 0D88                                 ??___awdiv 0027  
   __end_of_i2c1_driver_clearBusCollision 0A28    __size_of_i2c1_driver_clearBusCollision 0003  
           _i2c1_driver_clearBusCollision 0A25                            __CFG_STVREN$ON 0000  
                               ??___awmod 0027           __size_of_do_I2C_DO_NACK_RESTART 0005  
                                  _last1m 0058                                    _last5s 0059  
                               ??_all_LED 002D                          __end_of_mode_LED 0E61  
                        ?_TMR0_Initialize 0070                   __end_of_PWM6_Initialize 0B5E  
                        ___awdiv@quotient 002A                     ring_buffer@_ring_byte 0029  
                          ?_do_I2C_DO_ACK 0070                           ___awmod@divisor 0023  
                         ___awmod@counter 0028                                    cksum@i 0027  
                           ?_INT_CallBack 0070                   __end_of_DATAEE_ReadByte 0B99  
                               ??_sw1_EXT 0077                                 ??_cksum_w 002D  
            increment_subfield_clk@_value 0037                           _ADCC_Initialize 0C39  
             __end_of_i2c1_driver_sendACK 0A2F                            _PMD_Initialize 0AA4  
          __end_of_do_I2C_DO_ADDRESS_NACK 0EB7               __end_of_i2c1_driver_restart 0A16  
                            ?_returnReset 0079                                 ?_ADC_read 0025  
                  ??_ADCC_StartConversion 0023               __end_of_i2c1_driver_startRX 0A1C  
        __size_of_INT_SetInterruptHandler 0009  TMR2_SetInterruptHandler@InterruptHandler 0023  
TMR1_SetInterruptHandler@InterruptHandler 0023  TMR0_SetInterruptHandler@InterruptHandler 0023  
 INT_SetInterruptHandler@InterruptHandler 0023                   __end_of_TMR1_WriteTimer 0BCA  
                          _selectSubfield 0669                          ??_config_routine 0043  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 0D2D  
                 __end_of__initialization 007A                           ??_i2c_setBuffer 0072  
                        _do_I2C_SEND_STOP 0A50                        __size_of_do_I2C_RX 004A  
                      __size_of_do_I2C_TX 0054                        ?_SYSTEM_Initialize 0070  
                __size_of_mode_select_LED 0020                  __size_of_do_I2C_TX_EMPTY 0033  
                save_recovery_params@aux1 0030                       ___bmul@multiplicand 0023  
                 _rdBlkRegCompleteHandler 0C7C                             _recTempThresh 0000  
                          __pcstackCOMMON 0070                              __pidataBANK0 0AEB  
                     ??_SYSTEM_Initialize 0025                                 ?_TMR0_ISR 0070  
                               ?_TMR1_ISR 0070                                 ?_TMR2_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                             __end_of_cksum 0DC8  
                        _DATAEE_WriteByte 0DC8                        ring_buffer@clock_h 0023  
                      ring_buffer@clock_m 0024                        ring_buffer@clock_s 0025  
                        ?_TMR2_Initialize 0070                              LED_bin@value 0023  
                          ??_INT_CallBack 0078                    __end_of_PMD_Initialize 0AAC  
                   getSubfieldInfo@m_tens 003D               __size_of_EXT_INT_Initialize 000E  
                              ??_ADC_read 0027                    __end_of_selectSubfield 06B7  
             ADCC_StartConversion@channel 0023                            setCallBack@idx 0074  
                                 ??_cksum 0025                          ?_TMR0_StartTimer 0070  
                  _do_I2C_DO_NACK_RESTART 0A5F                 __end_of_SYSTEM_Initialize 0D49  
                          _mssp1_clearIRQ 0A22                                __pbssBANK0 004B  
                              __pbssBANK1 00A0            __size_of_rd2RegCompleteHandler 0011  
                                 ?_ISR_3s 0070             __end_of_rd2RegCompleteHandler 0C0E  
                      read_ring@nreg_init 0028               increment_subfield_clk@limit 0036  
                  ??_save_recovery_params 002E            __size_of_wr2RegCompleteHandler 0011  
           __end_of_wr2RegCompleteHandler 0BDB                     _rd1RegCompleteHandler 0BEC  
                  ?_i2c1_driver_getRXData 0070                        __size_of_read_ring 003F  
                   _wr1RegCompleteHandler 0BDB              __size_of_i2c_busCollisionISR 0004  
                              __pmaintext 007E                             ??_do_I2C_IDLE 0070  
                    __size_of_setCallBack 0026                             ??_do_I2C_RCEN 0070  
                                 ?___bmul 0023          __end_of_TMR0_SetInterruptHandler 0AD9  
                 __size_of_TMR0_StopTimer 0003                                   ?___wmul 0023  
                              ??_TMR0_ISR 0075                                ??_TMR1_ISR 0072  
                         __CFG_PPS1WAY$ON 0000                                ??_TMR2_ISR 0071  
                 __end_of_ADCC_Initialize 0C4F                __end_of_PWM6_LoadDutyValue 0CDE  
                         ??_do_I2C_DO_ACK 0070                                __pintentry 0004  
                    _limitTempThreshUnits 0000                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                                   _ADPREVH 008F  
                                 _ADPREVL 008E                          ?_PWM6_Initialize 0070  
                     i2c_setBuffer@buffer 0073                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                           ?_PMD_Initialize 0070  
          ?_i2c1_driver_clearBusCollision 0070                          ?_DATAEE_ReadByte 0023  
                       ?_i2c1_driver_open 0070                         __end_of_do_I2C_RX 079B  
                       __end_of_do_I2C_TX 0669                         ?_i2c1_driver_stop 0070  
           i1PWM6_LoadDutyValue@dutyValue 0070                      __size_of_recoverData 0098  
                                 _LED_bin 0CF8                          _handler_clock_ms 0B1F  
                      ??_i2c1_driver_open 0023                                   _INT_ISR 0A64  
                      ??_i2c1_driver_stop 0070                                   _OSCCON1 088D  
                                 _OSCCON3 088F                             ?_mssp1_setIRQ 0070  
                    i1_PWM6_LoadDutyValue 0C23                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                  selectSubfield@subfield 0041                                   _NVMCON2 081F  
                         ?_selectSubfield 0070                                   _PWM6DCH 038D  
                                 _PWM6DCL 038C                                   _PWM6CON 038E  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                    __end_of_mssp1_clearIRQ 0A25  
                                 _SSP1MSK 018E            __size_of_ADCC_IsConversionDone 0007  
                               ?_mod1_LED 0070                                 ?_mod2_LED 0070  
                               ?_mod3_LED 0070                                 ?_mod4_LED 0070  
           __end_of_ADCC_IsConversionDone 0A84                   ??_do_I2C_SEND_ADR_WRITE 0071  
                      __size_of_push_ring 0047                           _getSubfieldInfo 020A  
                        ?_TMR1_WriteTimer 0070               ??_do_I2C_SEND_RESTART_WRITE 0070  
                      _i2c1_driver_TXData 0A37                      DATAEE_WriteByte@bAdd 0029  
                      _i2c1_driver_i2cISR 00CB                                 ?_mode_LED 0070  
                         __size_of_ISR_3s 0019                                   _i2c_ISR 0EB7  
                         _limitHoursUnits 0D12                 ??_rdBlkRegCompleteHandler 007A  
                          ring_buffer@lum 0027                            ring_buffer@tem 0026  
                      _i2c1_driver_isNACK 0A84                       ?_i2c1_driver_TXData 0070  
              ??_TMR2_SetInterruptHandler 0025                     __end_of_num_subfields 1025  
                    __size_of_ring_buffer 002F                      __CFG_SCANE$available 0000  
               __size_of_checkDebounceSW1 005A                 __size_of_checkDebounceSW2 004D  
                         __size_of___bmul 0016                                   ___awdiv 03FE  
                                 ___awmod 05C1                             ?_representLed 0070  
                         __size_of___wmul 0020                         ??_mode_select_LED 002D  
                       ??_do_I2C_TX_EMPTY 007A                                   _all_LED 045E  
                     ?_i2c1_driver_isNACK 0070                                   __ptext1 0E61  
                                 __ptext2 0EE4                                   __ptext3 02DF  
                                 __ptext4 07E4                                   __ptext5 0BA9  
                                 __ptext6 0DA8                                   __ptext7 0F7A  
                                 __ptext8 0C4F                                   __ptext9 0B8A  
                     __end_of_do_I2C_IDLE 0A41                       __end_of_do_I2C_RCEN 0A7D  
                                 _sw1_EXT 0DEC            ??_TMR1_DefaultInterruptHandler 0070  
                                 _cksum_w 0BA9                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 0AC7                                   _last_ms 005B  
                               _T2CONbits 028E               __end_of_do_I2C_SEND_RESTART 0A50  
                          ??_mssp1_setIRQ 0070                          ___awmod@dividend 0025  
                              _duty_cycle 00BD                               reset_recv@i 002D  
       __size_of_TMR1_SetInterruptHandler 0009                     ?i1_PWM6_LoadDutyValue 0070  
                    ??_i2c1_driver_TXData 0070                         __end_of_read_ring 0FB9  
                ??_PIN_MANAGER_Initialize 0023                 ?_TMR1_SetInterruptHandler 0023  
                               _T2HLTbits 028F                                   _nreg_pt 005F  
                 _INT_SetInterruptHandler 0ABE                                   _lum_bin 0051  
                         ?_mssp1_clearIRQ 0070                                ??_mod1_LED 002D  
                              ??_mod2_LED 002D                                ??_mod3_LED 002D  
                              ??_mod4_LED 002D                                   main@t1m 00E1  
                                 main@t5s 00E0                  _do_I2C_SEND_RESTART_READ 0A41  
              __size_of_SYSTEM_Initialize 001C                                   clrloop0 0A6B  
                              _hours_tens 00C7                      __size_of_returnReset 0002  
                    end_of_initialization 007A                                 _T2RSTbits 0291  
                    ??_i2c1_driver_isNACK 0070                 __size_of_i2c_restartWrite 0002  
                                 init_ram 0A70                                ??_mode_LED 002D  
            __end_of_i2c1_driver_sendNACK 0A33                    ?_rd1RegCompleteHandler 0079  
                                 initloop 0A71                      __end_of_INT_CallBack 0B44  
                  ?_wr1RegCompleteHandler 0079              __end_of_i2c1_driver_resetBus 0A0C  
                              _reset_recv 07E4                                _lum_thresh 0065  
                           push_ring@nreg 002D                          mode_LED@subfield 002F  
                          ??_representLed 002D                 _do_I2C_SEND_RESTART_WRITE 0A46  
                        ?_ADCC_Initialize 0070                         __end_of_push_ring 1000  
                   __CFG_WDTCPS$WDTCPS_14 0000                                _returnStop 0A0E  
                _TMR0_SetInterruptHandler 0AD0                                 _PORTBbits 000D  
                               _PORTCbits 000E           __end_of_rdBlkRegCompleteHandler 0C94  
                __end_of_do_I2C_SEND_STOP 0A55                      __CFG_WDTCCS$HFINTOSC 0000  
                 __end_of_getSubfieldInfo 02DF                __end_ofi1_checkDebounceSW1 056D  
          increment_subfield_clk@init_val 0032                                 _TRISCbits 0013  
    __size_of_i2c_setDataCompleteCallback 000D                   __end_of_limitHoursUnits 0D2D  
                             returnStop@p 0079                          __CFG_FEXTOSC$OFF 0000  
                       __size_of_ADC_read 001A                  __end_of_DATAEE_WriteByte 0DEC  
            i2c_setDataCompleteCallback@p 0077                            __end_of_ISR_3s 0CC5  
           __size_of_do_I2C_SEND_ADR_READ 0009                            _TMR0_StopTimer 0A10  
                             _do_I2C_IDLE 0A3C                               _do_I2C_RCEN 0A76  
    __end_of_TMR2_DefaultInterruptHandler 0A0B     __size_of_TMR2_DefaultInterruptHandler 0001  
            _TMR2_DefaultInterruptHandler 0A0A                            __end_of___bmul 0C65  
                          __end_of___wmul 0DA8                         __size_of_TMR0_ISR 000F  
                       __size_of_TMR1_ISR 0017                         __size_of_TMR2_ISR 000F  
                  ?_OSCILLATOR_Initialize 0070         __size_of_ADCC_GetConversionResult 0009  
               ??_INT_SetInterruptHandler 0025              __size_of_do_I2C_DO_NACK_STOP 0005  
               ?_ADCC_GetConversionResult 0023                    ??i1_PWM6_LoadDutyValue 0072  
                 ?_do_I2C_DO_NACK_RESTART 0070                       start_initialization 005D  
                  getSubfieldInfo@h_units 003C                       _i2c_busCollisionISR 0A33  
                __size_of_TMR0_Initialize 0015           __size_of_PIN_MANAGER_Initialize 0049  
                  getSubfieldInfo@m_units 003E             __size_of_ADCC_StartConversion 0008  
                            setCallBack@p 0072              __size_of_i2c1_driver_sendACK 0004  
                 i2c_setBuffer@bufferSize 0070                   ??_i2c1_driver_getRXData 0070  
                  rd1RegCompleteHandler@p 0079                                  ??_ISR_3s 0074  
            __size_of_i2c1_driver_restart 0003              __size_of_i2c1_driver_startRX 0003  
                     DATAEE_ReadByte@bAdd 0023                     __end_of_i2c_setBuffer 0BA9  
            ?_INT_DefaultInterruptHandler 0070                    __end_of_TMR0_StopTimer 0A13  
                __end_of_handler_clock_ms 0B2B                      ?_i2c_busCollisionISR 0070  
                        __CFG_LPBOREN$OFF 0000                               ?_reset_recv 0070  
                    __end_of_mssp1_setIRQ 0A22                  __size_of_TMR1_Initialize 001F  
                                ??___bmul 0024                          ??_PMD_Initialize 0023  
                        _checkDebounceSW1 04B9                          _checkDebounceSW2 0704  
                                ??___wmul 0027                    wr1RegCompleteHandler@p 0079  
                           ?_do_I2C_RESET 0070                               __pdataBANK0 0061  
              __end_of_EXT_INT_Initialize 0B6C             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0079                          ??_selectSubfield 003F  
          __end_of_do_I2C_DO_NACK_RESTART 0A64                                read_ring@i 002D  
                    _i2c1_driver_sendNACK 0A2F                         read_ring@absindex 002F  
                            _recLumThresh 0000                          ?_getSubfieldInfo 0070  
                                ?_LED_bin 0023                               __pbssCOMMON 007D  
                               ___latbits 0002                      _i2c1_driver_resetBus 0A0B  
                                ?_INT_ISR 0070                   save_recovery_params@aux 002F  
                           __pcstackBANK0 0020                             __pcstackBANK1 00DE  
                      _PWM6_LoadDutyValue 0CC5                  __size_of_TMR2_Initialize 0018  
                               _do_I2C_RX 0751                                 _do_I2C_TX 0615  
                ??_increment_subfield_clk 0034                     __size_of_INT_CallBack 000D  
                        ?_limitHoursUnits 0070                      __end_of_representLed 0704  
          __size_of_do_I2C_SEND_ADR_WRITE 0008                         __size_of_mod1_LED 000B  
                       __size_of_mod2_LED 000A             __end_of_do_I2C_SEND_ADR_WRITE 0A9C  
                       __size_of_mod3_LED 000B                         __size_of_mod4_LED 000B  
                     ?_PWM6_LoadDutyValue 0029                          _i2c_restartWrite 0A0C  
               __size_of_i2c1_driver_open 000C                           _mode_select_LED 0D68  
               __size_of_i2c1_driver_stop 0003                                  ?_i2c_ISR 0070  
                         _do_I2C_TX_EMPTY 0F13                     _TMR0_InterruptHandler 00DA  
                           ??_setCallBack 0073                                 __pnvBANK1 00D4  
                   _rd2RegCompleteHandler 0BFD                  __size_of_TMR0_StartTimer 0003  
                         ?_TMR0_StopTimer 0070                     ??_i2c_busCollisionISR 0070  
                       __size_of_mode_LED 002A                     __end_of_fsmStateTable 1020  
           __size_of_save_recovery_params 002A                                 _main$2460 00E2  
                  _PIN_MANAGER_Initialize 079B                     _wr2RegCompleteHandler 0BCA  
           ??_INT_DefaultInterruptHandler 0070                   __size_of_config_routine 0087  
        __end_of_TMR1_SetInterruptHandler 0AE2                         read_ring@subindex 002A  
                          ??_do_I2C_RESET 0070                                  ?___awdiv 0023  
                               __ptext100 0BB9                                 __ptext101 0B6C  
                               __ptext110 0C23                                 __ptext102 0CAC  
                               __ptext103 0A08                                 __ptext104 0A10  
                               __ptext105 0A64                                 __ptext106 0B37  
                               __ptext107 0A07                                 __ptext108 0DEC  
                               __ptext109 0513                                  ?___awmod 0023  
                ??_do_I2C_DO_ADDRESS_NACK 007A               _i2c1_driver_busCollisionISR 00CD  
                                ?_all_LED 0070                     __end_of_do_I2C_DO_ACK 0A5A  
                    ??_PWM6_LoadDutyValue 002B                             ??_recoverData 002F  
            ??_INTERRUPT_InterruptManager 007D                ??_do_I2C_SEND_RESTART_READ 0070  
                   ?_i2c1_driver_sendNACK 0070                                  ?_sw1_EXT 0070  
                                ?_cksum_w 0070                              _INT_CallBack 0B37  
                        ??_mssp1_clearIRQ 0070                     ?_i2c1_driver_resetBus 0070  
      __size_of_do_I2C_SEND_RESTART_WRITE 0005                                  _ADC_read 0CDE  
                              ?_do_I2C_RX 0070                                ?_do_I2C_TX 0070  
                __size_of_PWM6_Initialize 000D                       __size_of_reset_recv 001C  
                          __size_of_cksum 0020                                  _T2CLKCON 0290  
                __size_of_DATAEE_ReadByte 000F                   ??_rd1RegCompleteHandler 007A  
                               _read_ring 0F7A                                 _min_units 00C1  
                 ??_wr1RegCompleteHandler 007A                     _ADCC_IsConversionDone 0A7D  
                       ??_TMR0_Initialize 0025                            ___wmul@product 0027  
                                _LATAbits 0016                       __size_of_returnStop 0002  
                               clear_ram0 0A6A                                  _PIE0bits 0716  
                       _handler_clock_hms 0F46                                 _nreg_init 0060  
                           ??_ring_buffer 0028                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0057                             _lum_threshold 004F  
              ??_TMR0_SetInterruptHandler 0025                                  _PIR0bits 070C  
                             _config_mode 0056                                  _PIR3bits 070F  
                               _ring_byte 00CF                                  _PIR4bits 0710  
                      ?_handler_clock_hms 0070                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR0_ISR 0B6C  
                                _TMR1_ISR 0C65                                  _TMR2_ISR 0B7B  
            ?_i2c_setDataCompleteCallback 0075                                  _SSP1STAT 018F  
                     __end_of_setCallBack 0E37                          push_ring@nreg_pt 0033  
                     ??_handler_clock_hms 0070                         ??_TMR1_Initialize 0025  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                       ___wmul@multiplier 0023                                 _push_ring 0FB9  
                       ?_do_I2C_SEND_STOP 0070                                  _WPUBbits 0F44  
    __size_of_INT_DefaultInterruptHandler 0001            ??_TMR2_DefaultInterruptHandler 0070  
       __size_of_TMR2_SetInterruptHandler 0009                             ??_returnReset 007A  
               ?_TMR2_SetInterruptHandler 0023                        ??_do_I2C_SEND_STOP 0070  
             __size_of_i2c1_driver_TXData 0005                          __size_of_LED_bin 001A  
                   DATAEE_WriteByte@bData 002B                       __end_of_recoverData 0377  
       __end_of_do_I2C_SEND_RESTART_WRITE 0A4B                          __size_of_INT_ISR 0006  
                 __end_of_mode_select_LED 0D88                   __end_of_do_I2C_TX_EMPTY 0F46  
         __size_of_increment_subfield_clk 0054                                ?_read_ring 0027  
                ?_rdBlkRegCompleteHandler 0079                         ?_DATAEE_WriteByte 0029  
            __size_of_do_I2C_SEND_RESTART 0005               __size_of_i2c1_driver_isNACK 0008  
               __end_of_handler_clock_hms 0F7A                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 0025                    ?_rd2RegCompleteHandler 0079  
                      ??_DATAEE_WriteByte 002C                        i1_checkDebounceSW1 0513  
                     _do_I2C_DO_NACK_STOP 0A5A                          __size_of_i2c_ISR 002D  
                  ?_wr2RegCompleteHandler 0079                                _ADSTATbits 0097  
        __end_of_ADCC_GetConversionResult 0ABE                              ?_do_I2C_IDLE 0070  
                     ?i1_checkDebounceSW1 0070                              ?_do_I2C_RCEN 0070  
                              push_ring@i 0032                   ??_OSCILLATOR_Initialize 0023  
                       ??_TMR0_StartTimer 0023                       __end_of_ring_buffer 0F13  
                     _i2c1_driver_sendACK 0A2B                          __size_of___awdiv 0060  
                        __size_of___awmod 0054           __size_of_do_I2C_DO_ADDRESS_NACK 002C  
                     i2c1_driver_TXData@d 0070                    ??_i2c1_driver_sendNACK 0070  
           ??_i2c_setDataCompleteCallback 0078                          __size_of_all_LED 005B  
                     _i2c1_driver_restart 0A13                  _TMR1_SetInterruptHandler 0AD9  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 0A19  
            __end_of_do_I2C_SEND_ADR_READ 0AB5                                ?_push_ring 002D  
                  ??_i2c1_driver_resetBus 0070                     _TMR1_InterruptHandler 00D6  
                        __size_of_sw1_EXT 0025                          __size_of_cksum_w 0010  
                   __size_of_representLed 004D                                _T0CON0bits 001E  
                __size_of_ADCC_Initialize 0016                          read_ring@nreg_pt 002E  
                            _mssp1_setIRQ 0A1F                               ??_do_I2C_RX 007A  
                             ??_do_I2C_TX 007A                      ??i1_checkDebounceSW1 0070  
                                __ptext10 0FB9                                  __ptext11 0DC8  
                                __ptext20 020A                                  __ptext12 0B2B  
                                __ptext21 0D12                                  __ptext13 0377  
                              _T1GCONbits 020F                                  __ptext30 0D68  
                                __ptext22 03FE                                  __ptext14 0669  
                                __ptext31 0CC5                                  __ptext23 056D  
                                __ptext15 0E37                                  __ptext40 0B51  
                                __ptext32 0A28                                  __ptext24 06B7  
                                __ptext16 0B14                                  __ptext41 0AA4  
                                __ptext33 0D2D                                  __ptext25 0D88  
                                __ptext17 0B09                                  __ptext50 0A7D  
                                __ptext42 079B                                  __ptext34 0C94  
                                __ptext26 0704                                  __ptext18 0AF4  
                                __ptext51 0AB5                                  __ptext43 0AC7  
                                __ptext35 0AE2                                  __ptext27 04B9  
                                __ptext19 0AFE                                  __ptext60 0A5F  
                                __ptext44 0B5E                                  __ptext36 0D49  
                                __ptext28 05C1                                  __ptext61 0A5A  
                                __ptext53 0A33                                  __ptext45 0ABE  
                                __ptext37 0AD9                                  __ptext29 045E  
                                __ptext70 0A3C                                  __ptext62 0A55  
                                __ptext54 0A25                                  __ptext46 0C39  
                                __ptext38 0C0E                                  __ptext71 0A8C  
                                __ptext63 0A76                                  __ptext55 0EB7  
                                __ptext47 0CF8                                  __ptext39 0AD0  
                                __ptext80 0C7C                                  __ptext72 0F13  
                                __ptext64 0A94                                  __ptext56 0A22  
                                __ptext48 0CDE                                  __ptext81 0BFD  
                                __ptext73 0A1F                                  __ptext65 0AAC  
                                __ptext57 0751                                  __ptext49 0A9C  
                                __ptext90 0B99                                  __ptext82 0BEC  
                                __ptext74 0A84                                  __ptext66 0A50  
                                __ptext58 0615                                  __ptext91 0A16  
                                __ptext83 0BDB                                  __ptext75 0A37  
                                __ptext67 0A4B                                  __ptext59 0E8B  
                                __ptext92 0A13                                  __ptext84 0002  
                                __ptext76 0A1C                                  __ptext68 0A46  
                                __ptext93 0A2B                                  __ptext85 0A0E  
                                __ptext77 0A2F                                  __ptext69 0A41  
                                __ptext94 0B7B                                  __ptext86 0A0C  
                                __ptext78 0A0B                                  __ptext95 0A0A  
                                __ptext87 0BCA                                  __ptext79 0A19  
                                __ptext96 0B1F                                  __ptext88 0B44  
                                __ptext97 0C65                                  __ptext89 0E11  
                                __ptext98 0A09                                  __ptext99 0F46  
                                _mod1_LED 0AFE                              _SSP1CON1bits 0190  
                                _mod2_LED 0AF4                  __end_of_checkDebounceSW1 0513  
                            _SSP1CON2bits 0191                  __end_of_checkDebounceSW2 0751  
                                _mod3_LED 0B09                                  _mod4_LED 0B14  
                  ?_ADCC_IsConversionDone 0070                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 0A94               DATAEE_WriteByte@GIEBitValue 002C  
                                _recAlarm 0000                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 0004                                  _last_ms2 005A  
                        _i2c1_driver_open 0B2B                                  _mode_LED 0E37  
                       ??_PWM6_Initialize 0023                          _i2c1_driver_stop 0A16  
                           __size_of_main 018C                      ?_i2c1_driver_startRX 0070  
          __size_of_i2c1_driver_getRXData 0003                                  _min_tens 00C3  
           __end_of_i2c1_driver_getRXData 0A1F      __end_of_TMR0_DefaultInterruptHandler 0A09  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 0A08  
                       ??_DATAEE_ReadByte 0025                      __CFG_WDTCWS$WDTCWS_7 0000  
                             _setCallBack 0E11                              ??_reset_recv 002D  
                       ?_handler_clock_ms 0070                                  _set_mode 0057  
                          _config_routine 0377                             _num_subfields 1020  
                  _increment_subfield_clk 056D              __end_of_ADCC_StartConversion 0AA4  
                                int$flags 007E                        ??_handler_clock_ms 0070  
                            _representLed 06B7        __end_of_INTERRUPT_InterruptManager 005B  
              _INTERRUPT_InterruptManager 0004                       _mode_field_subfield 0061  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                                cksum@res 0026          __end_of_do_I2C_SEND_RESTART_READ 0A46  
                            ??_returnStop 007A                               _hours_units 00C5  
                __end_of_i2c_restartWrite 0A0E                     ??_do_I2C_DO_NACK_STOP 0070  
                             _recoverData 02DF                                _INTCONbits 000B  
                             _NVMCON1bits 081E             __size_ofi1_PWM6_LoadDutyValue 0016  
                    _INT_InterruptHandler 00DC                          ?_mode_select_LED 0070  
                      __end_of_reset_recv 0800                     ??_i2c1_driver_sendACK 0070  
                      _EXT_INT_Initialize 0B5E                          ?_do_I2C_TX_EMPTY 0070  
                             ??_read_ring 002B                    _do_I2C_DO_ADDRESS_NACK 0E8B  
                                intlevel1 0000                          ??_TMR0_StopTimer 0070  
                   ??_i2c1_driver_restart 0070                __size_of_handler_clock_hms 0034  
                  rd2RegCompleteHandler@p 0079                     ??_i2c1_driver_startRX 0070  
                 ?_PIN_MANAGER_Initialize 0070                         i2c_restartWrite@p 0079  
                       __CFG_CLKOUTEN$OFF 0000                       ?_EXT_INT_Initialize 0070  
                      __end_of_returnStop 0A10                    __end_of_config_routine 03FE  
                             _ring_buffer 0EE4             ?_TMR0_DefaultInterruptHandler 0070  
                  wr2RegCompleteHandler@p 0079                  ?_INT_SetInterruptHandler 0023  
                _ADCC_GetConversionResult 0AB5                               _temp_thresh 0066  
                           __pstringtext1 1000                             __pstringtext2 1020  
                    ??_EXT_INT_Initialize 0025                            read_ring@index 0029  
                             ??_push_ring 0030                                _SSP1DATPPS 0EC6  
            __end_of_save_recovery_params 0E8B                                _SSP1CLKPPS 0EC5  
                         _TMR0_Initialize 0C0E                    __size_of_i2c_setBuffer 0010  
                             _returnReset 0002               PWM6_LoadDutyValue@dutyValue 0029  
                           read_ring@nreg 0027            __end_of_PIN_MANAGER_Initialize 07E4  
                       ??_ADCC_Initialize 0023               __end_of_i2c_busCollisionISR 0A37  
                __size_of_getSubfieldInfo 00D5            __size_of_rd1RegCompleteHandler 0011  
           __end_of_rd1RegCompleteHandler 0BFD                        push_ring@nreg_init 002E  
          __size_of_wr1RegCompleteHandler 0011             __end_of_wr1RegCompleteHandler 0BEC  
                   _TMR2_InterruptHandler 00D4                     _do_I2C_SEND_ADR_WRITE 0A94  
                      push_ring@ring_byte 002F                  __size_of_limitHoursUnits 001B  
                    _do_I2C_SEND_ADR_READ 0AAC                           ?_config_routine 0070  
                         _TMR1_Initialize 0D49  
