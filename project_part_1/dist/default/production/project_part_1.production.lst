

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 29 12:56:22 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	intentry,global,class=CODE,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,delta=2
    91                           	psect	text73,local,class=CODE,merge=1,inline,delta=2
    92                           	psect	text74,local,class=CODE,merge=1,inline,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,inline,delta=2
    94                           	psect	text76,local,class=CODE,merge=1,inline,delta=2
    95                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
    96                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text80,local,class=CODE,merge=1,delta=2
    99                           	psect	text81,local,class=CODE,merge=1,delta=2
   100                           	psect	text82,local,class=CODE,merge=1,delta=2
   101                           	psect	text83,local,class=CODE,merge=1,delta=2
   102                           	psect	text84,local,class=CODE,merge=1,delta=2
   103                           	psect	text85,local,class=CODE,merge=1,delta=2
   104                           	psect	text86,local,class=CODE,merge=1,delta=2
   105                           	psect	text87,local,class=CODE,merge=1,delta=2
   106                           	psect	text88,local,class=CODE,merge=1,delta=2
   107                           	psect	text89,local,class=CODE,merge=1,delta=2
   108                           	psect	text90,local,class=CODE,merge=1,delta=2
   109                           	psect	text91,local,class=CODE,merge=1,inline,delta=2
   110                           	psect	text92,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text93,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text94,local,class=CODE,merge=1,delta=2
   113                           	psect	text95,local,class=CODE,merge=1,delta=2
   114                           	psect	text96,local,class=CODE,merge=1,delta=2
   115                           	psect	text97,local,class=CODE,merge=1,delta=2
   116                           	psect	text98,local,class=CODE,merge=1,delta=2
   117                           	psect	text99,local,class=CODE,merge=1,delta=2
   118                           	psect	text100,local,class=CODE,merge=1,delta=2
   119                           	psect	text101,local,class=CODE,merge=1,delta=2
   120                           	psect	text102,local,class=CODE,merge=1,delta=2
   121                           	psect	text103,local,class=CODE,merge=1,delta=2
   122                           	psect	text104,local,class=CODE,merge=1,delta=2
   123                           	psect	text105,local,class=CODE,merge=1,delta=2
   124                           	psect	text106,local,class=CODE,merge=1,delta=2
   125                           	psect	text107,local,class=CODE,merge=1,delta=2
   126                           	psect	text108,local,class=CODE,merge=1,delta=2
   127                           	psect	text109,local,class=CODE,merge=1,delta=2
   128                           	psect	text110,local,class=CODE,merge=1,delta=2
   129                           	dabs	1,0x7E,2
   130  0000                     
   131                           ; Version 2.10
   132                           ; Generated 31/07/2019 GMT
   133                           ; 
   134                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   135                           ; All rights reserved.
   136                           ; 
   137                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   138                           ; 
   139                           ; Redistribution and use in source and binary forms, with or without modification, are
   140                           ; permitted provided that the following conditions are met:
   141                           ; 
   142                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   143                           ;        conditions and the following disclaimer.
   144                           ; 
   145                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   146                           ;        of conditions and the following disclaimer in the documentation and/or other
   147                           ;        materials provided with the distribution.
   148                           ; 
   149                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   150                           ;        software without specific prior written permission.
   151                           ; 
   152                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   153                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   154                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   155                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   156                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   157                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   158                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   159                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   160                           ; 
   161                           ; 
   162                           ; Code-generator required, PIC16F18875 Definitions
   163                           ; 
   164                           ; SFR Addresses
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  0007                     	;# 
   173  0008                     	;# 
   174  0009                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  000D                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001C                     	;# 
   193  001C                     	;# 
   194  001D                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  008C                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0090                     	;# 
   206  0091                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0110                     	;# 
   225  0110                     	;# 
   226  0111                     	;# 
   227  0112                     	;# 
   228  0112                     	;# 
   229  0113                     	;# 
   230  0114                     	;# 
   231  0114                     	;# 
   232  0115                     	;# 
   233  0116                     	;# 
   234  0116                     	;# 
   235  0117                     	;# 
   236  0119                     	;# 
   237  0119                     	;# 
   238  0119                     	;# 
   239  011A                     	;# 
   240  011A                     	;# 
   241  011A                     	;# 
   242  011B                     	;# 
   243  011B                     	;# 
   244  011B                     	;# 
   245  011B                     	;# 
   246  011B                     	;# 
   247  011C                     	;# 
   248  011C                     	;# 
   249  011C                     	;# 
   250  011D                     	;# 
   251  011D                     	;# 
   252  011D                     	;# 
   253  011E                     	;# 
   254  011E                     	;# 
   255  011E                     	;# 
   256  011F                     	;# 
   257  011F                     	;# 
   258  011F                     	;# 
   259  011F                     	;# 
   260  011F                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  018E                     	;# 
   264  018F                     	;# 
   265  0190                     	;# 
   266  0191                     	;# 
   267  0192                     	;# 
   268  0196                     	;# 
   269  0197                     	;# 
   270  0198                     	;# 
   271  0199                     	;# 
   272  019A                     	;# 
   273  019B                     	;# 
   274  019C                     	;# 
   275  020C                     	;# 
   276  020C                     	;# 
   277  020D                     	;# 
   278  020E                     	;# 
   279  020F                     	;# 
   280  020F                     	;# 
   281  0210                     	;# 
   282  0210                     	;# 
   283  0211                     	;# 
   284  0211                     	;# 
   285  0212                     	;# 
   286  0212                     	;# 
   287  0213                     	;# 
   288  0214                     	;# 
   289  0215                     	;# 
   290  0215                     	;# 
   291  0216                     	;# 
   292  0216                     	;# 
   293  0217                     	;# 
   294  0217                     	;# 
   295  0218                     	;# 
   296  0218                     	;# 
   297  0219                     	;# 
   298  021A                     	;# 
   299  021B                     	;# 
   300  021B                     	;# 
   301  021C                     	;# 
   302  021C                     	;# 
   303  021D                     	;# 
   304  021D                     	;# 
   305  021E                     	;# 
   306  021F                     	;# 
   307  028C                     	;# 
   308  028C                     	;# 
   309  028D                     	;# 
   310  028D                     	;# 
   311  028E                     	;# 
   312  028F                     	;# 
   313  0290                     	;# 
   314  0290                     	;# 
   315  0291                     	;# 
   316  0292                     	;# 
   317  0292                     	;# 
   318  0293                     	;# 
   319  0293                     	;# 
   320  0294                     	;# 
   321  0295                     	;# 
   322  0296                     	;# 
   323  0296                     	;# 
   324  0297                     	;# 
   325  0298                     	;# 
   326  0298                     	;# 
   327  0299                     	;# 
   328  0299                     	;# 
   329  029A                     	;# 
   330  029B                     	;# 
   331  029C                     	;# 
   332  029C                     	;# 
   333  029D                     	;# 
   334  030C                     	;# 
   335  030C                     	;# 
   336  030D                     	;# 
   337  030E                     	;# 
   338  030F                     	;# 
   339  0310                     	;# 
   340  0310                     	;# 
   341  0311                     	;# 
   342  0312                     	;# 
   343  0313                     	;# 
   344  0314                     	;# 
   345  0314                     	;# 
   346  0315                     	;# 
   347  0316                     	;# 
   348  0317                     	;# 
   349  0318                     	;# 
   350  0318                     	;# 
   351  0319                     	;# 
   352  031A                     	;# 
   353  031B                     	;# 
   354  031C                     	;# 
   355  031C                     	;# 
   356  031D                     	;# 
   357  031E                     	;# 
   358  031F                     	;# 
   359  038C                     	;# 
   360  038C                     	;# 
   361  038D                     	;# 
   362  038E                     	;# 
   363  0390                     	;# 
   364  0390                     	;# 
   365  0391                     	;# 
   366  0392                     	;# 
   367  040C                     	;# 
   368  040D                     	;# 
   369  040E                     	;# 
   370  040F                     	;# 
   371  0410                     	;# 
   372  0411                     	;# 
   373  0416                     	;# 
   374  0416                     	;# 
   375  0417                     	;# 
   376  0418                     	;# 
   377  0418                     	;# 
   378  0419                     	;# 
   379  041A                     	;# 
   380  041A                     	;# 
   381  041B                     	;# 
   382  041C                     	;# 
   383  041C                     	;# 
   384  041D                     	;# 
   385  041E                     	;# 
   386  041F                     	;# 
   387  048C                     	;# 
   388  048C                     	;# 
   389  048D                     	;# 
   390  048E                     	;# 
   391  048F                     	;# 
   392  048F                     	;# 
   393  0490                     	;# 
   394  0491                     	;# 
   395  0492                     	;# 
   396  0492                     	;# 
   397  0493                     	;# 
   398  0494                     	;# 
   399  0495                     	;# 
   400  0495                     	;# 
   401  0496                     	;# 
   402  0497                     	;# 
   403  0498                     	;# 
   404  0499                     	;# 
   405  049A                     	;# 
   406  049B                     	;# 
   407  049C                     	;# 
   408  049D                     	;# 
   409  050C                     	;# 
   410  050C                     	;# 
   411  050D                     	;# 
   412  050E                     	;# 
   413  050F                     	;# 
   414  050F                     	;# 
   415  0510                     	;# 
   416  0511                     	;# 
   417  0512                     	;# 
   418  0512                     	;# 
   419  0513                     	;# 
   420  0514                     	;# 
   421  0515                     	;# 
   422  0515                     	;# 
   423  0516                     	;# 
   424  0517                     	;# 
   425  0518                     	;# 
   426  0519                     	;# 
   427  051A                     	;# 
   428  051B                     	;# 
   429  051C                     	;# 
   430  051D                     	;# 
   431  058C                     	;# 
   432  058C                     	;# 
   433  058D                     	;# 
   434  058E                     	;# 
   435  058F                     	;# 
   436  058F                     	;# 
   437  0590                     	;# 
   438  0591                     	;# 
   439  0592                     	;# 
   440  0593                     	;# 
   441  060C                     	;# 
   442  060D                     	;# 
   443  060E                     	;# 
   444  060F                     	;# 
   445  0610                     	;# 
   446  0611                     	;# 
   447  0612                     	;# 
   448  0613                     	;# 
   449  0614                     	;# 
   450  0616                     	;# 
   451  0617                     	;# 
   452  0618                     	;# 
   453  0619                     	;# 
   454  061A                     	;# 
   455  061B                     	;# 
   456  061C                     	;# 
   457  061D                     	;# 
   458  061E                     	;# 
   459  068C                     	;# 
   460  068D                     	;# 
   461  068E                     	;# 
   462  068F                     	;# 
   463  0690                     	;# 
   464  0691                     	;# 
   465  0692                     	;# 
   466  0693                     	;# 
   467  0694                     	;# 
   468  070C                     	;# 
   469  070D                     	;# 
   470  070E                     	;# 
   471  070F                     	;# 
   472  0710                     	;# 
   473  0711                     	;# 
   474  0712                     	;# 
   475  0713                     	;# 
   476  0714                     	;# 
   477  0716                     	;# 
   478  0717                     	;# 
   479  0718                     	;# 
   480  0719                     	;# 
   481  071A                     	;# 
   482  071B                     	;# 
   483  071C                     	;# 
   484  071D                     	;# 
   485  071E                     	;# 
   486  0796                     	;# 
   487  0797                     	;# 
   488  0798                     	;# 
   489  0799                     	;# 
   490  079A                     	;# 
   491  079B                     	;# 
   492  080C                     	;# 
   493  080D                     	;# 
   494  080E                     	;# 
   495  080F                     	;# 
   496  0810                     	;# 
   497  0811                     	;# 
   498  0812                     	;# 
   499  0813                     	;# 
   500  0814                     	;# 
   501  081A                     	;# 
   502  081B                     	;# 
   503  081C                     	;# 
   504  081D                     	;# 
   505  081E                     	;# 
   506  081F                     	;# 
   507  088C                     	;# 
   508  088D                     	;# 
   509  088E                     	;# 
   510  088F                     	;# 
   511  0890                     	;# 
   512  0891                     	;# 
   513  0892                     	;# 
   514  0893                     	;# 
   515  0895                     	;# 
   516  0896                     	;# 
   517  0897                     	;# 
   518  0898                     	;# 
   519  0899                     	;# 
   520  089A                     	;# 
   521  089B                     	;# 
   522  090C                     	;# 
   523  090E                     	;# 
   524  090F                     	;# 
   525  091F                     	;# 
   526  091F                     	;# 
   527  098F                     	;# 
   528  098F                     	;# 
   529  0990                     	;# 
   530  0991                     	;# 
   531  0992                     	;# 
   532  0993                     	;# 
   533  0994                     	;# 
   534  0995                     	;# 
   535  0996                     	;# 
   536  0997                     	;# 
   537  0E0F                     	;# 
   538  0E10                     	;# 
   539  0E11                     	;# 
   540  0E12                     	;# 
   541  0E13                     	;# 
   542  0E14                     	;# 
   543  0E15                     	;# 
   544  0E16                     	;# 
   545  0E17                     	;# 
   546  0E18                     	;# 
   547  0E19                     	;# 
   548  0E1A                     	;# 
   549  0E1B                     	;# 
   550  0E1C                     	;# 
   551  0E1D                     	;# 
   552  0E1E                     	;# 
   553  0E1F                     	;# 
   554  0E20                     	;# 
   555  0E21                     	;# 
   556  0E22                     	;# 
   557  0E23                     	;# 
   558  0E24                     	;# 
   559  0E25                     	;# 
   560  0E26                     	;# 
   561  0E27                     	;# 
   562  0E28                     	;# 
   563  0E29                     	;# 
   564  0E2A                     	;# 
   565  0E2B                     	;# 
   566  0E2C                     	;# 
   567  0E2D                     	;# 
   568  0E2E                     	;# 
   569  0E2F                     	;# 
   570  0E30                     	;# 
   571  0E31                     	;# 
   572  0E32                     	;# 
   573  0E33                     	;# 
   574  0E34                     	;# 
   575  0E35                     	;# 
   576  0E36                     	;# 
   577  0E37                     	;# 
   578  0E8F                     	;# 
   579  0E90                     	;# 
   580  0E91                     	;# 
   581  0E92                     	;# 
   582  0E93                     	;# 
   583  0E94                     	;# 
   584  0E95                     	;# 
   585  0E96                     	;# 
   586  0E97                     	;# 
   587  0E9C                     	;# 
   588  0E9D                     	;# 
   589  0E9E                     	;# 
   590  0EA1                     	;# 
   591  0EA2                     	;# 
   592  0EA3                     	;# 
   593  0EA4                     	;# 
   594  0EA5                     	;# 
   595  0EA9                     	;# 
   596  0EAA                     	;# 
   597  0EAB                     	;# 
   598  0EAC                     	;# 
   599  0EB1                     	;# 
   600  0EB2                     	;# 
   601  0EB3                     	;# 
   602  0EB8                     	;# 
   603  0EB9                     	;# 
   604  0EBA                     	;# 
   605  0EBB                     	;# 
   606  0EBC                     	;# 
   607  0EBD                     	;# 
   608  0EBE                     	;# 
   609  0EC3                     	;# 
   610  0EC5                     	;# 
   611  0EC6                     	;# 
   612  0EC7                     	;# 
   613  0EC8                     	;# 
   614  0EC9                     	;# 
   615  0ECA                     	;# 
   616  0ECB                     	;# 
   617  0ECC                     	;# 
   618  0F10                     	;# 
   619  0F11                     	;# 
   620  0F12                     	;# 
   621  0F13                     	;# 
   622  0F14                     	;# 
   623  0F15                     	;# 
   624  0F16                     	;# 
   625  0F17                     	;# 
   626  0F18                     	;# 
   627  0F19                     	;# 
   628  0F1A                     	;# 
   629  0F1B                     	;# 
   630  0F1C                     	;# 
   631  0F1D                     	;# 
   632  0F1E                     	;# 
   633  0F1F                     	;# 
   634  0F20                     	;# 
   635  0F21                     	;# 
   636  0F22                     	;# 
   637  0F23                     	;# 
   638  0F24                     	;# 
   639  0F25                     	;# 
   640  0F26                     	;# 
   641  0F27                     	;# 
   642  0F28                     	;# 
   643  0F29                     	;# 
   644  0F2A                     	;# 
   645  0F2B                     	;# 
   646  0F2C                     	;# 
   647  0F2D                     	;# 
   648  0F2E                     	;# 
   649  0F2F                     	;# 
   650  0F30                     	;# 
   651  0F31                     	;# 
   652  0F32                     	;# 
   653  0F38                     	;# 
   654  0F39                     	;# 
   655  0F3A                     	;# 
   656  0F3B                     	;# 
   657  0F3C                     	;# 
   658  0F3D                     	;# 
   659  0F3E                     	;# 
   660  0F3F                     	;# 
   661  0F40                     	;# 
   662  0F41                     	;# 
   663  0F43                     	;# 
   664  0F44                     	;# 
   665  0F45                     	;# 
   666  0F46                     	;# 
   667  0F47                     	;# 
   668  0F48                     	;# 
   669  0F49                     	;# 
   670  0F4A                     	;# 
   671  0F4B                     	;# 
   672  0F4C                     	;# 
   673  0F4E                     	;# 
   674  0F4F                     	;# 
   675  0F50                     	;# 
   676  0F51                     	;# 
   677  0F52                     	;# 
   678  0F53                     	;# 
   679  0F54                     	;# 
   680  0F55                     	;# 
   681  0F56                     	;# 
   682  0F57                     	;# 
   683  0F59                     	;# 
   684  0F5A                     	;# 
   685  0F5B                     	;# 
   686  0F5C                     	;# 
   687  0F5D                     	;# 
   688  0F61                     	;# 
   689  0F62                     	;# 
   690  0F64                     	;# 
   691  0F65                     	;# 
   692  0F66                     	;# 
   693  0F67                     	;# 
   694  0F68                     	;# 
   695  0F69                     	;# 
   696  0F6A                     	;# 
   697  0F6B                     	;# 
   698  0F6C                     	;# 
   699  0F6D                     	;# 
   700  0FE4                     	;# 
   701  0FE5                     	;# 
   702  0FE6                     	;# 
   703  0FE7                     	;# 
   704  0FE8                     	;# 
   705  0FE9                     	;# 
   706  0FEA                     	;# 
   707  0FEB                     	;# 
   708  0FED                     	;# 
   709  0FEE                     	;# 
   710  0FEF                     	;# 
   711  0000                     	;# 
   712  0001                     	;# 
   713  0002                     	;# 
   714  0003                     	;# 
   715  0004                     	;# 
   716  0005                     	;# 
   717  0006                     	;# 
   718  0007                     	;# 
   719  0008                     	;# 
   720  0009                     	;# 
   721  000A                     	;# 
   722  000B                     	;# 
   723  000C                     	;# 
   724  000D                     	;# 
   725  000E                     	;# 
   726  000F                     	;# 
   727  0010                     	;# 
   728  0011                     	;# 
   729  0012                     	;# 
   730  0013                     	;# 
   731  0014                     	;# 
   732  0015                     	;# 
   733  0016                     	;# 
   734  0017                     	;# 
   735  0018                     	;# 
   736  0019                     	;# 
   737  001A                     	;# 
   738  001C                     	;# 
   739  001C                     	;# 
   740  001D                     	;# 
   741  001D                     	;# 
   742  001E                     	;# 
   743  001F                     	;# 
   744  008C                     	;# 
   745  008C                     	;# 
   746  008D                     	;# 
   747  008E                     	;# 
   748  008E                     	;# 
   749  008F                     	;# 
   750  0090                     	;# 
   751  0090                     	;# 
   752  0091                     	;# 
   753  0093                     	;# 
   754  0094                     	;# 
   755  0095                     	;# 
   756  0096                     	;# 
   757  0097                     	;# 
   758  0098                     	;# 
   759  0099                     	;# 
   760  009A                     	;# 
   761  009B                     	;# 
   762  009C                     	;# 
   763  009D                     	;# 
   764  009E                     	;# 
   765  010C                     	;# 
   766  010D                     	;# 
   767  010E                     	;# 
   768  010E                     	;# 
   769  010F                     	;# 
   770  0110                     	;# 
   771  0110                     	;# 
   772  0111                     	;# 
   773  0112                     	;# 
   774  0112                     	;# 
   775  0113                     	;# 
   776  0114                     	;# 
   777  0114                     	;# 
   778  0115                     	;# 
   779  0116                     	;# 
   780  0116                     	;# 
   781  0117                     	;# 
   782  0119                     	;# 
   783  0119                     	;# 
   784  0119                     	;# 
   785  011A                     	;# 
   786  011A                     	;# 
   787  011A                     	;# 
   788  011B                     	;# 
   789  011B                     	;# 
   790  011B                     	;# 
   791  011B                     	;# 
   792  011B                     	;# 
   793  011C                     	;# 
   794  011C                     	;# 
   795  011C                     	;# 
   796  011D                     	;# 
   797  011D                     	;# 
   798  011D                     	;# 
   799  011E                     	;# 
   800  011E                     	;# 
   801  011E                     	;# 
   802  011F                     	;# 
   803  011F                     	;# 
   804  011F                     	;# 
   805  011F                     	;# 
   806  011F                     	;# 
   807  018C                     	;# 
   808  018D                     	;# 
   809  018E                     	;# 
   810  018F                     	;# 
   811  0190                     	;# 
   812  0191                     	;# 
   813  0192                     	;# 
   814  0196                     	;# 
   815  0197                     	;# 
   816  0198                     	;# 
   817  0199                     	;# 
   818  019A                     	;# 
   819  019B                     	;# 
   820  019C                     	;# 
   821  020C                     	;# 
   822  020C                     	;# 
   823  020D                     	;# 
   824  020E                     	;# 
   825  020F                     	;# 
   826  020F                     	;# 
   827  0210                     	;# 
   828  0210                     	;# 
   829  0211                     	;# 
   830  0211                     	;# 
   831  0212                     	;# 
   832  0212                     	;# 
   833  0213                     	;# 
   834  0214                     	;# 
   835  0215                     	;# 
   836  0215                     	;# 
   837  0216                     	;# 
   838  0216                     	;# 
   839  0217                     	;# 
   840  0217                     	;# 
   841  0218                     	;# 
   842  0218                     	;# 
   843  0219                     	;# 
   844  021A                     	;# 
   845  021B                     	;# 
   846  021B                     	;# 
   847  021C                     	;# 
   848  021C                     	;# 
   849  021D                     	;# 
   850  021D                     	;# 
   851  021E                     	;# 
   852  021F                     	;# 
   853  028C                     	;# 
   854  028C                     	;# 
   855  028D                     	;# 
   856  028D                     	;# 
   857  028E                     	;# 
   858  028F                     	;# 
   859  0290                     	;# 
   860  0290                     	;# 
   861  0291                     	;# 
   862  0292                     	;# 
   863  0292                     	;# 
   864  0293                     	;# 
   865  0293                     	;# 
   866  0294                     	;# 
   867  0295                     	;# 
   868  0296                     	;# 
   869  0296                     	;# 
   870  0297                     	;# 
   871  0298                     	;# 
   872  0298                     	;# 
   873  0299                     	;# 
   874  0299                     	;# 
   875  029A                     	;# 
   876  029B                     	;# 
   877  029C                     	;# 
   878  029C                     	;# 
   879  029D                     	;# 
   880  030C                     	;# 
   881  030C                     	;# 
   882  030D                     	;# 
   883  030E                     	;# 
   884  030F                     	;# 
   885  0310                     	;# 
   886  0310                     	;# 
   887  0311                     	;# 
   888  0312                     	;# 
   889  0313                     	;# 
   890  0314                     	;# 
   891  0314                     	;# 
   892  0315                     	;# 
   893  0316                     	;# 
   894  0317                     	;# 
   895  0318                     	;# 
   896  0318                     	;# 
   897  0319                     	;# 
   898  031A                     	;# 
   899  031B                     	;# 
   900  031C                     	;# 
   901  031C                     	;# 
   902  031D                     	;# 
   903  031E                     	;# 
   904  031F                     	;# 
   905  038C                     	;# 
   906  038C                     	;# 
   907  038D                     	;# 
   908  038E                     	;# 
   909  0390                     	;# 
   910  0390                     	;# 
   911  0391                     	;# 
   912  0392                     	;# 
   913  040C                     	;# 
   914  040D                     	;# 
   915  040E                     	;# 
   916  040F                     	;# 
   917  0410                     	;# 
   918  0411                     	;# 
   919  0416                     	;# 
   920  0416                     	;# 
   921  0417                     	;# 
   922  0418                     	;# 
   923  0418                     	;# 
   924  0419                     	;# 
   925  041A                     	;# 
   926  041A                     	;# 
   927  041B                     	;# 
   928  041C                     	;# 
   929  041C                     	;# 
   930  041D                     	;# 
   931  041E                     	;# 
   932  041F                     	;# 
   933  048C                     	;# 
   934  048C                     	;# 
   935  048D                     	;# 
   936  048E                     	;# 
   937  048F                     	;# 
   938  048F                     	;# 
   939  0490                     	;# 
   940  0491                     	;# 
   941  0492                     	;# 
   942  0492                     	;# 
   943  0493                     	;# 
   944  0494                     	;# 
   945  0495                     	;# 
   946  0495                     	;# 
   947  0496                     	;# 
   948  0497                     	;# 
   949  0498                     	;# 
   950  0499                     	;# 
   951  049A                     	;# 
   952  049B                     	;# 
   953  049C                     	;# 
   954  049D                     	;# 
   955  050C                     	;# 
   956  050C                     	;# 
   957  050D                     	;# 
   958  050E                     	;# 
   959  050F                     	;# 
   960  050F                     	;# 
   961  0510                     	;# 
   962  0511                     	;# 
   963  0512                     	;# 
   964  0512                     	;# 
   965  0513                     	;# 
   966  0514                     	;# 
   967  0515                     	;# 
   968  0515                     	;# 
   969  0516                     	;# 
   970  0517                     	;# 
   971  0518                     	;# 
   972  0519                     	;# 
   973  051A                     	;# 
   974  051B                     	;# 
   975  051C                     	;# 
   976  051D                     	;# 
   977  058C                     	;# 
   978  058C                     	;# 
   979  058D                     	;# 
   980  058E                     	;# 
   981  058F                     	;# 
   982  058F                     	;# 
   983  0590                     	;# 
   984  0591                     	;# 
   985  0592                     	;# 
   986  0593                     	;# 
   987  060C                     	;# 
   988  060D                     	;# 
   989  060E                     	;# 
   990  060F                     	;# 
   991  0610                     	;# 
   992  0611                     	;# 
   993  0612                     	;# 
   994  0613                     	;# 
   995  0614                     	;# 
   996  0616                     	;# 
   997  0617                     	;# 
   998  0618                     	;# 
   999  0619                     	;# 
  1000  061A                     	;# 
  1001  061B                     	;# 
  1002  061C                     	;# 
  1003  061D                     	;# 
  1004  061E                     	;# 
  1005  068C                     	;# 
  1006  068D                     	;# 
  1007  068E                     	;# 
  1008  068F                     	;# 
  1009  0690                     	;# 
  1010  0691                     	;# 
  1011  0692                     	;# 
  1012  0693                     	;# 
  1013  0694                     	;# 
  1014  070C                     	;# 
  1015  070D                     	;# 
  1016  070E                     	;# 
  1017  070F                     	;# 
  1018  0710                     	;# 
  1019  0711                     	;# 
  1020  0712                     	;# 
  1021  0713                     	;# 
  1022  0714                     	;# 
  1023  0716                     	;# 
  1024  0717                     	;# 
  1025  0718                     	;# 
  1026  0719                     	;# 
  1027  071A                     	;# 
  1028  071B                     	;# 
  1029  071C                     	;# 
  1030  071D                     	;# 
  1031  071E                     	;# 
  1032  0796                     	;# 
  1033  0797                     	;# 
  1034  0798                     	;# 
  1035  0799                     	;# 
  1036  079A                     	;# 
  1037  079B                     	;# 
  1038  080C                     	;# 
  1039  080D                     	;# 
  1040  080E                     	;# 
  1041  080F                     	;# 
  1042  0810                     	;# 
  1043  0811                     	;# 
  1044  0812                     	;# 
  1045  0813                     	;# 
  1046  0814                     	;# 
  1047  081A                     	;# 
  1048  081B                     	;# 
  1049  081C                     	;# 
  1050  081D                     	;# 
  1051  081E                     	;# 
  1052  081F                     	;# 
  1053  088C                     	;# 
  1054  088D                     	;# 
  1055  088E                     	;# 
  1056  088F                     	;# 
  1057  0890                     	;# 
  1058  0891                     	;# 
  1059  0892                     	;# 
  1060  0893                     	;# 
  1061  0895                     	;# 
  1062  0896                     	;# 
  1063  0897                     	;# 
  1064  0898                     	;# 
  1065  0899                     	;# 
  1066  089A                     	;# 
  1067  089B                     	;# 
  1068  090C                     	;# 
  1069  090E                     	;# 
  1070  090F                     	;# 
  1071  091F                     	;# 
  1072  091F                     	;# 
  1073  098F                     	;# 
  1074  098F                     	;# 
  1075  0990                     	;# 
  1076  0991                     	;# 
  1077  0992                     	;# 
  1078  0993                     	;# 
  1079  0994                     	;# 
  1080  0995                     	;# 
  1081  0996                     	;# 
  1082  0997                     	;# 
  1083  0E0F                     	;# 
  1084  0E10                     	;# 
  1085  0E11                     	;# 
  1086  0E12                     	;# 
  1087  0E13                     	;# 
  1088  0E14                     	;# 
  1089  0E15                     	;# 
  1090  0E16                     	;# 
  1091  0E17                     	;# 
  1092  0E18                     	;# 
  1093  0E19                     	;# 
  1094  0E1A                     	;# 
  1095  0E1B                     	;# 
  1096  0E1C                     	;# 
  1097  0E1D                     	;# 
  1098  0E1E                     	;# 
  1099  0E1F                     	;# 
  1100  0E20                     	;# 
  1101  0E21                     	;# 
  1102  0E22                     	;# 
  1103  0E23                     	;# 
  1104  0E24                     	;# 
  1105  0E25                     	;# 
  1106  0E26                     	;# 
  1107  0E27                     	;# 
  1108  0E28                     	;# 
  1109  0E29                     	;# 
  1110  0E2A                     	;# 
  1111  0E2B                     	;# 
  1112  0E2C                     	;# 
  1113  0E2D                     	;# 
  1114  0E2E                     	;# 
  1115  0E2F                     	;# 
  1116  0E30                     	;# 
  1117  0E31                     	;# 
  1118  0E32                     	;# 
  1119  0E33                     	;# 
  1120  0E34                     	;# 
  1121  0E35                     	;# 
  1122  0E36                     	;# 
  1123  0E37                     	;# 
  1124  0E8F                     	;# 
  1125  0E90                     	;# 
  1126  0E91                     	;# 
  1127  0E92                     	;# 
  1128  0E93                     	;# 
  1129  0E94                     	;# 
  1130  0E95                     	;# 
  1131  0E96                     	;# 
  1132  0E97                     	;# 
  1133  0E9C                     	;# 
  1134  0E9D                     	;# 
  1135  0E9E                     	;# 
  1136  0EA1                     	;# 
  1137  0EA2                     	;# 
  1138  0EA3                     	;# 
  1139  0EA4                     	;# 
  1140  0EA5                     	;# 
  1141  0EA9                     	;# 
  1142  0EAA                     	;# 
  1143  0EAB                     	;# 
  1144  0EAC                     	;# 
  1145  0EB1                     	;# 
  1146  0EB2                     	;# 
  1147  0EB3                     	;# 
  1148  0EB8                     	;# 
  1149  0EB9                     	;# 
  1150  0EBA                     	;# 
  1151  0EBB                     	;# 
  1152  0EBC                     	;# 
  1153  0EBD                     	;# 
  1154  0EBE                     	;# 
  1155  0EC3                     	;# 
  1156  0EC5                     	;# 
  1157  0EC6                     	;# 
  1158  0EC7                     	;# 
  1159  0EC8                     	;# 
  1160  0EC9                     	;# 
  1161  0ECA                     	;# 
  1162  0ECB                     	;# 
  1163  0ECC                     	;# 
  1164  0F10                     	;# 
  1165  0F11                     	;# 
  1166  0F12                     	;# 
  1167  0F13                     	;# 
  1168  0F14                     	;# 
  1169  0F15                     	;# 
  1170  0F16                     	;# 
  1171  0F17                     	;# 
  1172  0F18                     	;# 
  1173  0F19                     	;# 
  1174  0F1A                     	;# 
  1175  0F1B                     	;# 
  1176  0F1C                     	;# 
  1177  0F1D                     	;# 
  1178  0F1E                     	;# 
  1179  0F1F                     	;# 
  1180  0F20                     	;# 
  1181  0F21                     	;# 
  1182  0F22                     	;# 
  1183  0F23                     	;# 
  1184  0F24                     	;# 
  1185  0F25                     	;# 
  1186  0F26                     	;# 
  1187  0F27                     	;# 
  1188  0F28                     	;# 
  1189  0F29                     	;# 
  1190  0F2A                     	;# 
  1191  0F2B                     	;# 
  1192  0F2C                     	;# 
  1193  0F2D                     	;# 
  1194  0F2E                     	;# 
  1195  0F2F                     	;# 
  1196  0F30                     	;# 
  1197  0F31                     	;# 
  1198  0F32                     	;# 
  1199  0F38                     	;# 
  1200  0F39                     	;# 
  1201  0F3A                     	;# 
  1202  0F3B                     	;# 
  1203  0F3C                     	;# 
  1204  0F3D                     	;# 
  1205  0F3E                     	;# 
  1206  0F3F                     	;# 
  1207  0F40                     	;# 
  1208  0F41                     	;# 
  1209  0F43                     	;# 
  1210  0F44                     	;# 
  1211  0F45                     	;# 
  1212  0F46                     	;# 
  1213  0F47                     	;# 
  1214  0F48                     	;# 
  1215  0F49                     	;# 
  1216  0F4A                     	;# 
  1217  0F4B                     	;# 
  1218  0F4C                     	;# 
  1219  0F4E                     	;# 
  1220  0F4F                     	;# 
  1221  0F50                     	;# 
  1222  0F51                     	;# 
  1223  0F52                     	;# 
  1224  0F53                     	;# 
  1225  0F54                     	;# 
  1226  0F55                     	;# 
  1227  0F56                     	;# 
  1228  0F57                     	;# 
  1229  0F59                     	;# 
  1230  0F5A                     	;# 
  1231  0F5B                     	;# 
  1232  0F5C                     	;# 
  1233  0F5D                     	;# 
  1234  0F61                     	;# 
  1235  0F62                     	;# 
  1236  0F64                     	;# 
  1237  0F65                     	;# 
  1238  0F66                     	;# 
  1239  0F67                     	;# 
  1240  0F68                     	;# 
  1241  0F69                     	;# 
  1242  0F6A                     	;# 
  1243  0F6B                     	;# 
  1244  0F6C                     	;# 
  1245  0F6D                     	;# 
  1246  0FE4                     	;# 
  1247  0FE5                     	;# 
  1248  0FE6                     	;# 
  1249  0FE7                     	;# 
  1250  0FE8                     	;# 
  1251  0FE9                     	;# 
  1252  0FEA                     	;# 
  1253  0FEB                     	;# 
  1254  0FED                     	;# 
  1255  0FEE                     	;# 
  1256  0FEF                     	;# 
  1257  0000                     	;# 
  1258  0001                     	;# 
  1259  0002                     	;# 
  1260  0003                     	;# 
  1261  0004                     	;# 
  1262  0005                     	;# 
  1263  0006                     	;# 
  1264  0007                     	;# 
  1265  0008                     	;# 
  1266  0009                     	;# 
  1267  000A                     	;# 
  1268  000B                     	;# 
  1269  000C                     	;# 
  1270  000D                     	;# 
  1271  000E                     	;# 
  1272  000F                     	;# 
  1273  0010                     	;# 
  1274  0011                     	;# 
  1275  0012                     	;# 
  1276  0013                     	;# 
  1277  0014                     	;# 
  1278  0015                     	;# 
  1279  0016                     	;# 
  1280  0017                     	;# 
  1281  0018                     	;# 
  1282  0019                     	;# 
  1283  001A                     	;# 
  1284  001C                     	;# 
  1285  001C                     	;# 
  1286  001D                     	;# 
  1287  001D                     	;# 
  1288  001E                     	;# 
  1289  001F                     	;# 
  1290  008C                     	;# 
  1291  008C                     	;# 
  1292  008D                     	;# 
  1293  008E                     	;# 
  1294  008E                     	;# 
  1295  008F                     	;# 
  1296  0090                     	;# 
  1297  0090                     	;# 
  1298  0091                     	;# 
  1299  0093                     	;# 
  1300  0094                     	;# 
  1301  0095                     	;# 
  1302  0096                     	;# 
  1303  0097                     	;# 
  1304  0098                     	;# 
  1305  0099                     	;# 
  1306  009A                     	;# 
  1307  009B                     	;# 
  1308  009C                     	;# 
  1309  009D                     	;# 
  1310  009E                     	;# 
  1311  010C                     	;# 
  1312  010D                     	;# 
  1313  010E                     	;# 
  1314  010E                     	;# 
  1315  010F                     	;# 
  1316  0110                     	;# 
  1317  0110                     	;# 
  1318  0111                     	;# 
  1319  0112                     	;# 
  1320  0112                     	;# 
  1321  0113                     	;# 
  1322  0114                     	;# 
  1323  0114                     	;# 
  1324  0115                     	;# 
  1325  0116                     	;# 
  1326  0116                     	;# 
  1327  0117                     	;# 
  1328  0119                     	;# 
  1329  0119                     	;# 
  1330  0119                     	;# 
  1331  011A                     	;# 
  1332  011A                     	;# 
  1333  011A                     	;# 
  1334  011B                     	;# 
  1335  011B                     	;# 
  1336  011B                     	;# 
  1337  011B                     	;# 
  1338  011B                     	;# 
  1339  011C                     	;# 
  1340  011C                     	;# 
  1341  011C                     	;# 
  1342  011D                     	;# 
  1343  011D                     	;# 
  1344  011D                     	;# 
  1345  011E                     	;# 
  1346  011E                     	;# 
  1347  011E                     	;# 
  1348  011F                     	;# 
  1349  011F                     	;# 
  1350  011F                     	;# 
  1351  011F                     	;# 
  1352  011F                     	;# 
  1353  018C                     	;# 
  1354  018D                     	;# 
  1355  018E                     	;# 
  1356  018F                     	;# 
  1357  0190                     	;# 
  1358  0191                     	;# 
  1359  0192                     	;# 
  1360  0196                     	;# 
  1361  0197                     	;# 
  1362  0198                     	;# 
  1363  0199                     	;# 
  1364  019A                     	;# 
  1365  019B                     	;# 
  1366  019C                     	;# 
  1367  020C                     	;# 
  1368  020C                     	;# 
  1369  020D                     	;# 
  1370  020E                     	;# 
  1371  020F                     	;# 
  1372  020F                     	;# 
  1373  0210                     	;# 
  1374  0210                     	;# 
  1375  0211                     	;# 
  1376  0211                     	;# 
  1377  0212                     	;# 
  1378  0212                     	;# 
  1379  0213                     	;# 
  1380  0214                     	;# 
  1381  0215                     	;# 
  1382  0215                     	;# 
  1383  0216                     	;# 
  1384  0216                     	;# 
  1385  0217                     	;# 
  1386  0217                     	;# 
  1387  0218                     	;# 
  1388  0218                     	;# 
  1389  0219                     	;# 
  1390  021A                     	;# 
  1391  021B                     	;# 
  1392  021B                     	;# 
  1393  021C                     	;# 
  1394  021C                     	;# 
  1395  021D                     	;# 
  1396  021D                     	;# 
  1397  021E                     	;# 
  1398  021F                     	;# 
  1399  028C                     	;# 
  1400  028C                     	;# 
  1401  028D                     	;# 
  1402  028D                     	;# 
  1403  028E                     	;# 
  1404  028F                     	;# 
  1405  0290                     	;# 
  1406  0290                     	;# 
  1407  0291                     	;# 
  1408  0292                     	;# 
  1409  0292                     	;# 
  1410  0293                     	;# 
  1411  0293                     	;# 
  1412  0294                     	;# 
  1413  0295                     	;# 
  1414  0296                     	;# 
  1415  0296                     	;# 
  1416  0297                     	;# 
  1417  0298                     	;# 
  1418  0298                     	;# 
  1419  0299                     	;# 
  1420  0299                     	;# 
  1421  029A                     	;# 
  1422  029B                     	;# 
  1423  029C                     	;# 
  1424  029C                     	;# 
  1425  029D                     	;# 
  1426  030C                     	;# 
  1427  030C                     	;# 
  1428  030D                     	;# 
  1429  030E                     	;# 
  1430  030F                     	;# 
  1431  0310                     	;# 
  1432  0310                     	;# 
  1433  0311                     	;# 
  1434  0312                     	;# 
  1435  0313                     	;# 
  1436  0314                     	;# 
  1437  0314                     	;# 
  1438  0315                     	;# 
  1439  0316                     	;# 
  1440  0317                     	;# 
  1441  0318                     	;# 
  1442  0318                     	;# 
  1443  0319                     	;# 
  1444  031A                     	;# 
  1445  031B                     	;# 
  1446  031C                     	;# 
  1447  031C                     	;# 
  1448  031D                     	;# 
  1449  031E                     	;# 
  1450  031F                     	;# 
  1451  038C                     	;# 
  1452  038C                     	;# 
  1453  038D                     	;# 
  1454  038E                     	;# 
  1455  0390                     	;# 
  1456  0390                     	;# 
  1457  0391                     	;# 
  1458  0392                     	;# 
  1459  040C                     	;# 
  1460  040D                     	;# 
  1461  040E                     	;# 
  1462  040F                     	;# 
  1463  0410                     	;# 
  1464  0411                     	;# 
  1465  0416                     	;# 
  1466  0416                     	;# 
  1467  0417                     	;# 
  1468  0418                     	;# 
  1469  0418                     	;# 
  1470  0419                     	;# 
  1471  041A                     	;# 
  1472  041A                     	;# 
  1473  041B                     	;# 
  1474  041C                     	;# 
  1475  041C                     	;# 
  1476  041D                     	;# 
  1477  041E                     	;# 
  1478  041F                     	;# 
  1479  048C                     	;# 
  1480  048C                     	;# 
  1481  048D                     	;# 
  1482  048E                     	;# 
  1483  048F                     	;# 
  1484  048F                     	;# 
  1485  0490                     	;# 
  1486  0491                     	;# 
  1487  0492                     	;# 
  1488  0492                     	;# 
  1489  0493                     	;# 
  1490  0494                     	;# 
  1491  0495                     	;# 
  1492  0495                     	;# 
  1493  0496                     	;# 
  1494  0497                     	;# 
  1495  0498                     	;# 
  1496  0499                     	;# 
  1497  049A                     	;# 
  1498  049B                     	;# 
  1499  049C                     	;# 
  1500  049D                     	;# 
  1501  050C                     	;# 
  1502  050C                     	;# 
  1503  050D                     	;# 
  1504  050E                     	;# 
  1505  050F                     	;# 
  1506  050F                     	;# 
  1507  0510                     	;# 
  1508  0511                     	;# 
  1509  0512                     	;# 
  1510  0512                     	;# 
  1511  0513                     	;# 
  1512  0514                     	;# 
  1513  0515                     	;# 
  1514  0515                     	;# 
  1515  0516                     	;# 
  1516  0517                     	;# 
  1517  0518                     	;# 
  1518  0519                     	;# 
  1519  051A                     	;# 
  1520  051B                     	;# 
  1521  051C                     	;# 
  1522  051D                     	;# 
  1523  058C                     	;# 
  1524  058C                     	;# 
  1525  058D                     	;# 
  1526  058E                     	;# 
  1527  058F                     	;# 
  1528  058F                     	;# 
  1529  0590                     	;# 
  1530  0591                     	;# 
  1531  0592                     	;# 
  1532  0593                     	;# 
  1533  060C                     	;# 
  1534  060D                     	;# 
  1535  060E                     	;# 
  1536  060F                     	;# 
  1537  0610                     	;# 
  1538  0611                     	;# 
  1539  0612                     	;# 
  1540  0613                     	;# 
  1541  0614                     	;# 
  1542  0616                     	;# 
  1543  0617                     	;# 
  1544  0618                     	;# 
  1545  0619                     	;# 
  1546  061A                     	;# 
  1547  061B                     	;# 
  1548  061C                     	;# 
  1549  061D                     	;# 
  1550  061E                     	;# 
  1551  068C                     	;# 
  1552  068D                     	;# 
  1553  068E                     	;# 
  1554  068F                     	;# 
  1555  0690                     	;# 
  1556  0691                     	;# 
  1557  0692                     	;# 
  1558  0693                     	;# 
  1559  0694                     	;# 
  1560  070C                     	;# 
  1561  070D                     	;# 
  1562  070E                     	;# 
  1563  070F                     	;# 
  1564  0710                     	;# 
  1565  0711                     	;# 
  1566  0712                     	;# 
  1567  0713                     	;# 
  1568  0714                     	;# 
  1569  0716                     	;# 
  1570  0717                     	;# 
  1571  0718                     	;# 
  1572  0719                     	;# 
  1573  071A                     	;# 
  1574  071B                     	;# 
  1575  071C                     	;# 
  1576  071D                     	;# 
  1577  071E                     	;# 
  1578  0796                     	;# 
  1579  0797                     	;# 
  1580  0798                     	;# 
  1581  0799                     	;# 
  1582  079A                     	;# 
  1583  079B                     	;# 
  1584  080C                     	;# 
  1585  080D                     	;# 
  1586  080E                     	;# 
  1587  080F                     	;# 
  1588  0810                     	;# 
  1589  0811                     	;# 
  1590  0812                     	;# 
  1591  0813                     	;# 
  1592  0814                     	;# 
  1593  081A                     	;# 
  1594  081B                     	;# 
  1595  081C                     	;# 
  1596  081D                     	;# 
  1597  081E                     	;# 
  1598  081F                     	;# 
  1599  088C                     	;# 
  1600  088D                     	;# 
  1601  088E                     	;# 
  1602  088F                     	;# 
  1603  0890                     	;# 
  1604  0891                     	;# 
  1605  0892                     	;# 
  1606  0893                     	;# 
  1607  0895                     	;# 
  1608  0896                     	;# 
  1609  0897                     	;# 
  1610  0898                     	;# 
  1611  0899                     	;# 
  1612  089A                     	;# 
  1613  089B                     	;# 
  1614  090C                     	;# 
  1615  090E                     	;# 
  1616  090F                     	;# 
  1617  091F                     	;# 
  1618  091F                     	;# 
  1619  098F                     	;# 
  1620  098F                     	;# 
  1621  0990                     	;# 
  1622  0991                     	;# 
  1623  0992                     	;# 
  1624  0993                     	;# 
  1625  0994                     	;# 
  1626  0995                     	;# 
  1627  0996                     	;# 
  1628  0997                     	;# 
  1629  0E0F                     	;# 
  1630  0E10                     	;# 
  1631  0E11                     	;# 
  1632  0E12                     	;# 
  1633  0E13                     	;# 
  1634  0E14                     	;# 
  1635  0E15                     	;# 
  1636  0E16                     	;# 
  1637  0E17                     	;# 
  1638  0E18                     	;# 
  1639  0E19                     	;# 
  1640  0E1A                     	;# 
  1641  0E1B                     	;# 
  1642  0E1C                     	;# 
  1643  0E1D                     	;# 
  1644  0E1E                     	;# 
  1645  0E1F                     	;# 
  1646  0E20                     	;# 
  1647  0E21                     	;# 
  1648  0E22                     	;# 
  1649  0E23                     	;# 
  1650  0E24                     	;# 
  1651  0E25                     	;# 
  1652  0E26                     	;# 
  1653  0E27                     	;# 
  1654  0E28                     	;# 
  1655  0E29                     	;# 
  1656  0E2A                     	;# 
  1657  0E2B                     	;# 
  1658  0E2C                     	;# 
  1659  0E2D                     	;# 
  1660  0E2E                     	;# 
  1661  0E2F                     	;# 
  1662  0E30                     	;# 
  1663  0E31                     	;# 
  1664  0E32                     	;# 
  1665  0E33                     	;# 
  1666  0E34                     	;# 
  1667  0E35                     	;# 
  1668  0E36                     	;# 
  1669  0E37                     	;# 
  1670  0E8F                     	;# 
  1671  0E90                     	;# 
  1672  0E91                     	;# 
  1673  0E92                     	;# 
  1674  0E93                     	;# 
  1675  0E94                     	;# 
  1676  0E95                     	;# 
  1677  0E96                     	;# 
  1678  0E97                     	;# 
  1679  0E9C                     	;# 
  1680  0E9D                     	;# 
  1681  0E9E                     	;# 
  1682  0EA1                     	;# 
  1683  0EA2                     	;# 
  1684  0EA3                     	;# 
  1685  0EA4                     	;# 
  1686  0EA5                     	;# 
  1687  0EA9                     	;# 
  1688  0EAA                     	;# 
  1689  0EAB                     	;# 
  1690  0EAC                     	;# 
  1691  0EB1                     	;# 
  1692  0EB2                     	;# 
  1693  0EB3                     	;# 
  1694  0EB8                     	;# 
  1695  0EB9                     	;# 
  1696  0EBA                     	;# 
  1697  0EBB                     	;# 
  1698  0EBC                     	;# 
  1699  0EBD                     	;# 
  1700  0EBE                     	;# 
  1701  0EC3                     	;# 
  1702  0EC5                     	;# 
  1703  0EC6                     	;# 
  1704  0EC7                     	;# 
  1705  0EC8                     	;# 
  1706  0EC9                     	;# 
  1707  0ECA                     	;# 
  1708  0ECB                     	;# 
  1709  0ECC                     	;# 
  1710  0F10                     	;# 
  1711  0F11                     	;# 
  1712  0F12                     	;# 
  1713  0F13                     	;# 
  1714  0F14                     	;# 
  1715  0F15                     	;# 
  1716  0F16                     	;# 
  1717  0F17                     	;# 
  1718  0F18                     	;# 
  1719  0F19                     	;# 
  1720  0F1A                     	;# 
  1721  0F1B                     	;# 
  1722  0F1C                     	;# 
  1723  0F1D                     	;# 
  1724  0F1E                     	;# 
  1725  0F1F                     	;# 
  1726  0F20                     	;# 
  1727  0F21                     	;# 
  1728  0F22                     	;# 
  1729  0F23                     	;# 
  1730  0F24                     	;# 
  1731  0F25                     	;# 
  1732  0F26                     	;# 
  1733  0F27                     	;# 
  1734  0F28                     	;# 
  1735  0F29                     	;# 
  1736  0F2A                     	;# 
  1737  0F2B                     	;# 
  1738  0F2C                     	;# 
  1739  0F2D                     	;# 
  1740  0F2E                     	;# 
  1741  0F2F                     	;# 
  1742  0F30                     	;# 
  1743  0F31                     	;# 
  1744  0F32                     	;# 
  1745  0F38                     	;# 
  1746  0F39                     	;# 
  1747  0F3A                     	;# 
  1748  0F3B                     	;# 
  1749  0F3C                     	;# 
  1750  0F3D                     	;# 
  1751  0F3E                     	;# 
  1752  0F3F                     	;# 
  1753  0F40                     	;# 
  1754  0F41                     	;# 
  1755  0F43                     	;# 
  1756  0F44                     	;# 
  1757  0F45                     	;# 
  1758  0F46                     	;# 
  1759  0F47                     	;# 
  1760  0F48                     	;# 
  1761  0F49                     	;# 
  1762  0F4A                     	;# 
  1763  0F4B                     	;# 
  1764  0F4C                     	;# 
  1765  0F4E                     	;# 
  1766  0F4F                     	;# 
  1767  0F50                     	;# 
  1768  0F51                     	;# 
  1769  0F52                     	;# 
  1770  0F53                     	;# 
  1771  0F54                     	;# 
  1772  0F55                     	;# 
  1773  0F56                     	;# 
  1774  0F57                     	;# 
  1775  0F59                     	;# 
  1776  0F5A                     	;# 
  1777  0F5B                     	;# 
  1778  0F5C                     	;# 
  1779  0F5D                     	;# 
  1780  0F61                     	;# 
  1781  0F62                     	;# 
  1782  0F64                     	;# 
  1783  0F65                     	;# 
  1784  0F66                     	;# 
  1785  0F67                     	;# 
  1786  0F68                     	;# 
  1787  0F69                     	;# 
  1788  0F6A                     	;# 
  1789  0F6B                     	;# 
  1790  0F6C                     	;# 
  1791  0F6D                     	;# 
  1792  0FE4                     	;# 
  1793  0FE5                     	;# 
  1794  0FE6                     	;# 
  1795  0FE7                     	;# 
  1796  0FE8                     	;# 
  1797  0FE9                     	;# 
  1798  0FEA                     	;# 
  1799  0FEB                     	;# 
  1800  0FED                     	;# 
  1801  0FEE                     	;# 
  1802  0FEF                     	;# 
  1803  0000                     	;# 
  1804  0001                     	;# 
  1805  0002                     	;# 
  1806  0003                     	;# 
  1807  0004                     	;# 
  1808  0005                     	;# 
  1809  0006                     	;# 
  1810  0007                     	;# 
  1811  0008                     	;# 
  1812  0009                     	;# 
  1813  000A                     	;# 
  1814  000B                     	;# 
  1815  000C                     	;# 
  1816  000D                     	;# 
  1817  000E                     	;# 
  1818  000F                     	;# 
  1819  0010                     	;# 
  1820  0011                     	;# 
  1821  0012                     	;# 
  1822  0013                     	;# 
  1823  0014                     	;# 
  1824  0015                     	;# 
  1825  0016                     	;# 
  1826  0017                     	;# 
  1827  0018                     	;# 
  1828  0019                     	;# 
  1829  001A                     	;# 
  1830  001C                     	;# 
  1831  001C                     	;# 
  1832  001D                     	;# 
  1833  001D                     	;# 
  1834  001E                     	;# 
  1835  001F                     	;# 
  1836  008C                     	;# 
  1837  008C                     	;# 
  1838  008D                     	;# 
  1839  008E                     	;# 
  1840  008E                     	;# 
  1841  008F                     	;# 
  1842  0090                     	;# 
  1843  0090                     	;# 
  1844  0091                     	;# 
  1845  0093                     	;# 
  1846  0094                     	;# 
  1847  0095                     	;# 
  1848  0096                     	;# 
  1849  0097                     	;# 
  1850  0098                     	;# 
  1851  0099                     	;# 
  1852  009A                     	;# 
  1853  009B                     	;# 
  1854  009C                     	;# 
  1855  009D                     	;# 
  1856  009E                     	;# 
  1857  010C                     	;# 
  1858  010D                     	;# 
  1859  010E                     	;# 
  1860  010E                     	;# 
  1861  010F                     	;# 
  1862  0110                     	;# 
  1863  0110                     	;# 
  1864  0111                     	;# 
  1865  0112                     	;# 
  1866  0112                     	;# 
  1867  0113                     	;# 
  1868  0114                     	;# 
  1869  0114                     	;# 
  1870  0115                     	;# 
  1871  0116                     	;# 
  1872  0116                     	;# 
  1873  0117                     	;# 
  1874  0119                     	;# 
  1875  0119                     	;# 
  1876  0119                     	;# 
  1877  011A                     	;# 
  1878  011A                     	;# 
  1879  011A                     	;# 
  1880  011B                     	;# 
  1881  011B                     	;# 
  1882  011B                     	;# 
  1883  011B                     	;# 
  1884  011B                     	;# 
  1885  011C                     	;# 
  1886  011C                     	;# 
  1887  011C                     	;# 
  1888  011D                     	;# 
  1889  011D                     	;# 
  1890  011D                     	;# 
  1891  011E                     	;# 
  1892  011E                     	;# 
  1893  011E                     	;# 
  1894  011F                     	;# 
  1895  011F                     	;# 
  1896  011F                     	;# 
  1897  011F                     	;# 
  1898  011F                     	;# 
  1899  018C                     	;# 
  1900  018D                     	;# 
  1901  018E                     	;# 
  1902  018F                     	;# 
  1903  0190                     	;# 
  1904  0191                     	;# 
  1905  0192                     	;# 
  1906  0196                     	;# 
  1907  0197                     	;# 
  1908  0198                     	;# 
  1909  0199                     	;# 
  1910  019A                     	;# 
  1911  019B                     	;# 
  1912  019C                     	;# 
  1913  020C                     	;# 
  1914  020C                     	;# 
  1915  020D                     	;# 
  1916  020E                     	;# 
  1917  020F                     	;# 
  1918  020F                     	;# 
  1919  0210                     	;# 
  1920  0210                     	;# 
  1921  0211                     	;# 
  1922  0211                     	;# 
  1923  0212                     	;# 
  1924  0212                     	;# 
  1925  0213                     	;# 
  1926  0214                     	;# 
  1927  0215                     	;# 
  1928  0215                     	;# 
  1929  0216                     	;# 
  1930  0216                     	;# 
  1931  0217                     	;# 
  1932  0217                     	;# 
  1933  0218                     	;# 
  1934  0218                     	;# 
  1935  0219                     	;# 
  1936  021A                     	;# 
  1937  021B                     	;# 
  1938  021B                     	;# 
  1939  021C                     	;# 
  1940  021C                     	;# 
  1941  021D                     	;# 
  1942  021D                     	;# 
  1943  021E                     	;# 
  1944  021F                     	;# 
  1945  028C                     	;# 
  1946  028C                     	;# 
  1947  028D                     	;# 
  1948  028D                     	;# 
  1949  028E                     	;# 
  1950  028F                     	;# 
  1951  0290                     	;# 
  1952  0290                     	;# 
  1953  0291                     	;# 
  1954  0292                     	;# 
  1955  0292                     	;# 
  1956  0293                     	;# 
  1957  0293                     	;# 
  1958  0294                     	;# 
  1959  0295                     	;# 
  1960  0296                     	;# 
  1961  0296                     	;# 
  1962  0297                     	;# 
  1963  0298                     	;# 
  1964  0298                     	;# 
  1965  0299                     	;# 
  1966  0299                     	;# 
  1967  029A                     	;# 
  1968  029B                     	;# 
  1969  029C                     	;# 
  1970  029C                     	;# 
  1971  029D                     	;# 
  1972  030C                     	;# 
  1973  030C                     	;# 
  1974  030D                     	;# 
  1975  030E                     	;# 
  1976  030F                     	;# 
  1977  0310                     	;# 
  1978  0310                     	;# 
  1979  0311                     	;# 
  1980  0312                     	;# 
  1981  0313                     	;# 
  1982  0314                     	;# 
  1983  0314                     	;# 
  1984  0315                     	;# 
  1985  0316                     	;# 
  1986  0317                     	;# 
  1987  0318                     	;# 
  1988  0318                     	;# 
  1989  0319                     	;# 
  1990  031A                     	;# 
  1991  031B                     	;# 
  1992  031C                     	;# 
  1993  031C                     	;# 
  1994  031D                     	;# 
  1995  031E                     	;# 
  1996  031F                     	;# 
  1997  038C                     	;# 
  1998  038C                     	;# 
  1999  038D                     	;# 
  2000  038E                     	;# 
  2001  0390                     	;# 
  2002  0390                     	;# 
  2003  0391                     	;# 
  2004  0392                     	;# 
  2005  040C                     	;# 
  2006  040D                     	;# 
  2007  040E                     	;# 
  2008  040F                     	;# 
  2009  0410                     	;# 
  2010  0411                     	;# 
  2011  0416                     	;# 
  2012  0416                     	;# 
  2013  0417                     	;# 
  2014  0418                     	;# 
  2015  0418                     	;# 
  2016  0419                     	;# 
  2017  041A                     	;# 
  2018  041A                     	;# 
  2019  041B                     	;# 
  2020  041C                     	;# 
  2021  041C                     	;# 
  2022  041D                     	;# 
  2023  041E                     	;# 
  2024  041F                     	;# 
  2025  048C                     	;# 
  2026  048C                     	;# 
  2027  048D                     	;# 
  2028  048E                     	;# 
  2029  048F                     	;# 
  2030  048F                     	;# 
  2031  0490                     	;# 
  2032  0491                     	;# 
  2033  0492                     	;# 
  2034  0492                     	;# 
  2035  0493                     	;# 
  2036  0494                     	;# 
  2037  0495                     	;# 
  2038  0495                     	;# 
  2039  0496                     	;# 
  2040  0497                     	;# 
  2041  0498                     	;# 
  2042  0499                     	;# 
  2043  049A                     	;# 
  2044  049B                     	;# 
  2045  049C                     	;# 
  2046  049D                     	;# 
  2047  050C                     	;# 
  2048  050C                     	;# 
  2049  050D                     	;# 
  2050  050E                     	;# 
  2051  050F                     	;# 
  2052  050F                     	;# 
  2053  0510                     	;# 
  2054  0511                     	;# 
  2055  0512                     	;# 
  2056  0512                     	;# 
  2057  0513                     	;# 
  2058  0514                     	;# 
  2059  0515                     	;# 
  2060  0515                     	;# 
  2061  0516                     	;# 
  2062  0517                     	;# 
  2063  0518                     	;# 
  2064  0519                     	;# 
  2065  051A                     	;# 
  2066  051B                     	;# 
  2067  051C                     	;# 
  2068  051D                     	;# 
  2069  058C                     	;# 
  2070  058C                     	;# 
  2071  058D                     	;# 
  2072  058E                     	;# 
  2073  058F                     	;# 
  2074  058F                     	;# 
  2075  0590                     	;# 
  2076  0591                     	;# 
  2077  0592                     	;# 
  2078  0593                     	;# 
  2079  060C                     	;# 
  2080  060D                     	;# 
  2081  060E                     	;# 
  2082  060F                     	;# 
  2083  0610                     	;# 
  2084  0611                     	;# 
  2085  0612                     	;# 
  2086  0613                     	;# 
  2087  0614                     	;# 
  2088  0616                     	;# 
  2089  0617                     	;# 
  2090  0618                     	;# 
  2091  0619                     	;# 
  2092  061A                     	;# 
  2093  061B                     	;# 
  2094  061C                     	;# 
  2095  061D                     	;# 
  2096  061E                     	;# 
  2097  068C                     	;# 
  2098  068D                     	;# 
  2099  068E                     	;# 
  2100  068F                     	;# 
  2101  0690                     	;# 
  2102  0691                     	;# 
  2103  0692                     	;# 
  2104  0693                     	;# 
  2105  0694                     	;# 
  2106  070C                     	;# 
  2107  070D                     	;# 
  2108  070E                     	;# 
  2109  070F                     	;# 
  2110  0710                     	;# 
  2111  0711                     	;# 
  2112  0712                     	;# 
  2113  0713                     	;# 
  2114  0714                     	;# 
  2115  0716                     	;# 
  2116  0717                     	;# 
  2117  0718                     	;# 
  2118  0719                     	;# 
  2119  071A                     	;# 
  2120  071B                     	;# 
  2121  071C                     	;# 
  2122  071D                     	;# 
  2123  071E                     	;# 
  2124  0796                     	;# 
  2125  0797                     	;# 
  2126  0798                     	;# 
  2127  0799                     	;# 
  2128  079A                     	;# 
  2129  079B                     	;# 
  2130  080C                     	;# 
  2131  080D                     	;# 
  2132  080E                     	;# 
  2133  080F                     	;# 
  2134  0810                     	;# 
  2135  0811                     	;# 
  2136  0812                     	;# 
  2137  0813                     	;# 
  2138  0814                     	;# 
  2139  081A                     	;# 
  2140  081B                     	;# 
  2141  081C                     	;# 
  2142  081D                     	;# 
  2143  081E                     	;# 
  2144  081F                     	;# 
  2145  088C                     	;# 
  2146  088D                     	;# 
  2147  088E                     	;# 
  2148  088F                     	;# 
  2149  0890                     	;# 
  2150  0891                     	;# 
  2151  0892                     	;# 
  2152  0893                     	;# 
  2153  0895                     	;# 
  2154  0896                     	;# 
  2155  0897                     	;# 
  2156  0898                     	;# 
  2157  0899                     	;# 
  2158  089A                     	;# 
  2159  089B                     	;# 
  2160  090C                     	;# 
  2161  090E                     	;# 
  2162  090F                     	;# 
  2163  091F                     	;# 
  2164  091F                     	;# 
  2165  098F                     	;# 
  2166  098F                     	;# 
  2167  0990                     	;# 
  2168  0991                     	;# 
  2169  0992                     	;# 
  2170  0993                     	;# 
  2171  0994                     	;# 
  2172  0995                     	;# 
  2173  0996                     	;# 
  2174  0997                     	;# 
  2175  0E0F                     	;# 
  2176  0E10                     	;# 
  2177  0E11                     	;# 
  2178  0E12                     	;# 
  2179  0E13                     	;# 
  2180  0E14                     	;# 
  2181  0E15                     	;# 
  2182  0E16                     	;# 
  2183  0E17                     	;# 
  2184  0E18                     	;# 
  2185  0E19                     	;# 
  2186  0E1A                     	;# 
  2187  0E1B                     	;# 
  2188  0E1C                     	;# 
  2189  0E1D                     	;# 
  2190  0E1E                     	;# 
  2191  0E1F                     	;# 
  2192  0E20                     	;# 
  2193  0E21                     	;# 
  2194  0E22                     	;# 
  2195  0E23                     	;# 
  2196  0E24                     	;# 
  2197  0E25                     	;# 
  2198  0E26                     	;# 
  2199  0E27                     	;# 
  2200  0E28                     	;# 
  2201  0E29                     	;# 
  2202  0E2A                     	;# 
  2203  0E2B                     	;# 
  2204  0E2C                     	;# 
  2205  0E2D                     	;# 
  2206  0E2E                     	;# 
  2207  0E2F                     	;# 
  2208  0E30                     	;# 
  2209  0E31                     	;# 
  2210  0E32                     	;# 
  2211  0E33                     	;# 
  2212  0E34                     	;# 
  2213  0E35                     	;# 
  2214  0E36                     	;# 
  2215  0E37                     	;# 
  2216  0E8F                     	;# 
  2217  0E90                     	;# 
  2218  0E91                     	;# 
  2219  0E92                     	;# 
  2220  0E93                     	;# 
  2221  0E94                     	;# 
  2222  0E95                     	;# 
  2223  0E96                     	;# 
  2224  0E97                     	;# 
  2225  0E9C                     	;# 
  2226  0E9D                     	;# 
  2227  0E9E                     	;# 
  2228  0EA1                     	;# 
  2229  0EA2                     	;# 
  2230  0EA3                     	;# 
  2231  0EA4                     	;# 
  2232  0EA5                     	;# 
  2233  0EA9                     	;# 
  2234  0EAA                     	;# 
  2235  0EAB                     	;# 
  2236  0EAC                     	;# 
  2237  0EB1                     	;# 
  2238  0EB2                     	;# 
  2239  0EB3                     	;# 
  2240  0EB8                     	;# 
  2241  0EB9                     	;# 
  2242  0EBA                     	;# 
  2243  0EBB                     	;# 
  2244  0EBC                     	;# 
  2245  0EBD                     	;# 
  2246  0EBE                     	;# 
  2247  0EC3                     	;# 
  2248  0EC5                     	;# 
  2249  0EC6                     	;# 
  2250  0EC7                     	;# 
  2251  0EC8                     	;# 
  2252  0EC9                     	;# 
  2253  0ECA                     	;# 
  2254  0ECB                     	;# 
  2255  0ECC                     	;# 
  2256  0F10                     	;# 
  2257  0F11                     	;# 
  2258  0F12                     	;# 
  2259  0F13                     	;# 
  2260  0F14                     	;# 
  2261  0F15                     	;# 
  2262  0F16                     	;# 
  2263  0F17                     	;# 
  2264  0F18                     	;# 
  2265  0F19                     	;# 
  2266  0F1A                     	;# 
  2267  0F1B                     	;# 
  2268  0F1C                     	;# 
  2269  0F1D                     	;# 
  2270  0F1E                     	;# 
  2271  0F1F                     	;# 
  2272  0F20                     	;# 
  2273  0F21                     	;# 
  2274  0F22                     	;# 
  2275  0F23                     	;# 
  2276  0F24                     	;# 
  2277  0F25                     	;# 
  2278  0F26                     	;# 
  2279  0F27                     	;# 
  2280  0F28                     	;# 
  2281  0F29                     	;# 
  2282  0F2A                     	;# 
  2283  0F2B                     	;# 
  2284  0F2C                     	;# 
  2285  0F2D                     	;# 
  2286  0F2E                     	;# 
  2287  0F2F                     	;# 
  2288  0F30                     	;# 
  2289  0F31                     	;# 
  2290  0F32                     	;# 
  2291  0F38                     	;# 
  2292  0F39                     	;# 
  2293  0F3A                     	;# 
  2294  0F3B                     	;# 
  2295  0F3C                     	;# 
  2296  0F3D                     	;# 
  2297  0F3E                     	;# 
  2298  0F3F                     	;# 
  2299  0F40                     	;# 
  2300  0F41                     	;# 
  2301  0F43                     	;# 
  2302  0F44                     	;# 
  2303  0F45                     	;# 
  2304  0F46                     	;# 
  2305  0F47                     	;# 
  2306  0F48                     	;# 
  2307  0F49                     	;# 
  2308  0F4A                     	;# 
  2309  0F4B                     	;# 
  2310  0F4C                     	;# 
  2311  0F4E                     	;# 
  2312  0F4F                     	;# 
  2313  0F50                     	;# 
  2314  0F51                     	;# 
  2315  0F52                     	;# 
  2316  0F53                     	;# 
  2317  0F54                     	;# 
  2318  0F55                     	;# 
  2319  0F56                     	;# 
  2320  0F57                     	;# 
  2321  0F59                     	;# 
  2322  0F5A                     	;# 
  2323  0F5B                     	;# 
  2324  0F5C                     	;# 
  2325  0F5D                     	;# 
  2326  0F61                     	;# 
  2327  0F62                     	;# 
  2328  0F64                     	;# 
  2329  0F65                     	;# 
  2330  0F66                     	;# 
  2331  0F67                     	;# 
  2332  0F68                     	;# 
  2333  0F69                     	;# 
  2334  0F6A                     	;# 
  2335  0F6B                     	;# 
  2336  0F6C                     	;# 
  2337  0F6D                     	;# 
  2338  0FE4                     	;# 
  2339  0FE5                     	;# 
  2340  0FE6                     	;# 
  2341  0FE7                     	;# 
  2342  0FE8                     	;# 
  2343  0FE9                     	;# 
  2344  0FEA                     	;# 
  2345  0FEB                     	;# 
  2346  0FED                     	;# 
  2347  0FEE                     	;# 
  2348  0FEF                     	;# 
  2349  0000                     	;# 
  2350  0001                     	;# 
  2351  0002                     	;# 
  2352  0003                     	;# 
  2353  0004                     	;# 
  2354  0005                     	;# 
  2355  0006                     	;# 
  2356  0007                     	;# 
  2357  0008                     	;# 
  2358  0009                     	;# 
  2359  000A                     	;# 
  2360  000B                     	;# 
  2361  000C                     	;# 
  2362  000D                     	;# 
  2363  000E                     	;# 
  2364  000F                     	;# 
  2365  0010                     	;# 
  2366  0011                     	;# 
  2367  0012                     	;# 
  2368  0013                     	;# 
  2369  0014                     	;# 
  2370  0015                     	;# 
  2371  0016                     	;# 
  2372  0017                     	;# 
  2373  0018                     	;# 
  2374  0019                     	;# 
  2375  001A                     	;# 
  2376  001C                     	;# 
  2377  001C                     	;# 
  2378  001D                     	;# 
  2379  001D                     	;# 
  2380  001E                     	;# 
  2381  001F                     	;# 
  2382  008C                     	;# 
  2383  008C                     	;# 
  2384  008D                     	;# 
  2385  008E                     	;# 
  2386  008E                     	;# 
  2387  008F                     	;# 
  2388  0090                     	;# 
  2389  0090                     	;# 
  2390  0091                     	;# 
  2391  0093                     	;# 
  2392  0094                     	;# 
  2393  0095                     	;# 
  2394  0096                     	;# 
  2395  0097                     	;# 
  2396  0098                     	;# 
  2397  0099                     	;# 
  2398  009A                     	;# 
  2399  009B                     	;# 
  2400  009C                     	;# 
  2401  009D                     	;# 
  2402  009E                     	;# 
  2403  010C                     	;# 
  2404  010D                     	;# 
  2405  010E                     	;# 
  2406  010E                     	;# 
  2407  010F                     	;# 
  2408  0110                     	;# 
  2409  0110                     	;# 
  2410  0111                     	;# 
  2411  0112                     	;# 
  2412  0112                     	;# 
  2413  0113                     	;# 
  2414  0114                     	;# 
  2415  0114                     	;# 
  2416  0115                     	;# 
  2417  0116                     	;# 
  2418  0116                     	;# 
  2419  0117                     	;# 
  2420  0119                     	;# 
  2421  0119                     	;# 
  2422  0119                     	;# 
  2423  011A                     	;# 
  2424  011A                     	;# 
  2425  011A                     	;# 
  2426  011B                     	;# 
  2427  011B                     	;# 
  2428  011B                     	;# 
  2429  011B                     	;# 
  2430  011B                     	;# 
  2431  011C                     	;# 
  2432  011C                     	;# 
  2433  011C                     	;# 
  2434  011D                     	;# 
  2435  011D                     	;# 
  2436  011D                     	;# 
  2437  011E                     	;# 
  2438  011E                     	;# 
  2439  011E                     	;# 
  2440  011F                     	;# 
  2441  011F                     	;# 
  2442  011F                     	;# 
  2443  011F                     	;# 
  2444  011F                     	;# 
  2445  018C                     	;# 
  2446  018D                     	;# 
  2447  018E                     	;# 
  2448  018F                     	;# 
  2449  0190                     	;# 
  2450  0191                     	;# 
  2451  0192                     	;# 
  2452  0196                     	;# 
  2453  0197                     	;# 
  2454  0198                     	;# 
  2455  0199                     	;# 
  2456  019A                     	;# 
  2457  019B                     	;# 
  2458  019C                     	;# 
  2459  020C                     	;# 
  2460  020C                     	;# 
  2461  020D                     	;# 
  2462  020E                     	;# 
  2463  020F                     	;# 
  2464  020F                     	;# 
  2465  0210                     	;# 
  2466  0210                     	;# 
  2467  0211                     	;# 
  2468  0211                     	;# 
  2469  0212                     	;# 
  2470  0212                     	;# 
  2471  0213                     	;# 
  2472  0214                     	;# 
  2473  0215                     	;# 
  2474  0215                     	;# 
  2475  0216                     	;# 
  2476  0216                     	;# 
  2477  0217                     	;# 
  2478  0217                     	;# 
  2479  0218                     	;# 
  2480  0218                     	;# 
  2481  0219                     	;# 
  2482  021A                     	;# 
  2483  021B                     	;# 
  2484  021B                     	;# 
  2485  021C                     	;# 
  2486  021C                     	;# 
  2487  021D                     	;# 
  2488  021D                     	;# 
  2489  021E                     	;# 
  2490  021F                     	;# 
  2491  028C                     	;# 
  2492  028C                     	;# 
  2493  028D                     	;# 
  2494  028D                     	;# 
  2495  028E                     	;# 
  2496  028F                     	;# 
  2497  0290                     	;# 
  2498  0290                     	;# 
  2499  0291                     	;# 
  2500  0292                     	;# 
  2501  0292                     	;# 
  2502  0293                     	;# 
  2503  0293                     	;# 
  2504  0294                     	;# 
  2505  0295                     	;# 
  2506  0296                     	;# 
  2507  0296                     	;# 
  2508  0297                     	;# 
  2509  0298                     	;# 
  2510  0298                     	;# 
  2511  0299                     	;# 
  2512  0299                     	;# 
  2513  029A                     	;# 
  2514  029B                     	;# 
  2515  029C                     	;# 
  2516  029C                     	;# 
  2517  029D                     	;# 
  2518  030C                     	;# 
  2519  030C                     	;# 
  2520  030D                     	;# 
  2521  030E                     	;# 
  2522  030F                     	;# 
  2523  0310                     	;# 
  2524  0310                     	;# 
  2525  0311                     	;# 
  2526  0312                     	;# 
  2527  0313                     	;# 
  2528  0314                     	;# 
  2529  0314                     	;# 
  2530  0315                     	;# 
  2531  0316                     	;# 
  2532  0317                     	;# 
  2533  0318                     	;# 
  2534  0318                     	;# 
  2535  0319                     	;# 
  2536  031A                     	;# 
  2537  031B                     	;# 
  2538  031C                     	;# 
  2539  031C                     	;# 
  2540  031D                     	;# 
  2541  031E                     	;# 
  2542  031F                     	;# 
  2543  038C                     	;# 
  2544  038C                     	;# 
  2545  038D                     	;# 
  2546  038E                     	;# 
  2547  0390                     	;# 
  2548  0390                     	;# 
  2549  0391                     	;# 
  2550  0392                     	;# 
  2551  040C                     	;# 
  2552  040D                     	;# 
  2553  040E                     	;# 
  2554  040F                     	;# 
  2555  0410                     	;# 
  2556  0411                     	;# 
  2557  0416                     	;# 
  2558  0416                     	;# 
  2559  0417                     	;# 
  2560  0418                     	;# 
  2561  0418                     	;# 
  2562  0419                     	;# 
  2563  041A                     	;# 
  2564  041A                     	;# 
  2565  041B                     	;# 
  2566  041C                     	;# 
  2567  041C                     	;# 
  2568  041D                     	;# 
  2569  041E                     	;# 
  2570  041F                     	;# 
  2571  048C                     	;# 
  2572  048C                     	;# 
  2573  048D                     	;# 
  2574  048E                     	;# 
  2575  048F                     	;# 
  2576  048F                     	;# 
  2577  0490                     	;# 
  2578  0491                     	;# 
  2579  0492                     	;# 
  2580  0492                     	;# 
  2581  0493                     	;# 
  2582  0494                     	;# 
  2583  0495                     	;# 
  2584  0495                     	;# 
  2585  0496                     	;# 
  2586  0497                     	;# 
  2587  0498                     	;# 
  2588  0499                     	;# 
  2589  049A                     	;# 
  2590  049B                     	;# 
  2591  049C                     	;# 
  2592  049D                     	;# 
  2593  050C                     	;# 
  2594  050C                     	;# 
  2595  050D                     	;# 
  2596  050E                     	;# 
  2597  050F                     	;# 
  2598  050F                     	;# 
  2599  0510                     	;# 
  2600  0511                     	;# 
  2601  0512                     	;# 
  2602  0512                     	;# 
  2603  0513                     	;# 
  2604  0514                     	;# 
  2605  0515                     	;# 
  2606  0515                     	;# 
  2607  0516                     	;# 
  2608  0517                     	;# 
  2609  0518                     	;# 
  2610  0519                     	;# 
  2611  051A                     	;# 
  2612  051B                     	;# 
  2613  051C                     	;# 
  2614  051D                     	;# 
  2615  058C                     	;# 
  2616  058C                     	;# 
  2617  058D                     	;# 
  2618  058E                     	;# 
  2619  058F                     	;# 
  2620  058F                     	;# 
  2621  0590                     	;# 
  2622  0591                     	;# 
  2623  0592                     	;# 
  2624  0593                     	;# 
  2625  060C                     	;# 
  2626  060D                     	;# 
  2627  060E                     	;# 
  2628  060F                     	;# 
  2629  0610                     	;# 
  2630  0611                     	;# 
  2631  0612                     	;# 
  2632  0613                     	;# 
  2633  0614                     	;# 
  2634  0616                     	;# 
  2635  0617                     	;# 
  2636  0618                     	;# 
  2637  0619                     	;# 
  2638  061A                     	;# 
  2639  061B                     	;# 
  2640  061C                     	;# 
  2641  061D                     	;# 
  2642  061E                     	;# 
  2643  068C                     	;# 
  2644  068D                     	;# 
  2645  068E                     	;# 
  2646  068F                     	;# 
  2647  0690                     	;# 
  2648  0691                     	;# 
  2649  0692                     	;# 
  2650  0693                     	;# 
  2651  0694                     	;# 
  2652  070C                     	;# 
  2653  070D                     	;# 
  2654  070E                     	;# 
  2655  070F                     	;# 
  2656  0710                     	;# 
  2657  0711                     	;# 
  2658  0712                     	;# 
  2659  0713                     	;# 
  2660  0714                     	;# 
  2661  0716                     	;# 
  2662  0717                     	;# 
  2663  0718                     	;# 
  2664  0719                     	;# 
  2665  071A                     	;# 
  2666  071B                     	;# 
  2667  071C                     	;# 
  2668  071D                     	;# 
  2669  071E                     	;# 
  2670  0796                     	;# 
  2671  0797                     	;# 
  2672  0798                     	;# 
  2673  0799                     	;# 
  2674  079A                     	;# 
  2675  079B                     	;# 
  2676  080C                     	;# 
  2677  080D                     	;# 
  2678  080E                     	;# 
  2679  080F                     	;# 
  2680  0810                     	;# 
  2681  0811                     	;# 
  2682  0812                     	;# 
  2683  0813                     	;# 
  2684  0814                     	;# 
  2685  081A                     	;# 
  2686  081B                     	;# 
  2687  081C                     	;# 
  2688  081D                     	;# 
  2689  081E                     	;# 
  2690  081F                     	;# 
  2691  088C                     	;# 
  2692  088D                     	;# 
  2693  088E                     	;# 
  2694  088F                     	;# 
  2695  0890                     	;# 
  2696  0891                     	;# 
  2697  0892                     	;# 
  2698  0893                     	;# 
  2699  0895                     	;# 
  2700  0896                     	;# 
  2701  0897                     	;# 
  2702  0898                     	;# 
  2703  0899                     	;# 
  2704  089A                     	;# 
  2705  089B                     	;# 
  2706  090C                     	;# 
  2707  090E                     	;# 
  2708  090F                     	;# 
  2709  091F                     	;# 
  2710  091F                     	;# 
  2711  098F                     	;# 
  2712  098F                     	;# 
  2713  0990                     	;# 
  2714  0991                     	;# 
  2715  0992                     	;# 
  2716  0993                     	;# 
  2717  0994                     	;# 
  2718  0995                     	;# 
  2719  0996                     	;# 
  2720  0997                     	;# 
  2721  0E0F                     	;# 
  2722  0E10                     	;# 
  2723  0E11                     	;# 
  2724  0E12                     	;# 
  2725  0E13                     	;# 
  2726  0E14                     	;# 
  2727  0E15                     	;# 
  2728  0E16                     	;# 
  2729  0E17                     	;# 
  2730  0E18                     	;# 
  2731  0E19                     	;# 
  2732  0E1A                     	;# 
  2733  0E1B                     	;# 
  2734  0E1C                     	;# 
  2735  0E1D                     	;# 
  2736  0E1E                     	;# 
  2737  0E1F                     	;# 
  2738  0E20                     	;# 
  2739  0E21                     	;# 
  2740  0E22                     	;# 
  2741  0E23                     	;# 
  2742  0E24                     	;# 
  2743  0E25                     	;# 
  2744  0E26                     	;# 
  2745  0E27                     	;# 
  2746  0E28                     	;# 
  2747  0E29                     	;# 
  2748  0E2A                     	;# 
  2749  0E2B                     	;# 
  2750  0E2C                     	;# 
  2751  0E2D                     	;# 
  2752  0E2E                     	;# 
  2753  0E2F                     	;# 
  2754  0E30                     	;# 
  2755  0E31                     	;# 
  2756  0E32                     	;# 
  2757  0E33                     	;# 
  2758  0E34                     	;# 
  2759  0E35                     	;# 
  2760  0E36                     	;# 
  2761  0E37                     	;# 
  2762  0E8F                     	;# 
  2763  0E90                     	;# 
  2764  0E91                     	;# 
  2765  0E92                     	;# 
  2766  0E93                     	;# 
  2767  0E94                     	;# 
  2768  0E95                     	;# 
  2769  0E96                     	;# 
  2770  0E97                     	;# 
  2771  0E9C                     	;# 
  2772  0E9D                     	;# 
  2773  0E9E                     	;# 
  2774  0EA1                     	;# 
  2775  0EA2                     	;# 
  2776  0EA3                     	;# 
  2777  0EA4                     	;# 
  2778  0EA5                     	;# 
  2779  0EA9                     	;# 
  2780  0EAA                     	;# 
  2781  0EAB                     	;# 
  2782  0EAC                     	;# 
  2783  0EB1                     	;# 
  2784  0EB2                     	;# 
  2785  0EB3                     	;# 
  2786  0EB8                     	;# 
  2787  0EB9                     	;# 
  2788  0EBA                     	;# 
  2789  0EBB                     	;# 
  2790  0EBC                     	;# 
  2791  0EBD                     	;# 
  2792  0EBE                     	;# 
  2793  0EC3                     	;# 
  2794  0EC5                     	;# 
  2795  0EC6                     	;# 
  2796  0EC7                     	;# 
  2797  0EC8                     	;# 
  2798  0EC9                     	;# 
  2799  0ECA                     	;# 
  2800  0ECB                     	;# 
  2801  0ECC                     	;# 
  2802  0F10                     	;# 
  2803  0F11                     	;# 
  2804  0F12                     	;# 
  2805  0F13                     	;# 
  2806  0F14                     	;# 
  2807  0F15                     	;# 
  2808  0F16                     	;# 
  2809  0F17                     	;# 
  2810  0F18                     	;# 
  2811  0F19                     	;# 
  2812  0F1A                     	;# 
  2813  0F1B                     	;# 
  2814  0F1C                     	;# 
  2815  0F1D                     	;# 
  2816  0F1E                     	;# 
  2817  0F1F                     	;# 
  2818  0F20                     	;# 
  2819  0F21                     	;# 
  2820  0F22                     	;# 
  2821  0F23                     	;# 
  2822  0F24                     	;# 
  2823  0F25                     	;# 
  2824  0F26                     	;# 
  2825  0F27                     	;# 
  2826  0F28                     	;# 
  2827  0F29                     	;# 
  2828  0F2A                     	;# 
  2829  0F2B                     	;# 
  2830  0F2C                     	;# 
  2831  0F2D                     	;# 
  2832  0F2E                     	;# 
  2833  0F2F                     	;# 
  2834  0F30                     	;# 
  2835  0F31                     	;# 
  2836  0F32                     	;# 
  2837  0F38                     	;# 
  2838  0F39                     	;# 
  2839  0F3A                     	;# 
  2840  0F3B                     	;# 
  2841  0F3C                     	;# 
  2842  0F3D                     	;# 
  2843  0F3E                     	;# 
  2844  0F3F                     	;# 
  2845  0F40                     	;# 
  2846  0F41                     	;# 
  2847  0F43                     	;# 
  2848  0F44                     	;# 
  2849  0F45                     	;# 
  2850  0F46                     	;# 
  2851  0F47                     	;# 
  2852  0F48                     	;# 
  2853  0F49                     	;# 
  2854  0F4A                     	;# 
  2855  0F4B                     	;# 
  2856  0F4C                     	;# 
  2857  0F4E                     	;# 
  2858  0F4F                     	;# 
  2859  0F50                     	;# 
  2860  0F51                     	;# 
  2861  0F52                     	;# 
  2862  0F53                     	;# 
  2863  0F54                     	;# 
  2864  0F55                     	;# 
  2865  0F56                     	;# 
  2866  0F57                     	;# 
  2867  0F59                     	;# 
  2868  0F5A                     	;# 
  2869  0F5B                     	;# 
  2870  0F5C                     	;# 
  2871  0F5D                     	;# 
  2872  0F61                     	;# 
  2873  0F62                     	;# 
  2874  0F64                     	;# 
  2875  0F65                     	;# 
  2876  0F66                     	;# 
  2877  0F67                     	;# 
  2878  0F68                     	;# 
  2879  0F69                     	;# 
  2880  0F6A                     	;# 
  2881  0F6B                     	;# 
  2882  0F6C                     	;# 
  2883  0F6D                     	;# 
  2884  0FE4                     	;# 
  2885  0FE5                     	;# 
  2886  0FE6                     	;# 
  2887  0FE7                     	;# 
  2888  0FE8                     	;# 
  2889  0FE9                     	;# 
  2890  0FEA                     	;# 
  2891  0FEB                     	;# 
  2892  0FED                     	;# 
  2893  0FEE                     	;# 
  2894  0FEF                     	;# 
  2895  0000                     	;# 
  2896  0001                     	;# 
  2897  0002                     	;# 
  2898  0003                     	;# 
  2899  0004                     	;# 
  2900  0005                     	;# 
  2901  0006                     	;# 
  2902  0007                     	;# 
  2903  0008                     	;# 
  2904  0009                     	;# 
  2905  000A                     	;# 
  2906  000B                     	;# 
  2907  000C                     	;# 
  2908  000D                     	;# 
  2909  000E                     	;# 
  2910  000F                     	;# 
  2911  0010                     	;# 
  2912  0011                     	;# 
  2913  0012                     	;# 
  2914  0013                     	;# 
  2915  0014                     	;# 
  2916  0015                     	;# 
  2917  0016                     	;# 
  2918  0017                     	;# 
  2919  0018                     	;# 
  2920  0019                     	;# 
  2921  001A                     	;# 
  2922  001C                     	;# 
  2923  001C                     	;# 
  2924  001D                     	;# 
  2925  001D                     	;# 
  2926  001E                     	;# 
  2927  001F                     	;# 
  2928  008C                     	;# 
  2929  008C                     	;# 
  2930  008D                     	;# 
  2931  008E                     	;# 
  2932  008E                     	;# 
  2933  008F                     	;# 
  2934  0090                     	;# 
  2935  0090                     	;# 
  2936  0091                     	;# 
  2937  0093                     	;# 
  2938  0094                     	;# 
  2939  0095                     	;# 
  2940  0096                     	;# 
  2941  0097                     	;# 
  2942  0098                     	;# 
  2943  0099                     	;# 
  2944  009A                     	;# 
  2945  009B                     	;# 
  2946  009C                     	;# 
  2947  009D                     	;# 
  2948  009E                     	;# 
  2949  010C                     	;# 
  2950  010D                     	;# 
  2951  010E                     	;# 
  2952  010E                     	;# 
  2953  010F                     	;# 
  2954  0110                     	;# 
  2955  0110                     	;# 
  2956  0111                     	;# 
  2957  0112                     	;# 
  2958  0112                     	;# 
  2959  0113                     	;# 
  2960  0114                     	;# 
  2961  0114                     	;# 
  2962  0115                     	;# 
  2963  0116                     	;# 
  2964  0116                     	;# 
  2965  0117                     	;# 
  2966  0119                     	;# 
  2967  0119                     	;# 
  2968  0119                     	;# 
  2969  011A                     	;# 
  2970  011A                     	;# 
  2971  011A                     	;# 
  2972  011B                     	;# 
  2973  011B                     	;# 
  2974  011B                     	;# 
  2975  011B                     	;# 
  2976  011B                     	;# 
  2977  011C                     	;# 
  2978  011C                     	;# 
  2979  011C                     	;# 
  2980  011D                     	;# 
  2981  011D                     	;# 
  2982  011D                     	;# 
  2983  011E                     	;# 
  2984  011E                     	;# 
  2985  011E                     	;# 
  2986  011F                     	;# 
  2987  011F                     	;# 
  2988  011F                     	;# 
  2989  011F                     	;# 
  2990  011F                     	;# 
  2991  018C                     	;# 
  2992  018D                     	;# 
  2993  018E                     	;# 
  2994  018F                     	;# 
  2995  0190                     	;# 
  2996  0191                     	;# 
  2997  0192                     	;# 
  2998  0196                     	;# 
  2999  0197                     	;# 
  3000  0198                     	;# 
  3001  0199                     	;# 
  3002  019A                     	;# 
  3003  019B                     	;# 
  3004  019C                     	;# 
  3005  020C                     	;# 
  3006  020C                     	;# 
  3007  020D                     	;# 
  3008  020E                     	;# 
  3009  020F                     	;# 
  3010  020F                     	;# 
  3011  0210                     	;# 
  3012  0210                     	;# 
  3013  0211                     	;# 
  3014  0211                     	;# 
  3015  0212                     	;# 
  3016  0212                     	;# 
  3017  0213                     	;# 
  3018  0214                     	;# 
  3019  0215                     	;# 
  3020  0215                     	;# 
  3021  0216                     	;# 
  3022  0216                     	;# 
  3023  0217                     	;# 
  3024  0217                     	;# 
  3025  0218                     	;# 
  3026  0218                     	;# 
  3027  0219                     	;# 
  3028  021A                     	;# 
  3029  021B                     	;# 
  3030  021B                     	;# 
  3031  021C                     	;# 
  3032  021C                     	;# 
  3033  021D                     	;# 
  3034  021D                     	;# 
  3035  021E                     	;# 
  3036  021F                     	;# 
  3037  028C                     	;# 
  3038  028C                     	;# 
  3039  028D                     	;# 
  3040  028D                     	;# 
  3041  028E                     	;# 
  3042  028F                     	;# 
  3043  0290                     	;# 
  3044  0290                     	;# 
  3045  0291                     	;# 
  3046  0292                     	;# 
  3047  0292                     	;# 
  3048  0293                     	;# 
  3049  0293                     	;# 
  3050  0294                     	;# 
  3051  0295                     	;# 
  3052  0296                     	;# 
  3053  0296                     	;# 
  3054  0297                     	;# 
  3055  0298                     	;# 
  3056  0298                     	;# 
  3057  0299                     	;# 
  3058  0299                     	;# 
  3059  029A                     	;# 
  3060  029B                     	;# 
  3061  029C                     	;# 
  3062  029C                     	;# 
  3063  029D                     	;# 
  3064  030C                     	;# 
  3065  030C                     	;# 
  3066  030D                     	;# 
  3067  030E                     	;# 
  3068  030F                     	;# 
  3069  0310                     	;# 
  3070  0310                     	;# 
  3071  0311                     	;# 
  3072  0312                     	;# 
  3073  0313                     	;# 
  3074  0314                     	;# 
  3075  0314                     	;# 
  3076  0315                     	;# 
  3077  0316                     	;# 
  3078  0317                     	;# 
  3079  0318                     	;# 
  3080  0318                     	;# 
  3081  0319                     	;# 
  3082  031A                     	;# 
  3083  031B                     	;# 
  3084  031C                     	;# 
  3085  031C                     	;# 
  3086  031D                     	;# 
  3087  031E                     	;# 
  3088  031F                     	;# 
  3089  038C                     	;# 
  3090  038C                     	;# 
  3091  038D                     	;# 
  3092  038E                     	;# 
  3093  0390                     	;# 
  3094  0390                     	;# 
  3095  0391                     	;# 
  3096  0392                     	;# 
  3097  040C                     	;# 
  3098  040D                     	;# 
  3099  040E                     	;# 
  3100  040F                     	;# 
  3101  0410                     	;# 
  3102  0411                     	;# 
  3103  0416                     	;# 
  3104  0416                     	;# 
  3105  0417                     	;# 
  3106  0418                     	;# 
  3107  0418                     	;# 
  3108  0419                     	;# 
  3109  041A                     	;# 
  3110  041A                     	;# 
  3111  041B                     	;# 
  3112  041C                     	;# 
  3113  041C                     	;# 
  3114  041D                     	;# 
  3115  041E                     	;# 
  3116  041F                     	;# 
  3117  048C                     	;# 
  3118  048C                     	;# 
  3119  048D                     	;# 
  3120  048E                     	;# 
  3121  048F                     	;# 
  3122  048F                     	;# 
  3123  0490                     	;# 
  3124  0491                     	;# 
  3125  0492                     	;# 
  3126  0492                     	;# 
  3127  0493                     	;# 
  3128  0494                     	;# 
  3129  0495                     	;# 
  3130  0495                     	;# 
  3131  0496                     	;# 
  3132  0497                     	;# 
  3133  0498                     	;# 
  3134  0499                     	;# 
  3135  049A                     	;# 
  3136  049B                     	;# 
  3137  049C                     	;# 
  3138  049D                     	;# 
  3139  050C                     	;# 
  3140  050C                     	;# 
  3141  050D                     	;# 
  3142  050E                     	;# 
  3143  050F                     	;# 
  3144  050F                     	;# 
  3145  0510                     	;# 
  3146  0511                     	;# 
  3147  0512                     	;# 
  3148  0512                     	;# 
  3149  0513                     	;# 
  3150  0514                     	;# 
  3151  0515                     	;# 
  3152  0515                     	;# 
  3153  0516                     	;# 
  3154  0517                     	;# 
  3155  0518                     	;# 
  3156  0519                     	;# 
  3157  051A                     	;# 
  3158  051B                     	;# 
  3159  051C                     	;# 
  3160  051D                     	;# 
  3161  058C                     	;# 
  3162  058C                     	;# 
  3163  058D                     	;# 
  3164  058E                     	;# 
  3165  058F                     	;# 
  3166  058F                     	;# 
  3167  0590                     	;# 
  3168  0591                     	;# 
  3169  0592                     	;# 
  3170  0593                     	;# 
  3171  060C                     	;# 
  3172  060D                     	;# 
  3173  060E                     	;# 
  3174  060F                     	;# 
  3175  0610                     	;# 
  3176  0611                     	;# 
  3177  0612                     	;# 
  3178  0613                     	;# 
  3179  0614                     	;# 
  3180  0616                     	;# 
  3181  0617                     	;# 
  3182  0618                     	;# 
  3183  0619                     	;# 
  3184  061A                     	;# 
  3185  061B                     	;# 
  3186  061C                     	;# 
  3187  061D                     	;# 
  3188  061E                     	;# 
  3189  068C                     	;# 
  3190  068D                     	;# 
  3191  068E                     	;# 
  3192  068F                     	;# 
  3193  0690                     	;# 
  3194  0691                     	;# 
  3195  0692                     	;# 
  3196  0693                     	;# 
  3197  0694                     	;# 
  3198  070C                     	;# 
  3199  070D                     	;# 
  3200  070E                     	;# 
  3201  070F                     	;# 
  3202  0710                     	;# 
  3203  0711                     	;# 
  3204  0712                     	;# 
  3205  0713                     	;# 
  3206  0714                     	;# 
  3207  0716                     	;# 
  3208  0717                     	;# 
  3209  0718                     	;# 
  3210  0719                     	;# 
  3211  071A                     	;# 
  3212  071B                     	;# 
  3213  071C                     	;# 
  3214  071D                     	;# 
  3215  071E                     	;# 
  3216  0796                     	;# 
  3217  0797                     	;# 
  3218  0798                     	;# 
  3219  0799                     	;# 
  3220  079A                     	;# 
  3221  079B                     	;# 
  3222  080C                     	;# 
  3223  080D                     	;# 
  3224  080E                     	;# 
  3225  080F                     	;# 
  3226  0810                     	;# 
  3227  0811                     	;# 
  3228  0812                     	;# 
  3229  0813                     	;# 
  3230  0814                     	;# 
  3231  081A                     	;# 
  3232  081B                     	;# 
  3233  081C                     	;# 
  3234  081D                     	;# 
  3235  081E                     	;# 
  3236  081F                     	;# 
  3237  088C                     	;# 
  3238  088D                     	;# 
  3239  088E                     	;# 
  3240  088F                     	;# 
  3241  0890                     	;# 
  3242  0891                     	;# 
  3243  0892                     	;# 
  3244  0893                     	;# 
  3245  0895                     	;# 
  3246  0896                     	;# 
  3247  0897                     	;# 
  3248  0898                     	;# 
  3249  0899                     	;# 
  3250  089A                     	;# 
  3251  089B                     	;# 
  3252  090C                     	;# 
  3253  090E                     	;# 
  3254  090F                     	;# 
  3255  091F                     	;# 
  3256  091F                     	;# 
  3257  098F                     	;# 
  3258  098F                     	;# 
  3259  0990                     	;# 
  3260  0991                     	;# 
  3261  0992                     	;# 
  3262  0993                     	;# 
  3263  0994                     	;# 
  3264  0995                     	;# 
  3265  0996                     	;# 
  3266  0997                     	;# 
  3267  0E0F                     	;# 
  3268  0E10                     	;# 
  3269  0E11                     	;# 
  3270  0E12                     	;# 
  3271  0E13                     	;# 
  3272  0E14                     	;# 
  3273  0E15                     	;# 
  3274  0E16                     	;# 
  3275  0E17                     	;# 
  3276  0E18                     	;# 
  3277  0E19                     	;# 
  3278  0E1A                     	;# 
  3279  0E1B                     	;# 
  3280  0E1C                     	;# 
  3281  0E1D                     	;# 
  3282  0E1E                     	;# 
  3283  0E1F                     	;# 
  3284  0E20                     	;# 
  3285  0E21                     	;# 
  3286  0E22                     	;# 
  3287  0E23                     	;# 
  3288  0E24                     	;# 
  3289  0E25                     	;# 
  3290  0E26                     	;# 
  3291  0E27                     	;# 
  3292  0E28                     	;# 
  3293  0E29                     	;# 
  3294  0E2A                     	;# 
  3295  0E2B                     	;# 
  3296  0E2C                     	;# 
  3297  0E2D                     	;# 
  3298  0E2E                     	;# 
  3299  0E2F                     	;# 
  3300  0E30                     	;# 
  3301  0E31                     	;# 
  3302  0E32                     	;# 
  3303  0E33                     	;# 
  3304  0E34                     	;# 
  3305  0E35                     	;# 
  3306  0E36                     	;# 
  3307  0E37                     	;# 
  3308  0E8F                     	;# 
  3309  0E90                     	;# 
  3310  0E91                     	;# 
  3311  0E92                     	;# 
  3312  0E93                     	;# 
  3313  0E94                     	;# 
  3314  0E95                     	;# 
  3315  0E96                     	;# 
  3316  0E97                     	;# 
  3317  0E9C                     	;# 
  3318  0E9D                     	;# 
  3319  0E9E                     	;# 
  3320  0EA1                     	;# 
  3321  0EA2                     	;# 
  3322  0EA3                     	;# 
  3323  0EA4                     	;# 
  3324  0EA5                     	;# 
  3325  0EA9                     	;# 
  3326  0EAA                     	;# 
  3327  0EAB                     	;# 
  3328  0EAC                     	;# 
  3329  0EB1                     	;# 
  3330  0EB2                     	;# 
  3331  0EB3                     	;# 
  3332  0EB8                     	;# 
  3333  0EB9                     	;# 
  3334  0EBA                     	;# 
  3335  0EBB                     	;# 
  3336  0EBC                     	;# 
  3337  0EBD                     	;# 
  3338  0EBE                     	;# 
  3339  0EC3                     	;# 
  3340  0EC5                     	;# 
  3341  0EC6                     	;# 
  3342  0EC7                     	;# 
  3343  0EC8                     	;# 
  3344  0EC9                     	;# 
  3345  0ECA                     	;# 
  3346  0ECB                     	;# 
  3347  0ECC                     	;# 
  3348  0F10                     	;# 
  3349  0F11                     	;# 
  3350  0F12                     	;# 
  3351  0F13                     	;# 
  3352  0F14                     	;# 
  3353  0F15                     	;# 
  3354  0F16                     	;# 
  3355  0F17                     	;# 
  3356  0F18                     	;# 
  3357  0F19                     	;# 
  3358  0F1A                     	;# 
  3359  0F1B                     	;# 
  3360  0F1C                     	;# 
  3361  0F1D                     	;# 
  3362  0F1E                     	;# 
  3363  0F1F                     	;# 
  3364  0F20                     	;# 
  3365  0F21                     	;# 
  3366  0F22                     	;# 
  3367  0F23                     	;# 
  3368  0F24                     	;# 
  3369  0F25                     	;# 
  3370  0F26                     	;# 
  3371  0F27                     	;# 
  3372  0F28                     	;# 
  3373  0F29                     	;# 
  3374  0F2A                     	;# 
  3375  0F2B                     	;# 
  3376  0F2C                     	;# 
  3377  0F2D                     	;# 
  3378  0F2E                     	;# 
  3379  0F2F                     	;# 
  3380  0F30                     	;# 
  3381  0F31                     	;# 
  3382  0F32                     	;# 
  3383  0F38                     	;# 
  3384  0F39                     	;# 
  3385  0F3A                     	;# 
  3386  0F3B                     	;# 
  3387  0F3C                     	;# 
  3388  0F3D                     	;# 
  3389  0F3E                     	;# 
  3390  0F3F                     	;# 
  3391  0F40                     	;# 
  3392  0F41                     	;# 
  3393  0F43                     	;# 
  3394  0F44                     	;# 
  3395  0F45                     	;# 
  3396  0F46                     	;# 
  3397  0F47                     	;# 
  3398  0F48                     	;# 
  3399  0F49                     	;# 
  3400  0F4A                     	;# 
  3401  0F4B                     	;# 
  3402  0F4C                     	;# 
  3403  0F4E                     	;# 
  3404  0F4F                     	;# 
  3405  0F50                     	;# 
  3406  0F51                     	;# 
  3407  0F52                     	;# 
  3408  0F53                     	;# 
  3409  0F54                     	;# 
  3410  0F55                     	;# 
  3411  0F56                     	;# 
  3412  0F57                     	;# 
  3413  0F59                     	;# 
  3414  0F5A                     	;# 
  3415  0F5B                     	;# 
  3416  0F5C                     	;# 
  3417  0F5D                     	;# 
  3418  0F61                     	;# 
  3419  0F62                     	;# 
  3420  0F64                     	;# 
  3421  0F65                     	;# 
  3422  0F66                     	;# 
  3423  0F67                     	;# 
  3424  0F68                     	;# 
  3425  0F69                     	;# 
  3426  0F6A                     	;# 
  3427  0F6B                     	;# 
  3428  0F6C                     	;# 
  3429  0F6D                     	;# 
  3430  0FE4                     	;# 
  3431  0FE5                     	;# 
  3432  0FE6                     	;# 
  3433  0FE7                     	;# 
  3434  0FE8                     	;# 
  3435  0FE9                     	;# 
  3436  0FEA                     	;# 
  3437  0FEB                     	;# 
  3438  0FED                     	;# 
  3439  0FEE                     	;# 
  3440  0FEF                     	;# 
  3441  0000                     	;# 
  3442  0001                     	;# 
  3443  0002                     	;# 
  3444  0003                     	;# 
  3445  0004                     	;# 
  3446  0005                     	;# 
  3447  0006                     	;# 
  3448  0007                     	;# 
  3449  0008                     	;# 
  3450  0009                     	;# 
  3451  000A                     	;# 
  3452  000B                     	;# 
  3453  000C                     	;# 
  3454  000D                     	;# 
  3455  000E                     	;# 
  3456  000F                     	;# 
  3457  0010                     	;# 
  3458  0011                     	;# 
  3459  0012                     	;# 
  3460  0013                     	;# 
  3461  0014                     	;# 
  3462  0015                     	;# 
  3463  0016                     	;# 
  3464  0017                     	;# 
  3465  0018                     	;# 
  3466  0019                     	;# 
  3467  001A                     	;# 
  3468  001C                     	;# 
  3469  001C                     	;# 
  3470  001D                     	;# 
  3471  001D                     	;# 
  3472  001E                     	;# 
  3473  001F                     	;# 
  3474  008C                     	;# 
  3475  008C                     	;# 
  3476  008D                     	;# 
  3477  008E                     	;# 
  3478  008E                     	;# 
  3479  008F                     	;# 
  3480  0090                     	;# 
  3481  0090                     	;# 
  3482  0091                     	;# 
  3483  0093                     	;# 
  3484  0094                     	;# 
  3485  0095                     	;# 
  3486  0096                     	;# 
  3487  0097                     	;# 
  3488  0098                     	;# 
  3489  0099                     	;# 
  3490  009A                     	;# 
  3491  009B                     	;# 
  3492  009C                     	;# 
  3493  009D                     	;# 
  3494  009E                     	;# 
  3495  010C                     	;# 
  3496  010D                     	;# 
  3497  010E                     	;# 
  3498  010E                     	;# 
  3499  010F                     	;# 
  3500  0110                     	;# 
  3501  0110                     	;# 
  3502  0111                     	;# 
  3503  0112                     	;# 
  3504  0112                     	;# 
  3505  0113                     	;# 
  3506  0114                     	;# 
  3507  0114                     	;# 
  3508  0115                     	;# 
  3509  0116                     	;# 
  3510  0116                     	;# 
  3511  0117                     	;# 
  3512  0119                     	;# 
  3513  0119                     	;# 
  3514  0119                     	;# 
  3515  011A                     	;# 
  3516  011A                     	;# 
  3517  011A                     	;# 
  3518  011B                     	;# 
  3519  011B                     	;# 
  3520  011B                     	;# 
  3521  011B                     	;# 
  3522  011B                     	;# 
  3523  011C                     	;# 
  3524  011C                     	;# 
  3525  011C                     	;# 
  3526  011D                     	;# 
  3527  011D                     	;# 
  3528  011D                     	;# 
  3529  011E                     	;# 
  3530  011E                     	;# 
  3531  011E                     	;# 
  3532  011F                     	;# 
  3533  011F                     	;# 
  3534  011F                     	;# 
  3535  011F                     	;# 
  3536  011F                     	;# 
  3537  018C                     	;# 
  3538  018D                     	;# 
  3539  018E                     	;# 
  3540  018F                     	;# 
  3541  0190                     	;# 
  3542  0191                     	;# 
  3543  0192                     	;# 
  3544  0196                     	;# 
  3545  0197                     	;# 
  3546  0198                     	;# 
  3547  0199                     	;# 
  3548  019A                     	;# 
  3549  019B                     	;# 
  3550  019C                     	;# 
  3551  020C                     	;# 
  3552  020C                     	;# 
  3553  020D                     	;# 
  3554  020E                     	;# 
  3555  020F                     	;# 
  3556  020F                     	;# 
  3557  0210                     	;# 
  3558  0210                     	;# 
  3559  0211                     	;# 
  3560  0211                     	;# 
  3561  0212                     	;# 
  3562  0212                     	;# 
  3563  0213                     	;# 
  3564  0214                     	;# 
  3565  0215                     	;# 
  3566  0215                     	;# 
  3567  0216                     	;# 
  3568  0216                     	;# 
  3569  0217                     	;# 
  3570  0217                     	;# 
  3571  0218                     	;# 
  3572  0218                     	;# 
  3573  0219                     	;# 
  3574  021A                     	;# 
  3575  021B                     	;# 
  3576  021B                     	;# 
  3577  021C                     	;# 
  3578  021C                     	;# 
  3579  021D                     	;# 
  3580  021D                     	;# 
  3581  021E                     	;# 
  3582  021F                     	;# 
  3583  028C                     	;# 
  3584  028C                     	;# 
  3585  028D                     	;# 
  3586  028D                     	;# 
  3587  028E                     	;# 
  3588  028F                     	;# 
  3589  0290                     	;# 
  3590  0290                     	;# 
  3591  0291                     	;# 
  3592  0292                     	;# 
  3593  0292                     	;# 
  3594  0293                     	;# 
  3595  0293                     	;# 
  3596  0294                     	;# 
  3597  0295                     	;# 
  3598  0296                     	;# 
  3599  0296                     	;# 
  3600  0297                     	;# 
  3601  0298                     	;# 
  3602  0298                     	;# 
  3603  0299                     	;# 
  3604  0299                     	;# 
  3605  029A                     	;# 
  3606  029B                     	;# 
  3607  029C                     	;# 
  3608  029C                     	;# 
  3609  029D                     	;# 
  3610  030C                     	;# 
  3611  030C                     	;# 
  3612  030D                     	;# 
  3613  030E                     	;# 
  3614  030F                     	;# 
  3615  0310                     	;# 
  3616  0310                     	;# 
  3617  0311                     	;# 
  3618  0312                     	;# 
  3619  0313                     	;# 
  3620  0314                     	;# 
  3621  0314                     	;# 
  3622  0315                     	;# 
  3623  0316                     	;# 
  3624  0317                     	;# 
  3625  0318                     	;# 
  3626  0318                     	;# 
  3627  0319                     	;# 
  3628  031A                     	;# 
  3629  031B                     	;# 
  3630  031C                     	;# 
  3631  031C                     	;# 
  3632  031D                     	;# 
  3633  031E                     	;# 
  3634  031F                     	;# 
  3635  038C                     	;# 
  3636  038C                     	;# 
  3637  038D                     	;# 
  3638  038E                     	;# 
  3639  0390                     	;# 
  3640  0390                     	;# 
  3641  0391                     	;# 
  3642  0392                     	;# 
  3643  040C                     	;# 
  3644  040D                     	;# 
  3645  040E                     	;# 
  3646  040F                     	;# 
  3647  0410                     	;# 
  3648  0411                     	;# 
  3649  0416                     	;# 
  3650  0416                     	;# 
  3651  0417                     	;# 
  3652  0418                     	;# 
  3653  0418                     	;# 
  3654  0419                     	;# 
  3655  041A                     	;# 
  3656  041A                     	;# 
  3657  041B                     	;# 
  3658  041C                     	;# 
  3659  041C                     	;# 
  3660  041D                     	;# 
  3661  041E                     	;# 
  3662  041F                     	;# 
  3663  048C                     	;# 
  3664  048C                     	;# 
  3665  048D                     	;# 
  3666  048E                     	;# 
  3667  048F                     	;# 
  3668  048F                     	;# 
  3669  0490                     	;# 
  3670  0491                     	;# 
  3671  0492                     	;# 
  3672  0492                     	;# 
  3673  0493                     	;# 
  3674  0494                     	;# 
  3675  0495                     	;# 
  3676  0495                     	;# 
  3677  0496                     	;# 
  3678  0497                     	;# 
  3679  0498                     	;# 
  3680  0499                     	;# 
  3681  049A                     	;# 
  3682  049B                     	;# 
  3683  049C                     	;# 
  3684  049D                     	;# 
  3685  050C                     	;# 
  3686  050C                     	;# 
  3687  050D                     	;# 
  3688  050E                     	;# 
  3689  050F                     	;# 
  3690  050F                     	;# 
  3691  0510                     	;# 
  3692  0511                     	;# 
  3693  0512                     	;# 
  3694  0512                     	;# 
  3695  0513                     	;# 
  3696  0514                     	;# 
  3697  0515                     	;# 
  3698  0515                     	;# 
  3699  0516                     	;# 
  3700  0517                     	;# 
  3701  0518                     	;# 
  3702  0519                     	;# 
  3703  051A                     	;# 
  3704  051B                     	;# 
  3705  051C                     	;# 
  3706  051D                     	;# 
  3707  058C                     	;# 
  3708  058C                     	;# 
  3709  058D                     	;# 
  3710  058E                     	;# 
  3711  058F                     	;# 
  3712  058F                     	;# 
  3713  0590                     	;# 
  3714  0591                     	;# 
  3715  0592                     	;# 
  3716  0593                     	;# 
  3717  060C                     	;# 
  3718  060D                     	;# 
  3719  060E                     	;# 
  3720  060F                     	;# 
  3721  0610                     	;# 
  3722  0611                     	;# 
  3723  0612                     	;# 
  3724  0613                     	;# 
  3725  0614                     	;# 
  3726  0616                     	;# 
  3727  0617                     	;# 
  3728  0618                     	;# 
  3729  0619                     	;# 
  3730  061A                     	;# 
  3731  061B                     	;# 
  3732  061C                     	;# 
  3733  061D                     	;# 
  3734  061E                     	;# 
  3735  068C                     	;# 
  3736  068D                     	;# 
  3737  068E                     	;# 
  3738  068F                     	;# 
  3739  0690                     	;# 
  3740  0691                     	;# 
  3741  0692                     	;# 
  3742  0693                     	;# 
  3743  0694                     	;# 
  3744  070C                     	;# 
  3745  070D                     	;# 
  3746  070E                     	;# 
  3747  070F                     	;# 
  3748  0710                     	;# 
  3749  0711                     	;# 
  3750  0712                     	;# 
  3751  0713                     	;# 
  3752  0714                     	;# 
  3753  0716                     	;# 
  3754  0717                     	;# 
  3755  0718                     	;# 
  3756  0719                     	;# 
  3757  071A                     	;# 
  3758  071B                     	;# 
  3759  071C                     	;# 
  3760  071D                     	;# 
  3761  071E                     	;# 
  3762  0796                     	;# 
  3763  0797                     	;# 
  3764  0798                     	;# 
  3765  0799                     	;# 
  3766  079A                     	;# 
  3767  079B                     	;# 
  3768  080C                     	;# 
  3769  080D                     	;# 
  3770  080E                     	;# 
  3771  080F                     	;# 
  3772  0810                     	;# 
  3773  0811                     	;# 
  3774  0812                     	;# 
  3775  0813                     	;# 
  3776  0814                     	;# 
  3777  081A                     	;# 
  3778  081B                     	;# 
  3779  081C                     	;# 
  3780  081D                     	;# 
  3781  081E                     	;# 
  3782  081F                     	;# 
  3783  088C                     	;# 
  3784  088D                     	;# 
  3785  088E                     	;# 
  3786  088F                     	;# 
  3787  0890                     	;# 
  3788  0891                     	;# 
  3789  0892                     	;# 
  3790  0893                     	;# 
  3791  0895                     	;# 
  3792  0896                     	;# 
  3793  0897                     	;# 
  3794  0898                     	;# 
  3795  0899                     	;# 
  3796  089A                     	;# 
  3797  089B                     	;# 
  3798  090C                     	;# 
  3799  090E                     	;# 
  3800  090F                     	;# 
  3801  091F                     	;# 
  3802  091F                     	;# 
  3803  098F                     	;# 
  3804  098F                     	;# 
  3805  0990                     	;# 
  3806  0991                     	;# 
  3807  0992                     	;# 
  3808  0993                     	;# 
  3809  0994                     	;# 
  3810  0995                     	;# 
  3811  0996                     	;# 
  3812  0997                     	;# 
  3813  0E0F                     	;# 
  3814  0E10                     	;# 
  3815  0E11                     	;# 
  3816  0E12                     	;# 
  3817  0E13                     	;# 
  3818  0E14                     	;# 
  3819  0E15                     	;# 
  3820  0E16                     	;# 
  3821  0E17                     	;# 
  3822  0E18                     	;# 
  3823  0E19                     	;# 
  3824  0E1A                     	;# 
  3825  0E1B                     	;# 
  3826  0E1C                     	;# 
  3827  0E1D                     	;# 
  3828  0E1E                     	;# 
  3829  0E1F                     	;# 
  3830  0E20                     	;# 
  3831  0E21                     	;# 
  3832  0E22                     	;# 
  3833  0E23                     	;# 
  3834  0E24                     	;# 
  3835  0E25                     	;# 
  3836  0E26                     	;# 
  3837  0E27                     	;# 
  3838  0E28                     	;# 
  3839  0E29                     	;# 
  3840  0E2A                     	;# 
  3841  0E2B                     	;# 
  3842  0E2C                     	;# 
  3843  0E2D                     	;# 
  3844  0E2E                     	;# 
  3845  0E2F                     	;# 
  3846  0E30                     	;# 
  3847  0E31                     	;# 
  3848  0E32                     	;# 
  3849  0E33                     	;# 
  3850  0E34                     	;# 
  3851  0E35                     	;# 
  3852  0E36                     	;# 
  3853  0E37                     	;# 
  3854  0E8F                     	;# 
  3855  0E90                     	;# 
  3856  0E91                     	;# 
  3857  0E92                     	;# 
  3858  0E93                     	;# 
  3859  0E94                     	;# 
  3860  0E95                     	;# 
  3861  0E96                     	;# 
  3862  0E97                     	;# 
  3863  0E9C                     	;# 
  3864  0E9D                     	;# 
  3865  0E9E                     	;# 
  3866  0EA1                     	;# 
  3867  0EA2                     	;# 
  3868  0EA3                     	;# 
  3869  0EA4                     	;# 
  3870  0EA5                     	;# 
  3871  0EA9                     	;# 
  3872  0EAA                     	;# 
  3873  0EAB                     	;# 
  3874  0EAC                     	;# 
  3875  0EB1                     	;# 
  3876  0EB2                     	;# 
  3877  0EB3                     	;# 
  3878  0EB8                     	;# 
  3879  0EB9                     	;# 
  3880  0EBA                     	;# 
  3881  0EBB                     	;# 
  3882  0EBC                     	;# 
  3883  0EBD                     	;# 
  3884  0EBE                     	;# 
  3885  0EC3                     	;# 
  3886  0EC5                     	;# 
  3887  0EC6                     	;# 
  3888  0EC7                     	;# 
  3889  0EC8                     	;# 
  3890  0EC9                     	;# 
  3891  0ECA                     	;# 
  3892  0ECB                     	;# 
  3893  0ECC                     	;# 
  3894  0F10                     	;# 
  3895  0F11                     	;# 
  3896  0F12                     	;# 
  3897  0F13                     	;# 
  3898  0F14                     	;# 
  3899  0F15                     	;# 
  3900  0F16                     	;# 
  3901  0F17                     	;# 
  3902  0F18                     	;# 
  3903  0F19                     	;# 
  3904  0F1A                     	;# 
  3905  0F1B                     	;# 
  3906  0F1C                     	;# 
  3907  0F1D                     	;# 
  3908  0F1E                     	;# 
  3909  0F1F                     	;# 
  3910  0F20                     	;# 
  3911  0F21                     	;# 
  3912  0F22                     	;# 
  3913  0F23                     	;# 
  3914  0F24                     	;# 
  3915  0F25                     	;# 
  3916  0F26                     	;# 
  3917  0F27                     	;# 
  3918  0F28                     	;# 
  3919  0F29                     	;# 
  3920  0F2A                     	;# 
  3921  0F2B                     	;# 
  3922  0F2C                     	;# 
  3923  0F2D                     	;# 
  3924  0F2E                     	;# 
  3925  0F2F                     	;# 
  3926  0F30                     	;# 
  3927  0F31                     	;# 
  3928  0F32                     	;# 
  3929  0F38                     	;# 
  3930  0F39                     	;# 
  3931  0F3A                     	;# 
  3932  0F3B                     	;# 
  3933  0F3C                     	;# 
  3934  0F3D                     	;# 
  3935  0F3E                     	;# 
  3936  0F3F                     	;# 
  3937  0F40                     	;# 
  3938  0F41                     	;# 
  3939  0F43                     	;# 
  3940  0F44                     	;# 
  3941  0F45                     	;# 
  3942  0F46                     	;# 
  3943  0F47                     	;# 
  3944  0F48                     	;# 
  3945  0F49                     	;# 
  3946  0F4A                     	;# 
  3947  0F4B                     	;# 
  3948  0F4C                     	;# 
  3949  0F4E                     	;# 
  3950  0F4F                     	;# 
  3951  0F50                     	;# 
  3952  0F51                     	;# 
  3953  0F52                     	;# 
  3954  0F53                     	;# 
  3955  0F54                     	;# 
  3956  0F55                     	;# 
  3957  0F56                     	;# 
  3958  0F57                     	;# 
  3959  0F59                     	;# 
  3960  0F5A                     	;# 
  3961  0F5B                     	;# 
  3962  0F5C                     	;# 
  3963  0F5D                     	;# 
  3964  0F61                     	;# 
  3965  0F62                     	;# 
  3966  0F64                     	;# 
  3967  0F65                     	;# 
  3968  0F66                     	;# 
  3969  0F67                     	;# 
  3970  0F68                     	;# 
  3971  0F69                     	;# 
  3972  0F6A                     	;# 
  3973  0F6B                     	;# 
  3974  0F6C                     	;# 
  3975  0F6D                     	;# 
  3976  0FE4                     	;# 
  3977  0FE5                     	;# 
  3978  0FE6                     	;# 
  3979  0FE7                     	;# 
  3980  0FE8                     	;# 
  3981  0FE9                     	;# 
  3982  0FEA                     	;# 
  3983  0FEB                     	;# 
  3984  0FED                     	;# 
  3985  0FEE                     	;# 
  3986  0FEF                     	;# 
  3987  0000                     	;# 
  3988  0001                     	;# 
  3989  0002                     	;# 
  3990  0003                     	;# 
  3991  0004                     	;# 
  3992  0005                     	;# 
  3993  0006                     	;# 
  3994  0007                     	;# 
  3995  0008                     	;# 
  3996  0009                     	;# 
  3997  000A                     	;# 
  3998  000B                     	;# 
  3999  000C                     	;# 
  4000  000D                     	;# 
  4001  000E                     	;# 
  4002  000F                     	;# 
  4003  0010                     	;# 
  4004  0011                     	;# 
  4005  0012                     	;# 
  4006  0013                     	;# 
  4007  0014                     	;# 
  4008  0015                     	;# 
  4009  0016                     	;# 
  4010  0017                     	;# 
  4011  0018                     	;# 
  4012  0019                     	;# 
  4013  001A                     	;# 
  4014  001C                     	;# 
  4015  001C                     	;# 
  4016  001D                     	;# 
  4017  001D                     	;# 
  4018  001E                     	;# 
  4019  001F                     	;# 
  4020  008C                     	;# 
  4021  008C                     	;# 
  4022  008D                     	;# 
  4023  008E                     	;# 
  4024  008E                     	;# 
  4025  008F                     	;# 
  4026  0090                     	;# 
  4027  0090                     	;# 
  4028  0091                     	;# 
  4029  0093                     	;# 
  4030  0094                     	;# 
  4031  0095                     	;# 
  4032  0096                     	;# 
  4033  0097                     	;# 
  4034  0098                     	;# 
  4035  0099                     	;# 
  4036  009A                     	;# 
  4037  009B                     	;# 
  4038  009C                     	;# 
  4039  009D                     	;# 
  4040  009E                     	;# 
  4041  010C                     	;# 
  4042  010D                     	;# 
  4043  010E                     	;# 
  4044  010E                     	;# 
  4045  010F                     	;# 
  4046  0110                     	;# 
  4047  0110                     	;# 
  4048  0111                     	;# 
  4049  0112                     	;# 
  4050  0112                     	;# 
  4051  0113                     	;# 
  4052  0114                     	;# 
  4053  0114                     	;# 
  4054  0115                     	;# 
  4055  0116                     	;# 
  4056  0116                     	;# 
  4057  0117                     	;# 
  4058  0119                     	;# 
  4059  0119                     	;# 
  4060  0119                     	;# 
  4061  011A                     	;# 
  4062  011A                     	;# 
  4063  011A                     	;# 
  4064  011B                     	;# 
  4065  011B                     	;# 
  4066  011B                     	;# 
  4067  011B                     	;# 
  4068  011B                     	;# 
  4069  011C                     	;# 
  4070  011C                     	;# 
  4071  011C                     	;# 
  4072  011D                     	;# 
  4073  011D                     	;# 
  4074  011D                     	;# 
  4075  011E                     	;# 
  4076  011E                     	;# 
  4077  011E                     	;# 
  4078  011F                     	;# 
  4079  011F                     	;# 
  4080  011F                     	;# 
  4081  011F                     	;# 
  4082  011F                     	;# 
  4083  018C                     	;# 
  4084  018D                     	;# 
  4085  018E                     	;# 
  4086  018F                     	;# 
  4087  0190                     	;# 
  4088  0191                     	;# 
  4089  0192                     	;# 
  4090  0196                     	;# 
  4091  0197                     	;# 
  4092  0198                     	;# 
  4093  0199                     	;# 
  4094  019A                     	;# 
  4095  019B                     	;# 
  4096  019C                     	;# 
  4097  020C                     	;# 
  4098  020C                     	;# 
  4099  020D                     	;# 
  4100  020E                     	;# 
  4101  020F                     	;# 
  4102  020F                     	;# 
  4103  0210                     	;# 
  4104  0210                     	;# 
  4105  0211                     	;# 
  4106  0211                     	;# 
  4107  0212                     	;# 
  4108  0212                     	;# 
  4109  0213                     	;# 
  4110  0214                     	;# 
  4111  0215                     	;# 
  4112  0215                     	;# 
  4113  0216                     	;# 
  4114  0216                     	;# 
  4115  0217                     	;# 
  4116  0217                     	;# 
  4117  0218                     	;# 
  4118  0218                     	;# 
  4119  0219                     	;# 
  4120  021A                     	;# 
  4121  021B                     	;# 
  4122  021B                     	;# 
  4123  021C                     	;# 
  4124  021C                     	;# 
  4125  021D                     	;# 
  4126  021D                     	;# 
  4127  021E                     	;# 
  4128  021F                     	;# 
  4129  028C                     	;# 
  4130  028C                     	;# 
  4131  028D                     	;# 
  4132  028D                     	;# 
  4133  028E                     	;# 
  4134  028F                     	;# 
  4135  0290                     	;# 
  4136  0290                     	;# 
  4137  0291                     	;# 
  4138  0292                     	;# 
  4139  0292                     	;# 
  4140  0293                     	;# 
  4141  0293                     	;# 
  4142  0294                     	;# 
  4143  0295                     	;# 
  4144  0296                     	;# 
  4145  0296                     	;# 
  4146  0297                     	;# 
  4147  0298                     	;# 
  4148  0298                     	;# 
  4149  0299                     	;# 
  4150  0299                     	;# 
  4151  029A                     	;# 
  4152  029B                     	;# 
  4153  029C                     	;# 
  4154  029C                     	;# 
  4155  029D                     	;# 
  4156  030C                     	;# 
  4157  030C                     	;# 
  4158  030D                     	;# 
  4159  030E                     	;# 
  4160  030F                     	;# 
  4161  0310                     	;# 
  4162  0310                     	;# 
  4163  0311                     	;# 
  4164  0312                     	;# 
  4165  0313                     	;# 
  4166  0314                     	;# 
  4167  0314                     	;# 
  4168  0315                     	;# 
  4169  0316                     	;# 
  4170  0317                     	;# 
  4171  0318                     	;# 
  4172  0318                     	;# 
  4173  0319                     	;# 
  4174  031A                     	;# 
  4175  031B                     	;# 
  4176  031C                     	;# 
  4177  031C                     	;# 
  4178  031D                     	;# 
  4179  031E                     	;# 
  4180  031F                     	;# 
  4181  038C                     	;# 
  4182  038C                     	;# 
  4183  038D                     	;# 
  4184  038E                     	;# 
  4185  0390                     	;# 
  4186  0390                     	;# 
  4187  0391                     	;# 
  4188  0392                     	;# 
  4189  040C                     	;# 
  4190  040D                     	;# 
  4191  040E                     	;# 
  4192  040F                     	;# 
  4193  0410                     	;# 
  4194  0411                     	;# 
  4195  0416                     	;# 
  4196  0416                     	;# 
  4197  0417                     	;# 
  4198  0418                     	;# 
  4199  0418                     	;# 
  4200  0419                     	;# 
  4201  041A                     	;# 
  4202  041A                     	;# 
  4203  041B                     	;# 
  4204  041C                     	;# 
  4205  041C                     	;# 
  4206  041D                     	;# 
  4207  041E                     	;# 
  4208  041F                     	;# 
  4209  048C                     	;# 
  4210  048C                     	;# 
  4211  048D                     	;# 
  4212  048E                     	;# 
  4213  048F                     	;# 
  4214  048F                     	;# 
  4215  0490                     	;# 
  4216  0491                     	;# 
  4217  0492                     	;# 
  4218  0492                     	;# 
  4219  0493                     	;# 
  4220  0494                     	;# 
  4221  0495                     	;# 
  4222  0495                     	;# 
  4223  0496                     	;# 
  4224  0497                     	;# 
  4225  0498                     	;# 
  4226  0499                     	;# 
  4227  049A                     	;# 
  4228  049B                     	;# 
  4229  049C                     	;# 
  4230  049D                     	;# 
  4231  050C                     	;# 
  4232  050C                     	;# 
  4233  050D                     	;# 
  4234  050E                     	;# 
  4235  050F                     	;# 
  4236  050F                     	;# 
  4237  0510                     	;# 
  4238  0511                     	;# 
  4239  0512                     	;# 
  4240  0512                     	;# 
  4241  0513                     	;# 
  4242  0514                     	;# 
  4243  0515                     	;# 
  4244  0515                     	;# 
  4245  0516                     	;# 
  4246  0517                     	;# 
  4247  0518                     	;# 
  4248  0519                     	;# 
  4249  051A                     	;# 
  4250  051B                     	;# 
  4251  051C                     	;# 
  4252  051D                     	;# 
  4253  058C                     	;# 
  4254  058C                     	;# 
  4255  058D                     	;# 
  4256  058E                     	;# 
  4257  058F                     	;# 
  4258  058F                     	;# 
  4259  0590                     	;# 
  4260  0591                     	;# 
  4261  0592                     	;# 
  4262  0593                     	;# 
  4263  060C                     	;# 
  4264  060D                     	;# 
  4265  060E                     	;# 
  4266  060F                     	;# 
  4267  0610                     	;# 
  4268  0611                     	;# 
  4269  0612                     	;# 
  4270  0613                     	;# 
  4271  0614                     	;# 
  4272  0616                     	;# 
  4273  0617                     	;# 
  4274  0618                     	;# 
  4275  0619                     	;# 
  4276  061A                     	;# 
  4277  061B                     	;# 
  4278  061C                     	;# 
  4279  061D                     	;# 
  4280  061E                     	;# 
  4281  068C                     	;# 
  4282  068D                     	;# 
  4283  068E                     	;# 
  4284  068F                     	;# 
  4285  0690                     	;# 
  4286  0691                     	;# 
  4287  0692                     	;# 
  4288  0693                     	;# 
  4289  0694                     	;# 
  4290  070C                     	;# 
  4291  070D                     	;# 
  4292  070E                     	;# 
  4293  070F                     	;# 
  4294  0710                     	;# 
  4295  0711                     	;# 
  4296  0712                     	;# 
  4297  0713                     	;# 
  4298  0714                     	;# 
  4299  0716                     	;# 
  4300  0717                     	;# 
  4301  0718                     	;# 
  4302  0719                     	;# 
  4303  071A                     	;# 
  4304  071B                     	;# 
  4305  071C                     	;# 
  4306  071D                     	;# 
  4307  071E                     	;# 
  4308  0796                     	;# 
  4309  0797                     	;# 
  4310  0798                     	;# 
  4311  0799                     	;# 
  4312  079A                     	;# 
  4313  079B                     	;# 
  4314  080C                     	;# 
  4315  080D                     	;# 
  4316  080E                     	;# 
  4317  080F                     	;# 
  4318  0810                     	;# 
  4319  0811                     	;# 
  4320  0812                     	;# 
  4321  0813                     	;# 
  4322  0814                     	;# 
  4323  081A                     	;# 
  4324  081B                     	;# 
  4325  081C                     	;# 
  4326  081D                     	;# 
  4327  081E                     	;# 
  4328  081F                     	;# 
  4329  088C                     	;# 
  4330  088D                     	;# 
  4331  088E                     	;# 
  4332  088F                     	;# 
  4333  0890                     	;# 
  4334  0891                     	;# 
  4335  0892                     	;# 
  4336  0893                     	;# 
  4337  0895                     	;# 
  4338  0896                     	;# 
  4339  0897                     	;# 
  4340  0898                     	;# 
  4341  0899                     	;# 
  4342  089A                     	;# 
  4343  089B                     	;# 
  4344  090C                     	;# 
  4345  090E                     	;# 
  4346  090F                     	;# 
  4347  091F                     	;# 
  4348  091F                     	;# 
  4349  098F                     	;# 
  4350  098F                     	;# 
  4351  0990                     	;# 
  4352  0991                     	;# 
  4353  0992                     	;# 
  4354  0993                     	;# 
  4355  0994                     	;# 
  4356  0995                     	;# 
  4357  0996                     	;# 
  4358  0997                     	;# 
  4359  0E0F                     	;# 
  4360  0E10                     	;# 
  4361  0E11                     	;# 
  4362  0E12                     	;# 
  4363  0E13                     	;# 
  4364  0E14                     	;# 
  4365  0E15                     	;# 
  4366  0E16                     	;# 
  4367  0E17                     	;# 
  4368  0E18                     	;# 
  4369  0E19                     	;# 
  4370  0E1A                     	;# 
  4371  0E1B                     	;# 
  4372  0E1C                     	;# 
  4373  0E1D                     	;# 
  4374  0E1E                     	;# 
  4375  0E1F                     	;# 
  4376  0E20                     	;# 
  4377  0E21                     	;# 
  4378  0E22                     	;# 
  4379  0E23                     	;# 
  4380  0E24                     	;# 
  4381  0E25                     	;# 
  4382  0E26                     	;# 
  4383  0E27                     	;# 
  4384  0E28                     	;# 
  4385  0E29                     	;# 
  4386  0E2A                     	;# 
  4387  0E2B                     	;# 
  4388  0E2C                     	;# 
  4389  0E2D                     	;# 
  4390  0E2E                     	;# 
  4391  0E2F                     	;# 
  4392  0E30                     	;# 
  4393  0E31                     	;# 
  4394  0E32                     	;# 
  4395  0E33                     	;# 
  4396  0E34                     	;# 
  4397  0E35                     	;# 
  4398  0E36                     	;# 
  4399  0E37                     	;# 
  4400  0E8F                     	;# 
  4401  0E90                     	;# 
  4402  0E91                     	;# 
  4403  0E92                     	;# 
  4404  0E93                     	;# 
  4405  0E94                     	;# 
  4406  0E95                     	;# 
  4407  0E96                     	;# 
  4408  0E97                     	;# 
  4409  0E9C                     	;# 
  4410  0E9D                     	;# 
  4411  0E9E                     	;# 
  4412  0EA1                     	;# 
  4413  0EA2                     	;# 
  4414  0EA3                     	;# 
  4415  0EA4                     	;# 
  4416  0EA5                     	;# 
  4417  0EA9                     	;# 
  4418  0EAA                     	;# 
  4419  0EAB                     	;# 
  4420  0EAC                     	;# 
  4421  0EB1                     	;# 
  4422  0EB2                     	;# 
  4423  0EB3                     	;# 
  4424  0EB8                     	;# 
  4425  0EB9                     	;# 
  4426  0EBA                     	;# 
  4427  0EBB                     	;# 
  4428  0EBC                     	;# 
  4429  0EBD                     	;# 
  4430  0EBE                     	;# 
  4431  0EC3                     	;# 
  4432  0EC5                     	;# 
  4433  0EC6                     	;# 
  4434  0EC7                     	;# 
  4435  0EC8                     	;# 
  4436  0EC9                     	;# 
  4437  0ECA                     	;# 
  4438  0ECB                     	;# 
  4439  0ECC                     	;# 
  4440  0F10                     	;# 
  4441  0F11                     	;# 
  4442  0F12                     	;# 
  4443  0F13                     	;# 
  4444  0F14                     	;# 
  4445  0F15                     	;# 
  4446  0F16                     	;# 
  4447  0F17                     	;# 
  4448  0F18                     	;# 
  4449  0F19                     	;# 
  4450  0F1A                     	;# 
  4451  0F1B                     	;# 
  4452  0F1C                     	;# 
  4453  0F1D                     	;# 
  4454  0F1E                     	;# 
  4455  0F1F                     	;# 
  4456  0F20                     	;# 
  4457  0F21                     	;# 
  4458  0F22                     	;# 
  4459  0F23                     	;# 
  4460  0F24                     	;# 
  4461  0F25                     	;# 
  4462  0F26                     	;# 
  4463  0F27                     	;# 
  4464  0F28                     	;# 
  4465  0F29                     	;# 
  4466  0F2A                     	;# 
  4467  0F2B                     	;# 
  4468  0F2C                     	;# 
  4469  0F2D                     	;# 
  4470  0F2E                     	;# 
  4471  0F2F                     	;# 
  4472  0F30                     	;# 
  4473  0F31                     	;# 
  4474  0F32                     	;# 
  4475  0F38                     	;# 
  4476  0F39                     	;# 
  4477  0F3A                     	;# 
  4478  0F3B                     	;# 
  4479  0F3C                     	;# 
  4480  0F3D                     	;# 
  4481  0F3E                     	;# 
  4482  0F3F                     	;# 
  4483  0F40                     	;# 
  4484  0F41                     	;# 
  4485  0F43                     	;# 
  4486  0F44                     	;# 
  4487  0F45                     	;# 
  4488  0F46                     	;# 
  4489  0F47                     	;# 
  4490  0F48                     	;# 
  4491  0F49                     	;# 
  4492  0F4A                     	;# 
  4493  0F4B                     	;# 
  4494  0F4C                     	;# 
  4495  0F4E                     	;# 
  4496  0F4F                     	;# 
  4497  0F50                     	;# 
  4498  0F51                     	;# 
  4499  0F52                     	;# 
  4500  0F53                     	;# 
  4501  0F54                     	;# 
  4502  0F55                     	;# 
  4503  0F56                     	;# 
  4504  0F57                     	;# 
  4505  0F59                     	;# 
  4506  0F5A                     	;# 
  4507  0F5B                     	;# 
  4508  0F5C                     	;# 
  4509  0F5D                     	;# 
  4510  0F61                     	;# 
  4511  0F62                     	;# 
  4512  0F64                     	;# 
  4513  0F65                     	;# 
  4514  0F66                     	;# 
  4515  0F67                     	;# 
  4516  0F68                     	;# 
  4517  0F69                     	;# 
  4518  0F6A                     	;# 
  4519  0F6B                     	;# 
  4520  0F6C                     	;# 
  4521  0F6D                     	;# 
  4522  0FE4                     	;# 
  4523  0FE5                     	;# 
  4524  0FE6                     	;# 
  4525  0FE7                     	;# 
  4526  0FE8                     	;# 
  4527  0FE9                     	;# 
  4528  0FEA                     	;# 
  4529  0FEB                     	;# 
  4530  0FED                     	;# 
  4531  0FEE                     	;# 
  4532  0FEF                     	;# 
  4533  0000                     	;# 
  4534  0001                     	;# 
  4535  0002                     	;# 
  4536  0003                     	;# 
  4537  0004                     	;# 
  4538  0005                     	;# 
  4539  0006                     	;# 
  4540  0007                     	;# 
  4541  0008                     	;# 
  4542  0009                     	;# 
  4543  000A                     	;# 
  4544  000B                     	;# 
  4545  000C                     	;# 
  4546  000D                     	;# 
  4547  000E                     	;# 
  4548  000F                     	;# 
  4549  0010                     	;# 
  4550  0011                     	;# 
  4551  0012                     	;# 
  4552  0013                     	;# 
  4553  0014                     	;# 
  4554  0015                     	;# 
  4555  0016                     	;# 
  4556  0017                     	;# 
  4557  0018                     	;# 
  4558  0019                     	;# 
  4559  001A                     	;# 
  4560  001C                     	;# 
  4561  001C                     	;# 
  4562  001D                     	;# 
  4563  001D                     	;# 
  4564  001E                     	;# 
  4565  001F                     	;# 
  4566  008C                     	;# 
  4567  008C                     	;# 
  4568  008D                     	;# 
  4569  008E                     	;# 
  4570  008E                     	;# 
  4571  008F                     	;# 
  4572  0090                     	;# 
  4573  0090                     	;# 
  4574  0091                     	;# 
  4575  0093                     	;# 
  4576  0094                     	;# 
  4577  0095                     	;# 
  4578  0096                     	;# 
  4579  0097                     	;# 
  4580  0098                     	;# 
  4581  0099                     	;# 
  4582  009A                     	;# 
  4583  009B                     	;# 
  4584  009C                     	;# 
  4585  009D                     	;# 
  4586  009E                     	;# 
  4587  010C                     	;# 
  4588  010D                     	;# 
  4589  010E                     	;# 
  4590  010E                     	;# 
  4591  010F                     	;# 
  4592  0110                     	;# 
  4593  0110                     	;# 
  4594  0111                     	;# 
  4595  0112                     	;# 
  4596  0112                     	;# 
  4597  0113                     	;# 
  4598  0114                     	;# 
  4599  0114                     	;# 
  4600  0115                     	;# 
  4601  0116                     	;# 
  4602  0116                     	;# 
  4603  0117                     	;# 
  4604  0119                     	;# 
  4605  0119                     	;# 
  4606  0119                     	;# 
  4607  011A                     	;# 
  4608  011A                     	;# 
  4609  011A                     	;# 
  4610  011B                     	;# 
  4611  011B                     	;# 
  4612  011B                     	;# 
  4613  011B                     	;# 
  4614  011B                     	;# 
  4615  011C                     	;# 
  4616  011C                     	;# 
  4617  011C                     	;# 
  4618  011D                     	;# 
  4619  011D                     	;# 
  4620  011D                     	;# 
  4621  011E                     	;# 
  4622  011E                     	;# 
  4623  011E                     	;# 
  4624  011F                     	;# 
  4625  011F                     	;# 
  4626  011F                     	;# 
  4627  011F                     	;# 
  4628  011F                     	;# 
  4629  018C                     	;# 
  4630  018D                     	;# 
  4631  018E                     	;# 
  4632  018F                     	;# 
  4633  0190                     	;# 
  4634  0191                     	;# 
  4635  0192                     	;# 
  4636  0196                     	;# 
  4637  0197                     	;# 
  4638  0198                     	;# 
  4639  0199                     	;# 
  4640  019A                     	;# 
  4641  019B                     	;# 
  4642  019C                     	;# 
  4643  020C                     	;# 
  4644  020C                     	;# 
  4645  020D                     	;# 
  4646  020E                     	;# 
  4647  020F                     	;# 
  4648  020F                     	;# 
  4649  0210                     	;# 
  4650  0210                     	;# 
  4651  0211                     	;# 
  4652  0211                     	;# 
  4653  0212                     	;# 
  4654  0212                     	;# 
  4655  0213                     	;# 
  4656  0214                     	;# 
  4657  0215                     	;# 
  4658  0215                     	;# 
  4659  0216                     	;# 
  4660  0216                     	;# 
  4661  0217                     	;# 
  4662  0217                     	;# 
  4663  0218                     	;# 
  4664  0218                     	;# 
  4665  0219                     	;# 
  4666  021A                     	;# 
  4667  021B                     	;# 
  4668  021B                     	;# 
  4669  021C                     	;# 
  4670  021C                     	;# 
  4671  021D                     	;# 
  4672  021D                     	;# 
  4673  021E                     	;# 
  4674  021F                     	;# 
  4675  028C                     	;# 
  4676  028C                     	;# 
  4677  028D                     	;# 
  4678  028D                     	;# 
  4679  028E                     	;# 
  4680  028F                     	;# 
  4681  0290                     	;# 
  4682  0290                     	;# 
  4683  0291                     	;# 
  4684  0292                     	;# 
  4685  0292                     	;# 
  4686  0293                     	;# 
  4687  0293                     	;# 
  4688  0294                     	;# 
  4689  0295                     	;# 
  4690  0296                     	;# 
  4691  0296                     	;# 
  4692  0297                     	;# 
  4693  0298                     	;# 
  4694  0298                     	;# 
  4695  0299                     	;# 
  4696  0299                     	;# 
  4697  029A                     	;# 
  4698  029B                     	;# 
  4699  029C                     	;# 
  4700  029C                     	;# 
  4701  029D                     	;# 
  4702  030C                     	;# 
  4703  030C                     	;# 
  4704  030D                     	;# 
  4705  030E                     	;# 
  4706  030F                     	;# 
  4707  0310                     	;# 
  4708  0310                     	;# 
  4709  0311                     	;# 
  4710  0312                     	;# 
  4711  0313                     	;# 
  4712  0314                     	;# 
  4713  0314                     	;# 
  4714  0315                     	;# 
  4715  0316                     	;# 
  4716  0317                     	;# 
  4717  0318                     	;# 
  4718  0318                     	;# 
  4719  0319                     	;# 
  4720  031A                     	;# 
  4721  031B                     	;# 
  4722  031C                     	;# 
  4723  031C                     	;# 
  4724  031D                     	;# 
  4725  031E                     	;# 
  4726  031F                     	;# 
  4727  038C                     	;# 
  4728  038C                     	;# 
  4729  038D                     	;# 
  4730  038E                     	;# 
  4731  0390                     	;# 
  4732  0390                     	;# 
  4733  0391                     	;# 
  4734  0392                     	;# 
  4735  040C                     	;# 
  4736  040D                     	;# 
  4737  040E                     	;# 
  4738  040F                     	;# 
  4739  0410                     	;# 
  4740  0411                     	;# 
  4741  0416                     	;# 
  4742  0416                     	;# 
  4743  0417                     	;# 
  4744  0418                     	;# 
  4745  0418                     	;# 
  4746  0419                     	;# 
  4747  041A                     	;# 
  4748  041A                     	;# 
  4749  041B                     	;# 
  4750  041C                     	;# 
  4751  041C                     	;# 
  4752  041D                     	;# 
  4753  041E                     	;# 
  4754  041F                     	;# 
  4755  048C                     	;# 
  4756  048C                     	;# 
  4757  048D                     	;# 
  4758  048E                     	;# 
  4759  048F                     	;# 
  4760  048F                     	;# 
  4761  0490                     	;# 
  4762  0491                     	;# 
  4763  0492                     	;# 
  4764  0492                     	;# 
  4765  0493                     	;# 
  4766  0494                     	;# 
  4767  0495                     	;# 
  4768  0495                     	;# 
  4769  0496                     	;# 
  4770  0497                     	;# 
  4771  0498                     	;# 
  4772  0499                     	;# 
  4773  049A                     	;# 
  4774  049B                     	;# 
  4775  049C                     	;# 
  4776  049D                     	;# 
  4777  050C                     	;# 
  4778  050C                     	;# 
  4779  050D                     	;# 
  4780  050E                     	;# 
  4781  050F                     	;# 
  4782  050F                     	;# 
  4783  0510                     	;# 
  4784  0511                     	;# 
  4785  0512                     	;# 
  4786  0512                     	;# 
  4787  0513                     	;# 
  4788  0514                     	;# 
  4789  0515                     	;# 
  4790  0515                     	;# 
  4791  0516                     	;# 
  4792  0517                     	;# 
  4793  0518                     	;# 
  4794  0519                     	;# 
  4795  051A                     	;# 
  4796  051B                     	;# 
  4797  051C                     	;# 
  4798  051D                     	;# 
  4799  058C                     	;# 
  4800  058C                     	;# 
  4801  058D                     	;# 
  4802  058E                     	;# 
  4803  058F                     	;# 
  4804  058F                     	;# 
  4805  0590                     	;# 
  4806  0591                     	;# 
  4807  0592                     	;# 
  4808  0593                     	;# 
  4809  060C                     	;# 
  4810  060D                     	;# 
  4811  060E                     	;# 
  4812  060F                     	;# 
  4813  0610                     	;# 
  4814  0611                     	;# 
  4815  0612                     	;# 
  4816  0613                     	;# 
  4817  0614                     	;# 
  4818  0616                     	;# 
  4819  0617                     	;# 
  4820  0618                     	;# 
  4821  0619                     	;# 
  4822  061A                     	;# 
  4823  061B                     	;# 
  4824  061C                     	;# 
  4825  061D                     	;# 
  4826  061E                     	;# 
  4827  068C                     	;# 
  4828  068D                     	;# 
  4829  068E                     	;# 
  4830  068F                     	;# 
  4831  0690                     	;# 
  4832  0691                     	;# 
  4833  0692                     	;# 
  4834  0693                     	;# 
  4835  0694                     	;# 
  4836  070C                     	;# 
  4837  070D                     	;# 
  4838  070E                     	;# 
  4839  070F                     	;# 
  4840  0710                     	;# 
  4841  0711                     	;# 
  4842  0712                     	;# 
  4843  0713                     	;# 
  4844  0714                     	;# 
  4845  0716                     	;# 
  4846  0717                     	;# 
  4847  0718                     	;# 
  4848  0719                     	;# 
  4849  071A                     	;# 
  4850  071B                     	;# 
  4851  071C                     	;# 
  4852  071D                     	;# 
  4853  071E                     	;# 
  4854  0796                     	;# 
  4855  0797                     	;# 
  4856  0798                     	;# 
  4857  0799                     	;# 
  4858  079A                     	;# 
  4859  079B                     	;# 
  4860  080C                     	;# 
  4861  080D                     	;# 
  4862  080E                     	;# 
  4863  080F                     	;# 
  4864  0810                     	;# 
  4865  0811                     	;# 
  4866  0812                     	;# 
  4867  0813                     	;# 
  4868  0814                     	;# 
  4869  081A                     	;# 
  4870  081B                     	;# 
  4871  081C                     	;# 
  4872  081D                     	;# 
  4873  081E                     	;# 
  4874  081F                     	;# 
  4875  088C                     	;# 
  4876  088D                     	;# 
  4877  088E                     	;# 
  4878  088F                     	;# 
  4879  0890                     	;# 
  4880  0891                     	;# 
  4881  0892                     	;# 
  4882  0893                     	;# 
  4883  0895                     	;# 
  4884  0896                     	;# 
  4885  0897                     	;# 
  4886  0898                     	;# 
  4887  0899                     	;# 
  4888  089A                     	;# 
  4889  089B                     	;# 
  4890  090C                     	;# 
  4891  090E                     	;# 
  4892  090F                     	;# 
  4893  091F                     	;# 
  4894  091F                     	;# 
  4895  098F                     	;# 
  4896  098F                     	;# 
  4897  0990                     	;# 
  4898  0991                     	;# 
  4899  0992                     	;# 
  4900  0993                     	;# 
  4901  0994                     	;# 
  4902  0995                     	;# 
  4903  0996                     	;# 
  4904  0997                     	;# 
  4905  0E0F                     	;# 
  4906  0E10                     	;# 
  4907  0E11                     	;# 
  4908  0E12                     	;# 
  4909  0E13                     	;# 
  4910  0E14                     	;# 
  4911  0E15                     	;# 
  4912  0E16                     	;# 
  4913  0E17                     	;# 
  4914  0E18                     	;# 
  4915  0E19                     	;# 
  4916  0E1A                     	;# 
  4917  0E1B                     	;# 
  4918  0E1C                     	;# 
  4919  0E1D                     	;# 
  4920  0E1E                     	;# 
  4921  0E1F                     	;# 
  4922  0E20                     	;# 
  4923  0E21                     	;# 
  4924  0E22                     	;# 
  4925  0E23                     	;# 
  4926  0E24                     	;# 
  4927  0E25                     	;# 
  4928  0E26                     	;# 
  4929  0E27                     	;# 
  4930  0E28                     	;# 
  4931  0E29                     	;# 
  4932  0E2A                     	;# 
  4933  0E2B                     	;# 
  4934  0E2C                     	;# 
  4935  0E2D                     	;# 
  4936  0E2E                     	;# 
  4937  0E2F                     	;# 
  4938  0E30                     	;# 
  4939  0E31                     	;# 
  4940  0E32                     	;# 
  4941  0E33                     	;# 
  4942  0E34                     	;# 
  4943  0E35                     	;# 
  4944  0E36                     	;# 
  4945  0E37                     	;# 
  4946  0E8F                     	;# 
  4947  0E90                     	;# 
  4948  0E91                     	;# 
  4949  0E92                     	;# 
  4950  0E93                     	;# 
  4951  0E94                     	;# 
  4952  0E95                     	;# 
  4953  0E96                     	;# 
  4954  0E97                     	;# 
  4955  0E9C                     	;# 
  4956  0E9D                     	;# 
  4957  0E9E                     	;# 
  4958  0EA1                     	;# 
  4959  0EA2                     	;# 
  4960  0EA3                     	;# 
  4961  0EA4                     	;# 
  4962  0EA5                     	;# 
  4963  0EA9                     	;# 
  4964  0EAA                     	;# 
  4965  0EAB                     	;# 
  4966  0EAC                     	;# 
  4967  0EB1                     	;# 
  4968  0EB2                     	;# 
  4969  0EB3                     	;# 
  4970  0EB8                     	;# 
  4971  0EB9                     	;# 
  4972  0EBA                     	;# 
  4973  0EBB                     	;# 
  4974  0EBC                     	;# 
  4975  0EBD                     	;# 
  4976  0EBE                     	;# 
  4977  0EC3                     	;# 
  4978  0EC5                     	;# 
  4979  0EC6                     	;# 
  4980  0EC7                     	;# 
  4981  0EC8                     	;# 
  4982  0EC9                     	;# 
  4983  0ECA                     	;# 
  4984  0ECB                     	;# 
  4985  0ECC                     	;# 
  4986  0F10                     	;# 
  4987  0F11                     	;# 
  4988  0F12                     	;# 
  4989  0F13                     	;# 
  4990  0F14                     	;# 
  4991  0F15                     	;# 
  4992  0F16                     	;# 
  4993  0F17                     	;# 
  4994  0F18                     	;# 
  4995  0F19                     	;# 
  4996  0F1A                     	;# 
  4997  0F1B                     	;# 
  4998  0F1C                     	;# 
  4999  0F1D                     	;# 
  5000  0F1E                     	;# 
  5001  0F1F                     	;# 
  5002  0F20                     	;# 
  5003  0F21                     	;# 
  5004  0F22                     	;# 
  5005  0F23                     	;# 
  5006  0F24                     	;# 
  5007  0F25                     	;# 
  5008  0F26                     	;# 
  5009  0F27                     	;# 
  5010  0F28                     	;# 
  5011  0F29                     	;# 
  5012  0F2A                     	;# 
  5013  0F2B                     	;# 
  5014  0F2C                     	;# 
  5015  0F2D                     	;# 
  5016  0F2E                     	;# 
  5017  0F2F                     	;# 
  5018  0F30                     	;# 
  5019  0F31                     	;# 
  5020  0F32                     	;# 
  5021  0F38                     	;# 
  5022  0F39                     	;# 
  5023  0F3A                     	;# 
  5024  0F3B                     	;# 
  5025  0F3C                     	;# 
  5026  0F3D                     	;# 
  5027  0F3E                     	;# 
  5028  0F3F                     	;# 
  5029  0F40                     	;# 
  5030  0F41                     	;# 
  5031  0F43                     	;# 
  5032  0F44                     	;# 
  5033  0F45                     	;# 
  5034  0F46                     	;# 
  5035  0F47                     	;# 
  5036  0F48                     	;# 
  5037  0F49                     	;# 
  5038  0F4A                     	;# 
  5039  0F4B                     	;# 
  5040  0F4C                     	;# 
  5041  0F4E                     	;# 
  5042  0F4F                     	;# 
  5043  0F50                     	;# 
  5044  0F51                     	;# 
  5045  0F52                     	;# 
  5046  0F53                     	;# 
  5047  0F54                     	;# 
  5048  0F55                     	;# 
  5049  0F56                     	;# 
  5050  0F57                     	;# 
  5051  0F59                     	;# 
  5052  0F5A                     	;# 
  5053  0F5B                     	;# 
  5054  0F5C                     	;# 
  5055  0F5D                     	;# 
  5056  0F61                     	;# 
  5057  0F62                     	;# 
  5058  0F64                     	;# 
  5059  0F65                     	;# 
  5060  0F66                     	;# 
  5061  0F67                     	;# 
  5062  0F68                     	;# 
  5063  0F69                     	;# 
  5064  0F6A                     	;# 
  5065  0F6B                     	;# 
  5066  0F6C                     	;# 
  5067  0F6D                     	;# 
  5068  0FE4                     	;# 
  5069  0FE5                     	;# 
  5070  0FE6                     	;# 
  5071  0FE7                     	;# 
  5072  0FE8                     	;# 
  5073  0FE9                     	;# 
  5074  0FEA                     	;# 
  5075  0FEB                     	;# 
  5076  0FED                     	;# 
  5077  0FEE                     	;# 
  5078  0FEF                     	;# 
  5079  0000                     	;# 
  5080  0001                     	;# 
  5081  0002                     	;# 
  5082  0003                     	;# 
  5083  0004                     	;# 
  5084  0005                     	;# 
  5085  0006                     	;# 
  5086  0007                     	;# 
  5087  0008                     	;# 
  5088  0009                     	;# 
  5089  000A                     	;# 
  5090  000B                     	;# 
  5091  000C                     	;# 
  5092  000D                     	;# 
  5093  000E                     	;# 
  5094  000F                     	;# 
  5095  0010                     	;# 
  5096  0011                     	;# 
  5097  0012                     	;# 
  5098  0013                     	;# 
  5099  0014                     	;# 
  5100  0015                     	;# 
  5101  0016                     	;# 
  5102  0017                     	;# 
  5103  0018                     	;# 
  5104  0019                     	;# 
  5105  001A                     	;# 
  5106  001C                     	;# 
  5107  001C                     	;# 
  5108  001D                     	;# 
  5109  001D                     	;# 
  5110  001E                     	;# 
  5111  001F                     	;# 
  5112  008C                     	;# 
  5113  008C                     	;# 
  5114  008D                     	;# 
  5115  008E                     	;# 
  5116  008E                     	;# 
  5117  008F                     	;# 
  5118  0090                     	;# 
  5119  0090                     	;# 
  5120  0091                     	;# 
  5121  0093                     	;# 
  5122  0094                     	;# 
  5123  0095                     	;# 
  5124  0096                     	;# 
  5125  0097                     	;# 
  5126  0098                     	;# 
  5127  0099                     	;# 
  5128  009A                     	;# 
  5129  009B                     	;# 
  5130  009C                     	;# 
  5131  009D                     	;# 
  5132  009E                     	;# 
  5133  010C                     	;# 
  5134  010D                     	;# 
  5135  010E                     	;# 
  5136  010E                     	;# 
  5137  010F                     	;# 
  5138  0110                     	;# 
  5139  0110                     	;# 
  5140  0111                     	;# 
  5141  0112                     	;# 
  5142  0112                     	;# 
  5143  0113                     	;# 
  5144  0114                     	;# 
  5145  0114                     	;# 
  5146  0115                     	;# 
  5147  0116                     	;# 
  5148  0116                     	;# 
  5149  0117                     	;# 
  5150  0119                     	;# 
  5151  0119                     	;# 
  5152  0119                     	;# 
  5153  011A                     	;# 
  5154  011A                     	;# 
  5155  011A                     	;# 
  5156  011B                     	;# 
  5157  011B                     	;# 
  5158  011B                     	;# 
  5159  011B                     	;# 
  5160  011B                     	;# 
  5161  011C                     	;# 
  5162  011C                     	;# 
  5163  011C                     	;# 
  5164  011D                     	;# 
  5165  011D                     	;# 
  5166  011D                     	;# 
  5167  011E                     	;# 
  5168  011E                     	;# 
  5169  011E                     	;# 
  5170  011F                     	;# 
  5171  011F                     	;# 
  5172  011F                     	;# 
  5173  011F                     	;# 
  5174  011F                     	;# 
  5175  018C                     	;# 
  5176  018D                     	;# 
  5177  018E                     	;# 
  5178  018F                     	;# 
  5179  0190                     	;# 
  5180  0191                     	;# 
  5181  0192                     	;# 
  5182  0196                     	;# 
  5183  0197                     	;# 
  5184  0198                     	;# 
  5185  0199                     	;# 
  5186  019A                     	;# 
  5187  019B                     	;# 
  5188  019C                     	;# 
  5189  020C                     	;# 
  5190  020C                     	;# 
  5191  020D                     	;# 
  5192  020E                     	;# 
  5193  020F                     	;# 
  5194  020F                     	;# 
  5195  0210                     	;# 
  5196  0210                     	;# 
  5197  0211                     	;# 
  5198  0211                     	;# 
  5199  0212                     	;# 
  5200  0212                     	;# 
  5201  0213                     	;# 
  5202  0214                     	;# 
  5203  0215                     	;# 
  5204  0215                     	;# 
  5205  0216                     	;# 
  5206  0216                     	;# 
  5207  0217                     	;# 
  5208  0217                     	;# 
  5209  0218                     	;# 
  5210  0218                     	;# 
  5211  0219                     	;# 
  5212  021A                     	;# 
  5213  021B                     	;# 
  5214  021B                     	;# 
  5215  021C                     	;# 
  5216  021C                     	;# 
  5217  021D                     	;# 
  5218  021D                     	;# 
  5219  021E                     	;# 
  5220  021F                     	;# 
  5221  028C                     	;# 
  5222  028C                     	;# 
  5223  028D                     	;# 
  5224  028D                     	;# 
  5225  028E                     	;# 
  5226  028F                     	;# 
  5227  0290                     	;# 
  5228  0290                     	;# 
  5229  0291                     	;# 
  5230  0292                     	;# 
  5231  0292                     	;# 
  5232  0293                     	;# 
  5233  0293                     	;# 
  5234  0294                     	;# 
  5235  0295                     	;# 
  5236  0296                     	;# 
  5237  0296                     	;# 
  5238  0297                     	;# 
  5239  0298                     	;# 
  5240  0298                     	;# 
  5241  0299                     	;# 
  5242  0299                     	;# 
  5243  029A                     	;# 
  5244  029B                     	;# 
  5245  029C                     	;# 
  5246  029C                     	;# 
  5247  029D                     	;# 
  5248  030C                     	;# 
  5249  030C                     	;# 
  5250  030D                     	;# 
  5251  030E                     	;# 
  5252  030F                     	;# 
  5253  0310                     	;# 
  5254  0310                     	;# 
  5255  0311                     	;# 
  5256  0312                     	;# 
  5257  0313                     	;# 
  5258  0314                     	;# 
  5259  0314                     	;# 
  5260  0315                     	;# 
  5261  0316                     	;# 
  5262  0317                     	;# 
  5263  0318                     	;# 
  5264  0318                     	;# 
  5265  0319                     	;# 
  5266  031A                     	;# 
  5267  031B                     	;# 
  5268  031C                     	;# 
  5269  031C                     	;# 
  5270  031D                     	;# 
  5271  031E                     	;# 
  5272  031F                     	;# 
  5273  038C                     	;# 
  5274  038C                     	;# 
  5275  038D                     	;# 
  5276  038E                     	;# 
  5277  0390                     	;# 
  5278  0390                     	;# 
  5279  0391                     	;# 
  5280  0392                     	;# 
  5281  040C                     	;# 
  5282  040D                     	;# 
  5283  040E                     	;# 
  5284  040F                     	;# 
  5285  0410                     	;# 
  5286  0411                     	;# 
  5287  0416                     	;# 
  5288  0416                     	;# 
  5289  0417                     	;# 
  5290  0418                     	;# 
  5291  0418                     	;# 
  5292  0419                     	;# 
  5293  041A                     	;# 
  5294  041A                     	;# 
  5295  041B                     	;# 
  5296  041C                     	;# 
  5297  041C                     	;# 
  5298  041D                     	;# 
  5299  041E                     	;# 
  5300  041F                     	;# 
  5301  048C                     	;# 
  5302  048C                     	;# 
  5303  048D                     	;# 
  5304  048E                     	;# 
  5305  048F                     	;# 
  5306  048F                     	;# 
  5307  0490                     	;# 
  5308  0491                     	;# 
  5309  0492                     	;# 
  5310  0492                     	;# 
  5311  0493                     	;# 
  5312  0494                     	;# 
  5313  0495                     	;# 
  5314  0495                     	;# 
  5315  0496                     	;# 
  5316  0497                     	;# 
  5317  0498                     	;# 
  5318  0499                     	;# 
  5319  049A                     	;# 
  5320  049B                     	;# 
  5321  049C                     	;# 
  5322  049D                     	;# 
  5323  050C                     	;# 
  5324  050C                     	;# 
  5325  050D                     	;# 
  5326  050E                     	;# 
  5327  050F                     	;# 
  5328  050F                     	;# 
  5329  0510                     	;# 
  5330  0511                     	;# 
  5331  0512                     	;# 
  5332  0512                     	;# 
  5333  0513                     	;# 
  5334  0514                     	;# 
  5335  0515                     	;# 
  5336  0515                     	;# 
  5337  0516                     	;# 
  5338  0517                     	;# 
  5339  0518                     	;# 
  5340  0519                     	;# 
  5341  051A                     	;# 
  5342  051B                     	;# 
  5343  051C                     	;# 
  5344  051D                     	;# 
  5345  058C                     	;# 
  5346  058C                     	;# 
  5347  058D                     	;# 
  5348  058E                     	;# 
  5349  058F                     	;# 
  5350  058F                     	;# 
  5351  0590                     	;# 
  5352  0591                     	;# 
  5353  0592                     	;# 
  5354  0593                     	;# 
  5355  060C                     	;# 
  5356  060D                     	;# 
  5357  060E                     	;# 
  5358  060F                     	;# 
  5359  0610                     	;# 
  5360  0611                     	;# 
  5361  0612                     	;# 
  5362  0613                     	;# 
  5363  0614                     	;# 
  5364  0616                     	;# 
  5365  0617                     	;# 
  5366  0618                     	;# 
  5367  0619                     	;# 
  5368  061A                     	;# 
  5369  061B                     	;# 
  5370  061C                     	;# 
  5371  061D                     	;# 
  5372  061E                     	;# 
  5373  068C                     	;# 
  5374  068D                     	;# 
  5375  068E                     	;# 
  5376  068F                     	;# 
  5377  0690                     	;# 
  5378  0691                     	;# 
  5379  0692                     	;# 
  5380  0693                     	;# 
  5381  0694                     	;# 
  5382  070C                     	;# 
  5383  070D                     	;# 
  5384  070E                     	;# 
  5385  070F                     	;# 
  5386  0710                     	;# 
  5387  0711                     	;# 
  5388  0712                     	;# 
  5389  0713                     	;# 
  5390  0714                     	;# 
  5391  0716                     	;# 
  5392  0717                     	;# 
  5393  0718                     	;# 
  5394  0719                     	;# 
  5395  071A                     	;# 
  5396  071B                     	;# 
  5397  071C                     	;# 
  5398  071D                     	;# 
  5399  071E                     	;# 
  5400  0796                     	;# 
  5401  0797                     	;# 
  5402  0798                     	;# 
  5403  0799                     	;# 
  5404  079A                     	;# 
  5405  079B                     	;# 
  5406  080C                     	;# 
  5407  080D                     	;# 
  5408  080E                     	;# 
  5409  080F                     	;# 
  5410  0810                     	;# 
  5411  0811                     	;# 
  5412  0812                     	;# 
  5413  0813                     	;# 
  5414  0814                     	;# 
  5415  081A                     	;# 
  5416  081B                     	;# 
  5417  081C                     	;# 
  5418  081D                     	;# 
  5419  081E                     	;# 
  5420  081F                     	;# 
  5421  088C                     	;# 
  5422  088D                     	;# 
  5423  088E                     	;# 
  5424  088F                     	;# 
  5425  0890                     	;# 
  5426  0891                     	;# 
  5427  0892                     	;# 
  5428  0893                     	;# 
  5429  0895                     	;# 
  5430  0896                     	;# 
  5431  0897                     	;# 
  5432  0898                     	;# 
  5433  0899                     	;# 
  5434  089A                     	;# 
  5435  089B                     	;# 
  5436  090C                     	;# 
  5437  090E                     	;# 
  5438  090F                     	;# 
  5439  091F                     	;# 
  5440  091F                     	;# 
  5441  098F                     	;# 
  5442  098F                     	;# 
  5443  0990                     	;# 
  5444  0991                     	;# 
  5445  0992                     	;# 
  5446  0993                     	;# 
  5447  0994                     	;# 
  5448  0995                     	;# 
  5449  0996                     	;# 
  5450  0997                     	;# 
  5451  0E0F                     	;# 
  5452  0E10                     	;# 
  5453  0E11                     	;# 
  5454  0E12                     	;# 
  5455  0E13                     	;# 
  5456  0E14                     	;# 
  5457  0E15                     	;# 
  5458  0E16                     	;# 
  5459  0E17                     	;# 
  5460  0E18                     	;# 
  5461  0E19                     	;# 
  5462  0E1A                     	;# 
  5463  0E1B                     	;# 
  5464  0E1C                     	;# 
  5465  0E1D                     	;# 
  5466  0E1E                     	;# 
  5467  0E1F                     	;# 
  5468  0E20                     	;# 
  5469  0E21                     	;# 
  5470  0E22                     	;# 
  5471  0E23                     	;# 
  5472  0E24                     	;# 
  5473  0E25                     	;# 
  5474  0E26                     	;# 
  5475  0E27                     	;# 
  5476  0E28                     	;# 
  5477  0E29                     	;# 
  5478  0E2A                     	;# 
  5479  0E2B                     	;# 
  5480  0E2C                     	;# 
  5481  0E2D                     	;# 
  5482  0E2E                     	;# 
  5483  0E2F                     	;# 
  5484  0E30                     	;# 
  5485  0E31                     	;# 
  5486  0E32                     	;# 
  5487  0E33                     	;# 
  5488  0E34                     	;# 
  5489  0E35                     	;# 
  5490  0E36                     	;# 
  5491  0E37                     	;# 
  5492  0E8F                     	;# 
  5493  0E90                     	;# 
  5494  0E91                     	;# 
  5495  0E92                     	;# 
  5496  0E93                     	;# 
  5497  0E94                     	;# 
  5498  0E95                     	;# 
  5499  0E96                     	;# 
  5500  0E97                     	;# 
  5501  0E9C                     	;# 
  5502  0E9D                     	;# 
  5503  0E9E                     	;# 
  5504  0EA1                     	;# 
  5505  0EA2                     	;# 
  5506  0EA3                     	;# 
  5507  0EA4                     	;# 
  5508  0EA5                     	;# 
  5509  0EA9                     	;# 
  5510  0EAA                     	;# 
  5511  0EAB                     	;# 
  5512  0EAC                     	;# 
  5513  0EB1                     	;# 
  5514  0EB2                     	;# 
  5515  0EB3                     	;# 
  5516  0EB8                     	;# 
  5517  0EB9                     	;# 
  5518  0EBA                     	;# 
  5519  0EBB                     	;# 
  5520  0EBC                     	;# 
  5521  0EBD                     	;# 
  5522  0EBE                     	;# 
  5523  0EC3                     	;# 
  5524  0EC5                     	;# 
  5525  0EC6                     	;# 
  5526  0EC7                     	;# 
  5527  0EC8                     	;# 
  5528  0EC9                     	;# 
  5529  0ECA                     	;# 
  5530  0ECB                     	;# 
  5531  0ECC                     	;# 
  5532  0F10                     	;# 
  5533  0F11                     	;# 
  5534  0F12                     	;# 
  5535  0F13                     	;# 
  5536  0F14                     	;# 
  5537  0F15                     	;# 
  5538  0F16                     	;# 
  5539  0F17                     	;# 
  5540  0F18                     	;# 
  5541  0F19                     	;# 
  5542  0F1A                     	;# 
  5543  0F1B                     	;# 
  5544  0F1C                     	;# 
  5545  0F1D                     	;# 
  5546  0F1E                     	;# 
  5547  0F1F                     	;# 
  5548  0F20                     	;# 
  5549  0F21                     	;# 
  5550  0F22                     	;# 
  5551  0F23                     	;# 
  5552  0F24                     	;# 
  5553  0F25                     	;# 
  5554  0F26                     	;# 
  5555  0F27                     	;# 
  5556  0F28                     	;# 
  5557  0F29                     	;# 
  5558  0F2A                     	;# 
  5559  0F2B                     	;# 
  5560  0F2C                     	;# 
  5561  0F2D                     	;# 
  5562  0F2E                     	;# 
  5563  0F2F                     	;# 
  5564  0F30                     	;# 
  5565  0F31                     	;# 
  5566  0F32                     	;# 
  5567  0F38                     	;# 
  5568  0F39                     	;# 
  5569  0F3A                     	;# 
  5570  0F3B                     	;# 
  5571  0F3C                     	;# 
  5572  0F3D                     	;# 
  5573  0F3E                     	;# 
  5574  0F3F                     	;# 
  5575  0F40                     	;# 
  5576  0F41                     	;# 
  5577  0F43                     	;# 
  5578  0F44                     	;# 
  5579  0F45                     	;# 
  5580  0F46                     	;# 
  5581  0F47                     	;# 
  5582  0F48                     	;# 
  5583  0F49                     	;# 
  5584  0F4A                     	;# 
  5585  0F4B                     	;# 
  5586  0F4C                     	;# 
  5587  0F4E                     	;# 
  5588  0F4F                     	;# 
  5589  0F50                     	;# 
  5590  0F51                     	;# 
  5591  0F52                     	;# 
  5592  0F53                     	;# 
  5593  0F54                     	;# 
  5594  0F55                     	;# 
  5595  0F56                     	;# 
  5596  0F57                     	;# 
  5597  0F59                     	;# 
  5598  0F5A                     	;# 
  5599  0F5B                     	;# 
  5600  0F5C                     	;# 
  5601  0F5D                     	;# 
  5602  0F61                     	;# 
  5603  0F62                     	;# 
  5604  0F64                     	;# 
  5605  0F65                     	;# 
  5606  0F66                     	;# 
  5607  0F67                     	;# 
  5608  0F68                     	;# 
  5609  0F69                     	;# 
  5610  0F6A                     	;# 
  5611  0F6B                     	;# 
  5612  0F6C                     	;# 
  5613  0F6D                     	;# 
  5614  0FE4                     	;# 
  5615  0FE5                     	;# 
  5616  0FE6                     	;# 
  5617  0FE7                     	;# 
  5618  0FE8                     	;# 
  5619  0FE9                     	;# 
  5620  0FEA                     	;# 
  5621  0FEB                     	;# 
  5622  0FED                     	;# 
  5623  0FEE                     	;# 
  5624  0FEF                     	;# 
  5625  0000                     	;# 
  5626  0001                     	;# 
  5627  0002                     	;# 
  5628  0003                     	;# 
  5629  0004                     	;# 
  5630  0005                     	;# 
  5631  0006                     	;# 
  5632  0007                     	;# 
  5633  0008                     	;# 
  5634  0009                     	;# 
  5635  000A                     	;# 
  5636  000B                     	;# 
  5637  000C                     	;# 
  5638  000D                     	;# 
  5639  000E                     	;# 
  5640  000F                     	;# 
  5641  0010                     	;# 
  5642  0011                     	;# 
  5643  0012                     	;# 
  5644  0013                     	;# 
  5645  0014                     	;# 
  5646  0015                     	;# 
  5647  0016                     	;# 
  5648  0017                     	;# 
  5649  0018                     	;# 
  5650  0019                     	;# 
  5651  001A                     	;# 
  5652  001C                     	;# 
  5653  001C                     	;# 
  5654  001D                     	;# 
  5655  001D                     	;# 
  5656  001E                     	;# 
  5657  001F                     	;# 
  5658  008C                     	;# 
  5659  008C                     	;# 
  5660  008D                     	;# 
  5661  008E                     	;# 
  5662  008E                     	;# 
  5663  008F                     	;# 
  5664  0090                     	;# 
  5665  0090                     	;# 
  5666  0091                     	;# 
  5667  0093                     	;# 
  5668  0094                     	;# 
  5669  0095                     	;# 
  5670  0096                     	;# 
  5671  0097                     	;# 
  5672  0098                     	;# 
  5673  0099                     	;# 
  5674  009A                     	;# 
  5675  009B                     	;# 
  5676  009C                     	;# 
  5677  009D                     	;# 
  5678  009E                     	;# 
  5679  010C                     	;# 
  5680  010D                     	;# 
  5681  010E                     	;# 
  5682  010E                     	;# 
  5683  010F                     	;# 
  5684  0110                     	;# 
  5685  0110                     	;# 
  5686  0111                     	;# 
  5687  0112                     	;# 
  5688  0112                     	;# 
  5689  0113                     	;# 
  5690  0114                     	;# 
  5691  0114                     	;# 
  5692  0115                     	;# 
  5693  0116                     	;# 
  5694  0116                     	;# 
  5695  0117                     	;# 
  5696  0119                     	;# 
  5697  0119                     	;# 
  5698  0119                     	;# 
  5699  011A                     	;# 
  5700  011A                     	;# 
  5701  011A                     	;# 
  5702  011B                     	;# 
  5703  011B                     	;# 
  5704  011B                     	;# 
  5705  011B                     	;# 
  5706  011B                     	;# 
  5707  011C                     	;# 
  5708  011C                     	;# 
  5709  011C                     	;# 
  5710  011D                     	;# 
  5711  011D                     	;# 
  5712  011D                     	;# 
  5713  011E                     	;# 
  5714  011E                     	;# 
  5715  011E                     	;# 
  5716  011F                     	;# 
  5717  011F                     	;# 
  5718  011F                     	;# 
  5719  011F                     	;# 
  5720  011F                     	;# 
  5721  018C                     	;# 
  5722  018D                     	;# 
  5723  018E                     	;# 
  5724  018F                     	;# 
  5725  0190                     	;# 
  5726  0191                     	;# 
  5727  0192                     	;# 
  5728  0196                     	;# 
  5729  0197                     	;# 
  5730  0198                     	;# 
  5731  0199                     	;# 
  5732  019A                     	;# 
  5733  019B                     	;# 
  5734  019C                     	;# 
  5735  020C                     	;# 
  5736  020C                     	;# 
  5737  020D                     	;# 
  5738  020E                     	;# 
  5739  020F                     	;# 
  5740  020F                     	;# 
  5741  0210                     	;# 
  5742  0210                     	;# 
  5743  0211                     	;# 
  5744  0211                     	;# 
  5745  0212                     	;# 
  5746  0212                     	;# 
  5747  0213                     	;# 
  5748  0214                     	;# 
  5749  0215                     	;# 
  5750  0215                     	;# 
  5751  0216                     	;# 
  5752  0216                     	;# 
  5753  0217                     	;# 
  5754  0217                     	;# 
  5755  0218                     	;# 
  5756  0218                     	;# 
  5757  0219                     	;# 
  5758  021A                     	;# 
  5759  021B                     	;# 
  5760  021B                     	;# 
  5761  021C                     	;# 
  5762  021C                     	;# 
  5763  021D                     	;# 
  5764  021D                     	;# 
  5765  021E                     	;# 
  5766  021F                     	;# 
  5767  028C                     	;# 
  5768  028C                     	;# 
  5769  028D                     	;# 
  5770  028D                     	;# 
  5771  028E                     	;# 
  5772  028F                     	;# 
  5773  0290                     	;# 
  5774  0290                     	;# 
  5775  0291                     	;# 
  5776  0292                     	;# 
  5777  0292                     	;# 
  5778  0293                     	;# 
  5779  0293                     	;# 
  5780  0294                     	;# 
  5781  0295                     	;# 
  5782  0296                     	;# 
  5783  0296                     	;# 
  5784  0297                     	;# 
  5785  0298                     	;# 
  5786  0298                     	;# 
  5787  0299                     	;# 
  5788  0299                     	;# 
  5789  029A                     	;# 
  5790  029B                     	;# 
  5791  029C                     	;# 
  5792  029C                     	;# 
  5793  029D                     	;# 
  5794  030C                     	;# 
  5795  030C                     	;# 
  5796  030D                     	;# 
  5797  030E                     	;# 
  5798  030F                     	;# 
  5799  0310                     	;# 
  5800  0310                     	;# 
  5801  0311                     	;# 
  5802  0312                     	;# 
  5803  0313                     	;# 
  5804  0314                     	;# 
  5805  0314                     	;# 
  5806  0315                     	;# 
  5807  0316                     	;# 
  5808  0317                     	;# 
  5809  0318                     	;# 
  5810  0318                     	;# 
  5811  0319                     	;# 
  5812  031A                     	;# 
  5813  031B                     	;# 
  5814  031C                     	;# 
  5815  031C                     	;# 
  5816  031D                     	;# 
  5817  031E                     	;# 
  5818  031F                     	;# 
  5819  038C                     	;# 
  5820  038C                     	;# 
  5821  038D                     	;# 
  5822  038E                     	;# 
  5823  0390                     	;# 
  5824  0390                     	;# 
  5825  0391                     	;# 
  5826  0392                     	;# 
  5827  040C                     	;# 
  5828  040D                     	;# 
  5829  040E                     	;# 
  5830  040F                     	;# 
  5831  0410                     	;# 
  5832  0411                     	;# 
  5833  0416                     	;# 
  5834  0416                     	;# 
  5835  0417                     	;# 
  5836  0418                     	;# 
  5837  0418                     	;# 
  5838  0419                     	;# 
  5839  041A                     	;# 
  5840  041A                     	;# 
  5841  041B                     	;# 
  5842  041C                     	;# 
  5843  041C                     	;# 
  5844  041D                     	;# 
  5845  041E                     	;# 
  5846  041F                     	;# 
  5847  048C                     	;# 
  5848  048C                     	;# 
  5849  048D                     	;# 
  5850  048E                     	;# 
  5851  048F                     	;# 
  5852  048F                     	;# 
  5853  0490                     	;# 
  5854  0491                     	;# 
  5855  0492                     	;# 
  5856  0492                     	;# 
  5857  0493                     	;# 
  5858  0494                     	;# 
  5859  0495                     	;# 
  5860  0495                     	;# 
  5861  0496                     	;# 
  5862  0497                     	;# 
  5863  0498                     	;# 
  5864  0499                     	;# 
  5865  049A                     	;# 
  5866  049B                     	;# 
  5867  049C                     	;# 
  5868  049D                     	;# 
  5869  050C                     	;# 
  5870  050C                     	;# 
  5871  050D                     	;# 
  5872  050E                     	;# 
  5873  050F                     	;# 
  5874  050F                     	;# 
  5875  0510                     	;# 
  5876  0511                     	;# 
  5877  0512                     	;# 
  5878  0512                     	;# 
  5879  0513                     	;# 
  5880  0514                     	;# 
  5881  0515                     	;# 
  5882  0515                     	;# 
  5883  0516                     	;# 
  5884  0517                     	;# 
  5885  0518                     	;# 
  5886  0519                     	;# 
  5887  051A                     	;# 
  5888  051B                     	;# 
  5889  051C                     	;# 
  5890  051D                     	;# 
  5891  058C                     	;# 
  5892  058C                     	;# 
  5893  058D                     	;# 
  5894  058E                     	;# 
  5895  058F                     	;# 
  5896  058F                     	;# 
  5897  0590                     	;# 
  5898  0591                     	;# 
  5899  0592                     	;# 
  5900  0593                     	;# 
  5901  060C                     	;# 
  5902  060D                     	;# 
  5903  060E                     	;# 
  5904  060F                     	;# 
  5905  0610                     	;# 
  5906  0611                     	;# 
  5907  0612                     	;# 
  5908  0613                     	;# 
  5909  0614                     	;# 
  5910  0616                     	;# 
  5911  0617                     	;# 
  5912  0618                     	;# 
  5913  0619                     	;# 
  5914  061A                     	;# 
  5915  061B                     	;# 
  5916  061C                     	;# 
  5917  061D                     	;# 
  5918  061E                     	;# 
  5919  068C                     	;# 
  5920  068D                     	;# 
  5921  068E                     	;# 
  5922  068F                     	;# 
  5923  0690                     	;# 
  5924  0691                     	;# 
  5925  0692                     	;# 
  5926  0693                     	;# 
  5927  0694                     	;# 
  5928  070C                     	;# 
  5929  070D                     	;# 
  5930  070E                     	;# 
  5931  070F                     	;# 
  5932  0710                     	;# 
  5933  0711                     	;# 
  5934  0712                     	;# 
  5935  0713                     	;# 
  5936  0714                     	;# 
  5937  0716                     	;# 
  5938  0717                     	;# 
  5939  0718                     	;# 
  5940  0719                     	;# 
  5941  071A                     	;# 
  5942  071B                     	;# 
  5943  071C                     	;# 
  5944  071D                     	;# 
  5945  071E                     	;# 
  5946  0796                     	;# 
  5947  0797                     	;# 
  5948  0798                     	;# 
  5949  0799                     	;# 
  5950  079A                     	;# 
  5951  079B                     	;# 
  5952  080C                     	;# 
  5953  080D                     	;# 
  5954  080E                     	;# 
  5955  080F                     	;# 
  5956  0810                     	;# 
  5957  0811                     	;# 
  5958  0812                     	;# 
  5959  0813                     	;# 
  5960  0814                     	;# 
  5961  081A                     	;# 
  5962  081B                     	;# 
  5963  081C                     	;# 
  5964  081D                     	;# 
  5965  081E                     	;# 
  5966  081F                     	;# 
  5967  088C                     	;# 
  5968  088D                     	;# 
  5969  088E                     	;# 
  5970  088F                     	;# 
  5971  0890                     	;# 
  5972  0891                     	;# 
  5973  0892                     	;# 
  5974  0893                     	;# 
  5975  0895                     	;# 
  5976  0896                     	;# 
  5977  0897                     	;# 
  5978  0898                     	;# 
  5979  0899                     	;# 
  5980  089A                     	;# 
  5981  089B                     	;# 
  5982  090C                     	;# 
  5983  090E                     	;# 
  5984  090F                     	;# 
  5985  091F                     	;# 
  5986  091F                     	;# 
  5987  098F                     	;# 
  5988  098F                     	;# 
  5989  0990                     	;# 
  5990  0991                     	;# 
  5991  0992                     	;# 
  5992  0993                     	;# 
  5993  0994                     	;# 
  5994  0995                     	;# 
  5995  0996                     	;# 
  5996  0997                     	;# 
  5997  0E0F                     	;# 
  5998  0E10                     	;# 
  5999  0E11                     	;# 
  6000  0E12                     	;# 
  6001  0E13                     	;# 
  6002  0E14                     	;# 
  6003  0E15                     	;# 
  6004  0E16                     	;# 
  6005  0E17                     	;# 
  6006  0E18                     	;# 
  6007  0E19                     	;# 
  6008  0E1A                     	;# 
  6009  0E1B                     	;# 
  6010  0E1C                     	;# 
  6011  0E1D                     	;# 
  6012  0E1E                     	;# 
  6013  0E1F                     	;# 
  6014  0E20                     	;# 
  6015  0E21                     	;# 
  6016  0E22                     	;# 
  6017  0E23                     	;# 
  6018  0E24                     	;# 
  6019  0E25                     	;# 
  6020  0E26                     	;# 
  6021  0E27                     	;# 
  6022  0E28                     	;# 
  6023  0E29                     	;# 
  6024  0E2A                     	;# 
  6025  0E2B                     	;# 
  6026  0E2C                     	;# 
  6027  0E2D                     	;# 
  6028  0E2E                     	;# 
  6029  0E2F                     	;# 
  6030  0E30                     	;# 
  6031  0E31                     	;# 
  6032  0E32                     	;# 
  6033  0E33                     	;# 
  6034  0E34                     	;# 
  6035  0E35                     	;# 
  6036  0E36                     	;# 
  6037  0E37                     	;# 
  6038  0E8F                     	;# 
  6039  0E90                     	;# 
  6040  0E91                     	;# 
  6041  0E92                     	;# 
  6042  0E93                     	;# 
  6043  0E94                     	;# 
  6044  0E95                     	;# 
  6045  0E96                     	;# 
  6046  0E97                     	;# 
  6047  0E9C                     	;# 
  6048  0E9D                     	;# 
  6049  0E9E                     	;# 
  6050  0EA1                     	;# 
  6051  0EA2                     	;# 
  6052  0EA3                     	;# 
  6053  0EA4                     	;# 
  6054  0EA5                     	;# 
  6055  0EA9                     	;# 
  6056  0EAA                     	;# 
  6057  0EAB                     	;# 
  6058  0EAC                     	;# 
  6059  0EB1                     	;# 
  6060  0EB2                     	;# 
  6061  0EB3                     	;# 
  6062  0EB8                     	;# 
  6063  0EB9                     	;# 
  6064  0EBA                     	;# 
  6065  0EBB                     	;# 
  6066  0EBC                     	;# 
  6067  0EBD                     	;# 
  6068  0EBE                     	;# 
  6069  0EC3                     	;# 
  6070  0EC5                     	;# 
  6071  0EC6                     	;# 
  6072  0EC7                     	;# 
  6073  0EC8                     	;# 
  6074  0EC9                     	;# 
  6075  0ECA                     	;# 
  6076  0ECB                     	;# 
  6077  0ECC                     	;# 
  6078  0F10                     	;# 
  6079  0F11                     	;# 
  6080  0F12                     	;# 
  6081  0F13                     	;# 
  6082  0F14                     	;# 
  6083  0F15                     	;# 
  6084  0F16                     	;# 
  6085  0F17                     	;# 
  6086  0F18                     	;# 
  6087  0F19                     	;# 
  6088  0F1A                     	;# 
  6089  0F1B                     	;# 
  6090  0F1C                     	;# 
  6091  0F1D                     	;# 
  6092  0F1E                     	;# 
  6093  0F1F                     	;# 
  6094  0F20                     	;# 
  6095  0F21                     	;# 
  6096  0F22                     	;# 
  6097  0F23                     	;# 
  6098  0F24                     	;# 
  6099  0F25                     	;# 
  6100  0F26                     	;# 
  6101  0F27                     	;# 
  6102  0F28                     	;# 
  6103  0F29                     	;# 
  6104  0F2A                     	;# 
  6105  0F2B                     	;# 
  6106  0F2C                     	;# 
  6107  0F2D                     	;# 
  6108  0F2E                     	;# 
  6109  0F2F                     	;# 
  6110  0F30                     	;# 
  6111  0F31                     	;# 
  6112  0F32                     	;# 
  6113  0F38                     	;# 
  6114  0F39                     	;# 
  6115  0F3A                     	;# 
  6116  0F3B                     	;# 
  6117  0F3C                     	;# 
  6118  0F3D                     	;# 
  6119  0F3E                     	;# 
  6120  0F3F                     	;# 
  6121  0F40                     	;# 
  6122  0F41                     	;# 
  6123  0F43                     	;# 
  6124  0F44                     	;# 
  6125  0F45                     	;# 
  6126  0F46                     	;# 
  6127  0F47                     	;# 
  6128  0F48                     	;# 
  6129  0F49                     	;# 
  6130  0F4A                     	;# 
  6131  0F4B                     	;# 
  6132  0F4C                     	;# 
  6133  0F4E                     	;# 
  6134  0F4F                     	;# 
  6135  0F50                     	;# 
  6136  0F51                     	;# 
  6137  0F52                     	;# 
  6138  0F53                     	;# 
  6139  0F54                     	;# 
  6140  0F55                     	;# 
  6141  0F56                     	;# 
  6142  0F57                     	;# 
  6143  0F59                     	;# 
  6144  0F5A                     	;# 
  6145  0F5B                     	;# 
  6146  0F5C                     	;# 
  6147  0F5D                     	;# 
  6148  0F61                     	;# 
  6149  0F62                     	;# 
  6150  0F64                     	;# 
  6151  0F65                     	;# 
  6152  0F66                     	;# 
  6153  0F67                     	;# 
  6154  0F68                     	;# 
  6155  0F69                     	;# 
  6156  0F6A                     	;# 
  6157  0F6B                     	;# 
  6158  0F6C                     	;# 
  6159  0F6D                     	;# 
  6160  0FE4                     	;# 
  6161  0FE5                     	;# 
  6162  0FE6                     	;# 
  6163  0FE7                     	;# 
  6164  0FE8                     	;# 
  6165  0FE9                     	;# 
  6166  0FEA                     	;# 
  6167  0FEB                     	;# 
  6168  0FED                     	;# 
  6169  0FEE                     	;# 
  6170  0FEF                     	;# 
  6171  0000                     	;# 
  6172  0001                     	;# 
  6173  0002                     	;# 
  6174  0003                     	;# 
  6175  0004                     	;# 
  6176  0005                     	;# 
  6177  0006                     	;# 
  6178  0007                     	;# 
  6179  0008                     	;# 
  6180  0009                     	;# 
  6181  000A                     	;# 
  6182  000B                     	;# 
  6183  000C                     	;# 
  6184  000D                     	;# 
  6185  000E                     	;# 
  6186  000F                     	;# 
  6187  0010                     	;# 
  6188  0011                     	;# 
  6189  0012                     	;# 
  6190  0013                     	;# 
  6191  0014                     	;# 
  6192  0015                     	;# 
  6193  0016                     	;# 
  6194  0017                     	;# 
  6195  0018                     	;# 
  6196  0019                     	;# 
  6197  001A                     	;# 
  6198  001C                     	;# 
  6199  001C                     	;# 
  6200  001D                     	;# 
  6201  001D                     	;# 
  6202  001E                     	;# 
  6203  001F                     	;# 
  6204  008C                     	;# 
  6205  008C                     	;# 
  6206  008D                     	;# 
  6207  008E                     	;# 
  6208  008E                     	;# 
  6209  008F                     	;# 
  6210  0090                     	;# 
  6211  0090                     	;# 
  6212  0091                     	;# 
  6213  0093                     	;# 
  6214  0094                     	;# 
  6215  0095                     	;# 
  6216  0096                     	;# 
  6217  0097                     	;# 
  6218  0098                     	;# 
  6219  0099                     	;# 
  6220  009A                     	;# 
  6221  009B                     	;# 
  6222  009C                     	;# 
  6223  009D                     	;# 
  6224  009E                     	;# 
  6225  010C                     	;# 
  6226  010D                     	;# 
  6227  010E                     	;# 
  6228  010E                     	;# 
  6229  010F                     	;# 
  6230  0110                     	;# 
  6231  0110                     	;# 
  6232  0111                     	;# 
  6233  0112                     	;# 
  6234  0112                     	;# 
  6235  0113                     	;# 
  6236  0114                     	;# 
  6237  0114                     	;# 
  6238  0115                     	;# 
  6239  0116                     	;# 
  6240  0116                     	;# 
  6241  0117                     	;# 
  6242  0119                     	;# 
  6243  0119                     	;# 
  6244  0119                     	;# 
  6245  011A                     	;# 
  6246  011A                     	;# 
  6247  011A                     	;# 
  6248  011B                     	;# 
  6249  011B                     	;# 
  6250  011B                     	;# 
  6251  011B                     	;# 
  6252  011B                     	;# 
  6253  011C                     	;# 
  6254  011C                     	;# 
  6255  011C                     	;# 
  6256  011D                     	;# 
  6257  011D                     	;# 
  6258  011D                     	;# 
  6259  011E                     	;# 
  6260  011E                     	;# 
  6261  011E                     	;# 
  6262  011F                     	;# 
  6263  011F                     	;# 
  6264  011F                     	;# 
  6265  011F                     	;# 
  6266  011F                     	;# 
  6267  018C                     	;# 
  6268  018D                     	;# 
  6269  018E                     	;# 
  6270  018F                     	;# 
  6271  0190                     	;# 
  6272  0191                     	;# 
  6273  0192                     	;# 
  6274  0196                     	;# 
  6275  0197                     	;# 
  6276  0198                     	;# 
  6277  0199                     	;# 
  6278  019A                     	;# 
  6279  019B                     	;# 
  6280  019C                     	;# 
  6281  020C                     	;# 
  6282  020C                     	;# 
  6283  020D                     	;# 
  6284  020E                     	;# 
  6285  020F                     	;# 
  6286  020F                     	;# 
  6287  0210                     	;# 
  6288  0210                     	;# 
  6289  0211                     	;# 
  6290  0211                     	;# 
  6291  0212                     	;# 
  6292  0212                     	;# 
  6293  0213                     	;# 
  6294  0214                     	;# 
  6295  0215                     	;# 
  6296  0215                     	;# 
  6297  0216                     	;# 
  6298  0216                     	;# 
  6299  0217                     	;# 
  6300  0217                     	;# 
  6301  0218                     	;# 
  6302  0218                     	;# 
  6303  0219                     	;# 
  6304  021A                     	;# 
  6305  021B                     	;# 
  6306  021B                     	;# 
  6307  021C                     	;# 
  6308  021C                     	;# 
  6309  021D                     	;# 
  6310  021D                     	;# 
  6311  021E                     	;# 
  6312  021F                     	;# 
  6313  028C                     	;# 
  6314  028C                     	;# 
  6315  028D                     	;# 
  6316  028D                     	;# 
  6317  028E                     	;# 
  6318  028F                     	;# 
  6319  0290                     	;# 
  6320  0290                     	;# 
  6321  0291                     	;# 
  6322  0292                     	;# 
  6323  0292                     	;# 
  6324  0293                     	;# 
  6325  0293                     	;# 
  6326  0294                     	;# 
  6327  0295                     	;# 
  6328  0296                     	;# 
  6329  0296                     	;# 
  6330  0297                     	;# 
  6331  0298                     	;# 
  6332  0298                     	;# 
  6333  0299                     	;# 
  6334  0299                     	;# 
  6335  029A                     	;# 
  6336  029B                     	;# 
  6337  029C                     	;# 
  6338  029C                     	;# 
  6339  029D                     	;# 
  6340  030C                     	;# 
  6341  030C                     	;# 
  6342  030D                     	;# 
  6343  030E                     	;# 
  6344  030F                     	;# 
  6345  0310                     	;# 
  6346  0310                     	;# 
  6347  0311                     	;# 
  6348  0312                     	;# 
  6349  0313                     	;# 
  6350  0314                     	;# 
  6351  0314                     	;# 
  6352  0315                     	;# 
  6353  0316                     	;# 
  6354  0317                     	;# 
  6355  0318                     	;# 
  6356  0318                     	;# 
  6357  0319                     	;# 
  6358  031A                     	;# 
  6359  031B                     	;# 
  6360  031C                     	;# 
  6361  031C                     	;# 
  6362  031D                     	;# 
  6363  031E                     	;# 
  6364  031F                     	;# 
  6365  038C                     	;# 
  6366  038C                     	;# 
  6367  038D                     	;# 
  6368  038E                     	;# 
  6369  0390                     	;# 
  6370  0390                     	;# 
  6371  0391                     	;# 
  6372  0392                     	;# 
  6373  040C                     	;# 
  6374  040D                     	;# 
  6375  040E                     	;# 
  6376  040F                     	;# 
  6377  0410                     	;# 
  6378  0411                     	;# 
  6379  0416                     	;# 
  6380  0416                     	;# 
  6381  0417                     	;# 
  6382  0418                     	;# 
  6383  0418                     	;# 
  6384  0419                     	;# 
  6385  041A                     	;# 
  6386  041A                     	;# 
  6387  041B                     	;# 
  6388  041C                     	;# 
  6389  041C                     	;# 
  6390  041D                     	;# 
  6391  041E                     	;# 
  6392  041F                     	;# 
  6393  048C                     	;# 
  6394  048C                     	;# 
  6395  048D                     	;# 
  6396  048E                     	;# 
  6397  048F                     	;# 
  6398  048F                     	;# 
  6399  0490                     	;# 
  6400  0491                     	;# 
  6401  0492                     	;# 
  6402  0492                     	;# 
  6403  0493                     	;# 
  6404  0494                     	;# 
  6405  0495                     	;# 
  6406  0495                     	;# 
  6407  0496                     	;# 
  6408  0497                     	;# 
  6409  0498                     	;# 
  6410  0499                     	;# 
  6411  049A                     	;# 
  6412  049B                     	;# 
  6413  049C                     	;# 
  6414  049D                     	;# 
  6415  050C                     	;# 
  6416  050C                     	;# 
  6417  050D                     	;# 
  6418  050E                     	;# 
  6419  050F                     	;# 
  6420  050F                     	;# 
  6421  0510                     	;# 
  6422  0511                     	;# 
  6423  0512                     	;# 
  6424  0512                     	;# 
  6425  0513                     	;# 
  6426  0514                     	;# 
  6427  0515                     	;# 
  6428  0515                     	;# 
  6429  0516                     	;# 
  6430  0517                     	;# 
  6431  0518                     	;# 
  6432  0519                     	;# 
  6433  051A                     	;# 
  6434  051B                     	;# 
  6435  051C                     	;# 
  6436  051D                     	;# 
  6437  058C                     	;# 
  6438  058C                     	;# 
  6439  058D                     	;# 
  6440  058E                     	;# 
  6441  058F                     	;# 
  6442  058F                     	;# 
  6443  0590                     	;# 
  6444  0591                     	;# 
  6445  0592                     	;# 
  6446  0593                     	;# 
  6447  060C                     	;# 
  6448  060D                     	;# 
  6449  060E                     	;# 
  6450  060F                     	;# 
  6451  0610                     	;# 
  6452  0611                     	;# 
  6453  0612                     	;# 
  6454  0613                     	;# 
  6455  0614                     	;# 
  6456  0616                     	;# 
  6457  0617                     	;# 
  6458  0618                     	;# 
  6459  0619                     	;# 
  6460  061A                     	;# 
  6461  061B                     	;# 
  6462  061C                     	;# 
  6463  061D                     	;# 
  6464  061E                     	;# 
  6465  068C                     	;# 
  6466  068D                     	;# 
  6467  068E                     	;# 
  6468  068F                     	;# 
  6469  0690                     	;# 
  6470  0691                     	;# 
  6471  0692                     	;# 
  6472  0693                     	;# 
  6473  0694                     	;# 
  6474  070C                     	;# 
  6475  070D                     	;# 
  6476  070E                     	;# 
  6477  070F                     	;# 
  6478  0710                     	;# 
  6479  0711                     	;# 
  6480  0712                     	;# 
  6481  0713                     	;# 
  6482  0714                     	;# 
  6483  0716                     	;# 
  6484  0717                     	;# 
  6485  0718                     	;# 
  6486  0719                     	;# 
  6487  071A                     	;# 
  6488  071B                     	;# 
  6489  071C                     	;# 
  6490  071D                     	;# 
  6491  071E                     	;# 
  6492  0796                     	;# 
  6493  0797                     	;# 
  6494  0798                     	;# 
  6495  0799                     	;# 
  6496  079A                     	;# 
  6497  079B                     	;# 
  6498  080C                     	;# 
  6499  080D                     	;# 
  6500  080E                     	;# 
  6501  080F                     	;# 
  6502  0810                     	;# 
  6503  0811                     	;# 
  6504  0812                     	;# 
  6505  0813                     	;# 
  6506  0814                     	;# 
  6507  081A                     	;# 
  6508  081B                     	;# 
  6509  081C                     	;# 
  6510  081D                     	;# 
  6511  081E                     	;# 
  6512  081F                     	;# 
  6513  088C                     	;# 
  6514  088D                     	;# 
  6515  088E                     	;# 
  6516  088F                     	;# 
  6517  0890                     	;# 
  6518  0891                     	;# 
  6519  0892                     	;# 
  6520  0893                     	;# 
  6521  0895                     	;# 
  6522  0896                     	;# 
  6523  0897                     	;# 
  6524  0898                     	;# 
  6525  0899                     	;# 
  6526  089A                     	;# 
  6527  089B                     	;# 
  6528  090C                     	;# 
  6529  090E                     	;# 
  6530  090F                     	;# 
  6531  091F                     	;# 
  6532  091F                     	;# 
  6533  098F                     	;# 
  6534  098F                     	;# 
  6535  0990                     	;# 
  6536  0991                     	;# 
  6537  0992                     	;# 
  6538  0993                     	;# 
  6539  0994                     	;# 
  6540  0995                     	;# 
  6541  0996                     	;# 
  6542  0997                     	;# 
  6543  0E0F                     	;# 
  6544  0E10                     	;# 
  6545  0E11                     	;# 
  6546  0E12                     	;# 
  6547  0E13                     	;# 
  6548  0E14                     	;# 
  6549  0E15                     	;# 
  6550  0E16                     	;# 
  6551  0E17                     	;# 
  6552  0E18                     	;# 
  6553  0E19                     	;# 
  6554  0E1A                     	;# 
  6555  0E1B                     	;# 
  6556  0E1C                     	;# 
  6557  0E1D                     	;# 
  6558  0E1E                     	;# 
  6559  0E1F                     	;# 
  6560  0E20                     	;# 
  6561  0E21                     	;# 
  6562  0E22                     	;# 
  6563  0E23                     	;# 
  6564  0E24                     	;# 
  6565  0E25                     	;# 
  6566  0E26                     	;# 
  6567  0E27                     	;# 
  6568  0E28                     	;# 
  6569  0E29                     	;# 
  6570  0E2A                     	;# 
  6571  0E2B                     	;# 
  6572  0E2C                     	;# 
  6573  0E2D                     	;# 
  6574  0E2E                     	;# 
  6575  0E2F                     	;# 
  6576  0E30                     	;# 
  6577  0E31                     	;# 
  6578  0E32                     	;# 
  6579  0E33                     	;# 
  6580  0E34                     	;# 
  6581  0E35                     	;# 
  6582  0E36                     	;# 
  6583  0E37                     	;# 
  6584  0E8F                     	;# 
  6585  0E90                     	;# 
  6586  0E91                     	;# 
  6587  0E92                     	;# 
  6588  0E93                     	;# 
  6589  0E94                     	;# 
  6590  0E95                     	;# 
  6591  0E96                     	;# 
  6592  0E97                     	;# 
  6593  0E9C                     	;# 
  6594  0E9D                     	;# 
  6595  0E9E                     	;# 
  6596  0EA1                     	;# 
  6597  0EA2                     	;# 
  6598  0EA3                     	;# 
  6599  0EA4                     	;# 
  6600  0EA5                     	;# 
  6601  0EA9                     	;# 
  6602  0EAA                     	;# 
  6603  0EAB                     	;# 
  6604  0EAC                     	;# 
  6605  0EB1                     	;# 
  6606  0EB2                     	;# 
  6607  0EB3                     	;# 
  6608  0EB8                     	;# 
  6609  0EB9                     	;# 
  6610  0EBA                     	;# 
  6611  0EBB                     	;# 
  6612  0EBC                     	;# 
  6613  0EBD                     	;# 
  6614  0EBE                     	;# 
  6615  0EC3                     	;# 
  6616  0EC5                     	;# 
  6617  0EC6                     	;# 
  6618  0EC7                     	;# 
  6619  0EC8                     	;# 
  6620  0EC9                     	;# 
  6621  0ECA                     	;# 
  6622  0ECB                     	;# 
  6623  0ECC                     	;# 
  6624  0F10                     	;# 
  6625  0F11                     	;# 
  6626  0F12                     	;# 
  6627  0F13                     	;# 
  6628  0F14                     	;# 
  6629  0F15                     	;# 
  6630  0F16                     	;# 
  6631  0F17                     	;# 
  6632  0F18                     	;# 
  6633  0F19                     	;# 
  6634  0F1A                     	;# 
  6635  0F1B                     	;# 
  6636  0F1C                     	;# 
  6637  0F1D                     	;# 
  6638  0F1E                     	;# 
  6639  0F1F                     	;# 
  6640  0F20                     	;# 
  6641  0F21                     	;# 
  6642  0F22                     	;# 
  6643  0F23                     	;# 
  6644  0F24                     	;# 
  6645  0F25                     	;# 
  6646  0F26                     	;# 
  6647  0F27                     	;# 
  6648  0F28                     	;# 
  6649  0F29                     	;# 
  6650  0F2A                     	;# 
  6651  0F2B                     	;# 
  6652  0F2C                     	;# 
  6653  0F2D                     	;# 
  6654  0F2E                     	;# 
  6655  0F2F                     	;# 
  6656  0F30                     	;# 
  6657  0F31                     	;# 
  6658  0F32                     	;# 
  6659  0F38                     	;# 
  6660  0F39                     	;# 
  6661  0F3A                     	;# 
  6662  0F3B                     	;# 
  6663  0F3C                     	;# 
  6664  0F3D                     	;# 
  6665  0F3E                     	;# 
  6666  0F3F                     	;# 
  6667  0F40                     	;# 
  6668  0F41                     	;# 
  6669  0F43                     	;# 
  6670  0F44                     	;# 
  6671  0F45                     	;# 
  6672  0F46                     	;# 
  6673  0F47                     	;# 
  6674  0F48                     	;# 
  6675  0F49                     	;# 
  6676  0F4A                     	;# 
  6677  0F4B                     	;# 
  6678  0F4C                     	;# 
  6679  0F4E                     	;# 
  6680  0F4F                     	;# 
  6681  0F50                     	;# 
  6682  0F51                     	;# 
  6683  0F52                     	;# 
  6684  0F53                     	;# 
  6685  0F54                     	;# 
  6686  0F55                     	;# 
  6687  0F56                     	;# 
  6688  0F57                     	;# 
  6689  0F59                     	;# 
  6690  0F5A                     	;# 
  6691  0F5B                     	;# 
  6692  0F5C                     	;# 
  6693  0F5D                     	;# 
  6694  0F61                     	;# 
  6695  0F62                     	;# 
  6696  0F64                     	;# 
  6697  0F65                     	;# 
  6698  0F66                     	;# 
  6699  0F67                     	;# 
  6700  0F68                     	;# 
  6701  0F69                     	;# 
  6702  0F6A                     	;# 
  6703  0F6B                     	;# 
  6704  0F6C                     	;# 
  6705  0F6D                     	;# 
  6706  0FE4                     	;# 
  6707  0FE5                     	;# 
  6708  0FE6                     	;# 
  6709  0FE7                     	;# 
  6710  0FE8                     	;# 
  6711  0FE9                     	;# 
  6712  0FEA                     	;# 
  6713  0FEB                     	;# 
  6714  0FED                     	;# 
  6715  0FEE                     	;# 
  6716  0FEF                     	;# 
  6717  0000                     	;# 
  6718  0001                     	;# 
  6719  0002                     	;# 
  6720  0003                     	;# 
  6721  0004                     	;# 
  6722  0005                     	;# 
  6723  0006                     	;# 
  6724  0007                     	;# 
  6725  0008                     	;# 
  6726  0009                     	;# 
  6727  000A                     	;# 
  6728  000B                     	;# 
  6729  000C                     	;# 
  6730  000D                     	;# 
  6731  000E                     	;# 
  6732  000F                     	;# 
  6733  0010                     	;# 
  6734  0011                     	;# 
  6735  0012                     	;# 
  6736  0013                     	;# 
  6737  0014                     	;# 
  6738  0015                     	;# 
  6739  0016                     	;# 
  6740  0017                     	;# 
  6741  0018                     	;# 
  6742  0019                     	;# 
  6743  001A                     	;# 
  6744  001C                     	;# 
  6745  001C                     	;# 
  6746  001D                     	;# 
  6747  001D                     	;# 
  6748  001E                     	;# 
  6749  001F                     	;# 
  6750  008C                     	;# 
  6751  008C                     	;# 
  6752  008D                     	;# 
  6753  008E                     	;# 
  6754  008E                     	;# 
  6755  008F                     	;# 
  6756  0090                     	;# 
  6757  0090                     	;# 
  6758  0091                     	;# 
  6759  0093                     	;# 
  6760  0094                     	;# 
  6761  0095                     	;# 
  6762  0096                     	;# 
  6763  0097                     	;# 
  6764  0098                     	;# 
  6765  0099                     	;# 
  6766  009A                     	;# 
  6767  009B                     	;# 
  6768  009C                     	;# 
  6769  009D                     	;# 
  6770  009E                     	;# 
  6771  010C                     	;# 
  6772  010D                     	;# 
  6773  010E                     	;# 
  6774  010E                     	;# 
  6775  010F                     	;# 
  6776  0110                     	;# 
  6777  0110                     	;# 
  6778  0111                     	;# 
  6779  0112                     	;# 
  6780  0112                     	;# 
  6781  0113                     	;# 
  6782  0114                     	;# 
  6783  0114                     	;# 
  6784  0115                     	;# 
  6785  0116                     	;# 
  6786  0116                     	;# 
  6787  0117                     	;# 
  6788  0119                     	;# 
  6789  0119                     	;# 
  6790  0119                     	;# 
  6791  011A                     	;# 
  6792  011A                     	;# 
  6793  011A                     	;# 
  6794  011B                     	;# 
  6795  011B                     	;# 
  6796  011B                     	;# 
  6797  011B                     	;# 
  6798  011B                     	;# 
  6799  011C                     	;# 
  6800  011C                     	;# 
  6801  011C                     	;# 
  6802  011D                     	;# 
  6803  011D                     	;# 
  6804  011D                     	;# 
  6805  011E                     	;# 
  6806  011E                     	;# 
  6807  011E                     	;# 
  6808  011F                     	;# 
  6809  011F                     	;# 
  6810  011F                     	;# 
  6811  011F                     	;# 
  6812  011F                     	;# 
  6813  018C                     	;# 
  6814  018D                     	;# 
  6815  018E                     	;# 
  6816  018F                     	;# 
  6817  0190                     	;# 
  6818  0191                     	;# 
  6819  0192                     	;# 
  6820  0196                     	;# 
  6821  0197                     	;# 
  6822  0198                     	;# 
  6823  0199                     	;# 
  6824  019A                     	;# 
  6825  019B                     	;# 
  6826  019C                     	;# 
  6827  020C                     	;# 
  6828  020C                     	;# 
  6829  020D                     	;# 
  6830  020E                     	;# 
  6831  020F                     	;# 
  6832  020F                     	;# 
  6833  0210                     	;# 
  6834  0210                     	;# 
  6835  0211                     	;# 
  6836  0211                     	;# 
  6837  0212                     	;# 
  6838  0212                     	;# 
  6839  0213                     	;# 
  6840  0214                     	;# 
  6841  0215                     	;# 
  6842  0215                     	;# 
  6843  0216                     	;# 
  6844  0216                     	;# 
  6845  0217                     	;# 
  6846  0217                     	;# 
  6847  0218                     	;# 
  6848  0218                     	;# 
  6849  0219                     	;# 
  6850  021A                     	;# 
  6851  021B                     	;# 
  6852  021B                     	;# 
  6853  021C                     	;# 
  6854  021C                     	;# 
  6855  021D                     	;# 
  6856  021D                     	;# 
  6857  021E                     	;# 
  6858  021F                     	;# 
  6859  028C                     	;# 
  6860  028C                     	;# 
  6861  028D                     	;# 
  6862  028D                     	;# 
  6863  028E                     	;# 
  6864  028F                     	;# 
  6865  0290                     	;# 
  6866  0290                     	;# 
  6867  0291                     	;# 
  6868  0292                     	;# 
  6869  0292                     	;# 
  6870  0293                     	;# 
  6871  0293                     	;# 
  6872  0294                     	;# 
  6873  0295                     	;# 
  6874  0296                     	;# 
  6875  0296                     	;# 
  6876  0297                     	;# 
  6877  0298                     	;# 
  6878  0298                     	;# 
  6879  0299                     	;# 
  6880  0299                     	;# 
  6881  029A                     	;# 
  6882  029B                     	;# 
  6883  029C                     	;# 
  6884  029C                     	;# 
  6885  029D                     	;# 
  6886  030C                     	;# 
  6887  030C                     	;# 
  6888  030D                     	;# 
  6889  030E                     	;# 
  6890  030F                     	;# 
  6891  0310                     	;# 
  6892  0310                     	;# 
  6893  0311                     	;# 
  6894  0312                     	;# 
  6895  0313                     	;# 
  6896  0314                     	;# 
  6897  0314                     	;# 
  6898  0315                     	;# 
  6899  0316                     	;# 
  6900  0317                     	;# 
  6901  0318                     	;# 
  6902  0318                     	;# 
  6903  0319                     	;# 
  6904  031A                     	;# 
  6905  031B                     	;# 
  6906  031C                     	;# 
  6907  031C                     	;# 
  6908  031D                     	;# 
  6909  031E                     	;# 
  6910  031F                     	;# 
  6911  038C                     	;# 
  6912  038C                     	;# 
  6913  038D                     	;# 
  6914  038E                     	;# 
  6915  0390                     	;# 
  6916  0390                     	;# 
  6917  0391                     	;# 
  6918  0392                     	;# 
  6919  040C                     	;# 
  6920  040D                     	;# 
  6921  040E                     	;# 
  6922  040F                     	;# 
  6923  0410                     	;# 
  6924  0411                     	;# 
  6925  0416                     	;# 
  6926  0416                     	;# 
  6927  0417                     	;# 
  6928  0418                     	;# 
  6929  0418                     	;# 
  6930  0419                     	;# 
  6931  041A                     	;# 
  6932  041A                     	;# 
  6933  041B                     	;# 
  6934  041C                     	;# 
  6935  041C                     	;# 
  6936  041D                     	;# 
  6937  041E                     	;# 
  6938  041F                     	;# 
  6939  048C                     	;# 
  6940  048C                     	;# 
  6941  048D                     	;# 
  6942  048E                     	;# 
  6943  048F                     	;# 
  6944  048F                     	;# 
  6945  0490                     	;# 
  6946  0491                     	;# 
  6947  0492                     	;# 
  6948  0492                     	;# 
  6949  0493                     	;# 
  6950  0494                     	;# 
  6951  0495                     	;# 
  6952  0495                     	;# 
  6953  0496                     	;# 
  6954  0497                     	;# 
  6955  0498                     	;# 
  6956  0499                     	;# 
  6957  049A                     	;# 
  6958  049B                     	;# 
  6959  049C                     	;# 
  6960  049D                     	;# 
  6961  050C                     	;# 
  6962  050C                     	;# 
  6963  050D                     	;# 
  6964  050E                     	;# 
  6965  050F                     	;# 
  6966  050F                     	;# 
  6967  0510                     	;# 
  6968  0511                     	;# 
  6969  0512                     	;# 
  6970  0512                     	;# 
  6971  0513                     	;# 
  6972  0514                     	;# 
  6973  0515                     	;# 
  6974  0515                     	;# 
  6975  0516                     	;# 
  6976  0517                     	;# 
  6977  0518                     	;# 
  6978  0519                     	;# 
  6979  051A                     	;# 
  6980  051B                     	;# 
  6981  051C                     	;# 
  6982  051D                     	;# 
  6983  058C                     	;# 
  6984  058C                     	;# 
  6985  058D                     	;# 
  6986  058E                     	;# 
  6987  058F                     	;# 
  6988  058F                     	;# 
  6989  0590                     	;# 
  6990  0591                     	;# 
  6991  0592                     	;# 
  6992  0593                     	;# 
  6993  060C                     	;# 
  6994  060D                     	;# 
  6995  060E                     	;# 
  6996  060F                     	;# 
  6997  0610                     	;# 
  6998  0611                     	;# 
  6999  0612                     	;# 
  7000  0613                     	;# 
  7001  0614                     	;# 
  7002  0616                     	;# 
  7003  0617                     	;# 
  7004  0618                     	;# 
  7005  0619                     	;# 
  7006  061A                     	;# 
  7007  061B                     	;# 
  7008  061C                     	;# 
  7009  061D                     	;# 
  7010  061E                     	;# 
  7011  068C                     	;# 
  7012  068D                     	;# 
  7013  068E                     	;# 
  7014  068F                     	;# 
  7015  0690                     	;# 
  7016  0691                     	;# 
  7017  0692                     	;# 
  7018  0693                     	;# 
  7019  0694                     	;# 
  7020  070C                     	;# 
  7021  070D                     	;# 
  7022  070E                     	;# 
  7023  070F                     	;# 
  7024  0710                     	;# 
  7025  0711                     	;# 
  7026  0712                     	;# 
  7027  0713                     	;# 
  7028  0714                     	;# 
  7029  0716                     	;# 
  7030  0717                     	;# 
  7031  0718                     	;# 
  7032  0719                     	;# 
  7033  071A                     	;# 
  7034  071B                     	;# 
  7035  071C                     	;# 
  7036  071D                     	;# 
  7037  071E                     	;# 
  7038  0796                     	;# 
  7039  0797                     	;# 
  7040  0798                     	;# 
  7041  0799                     	;# 
  7042  079A                     	;# 
  7043  079B                     	;# 
  7044  080C                     	;# 
  7045  080D                     	;# 
  7046  080E                     	;# 
  7047  080F                     	;# 
  7048  0810                     	;# 
  7049  0811                     	;# 
  7050  0812                     	;# 
  7051  0813                     	;# 
  7052  0814                     	;# 
  7053  081A                     	;# 
  7054  081B                     	;# 
  7055  081C                     	;# 
  7056  081D                     	;# 
  7057  081E                     	;# 
  7058  081F                     	;# 
  7059  088C                     	;# 
  7060  088D                     	;# 
  7061  088E                     	;# 
  7062  088F                     	;# 
  7063  0890                     	;# 
  7064  0891                     	;# 
  7065  0892                     	;# 
  7066  0893                     	;# 
  7067  0895                     	;# 
  7068  0896                     	;# 
  7069  0897                     	;# 
  7070  0898                     	;# 
  7071  0899                     	;# 
  7072  089A                     	;# 
  7073  089B                     	;# 
  7074  090C                     	;# 
  7075  090E                     	;# 
  7076  090F                     	;# 
  7077  091F                     	;# 
  7078  091F                     	;# 
  7079  098F                     	;# 
  7080  098F                     	;# 
  7081  0990                     	;# 
  7082  0991                     	;# 
  7083  0992                     	;# 
  7084  0993                     	;# 
  7085  0994                     	;# 
  7086  0995                     	;# 
  7087  0996                     	;# 
  7088  0997                     	;# 
  7089  0E0F                     	;# 
  7090  0E10                     	;# 
  7091  0E11                     	;# 
  7092  0E12                     	;# 
  7093  0E13                     	;# 
  7094  0E14                     	;# 
  7095  0E15                     	;# 
  7096  0E16                     	;# 
  7097  0E17                     	;# 
  7098  0E18                     	;# 
  7099  0E19                     	;# 
  7100  0E1A                     	;# 
  7101  0E1B                     	;# 
  7102  0E1C                     	;# 
  7103  0E1D                     	;# 
  7104  0E1E                     	;# 
  7105  0E1F                     	;# 
  7106  0E20                     	;# 
  7107  0E21                     	;# 
  7108  0E22                     	;# 
  7109  0E23                     	;# 
  7110  0E24                     	;# 
  7111  0E25                     	;# 
  7112  0E26                     	;# 
  7113  0E27                     	;# 
  7114  0E28                     	;# 
  7115  0E29                     	;# 
  7116  0E2A                     	;# 
  7117  0E2B                     	;# 
  7118  0E2C                     	;# 
  7119  0E2D                     	;# 
  7120  0E2E                     	;# 
  7121  0E2F                     	;# 
  7122  0E30                     	;# 
  7123  0E31                     	;# 
  7124  0E32                     	;# 
  7125  0E33                     	;# 
  7126  0E34                     	;# 
  7127  0E35                     	;# 
  7128  0E36                     	;# 
  7129  0E37                     	;# 
  7130  0E8F                     	;# 
  7131  0E90                     	;# 
  7132  0E91                     	;# 
  7133  0E92                     	;# 
  7134  0E93                     	;# 
  7135  0E94                     	;# 
  7136  0E95                     	;# 
  7137  0E96                     	;# 
  7138  0E97                     	;# 
  7139  0E9C                     	;# 
  7140  0E9D                     	;# 
  7141  0E9E                     	;# 
  7142  0EA1                     	;# 
  7143  0EA2                     	;# 
  7144  0EA3                     	;# 
  7145  0EA4                     	;# 
  7146  0EA5                     	;# 
  7147  0EA9                     	;# 
  7148  0EAA                     	;# 
  7149  0EAB                     	;# 
  7150  0EAC                     	;# 
  7151  0EB1                     	;# 
  7152  0EB2                     	;# 
  7153  0EB3                     	;# 
  7154  0EB8                     	;# 
  7155  0EB9                     	;# 
  7156  0EBA                     	;# 
  7157  0EBB                     	;# 
  7158  0EBC                     	;# 
  7159  0EBD                     	;# 
  7160  0EBE                     	;# 
  7161  0EC3                     	;# 
  7162  0EC5                     	;# 
  7163  0EC6                     	;# 
  7164  0EC7                     	;# 
  7165  0EC8                     	;# 
  7166  0EC9                     	;# 
  7167  0ECA                     	;# 
  7168  0ECB                     	;# 
  7169  0ECC                     	;# 
  7170  0F10                     	;# 
  7171  0F11                     	;# 
  7172  0F12                     	;# 
  7173  0F13                     	;# 
  7174  0F14                     	;# 
  7175  0F15                     	;# 
  7176  0F16                     	;# 
  7177  0F17                     	;# 
  7178  0F18                     	;# 
  7179  0F19                     	;# 
  7180  0F1A                     	;# 
  7181  0F1B                     	;# 
  7182  0F1C                     	;# 
  7183  0F1D                     	;# 
  7184  0F1E                     	;# 
  7185  0F1F                     	;# 
  7186  0F20                     	;# 
  7187  0F21                     	;# 
  7188  0F22                     	;# 
  7189  0F23                     	;# 
  7190  0F24                     	;# 
  7191  0F25                     	;# 
  7192  0F26                     	;# 
  7193  0F27                     	;# 
  7194  0F28                     	;# 
  7195  0F29                     	;# 
  7196  0F2A                     	;# 
  7197  0F2B                     	;# 
  7198  0F2C                     	;# 
  7199  0F2D                     	;# 
  7200  0F2E                     	;# 
  7201  0F2F                     	;# 
  7202  0F30                     	;# 
  7203  0F31                     	;# 
  7204  0F32                     	;# 
  7205  0F38                     	;# 
  7206  0F39                     	;# 
  7207  0F3A                     	;# 
  7208  0F3B                     	;# 
  7209  0F3C                     	;# 
  7210  0F3D                     	;# 
  7211  0F3E                     	;# 
  7212  0F3F                     	;# 
  7213  0F40                     	;# 
  7214  0F41                     	;# 
  7215  0F43                     	;# 
  7216  0F44                     	;# 
  7217  0F45                     	;# 
  7218  0F46                     	;# 
  7219  0F47                     	;# 
  7220  0F48                     	;# 
  7221  0F49                     	;# 
  7222  0F4A                     	;# 
  7223  0F4B                     	;# 
  7224  0F4C                     	;# 
  7225  0F4E                     	;# 
  7226  0F4F                     	;# 
  7227  0F50                     	;# 
  7228  0F51                     	;# 
  7229  0F52                     	;# 
  7230  0F53                     	;# 
  7231  0F54                     	;# 
  7232  0F55                     	;# 
  7233  0F56                     	;# 
  7234  0F57                     	;# 
  7235  0F59                     	;# 
  7236  0F5A                     	;# 
  7237  0F5B                     	;# 
  7238  0F5C                     	;# 
  7239  0F5D                     	;# 
  7240  0F61                     	;# 
  7241  0F62                     	;# 
  7242  0F64                     	;# 
  7243  0F65                     	;# 
  7244  0F66                     	;# 
  7245  0F67                     	;# 
  7246  0F68                     	;# 
  7247  0F69                     	;# 
  7248  0F6A                     	;# 
  7249  0F6B                     	;# 
  7250  0F6C                     	;# 
  7251  0F6D                     	;# 
  7252  0FE4                     	;# 
  7253  0FE5                     	;# 
  7254  0FE6                     	;# 
  7255  0FE7                     	;# 
  7256  0FE8                     	;# 
  7257  0FE9                     	;# 
  7258  0FEA                     	;# 
  7259  0FEB                     	;# 
  7260  0FED                     	;# 
  7261  0FEE                     	;# 
  7262  0FEF                     	;# 
  7263  0000                     	;# 
  7264  0001                     	;# 
  7265  0002                     	;# 
  7266  0003                     	;# 
  7267  0004                     	;# 
  7268  0005                     	;# 
  7269  0006                     	;# 
  7270  0007                     	;# 
  7271  0008                     	;# 
  7272  0009                     	;# 
  7273  000A                     	;# 
  7274  000B                     	;# 
  7275  000C                     	;# 
  7276  000D                     	;# 
  7277  000E                     	;# 
  7278  000F                     	;# 
  7279  0010                     	;# 
  7280  0011                     	;# 
  7281  0012                     	;# 
  7282  0013                     	;# 
  7283  0014                     	;# 
  7284  0015                     	;# 
  7285  0016                     	;# 
  7286  0017                     	;# 
  7287  0018                     	;# 
  7288  0019                     	;# 
  7289  001A                     	;# 
  7290  001C                     	;# 
  7291  001C                     	;# 
  7292  001D                     	;# 
  7293  001D                     	;# 
  7294  001E                     	;# 
  7295  001F                     	;# 
  7296  008C                     	;# 
  7297  008C                     	;# 
  7298  008D                     	;# 
  7299  008E                     	;# 
  7300  008E                     	;# 
  7301  008F                     	;# 
  7302  0090                     	;# 
  7303  0090                     	;# 
  7304  0091                     	;# 
  7305  0093                     	;# 
  7306  0094                     	;# 
  7307  0095                     	;# 
  7308  0096                     	;# 
  7309  0097                     	;# 
  7310  0098                     	;# 
  7311  0099                     	;# 
  7312  009A                     	;# 
  7313  009B                     	;# 
  7314  009C                     	;# 
  7315  009D                     	;# 
  7316  009E                     	;# 
  7317  010C                     	;# 
  7318  010D                     	;# 
  7319  010E                     	;# 
  7320  010E                     	;# 
  7321  010F                     	;# 
  7322  0110                     	;# 
  7323  0110                     	;# 
  7324  0111                     	;# 
  7325  0112                     	;# 
  7326  0112                     	;# 
  7327  0113                     	;# 
  7328  0114                     	;# 
  7329  0114                     	;# 
  7330  0115                     	;# 
  7331  0116                     	;# 
  7332  0116                     	;# 
  7333  0117                     	;# 
  7334  0119                     	;# 
  7335  0119                     	;# 
  7336  0119                     	;# 
  7337  011A                     	;# 
  7338  011A                     	;# 
  7339  011A                     	;# 
  7340  011B                     	;# 
  7341  011B                     	;# 
  7342  011B                     	;# 
  7343  011B                     	;# 
  7344  011B                     	;# 
  7345  011C                     	;# 
  7346  011C                     	;# 
  7347  011C                     	;# 
  7348  011D                     	;# 
  7349  011D                     	;# 
  7350  011D                     	;# 
  7351  011E                     	;# 
  7352  011E                     	;# 
  7353  011E                     	;# 
  7354  011F                     	;# 
  7355  011F                     	;# 
  7356  011F                     	;# 
  7357  011F                     	;# 
  7358  011F                     	;# 
  7359  018C                     	;# 
  7360  018D                     	;# 
  7361  018E                     	;# 
  7362  018F                     	;# 
  7363  0190                     	;# 
  7364  0191                     	;# 
  7365  0192                     	;# 
  7366  0196                     	;# 
  7367  0197                     	;# 
  7368  0198                     	;# 
  7369  0199                     	;# 
  7370  019A                     	;# 
  7371  019B                     	;# 
  7372  019C                     	;# 
  7373  020C                     	;# 
  7374  020C                     	;# 
  7375  020D                     	;# 
  7376  020E                     	;# 
  7377  020F                     	;# 
  7378  020F                     	;# 
  7379  0210                     	;# 
  7380  0210                     	;# 
  7381  0211                     	;# 
  7382  0211                     	;# 
  7383  0212                     	;# 
  7384  0212                     	;# 
  7385  0213                     	;# 
  7386  0214                     	;# 
  7387  0215                     	;# 
  7388  0215                     	;# 
  7389  0216                     	;# 
  7390  0216                     	;# 
  7391  0217                     	;# 
  7392  0217                     	;# 
  7393  0218                     	;# 
  7394  0218                     	;# 
  7395  0219                     	;# 
  7396  021A                     	;# 
  7397  021B                     	;# 
  7398  021B                     	;# 
  7399  021C                     	;# 
  7400  021C                     	;# 
  7401  021D                     	;# 
  7402  021D                     	;# 
  7403  021E                     	;# 
  7404  021F                     	;# 
  7405  028C                     	;# 
  7406  028C                     	;# 
  7407  028D                     	;# 
  7408  028D                     	;# 
  7409  028E                     	;# 
  7410  028F                     	;# 
  7411  0290                     	;# 
  7412  0290                     	;# 
  7413  0291                     	;# 
  7414  0292                     	;# 
  7415  0292                     	;# 
  7416  0293                     	;# 
  7417  0293                     	;# 
  7418  0294                     	;# 
  7419  0295                     	;# 
  7420  0296                     	;# 
  7421  0296                     	;# 
  7422  0297                     	;# 
  7423  0298                     	;# 
  7424  0298                     	;# 
  7425  0299                     	;# 
  7426  0299                     	;# 
  7427  029A                     	;# 
  7428  029B                     	;# 
  7429  029C                     	;# 
  7430  029C                     	;# 
  7431  029D                     	;# 
  7432  030C                     	;# 
  7433  030C                     	;# 
  7434  030D                     	;# 
  7435  030E                     	;# 
  7436  030F                     	;# 
  7437  0310                     	;# 
  7438  0310                     	;# 
  7439  0311                     	;# 
  7440  0312                     	;# 
  7441  0313                     	;# 
  7442  0314                     	;# 
  7443  0314                     	;# 
  7444  0315                     	;# 
  7445  0316                     	;# 
  7446  0317                     	;# 
  7447  0318                     	;# 
  7448  0318                     	;# 
  7449  0319                     	;# 
  7450  031A                     	;# 
  7451  031B                     	;# 
  7452  031C                     	;# 
  7453  031C                     	;# 
  7454  031D                     	;# 
  7455  031E                     	;# 
  7456  031F                     	;# 
  7457  038C                     	;# 
  7458  038C                     	;# 
  7459  038D                     	;# 
  7460  038E                     	;# 
  7461  0390                     	;# 
  7462  0390                     	;# 
  7463  0391                     	;# 
  7464  0392                     	;# 
  7465  040C                     	;# 
  7466  040D                     	;# 
  7467  040E                     	;# 
  7468  040F                     	;# 
  7469  0410                     	;# 
  7470  0411                     	;# 
  7471  0416                     	;# 
  7472  0416                     	;# 
  7473  0417                     	;# 
  7474  0418                     	;# 
  7475  0418                     	;# 
  7476  0419                     	;# 
  7477  041A                     	;# 
  7478  041A                     	;# 
  7479  041B                     	;# 
  7480  041C                     	;# 
  7481  041C                     	;# 
  7482  041D                     	;# 
  7483  041E                     	;# 
  7484  041F                     	;# 
  7485  048C                     	;# 
  7486  048C                     	;# 
  7487  048D                     	;# 
  7488  048E                     	;# 
  7489  048F                     	;# 
  7490  048F                     	;# 
  7491  0490                     	;# 
  7492  0491                     	;# 
  7493  0492                     	;# 
  7494  0492                     	;# 
  7495  0493                     	;# 
  7496  0494                     	;# 
  7497  0495                     	;# 
  7498  0495                     	;# 
  7499  0496                     	;# 
  7500  0497                     	;# 
  7501  0498                     	;# 
  7502  0499                     	;# 
  7503  049A                     	;# 
  7504  049B                     	;# 
  7505  049C                     	;# 
  7506  049D                     	;# 
  7507  050C                     	;# 
  7508  050C                     	;# 
  7509  050D                     	;# 
  7510  050E                     	;# 
  7511  050F                     	;# 
  7512  050F                     	;# 
  7513  0510                     	;# 
  7514  0511                     	;# 
  7515  0512                     	;# 
  7516  0512                     	;# 
  7517  0513                     	;# 
  7518  0514                     	;# 
  7519  0515                     	;# 
  7520  0515                     	;# 
  7521  0516                     	;# 
  7522  0517                     	;# 
  7523  0518                     	;# 
  7524  0519                     	;# 
  7525  051A                     	;# 
  7526  051B                     	;# 
  7527  051C                     	;# 
  7528  051D                     	;# 
  7529  058C                     	;# 
  7530  058C                     	;# 
  7531  058D                     	;# 
  7532  058E                     	;# 
  7533  058F                     	;# 
  7534  058F                     	;# 
  7535  0590                     	;# 
  7536  0591                     	;# 
  7537  0592                     	;# 
  7538  0593                     	;# 
  7539  060C                     	;# 
  7540  060D                     	;# 
  7541  060E                     	;# 
  7542  060F                     	;# 
  7543  0610                     	;# 
  7544  0611                     	;# 
  7545  0612                     	;# 
  7546  0613                     	;# 
  7547  0614                     	;# 
  7548  0616                     	;# 
  7549  0617                     	;# 
  7550  0618                     	;# 
  7551  0619                     	;# 
  7552  061A                     	;# 
  7553  061B                     	;# 
  7554  061C                     	;# 
  7555  061D                     	;# 
  7556  061E                     	;# 
  7557  068C                     	;# 
  7558  068D                     	;# 
  7559  068E                     	;# 
  7560  068F                     	;# 
  7561  0690                     	;# 
  7562  0691                     	;# 
  7563  0692                     	;# 
  7564  0693                     	;# 
  7565  0694                     	;# 
  7566  070C                     	;# 
  7567  070D                     	;# 
  7568  070E                     	;# 
  7569  070F                     	;# 
  7570  0710                     	;# 
  7571  0711                     	;# 
  7572  0712                     	;# 
  7573  0713                     	;# 
  7574  0714                     	;# 
  7575  0716                     	;# 
  7576  0717                     	;# 
  7577  0718                     	;# 
  7578  0719                     	;# 
  7579  071A                     	;# 
  7580  071B                     	;# 
  7581  071C                     	;# 
  7582  071D                     	;# 
  7583  071E                     	;# 
  7584  0796                     	;# 
  7585  0797                     	;# 
  7586  0798                     	;# 
  7587  0799                     	;# 
  7588  079A                     	;# 
  7589  079B                     	;# 
  7590  080C                     	;# 
  7591  080D                     	;# 
  7592  080E                     	;# 
  7593  080F                     	;# 
  7594  0810                     	;# 
  7595  0811                     	;# 
  7596  0812                     	;# 
  7597  0813                     	;# 
  7598  0814                     	;# 
  7599  081A                     	;# 
  7600  081B                     	;# 
  7601  081C                     	;# 
  7602  081D                     	;# 
  7603  081E                     	;# 
  7604  081F                     	;# 
  7605  088C                     	;# 
  7606  088D                     	;# 
  7607  088E                     	;# 
  7608  088F                     	;# 
  7609  0890                     	;# 
  7610  0891                     	;# 
  7611  0892                     	;# 
  7612  0893                     	;# 
  7613  0895                     	;# 
  7614  0896                     	;# 
  7615  0897                     	;# 
  7616  0898                     	;# 
  7617  0899                     	;# 
  7618  089A                     	;# 
  7619  089B                     	;# 
  7620  090C                     	;# 
  7621  090E                     	;# 
  7622  090F                     	;# 
  7623  091F                     	;# 
  7624  091F                     	;# 
  7625  098F                     	;# 
  7626  098F                     	;# 
  7627  0990                     	;# 
  7628  0991                     	;# 
  7629  0992                     	;# 
  7630  0993                     	;# 
  7631  0994                     	;# 
  7632  0995                     	;# 
  7633  0996                     	;# 
  7634  0997                     	;# 
  7635  0E0F                     	;# 
  7636  0E10                     	;# 
  7637  0E11                     	;# 
  7638  0E12                     	;# 
  7639  0E13                     	;# 
  7640  0E14                     	;# 
  7641  0E15                     	;# 
  7642  0E16                     	;# 
  7643  0E17                     	;# 
  7644  0E18                     	;# 
  7645  0E19                     	;# 
  7646  0E1A                     	;# 
  7647  0E1B                     	;# 
  7648  0E1C                     	;# 
  7649  0E1D                     	;# 
  7650  0E1E                     	;# 
  7651  0E1F                     	;# 
  7652  0E20                     	;# 
  7653  0E21                     	;# 
  7654  0E22                     	;# 
  7655  0E23                     	;# 
  7656  0E24                     	;# 
  7657  0E25                     	;# 
  7658  0E26                     	;# 
  7659  0E27                     	;# 
  7660  0E28                     	;# 
  7661  0E29                     	;# 
  7662  0E2A                     	;# 
  7663  0E2B                     	;# 
  7664  0E2C                     	;# 
  7665  0E2D                     	;# 
  7666  0E2E                     	;# 
  7667  0E2F                     	;# 
  7668  0E30                     	;# 
  7669  0E31                     	;# 
  7670  0E32                     	;# 
  7671  0E33                     	;# 
  7672  0E34                     	;# 
  7673  0E35                     	;# 
  7674  0E36                     	;# 
  7675  0E37                     	;# 
  7676  0E8F                     	;# 
  7677  0E90                     	;# 
  7678  0E91                     	;# 
  7679  0E92                     	;# 
  7680  0E93                     	;# 
  7681  0E94                     	;# 
  7682  0E95                     	;# 
  7683  0E96                     	;# 
  7684  0E97                     	;# 
  7685  0E9C                     	;# 
  7686  0E9D                     	;# 
  7687  0E9E                     	;# 
  7688  0EA1                     	;# 
  7689  0EA2                     	;# 
  7690  0EA3                     	;# 
  7691  0EA4                     	;# 
  7692  0EA5                     	;# 
  7693  0EA9                     	;# 
  7694  0EAA                     	;# 
  7695  0EAB                     	;# 
  7696  0EAC                     	;# 
  7697  0EB1                     	;# 
  7698  0EB2                     	;# 
  7699  0EB3                     	;# 
  7700  0EB8                     	;# 
  7701  0EB9                     	;# 
  7702  0EBA                     	;# 
  7703  0EBB                     	;# 
  7704  0EBC                     	;# 
  7705  0EBD                     	;# 
  7706  0EBE                     	;# 
  7707  0EC3                     	;# 
  7708  0EC5                     	;# 
  7709  0EC6                     	;# 
  7710  0EC7                     	;# 
  7711  0EC8                     	;# 
  7712  0EC9                     	;# 
  7713  0ECA                     	;# 
  7714  0ECB                     	;# 
  7715  0ECC                     	;# 
  7716  0F10                     	;# 
  7717  0F11                     	;# 
  7718  0F12                     	;# 
  7719  0F13                     	;# 
  7720  0F14                     	;# 
  7721  0F15                     	;# 
  7722  0F16                     	;# 
  7723  0F17                     	;# 
  7724  0F18                     	;# 
  7725  0F19                     	;# 
  7726  0F1A                     	;# 
  7727  0F1B                     	;# 
  7728  0F1C                     	;# 
  7729  0F1D                     	;# 
  7730  0F1E                     	;# 
  7731  0F1F                     	;# 
  7732  0F20                     	;# 
  7733  0F21                     	;# 
  7734  0F22                     	;# 
  7735  0F23                     	;# 
  7736  0F24                     	;# 
  7737  0F25                     	;# 
  7738  0F26                     	;# 
  7739  0F27                     	;# 
  7740  0F28                     	;# 
  7741  0F29                     	;# 
  7742  0F2A                     	;# 
  7743  0F2B                     	;# 
  7744  0F2C                     	;# 
  7745  0F2D                     	;# 
  7746  0F2E                     	;# 
  7747  0F2F                     	;# 
  7748  0F30                     	;# 
  7749  0F31                     	;# 
  7750  0F32                     	;# 
  7751  0F38                     	;# 
  7752  0F39                     	;# 
  7753  0F3A                     	;# 
  7754  0F3B                     	;# 
  7755  0F3C                     	;# 
  7756  0F3D                     	;# 
  7757  0F3E                     	;# 
  7758  0F3F                     	;# 
  7759  0F40                     	;# 
  7760  0F41                     	;# 
  7761  0F43                     	;# 
  7762  0F44                     	;# 
  7763  0F45                     	;# 
  7764  0F46                     	;# 
  7765  0F47                     	;# 
  7766  0F48                     	;# 
  7767  0F49                     	;# 
  7768  0F4A                     	;# 
  7769  0F4B                     	;# 
  7770  0F4C                     	;# 
  7771  0F4E                     	;# 
  7772  0F4F                     	;# 
  7773  0F50                     	;# 
  7774  0F51                     	;# 
  7775  0F52                     	;# 
  7776  0F53                     	;# 
  7777  0F54                     	;# 
  7778  0F55                     	;# 
  7779  0F56                     	;# 
  7780  0F57                     	;# 
  7781  0F59                     	;# 
  7782  0F5A                     	;# 
  7783  0F5B                     	;# 
  7784  0F5C                     	;# 
  7785  0F5D                     	;# 
  7786  0F61                     	;# 
  7787  0F62                     	;# 
  7788  0F64                     	;# 
  7789  0F65                     	;# 
  7790  0F66                     	;# 
  7791  0F67                     	;# 
  7792  0F68                     	;# 
  7793  0F69                     	;# 
  7794  0F6A                     	;# 
  7795  0F6B                     	;# 
  7796  0F6C                     	;# 
  7797  0F6D                     	;# 
  7798  0FE4                     	;# 
  7799  0FE5                     	;# 
  7800  0FE6                     	;# 
  7801  0FE7                     	;# 
  7802  0FE8                     	;# 
  7803  0FE9                     	;# 
  7804  0FEA                     	;# 
  7805  0FEB                     	;# 
  7806  0FED                     	;# 
  7807  0FEE                     	;# 
  7808  0FEF                     	;# 
  7809  0000                     	;# 
  7810  0001                     	;# 
  7811  0002                     	;# 
  7812  0003                     	;# 
  7813  0004                     	;# 
  7814  0005                     	;# 
  7815  0006                     	;# 
  7816  0007                     	;# 
  7817  0008                     	;# 
  7818  0009                     	;# 
  7819  000A                     	;# 
  7820  000B                     	;# 
  7821  000C                     	;# 
  7822  000D                     	;# 
  7823  000E                     	;# 
  7824  000F                     	;# 
  7825  0010                     	;# 
  7826  0011                     	;# 
  7827  0012                     	;# 
  7828  0013                     	;# 
  7829  0014                     	;# 
  7830  0015                     	;# 
  7831  0016                     	;# 
  7832  0017                     	;# 
  7833  0018                     	;# 
  7834  0019                     	;# 
  7835  001A                     	;# 
  7836  001C                     	;# 
  7837  001C                     	;# 
  7838  001D                     	;# 
  7839  001D                     	;# 
  7840  001E                     	;# 
  7841  001F                     	;# 
  7842  008C                     	;# 
  7843  008C                     	;# 
  7844  008D                     	;# 
  7845  008E                     	;# 
  7846  008E                     	;# 
  7847  008F                     	;# 
  7848  0090                     	;# 
  7849  0090                     	;# 
  7850  0091                     	;# 
  7851  0093                     	;# 
  7852  0094                     	;# 
  7853  0095                     	;# 
  7854  0096                     	;# 
  7855  0097                     	;# 
  7856  0098                     	;# 
  7857  0099                     	;# 
  7858  009A                     	;# 
  7859  009B                     	;# 
  7860  009C                     	;# 
  7861  009D                     	;# 
  7862  009E                     	;# 
  7863  010C                     	;# 
  7864  010D                     	;# 
  7865  010E                     	;# 
  7866  010E                     	;# 
  7867  010F                     	;# 
  7868  0110                     	;# 
  7869  0110                     	;# 
  7870  0111                     	;# 
  7871  0112                     	;# 
  7872  0112                     	;# 
  7873  0113                     	;# 
  7874  0114                     	;# 
  7875  0114                     	;# 
  7876  0115                     	;# 
  7877  0116                     	;# 
  7878  0116                     	;# 
  7879  0117                     	;# 
  7880  0119                     	;# 
  7881  0119                     	;# 
  7882  0119                     	;# 
  7883  011A                     	;# 
  7884  011A                     	;# 
  7885  011A                     	;# 
  7886  011B                     	;# 
  7887  011B                     	;# 
  7888  011B                     	;# 
  7889  011B                     	;# 
  7890  011B                     	;# 
  7891  011C                     	;# 
  7892  011C                     	;# 
  7893  011C                     	;# 
  7894  011D                     	;# 
  7895  011D                     	;# 
  7896  011D                     	;# 
  7897  011E                     	;# 
  7898  011E                     	;# 
  7899  011E                     	;# 
  7900  011F                     	;# 
  7901  011F                     	;# 
  7902  011F                     	;# 
  7903  011F                     	;# 
  7904  011F                     	;# 
  7905  018C                     	;# 
  7906  018D                     	;# 
  7907  018E                     	;# 
  7908  018F                     	;# 
  7909  0190                     	;# 
  7910  0191                     	;# 
  7911  0192                     	;# 
  7912  0196                     	;# 
  7913  0197                     	;# 
  7914  0198                     	;# 
  7915  0199                     	;# 
  7916  019A                     	;# 
  7917  019B                     	;# 
  7918  019C                     	;# 
  7919  020C                     	;# 
  7920  020C                     	;# 
  7921  020D                     	;# 
  7922  020E                     	;# 
  7923  020F                     	;# 
  7924  020F                     	;# 
  7925  0210                     	;# 
  7926  0210                     	;# 
  7927  0211                     	;# 
  7928  0211                     	;# 
  7929  0212                     	;# 
  7930  0212                     	;# 
  7931  0213                     	;# 
  7932  0214                     	;# 
  7933  0215                     	;# 
  7934  0215                     	;# 
  7935  0216                     	;# 
  7936  0216                     	;# 
  7937  0217                     	;# 
  7938  0217                     	;# 
  7939  0218                     	;# 
  7940  0218                     	;# 
  7941  0219                     	;# 
  7942  021A                     	;# 
  7943  021B                     	;# 
  7944  021B                     	;# 
  7945  021C                     	;# 
  7946  021C                     	;# 
  7947  021D                     	;# 
  7948  021D                     	;# 
  7949  021E                     	;# 
  7950  021F                     	;# 
  7951  028C                     	;# 
  7952  028C                     	;# 
  7953  028D                     	;# 
  7954  028D                     	;# 
  7955  028E                     	;# 
  7956  028F                     	;# 
  7957  0290                     	;# 
  7958  0290                     	;# 
  7959  0291                     	;# 
  7960  0292                     	;# 
  7961  0292                     	;# 
  7962  0293                     	;# 
  7963  0293                     	;# 
  7964  0294                     	;# 
  7965  0295                     	;# 
  7966  0296                     	;# 
  7967  0296                     	;# 
  7968  0297                     	;# 
  7969  0298                     	;# 
  7970  0298                     	;# 
  7971  0299                     	;# 
  7972  0299                     	;# 
  7973  029A                     	;# 
  7974  029B                     	;# 
  7975  029C                     	;# 
  7976  029C                     	;# 
  7977  029D                     	;# 
  7978  030C                     	;# 
  7979  030C                     	;# 
  7980  030D                     	;# 
  7981  030E                     	;# 
  7982  030F                     	;# 
  7983  0310                     	;# 
  7984  0310                     	;# 
  7985  0311                     	;# 
  7986  0312                     	;# 
  7987  0313                     	;# 
  7988  0314                     	;# 
  7989  0314                     	;# 
  7990  0315                     	;# 
  7991  0316                     	;# 
  7992  0317                     	;# 
  7993  0318                     	;# 
  7994  0318                     	;# 
  7995  0319                     	;# 
  7996  031A                     	;# 
  7997  031B                     	;# 
  7998  031C                     	;# 
  7999  031C                     	;# 
  8000  031D                     	;# 
  8001  031E                     	;# 
  8002  031F                     	;# 
  8003  038C                     	;# 
  8004  038C                     	;# 
  8005  038D                     	;# 
  8006  038E                     	;# 
  8007  0390                     	;# 
  8008  0390                     	;# 
  8009  0391                     	;# 
  8010  0392                     	;# 
  8011  040C                     	;# 
  8012  040D                     	;# 
  8013  040E                     	;# 
  8014  040F                     	;# 
  8015  0410                     	;# 
  8016  0411                     	;# 
  8017  0416                     	;# 
  8018  0416                     	;# 
  8019  0417                     	;# 
  8020  0418                     	;# 
  8021  0418                     	;# 
  8022  0419                     	;# 
  8023  041A                     	;# 
  8024  041A                     	;# 
  8025  041B                     	;# 
  8026  041C                     	;# 
  8027  041C                     	;# 
  8028  041D                     	;# 
  8029  041E                     	;# 
  8030  041F                     	;# 
  8031  048C                     	;# 
  8032  048C                     	;# 
  8033  048D                     	;# 
  8034  048E                     	;# 
  8035  048F                     	;# 
  8036  048F                     	;# 
  8037  0490                     	;# 
  8038  0491                     	;# 
  8039  0492                     	;# 
  8040  0492                     	;# 
  8041  0493                     	;# 
  8042  0494                     	;# 
  8043  0495                     	;# 
  8044  0495                     	;# 
  8045  0496                     	;# 
  8046  0497                     	;# 
  8047  0498                     	;# 
  8048  0499                     	;# 
  8049  049A                     	;# 
  8050  049B                     	;# 
  8051  049C                     	;# 
  8052  049D                     	;# 
  8053  050C                     	;# 
  8054  050C                     	;# 
  8055  050D                     	;# 
  8056  050E                     	;# 
  8057  050F                     	;# 
  8058  050F                     	;# 
  8059  0510                     	;# 
  8060  0511                     	;# 
  8061  0512                     	;# 
  8062  0512                     	;# 
  8063  0513                     	;# 
  8064  0514                     	;# 
  8065  0515                     	;# 
  8066  0515                     	;# 
  8067  0516                     	;# 
  8068  0517                     	;# 
  8069  0518                     	;# 
  8070  0519                     	;# 
  8071  051A                     	;# 
  8072  051B                     	;# 
  8073  051C                     	;# 
  8074  051D                     	;# 
  8075  058C                     	;# 
  8076  058C                     	;# 
  8077  058D                     	;# 
  8078  058E                     	;# 
  8079  058F                     	;# 
  8080  058F                     	;# 
  8081  0590                     	;# 
  8082  0591                     	;# 
  8083  0592                     	;# 
  8084  0593                     	;# 
  8085  060C                     	;# 
  8086  060D                     	;# 
  8087  060E                     	;# 
  8088  060F                     	;# 
  8089  0610                     	;# 
  8090  0611                     	;# 
  8091  0612                     	;# 
  8092  0613                     	;# 
  8093  0614                     	;# 
  8094  0616                     	;# 
  8095  0617                     	;# 
  8096  0618                     	;# 
  8097  0619                     	;# 
  8098  061A                     	;# 
  8099  061B                     	;# 
  8100  061C                     	;# 
  8101  061D                     	;# 
  8102  061E                     	;# 
  8103  068C                     	;# 
  8104  068D                     	;# 
  8105  068E                     	;# 
  8106  068F                     	;# 
  8107  0690                     	;# 
  8108  0691                     	;# 
  8109  0692                     	;# 
  8110  0693                     	;# 
  8111  0694                     	;# 
  8112  070C                     	;# 
  8113  070D                     	;# 
  8114  070E                     	;# 
  8115  070F                     	;# 
  8116  0710                     	;# 
  8117  0711                     	;# 
  8118  0712                     	;# 
  8119  0713                     	;# 
  8120  0714                     	;# 
  8121  0716                     	;# 
  8122  0717                     	;# 
  8123  0718                     	;# 
  8124  0719                     	;# 
  8125  071A                     	;# 
  8126  071B                     	;# 
  8127  071C                     	;# 
  8128  071D                     	;# 
  8129  071E                     	;# 
  8130  0796                     	;# 
  8131  0797                     	;# 
  8132  0798                     	;# 
  8133  0799                     	;# 
  8134  079A                     	;# 
  8135  079B                     	;# 
  8136  080C                     	;# 
  8137  080D                     	;# 
  8138  080E                     	;# 
  8139  080F                     	;# 
  8140  0810                     	;# 
  8141  0811                     	;# 
  8142  0812                     	;# 
  8143  0813                     	;# 
  8144  0814                     	;# 
  8145  081A                     	;# 
  8146  081B                     	;# 
  8147  081C                     	;# 
  8148  081D                     	;# 
  8149  081E                     	;# 
  8150  081F                     	;# 
  8151  088C                     	;# 
  8152  088D                     	;# 
  8153  088E                     	;# 
  8154  088F                     	;# 
  8155  0890                     	;# 
  8156  0891                     	;# 
  8157  0892                     	;# 
  8158  0893                     	;# 
  8159  0895                     	;# 
  8160  0896                     	;# 
  8161  0897                     	;# 
  8162  0898                     	;# 
  8163  0899                     	;# 
  8164  089A                     	;# 
  8165  089B                     	;# 
  8166  090C                     	;# 
  8167  090E                     	;# 
  8168  090F                     	;# 
  8169  091F                     	;# 
  8170  091F                     	;# 
  8171  098F                     	;# 
  8172  098F                     	;# 
  8173  0990                     	;# 
  8174  0991                     	;# 
  8175  0992                     	;# 
  8176  0993                     	;# 
  8177  0994                     	;# 
  8178  0995                     	;# 
  8179  0996                     	;# 
  8180  0997                     	;# 
  8181  0E0F                     	;# 
  8182  0E10                     	;# 
  8183  0E11                     	;# 
  8184  0E12                     	;# 
  8185  0E13                     	;# 
  8186  0E14                     	;# 
  8187  0E15                     	;# 
  8188  0E16                     	;# 
  8189  0E17                     	;# 
  8190  0E18                     	;# 
  8191  0E19                     	;# 
  8192  0E1A                     	;# 
  8193  0E1B                     	;# 
  8194  0E1C                     	;# 
  8195  0E1D                     	;# 
  8196  0E1E                     	;# 
  8197  0E1F                     	;# 
  8198  0E20                     	;# 
  8199  0E21                     	;# 
  8200  0E22                     	;# 
  8201  0E23                     	;# 
  8202  0E24                     	;# 
  8203  0E25                     	;# 
  8204  0E26                     	;# 
  8205  0E27                     	;# 
  8206  0E28                     	;# 
  8207  0E29                     	;# 
  8208  0E2A                     	;# 
  8209  0E2B                     	;# 
  8210  0E2C                     	;# 
  8211  0E2D                     	;# 
  8212  0E2E                     	;# 
  8213  0E2F                     	;# 
  8214  0E30                     	;# 
  8215  0E31                     	;# 
  8216  0E32                     	;# 
  8217  0E33                     	;# 
  8218  0E34                     	;# 
  8219  0E35                     	;# 
  8220  0E36                     	;# 
  8221  0E37                     	;# 
  8222  0E8F                     	;# 
  8223  0E90                     	;# 
  8224  0E91                     	;# 
  8225  0E92                     	;# 
  8226  0E93                     	;# 
  8227  0E94                     	;# 
  8228  0E95                     	;# 
  8229  0E96                     	;# 
  8230  0E97                     	;# 
  8231  0E9C                     	;# 
  8232  0E9D                     	;# 
  8233  0E9E                     	;# 
  8234  0EA1                     	;# 
  8235  0EA2                     	;# 
  8236  0EA3                     	;# 
  8237  0EA4                     	;# 
  8238  0EA5                     	;# 
  8239  0EA9                     	;# 
  8240  0EAA                     	;# 
  8241  0EAB                     	;# 
  8242  0EAC                     	;# 
  8243  0EB1                     	;# 
  8244  0EB2                     	;# 
  8245  0EB3                     	;# 
  8246  0EB8                     	;# 
  8247  0EB9                     	;# 
  8248  0EBA                     	;# 
  8249  0EBB                     	;# 
  8250  0EBC                     	;# 
  8251  0EBD                     	;# 
  8252  0EBE                     	;# 
  8253  0EC3                     	;# 
  8254  0EC5                     	;# 
  8255  0EC6                     	;# 
  8256  0EC7                     	;# 
  8257  0EC8                     	;# 
  8258  0EC9                     	;# 
  8259  0ECA                     	;# 
  8260  0ECB                     	;# 
  8261  0ECC                     	;# 
  8262  0F10                     	;# 
  8263  0F11                     	;# 
  8264  0F12                     	;# 
  8265  0F13                     	;# 
  8266  0F14                     	;# 
  8267  0F15                     	;# 
  8268  0F16                     	;# 
  8269  0F17                     	;# 
  8270  0F18                     	;# 
  8271  0F19                     	;# 
  8272  0F1A                     	;# 
  8273  0F1B                     	;# 
  8274  0F1C                     	;# 
  8275  0F1D                     	;# 
  8276  0F1E                     	;# 
  8277  0F1F                     	;# 
  8278  0F20                     	;# 
  8279  0F21                     	;# 
  8280  0F22                     	;# 
  8281  0F23                     	;# 
  8282  0F24                     	;# 
  8283  0F25                     	;# 
  8284  0F26                     	;# 
  8285  0F27                     	;# 
  8286  0F28                     	;# 
  8287  0F29                     	;# 
  8288  0F2A                     	;# 
  8289  0F2B                     	;# 
  8290  0F2C                     	;# 
  8291  0F2D                     	;# 
  8292  0F2E                     	;# 
  8293  0F2F                     	;# 
  8294  0F30                     	;# 
  8295  0F31                     	;# 
  8296  0F32                     	;# 
  8297  0F38                     	;# 
  8298  0F39                     	;# 
  8299  0F3A                     	;# 
  8300  0F3B                     	;# 
  8301  0F3C                     	;# 
  8302  0F3D                     	;# 
  8303  0F3E                     	;# 
  8304  0F3F                     	;# 
  8305  0F40                     	;# 
  8306  0F41                     	;# 
  8307  0F43                     	;# 
  8308  0F44                     	;# 
  8309  0F45                     	;# 
  8310  0F46                     	;# 
  8311  0F47                     	;# 
  8312  0F48                     	;# 
  8313  0F49                     	;# 
  8314  0F4A                     	;# 
  8315  0F4B                     	;# 
  8316  0F4C                     	;# 
  8317  0F4E                     	;# 
  8318  0F4F                     	;# 
  8319  0F50                     	;# 
  8320  0F51                     	;# 
  8321  0F52                     	;# 
  8322  0F53                     	;# 
  8323  0F54                     	;# 
  8324  0F55                     	;# 
  8325  0F56                     	;# 
  8326  0F57                     	;# 
  8327  0F59                     	;# 
  8328  0F5A                     	;# 
  8329  0F5B                     	;# 
  8330  0F5C                     	;# 
  8331  0F5D                     	;# 
  8332  0F61                     	;# 
  8333  0F62                     	;# 
  8334  0F64                     	;# 
  8335  0F65                     	;# 
  8336  0F66                     	;# 
  8337  0F67                     	;# 
  8338  0F68                     	;# 
  8339  0F69                     	;# 
  8340  0F6A                     	;# 
  8341  0F6B                     	;# 
  8342  0F6C                     	;# 
  8343  0F6D                     	;# 
  8344  0FE4                     	;# 
  8345  0FE5                     	;# 
  8346  0FE6                     	;# 
  8347  0FE7                     	;# 
  8348  0FE8                     	;# 
  8349  0FE9                     	;# 
  8350  0FEA                     	;# 
  8351  0FEB                     	;# 
  8352  0FED                     	;# 
  8353  0FEE                     	;# 
  8354  0FEF                     	;# 
  8355  0000                     	;# 
  8356  0001                     	;# 
  8357  0002                     	;# 
  8358  0003                     	;# 
  8359  0004                     	;# 
  8360  0005                     	;# 
  8361  0006                     	;# 
  8362  0007                     	;# 
  8363  0008                     	;# 
  8364  0009                     	;# 
  8365  000A                     	;# 
  8366  000B                     	;# 
  8367  000C                     	;# 
  8368  000D                     	;# 
  8369  000E                     	;# 
  8370  000F                     	;# 
  8371  0010                     	;# 
  8372  0011                     	;# 
  8373  0012                     	;# 
  8374  0013                     	;# 
  8375  0014                     	;# 
  8376  0015                     	;# 
  8377  0016                     	;# 
  8378  0017                     	;# 
  8379  0018                     	;# 
  8380  0019                     	;# 
  8381  001A                     	;# 
  8382  001C                     	;# 
  8383  001C                     	;# 
  8384  001D                     	;# 
  8385  001D                     	;# 
  8386  001E                     	;# 
  8387  001F                     	;# 
  8388  008C                     	;# 
  8389  008C                     	;# 
  8390  008D                     	;# 
  8391  008E                     	;# 
  8392  008E                     	;# 
  8393  008F                     	;# 
  8394  0090                     	;# 
  8395  0090                     	;# 
  8396  0091                     	;# 
  8397  0093                     	;# 
  8398  0094                     	;# 
  8399  0095                     	;# 
  8400  0096                     	;# 
  8401  0097                     	;# 
  8402  0098                     	;# 
  8403  0099                     	;# 
  8404  009A                     	;# 
  8405  009B                     	;# 
  8406  009C                     	;# 
  8407  009D                     	;# 
  8408  009E                     	;# 
  8409  010C                     	;# 
  8410  010D                     	;# 
  8411  010E                     	;# 
  8412  010E                     	;# 
  8413  010F                     	;# 
  8414  0110                     	;# 
  8415  0110                     	;# 
  8416  0111                     	;# 
  8417  0112                     	;# 
  8418  0112                     	;# 
  8419  0113                     	;# 
  8420  0114                     	;# 
  8421  0114                     	;# 
  8422  0115                     	;# 
  8423  0116                     	;# 
  8424  0116                     	;# 
  8425  0117                     	;# 
  8426  0119                     	;# 
  8427  0119                     	;# 
  8428  0119                     	;# 
  8429  011A                     	;# 
  8430  011A                     	;# 
  8431  011A                     	;# 
  8432  011B                     	;# 
  8433  011B                     	;# 
  8434  011B                     	;# 
  8435  011B                     	;# 
  8436  011B                     	;# 
  8437  011C                     	;# 
  8438  011C                     	;# 
  8439  011C                     	;# 
  8440  011D                     	;# 
  8441  011D                     	;# 
  8442  011D                     	;# 
  8443  011E                     	;# 
  8444  011E                     	;# 
  8445  011E                     	;# 
  8446  011F                     	;# 
  8447  011F                     	;# 
  8448  011F                     	;# 
  8449  011F                     	;# 
  8450  011F                     	;# 
  8451  018C                     	;# 
  8452  018D                     	;# 
  8453  018E                     	;# 
  8454  018F                     	;# 
  8455  0190                     	;# 
  8456  0191                     	;# 
  8457  0192                     	;# 
  8458  0196                     	;# 
  8459  0197                     	;# 
  8460  0198                     	;# 
  8461  0199                     	;# 
  8462  019A                     	;# 
  8463  019B                     	;# 
  8464  019C                     	;# 
  8465  020C                     	;# 
  8466  020C                     	;# 
  8467  020D                     	;# 
  8468  020E                     	;# 
  8469  020F                     	;# 
  8470  020F                     	;# 
  8471  0210                     	;# 
  8472  0210                     	;# 
  8473  0211                     	;# 
  8474  0211                     	;# 
  8475  0212                     	;# 
  8476  0212                     	;# 
  8477  0213                     	;# 
  8478  0214                     	;# 
  8479  0215                     	;# 
  8480  0215                     	;# 
  8481  0216                     	;# 
  8482  0216                     	;# 
  8483  0217                     	;# 
  8484  0217                     	;# 
  8485  0218                     	;# 
  8486  0218                     	;# 
  8487  0219                     	;# 
  8488  021A                     	;# 
  8489  021B                     	;# 
  8490  021B                     	;# 
  8491  021C                     	;# 
  8492  021C                     	;# 
  8493  021D                     	;# 
  8494  021D                     	;# 
  8495  021E                     	;# 
  8496  021F                     	;# 
  8497  028C                     	;# 
  8498  028C                     	;# 
  8499  028D                     	;# 
  8500  028D                     	;# 
  8501  028E                     	;# 
  8502  028F                     	;# 
  8503  0290                     	;# 
  8504  0290                     	;# 
  8505  0291                     	;# 
  8506  0292                     	;# 
  8507  0292                     	;# 
  8508  0293                     	;# 
  8509  0293                     	;# 
  8510  0294                     	;# 
  8511  0295                     	;# 
  8512  0296                     	;# 
  8513  0296                     	;# 
  8514  0297                     	;# 
  8515  0298                     	;# 
  8516  0298                     	;# 
  8517  0299                     	;# 
  8518  0299                     	;# 
  8519  029A                     	;# 
  8520  029B                     	;# 
  8521  029C                     	;# 
  8522  029C                     	;# 
  8523  029D                     	;# 
  8524  030C                     	;# 
  8525  030C                     	;# 
  8526  030D                     	;# 
  8527  030E                     	;# 
  8528  030F                     	;# 
  8529  0310                     	;# 
  8530  0310                     	;# 
  8531  0311                     	;# 
  8532  0312                     	;# 
  8533  0313                     	;# 
  8534  0314                     	;# 
  8535  0314                     	;# 
  8536  0315                     	;# 
  8537  0316                     	;# 
  8538  0317                     	;# 
  8539  0318                     	;# 
  8540  0318                     	;# 
  8541  0319                     	;# 
  8542  031A                     	;# 
  8543  031B                     	;# 
  8544  031C                     	;# 
  8545  031C                     	;# 
  8546  031D                     	;# 
  8547  031E                     	;# 
  8548  031F                     	;# 
  8549  038C                     	;# 
  8550  038C                     	;# 
  8551  038D                     	;# 
  8552  038E                     	;# 
  8553  0390                     	;# 
  8554  0390                     	;# 
  8555  0391                     	;# 
  8556  0392                     	;# 
  8557  040C                     	;# 
  8558  040D                     	;# 
  8559  040E                     	;# 
  8560  040F                     	;# 
  8561  0410                     	;# 
  8562  0411                     	;# 
  8563  0416                     	;# 
  8564  0416                     	;# 
  8565  0417                     	;# 
  8566  0418                     	;# 
  8567  0418                     	;# 
  8568  0419                     	;# 
  8569  041A                     	;# 
  8570  041A                     	;# 
  8571  041B                     	;# 
  8572  041C                     	;# 
  8573  041C                     	;# 
  8574  041D                     	;# 
  8575  041E                     	;# 
  8576  041F                     	;# 
  8577  048C                     	;# 
  8578  048C                     	;# 
  8579  048D                     	;# 
  8580  048E                     	;# 
  8581  048F                     	;# 
  8582  048F                     	;# 
  8583  0490                     	;# 
  8584  0491                     	;# 
  8585  0492                     	;# 
  8586  0492                     	;# 
  8587  0493                     	;# 
  8588  0494                     	;# 
  8589  0495                     	;# 
  8590  0495                     	;# 
  8591  0496                     	;# 
  8592  0497                     	;# 
  8593  0498                     	;# 
  8594  0499                     	;# 
  8595  049A                     	;# 
  8596  049B                     	;# 
  8597  049C                     	;# 
  8598  049D                     	;# 
  8599  050C                     	;# 
  8600  050C                     	;# 
  8601  050D                     	;# 
  8602  050E                     	;# 
  8603  050F                     	;# 
  8604  050F                     	;# 
  8605  0510                     	;# 
  8606  0511                     	;# 
  8607  0512                     	;# 
  8608  0512                     	;# 
  8609  0513                     	;# 
  8610  0514                     	;# 
  8611  0515                     	;# 
  8612  0515                     	;# 
  8613  0516                     	;# 
  8614  0517                     	;# 
  8615  0518                     	;# 
  8616  0519                     	;# 
  8617  051A                     	;# 
  8618  051B                     	;# 
  8619  051C                     	;# 
  8620  051D                     	;# 
  8621  058C                     	;# 
  8622  058C                     	;# 
  8623  058D                     	;# 
  8624  058E                     	;# 
  8625  058F                     	;# 
  8626  058F                     	;# 
  8627  0590                     	;# 
  8628  0591                     	;# 
  8629  0592                     	;# 
  8630  0593                     	;# 
  8631  060C                     	;# 
  8632  060D                     	;# 
  8633  060E                     	;# 
  8634  060F                     	;# 
  8635  0610                     	;# 
  8636  0611                     	;# 
  8637  0612                     	;# 
  8638  0613                     	;# 
  8639  0614                     	;# 
  8640  0616                     	;# 
  8641  0617                     	;# 
  8642  0618                     	;# 
  8643  0619                     	;# 
  8644  061A                     	;# 
  8645  061B                     	;# 
  8646  061C                     	;# 
  8647  061D                     	;# 
  8648  061E                     	;# 
  8649  068C                     	;# 
  8650  068D                     	;# 
  8651  068E                     	;# 
  8652  068F                     	;# 
  8653  0690                     	;# 
  8654  0691                     	;# 
  8655  0692                     	;# 
  8656  0693                     	;# 
  8657  0694                     	;# 
  8658  070C                     	;# 
  8659  070D                     	;# 
  8660  070E                     	;# 
  8661  070F                     	;# 
  8662  0710                     	;# 
  8663  0711                     	;# 
  8664  0712                     	;# 
  8665  0713                     	;# 
  8666  0714                     	;# 
  8667  0716                     	;# 
  8668  0717                     	;# 
  8669  0718                     	;# 
  8670  0719                     	;# 
  8671  071A                     	;# 
  8672  071B                     	;# 
  8673  071C                     	;# 
  8674  071D                     	;# 
  8675  071E                     	;# 
  8676  0796                     	;# 
  8677  0797                     	;# 
  8678  0798                     	;# 
  8679  0799                     	;# 
  8680  079A                     	;# 
  8681  079B                     	;# 
  8682  080C                     	;# 
  8683  080D                     	;# 
  8684  080E                     	;# 
  8685  080F                     	;# 
  8686  0810                     	;# 
  8687  0811                     	;# 
  8688  0812                     	;# 
  8689  0813                     	;# 
  8690  0814                     	;# 
  8691  081A                     	;# 
  8692  081B                     	;# 
  8693  081C                     	;# 
  8694  081D                     	;# 
  8695  081E                     	;# 
  8696  081F                     	;# 
  8697  088C                     	;# 
  8698  088D                     	;# 
  8699  088E                     	;# 
  8700  088F                     	;# 
  8701  0890                     	;# 
  8702  0891                     	;# 
  8703  0892                     	;# 
  8704  0893                     	;# 
  8705  0895                     	;# 
  8706  0896                     	;# 
  8707  0897                     	;# 
  8708  0898                     	;# 
  8709  0899                     	;# 
  8710  089A                     	;# 
  8711  089B                     	;# 
  8712  090C                     	;# 
  8713  090E                     	;# 
  8714  090F                     	;# 
  8715  091F                     	;# 
  8716  091F                     	;# 
  8717  098F                     	;# 
  8718  098F                     	;# 
  8719  0990                     	;# 
  8720  0991                     	;# 
  8721  0992                     	;# 
  8722  0993                     	;# 
  8723  0994                     	;# 
  8724  0995                     	;# 
  8725  0996                     	;# 
  8726  0997                     	;# 
  8727  0E0F                     	;# 
  8728  0E10                     	;# 
  8729  0E11                     	;# 
  8730  0E12                     	;# 
  8731  0E13                     	;# 
  8732  0E14                     	;# 
  8733  0E15                     	;# 
  8734  0E16                     	;# 
  8735  0E17                     	;# 
  8736  0E18                     	;# 
  8737  0E19                     	;# 
  8738  0E1A                     	;# 
  8739  0E1B                     	;# 
  8740  0E1C                     	;# 
  8741  0E1D                     	;# 
  8742  0E1E                     	;# 
  8743  0E1F                     	;# 
  8744  0E20                     	;# 
  8745  0E21                     	;# 
  8746  0E22                     	;# 
  8747  0E23                     	;# 
  8748  0E24                     	;# 
  8749  0E25                     	;# 
  8750  0E26                     	;# 
  8751  0E27                     	;# 
  8752  0E28                     	;# 
  8753  0E29                     	;# 
  8754  0E2A                     	;# 
  8755  0E2B                     	;# 
  8756  0E2C                     	;# 
  8757  0E2D                     	;# 
  8758  0E2E                     	;# 
  8759  0E2F                     	;# 
  8760  0E30                     	;# 
  8761  0E31                     	;# 
  8762  0E32                     	;# 
  8763  0E33                     	;# 
  8764  0E34                     	;# 
  8765  0E35                     	;# 
  8766  0E36                     	;# 
  8767  0E37                     	;# 
  8768  0E8F                     	;# 
  8769  0E90                     	;# 
  8770  0E91                     	;# 
  8771  0E92                     	;# 
  8772  0E93                     	;# 
  8773  0E94                     	;# 
  8774  0E95                     	;# 
  8775  0E96                     	;# 
  8776  0E97                     	;# 
  8777  0E9C                     	;# 
  8778  0E9D                     	;# 
  8779  0E9E                     	;# 
  8780  0EA1                     	;# 
  8781  0EA2                     	;# 
  8782  0EA3                     	;# 
  8783  0EA4                     	;# 
  8784  0EA5                     	;# 
  8785  0EA9                     	;# 
  8786  0EAA                     	;# 
  8787  0EAB                     	;# 
  8788  0EAC                     	;# 
  8789  0EB1                     	;# 
  8790  0EB2                     	;# 
  8791  0EB3                     	;# 
  8792  0EB8                     	;# 
  8793  0EB9                     	;# 
  8794  0EBA                     	;# 
  8795  0EBB                     	;# 
  8796  0EBC                     	;# 
  8797  0EBD                     	;# 
  8798  0EBE                     	;# 
  8799  0EC3                     	;# 
  8800  0EC5                     	;# 
  8801  0EC6                     	;# 
  8802  0EC7                     	;# 
  8803  0EC8                     	;# 
  8804  0EC9                     	;# 
  8805  0ECA                     	;# 
  8806  0ECB                     	;# 
  8807  0ECC                     	;# 
  8808  0F10                     	;# 
  8809  0F11                     	;# 
  8810  0F12                     	;# 
  8811  0F13                     	;# 
  8812  0F14                     	;# 
  8813  0F15                     	;# 
  8814  0F16                     	;# 
  8815  0F17                     	;# 
  8816  0F18                     	;# 
  8817  0F19                     	;# 
  8818  0F1A                     	;# 
  8819  0F1B                     	;# 
  8820  0F1C                     	;# 
  8821  0F1D                     	;# 
  8822  0F1E                     	;# 
  8823  0F1F                     	;# 
  8824  0F20                     	;# 
  8825  0F21                     	;# 
  8826  0F22                     	;# 
  8827  0F23                     	;# 
  8828  0F24                     	;# 
  8829  0F25                     	;# 
  8830  0F26                     	;# 
  8831  0F27                     	;# 
  8832  0F28                     	;# 
  8833  0F29                     	;# 
  8834  0F2A                     	;# 
  8835  0F2B                     	;# 
  8836  0F2C                     	;# 
  8837  0F2D                     	;# 
  8838  0F2E                     	;# 
  8839  0F2F                     	;# 
  8840  0F30                     	;# 
  8841  0F31                     	;# 
  8842  0F32                     	;# 
  8843  0F38                     	;# 
  8844  0F39                     	;# 
  8845  0F3A                     	;# 
  8846  0F3B                     	;# 
  8847  0F3C                     	;# 
  8848  0F3D                     	;# 
  8849  0F3E                     	;# 
  8850  0F3F                     	;# 
  8851  0F40                     	;# 
  8852  0F41                     	;# 
  8853  0F43                     	;# 
  8854  0F44                     	;# 
  8855  0F45                     	;# 
  8856  0F46                     	;# 
  8857  0F47                     	;# 
  8858  0F48                     	;# 
  8859  0F49                     	;# 
  8860  0F4A                     	;# 
  8861  0F4B                     	;# 
  8862  0F4C                     	;# 
  8863  0F4E                     	;# 
  8864  0F4F                     	;# 
  8865  0F50                     	;# 
  8866  0F51                     	;# 
  8867  0F52                     	;# 
  8868  0F53                     	;# 
  8869  0F54                     	;# 
  8870  0F55                     	;# 
  8871  0F56                     	;# 
  8872  0F57                     	;# 
  8873  0F59                     	;# 
  8874  0F5A                     	;# 
  8875  0F5B                     	;# 
  8876  0F5C                     	;# 
  8877  0F5D                     	;# 
  8878  0F61                     	;# 
  8879  0F62                     	;# 
  8880  0F64                     	;# 
  8881  0F65                     	;# 
  8882  0F66                     	;# 
  8883  0F67                     	;# 
  8884  0F68                     	;# 
  8885  0F69                     	;# 
  8886  0F6A                     	;# 
  8887  0F6B                     	;# 
  8888  0F6C                     	;# 
  8889  0F6D                     	;# 
  8890  0FE4                     	;# 
  8891  0FE5                     	;# 
  8892  0FE6                     	;# 
  8893  0FE7                     	;# 
  8894  0FE8                     	;# 
  8895  0FE9                     	;# 
  8896  0FEA                     	;# 
  8897  0FEB                     	;# 
  8898  0FED                     	;# 
  8899  0FEE                     	;# 
  8900  0FEF                     	;# 
  8901  0000                     	;# 
  8902  0001                     	;# 
  8903  0002                     	;# 
  8904  0003                     	;# 
  8905  0004                     	;# 
  8906  0005                     	;# 
  8907  0006                     	;# 
  8908  0007                     	;# 
  8909  0008                     	;# 
  8910  0009                     	;# 
  8911  000A                     	;# 
  8912  000B                     	;# 
  8913  000C                     	;# 
  8914  000D                     	;# 
  8915  000E                     	;# 
  8916  000F                     	;# 
  8917  0010                     	;# 
  8918  0011                     	;# 
  8919  0012                     	;# 
  8920  0013                     	;# 
  8921  0014                     	;# 
  8922  0015                     	;# 
  8923  0016                     	;# 
  8924  0017                     	;# 
  8925  0018                     	;# 
  8926  0019                     	;# 
  8927  001A                     	;# 
  8928  001C                     	;# 
  8929  001C                     	;# 
  8930  001D                     	;# 
  8931  001D                     	;# 
  8932  001E                     	;# 
  8933  001F                     	;# 
  8934  008C                     	;# 
  8935  008C                     	;# 
  8936  008D                     	;# 
  8937  008E                     	;# 
  8938  008E                     	;# 
  8939  008F                     	;# 
  8940  0090                     	;# 
  8941  0090                     	;# 
  8942  0091                     	;# 
  8943  0093                     	;# 
  8944  0094                     	;# 
  8945  0095                     	;# 
  8946  0096                     	;# 
  8947  0097                     	;# 
  8948  0098                     	;# 
  8949  0099                     	;# 
  8950  009A                     	;# 
  8951  009B                     	;# 
  8952  009C                     	;# 
  8953  009D                     	;# 
  8954  009E                     	;# 
  8955  010C                     	;# 
  8956  010D                     	;# 
  8957  010E                     	;# 
  8958  010E                     	;# 
  8959  010F                     	;# 
  8960  0110                     	;# 
  8961  0110                     	;# 
  8962  0111                     	;# 
  8963  0112                     	;# 
  8964  0112                     	;# 
  8965  0113                     	;# 
  8966  0114                     	;# 
  8967  0114                     	;# 
  8968  0115                     	;# 
  8969  0116                     	;# 
  8970  0116                     	;# 
  8971  0117                     	;# 
  8972  0119                     	;# 
  8973  0119                     	;# 
  8974  0119                     	;# 
  8975  011A                     	;# 
  8976  011A                     	;# 
  8977  011A                     	;# 
  8978  011B                     	;# 
  8979  011B                     	;# 
  8980  011B                     	;# 
  8981  011B                     	;# 
  8982  011B                     	;# 
  8983  011C                     	;# 
  8984  011C                     	;# 
  8985  011C                     	;# 
  8986  011D                     	;# 
  8987  011D                     	;# 
  8988  011D                     	;# 
  8989  011E                     	;# 
  8990  011E                     	;# 
  8991  011E                     	;# 
  8992  011F                     	;# 
  8993  011F                     	;# 
  8994  011F                     	;# 
  8995  011F                     	;# 
  8996  011F                     	;# 
  8997  018C                     	;# 
  8998  018D                     	;# 
  8999  018E                     	;# 
  9000  018F                     	;# 
  9001  0190                     	;# 
  9002  0191                     	;# 
  9003  0192                     	;# 
  9004  0196                     	;# 
  9005  0197                     	;# 
  9006  0198                     	;# 
  9007  0199                     	;# 
  9008  019A                     	;# 
  9009  019B                     	;# 
  9010  019C                     	;# 
  9011  020C                     	;# 
  9012  020C                     	;# 
  9013  020D                     	;# 
  9014  020E                     	;# 
  9015  020F                     	;# 
  9016  020F                     	;# 
  9017  0210                     	;# 
  9018  0210                     	;# 
  9019  0211                     	;# 
  9020  0211                     	;# 
  9021  0212                     	;# 
  9022  0212                     	;# 
  9023  0213                     	;# 
  9024  0214                     	;# 
  9025  0215                     	;# 
  9026  0215                     	;# 
  9027  0216                     	;# 
  9028  0216                     	;# 
  9029  0217                     	;# 
  9030  0217                     	;# 
  9031  0218                     	;# 
  9032  0218                     	;# 
  9033  0219                     	;# 
  9034  021A                     	;# 
  9035  021B                     	;# 
  9036  021B                     	;# 
  9037  021C                     	;# 
  9038  021C                     	;# 
  9039  021D                     	;# 
  9040  021D                     	;# 
  9041  021E                     	;# 
  9042  021F                     	;# 
  9043  028C                     	;# 
  9044  028C                     	;# 
  9045  028D                     	;# 
  9046  028D                     	;# 
  9047  028E                     	;# 
  9048  028F                     	;# 
  9049  0290                     	;# 
  9050  0290                     	;# 
  9051  0291                     	;# 
  9052  0292                     	;# 
  9053  0292                     	;# 
  9054  0293                     	;# 
  9055  0293                     	;# 
  9056  0294                     	;# 
  9057  0295                     	;# 
  9058  0296                     	;# 
  9059  0296                     	;# 
  9060  0297                     	;# 
  9061  0298                     	;# 
  9062  0298                     	;# 
  9063  0299                     	;# 
  9064  0299                     	;# 
  9065  029A                     	;# 
  9066  029B                     	;# 
  9067  029C                     	;# 
  9068  029C                     	;# 
  9069  029D                     	;# 
  9070  030C                     	;# 
  9071  030C                     	;# 
  9072  030D                     	;# 
  9073  030E                     	;# 
  9074  030F                     	;# 
  9075  0310                     	;# 
  9076  0310                     	;# 
  9077  0311                     	;# 
  9078  0312                     	;# 
  9079  0313                     	;# 
  9080  0314                     	;# 
  9081  0314                     	;# 
  9082  0315                     	;# 
  9083  0316                     	;# 
  9084  0317                     	;# 
  9085  0318                     	;# 
  9086  0318                     	;# 
  9087  0319                     	;# 
  9088  031A                     	;# 
  9089  031B                     	;# 
  9090  031C                     	;# 
  9091  031C                     	;# 
  9092  031D                     	;# 
  9093  031E                     	;# 
  9094  031F                     	;# 
  9095  038C                     	;# 
  9096  038C                     	;# 
  9097  038D                     	;# 
  9098  038E                     	;# 
  9099  0390                     	;# 
  9100  0390                     	;# 
  9101  0391                     	;# 
  9102  0392                     	;# 
  9103  040C                     	;# 
  9104  040D                     	;# 
  9105  040E                     	;# 
  9106  040F                     	;# 
  9107  0410                     	;# 
  9108  0411                     	;# 
  9109  0416                     	;# 
  9110  0416                     	;# 
  9111  0417                     	;# 
  9112  0418                     	;# 
  9113  0418                     	;# 
  9114  0419                     	;# 
  9115  041A                     	;# 
  9116  041A                     	;# 
  9117  041B                     	;# 
  9118  041C                     	;# 
  9119  041C                     	;# 
  9120  041D                     	;# 
  9121  041E                     	;# 
  9122  041F                     	;# 
  9123  048C                     	;# 
  9124  048C                     	;# 
  9125  048D                     	;# 
  9126  048E                     	;# 
  9127  048F                     	;# 
  9128  048F                     	;# 
  9129  0490                     	;# 
  9130  0491                     	;# 
  9131  0492                     	;# 
  9132  0492                     	;# 
  9133  0493                     	;# 
  9134  0494                     	;# 
  9135  0495                     	;# 
  9136  0495                     	;# 
  9137  0496                     	;# 
  9138  0497                     	;# 
  9139  0498                     	;# 
  9140  0499                     	;# 
  9141  049A                     	;# 
  9142  049B                     	;# 
  9143  049C                     	;# 
  9144  049D                     	;# 
  9145  050C                     	;# 
  9146  050C                     	;# 
  9147  050D                     	;# 
  9148  050E                     	;# 
  9149  050F                     	;# 
  9150  050F                     	;# 
  9151  0510                     	;# 
  9152  0511                     	;# 
  9153  0512                     	;# 
  9154  0512                     	;# 
  9155  0513                     	;# 
  9156  0514                     	;# 
  9157  0515                     	;# 
  9158  0515                     	;# 
  9159  0516                     	;# 
  9160  0517                     	;# 
  9161  0518                     	;# 
  9162  0519                     	;# 
  9163  051A                     	;# 
  9164  051B                     	;# 
  9165  051C                     	;# 
  9166  051D                     	;# 
  9167  058C                     	;# 
  9168  058C                     	;# 
  9169  058D                     	;# 
  9170  058E                     	;# 
  9171  058F                     	;# 
  9172  058F                     	;# 
  9173  0590                     	;# 
  9174  0591                     	;# 
  9175  0592                     	;# 
  9176  0593                     	;# 
  9177  060C                     	;# 
  9178  060D                     	;# 
  9179  060E                     	;# 
  9180  060F                     	;# 
  9181  0610                     	;# 
  9182  0611                     	;# 
  9183  0612                     	;# 
  9184  0613                     	;# 
  9185  0614                     	;# 
  9186  0616                     	;# 
  9187  0617                     	;# 
  9188  0618                     	;# 
  9189  0619                     	;# 
  9190  061A                     	;# 
  9191  061B                     	;# 
  9192  061C                     	;# 
  9193  061D                     	;# 
  9194  061E                     	;# 
  9195  068C                     	;# 
  9196  068D                     	;# 
  9197  068E                     	;# 
  9198  068F                     	;# 
  9199  0690                     	;# 
  9200  0691                     	;# 
  9201  0692                     	;# 
  9202  0693                     	;# 
  9203  0694                     	;# 
  9204  070C                     	;# 
  9205  070D                     	;# 
  9206  070E                     	;# 
  9207  070F                     	;# 
  9208  0710                     	;# 
  9209  0711                     	;# 
  9210  0712                     	;# 
  9211  0713                     	;# 
  9212  0714                     	;# 
  9213  0716                     	;# 
  9214  0717                     	;# 
  9215  0718                     	;# 
  9216  0719                     	;# 
  9217  071A                     	;# 
  9218  071B                     	;# 
  9219  071C                     	;# 
  9220  071D                     	;# 
  9221  071E                     	;# 
  9222  0796                     	;# 
  9223  0797                     	;# 
  9224  0798                     	;# 
  9225  0799                     	;# 
  9226  079A                     	;# 
  9227  079B                     	;# 
  9228  080C                     	;# 
  9229  080D                     	;# 
  9230  080E                     	;# 
  9231  080F                     	;# 
  9232  0810                     	;# 
  9233  0811                     	;# 
  9234  0812                     	;# 
  9235  0813                     	;# 
  9236  0814                     	;# 
  9237  081A                     	;# 
  9238  081B                     	;# 
  9239  081C                     	;# 
  9240  081D                     	;# 
  9241  081E                     	;# 
  9242  081F                     	;# 
  9243  088C                     	;# 
  9244  088D                     	;# 
  9245  088E                     	;# 
  9246  088F                     	;# 
  9247  0890                     	;# 
  9248  0891                     	;# 
  9249  0892                     	;# 
  9250  0893                     	;# 
  9251  0895                     	;# 
  9252  0896                     	;# 
  9253  0897                     	;# 
  9254  0898                     	;# 
  9255  0899                     	;# 
  9256  089A                     	;# 
  9257  089B                     	;# 
  9258  090C                     	;# 
  9259  090E                     	;# 
  9260  090F                     	;# 
  9261  091F                     	;# 
  9262  091F                     	;# 
  9263  098F                     	;# 
  9264  098F                     	;# 
  9265  0990                     	;# 
  9266  0991                     	;# 
  9267  0992                     	;# 
  9268  0993                     	;# 
  9269  0994                     	;# 
  9270  0995                     	;# 
  9271  0996                     	;# 
  9272  0997                     	;# 
  9273  0E0F                     	;# 
  9274  0E10                     	;# 
  9275  0E11                     	;# 
  9276  0E12                     	;# 
  9277  0E13                     	;# 
  9278  0E14                     	;# 
  9279  0E15                     	;# 
  9280  0E16                     	;# 
  9281  0E17                     	;# 
  9282  0E18                     	;# 
  9283  0E19                     	;# 
  9284  0E1A                     	;# 
  9285  0E1B                     	;# 
  9286  0E1C                     	;# 
  9287  0E1D                     	;# 
  9288  0E1E                     	;# 
  9289  0E1F                     	;# 
  9290  0E20                     	;# 
  9291  0E21                     	;# 
  9292  0E22                     	;# 
  9293  0E23                     	;# 
  9294  0E24                     	;# 
  9295  0E25                     	;# 
  9296  0E26                     	;# 
  9297  0E27                     	;# 
  9298  0E28                     	;# 
  9299  0E29                     	;# 
  9300  0E2A                     	;# 
  9301  0E2B                     	;# 
  9302  0E2C                     	;# 
  9303  0E2D                     	;# 
  9304  0E2E                     	;# 
  9305  0E2F                     	;# 
  9306  0E30                     	;# 
  9307  0E31                     	;# 
  9308  0E32                     	;# 
  9309  0E33                     	;# 
  9310  0E34                     	;# 
  9311  0E35                     	;# 
  9312  0E36                     	;# 
  9313  0E37                     	;# 
  9314  0E8F                     	;# 
  9315  0E90                     	;# 
  9316  0E91                     	;# 
  9317  0E92                     	;# 
  9318  0E93                     	;# 
  9319  0E94                     	;# 
  9320  0E95                     	;# 
  9321  0E96                     	;# 
  9322  0E97                     	;# 
  9323  0E9C                     	;# 
  9324  0E9D                     	;# 
  9325  0E9E                     	;# 
  9326  0EA1                     	;# 
  9327  0EA2                     	;# 
  9328  0EA3                     	;# 
  9329  0EA4                     	;# 
  9330  0EA5                     	;# 
  9331  0EA9                     	;# 
  9332  0EAA                     	;# 
  9333  0EAB                     	;# 
  9334  0EAC                     	;# 
  9335  0EB1                     	;# 
  9336  0EB2                     	;# 
  9337  0EB3                     	;# 
  9338  0EB8                     	;# 
  9339  0EB9                     	;# 
  9340  0EBA                     	;# 
  9341  0EBB                     	;# 
  9342  0EBC                     	;# 
  9343  0EBD                     	;# 
  9344  0EBE                     	;# 
  9345  0EC3                     	;# 
  9346  0EC5                     	;# 
  9347  0EC6                     	;# 
  9348  0EC7                     	;# 
  9349  0EC8                     	;# 
  9350  0EC9                     	;# 
  9351  0ECA                     	;# 
  9352  0ECB                     	;# 
  9353  0ECC                     	;# 
  9354  0F10                     	;# 
  9355  0F11                     	;# 
  9356  0F12                     	;# 
  9357  0F13                     	;# 
  9358  0F14                     	;# 
  9359  0F15                     	;# 
  9360  0F16                     	;# 
  9361  0F17                     	;# 
  9362  0F18                     	;# 
  9363  0F19                     	;# 
  9364  0F1A                     	;# 
  9365  0F1B                     	;# 
  9366  0F1C                     	;# 
  9367  0F1D                     	;# 
  9368  0F1E                     	;# 
  9369  0F1F                     	;# 
  9370  0F20                     	;# 
  9371  0F21                     	;# 
  9372  0F22                     	;# 
  9373  0F23                     	;# 
  9374  0F24                     	;# 
  9375  0F25                     	;# 
  9376  0F26                     	;# 
  9377  0F27                     	;# 
  9378  0F28                     	;# 
  9379  0F29                     	;# 
  9380  0F2A                     	;# 
  9381  0F2B                     	;# 
  9382  0F2C                     	;# 
  9383  0F2D                     	;# 
  9384  0F2E                     	;# 
  9385  0F2F                     	;# 
  9386  0F30                     	;# 
  9387  0F31                     	;# 
  9388  0F32                     	;# 
  9389  0F38                     	;# 
  9390  0F39                     	;# 
  9391  0F3A                     	;# 
  9392  0F3B                     	;# 
  9393  0F3C                     	;# 
  9394  0F3D                     	;# 
  9395  0F3E                     	;# 
  9396  0F3F                     	;# 
  9397  0F40                     	;# 
  9398  0F41                     	;# 
  9399  0F43                     	;# 
  9400  0F44                     	;# 
  9401  0F45                     	;# 
  9402  0F46                     	;# 
  9403  0F47                     	;# 
  9404  0F48                     	;# 
  9405  0F49                     	;# 
  9406  0F4A                     	;# 
  9407  0F4B                     	;# 
  9408  0F4C                     	;# 
  9409  0F4E                     	;# 
  9410  0F4F                     	;# 
  9411  0F50                     	;# 
  9412  0F51                     	;# 
  9413  0F52                     	;# 
  9414  0F53                     	;# 
  9415  0F54                     	;# 
  9416  0F55                     	;# 
  9417  0F56                     	;# 
  9418  0F57                     	;# 
  9419  0F59                     	;# 
  9420  0F5A                     	;# 
  9421  0F5B                     	;# 
  9422  0F5C                     	;# 
  9423  0F5D                     	;# 
  9424  0F61                     	;# 
  9425  0F62                     	;# 
  9426  0F64                     	;# 
  9427  0F65                     	;# 
  9428  0F66                     	;# 
  9429  0F67                     	;# 
  9430  0F68                     	;# 
  9431  0F69                     	;# 
  9432  0F6A                     	;# 
  9433  0F6B                     	;# 
  9434  0F6C                     	;# 
  9435  0F6D                     	;# 
  9436  0FE4                     	;# 
  9437  0FE5                     	;# 
  9438  0FE6                     	;# 
  9439  0FE7                     	;# 
  9440  0FE8                     	;# 
  9441  0FE9                     	;# 
  9442  0FEA                     	;# 
  9443  0FEB                     	;# 
  9444  0FED                     	;# 
  9445  0FEE                     	;# 
  9446  0FEF                     	;# 
  9447                           
  9448 ;; Function _recLumThresh is unused but had its address taken
  9449  0000                     
  9450 ;; Function _recTempThresh is unused but had its address taken
  9451  0000                     
  9452 ;; Function _recAlarm is unused but had its address taken
  9453  0000                     
  9454 ;; Function _limitTempThreshUnits is unused but had its address taken
  9455  0000                     
  9456                           	psect	idataBANK0
  9457  0AA6                     __pidataBANK0:	
  9458                           
  9459                           ;initializer for _mode_field_subfield
  9460  0AA6  34FF               	retlw	255
  9461  0AA7  34FF               	retlw	255
  9462  0AA8  34FF               	retlw	255
  9463  0AA9  34FF               	retlw	255
  9464                           
  9465                           ;initializer for _lum_thresh
  9466  0AAA  3402               	retlw	2
  9467                           
  9468                           ;initializer for _temp_thresh
  9469  0AAB  3464               	retlw	100
  9470                           
  9471                           ;initializer for _tala
  9472  0AAC  3403               	retlw	3
  9473                           
  9474                           ;initializer for _pmon
  9475  0AAD  3405               	retlw	5
  9476                           
  9477                           ;initializer for _nreg
  9478  0AAE  341E               	retlw	30
  9479                           
  9480                           	psect	stringtext1
  9481  1000                     __pstringtext1:	
  9482  1000                     _fsmStateTable:	
  9483  1000  34F7               	retlw	low _do_I2C_IDLE
  9484  1001  3409               	retlw	high _do_I2C_IDLE
  9485  1002  3467               	retlw	low _do_I2C_SEND_ADR_READ
  9486  1003  340A               	retlw	high _do_I2C_SEND_ADR_READ
  9487  1004  344F               	retlw	low _do_I2C_SEND_ADR_WRITE
  9488  1005  340A               	retlw	high _do_I2C_SEND_ADR_WRITE
  9489  1006  3459               	retlw	low _do_I2C_TX
  9490  1007  3406               	retlw	high _do_I2C_TX
  9491  1008  3495               	retlw	low _do_I2C_RX
  9492  1009  3407               	retlw	high _do_I2C_RX
  9493  100A  3431               	retlw	low _do_I2C_RCEN
  9494  100B  340A               	retlw	high _do_I2C_RCEN
  9495  100C  34CA               	retlw	low _do_I2C_TX_EMPTY
  9496  100D  340E               	retlw	high _do_I2C_TX_EMPTY
  9497  100E  34FC               	retlw	low _do_I2C_SEND_RESTART_READ
  9498  100F  3409               	retlw	high _do_I2C_SEND_RESTART_READ
  9499  1010  3401               	retlw	low _do_I2C_SEND_RESTART_WRITE
  9500  1011  340A               	retlw	high _do_I2C_SEND_RESTART_WRITE
  9501  1012  3406               	retlw	low _do_I2C_SEND_RESTART
  9502  1013  340A               	retlw	high _do_I2C_SEND_RESTART
  9503  1014  340B               	retlw	low _do_I2C_SEND_STOP
  9504  1015  340A               	retlw	high _do_I2C_SEND_STOP
  9505  1016  3410               	retlw	low _do_I2C_DO_ACK
  9506  1017  340A               	retlw	high _do_I2C_DO_ACK
  9507  1018  3415               	retlw	low _do_I2C_DO_NACK_STOP
  9508  1019  340A               	retlw	high _do_I2C_DO_NACK_STOP
  9509  101A  341A               	retlw	low _do_I2C_DO_NACK_RESTART
  9510  101B  340A               	retlw	high _do_I2C_DO_NACK_RESTART
  9511  101C  3447               	retlw	low _do_I2C_RESET
  9512  101D  340A               	retlw	high _do_I2C_RESET
  9513  101E  3442               	retlw	low _do_I2C_DO_ADDRESS_NACK
  9514  101F  340E               	retlw	high _do_I2C_DO_ADDRESS_NACK
  9515  1020                     __end_of_fsmStateTable:	
  9516                           
  9517                           	psect	stringtext2
  9518  1020                     __pstringtext2:	
  9519  1020                     _num_subfields:	
  9520  1020  3400               	retlw	0
  9521  1021  3404               	retlw	4
  9522  1022  3401               	retlw	1
  9523  1023  3402               	retlw	2
  9524  1024  3401               	retlw	1
  9525  1025                     __end_of_num_subfields:	
  9526                           
  9527                           	psect	nvBANK1
  9528  00D4                     __pnvBANK1:	
  9529  00D4                     _TMR2_InterruptHandler:	
  9530  00D4                     	ds	2
  9531  00D6                     _TMR1_InterruptHandler:	
  9532  00D6                     	ds	2
  9533  00D8                     _timer1ReloadVal:	
  9534  00D8                     	ds	2
  9535  00DA                     _TMR0_InterruptHandler:	
  9536  00DA                     	ds	2
  9537  00DC                     _INT_InterruptHandler:	
  9538  00DC                     	ds	2
  9539  0016                     _LATAbits	set	22
  9540  000E                     _PORTCbits	set	14
  9541  000D                     _PORTBbits	set	13
  9542  0013                     _TRISCbits	set	19
  9543  001E                     _T0CON0bits	set	30
  9544  001E                     _T0CON0	set	30
  9545  001C                     _TMR0L	set	28
  9546  001D                     _TMR0H	set	29
  9547  001F                     _T0CON1	set	31
  9548  0014                     _TRISD	set	20
  9549  0013                     _TRISC	set	19
  9550  0012                     _TRISB	set	18
  9551  0011                     _TRISA	set	17
  9552  0015                     _TRISE	set	21
  9553  0018                     _LATC	set	24
  9554  0017                     _LATB	set	23
  9555  0016                     _LATA	set	22
  9556  0019                     _LATD	set	25
  9557  001A                     _LATE	set	26
  9558  000B                     _INTCONbits	set	11
  9559  0094                     _ADCON1bits	set	148
  9560  008E                     _ADPREVL	set	142
  9561  008F                     _ADPREVH	set	143
  9562  0097                     _ADSTATbits	set	151
  9563  0090                     _ADACCL	set	144
  9564  0091                     _ADACCH	set	145
  9565  0095                     _ADCON2bits	set	149
  9566  009C                     _ADPRE	set	156
  9567  0096                     _ADCON3bits	set	150
  9568  008C                     _ADRESL	set	140
  9569  008D                     _ADRESH	set	141
  9570  0093                     _ADCON0bits	set	147
  9571  009D                     _ADACQ	set	157
  9572  0093                     _ADCON0	set	147
  9573  0098                     _ADCLK	set	152
  9574  0099                     _ADACT	set	153
  9575  009A                     _ADREF	set	154
  9576  0097                     _ADSTAT	set	151
  9577  0096                     _ADCON3	set	150
  9578  0095                     _ADCON2	set	149
  9579  0094                     _ADCON1	set	148
  9580  009B                     _ADCAP	set	155
  9581  009E                     _ADPCH	set	158
  9582  0116                     _ADERRL	set	278
  9583  0117                     _ADERRH	set	279
  9584  0114                     _ADFLTRL	set	276
  9585  0115                     _ADFLTRH	set	277
  9586  010C                     _ADCNT	set	268
  9587  010D                     _ADRPT	set	269
  9588  0113                     _ADSTPTH	set	275
  9589  0112                     _ADSTPTL	set	274
  9590  0111                     _ADUTHH	set	273
  9591  0110                     _ADUTHL	set	272
  9592  010F                     _ADLTHH	set	271
  9593  010E                     _ADLTHL	set	270
  9594  018F                     _SSP1STATbits	set	399
  9595  018E                     _SSP1MSK	set	398
  9596  018C                     _SSP1BUF	set	396
  9597  0191                     _SSP1CON2bits	set	401
  9598  018D                     _SSP1ADD	set	397
  9599  0191                     _SSP1CON2	set	401
  9600  0190                     _SSP1CON1	set	400
  9601  018F                     _SSP1STAT	set	399
  9602  0190                     _SSP1CON1bits	set	400
  9603  021F                     _CCPTMRS1bits	set	543
  9604  020F                     _T1GCONbits	set	527
  9605  020E                     _T1CONbits	set	526
  9606  020E                     _T1CON	set	526
  9607  020C                     _TMR1L	set	524
  9608  020D                     _TMR1H	set	525
  9609  0211                     _T1CLK	set	529
  9610  0210                     _T1GATE	set	528
  9611  020F                     _T1GCON	set	527
  9612  028D                     _PR2	set	653
  9613  028C                     _TMR2	set	652
  9614  028E                     _T2CONbits	set	654
  9615  0291                     _T2RSTbits	set	657
  9616  028F                     _T2HLTbits	set	655
  9617  028E                     _T2CON	set	654
  9618  028C                     _T2TMR	set	652
  9619  028D                     _T2PR	set	653
  9620  0291                     _T2RST	set	657
  9621  028F                     _T2HLT	set	655
  9622  0290                     _T2CLKCON	set	656
  9623  038C                     _PWM6DCL	set	908
  9624  038D                     _PWM6DCH	set	909
  9625  038E                     _PWM6CON	set	910
  9626  0710                     _PIR4bits	set	1808
  9627  071A                     _PIE4bits	set	1818
  9628  070F                     _PIR3bits	set	1807
  9629  0719                     _PIE3bits	set	1817
  9630  0716                     _PIE0bits	set	1814
  9631  070C                     _PIR0bits	set	1804
  9632  079B                     _PMD5	set	1947
  9633  079A                     _PMD4	set	1946
  9634  0799                     _PMD3	set	1945
  9635  0798                     _PMD2	set	1944
  9636  0797                     _PMD1	set	1943
  9637  0796                     _PMD0	set	1942
  9638  081F                     _NVMCON2	set	2079
  9639  081C                     _NVMDATL	set	2076
  9640  081D                     _NVMDATH	set	2077
  9641  081E                     _NVMCON1bits	set	2078
  9642  081B                     _NVMADRH	set	2075
  9643  081A                     _NVMADRL	set	2074
  9644  0892                     _OSCTUNE	set	2194
  9645  0893                     _OSCFRQ	set	2195
  9646  0891                     _OSCEN	set	2193
  9647  088F                     _OSCCON3	set	2191
  9648  088D                     _OSCCON1	set	2189
  9649  0EC6                     _SSP1DATPPS	set	3782
  9650  0EC5                     _SSP1CLKPPS	set	3781
  9651  0E90                     _INTPPS	set	3728
  9652  0F44                     _WPUBbits	set	3908
  9653  0F16                     _RA6PPS	set	3862
  9654  0F24                     _RC4PPS	set	3876
  9655  0F23                     _RC3PPS	set	3875
  9656  0F68                     _INLVLE	set	3944
  9657  0F5D                     _INLVLD	set	3933
  9658  0F52                     _INLVLC	set	3922
  9659  0F47                     _INLVLB	set	3911
  9660  0F3C                     _INLVLA	set	3900
  9661  0F67                     _SLRCONE	set	3943
  9662  0F5C                     _SLRCOND	set	3932
  9663  0F51                     _SLRCONC	set	3921
  9664  0F46                     _SLRCONB	set	3910
  9665  0F3B                     _SLRCONA	set	3899
  9666  0F5B                     _ODCOND	set	3931
  9667  0F50                     _ODCONC	set	3920
  9668  0F45                     _ODCONB	set	3909
  9669  0F3A                     _ODCONA	set	3898
  9670  0F66                     _ODCONE	set	3942
  9671  0F4F                     _WPUC	set	3919
  9672  0F39                     _WPUA	set	3897
  9673  0F44                     _WPUB	set	3908
  9674  0F65                     _WPUE	set	3941
  9675  0F5A                     _WPUD	set	3930
  9676  0F38                     _ANSELA	set	3896
  9677  0F64                     _ANSELE	set	3940
  9678  0F43                     _ANSELB	set	3907
  9679  0F4E                     _ANSELC	set	3918
  9680  0F59                     _ANSELD	set	3929
  9681  7A7C                     _WPUC4	set	31356
  9682  7A7B                     _WPUC3	set	31355
  9683                           
  9684                           ; #config settings
  9685  0000                     
  9686                           	psect	cinit
  9687  005D                     start_initialization:	
  9688  005D                     __initialization:	
  9689                           
  9690                           ; Initialize objects allocated to BANK0
  9691  005D  30A6               	movlw	low __pidataBANK0
  9692  005E  0084               	movwf	4
  9693  005F  308A               	movlw	(high __pidataBANK0)| (0+128)
  9694  0060  0085               	movwf	5
  9695  0061  3061               	movlw	low __pdataBANK0
  9696  0062  0086               	movwf	6
  9697  0063  3000               	movlw	high __pdataBANK0
  9698  0064  0087               	movwf	7
  9699  0065  3009               	movlw	9
  9700  0066  318A  222B  3180   	fcall	init_ram
  9701                           
  9702                           ; Clear objects allocated to COMMON
  9703  0069  01FD               	clrf	__pbssCOMMON& (0+127)
  9704                           
  9705                           ; Clear objects allocated to BANK0
  9706  006A  304B               	movlw	low __pbssBANK0
  9707  006B  0084               	movwf	4
  9708  006C  3000               	movlw	high __pbssBANK0
  9709  006D  0085               	movwf	5
  9710  006E  3016               	movlw	22
  9711  006F  318A  2225  3180   	fcall	clear_ram0
  9712                           
  9713                           ; Clear objects allocated to BANK1
  9714  0072  30A0               	movlw	low __pbssBANK1
  9715  0073  0084               	movwf	4
  9716  0074  3000               	movlw	high __pbssBANK1
  9717  0075  0085               	movwf	5
  9718  0076  3034               	movlw	52
  9719  0077  318A  2225  3180   	fcall	clear_ram0
  9720  007A                     end_of_initialization:	
  9721                           ;End of C runtime variable initialization code
  9722                           
  9723  007A                     __end_of__initialization:	
  9724  007A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9725  007B  0020               	movlb	0
  9726  007C  3180  287E         	ljmp	_main	;jump to C main() function
  9727                           
  9728                           	psect	bssCOMMON
  9729  007D                     __pbssCOMMON:	
  9730  007D                     _clkms:	
  9731  007D                     	ds	1
  9732                           
  9733                           	psect	bssBANK0
  9734  004B                     __pbssBANK0:	
  9735  004B                     _subfield_info:	
  9736  004B                     	ds	4
  9737  004F                     _lum_threshold:	
  9738  004F                     	ds	2
  9739  0051                     _lum_bin:	
  9740  0051                     	ds	2
  9741  0053                     _alaf:	
  9742  0053                     	ds	1
  9743  0054                     _temp:	
  9744  0054                     	ds	1
  9745  0055                     _alarm:	
  9746  0055                     	ds	1
  9747  0056                     _config_mode:	
  9748  0056                     	ds	1
  9749  0057                     _set_mode:	
  9750  0057                     	ds	1
  9751  0058                     _last1m:	
  9752  0058                     	ds	1
  9753  0059                     _last5s:	
  9754  0059                     	ds	1
  9755  005A                     _last_ms2:	
  9756  005A                     	ds	1
  9757  005B                     _last_ms:	
  9758  005B                     	ds	1
  9759  005C                     _seg:	
  9760  005C                     	ds	1
  9761  005D                     _clkm:	
  9762  005D                     	ds	1
  9763  005E                     _clkh:	
  9764  005E                     	ds	1
  9765  005F                     _nreg_pt:	
  9766  005F                     	ds	1
  9767  0060                     _nreg_init:	
  9768  0060                     	ds	1
  9769                           
  9770                           	psect	dataBANK0
  9771  0061                     __pdataBANK0:	
  9772  0061                     _mode_field_subfield:	
  9773  0061                     	ds	4
  9774  0065                     _lum_thresh:	
  9775  0065                     	ds	1
  9776  0066                     _temp_thresh:	
  9777  0066                     	ds	1
  9778  0067                     _tala:	
  9779  0067                     	ds	1
  9780  0068                     _pmon:	
  9781  0068                     	ds	1
  9782  0069                     _nreg:	
  9783  0069                     	ds	1
  9784                           
  9785                           	psect	bssBANK1
  9786  00A0                     __pbssBANK1:	
  9787  00A0                     _i2c_status:	
  9788  00A0                     	ds	29
  9789  00BD                     _duty_cycle:	
  9790  00BD                     	ds	2
  9791  00BF                     _convertedValue:	
  9792  00BF                     	ds	2
  9793  00C1                     _min_units:	
  9794  00C1                     	ds	2
  9795  00C3                     _min_tens:	
  9796  00C3                     	ds	2
  9797  00C5                     _hours_units:	
  9798  00C5                     	ds	2
  9799  00C7                     _hours_tens:	
  9800  00C7                     	ds	2
  9801  00C9                     _value:	
  9802  00C9                     	ds	2
  9803  00CB                     _i2c1_driver_i2cISR:	
  9804  00CB                     	ds	2
  9805  00CD                     _i2c1_driver_busCollisionISR:	
  9806  00CD                     	ds	2
  9807  00CF                     _ring_byte:	
  9808  00CF                     	ds	5
  9809                           
  9810                           	psect	inittext
  9811  0A2B                     init_ram:	
  9812  0A2B  00FE               	movwf	btemp
  9813  0A2C                     initloop:	
  9814  0A2C  0012               	moviw fsr0++
  9815  0A2D  001E               	movwi fsr1++
  9816  0A2E  0BFE               	decfsz	btemp,f
  9817  0A2F  2A2C               	goto	initloop
  9818  0A30  3400               	retlw	0
  9819                           
  9820                           	psect	clrtext
  9821  0A25                     clear_ram0:	
  9822                           ;	Called with FSR0 containing the base address, and
  9823                           ;	WREG with the size to clear
  9824                           
  9825  0A25  0064               	clrwdt	;clear the watchdog before getting into this loop
  9826  0A26                     clrloop0:	
  9827  0A26  0180               	clrf	0	;clear RAM location pointed to by FSR
  9828  0A27  3101               	addfsr 0,1
  9829  0A28  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9830  0A29  2A26               	goto	clrloop0	;have we reached the end yet?
  9831  0A2A  3400               	retlw	0	;all done for this memory range, return
  9832                           
  9833                           	psect	cstackBANK1
  9834  00DE                     __pcstackBANK1:	
  9835  00DE                     	ds	2
  9836  00E0                     main@t5s:	
  9837                           
  9838                           ; 1 bytes @ 0x2
  9839  00E0                     	ds	1
  9840  00E1                     main@t1m:	
  9841                           
  9842                           ; 1 bytes @ 0x3
  9843  00E1                     	ds	1
  9844  00E2                     _main$2460:	
  9845                           
  9846                           ; 1 bytes @ 0x4
  9847  00E2                     	ds	1
  9848                           
  9849                           	psect	cstackCOMMON
  9850  0070                     __pcstackCOMMON:	
  9851  0070                     ?_i2c1_driver_open:	
  9852  0070                     ?_i2c1_driver_isNACK:	
  9853                           ; 1 bit 
  9854                           
  9855  0070                     ?_setCallBack:	
  9856                           ; 1 bit 
  9857                           
  9858  0070                     ?_mssp1_clearIRQ:	
  9859                           ; 1 bytes @ 0x0
  9860                           
  9861  0070                     ??_mssp1_clearIRQ:	
  9862                           ; 1 bytes @ 0x0
  9863                           
  9864  0070                     ?_i2c_busCollisionISR:	
  9865                           ; 1 bytes @ 0x0
  9866                           
  9867  0070                     ??_i2c_busCollisionISR:	
  9868                           ; 1 bytes @ 0x0
  9869                           
  9870  0070                     ?_i2c_ISR:	
  9871                           ; 1 bytes @ 0x0
  9872                           
  9873  0070                     ?_i2c1_driver_resetBus:	
  9874                           ; 1 bytes @ 0x0
  9875                           
  9876  0070                     ??_i2c1_driver_resetBus:	
  9877                           ; 1 bytes @ 0x0
  9878                           
  9879  0070                     ?_i2c1_driver_restart:	
  9880                           ; 1 bytes @ 0x0
  9881                           
  9882  0070                     ??_i2c1_driver_restart:	
  9883                           ; 1 bytes @ 0x0
  9884                           
  9885  0070                     ?_i2c1_driver_stop:	
  9886                           ; 1 bytes @ 0x0
  9887                           
  9888  0070                     ??_i2c1_driver_stop:	
  9889                           ; 1 bytes @ 0x0
  9890                           
  9891  0070                     ?_i2c1_driver_TXData:	
  9892                           ; 1 bytes @ 0x0
  9893                           
  9894  0070                     ??_i2c1_driver_TXData:	
  9895                           ; 1 bytes @ 0x0
  9896                           
  9897  0070                     ?_i2c1_driver_startRX:	
  9898                           ; 1 bytes @ 0x0
  9899                           
  9900  0070                     ??_i2c1_driver_startRX:	
  9901                           ; 1 bytes @ 0x0
  9902                           
  9903  0070                     ?_i2c1_driver_sendACK:	
  9904                           ; 1 bytes @ 0x0
  9905                           
  9906  0070                     ??_i2c1_driver_sendACK:	
  9907                           ; 1 bytes @ 0x0
  9908                           
  9909  0070                     ?_i2c1_driver_sendNACK:	
  9910                           ; 1 bytes @ 0x0
  9911                           
  9912  0070                     ??_i2c1_driver_sendNACK:	
  9913                           ; 1 bytes @ 0x0
  9914                           
  9915  0070                     ??_i2c1_driver_isNACK:	
  9916                           ; 1 bytes @ 0x0
  9917                           
  9918  0070                     ?_i2c1_driver_getRXData:	
  9919                           ; 1 bytes @ 0x0
  9920                           
  9921  0070                     ??_i2c1_driver_getRXData:	
  9922                           ; 1 bytes @ 0x0
  9923                           
  9924  0070                     ?_mssp1_setIRQ:	
  9925                           ; 1 bytes @ 0x0
  9926                           
  9927  0070                     ??_mssp1_setIRQ:	
  9928                           ; 1 bytes @ 0x0
  9929                           
  9930  0070                     ?_i2c1_driver_clearBusCollision:	
  9931                           ; 1 bytes @ 0x0
  9932                           
  9933  0070                     ??_i2c1_driver_clearBusCollision:	
  9934                           ; 1 bytes @ 0x0
  9935                           
  9936  0070                     ?_INT_CallBack:	
  9937                           ; 1 bytes @ 0x0
  9938                           
  9939  0070                     ?_TMR0_ISR:	
  9940                           ; 1 bytes @ 0x0
  9941                           
  9942  0070                     ?_TMR1_ISR:	
  9943                           ; 1 bytes @ 0x0
  9944                           
  9945  0070                     ?_TMR2_ISR:	
  9946                           ; 1 bytes @ 0x0
  9947                           
  9948  0070                     ?_PMD_Initialize:	
  9949                           ; 1 bytes @ 0x0
  9950                           
  9951  0070                     ?_PIN_MANAGER_Initialize:	
  9952                           ; 1 bytes @ 0x0
  9953                           
  9954  0070                     ?_OSCILLATOR_Initialize:	
  9955                           ; 1 bytes @ 0x0
  9956                           
  9957  0070                     ?_PWM6_Initialize:	
  9958                           ; 1 bytes @ 0x0
  9959                           
  9960  0070                     ?_ADCC_Initialize:	
  9961                           ; 1 bytes @ 0x0
  9962                           
  9963  0070                     ?_TMR2_Initialize:	
  9964                           ; 1 bytes @ 0x0
  9965                           
  9966  0070                     ?_TMR1_Initialize:	
  9967                           ; 1 bytes @ 0x0
  9968                           
  9969  0070                     ?_TMR0_Initialize:	
  9970                           ; 1 bytes @ 0x0
  9971                           
  9972  0070                     ?_TMR0_DefaultInterruptHandler:	
  9973                           ; 1 bytes @ 0x0
  9974                           
  9975  0070                     ??_TMR0_DefaultInterruptHandler:	
  9976                           ; 1 bytes @ 0x0
  9977                           
  9978  0070                     ?_TMR1_DefaultInterruptHandler:	
  9979                           ; 1 bytes @ 0x0
  9980                           
  9981  0070                     ??_TMR1_DefaultInterruptHandler:	
  9982                           ; 1 bytes @ 0x0
  9983                           
  9984  0070                     ?_TMR2_DefaultInterruptHandler:	
  9985                           ; 1 bytes @ 0x0
  9986                           
  9987  0070                     ??_TMR2_DefaultInterruptHandler:	
  9988                           ; 1 bytes @ 0x0
  9989                           
  9990  0070                     ?_checkDebounceSW1:	
  9991                           ; 1 bytes @ 0x0
  9992                           
  9993  0070                     ?_handler_clock_hms:	
  9994                           ; 1 bytes @ 0x0
  9995                           
  9996  0070                     ??_handler_clock_hms:	
  9997                           ; 1 bytes @ 0x0
  9998                           
  9999  0070                     ?_handler_clock_ms:	
 10000                           ; 1 bytes @ 0x0
 10001                           
 10002  0070                     ??_handler_clock_ms:	
 10003                           ; 1 bytes @ 0x0
 10004                           
 10005  0070                     ?_recoverData:	
 10006                           ; 1 bytes @ 0x0
 10007                           
 10008  0070                     ?_cksum_w:	
 10009                           ; 1 bytes @ 0x0
 10010                           
 10011  0070                     ?_config_routine:	
 10012                           ; 1 bytes @ 0x0
 10013                           
 10014  0070                     ?_save_recovery_params:	
 10015                           ; 1 bytes @ 0x0
 10016                           
 10017  0070                     ?_all_LED:	
 10018                           ; 1 bytes @ 0x0
 10019                           
 10020  0070                     ?_mod1_LED:	
 10021                           ; 1 bytes @ 0x0
 10022                           
 10023  0070                     ?_mod2_LED:	
 10024                           ; 1 bytes @ 0x0
 10025                           
 10026  0070                     ?_mod3_LED:	
 10027                           ; 1 bytes @ 0x0
 10028                           
 10029  0070                     ?_mod4_LED:	
 10030                           ; 1 bytes @ 0x0
 10031                           
 10032  0070                     ?_checkDebounceSW2:	
 10033                           ; 1 bytes @ 0x0
 10034                           
 10035  0070                     ?_mode_select_LED:	
 10036                           ; 1 bytes @ 0x0
 10037                           
 10038  0070                     ?_selectSubfield:	
 10039                           ; 1 bytes @ 0x0
 10040                           
 10041  0070                     ?_mode_LED:	
 10042                           ; 1 bytes @ 0x0
 10043                           
 10044  0070                     ?_getSubfieldInfo:	
 10045                           ; 1 bytes @ 0x0
 10046                           
 10047  0070                     ?_limitHoursUnits:	
 10048                           ; 1 bytes @ 0x0
 10049                           
 10050  0070                     ?_representLed:	
 10051                           ; 1 bytes @ 0x0
 10052                           
 10053  0070                     ?_cksum:	
 10054                           ; 1 bytes @ 0x0
 10055                           
 10056  0070                     ?_reset_recv:	
 10057                           ; 1 bytes @ 0x0
 10058                           
 10059  0070                     ?_i2c_setBuffer:	
 10060                           ; 1 bytes @ 0x0
 10061                           
 10062  0070                     ?_do_I2C_RESET:	
 10063                           ; 1 bytes @ 0x0
 10064                           
 10065  0070                     ??_do_I2C_RESET:	
 10066                           ; 1 bytes @ 0x0
 10067                           
 10068  0070                     ?_do_I2C_IDLE:	
 10069                           ; 1 bytes @ 0x0
 10070                           
 10071  0070                     ??_do_I2C_IDLE:	
 10072                           ; 1 bytes @ 0x0
 10073                           
 10074  0070                     ?_do_I2C_SEND_RESTART_READ:	
 10075                           ; 1 bytes @ 0x0
 10076                           
 10077  0070                     ??_do_I2C_SEND_RESTART_READ:	
 10078                           ; 1 bytes @ 0x0
 10079                           
 10080  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
 10081                           ; 1 bytes @ 0x0
 10082                           
 10083  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
 10084                           ; 1 bytes @ 0x0
 10085                           
 10086  0070                     ?_do_I2C_SEND_RESTART:	
 10087                           ; 1 bytes @ 0x0
 10088                           
 10089  0070                     ??_do_I2C_SEND_RESTART:	
 10090                           ; 1 bytes @ 0x0
 10091                           
 10092  0070                     ?_do_I2C_SEND_STOP:	
 10093                           ; 1 bytes @ 0x0
 10094                           
 10095  0070                     ??_do_I2C_SEND_STOP:	
 10096                           ; 1 bytes @ 0x0
 10097                           
 10098  0070                     ?_do_I2C_SEND_ADR_READ:	
 10099                           ; 1 bytes @ 0x0
 10100                           
 10101  0070                     ??_do_I2C_SEND_ADR_READ:	
 10102                           ; 1 bytes @ 0x0
 10103                           
 10104  0070                     ?_do_I2C_SEND_ADR_WRITE:	
 10105                           ; 1 bytes @ 0x0
 10106                           
 10107  0070                     ?_do_I2C_RCEN:	
 10108                           ; 1 bytes @ 0x0
 10109                           
 10110  0070                     ??_do_I2C_RCEN:	
 10111                           ; 1 bytes @ 0x0
 10112                           
 10113  0070                     ?_do_I2C_DO_ACK:	
 10114                           ; 1 bytes @ 0x0
 10115                           
 10116  0070                     ??_do_I2C_DO_ACK:	
 10117                           ; 1 bytes @ 0x0
 10118                           
 10119  0070                     ?_do_I2C_DO_NACK_STOP:	
 10120                           ; 1 bytes @ 0x0
 10121                           
 10122  0070                     ??_do_I2C_DO_NACK_STOP:	
 10123                           ; 1 bytes @ 0x0
 10124                           
 10125  0070                     ?_do_I2C_DO_NACK_RESTART:	
 10126                           ; 1 bytes @ 0x0
 10127                           
 10128  0070                     ??_do_I2C_DO_NACK_RESTART:	
 10129                           ; 1 bytes @ 0x0
 10130                           
 10131  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
 10132                           ; 1 bytes @ 0x0
 10133                           
 10134  0070                     ?_do_I2C_TX:	
 10135                           ; 1 bytes @ 0x0
 10136                           
 10137  0070                     ?_do_I2C_RX:	
 10138                           ; 1 bytes @ 0x0
 10139                           
 10140  0070                     ?_do_I2C_TX_EMPTY:	
 10141                           ; 1 bytes @ 0x0
 10142                           
 10143  0070                     ?_INT_ISR:	
 10144                           ; 1 bytes @ 0x0
 10145                           
 10146  0070                     ?_INT_DefaultInterruptHandler:	
 10147                           ; 1 bytes @ 0x0
 10148                           
 10149  0070                     ??_INT_DefaultInterruptHandler:	
 10150                           ; 1 bytes @ 0x0
 10151                           
 10152  0070                     ?_EXT_INT_Initialize:	
 10153                           ; 1 bytes @ 0x0
 10154                           
 10155  0070                     ?_INTERRUPT_InterruptManager:	
 10156                           ; 1 bytes @ 0x0
 10157                           
 10158  0070                     ?_SYSTEM_Initialize:	
 10159                           ; 1 bytes @ 0x0
 10160                           
 10161  0070                     ?_ADCC_StartConversion:	
 10162                           ; 1 bytes @ 0x0
 10163                           
 10164  0070                     ?_ADCC_IsConversionDone:	
 10165                           ; 1 bytes @ 0x0
 10166                           
 10167  0070                     ?_TMR0_StartTimer:	
 10168                           ; 1 bytes @ 0x0
 10169                           
 10170  0070                     ?_TMR0_StopTimer:	
 10171                           ; 1 bytes @ 0x0
 10172                           
 10173  0070                     ??_TMR0_StopTimer:	
 10174                           ; 1 bytes @ 0x0
 10175                           
 10176  0070                     ?_TMR1_WriteTimer:	
 10177                           ; 1 bytes @ 0x0
 10178                           
 10179  0070                     ?_sw1_EXT:	
 10180                           ; 1 bytes @ 0x0
 10181                           
 10182  0070                     ?_ISR_3s:	
 10183                           ; 1 bytes @ 0x0
 10184                           
 10185  0070                     ?_main:	
 10186                           ; 1 bytes @ 0x0
 10187                           
 10188  0070                     ?i1_PWM6_LoadDutyValue:	
 10189                           ; 1 bytes @ 0x0
 10190                           
 10191  0070                     ?i1_checkDebounceSW1:	
 10192                           ; 1 bytes @ 0x0
 10193                           
 10194  0070                     ??i1_checkDebounceSW1:	
 10195                           ; 1 bytes @ 0x0
 10196                           
 10197  0070                     i2c1_driver_TXData@d:	
 10198                           ; 1 bytes @ 0x0
 10199                           
 10200  0070                     i2c_setBuffer@bufferSize:	
 10201                           ; 1 bytes @ 0x0
 10202                           
 10203  0070                     setCallBack@cb:	
 10204                           ; 2 bytes @ 0x0
 10205                           
 10206  0070                     TMR1_WriteTimer@timerVal:	
 10207                           ; 2 bytes @ 0x0
 10208                           
 10209  0070                     i1PWM6_LoadDutyValue@dutyValue:	
 10210                           ; 2 bytes @ 0x0
 10211                           
 10212                           
 10213                           ; 2 bytes @ 0x0
 10214  0070                     	ds	1
 10215  0071                     ??_TMR2_ISR:	
 10216  0071                     ??_do_I2C_SEND_ADR_WRITE:	
 10217                           ; 1 bytes @ 0x1
 10218                           
 10219                           
 10220                           ; 1 bytes @ 0x1
 10221  0071                     	ds	1
 10222  0072                     ??_TMR1_ISR:	
 10223  0072                     ??_i2c_setBuffer:	
 10224                           ; 1 bytes @ 0x2
 10225                           
 10226  0072                     ??_TMR1_WriteTimer:	
 10227                           ; 1 bytes @ 0x2
 10228                           
 10229  0072                     ??i1_PWM6_LoadDutyValue:	
 10230                           ; 1 bytes @ 0x2
 10231                           
 10232  0072                     setCallBack@p:	
 10233                           ; 1 bytes @ 0x2
 10234                           
 10235                           
 10236                           ; 1 bytes @ 0x2
 10237  0072                     	ds	1
 10238  0073                     ??_setCallBack:	
 10239  0073                     i2c_setBuffer@buffer:	
 10240                           ; 1 bytes @ 0x3
 10241                           
 10242                           
 10243                           ; 1 bytes @ 0x3
 10244  0073                     	ds	1
 10245  0074                     ??_ISR_3s:	
 10246  0074                     setCallBack@idx:	
 10247                           ; 1 bytes @ 0x4
 10248                           
 10249                           
 10250                           ; 1 bytes @ 0x4
 10251  0074                     	ds	1
 10252  0075                     ??_TMR0_ISR:	
 10253  0075                     ?_i2c_setDataCompleteCallback:	
 10254                           ; 1 bytes @ 0x5
 10255                           
 10256  0075                     i2c_setDataCompleteCallback@cb:	
 10257                           ; 1 bytes @ 0x5
 10258                           
 10259                           
 10260                           ; 2 bytes @ 0x5
 10261  0075                     	ds	2
 10262  0077                     ??_sw1_EXT:	
 10263  0077                     i2c_setDataCompleteCallback@p:	
 10264                           ; 1 bytes @ 0x7
 10265                           
 10266                           
 10267                           ; 1 bytes @ 0x7
 10268  0077                     	ds	1
 10269  0078                     ??_INT_CallBack:	
 10270  0078                     ??_i2c_setDataCompleteCallback:	
 10271                           ; 1 bytes @ 0x8
 10272                           
 10273  0078                     ??_INT_ISR:	
 10274                           ; 1 bytes @ 0x8
 10275                           
 10276                           
 10277                           ; 1 bytes @ 0x8
 10278  0078                     	ds	1
 10279  0079                     ?_returnStop:	
 10280  0079                     ?_returnReset:	
 10281                           ; 1 bytes @ 0x9
 10282                           
 10283  0079                     ?_i2c_restartWrite:	
 10284                           ; 1 bytes @ 0x9
 10285                           
 10286  0079                     ?_wr1RegCompleteHandler:	
 10287                           ; 1 bytes @ 0x9
 10288                           
 10289  0079                     ?_rd1RegCompleteHandler:	
 10290                           ; 1 bytes @ 0x9
 10291                           
 10292  0079                     ?_rd2RegCompleteHandler:	
 10293                           ; 1 bytes @ 0x9
 10294                           
 10295  0079                     ?_wr2RegCompleteHandler:	
 10296                           ; 1 bytes @ 0x9
 10297                           
 10298  0079                     ?_rdBlkRegCompleteHandler:	
 10299                           ; 1 bytes @ 0x9
 10300                           
 10301  0079                     i2c_restartWrite@p:	
 10302                           ; 1 bytes @ 0x9
 10303                           
 10304  0079                     returnStop@p:	
 10305                           ; 1 bytes @ 0x9
 10306                           
 10307  0079                     returnReset@p:	
 10308                           ; 1 bytes @ 0x9
 10309                           
 10310  0079                     wr1RegCompleteHandler@p:	
 10311                           ; 1 bytes @ 0x9
 10312                           
 10313  0079                     rd1RegCompleteHandler@p:	
 10314                           ; 1 bytes @ 0x9
 10315                           
 10316  0079                     rd2RegCompleteHandler@p:	
 10317                           ; 1 bytes @ 0x9
 10318                           
 10319  0079                     wr2RegCompleteHandler@p:	
 10320                           ; 1 bytes @ 0x9
 10321                           
 10322  0079                     rdBlkRegCompleteHandler@p:	
 10323                           ; 1 bytes @ 0x9
 10324                           
 10325                           
 10326                           ; 1 bytes @ 0x9
 10327  0079                     	ds	1
 10328  007A                     ??_returnStop:	
 10329  007A                     ??_returnReset:	
 10330                           ; 1 bytes @ 0xA
 10331                           
 10332  007A                     ??_i2c_restartWrite:	
 10333                           ; 1 bytes @ 0xA
 10334                           
 10335  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
 10336                           ; 1 bytes @ 0xA
 10337                           
 10338  007A                     ??_do_I2C_TX:	
 10339                           ; 1 bytes @ 0xA
 10340                           
 10341  007A                     ??_do_I2C_RX:	
 10342                           ; 1 bytes @ 0xA
 10343                           
 10344  007A                     ??_do_I2C_TX_EMPTY:	
 10345                           ; 1 bytes @ 0xA
 10346                           
 10347  007A                     ??_wr1RegCompleteHandler:	
 10348                           ; 1 bytes @ 0xA
 10349                           
 10350  007A                     ??_rd1RegCompleteHandler:	
 10351                           ; 1 bytes @ 0xA
 10352                           
 10353  007A                     ??_rd2RegCompleteHandler:	
 10354                           ; 1 bytes @ 0xA
 10355                           
 10356  007A                     ??_wr2RegCompleteHandler:	
 10357                           ; 1 bytes @ 0xA
 10358                           
 10359  007A                     ??_rdBlkRegCompleteHandler:	
 10360                           ; 1 bytes @ 0xA
 10361                           
 10362                           
 10363                           ; 1 bytes @ 0xA
 10364  007A                     	ds	3
 10365  007D                     ??_INTERRUPT_InterruptManager:	
 10366                           
 10367                           	psect	cstackBANK0
 10368  0020                     __pcstackBANK0:	
 10369                           ; 1 bytes @ 0xD
 10370                           
 10371  0020                     ??_i2c_ISR:	
 10372                           
 10373                           ; 1 bytes @ 0x0
 10374  0020                     	ds	3
 10375  0023                     ??_i2c1_driver_open:	
 10376  0023                     ??_PMD_Initialize:	
 10377                           ; 1 bytes @ 0x3
 10378                           
 10379  0023                     ??_PIN_MANAGER_Initialize:	
 10380                           ; 1 bytes @ 0x3
 10381                           
 10382  0023                     ??_OSCILLATOR_Initialize:	
 10383                           ; 1 bytes @ 0x3
 10384                           
 10385  0023                     ??_PWM6_Initialize:	
 10386                           ; 1 bytes @ 0x3
 10387                           
 10388  0023                     ??_ADCC_Initialize:	
 10389                           ; 1 bytes @ 0x3
 10390                           
 10391  0023                     ?_TMR0_SetInterruptHandler:	
 10392                           ; 1 bytes @ 0x3
 10393                           
 10394  0023                     ?_TMR1_SetInterruptHandler:	
 10395                           ; 1 bytes @ 0x3
 10396                           
 10397  0023                     ?_TMR2_SetInterruptHandler:	
 10398                           ; 1 bytes @ 0x3
 10399                           
 10400  0023                     ??_checkDebounceSW1:	
 10401                           ; 1 bytes @ 0x3
 10402                           
 10403  0023                     ?_LED_bin:	
 10404                           ; 1 bytes @ 0x3
 10405                           
 10406  0023                     ?_ring_buffer:	
 10407                           ; 1 bytes @ 0x3
 10408                           
 10409  0023                     ??_checkDebounceSW2:	
 10410                           ; 1 bytes @ 0x3
 10411                           
 10412  0023                     ?_INT_SetInterruptHandler:	
 10413                           ; 1 bytes @ 0x3
 10414                           
 10415  0023                     ??_ADCC_StartConversion:	
 10416                           ; 1 bytes @ 0x3
 10417                           
 10418  0023                     ??_ADCC_IsConversionDone:	
 10419                           ; 1 bytes @ 0x3
 10420                           
 10421  0023                     ??_TMR0_StartTimer:	
 10422                           ; 1 bytes @ 0x3
 10423                           
 10424  0023                     ?_DATAEE_ReadByte:	
 10425                           ; 1 bytes @ 0x3
 10426                           
 10427  0023                     ?___bmul:	
 10428                           ; 1 bytes @ 0x3
 10429                           
 10430  0023                     ?_ADCC_GetConversionResult:	
 10431                           ; 1 bytes @ 0x3
 10432                           
 10433  0023                     ?___wmul:	
 10434                           ; 2 bytes @ 0x3
 10435                           
 10436  0023                     ?___awdiv:	
 10437                           ; 2 bytes @ 0x3
 10438                           
 10439  0023                     ?___awmod:	
 10440                           ; 2 bytes @ 0x3
 10441                           
 10442  0023                     ADCC_StartConversion@channel:	
 10443                           ; 2 bytes @ 0x3
 10444                           
 10445  0023                     ring_buffer@clock_h:	
 10446                           ; 1 bytes @ 0x3
 10447                           
 10448  0023                     ___bmul@multiplicand:	
 10449                           ; 1 bytes @ 0x3
 10450                           
 10451  0023                     INT_SetInterruptHandler@InterruptHandler:	
 10452                           ; 1 bytes @ 0x3
 10453                           
 10454  0023                     TMR0_SetInterruptHandler@InterruptHandler:	
 10455                           ; 2 bytes @ 0x3
 10456                           
 10457  0023                     TMR1_SetInterruptHandler@InterruptHandler:	
 10458                           ; 2 bytes @ 0x3
 10459                           
 10460  0023                     DATAEE_ReadByte@bAdd:	
 10461                           ; 2 bytes @ 0x3
 10462                           
 10463  0023                     TMR2_SetInterruptHandler@InterruptHandler:	
 10464                           ; 2 bytes @ 0x3
 10465                           
 10466  0023                     LED_bin@value:	
 10467                           ; 2 bytes @ 0x3
 10468                           
 10469  0023                     ___wmul@multiplier:	
 10470                           ; 2 bytes @ 0x3
 10471                           
 10472  0023                     ___awdiv@divisor:	
 10473                           ; 2 bytes @ 0x3
 10474                           
 10475  0023                     ___awmod@divisor:	
 10476                           ; 2 bytes @ 0x3
 10477                           
 10478                           
 10479                           ; 2 bytes @ 0x3
 10480  0023                     	ds	1
 10481  0024                     ??___bmul:	
 10482  0024                     ring_buffer@clock_m:	
 10483                           ; 1 bytes @ 0x4
 10484                           
 10485                           
 10486                           ; 1 bytes @ 0x4
 10487  0024                     	ds	1
 10488  0025                     ??_TMR2_Initialize:	
 10489  0025                     ??_TMR1_Initialize:	
 10490                           ; 1 bytes @ 0x5
 10491                           
 10492  0025                     ??_TMR0_Initialize:	
 10493                           ; 1 bytes @ 0x5
 10494                           
 10495  0025                     ??_TMR0_SetInterruptHandler:	
 10496                           ; 1 bytes @ 0x5
 10497                           
 10498  0025                     ??_TMR1_SetInterruptHandler:	
 10499                           ; 1 bytes @ 0x5
 10500                           
 10501  0025                     ??_TMR2_SetInterruptHandler:	
 10502                           ; 1 bytes @ 0x5
 10503                           
 10504  0025                     ??_LED_bin:	
 10505                           ; 1 bytes @ 0x5
 10506                           
 10507  0025                     ??_cksum:	
 10508                           ; 1 bytes @ 0x5
 10509                           
 10510  0025                     ??_INT_SetInterruptHandler:	
 10511                           ; 1 bytes @ 0x5
 10512                           
 10513  0025                     ??_EXT_INT_Initialize:	
 10514                           ; 1 bytes @ 0x5
 10515                           
 10516  0025                     ??_SYSTEM_Initialize:	
 10517                           ; 1 bytes @ 0x5
 10518                           
 10519  0025                     ??_ADCC_GetConversionResult:	
 10520                           ; 1 bytes @ 0x5
 10521                           
 10522  0025                     ??_DATAEE_ReadByte:	
 10523                           ; 1 bytes @ 0x5
 10524                           
 10525  0025                     ?_ADC_read:	
 10526                           ; 1 bytes @ 0x5
 10527                           
 10528  0025                     ring_buffer@clock_s:	
 10529                           ; 2 bytes @ 0x5
 10530                           
 10531  0025                     ___bmul@product:	
 10532                           ; 1 bytes @ 0x5
 10533                           
 10534  0025                     ___wmul@multiplicand:	
 10535                           ; 1 bytes @ 0x5
 10536                           
 10537  0025                     ___awdiv@dividend:	
 10538                           ; 2 bytes @ 0x5
 10539                           
 10540  0025                     ___awmod@dividend:	
 10541                           ; 2 bytes @ 0x5
 10542                           
 10543                           
 10544                           ; 2 bytes @ 0x5
 10545  0025                     	ds	1
 10546  0026                     ring_buffer@tem:	
 10547  0026                     cksum@res:	
 10548                           ; 1 bytes @ 0x6
 10549                           
 10550  0026                     ___bmul@multiplier:	
 10551                           ; 1 bytes @ 0x6
 10552                           
 10553                           
 10554                           ; 1 bytes @ 0x6
 10555  0026                     	ds	1
 10556  0027                     ??_ADC_read:	
 10557  0027                     ?_read_ring:	
 10558                           ; 1 bytes @ 0x7
 10559                           
 10560  0027                     ??___wmul:	
 10561                           ; 1 bytes @ 0x7
 10562                           
 10563  0027                     ??___awdiv:	
 10564                           ; 1 bytes @ 0x7
 10565                           
 10566  0027                     ??___awmod:	
 10567                           ; 1 bytes @ 0x7
 10568                           
 10569  0027                     ring_buffer@lum:	
 10570                           ; 1 bytes @ 0x7
 10571                           
 10572  0027                     read_ring@nreg:	
 10573                           ; 1 bytes @ 0x7
 10574                           
 10575  0027                     cksum@i:	
 10576                           ; 1 bytes @ 0x7
 10577                           
 10578  0027                     ___wmul@product:	
 10579                           ; 2 bytes @ 0x7
 10580                           
 10581                           
 10582                           ; 2 bytes @ 0x7
 10583  0027                     	ds	1
 10584  0028                     ??_ring_buffer:	
 10585  0028                     read_ring@nreg_init:	
 10586                           ; 1 bytes @ 0x8
 10587                           
 10588  0028                     ___awdiv@counter:	
 10589                           ; 1 bytes @ 0x8
 10590                           
 10591  0028                     ___awmod@counter:	
 10592                           ; 1 bytes @ 0x8
 10593                           
 10594                           
 10595                           ; 1 bytes @ 0x8
 10596  0028                     	ds	1
 10597  0029                     ?_PWM6_LoadDutyValue:	
 10598  0029                     ?_DATAEE_WriteByte:	
 10599                           ; 1 bytes @ 0x9
 10600                           
 10601  0029                     ring_buffer@_ring_byte:	
 10602                           ; 1 bytes @ 0x9
 10603                           
 10604  0029                     read_ring@index:	
 10605                           ; 1 bytes @ 0x9
 10606                           
 10607  0029                     ___awdiv@sign:	
 10608                           ; 1 bytes @ 0x9
 10609                           
 10610  0029                     ___awmod@sign:	
 10611                           ; 1 bytes @ 0x9
 10612                           
 10613  0029                     PWM6_LoadDutyValue@dutyValue:	
 10614                           ; 1 bytes @ 0x9
 10615                           
 10616  0029                     DATAEE_WriteByte@bAdd:	
 10617                           ; 2 bytes @ 0x9
 10618                           
 10619                           
 10620                           ; 2 bytes @ 0x9
 10621  0029                     	ds	1
 10622  002A                     read_ring@subindex:	
 10623  002A                     ___awdiv@quotient:	
 10624                           ; 1 bytes @ 0xA
 10625                           
 10626                           
 10627                           ; 2 bytes @ 0xA
 10628  002A                     	ds	1
 10629  002B                     ??_read_ring:	
 10630  002B                     ??_PWM6_LoadDutyValue:	
 10631                           ; 1 bytes @ 0xB
 10632                           
 10633  002B                     DATAEE_WriteByte@bData:	
 10634                           ; 1 bytes @ 0xB
 10635                           
 10636                           
 10637                           ; 1 bytes @ 0xB
 10638  002B                     	ds	1
 10639  002C                     ??_limitHoursUnits:	
 10640  002C                     ??_DATAEE_WriteByte:	
 10641                           ; 1 bytes @ 0xC
 10642                           
 10643  002C                     DATAEE_WriteByte@GIEBitValue:	
 10644                           ; 1 bytes @ 0xC
 10645                           
 10646                           
 10647                           ; 1 bytes @ 0xC
 10648  002C                     	ds	1
 10649  002D                     ?_push_ring:	
 10650  002D                     ??_cksum_w:	
 10651                           ; 1 bytes @ 0xD
 10652                           
 10653  002D                     ??_all_LED:	
 10654                           ; 1 bytes @ 0xD
 10655                           
 10656  002D                     ??_mod1_LED:	
 10657                           ; 1 bytes @ 0xD
 10658                           
 10659  002D                     ??_mod2_LED:	
 10660                           ; 1 bytes @ 0xD
 10661                           
 10662  002D                     ??_mod3_LED:	
 10663                           ; 1 bytes @ 0xD
 10664                           
 10665  002D                     ??_mod4_LED:	
 10666                           ; 1 bytes @ 0xD
 10667                           
 10668  002D                     ??_mode_select_LED:	
 10669                           ; 1 bytes @ 0xD
 10670                           
 10671  002D                     ??_mode_LED:	
 10672                           ; 1 bytes @ 0xD
 10673                           
 10674  002D                     ??_representLed:	
 10675                           ; 1 bytes @ 0xD
 10676                           
 10677  002D                     ??_reset_recv:	
 10678                           ; 1 bytes @ 0xD
 10679                           
 10680  002D                     push_ring@nreg:	
 10681                           ; 1 bytes @ 0xD
 10682                           
 10683  002D                     read_ring@i:	
 10684                           ; 1 bytes @ 0xD
 10685                           
 10686  002D                     reset_recv@i:	
 10687                           ; 1 bytes @ 0xD
 10688                           
 10689                           
 10690                           ; 2 bytes @ 0xD
 10691  002D                     	ds	1
 10692  002E                     ??_save_recovery_params:	
 10693  002E                     push_ring@nreg_init:	
 10694                           ; 1 bytes @ 0xE
 10695                           
 10696  002E                     read_ring@nreg_pt:	
 10697                           ; 1 bytes @ 0xE
 10698                           
 10699                           
 10700                           ; 1 bytes @ 0xE
 10701  002E                     	ds	1
 10702  002F                     ??_recoverData:	
 10703  002F                     save_recovery_params@aux:	
 10704                           ; 1 bytes @ 0xF
 10705                           
 10706  002F                     push_ring@ring_byte:	
 10707                           ; 1 bytes @ 0xF
 10708                           
 10709  002F                     read_ring@absindex:	
 10710                           ; 1 bytes @ 0xF
 10711                           
 10712  002F                     mode_LED@subfield:	
 10713                           ; 1 bytes @ 0xF
 10714                           
 10715                           
 10716                           ; 1 bytes @ 0xF
 10717  002F                     	ds	1
 10718  0030                     ??_push_ring:	
 10719  0030                     save_recovery_params@aux1:	
 10720                           ; 1 bytes @ 0x10
 10721                           
 10722  0030                     representLed@val:	
 10723                           ; 1 bytes @ 0x10
 10724                           
 10725                           
 10726                           ; 1 bytes @ 0x10
 10727  0030                     	ds	1
 10728  0031                     representLed@aux:	
 10729                           
 10730                           ; 1 bytes @ 0x11
 10731  0031                     	ds	1
 10732  0032                     ?_increment_subfield_clk:	
 10733  0032                     push_ring@i:	
 10734                           ; 1 bytes @ 0x12
 10735                           
 10736  0032                     increment_subfield_clk@init_val:	
 10737                           ; 1 bytes @ 0x12
 10738                           
 10739                           
 10740                           ; 2 bytes @ 0x12
 10741  0032                     	ds	1
 10742  0033                     push_ring@nreg_pt:	
 10743                           
 10744                           ; 1 bytes @ 0x13
 10745  0033                     	ds	1
 10746  0034                     ??_increment_subfield_clk:	
 10747                           
 10748                           ; 1 bytes @ 0x14
 10749  0034                     	ds	1
 10750  0035                     increment_subfield_clk@exit:	
 10751                           
 10752                           ; 1 bytes @ 0x15
 10753  0035                     	ds	1
 10754  0036                     increment_subfield_clk@limit:	
 10755                           
 10756                           ; 1 bytes @ 0x16
 10757  0036                     	ds	1
 10758  0037                     increment_subfield_clk@_value:	
 10759                           
 10760                           ; 1 bytes @ 0x17
 10761  0037                     	ds	1
 10762  0038                     ??_getSubfieldInfo:	
 10763                           
 10764                           ; 1 bytes @ 0x18
 10765  0038                     	ds	3
 10766  003B                     getSubfieldInfo@h_tens:	
 10767                           
 10768                           ; 1 bytes @ 0x1B
 10769  003B                     	ds	1
 10770  003C                     getSubfieldInfo@h_units:	
 10771                           
 10772                           ; 1 bytes @ 0x1C
 10773  003C                     	ds	1
 10774  003D                     getSubfieldInfo@m_tens:	
 10775                           
 10776                           ; 1 bytes @ 0x1D
 10777  003D                     	ds	1
 10778  003E                     getSubfieldInfo@m_units:	
 10779                           
 10780                           ; 1 bytes @ 0x1E
 10781  003E                     	ds	1
 10782  003F                     ??_selectSubfield:	
 10783                           
 10784                           ; 1 bytes @ 0x1F
 10785  003F                     	ds	2
 10786  0041                     selectSubfield@subfield:	
 10787                           
 10788                           ; 2 bytes @ 0x21
 10789  0041                     	ds	2
 10790  0043                     ??_config_routine:	
 10791                           
 10792                           ; 1 bytes @ 0x23
 10793  0043                     	ds	1
 10794  0044                     config_routine@select_mode:	
 10795                           
 10796                           ; 2 bytes @ 0x24
 10797  0044                     	ds	2
 10798  0046                     ??_main:	
 10799                           
 10800                           ; 1 bytes @ 0x26
 10801  0046                     	ds	5
 10802                           
 10803                           	psect	maintext
 10804  007E                     __pmaintext:	
 10805 ;;
 10806 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
 10807 ;;
 10808 ;; *************** function _main *****************
 10809 ;; Defined at:
 10810 ;;		line 170 in file "main.c"
 10811 ;; Parameters:    Size  Location     Type
 10812 ;;		None
 10813 ;; Auto vars:     Size  Location     Type
 10814 ;;  t1m             1    3[BANK1 ] unsigned char 
 10815 ;;  t5s             1    2[BANK1 ] unsigned char 
 10816 ;; Return value:  Size  Location     Type
 10817 ;;                  1    wreg      void 
 10818 ;; Registers used:
 10819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10820 ;; Tracked objects:
 10821 ;;		On entry : B1F/0
 10822 ;;		On exit  : 0/0
 10823 ;;		Unchanged: 0/0
 10824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10826 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10827 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10828 ;;      Totals:         0       5       5       0       0       0       0       0       0       0       0       0       
      +0       0
 10829 ;;Total ram usage:       10 bytes
 10830 ;; Hardware stack levels required when called:   12
 10831 ;; This function calls:
 10832 ;;		_ADC_read
 10833 ;;		_DATAEE_WriteByte
 10834 ;;		_INT_SetInterruptHandler
 10835 ;;		_LED_bin
 10836 ;;		_PWM6_LoadDutyValue
 10837 ;;		_SYSTEM_Initialize
 10838 ;;		_TMR0_SetInterruptHandler
 10839 ;;		_TMR0_StartTimer
 10840 ;;		_TMR1_SetInterruptHandler
 10841 ;;		_TMR2_SetInterruptHandler
 10842 ;;		_cksum_w
 10843 ;;		_config_routine
 10844 ;;		_i2c1_driver_open
 10845 ;;		_push_ring
 10846 ;;		_read_ring
 10847 ;;		_recoverData
 10848 ;;		_ring_buffer
 10849 ;;		_save_recovery_params
 10850 ;; This function is called by:
 10851 ;;		Startup code after reset
 10852 ;; This function uses a non-reentrant model
 10853 ;;
 10854                           
 10855                           
 10856                           ;psect for function _main
 10857  007E                     _main:	
 10858  007E                     l7385:	
 10859                           ;incstack = 0
 10860                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10861                           
 10862                           
 10863                           ;main.c: 172:     SYSTEM_Initialize();
 10864  007E  318C  24E8  3180   	fcall	_SYSTEM_Initialize
 10865                           
 10866                           ;main.c: 173:     TMR0_SetInterruptHandler(ISR_3s);
 10867  0081  3067               	movlw	low _ISR_3s
 10868  0082  0020               	movlb	0	; select bank0
 10869  0083  00A3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10870  0084  300C               	movlw	high _ISR_3s
 10871  0085  00A4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10872  0086  318A  228B  3180   	fcall	_TMR0_SetInterruptHandler
 10873                           
 10874                           ;main.c: 174:     TMR1_SetInterruptHandler(handler_clock_hms);
 10875  0089  30FD               	movlw	low _handler_clock_hms
 10876  008A  0020               	movlb	0	; select bank0
 10877  008B  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10878  008C  300E               	movlw	high _handler_clock_hms
 10879  008D  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10880  008E  318A  2294  3180   	fcall	_TMR1_SetInterruptHandler
 10881                           
 10882                           ;main.c: 175:     INT_SetInterruptHandler(sw1_EXT);
 10883  0091  30A3               	movlw	low _sw1_EXT
 10884  0092  0020               	movlb	0	; select bank0
 10885  0093  00A3               	movwf	INT_SetInterruptHandler@InterruptHandler
 10886  0094  300D               	movlw	high _sw1_EXT
 10887  0095  00A4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 10888  0096  318A  2279  3180   	fcall	_INT_SetInterruptHandler
 10889                           
 10890                           ;main.c: 176:     TMR2_SetInterruptHandler(handler_clock_ms);
 10891  0099  30DA               	movlw	low _handler_clock_ms
 10892  009A  0020               	movlb	0	; select bank0
 10893  009B  00A3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 10894  009C  300A               	movlw	high _handler_clock_ms
 10895  009D  00A4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 10896  009E  318A  229D  3180   	fcall	_TMR2_SetInterruptHandler
 10897  00A1                     l7387:	
 10898  00A1                     l7389:	
 10899  00A1                     l7391:	
 10900  00A1                     l1291:	
 10901  00A1  3096               	movlw	150
 10902  00A2  0020               	movlb	0	; select bank0
 10903  00A3  00C6               	movwf	??_main
 10904  00A4  0846               	movf	??_main,w
 10905  00A5  00E9               	movwf	_nreg
 10906  00A6                     l7395:	
 10907                           
 10908                           ;main.c: 184:     nreg_pt = 0;
 10909  00A6  01DF               	clrf	_nreg_pt
 10910  00A7                     l7397:	
 10911                           
 10912                           ;main.c: 185:     nreg_init = 0;
 10913  00A7  01E0               	clrf	_nreg_init
 10914  00A8                     l7399:	
 10915                           
 10916                           ;main.c: 186:     alaf = 1;
 10917  00A8  01D3               	clrf	_alaf
 10918  00A9  0AD3               	incf	_alaf,f
 10919  00AA                     l7401:	
 10920                           
 10921                           ;main.c: 187:     temp = 0;
 10922  00AA  01D4               	clrf	_temp
 10923  00AB                     l7403:	
 10924                           
 10925                           ;main.c: 188:     lum_bin = 0;
 10926  00AB  01D1               	clrf	_lum_bin
 10927  00AC  01D2               	clrf	_lum_bin+1
 10928  00AD                     l7405:	
 10929                           
 10930                           ;main.c: 189:     lum_threshold = 0;
 10931  00AD  01CF               	clrf	_lum_threshold
 10932  00AE  01D0               	clrf	_lum_threshold+1
 10933  00AF                     l7407:	
 10934                           
 10935                           ;main.c: 190:     duty_cycle = 0;
 10936  00AF  0021               	movlb	1	; select bank1
 10937  00B0  01BD               	clrf	_duty_cycle^(0+128)
 10938  00B1  01BE               	clrf	(_duty_cycle+1)^(0+128)
 10939  00B2                     l7409:	
 10940                           
 10941                           ;main.c: 191:     set_mode= 0;
 10942  00B2  0020               	movlb	0	; select bank0
 10943  00B3  01D7               	clrf	_set_mode	;volatile
 10944  00B4                     l7411:	
 10945                           
 10946                           ;main.c: 194:     i2c1_driver_open();
 10947  00B4  318A  22E6  3180   	fcall	_i2c1_driver_open
 10948  00B7                     l7413:	
 10949                           
 10950                           ;main.c: 195:     TRISCbits.TRISC3 = 1;
 10951  00B7  0020               	movlb	0	; select bank0
 10952  00B8  1593               	bsf	19,3	;volatile
 10953  00B9                     l7415:	
 10954                           
 10955                           ;main.c: 196:     TRISCbits.TRISC4 = 1;
 10956  00B9  1613               	bsf	19,4	;volatile
 10957  00BA                     l7417:	
 10958                           
 10959                           ;main.c: 197:     WPUC3 = 1;
 10960  00BA  003E               	movlb	30	; select bank30
 10961  00BB  15CF               	bsf	79,3	;volatile
 10962  00BC                     l7419:	
 10963                           
 10964                           ;main.c: 198:     WPUC4 = 1;
 10965  00BC  164F               	bsf	79,4	;volatile
 10966  00BD                     l7421:	
 10967                           
 10968                           ;main.c: 201:     recoverData();
 10969  00BD  3183  2322  3180   	fcall	_recoverData
 10970  00C0                     l7423:	
 10971                           
 10972                           ;main.c: 203:     PWM6_LoadDutyValue(0);
 10973  00C0  3000               	movlw	0
 10974  00C1  0020               	movlb	0	; select bank0
 10975  00C2  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 10976  00C3  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10977  00C4  318C  2480  3180   	fcall	_PWM6_LoadDutyValue
 10978  00C7                     l7425:	
 10979                           
 10980                           ;main.c: 204:     alarm = 0 ;
 10981  00C7  0020               	movlb	0	; select bank0
 10982  00C8  01D5               	clrf	_alarm	;volatile
 10983  00C9                     l7427:	
 10984  00C9  003E               	movlb	30	; select bank30
 10985  00CA  1644               	bsf	68,4	;volatile
 10986  00CB                     l7429:	
 10987                           
 10988                           ;main.c: 208:     (INTCONbits.GIE = 1);
 10989  00CB  178B               	bsf	11,7	;volatile
 10990  00CC                     l7431:	
 10991                           
 10992                           ;main.c: 210:     (INTCONbits.PEIE = 1);
 10993  00CC  170B               	bsf	11,6	;volatile
 10994  00CD                     l1294:	
 10995                           ;main.c: 213:     while (1)
 10996                           
 10997  00CD  0063               	sleep	;# 
 10998  00CE                     l7433:	
 10999                           
 11000                           ;main.c: 217:         __nop();
 11001  00CE  0000               	nop
 11002  00CF                     l7435:	
 11003                           
 11004                           ;main.c: 219:         PIE4bits.TMR1IE = 0;
 11005  00CF  002E               	movlb	14	; select bank14
 11006  00D0  101A               	bcf	26,0	;volatile
 11007  00D1                     l7437:	
 11008                           
 11009                           ;main.c: 220:         t5s = last5s;
 11010  00D1  0020               	movlb	0	; select bank0
 11011  00D2  0859               	movf	_last5s,w	;volatile
 11012  00D3  00C6               	movwf	??_main
 11013  00D4  0846               	movf	??_main,w
 11014  00D5  0021               	movlb	1	; select bank1
 11015  00D6  00E0               	movwf	main@t5s^(0+128)
 11016  00D7                     l7439:	
 11017                           
 11018                           ;main.c: 221:         PIE4bits.TMR1IE = 1;
 11019  00D7  002E               	movlb	14	; select bank14
 11020  00D8  141A               	bsf	26,0	;volatile
 11021  00D9                     l7441:	
 11022                           
 11023                           ;main.c: 223:         if(t5s >= pmon){
 11024  00D9  0020               	movlb	0	; select bank0
 11025  00DA  0868               	movf	_pmon,w
 11026  00DB  0021               	movlb	1	; select bank1
 11027  00DC  0260               	subwf	main@t5s^(0+128),w
 11028  00DD  1C03               	skipc
 11029  00DE  28E0               	goto	u4381
 11030  00DF  28E1               	goto	u4380
 11031  00E0                     u4381:	
 11032  00E0  29F4               	goto	l1295
 11033  00E1                     u4380:	
 11034  00E1                     l7443:	
 11035                           
 11036                           ;main.c: 224:             PIE4bits.TMR1IE = 0;
 11037  00E1  002E               	movlb	14	; select bank14
 11038  00E2  101A               	bcf	26,0	;volatile
 11039  00E3                     l7445:	
 11040                           
 11041                           ;main.c: 225:             last5s =0;
 11042  00E3  0020               	movlb	0	; select bank0
 11043  00E4  01D9               	clrf	_last5s	;volatile
 11044  00E5                     l7447:	
 11045                           
 11046                           ;main.c: 226:             PIE4bits.TMR1IE = 1;
 11047  00E5  002E               	movlb	14	; select bank14
 11048  00E6  141A               	bsf	26,0	;volatile
 11049  00E7                     l7449:	
 11050                           
 11051                           ;main.c: 229:                     if(!config_mode){
 11052  00E7  0020               	movlb	0	; select bank0
 11053  00E8  0856               	movf	_config_mode,w	;volatile
 11054  00E9  1D03               	btfss	3,2
 11055  00EA  28EC               	goto	u4391
 11056  00EB  28ED               	goto	u4390
 11057  00EC                     u4391:	
 11058  00EC  29D8               	goto	l7503
 11059  00ED                     u4390:	
 11060  00ED                     l7451:	
 11061                           
 11062                           ;main.c: 231:                             convertedValue = ADC_read();
 11063  00ED  318C  2499  3180   	fcall	_ADC_read
 11064  00F0  0020               	movlb	0	; select bank0
 11065  00F1  0826               	movf	?_ADC_read+1,w
 11066  00F2  0021               	movlb	1	; select bank1
 11067  00F3  00C0               	movwf	(_convertedValue+1)^(0+128)
 11068  00F4  0020               	movlb	0	; select bank0
 11069  00F5  0825               	movf	?_ADC_read,w
 11070  00F6  0021               	movlb	1	; select bank1
 11071  00F7  00BF               	movwf	_convertedValue^(0+128)
 11072  00F8                     l7453:	
 11073                           
 11074                           ;main.c: 232:                             lum_bin = (convertedValue >> 8);
 11075  00F8  0840               	movf	(_convertedValue+1)^(0+128),w
 11076  00F9  0020               	movlb	0	; select bank0
 11077  00FA  00C7               	movwf	??_main+1
 11078  00FB  0021               	movlb	1	; select bank1
 11079  00FC  083F               	movf	_convertedValue^(0+128),w
 11080  00FD  0020               	movlb	0	; select bank0
 11081  00FE  00C6               	movwf	??_main
 11082  00FF  0847               	movf	??_main+1,w
 11083  0100  00C6               	movwf	??_main
 11084  0101  01C7               	clrf	??_main+1
 11085  0102  0846               	movf	??_main,w
 11086  0103  00D1               	movwf	_lum_bin
 11087  0104  0847               	movf	??_main+1,w
 11088  0105  00D2               	movwf	_lum_bin+1
 11089  0106                     l7455:	
 11090                           
 11091                           ;main.c: 233:                             LED_bin(lum_bin);
 11092  0106  0852               	movf	_lum_bin+1,w
 11093  0107  00A4               	movwf	LED_bin@value+1
 11094  0108  0851               	movf	_lum_bin,w
 11095  0109  00A3               	movwf	LED_bin@value
 11096  010A  318C  24B3  3180   	fcall	_LED_bin
 11097  010D                     l7457:	
 11098                           
 11099                           ;main.c: 236:                             __nop();
 11100  010D  0000               	nop
 11101  010E                     l7459:	
 11102                           
 11103                           ;main.c: 238:                             __nop();
 11104  010E  0000               	nop
 11105  010F                     l7461:	
 11106                           
 11107                           ;main.c: 241:                             if (temp != read_ring(nreg_pt, nreg, nreg_init
      +                          , 0, 3) || lum_bin != read_ring(nreg_pt, nreg, nreg_init, 0, 4)) {
 11108  010F  0020               	movlb	0	; select bank0
 11109  0110  0869               	movf	_nreg,w
 11110  0111  00C6               	movwf	??_main
 11111  0112  0846               	movf	??_main,w
 11112  0113  00A7               	movwf	read_ring@nreg
 11113  0114  0860               	movf	_nreg_init,w
 11114  0115  00C7               	movwf	??_main+1
 11115  0116  0847               	movf	??_main+1,w
 11116  0117  00A8               	movwf	read_ring@nreg_init
 11117  0118  01A9               	clrf	read_ring@index
 11118  0119  3003               	movlw	3
 11119  011A  00C8               	movwf	??_main+2
 11120  011B  0848               	movf	??_main+2,w
 11121  011C  00AA               	movwf	read_ring@subindex
 11122  011D  085F               	movf	_nreg_pt,w
 11123  011E  318F  2731  3180   	fcall	_read_ring
 11124  0121  0020               	movlb	0	; select bank0
 11125  0122  0654               	xorwf	_temp,w
 11126  0123  1D03               	skipz
 11127  0124  2926               	goto	u4401
 11128  0125  2927               	goto	u4400
 11129  0126                     u4401:	
 11130  0126  2945               	goto	l7465
 11131  0127                     u4400:	
 11132  0127                     l7463:	
 11133  0127  0869               	movf	_nreg,w
 11134  0128  00C6               	movwf	??_main
 11135  0129  0846               	movf	??_main,w
 11136  012A  00A7               	movwf	read_ring@nreg
 11137  012B  0860               	movf	_nreg_init,w
 11138  012C  00C7               	movwf	??_main+1
 11139  012D  0847               	movf	??_main+1,w
 11140  012E  00A8               	movwf	read_ring@nreg_init
 11141  012F  01A9               	clrf	read_ring@index
 11142  0130  3004               	movlw	4
 11143  0131  00C8               	movwf	??_main+2
 11144  0132  0848               	movf	??_main+2,w
 11145  0133  00AA               	movwf	read_ring@subindex
 11146  0134  085F               	movf	_nreg_pt,w
 11147  0135  318F  2731  3180   	fcall	_read_ring
 11148  0138  0020               	movlb	0	; select bank0
 11149  0139  00C9               	movwf	??_main+3
 11150  013A  01CA               	clrf	??_main+4
 11151  013B  0852               	movf	_lum_bin+1,w
 11152  013C  064A               	xorwf	??_main+4,w
 11153  013D  1D03               	skipz
 11154  013E  2941               	goto	u4415
 11155  013F  0851               	movf	_lum_bin,w
 11156  0140  0649               	xorwf	??_main+3,w
 11157  0141                     u4415:	
 11158  0141  1903               	skipnz
 11159  0142  2944               	goto	u4411
 11160  0143  2945               	goto	u4410
 11161  0144                     u4411:	
 11162  0144  297D               	goto	l7471
 11163  0145                     u4410:	
 11164  0145                     l7465:	
 11165                           
 11166                           ;main.c: 242:                                 ring_buffer (ring_byte,clkh, clkm, seg, te
      +                          mp,lum_bin);
 11167  0145  085E               	movf	_clkh,w	;volatile
 11168  0146  00C6               	movwf	??_main
 11169  0147  0846               	movf	??_main,w
 11170  0148  00A3               	movwf	ring_buffer@clock_h
 11171  0149  085D               	movf	_clkm,w	;volatile
 11172  014A  00C7               	movwf	??_main+1
 11173  014B  0847               	movf	??_main+1,w
 11174  014C  00A4               	movwf	ring_buffer@clock_m
 11175  014D  085C               	movf	_seg,w	;volatile
 11176  014E  00C8               	movwf	??_main+2
 11177  014F  0848               	movf	??_main+2,w
 11178  0150  00A5               	movwf	ring_buffer@clock_s
 11179  0151  0854               	movf	_temp,w
 11180  0152  00C9               	movwf	??_main+3
 11181  0153  0849               	movf	??_main+3,w
 11182  0154  00A6               	movwf	ring_buffer@tem
 11183  0155  0851               	movf	_lum_bin,w
 11184  0156  00CA               	movwf	??_main+4
 11185  0157  084A               	movf	??_main+4,w
 11186  0158  00A7               	movwf	ring_buffer@lum
 11187  0159  30CF               	movlw	(low (_ring_byte| 0))& (0+255)
 11188  015A  318E  269B  3180   	fcall	_ring_buffer
 11189                           
 11190                           ;main.c: 243:                                 push_ring(&nreg_pt, nreg, &nreg_init, ring
      +                          _byte);
 11191  015D  0020               	movlb	0	; select bank0
 11192  015E  0869               	movf	_nreg,w
 11193  015F  00C6               	movwf	??_main
 11194  0160  0846               	movf	??_main,w
 11195  0161  00AD               	movwf	push_ring@nreg
 11196  0162  3060               	movlw	(low (_nreg_init| 0))& (0+255)
 11197  0163  00C7               	movwf	??_main+1
 11198  0164  0847               	movf	??_main+1,w
 11199  0165  00AE               	movwf	push_ring@nreg_init
 11200  0166  30CF               	movlw	(low (_ring_byte| 0))& (0+255)
 11201  0167  00C8               	movwf	??_main+2
 11202  0168  0848               	movf	??_main+2,w
 11203  0169  00AF               	movwf	push_ring@ring_byte
 11204  016A  305F               	movlw	(low (_nreg_pt| 0))& (0+255)
 11205  016B  318F  2770  3180   	fcall	_push_ring
 11206  016E                     l7467:	
 11207                           
 11208                           ;main.c: 244:                                 DATAEE_WriteByte(0xF0FF - 10 + 4, nreg_pt)
      +                          ;
 11209  016E  30F9               	movlw	249
 11210  016F  0020               	movlb	0	; select bank0
 11211  0170  00A9               	movwf	DATAEE_WriteByte@bAdd
 11212  0171  30F0               	movlw	240
 11213  0172  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11214  0173  085F               	movf	_nreg_pt,w
 11215  0174  00C6               	movwf	??_main
 11216  0175  0846               	movf	??_main,w
 11217  0176  00AB               	movwf	DATAEE_WriteByte@bData
 11218  0177  318D  257F  3180   	fcall	_DATAEE_WriteByte
 11219  017A                     l7469:	
 11220                           
 11221                           ;main.c: 245:                                 cksum_w();
 11222  017A  318B  2364  3180   	fcall	_cksum_w
 11223  017D                     l7471:	
 11224                           
 11225                           ;main.c: 249:                             lum_threshold = (lum_bin > 2 || temp > 100 ) &
      +                           alaf;
 11226  017D  0021               	movlb	1	; select bank1
 11227  017E  01E2               	clrf	_main$2460^(0+128)
 11228  017F  0AE2               	incf	_main$2460^(0+128),f
 11229  0180                     l7473:	
 11230  0180  3000               	movlw	0
 11231  0181  0020               	movlb	0	; select bank0
 11232  0182  0252               	subwf	_lum_bin+1,w
 11233  0183  3003               	movlw	3
 11234  0184  1903               	skipnz
 11235  0185  0251               	subwf	_lum_bin,w
 11236  0186  1803               	skipnc
 11237  0187  2989               	goto	u4421
 11238  0188  298A               	goto	u4420
 11239  0189                     u4421:	
 11240  0189  2992               	goto	l7479
 11241  018A                     u4420:	
 11242  018A                     l7475:	
 11243  018A  3065               	movlw	101
 11244  018B  0254               	subwf	_temp,w
 11245  018C  1803               	skipnc
 11246  018D  298F               	goto	u4431
 11247  018E  2990               	goto	u4430
 11248  018F                     u4431:	
 11249  018F  2992               	goto	l7479
 11250  0190                     u4430:	
 11251  0190                     l7477:	
 11252  0190  0021               	movlb	1	; select bank1
 11253  0191  01E2               	clrf	_main$2460^(0+128)
 11254  0192                     l7479:	
 11255  0192  0021               	movlb	1	; select bank1
 11256  0193  0862               	movf	_main$2460^(0+128),w
 11257  0194  0020               	movlb	0	; select bank0
 11258  0195  0553               	andwf	_alaf,w
 11259  0196  00C6               	movwf	??_main
 11260  0197  01C7               	clrf	??_main+1
 11261  0198  0846               	movf	??_main,w
 11262  0199  00CF               	movwf	_lum_threshold
 11263  019A  0847               	movf	??_main+1,w
 11264  019B  00D0               	movwf	_lum_threshold+1
 11265  019C                     l7481:	
 11266                           
 11267                           ;main.c: 251:                             if(lum_threshold){
 11268  019C  084F               	movf	_lum_threshold,w
 11269  019D  0450               	iorwf	_lum_threshold+1,w
 11270  019E  1903               	btfsc	3,2
 11271  019F  29A1               	goto	u4441
 11272  01A0  29A2               	goto	u4440
 11273  01A1                     u4441:	
 11274  01A1  29C8               	goto	l7497
 11275  01A2                     u4440:	
 11276  01A2                     l7483:	
 11277                           
 11278                           ;main.c: 252:                                 if(alarm == 2){
 11279  01A2  3002               	movlw	2
 11280  01A3  0655               	xorwf	_alarm,w	;volatile
 11281  01A4  1D03               	btfss	3,2
 11282  01A5  29A7               	goto	u4451
 11283  01A6  29A8               	goto	u4450
 11284  01A7                     u4451:	
 11285  01A7  29B8               	goto	l7489
 11286  01A8                     u4450:	
 11287  01A8                     l7485:	
 11288                           
 11289                           ;main.c: 253:                                     duty_cycle +=1 ;
 11290  01A8  3001               	movlw	1
 11291  01A9  0021               	movlb	1	; select bank1
 11292  01AA  07BD               	addwf	_duty_cycle^(0+128),f
 11293  01AB  3000               	movlw	0
 11294  01AC  3DBE               	addwfc	(_duty_cycle+1)^(0+128),f
 11295  01AD                     l7487:	
 11296                           
 11297                           ;main.c: 254:                                     PWM6_LoadDutyValue(duty_cycle);
 11298  01AD  083E               	movf	(_duty_cycle+1)^(0+128),w
 11299  01AE  0020               	movlb	0	; select bank0
 11300  01AF  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11301  01B0  0021               	movlb	1	; select bank1
 11302  01B1  083D               	movf	_duty_cycle^(0+128),w
 11303  01B2  0020               	movlb	0	; select bank0
 11304  01B3  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 11305  01B4  318C  2480  3180   	fcall	_PWM6_LoadDutyValue
 11306                           
 11307                           ;main.c: 255:                                 }
 11308  01B7  29E4               	goto	l7511
 11309  01B8                     l7489:	
 11310  01B8  0855               	movf	_alarm,w	;volatile
 11311  01B9  1D03               	btfss	3,2
 11312  01BA  29BC               	goto	u4461
 11313  01BB  29BD               	goto	u4460
 11314  01BC                     u4461:	
 11315  01BC  29D7               	goto	l1307
 11316  01BD                     u4460:	
 11317  01BD                     l7491:	
 11318                           
 11319                           ;main.c: 257:                                     PIE0bits.TMR0IE = 1;
 11320  01BD  002E               	movlb	14	; select bank14
 11321  01BE  1696               	bsf	22,5	;volatile
 11322  01BF                     l7493:	
 11323                           
 11324                           ;main.c: 258:                                     TMR0_StartTimer();
 11325  01BF  3189  21E3  3180   	fcall	_TMR0_StartTimer
 11326  01C2                     l7495:	
 11327                           
 11328                           ;main.c: 259:                                     alarm = 2 ;
 11329  01C2  3002               	movlw	2
 11330  01C3  0020               	movlb	0	; select bank0
 11331  01C4  00C6               	movwf	??_main
 11332  01C5  0846               	movf	??_main,w
 11333  01C6  00D5               	movwf	_alarm	;volatile
 11334  01C7  29E4               	goto	l7511
 11335  01C8                     l7497:	
 11336                           
 11337                           ;main.c: 263:                                 if(alarm == 2){
 11338  01C8  3002               	movlw	2
 11339  01C9  0655               	xorwf	_alarm,w	;volatile
 11340  01CA  1D03               	btfss	3,2
 11341  01CB  29CD               	goto	u4471
 11342  01CC  29CE               	goto	u4470
 11343  01CD                     u4471:	
 11344  01CD  29E4               	goto	l7511
 11345  01CE                     u4470:	
 11346  01CE                     l7499:	
 11347                           
 11348                           ;main.c: 264:                                     PWM6_LoadDutyValue(0);
 11349  01CE  3000               	movlw	0
 11350  01CF  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 11351  01D0  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 11352  01D1  318C  2480  3180   	fcall	_PWM6_LoadDutyValue
 11353  01D4                     l7501:	
 11354                           
 11355                           ;main.c: 265:                                     alarm = 0 ;
 11356  01D4  0020               	movlb	0	; select bank0
 11357  01D5  01D5               	clrf	_alarm	;volatile
 11358  01D6  29E4               	goto	l7511
 11359  01D7                     l1307:	
 11360                           ;main.c: 267:                             }
 11361                           
 11362                           
 11363                           ;main.c: 269:                     }
 11364  01D7  29E4               	goto	l7511
 11365  01D8                     l7503:	
 11366  01D8  0356               	decf	_config_mode,w	;volatile
 11367  01D9  1D03               	btfss	3,2
 11368  01DA  29DC               	goto	u4481
 11369  01DB  29DD               	goto	u4480
 11370  01DC                     u4481:	
 11371  01DC  29E4               	goto	l7511
 11372  01DD                     u4480:	
 11373  01DD                     l7505:	
 11374                           
 11375                           ;main.c: 273:                         (PIE0bits.INTE = 0);
 11376  01DD  002E               	movlb	14	; select bank14
 11377  01DE  1016               	bcf	22,0	;volatile
 11378  01DF                     l7507:	
 11379                           
 11380                           ;main.c: 274:                         config_routine();
 11381  01DF  3183  23BA  3180   	fcall	_config_routine
 11382  01E2                     l7509:	
 11383                           
 11384                           ;main.c: 275:                         (PIE0bits.INTE = 1);
 11385  01E2  002E               	movlb	14	; select bank14
 11386  01E3  1416               	bsf	22,0	;volatile
 11387  01E4                     l7511:	
 11388                           
 11389                           ;main.c: 278:                     _delay((unsigned long)((10)*(1000000/4000.0)));
 11390  01E4  3004               	movlw	4
 11391  01E5  0020               	movlb	0	; select bank0
 11392  01E6  00C6               	movwf	??_main
 11393  01E7  303D               	movlw	61
 11394  01E8                     u4607:	
 11395  01E8  0B89               	decfsz	9,f
 11396  01E9  29E8               	goto	u4607
 11397  01EA  0BC6               	decfsz	??_main,f
 11398  01EB  29E8               	goto	u4607
 11399  01EC  3200               	nop2
 11400  01ED                     l7513:	
 11401                           
 11402                           ;main.c: 280:             }while(alarm == 2);
 11403  01ED  3002               	movlw	2
 11404  01EE  0020               	movlb	0	; select bank0
 11405  01EF  0655               	xorwf	_alarm,w	;volatile
 11406  01F0  1903               	btfsc	3,2
 11407  01F1  29F3               	goto	u4491
 11408  01F2  29F4               	goto	u4490
 11409  01F3                     u4491:	
 11410  01F3  28E7               	goto	l7449
 11411  01F4                     u4490:	
 11412  01F4                     l1295:	
 11413                           ;main.c: 282:         }
 11414                           
 11415                           
 11416                           ;main.c: 284:        PIE4bits.TMR1IE = 0;
 11417  01F4  002E               	movlb	14	; select bank14
 11418  01F5  101A               	bcf	26,0	;volatile
 11419  01F6                     l7515:	
 11420                           
 11421                           ;main.c: 285:        t1m = last1m;
 11422  01F6  0020               	movlb	0	; select bank0
 11423  01F7  0858               	movf	_last1m,w	;volatile
 11424  01F8  00C6               	movwf	??_main
 11425  01F9  0846               	movf	??_main,w
 11426  01FA  0021               	movlb	1	; select bank1
 11427  01FB  00E1               	movwf	main@t1m^(0+128)
 11428  01FC                     l7517:	
 11429                           
 11430                           ;main.c: 286:        PIE4bits.TMR1IE = 1;
 11431  01FC  002E               	movlb	14	; select bank14
 11432  01FD  141A               	bsf	26,0	;volatile
 11433  01FE                     l7519:	
 11434                           
 11435                           ;main.c: 288:        if (t1m >= 1) {
 11436  01FE  0021               	movlb	1	; select bank1
 11437  01FF  0861               	movf	main@t1m^(0+128),w
 11438  0200  1903               	btfsc	3,2
 11439  0201  2A03               	goto	u4501
 11440  0202  2A04               	goto	u4500
 11441  0203                     u4501:	
 11442  0203  28CD               	goto	l1294
 11443  0204                     u4500:	
 11444  0204                     l7521:	
 11445                           
 11446                           ;main.c: 289:          save_recovery_params();
 11447  0204  318E  2618  3180   	fcall	_save_recovery_params
 11448  0207  28CD               	goto	l1294
 11449  0208  3180  285B         	ljmp	start
 11450  020A                     __end_of_main:	
 11451                           
 11452                           	psect	text1
 11453  0E18                     __ptext1:	
 11454 ;; *************** function _save_recovery_params *****************
 11455 ;; Defined at:
 11456 ;;		line 729 in file "main.c"
 11457 ;; Parameters:    Size  Location     Type
 11458 ;;		None
 11459 ;; Auto vars:     Size  Location     Type
 11460 ;;  aux1            1   16[BANK0 ] unsigned char 
 11461 ;;  aux             1   15[BANK0 ] unsigned char 
 11462 ;; Return value:  Size  Location     Type
 11463 ;;                  1    wreg      void 
 11464 ;; Registers used:
 11465 ;;		wreg, status,2, status,0, pclath, cstack
 11466 ;; Tracked objects:
 11467 ;;		On entry : 0/0
 11468 ;;		On exit  : 0/0
 11469 ;;		Unchanged: 0/0
 11470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11472 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11473 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11474 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11475 ;;Total ram usage:        3 bytes
 11476 ;; Hardware stack levels used:    1
 11477 ;; Hardware stack levels required when called:    9
 11478 ;; This function calls:
 11479 ;;		_DATAEE_WriteByte
 11480 ;;		_cksum_w
 11481 ;; This function is called by:
 11482 ;;		_main
 11483 ;; This function uses a non-reentrant model
 11484 ;;
 11485                           
 11486                           
 11487                           ;psect for function _save_recovery_params
 11488  0E18                     _save_recovery_params:	
 11489  0E18                     l7259:	
 11490                           ;incstack = 0
 11491                           ; Regs used in _save_recovery_params: [wreg+status,2+status,0+pclath+cstack]
 11492                           
 11493                           
 11494                           ;main.c: 731:     unsigned char aux, aux1;;main.c: 732:     PIE4bits.TMR1IE = 0;
 11495  0E18  002E               	movlb	14	; select bank14
 11496  0E19  101A               	bcf	26,0	;volatile
 11497  0E1A                     l7261:	
 11498                           
 11499                           ;main.c: 733:     last1m = 0;
 11500  0E1A  0020               	movlb	0	; select bank0
 11501  0E1B  01D8               	clrf	_last1m	;volatile
 11502  0E1C                     l7263:	
 11503                           
 11504                           ;main.c: 734:     aux = clkh;
 11505  0E1C  085E               	movf	_clkh,w	;volatile
 11506  0E1D  00AE               	movwf	??_save_recovery_params
 11507  0E1E  082E               	movf	??_save_recovery_params,w
 11508  0E1F  00AF               	movwf	save_recovery_params@aux
 11509  0E20                     l7265:	
 11510                           
 11511                           ;main.c: 735:     aux1 = clkm;
 11512  0E20  085D               	movf	_clkm,w	;volatile
 11513  0E21  00AE               	movwf	??_save_recovery_params
 11514  0E22  082E               	movf	??_save_recovery_params,w
 11515  0E23  00B0               	movwf	save_recovery_params@aux1
 11516  0E24                     l7267:	
 11517                           
 11518                           ;main.c: 736:     PIE4bits.TMR1IE = 1;
 11519  0E24  002E               	movlb	14	; select bank14
 11520  0E25  141A               	bsf	26,0	;volatile
 11521  0E26                     l7269:	
 11522                           
 11523                           ;main.c: 737:     DATAEE_WriteByte(0xF0FF - 10 + 1, aux);
 11524  0E26  30F6               	movlw	246
 11525  0E27  0020               	movlb	0	; select bank0
 11526  0E28  00A9               	movwf	DATAEE_WriteByte@bAdd
 11527  0E29  30F0               	movlw	240
 11528  0E2A  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11529  0E2B  082F               	movf	save_recovery_params@aux,w
 11530  0E2C  00AE               	movwf	??_save_recovery_params
 11531  0E2D  082E               	movf	??_save_recovery_params,w
 11532  0E2E  00AB               	movwf	DATAEE_WriteByte@bData
 11533  0E2F  318D  257F  318E   	fcall	_DATAEE_WriteByte
 11534  0E32                     l7271:	
 11535                           
 11536                           ;main.c: 738:     DATAEE_WriteByte(0xF0FF - 10 + 2, aux1);
 11537  0E32  30F7               	movlw	247
 11538  0E33  0020               	movlb	0	; select bank0
 11539  0E34  00A9               	movwf	DATAEE_WriteByte@bAdd
 11540  0E35  30F0               	movlw	240
 11541  0E36  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11542  0E37  0830               	movf	save_recovery_params@aux1,w
 11543  0E38  00AE               	movwf	??_save_recovery_params
 11544  0E39  082E               	movf	??_save_recovery_params,w
 11545  0E3A  00AB               	movwf	DATAEE_WriteByte@bData
 11546  0E3B  318D  257F  318E   	fcall	_DATAEE_WriteByte
 11547  0E3E                     l7273:	
 11548                           
 11549                           ;main.c: 739:     cksum_w();
 11550  0E3E  318B  2364  318E   	fcall	_cksum_w
 11551  0E41                     l1450:	
 11552  0E41  0008               	return
 11553  0E42                     __end_of_save_recovery_params:	
 11554                           
 11555                           	psect	text2
 11556  0E9B                     __ptext2:	
 11557 ;; *************** function _ring_buffer *****************
 11558 ;; Defined at:
 11559 ;;		line 744 in file "main.c"
 11560 ;; Parameters:    Size  Location     Type
 11561 ;;  _ring_byte      1    wreg     PTR unsigned char 
 11562 ;;		 -> ring_byte(5), 
 11563 ;;  clock_h         1    3[BANK0 ] unsigned char 
 11564 ;;  clock_m         1    4[BANK0 ] unsigned char 
 11565 ;;  clock_s         1    5[BANK0 ] unsigned char 
 11566 ;;  tem             1    6[BANK0 ] unsigned char 
 11567 ;;  lum             1    7[BANK0 ] unsigned char 
 11568 ;; Auto vars:     Size  Location     Type
 11569 ;;  _ring_byte      1    9[BANK0 ] PTR unsigned char 
 11570 ;;		 -> ring_byte(5), 
 11571 ;; Return value:  Size  Location     Type
 11572 ;;                  1    wreg      void 
 11573 ;; Registers used:
 11574 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11575 ;; Tracked objects:
 11576 ;;		On entry : 0/0
 11577 ;;		On exit  : 0/0
 11578 ;;		Unchanged: 0/0
 11579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11580 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11581 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11582 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11583 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11584 ;;Total ram usage:        7 bytes
 11585 ;; Hardware stack levels used:    1
 11586 ;; Hardware stack levels required when called:    6
 11587 ;; This function calls:
 11588 ;;		Nothing
 11589 ;; This function is called by:
 11590 ;;		_main
 11591 ;; This function uses a non-reentrant model
 11592 ;;
 11593                           
 11594                           
 11595                           ;psect for function _ring_buffer
 11596  0E9B                     _ring_buffer:	
 11597                           
 11598                           ;incstack = 0
 11599                           ; Regs used in _ring_buffer: [wreg+fsr1l+fsr1h+status,2+status,0]
 11600                           ;ring_buffer@_ring_byte stored from wreg
 11601  0E9B  0020               	movlb	0	; select bank0
 11602  0E9C  00A9               	movwf	ring_buffer@_ring_byte
 11603  0E9D                     l7171:	
 11604                           
 11605                           ;main.c: 746:     PIE4bits.TMR1IE = 0;
 11606  0E9D  002E               	movlb	14	; select bank14
 11607  0E9E  101A               	bcf	26,0	;volatile
 11608  0E9F                     l7173:	
 11609                           
 11610                           ;main.c: 747:     _ring_byte[0] = clock_h;
 11611  0E9F  0020               	movlb	0	; select bank0
 11612  0EA0  0823               	movf	ring_buffer@clock_h,w
 11613  0EA1  00A8               	movwf	??_ring_buffer
 11614  0EA2  0829               	movf	ring_buffer@_ring_byte,w
 11615  0EA3  0086               	movwf	6
 11616  0EA4  0187               	clrf	7
 11617  0EA5  0828               	movf	??_ring_buffer,w
 11618  0EA6  0081               	movwf	1
 11619                           
 11620                           ;main.c: 748:     _ring_byte[1] = clock_m;
 11621  0EA7  0824               	movf	ring_buffer@clock_m,w
 11622  0EA8  00A8               	movwf	??_ring_buffer
 11623  0EA9  0A29               	incf	ring_buffer@_ring_byte,w
 11624  0EAA  0086               	movwf	6
 11625  0EAB  0187               	clrf	7
 11626  0EAC  0828               	movf	??_ring_buffer,w
 11627  0EAD  0081               	movwf	1
 11628  0EAE                     l7175:	
 11629                           
 11630                           ;main.c: 749:     _ring_byte[2] = clock_s;
 11631  0EAE  0825               	movf	ring_buffer@clock_s,w
 11632  0EAF  00A8               	movwf	??_ring_buffer
 11633  0EB0  0829               	movf	ring_buffer@_ring_byte,w
 11634  0EB1  3E02               	addlw	2
 11635  0EB2  0086               	movwf	6
 11636  0EB3  0187               	clrf	7
 11637  0EB4  0828               	movf	??_ring_buffer,w
 11638  0EB5  0081               	movwf	1
 11639  0EB6                     l7177:	
 11640                           
 11641                           ;main.c: 750:     PIE4bits.TMR1IE = 1;
 11642  0EB6  002E               	movlb	14	; select bank14
 11643  0EB7  141A               	bsf	26,0	;volatile
 11644  0EB8                     l7179:	
 11645                           
 11646                           ;main.c: 751:     _ring_byte[3] = tem;
 11647  0EB8  0020               	movlb	0	; select bank0
 11648  0EB9  0826               	movf	ring_buffer@tem,w
 11649  0EBA  00A8               	movwf	??_ring_buffer
 11650  0EBB  0829               	movf	ring_buffer@_ring_byte,w
 11651  0EBC  3E03               	addlw	3
 11652  0EBD  0086               	movwf	6
 11653  0EBE  0187               	clrf	7
 11654  0EBF  0828               	movf	??_ring_buffer,w
 11655  0EC0  0081               	movwf	1
 11656  0EC1                     l7181:	
 11657                           
 11658                           ;main.c: 752:     _ring_byte[4] = lum;
 11659  0EC1  0827               	movf	ring_buffer@lum,w
 11660  0EC2  00A8               	movwf	??_ring_buffer
 11661  0EC3  0829               	movf	ring_buffer@_ring_byte,w
 11662  0EC4  3E04               	addlw	4
 11663  0EC5  0086               	movwf	6
 11664  0EC6  0187               	clrf	7
 11665  0EC7  0828               	movf	??_ring_buffer,w
 11666  0EC8  0081               	movwf	1
 11667  0EC9                     l1453:	
 11668  0EC9  0008               	return
 11669  0ECA                     __end_of_ring_buffer:	
 11670                           
 11671                           	psect	text3
 11672  0322                     __ptext3:	
 11673 ;; *************** function _recoverData *****************
 11674 ;; Defined at:
 11675 ;;		line 11 in file "eeprom_rw.c"
 11676 ;; Parameters:    Size  Location     Type
 11677 ;;		None
 11678 ;; Auto vars:     Size  Location     Type
 11679 ;;		None
 11680 ;; Return value:  Size  Location     Type
 11681 ;;                  1    wreg      void 
 11682 ;; Registers used:
 11683 ;;		wreg, status,2, status,0, pclath, cstack
 11684 ;; Tracked objects:
 11685 ;;		On entry : 0/0
 11686 ;;		On exit  : 0/0
 11687 ;;		Unchanged: 0/0
 11688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11691 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11692 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11693 ;;Total ram usage:        1 bytes
 11694 ;; Hardware stack levels used:    1
 11695 ;; Hardware stack levels required when called:    9
 11696 ;; This function calls:
 11697 ;;		_DATAEE_ReadByte
 11698 ;;		_DATAEE_WriteByte
 11699 ;;		_cksum
 11700 ;;		_cksum_w
 11701 ;;		_reset_recv
 11702 ;; This function is called by:
 11703 ;;		_main
 11704 ;; This function uses a non-reentrant model
 11705 ;;
 11706                           
 11707                           
 11708                           ;psect for function _recoverData
 11709  0322                     _recoverData:	
 11710  0322                     l7119:	
 11711                           ;incstack = 0
 11712                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 11713                           
 11714                           
 11715                           ;eeprom_rw.c: 13:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 11716  0322  30F5               	movlw	245
 11717  0323  0020               	movlb	0	; select bank0
 11718  0324  00A3               	movwf	DATAEE_ReadByte@bAdd
 11719  0325  30F0               	movlw	240
 11720  0326  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11721  0327  318B  2345  3183   	fcall	_DATAEE_ReadByte
 11722  032A  3AAB               	xorlw	171
 11723  032B  1D03               	skipz
 11724  032C  2B2E               	goto	u4051
 11725  032D  2B2F               	goto	u4050
 11726  032E                     u4051:	
 11727  032E  2B83               	goto	l7125
 11728  032F                     u4050:	
 11729  032F                     l7121:	
 11730                           
 11731                           ;eeprom_rw.c: 14:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 11732  032F  3187  27DF  3183   	fcall	_cksum
 11733  0332  0020               	movlb	0	; select bank0
 11734  0333  00AF               	movwf	??_recoverData
 11735  0334  30FF               	movlw	255
 11736  0335  00A3               	movwf	DATAEE_ReadByte@bAdd
 11737  0336  30F0               	movlw	240
 11738  0337  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11739  0338  318B  2345  3183   	fcall	_DATAEE_ReadByte
 11740  033B  0020               	movlb	0	; select bank0
 11741  033C  062F               	xorwf	??_recoverData,w
 11742  033D  1D03               	skipz
 11743  033E  2B40               	goto	u4061
 11744  033F  2B41               	goto	u4060
 11745  0340                     u4061:	
 11746  0340  2B83               	goto	l7125
 11747  0341                     u4060:	
 11748  0341                     l7123:	
 11749                           
 11750                           ;eeprom_rw.c: 15:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 11751  0341  30F6               	movlw	246
 11752  0342  00A3               	movwf	DATAEE_ReadByte@bAdd
 11753  0343  30F0               	movlw	240
 11754  0344  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11755  0345  318B  2345  3183   	fcall	_DATAEE_ReadByte
 11756  0348  0020               	movlb	0	; select bank0
 11757  0349  00AF               	movwf	??_recoverData
 11758  034A  082F               	movf	??_recoverData,w
 11759  034B  00DE               	movwf	_clkh	;volatile
 11760                           
 11761                           ;eeprom_rw.c: 16:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 11762  034C  30F7               	movlw	247
 11763  034D  00A3               	movwf	DATAEE_ReadByte@bAdd
 11764  034E  30F0               	movlw	240
 11765  034F  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11766  0350  318B  2345  3183   	fcall	_DATAEE_ReadByte
 11767  0353  0020               	movlb	0	; select bank0
 11768  0354  00AF               	movwf	??_recoverData
 11769  0355  082F               	movf	??_recoverData,w
 11770  0356  00DD               	movwf	_clkm	;volatile
 11771                           
 11772                           ;eeprom_rw.c: 17:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 11773  0357  30F8               	movlw	248
 11774  0358  00A3               	movwf	DATAEE_ReadByte@bAdd
 11775  0359  30F0               	movlw	240
 11776  035A  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11777  035B  318B  2345  3183   	fcall	_DATAEE_ReadByte
 11778  035E  0020               	movlb	0	; select bank0
 11779  035F  00AF               	movwf	??_recoverData
 11780  0360  082F               	movf	??_recoverData,w
 11781  0361  00E9               	movwf	_nreg
 11782                           
 11783                           ;eeprom_rw.c: 18:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 11784  0362  30F9               	movlw	249
 11785  0363  00A3               	movwf	DATAEE_ReadByte@bAdd
 11786  0364  30F0               	movlw	240
 11787  0365  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11788  0366  318B  2345  3183   	fcall	_DATAEE_ReadByte
 11789  0369  0020               	movlb	0	; select bank0
 11790  036A  00AF               	movwf	??_recoverData
 11791  036B  082F               	movf	??_recoverData,w
 11792  036C  00DF               	movwf	_nreg_pt
 11793                           
 11794                           ;eeprom_rw.c: 19:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 5);
 11795  036D  30FA               	movlw	250
 11796  036E  00A3               	movwf	DATAEE_ReadByte@bAdd
 11797  036F  30F0               	movlw	240
 11798  0370  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11799  0371  318B  2345  3183   	fcall	_DATAEE_ReadByte
 11800  0374  0020               	movlb	0	; select bank0
 11801  0375  00AF               	movwf	??_recoverData
 11802  0376  082F               	movf	??_recoverData,w
 11803  0377  00E8               	movwf	_pmon
 11804                           
 11805                           ;eeprom_rw.c: 20:             tala = DATAEE_ReadByte(0xF0FF - 10 + 6);
 11806  0378  30FB               	movlw	251
 11807  0379  00A3               	movwf	DATAEE_ReadByte@bAdd
 11808  037A  30F0               	movlw	240
 11809  037B  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11810  037C  318B  2345  3183   	fcall	_DATAEE_ReadByte
 11811  037F  0020               	movlb	0	; select bank0
 11812  0380  00AF               	movwf	??_recoverData
 11813  0381  082F               	movf	??_recoverData,w
 11814  0382  00E7               	movwf	_tala
 11815  0383                     l7125:	
 11816                           
 11817                           ;eeprom_rw.c: 24:     reset_recv();
 11818  0383  318D  2504  3183   	fcall	_reset_recv
 11819  0386                     l7127:	
 11820                           
 11821                           ;eeprom_rw.c: 27:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 11822  0386  30F5               	movlw	245
 11823  0387  0020               	movlb	0	; select bank0
 11824  0388  00A9               	movwf	DATAEE_WriteByte@bAdd
 11825  0389  30F0               	movlw	240
 11826  038A  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11827  038B  30AB               	movlw	171
 11828  038C  00AF               	movwf	??_recoverData
 11829  038D  082F               	movf	??_recoverData,w
 11830  038E  00AB               	movwf	DATAEE_WriteByte@bData
 11831  038F  318D  257F  3183   	fcall	_DATAEE_WriteByte
 11832  0392                     l7129:	
 11833                           
 11834                           ;eeprom_rw.c: 28:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 11835  0392  30F8               	movlw	248
 11836  0393  0020               	movlb	0	; select bank0
 11837  0394  00A9               	movwf	DATAEE_WriteByte@bAdd
 11838  0395  30F0               	movlw	240
 11839  0396  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11840  0397  0869               	movf	_nreg,w
 11841  0398  00AF               	movwf	??_recoverData
 11842  0399  082F               	movf	??_recoverData,w
 11843  039A  00AB               	movwf	DATAEE_WriteByte@bData
 11844  039B  318D  257F  3183   	fcall	_DATAEE_WriteByte
 11845  039E                     l7131:	
 11846                           
 11847                           ;eeprom_rw.c: 29:     DATAEE_WriteByte(0xF0FF - 10 + 5, pmon);
 11848  039E  30FA               	movlw	250
 11849  039F  0020               	movlb	0	; select bank0
 11850  03A0  00A9               	movwf	DATAEE_WriteByte@bAdd
 11851  03A1  30F0               	movlw	240
 11852  03A2  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11853  03A3  0868               	movf	_pmon,w
 11854  03A4  00AF               	movwf	??_recoverData
 11855  03A5  082F               	movf	??_recoverData,w
 11856  03A6  00AB               	movwf	DATAEE_WriteByte@bData
 11857  03A7  318D  257F  3183   	fcall	_DATAEE_WriteByte
 11858  03AA                     l7133:	
 11859                           
 11860                           ;eeprom_rw.c: 30:     DATAEE_WriteByte(0xF0FF - 10 + 6, tala);
 11861  03AA  30FB               	movlw	251
 11862  03AB  0020               	movlb	0	; select bank0
 11863  03AC  00A9               	movwf	DATAEE_WriteByte@bAdd
 11864  03AD  30F0               	movlw	240
 11865  03AE  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11866  03AF  0867               	movf	_tala,w
 11867  03B0  00AF               	movwf	??_recoverData
 11868  03B1  082F               	movf	??_recoverData,w
 11869  03B2  00AB               	movwf	DATAEE_WriteByte@bData
 11870  03B3  318D  257F  3183   	fcall	_DATAEE_WriteByte
 11871  03B6                     l7135:	
 11872                           
 11873                           ;eeprom_rw.c: 31:     cksum_w();
 11874  03B6  318B  2364  3183   	fcall	_cksum_w
 11875  03B9                     l1629:	
 11876  03B9  0008               	return
 11877  03BA                     __end_of_recoverData:	
 11878                           
 11879                           	psect	text4
 11880  0D04                     __ptext4:	
 11881 ;; *************** function _reset_recv *****************
 11882 ;; Defined at:
 11883 ;;		line 75 in file "eeprom_rw.c"
 11884 ;; Parameters:    Size  Location     Type
 11885 ;;		None
 11886 ;; Auto vars:     Size  Location     Type
 11887 ;;  i               2   13[BANK0 ] unsigned int 
 11888 ;; Return value:  Size  Location     Type
 11889 ;;                  1    wreg      void 
 11890 ;; Registers used:
 11891 ;;		wreg, status,2, status,0, pclath, cstack
 11892 ;; Tracked objects:
 11893 ;;		On entry : 0/0
 11894 ;;		On exit  : 0/0
 11895 ;;		Unchanged: 0/0
 11896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11898 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11900 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11901 ;;Total ram usage:        2 bytes
 11902 ;; Hardware stack levels used:    1
 11903 ;; Hardware stack levels required when called:    7
 11904 ;; This function calls:
 11905 ;;		_DATAEE_WriteByte
 11906 ;; This function is called by:
 11907 ;;		_recoverData
 11908 ;; This function uses a non-reentrant model
 11909 ;;
 11910                           
 11911                           
 11912                           ;psect for function _reset_recv
 11913  0D04                     _reset_recv:	
 11914  0D04                     l7041:	
 11915                           ;incstack = 0
 11916                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 11917                           
 11918                           
 11919                           ;eeprom_rw.c: 77:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 11920  0D04  30F5               	movlw	245
 11921  0D05  0020               	movlb	0	; select bank0
 11922  0D06  00AD               	movwf	reset_recv@i
 11923  0D07  30F0               	movlw	240
 11924  0D08  00AE               	movwf	reset_recv@i+1
 11925  0D09                     l7045:	
 11926                           
 11927                           ;eeprom_rw.c: 78:         DATAEE_WriteByte(i, 0);
 11928  0D09  082E               	movf	reset_recv@i+1,w
 11929  0D0A  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11930  0D0B  082D               	movf	reset_recv@i,w
 11931  0D0C  00A9               	movwf	DATAEE_WriteByte@bAdd
 11932  0D0D  01AB               	clrf	DATAEE_WriteByte@bData
 11933  0D0E  318D  257F  318D   	fcall	_DATAEE_WriteByte
 11934  0D11                     l7047:	
 11935  0D11  3001               	movlw	1
 11936  0D12  0020               	movlb	0	; select bank0
 11937  0D13  07AD               	addwf	reset_recv@i,f
 11938  0D14  3000               	movlw	0
 11939  0D15  3DAE               	addwfc	reset_recv@i+1,f
 11940  0D16                     l7049:	
 11941  0D16  30F1               	movlw	241
 11942  0D17  022E               	subwf	reset_recv@i+1,w
 11943  0D18  3000               	movlw	0
 11944  0D19  1903               	skipnz
 11945  0D1A  022D               	subwf	reset_recv@i,w
 11946  0D1B  1C03               	skipc
 11947  0D1C  2D1E               	goto	u4021
 11948  0D1D  2D1F               	goto	u4020
 11949  0D1E                     u4021:	
 11950  0D1E  2D09               	goto	l7045
 11951  0D1F                     u4020:	
 11952  0D1F                     l1656:	
 11953  0D1F  0008               	return
 11954  0D20                     __end_of_reset_recv:	
 11955                           
 11956                           	psect	text5
 11957  0B64                     __ptext5:	
 11958 ;; *************** function _cksum_w *****************
 11959 ;; Defined at:
 11960 ;;		line 61 in file "eeprom_rw.c"
 11961 ;; Parameters:    Size  Location     Type
 11962 ;;		None
 11963 ;; Auto vars:     Size  Location     Type
 11964 ;;		None
 11965 ;; Return value:  Size  Location     Type
 11966 ;;                  1    wreg      void 
 11967 ;; Registers used:
 11968 ;;		wreg, status,2, status,0, pclath, cstack
 11969 ;; Tracked objects:
 11970 ;;		On entry : 0/0
 11971 ;;		On exit  : 0/0
 11972 ;;		Unchanged: 0/0
 11973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11976 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11977 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11978 ;;Total ram usage:        1 bytes
 11979 ;; Hardware stack levels used:    1
 11980 ;; Hardware stack levels required when called:    8
 11981 ;; This function calls:
 11982 ;;		_DATAEE_WriteByte
 11983 ;;		_cksum
 11984 ;; This function is called by:
 11985 ;;		_main
 11986 ;;		_save_recovery_params
 11987 ;;		_recoverData
 11988 ;; This function uses a non-reentrant model
 11989 ;;
 11990                           
 11991                           
 11992                           ;psect for function _cksum_w
 11993  0B64                     _cksum_w:	
 11994  0B64                     l7001:	
 11995                           ;incstack = 0
 11996                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 11997                           
 11998                           
 11999                           ;eeprom_rw.c: 63:     DATAEE_WriteByte(0xF0FF, cksum());
 12000  0B64  30FF               	movlw	255
 12001  0B65  0020               	movlb	0	; select bank0
 12002  0B66  00A9               	movwf	DATAEE_WriteByte@bAdd
 12003  0B67  30F0               	movlw	240
 12004  0B68  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12005  0B69  3187  27DF  318B   	fcall	_cksum
 12006  0B6C  0020               	movlb	0	; select bank0
 12007  0B6D  00AD               	movwf	??_cksum_w
 12008  0B6E  082D               	movf	??_cksum_w,w
 12009  0B6F  00AB               	movwf	DATAEE_WriteByte@bData
 12010  0B70  318D  257F  318B   	fcall	_DATAEE_WriteByte
 12011  0B73                     l1646:	
 12012  0B73  0008               	return
 12013  0B74                     __end_of_cksum_w:	
 12014                           
 12015                           	psect	text6
 12016  07DF                     __ptext6:	
 12017 ;; *************** function _cksum *****************
 12018 ;; Defined at:
 12019 ;;		line 66 in file "eeprom_rw.c"
 12020 ;; Parameters:    Size  Location     Type
 12021 ;;		None
 12022 ;; Auto vars:     Size  Location     Type
 12023 ;;  i               2    7[BANK0 ] unsigned int 
 12024 ;;  res             1    6[BANK0 ] unsigned char 
 12025 ;; Return value:  Size  Location     Type
 12026 ;;                  1    wreg      unsigned char 
 12027 ;; Registers used:
 12028 ;;		wreg, status,2, status,0, pclath, cstack
 12029 ;; Tracked objects:
 12030 ;;		On entry : 0/0
 12031 ;;		On exit  : 0/0
 12032 ;;		Unchanged: 0/0
 12033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12035 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12036 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12037 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12038 ;;Total ram usage:        4 bytes
 12039 ;; Hardware stack levels used:    1
 12040 ;; Hardware stack levels required when called:    7
 12041 ;; This function calls:
 12042 ;;		_DATAEE_ReadByte
 12043 ;; This function is called by:
 12044 ;;		_recoverData
 12045 ;;		_cksum_w
 12046 ;; This function uses a non-reentrant model
 12047 ;;
 12048                           
 12049                           
 12050                           ;psect for function _cksum
 12051  07DF                     _cksum:	
 12052  07DF                     l6845:	
 12053                           ;incstack = 0
 12054                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 12055                           
 12056                           
 12057                           ;eeprom_rw.c: 68:     unsigned char res = 0;
 12058  07DF  0020               	movlb	0	; select bank0
 12059  07E0  01A6               	clrf	cksum@res
 12060  07E1                     l6847:	
 12061                           
 12062                           ;eeprom_rw.c: 69:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 12063  07E1  30F5               	movlw	245
 12064  07E2  00A7               	movwf	cksum@i
 12065  07E3  30F0               	movlw	240
 12066  07E4  00A8               	movwf	cksum@i+1
 12067  07E5                     l6853:	
 12068                           
 12069                           ;eeprom_rw.c: 70:         res += DATAEE_ReadByte(i);
 12070  07E5  0828               	movf	cksum@i+1,w
 12071  07E6  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12072  07E7  0827               	movf	cksum@i,w
 12073  07E8  00A3               	movwf	DATAEE_ReadByte@bAdd
 12074  07E9  318B  2345  3187   	fcall	_DATAEE_ReadByte
 12075  07EC  0020               	movlb	0	; select bank0
 12076  07ED  00A5               	movwf	??_cksum
 12077  07EE  0825               	movf	??_cksum,w
 12078  07EF  07A6               	addwf	cksum@res,f
 12079  07F0                     l6855:	
 12080                           
 12081                           ;eeprom_rw.c: 71:     }
 12082  07F0  3001               	movlw	1
 12083  07F1  07A7               	addwf	cksum@i,f
 12084  07F2  3000               	movlw	0
 12085  07F3  3DA8               	addwfc	cksum@i+1,f
 12086  07F4                     l6857:	
 12087  07F4  30F0               	movlw	240
 12088  07F5  0228               	subwf	cksum@i+1,w
 12089  07F6  30FF               	movlw	255
 12090  07F7  1903               	skipnz
 12091  07F8  0227               	subwf	cksum@i,w
 12092  07F9  1C03               	skipc
 12093  07FA  2FFC               	goto	u3961
 12094  07FB  2FFD               	goto	u3960
 12095  07FC                     u3961:	
 12096  07FC  2FE5               	goto	l6853
 12097  07FD                     u3960:	
 12098  07FD                     l6859:	
 12099                           
 12100                           ;eeprom_rw.c: 72:     return res;
 12101  07FD  0826               	movf	cksum@res,w
 12102  07FE                     l1651:	
 12103  07FE  0008               	return
 12104  07FF                     __end_of_cksum:	
 12105                           
 12106                           	psect	text7
 12107  0F31                     __ptext7:	
 12108 ;; *************** function _read_ring *****************
 12109 ;; Defined at:
 12110 ;;		line 43 in file "eeprom_rw.c"
 12111 ;; Parameters:    Size  Location     Type
 12112 ;;  nreg_pt         1    wreg     unsigned char 
 12113 ;;  nreg            1    7[BANK0 ] unsigned char 
 12114 ;;  nreg_init       1    8[BANK0 ] unsigned char 
 12115 ;;  index           1    9[BANK0 ] unsigned char 
 12116 ;;  subindex        1   10[BANK0 ] unsigned char 
 12117 ;; Auto vars:     Size  Location     Type
 12118 ;;  nreg_pt         1   14[BANK0 ] unsigned char 
 12119 ;;  absindex        1   15[BANK0 ] unsigned char 
 12120 ;;  i               1   13[BANK0 ] unsigned char 
 12121 ;; Return value:  Size  Location     Type
 12122 ;;                  1    wreg      unsigned char 
 12123 ;; Registers used:
 12124 ;;		wreg, status,2, status,0, pclath, cstack
 12125 ;; Tracked objects:
 12126 ;;		On entry : 0/0
 12127 ;;		On exit  : 0/0
 12128 ;;		Unchanged: 0/0
 12129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12130 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12131 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12132 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12133 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12134 ;;Total ram usage:        9 bytes
 12135 ;; Hardware stack levels used:    1
 12136 ;; Hardware stack levels required when called:    7
 12137 ;; This function calls:
 12138 ;;		_DATAEE_ReadByte
 12139 ;;		___bmul
 12140 ;; This function is called by:
 12141 ;;		_main
 12142 ;; This function uses a non-reentrant model
 12143 ;;
 12144                           
 12145                           
 12146                           ;psect for function _read_ring
 12147  0F31                     _read_ring:	
 12148                           
 12149                           ;incstack = 0
 12150                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
 12151                           ;read_ring@nreg_pt stored from wreg
 12152  0F31  0020               	movlb	0	; select bank0
 12153  0F32  00AE               	movwf	read_ring@nreg_pt
 12154  0F33                     l7149:	
 12155  0F33                     l7151:	
 12156                           
 12157                           ;eeprom_rw.c: 48:     if(index <= nreg && nreg_init) {
 12158  0F33  0829               	movf	read_ring@index,w
 12159  0F34  0227               	subwf	read_ring@nreg,w
 12160  0F35  1C03               	skipc
 12161  0F36  2F38               	goto	u4081
 12162  0F37  2F39               	goto	u4080
 12163  0F38                     u4081:	
 12164  0F38  2F63               	goto	l7163
 12165  0F39                     u4080:	
 12166  0F39                     l7153:	
 12167  0F39  0828               	movf	read_ring@nreg_init,w
 12168  0F3A  1903               	btfsc	3,2
 12169  0F3B  2F3D               	goto	u4091
 12170  0F3C  2F3E               	goto	u4090
 12171  0F3D                     u4091:	
 12172  0F3D  2F63               	goto	l7163
 12173  0F3E                     u4090:	
 12174  0F3E                     l7155:	
 12175                           
 12176                           ;eeprom_rw.c: 49:         absindex = 5 * index + subindex;
 12177  0F3E  3005               	movlw	5
 12178  0F3F  00AB               	movwf	??_read_ring
 12179  0F40  082B               	movf	??_read_ring,w
 12180  0F41  00A3               	movwf	___bmul@multiplicand
 12181  0F42  0829               	movf	read_ring@index,w
 12182  0F43  318C  240A  318F   	fcall	___bmul
 12183  0F46  0020               	movlb	0	; select bank0
 12184  0F47  072A               	addwf	read_ring@subindex,w
 12185  0F48  00AC               	movwf	??_read_ring+1
 12186  0F49  082C               	movf	??_read_ring+1,w
 12187  0F4A  00AF               	movwf	read_ring@absindex
 12188  0F4B                     l7157:	
 12189                           
 12190                           ;eeprom_rw.c: 50:         if(absindex <= nreg_pt)
 12191  0F4B  082F               	movf	read_ring@absindex,w
 12192  0F4C  022E               	subwf	read_ring@nreg_pt,w
 12193  0F4D  1C03               	skipc
 12194  0F4E  2F50               	goto	u4101
 12195  0F4F  2F51               	goto	u4100
 12196  0F50                     u4101:	
 12197  0F50  2F58               	goto	l7161
 12198  0F51                     u4100:	
 12199  0F51                     l7159:	
 12200                           
 12201                           ;eeprom_rw.c: 51:             i = nreg_pt - 5 + absindex;
 12202  0F51  082E               	movf	read_ring@nreg_pt,w
 12203  0F52  072F               	addwf	read_ring@absindex,w
 12204  0F53  3EFB               	addlw	251
 12205  0F54  00AB               	movwf	??_read_ring
 12206  0F55  082B               	movf	??_read_ring,w
 12207  0F56  00AD               	movwf	read_ring@i
 12208  0F57  2F65               	goto	l7167
 12209  0F58                     l7161:	
 12210                           
 12211                           ;eeprom_rw.c: 53:             i = nreg - (nreg_pt - 5 + absindex);
 12212  0F58  032E               	decf	read_ring@nreg_pt,w
 12213  0F59  3AFF               	xorlw	255
 12214  0F5A  00AB               	movwf	??_read_ring
 12215  0F5B  082F               	movf	read_ring@absindex,w
 12216  0F5C  022B               	subwf	??_read_ring,w
 12217  0F5D  0727               	addwf	read_ring@nreg,w
 12218  0F5E  3E05               	addlw	5
 12219  0F5F  00AC               	movwf	??_read_ring+1
 12220  0F60  082C               	movf	??_read_ring+1,w
 12221  0F61  00AD               	movwf	read_ring@i
 12222  0F62  2F65               	goto	l7167
 12223  0F63                     l7163:	
 12224                           
 12225                           ;eeprom_rw.c: 56:         return 0;
 12226  0F63  3000               	movlw	0
 12227  0F64  2F6F               	goto	l1643
 12228  0F65                     l7167:	
 12229                           
 12230                           ;eeprom_rw.c: 58:     return DATAEE_ReadByte(0xF000 + i);
 12231  0F65  082D               	movf	read_ring@i,w
 12232  0F66  3E00               	addlw	0
 12233  0F67  00A3               	movwf	DATAEE_ReadByte@bAdd
 12234  0F68  30F0               	movlw	240
 12235  0F69  1803               	skipnc
 12236  0F6A  30F1               	movlw	241
 12237  0F6B  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12238  0F6C  318B  2345  318F   	fcall	_DATAEE_ReadByte
 12239  0F6F                     l1643:	
 12240  0F6F  0008               	return
 12241  0F70                     __end_of_read_ring:	
 12242                           
 12243                           	psect	text8
 12244  0B45                     __ptext8:	
 12245 ;; *************** function _DATAEE_ReadByte *****************
 12246 ;; Defined at:
 12247 ;;		line 202 in file "mcc_generated_files/memory.c"
 12248 ;; Parameters:    Size  Location     Type
 12249 ;;  bAdd            2    3[BANK0 ] unsigned short 
 12250 ;; Auto vars:     Size  Location     Type
 12251 ;;		None
 12252 ;; Return value:  Size  Location     Type
 12253 ;;                  1    wreg      unsigned char 
 12254 ;; Registers used:
 12255 ;;		wreg, status,2
 12256 ;; Tracked objects:
 12257 ;;		On entry : 0/0
 12258 ;;		On exit  : 0/0
 12259 ;;		Unchanged: 0/0
 12260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12261 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12264 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12265 ;;Total ram usage:        2 bytes
 12266 ;; Hardware stack levels used:    1
 12267 ;; Hardware stack levels required when called:    6
 12268 ;; This function calls:
 12269 ;;		Nothing
 12270 ;; This function is called by:
 12271 ;;		_recoverData
 12272 ;;		_read_ring
 12273 ;;		_cksum
 12274 ;; This function uses a non-reentrant model
 12275 ;;
 12276                           
 12277                           
 12278                           ;psect for function _DATAEE_ReadByte
 12279  0B45                     _DATAEE_ReadByte:	
 12280  0B45                     l6581:	
 12281                           ;incstack = 0
 12282                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 12283                           
 12284                           
 12285                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 12286  0B45  0020               	movlb	0	; select bank0
 12287  0B46  0824               	movf	DATAEE_ReadByte@bAdd+1,w
 12288  0B47  0030               	movlb	16	; select bank16
 12289  0B48  009B               	movwf	27	;volatile
 12290  0B49                     l6583:	
 12291                           
 12292                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 12293  0B49  0020               	movlb	0	; select bank0
 12294  0B4A  0823               	movf	DATAEE_ReadByte@bAdd,w
 12295  0B4B  0030               	movlb	16	; select bank16
 12296  0B4C  009A               	movwf	26	;volatile
 12297  0B4D                     l6585:	
 12298                           
 12299                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 12300  0B4D  171E               	bsf	30,6	;volsfr
 12301  0B4E                     l6587:	
 12302                           
 12303                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 12304  0B4E  141E               	bsf	30,0	;volsfr
 12305  0B4F                     l6589:	
 12306                           
 12307                           ;mcc_generated_files/memory.c: 208:     __nop();
 12308  0B4F  0000               	nop
 12309  0B50                     l6591:	
 12310                           
 12311                           ;mcc_generated_files/memory.c: 209:     __nop();
 12312  0B50  0000               	nop
 12313  0B51                     l6593:	
 12314                           
 12315                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 12316  0B51  0030               	movlb	16	; select bank16
 12317  0B52  081C               	movf	28,w	;volatile
 12318  0B53                     l1011:	
 12319  0B53  0008               	return
 12320  0B54                     __end_of_DATAEE_ReadByte:	
 12321                           
 12322                           	psect	text9
 12323  0F70                     __ptext9:	
 12324 ;; *************** function _push_ring *****************
 12325 ;; Defined at:
 12326 ;;		line 34 in file "eeprom_rw.c"
 12327 ;; Parameters:    Size  Location     Type
 12328 ;;  nreg_pt         1    wreg     PTR unsigned char 
 12329 ;;		 -> nreg_pt(1), 
 12330 ;;  nreg            1   13[BANK0 ] unsigned char 
 12331 ;;  nreg_init       1   14[BANK0 ] PTR unsigned char 
 12332 ;;		 -> nreg_init(1), 
 12333 ;;  ring_byte       1   15[BANK0 ] PTR unsigned char 
 12334 ;;		 -> ring_byte(5), 
 12335 ;; Auto vars:     Size  Location     Type
 12336 ;;  nreg_pt         1   19[BANK0 ] PTR unsigned char 
 12337 ;;		 -> nreg_pt(1), 
 12338 ;;  i               1   18[BANK0 ] unsigned char 
 12339 ;; Return value:  Size  Location     Type
 12340 ;;                  1    wreg      void 
 12341 ;; Registers used:
 12342 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12343 ;; Tracked objects:
 12344 ;;		On entry : 0/0
 12345 ;;		On exit  : 0/0
 12346 ;;		Unchanged: 0/0
 12347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12348 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12349 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12350 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12351 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12352 ;;Total ram usage:        7 bytes
 12353 ;; Hardware stack levels used:    1
 12354 ;; Hardware stack levels required when called:    7
 12355 ;; This function calls:
 12356 ;;		_DATAEE_WriteByte
 12357 ;; This function is called by:
 12358 ;;		_main
 12359 ;; This function uses a non-reentrant model
 12360 ;;
 12361                           
 12362                           
 12363                           ;psect for function _push_ring
 12364  0F70                     _push_ring:	
 12365                           
 12366                           ;incstack = 0
 12367                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12368                           ;push_ring@nreg_pt stored from wreg
 12369  0F70  0020               	movlb	0	; select bank0
 12370  0F71  00B3               	movwf	push_ring@nreg_pt
 12371  0F72                     l7183:	
 12372                           
 12373                           ;eeprom_rw.c: 34: void push_ring(unsigned char* nreg_pt, unsigned char nreg, unsigned ch
      +                          ar* nreg_init, unsigned char* ring_byte);eeprom_rw.c: 35: { if(!(*nreg_init)) (*nreg_ini
      +                          t) = 1;
 12374  0F72  082E               	movf	push_ring@nreg_init,w
 12375  0F73  0086               	movwf	6
 12376  0F74  0187               	clrf	7
 12377  0F75  0801               	movf	1,w
 12378  0F76  1D03               	btfss	3,2
 12379  0F77  2F79               	goto	u4111
 12380  0F78  2F7A               	goto	u4110
 12381  0F79                     u4111:	
 12382  0F79  2F7F               	goto	l7187
 12383  0F7A                     u4110:	
 12384  0F7A                     l7185:	
 12385  0F7A  082E               	movf	push_ring@nreg_init,w
 12386  0F7B  0086               	movwf	6
 12387  0F7C  0187               	clrf	7
 12388  0F7D  0181               	clrf	1
 12389  0F7E  0A81               	incf	1,f
 12390  0F7F                     l7187:	
 12391                           
 12392                           ;eeprom_rw.c: 36:     for(unsigned char i = 0; i < 5; i++) {
 12393  0F7F  01B2               	clrf	push_ring@i
 12394  0F80                     l7193:	
 12395                           
 12396                           ;eeprom_rw.c: 37:         if((*nreg_pt) >= nreg) (*nreg_pt) = 0;
 12397  0F80  0833               	movf	push_ring@nreg_pt,w
 12398  0F81  0086               	movwf	6
 12399  0F82  0187               	clrf	7
 12400  0F83  082D               	movf	push_ring@nreg,w
 12401  0F84  0201               	subwf	1,w
 12402  0F85  1C03               	skipc
 12403  0F86  2F88               	goto	u4121
 12404  0F87  2F89               	goto	u4120
 12405  0F88                     u4121:	
 12406  0F88  2F8D               	goto	l7197
 12407  0F89                     u4120:	
 12408  0F89                     l7195:	
 12409  0F89  0833               	movf	push_ring@nreg_pt,w
 12410  0F8A  0086               	movwf	6
 12411  0F8B  0187               	clrf	7
 12412  0F8C  0181               	clrf	1
 12413  0F8D                     l7197:	
 12414                           
 12415                           ;eeprom_rw.c: 38:         DATAEE_WriteByte(0xF000 + (*nreg_pt), ring_byte[i]);
 12416  0F8D  0833               	movf	push_ring@nreg_pt,w
 12417  0F8E  0086               	movwf	6
 12418  0F8F  0187               	clrf	7
 12419  0F90  0801               	movf	1,w
 12420  0F91  3E00               	addlw	0
 12421  0F92  00A9               	movwf	DATAEE_WriteByte@bAdd
 12422  0F93  30F0               	movlw	240
 12423  0F94  1803               	skipnc
 12424  0F95  30F1               	movlw	241
 12425  0F96  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12426  0F97  0832               	movf	push_ring@i,w
 12427  0F98  072F               	addwf	push_ring@ring_byte,w
 12428  0F99  00B0               	movwf	??_push_ring
 12429  0F9A  0830               	movf	??_push_ring,w
 12430  0F9B  0086               	movwf	6
 12431  0F9C  0187               	clrf	7
 12432  0F9D  0801               	movf	1,w
 12433  0F9E  00B1               	movwf	??_push_ring+1
 12434  0F9F  0831               	movf	??_push_ring+1,w
 12435  0FA0  00AB               	movwf	DATAEE_WriteByte@bData
 12436  0FA1  318D  257F  318F   	fcall	_DATAEE_WriteByte
 12437  0FA4                     l7199:	
 12438                           
 12439                           ;eeprom_rw.c: 39:         (*nreg_pt)++;
 12440  0FA4  3001               	movlw	1
 12441  0FA5  0020               	movlb	0	; select bank0
 12442  0FA6  00B0               	movwf	??_push_ring
 12443  0FA7  0833               	movf	push_ring@nreg_pt,w
 12444  0FA8  0086               	movwf	6
 12445  0FA9  0187               	clrf	7
 12446  0FAA  0830               	movf	??_push_ring,w
 12447  0FAB  0781               	addwf	1,f
 12448  0FAC                     l7201:	
 12449                           
 12450                           ;eeprom_rw.c: 40:     }
 12451  0FAC  3001               	movlw	1
 12452  0FAD  00B0               	movwf	??_push_ring
 12453  0FAE  0830               	movf	??_push_ring,w
 12454  0FAF  07B2               	addwf	push_ring@i,f
 12455  0FB0                     l7203:	
 12456  0FB0  3005               	movlw	5
 12457  0FB1  0232               	subwf	push_ring@i,w
 12458  0FB2  1C03               	skipc
 12459  0FB3  2FB5               	goto	u4131
 12460  0FB4  2FB6               	goto	u4130
 12461  0FB5                     u4131:	
 12462  0FB5  2F80               	goto	l7193
 12463  0FB6                     u4130:	
 12464  0FB6                     l1636:	
 12465  0FB6  0008               	return
 12466  0FB7                     __end_of_push_ring:	
 12467                           
 12468                           	psect	text10
 12469  0D7F                     __ptext10:	
 12470 ;; *************** function _DATAEE_WriteByte *****************
 12471 ;; Defined at:
 12472 ;;		line 180 in file "mcc_generated_files/memory.c"
 12473 ;; Parameters:    Size  Location     Type
 12474 ;;  bAdd            2    9[BANK0 ] unsigned short 
 12475 ;;  bData           1   11[BANK0 ] unsigned char 
 12476 ;; Auto vars:     Size  Location     Type
 12477 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 12478 ;; Return value:  Size  Location     Type
 12479 ;;                  1    wreg      void 
 12480 ;; Registers used:
 12481 ;;		wreg, status,2, status,0
 12482 ;; Tracked objects:
 12483 ;;		On entry : 0/0
 12484 ;;		On exit  : 0/0
 12485 ;;		Unchanged: 0/0
 12486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12487 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12488 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12490 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12491 ;;Total ram usage:        4 bytes
 12492 ;; Hardware stack levels used:    1
 12493 ;; Hardware stack levels required when called:    6
 12494 ;; This function calls:
 12495 ;;		Nothing
 12496 ;; This function is called by:
 12497 ;;		_main
 12498 ;;		_save_recovery_params
 12499 ;;		_recoverData
 12500 ;;		_push_ring
 12501 ;;		_cksum_w
 12502 ;;		_reset_recv
 12503 ;; This function uses a non-reentrant model
 12504 ;;
 12505                           
 12506                           
 12507                           ;psect for function _DATAEE_WriteByte
 12508  0D7F                     _DATAEE_WriteByte:	
 12509  0D7F                     l6729:	
 12510                           ;incstack = 0
 12511                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 12512                           
 12513                           
 12514                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 12515  0D7F  3000               	movlw	0
 12516  0D80  1B8B               	btfsc	11,7	;volatile
 12517  0D81  3001               	movlw	1
 12518  0D82  0020               	movlb	0	; select bank0
 12519  0D83  00AC               	movwf	DATAEE_WriteByte@GIEBitValue
 12520                           
 12521                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 12522  0D84  082A               	movf	DATAEE_WriteByte@bAdd+1,w
 12523  0D85  0030               	movlb	16	; select bank16
 12524  0D86  009B               	movwf	27	;volatile
 12525  0D87                     l6731:	
 12526                           
 12527                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 12528  0D87  0020               	movlb	0	; select bank0
 12529  0D88  0829               	movf	DATAEE_WriteByte@bAdd,w
 12530  0D89  0030               	movlb	16	; select bank16
 12531  0D8A  009A               	movwf	26	;volatile
 12532  0D8B                     l6733:	
 12533                           
 12534                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 12535  0D8B  0020               	movlb	0	; select bank0
 12536  0D8C  082B               	movf	DATAEE_WriteByte@bData,w
 12537  0D8D  0030               	movlb	16	; select bank16
 12538  0D8E  009C               	movwf	28	;volatile
 12539  0D8F                     l6735:	
 12540                           
 12541                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 12542  0D8F  171E               	bsf	30,6	;volsfr
 12543  0D90                     l6737:	
 12544                           
 12545                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 12546  0D90  151E               	bsf	30,2	;volsfr
 12547  0D91                     l6739:	
 12548                           
 12549                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 12550  0D91  138B               	bcf	11,7	;volatile
 12551  0D92                     l6741:	
 12552                           
 12553                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 12554  0D92  3055               	movlw	85
 12555  0D93  009F               	movwf	31	;volsfr
 12556  0D94                     l6743:	
 12557                           
 12558                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 12559  0D94  30AA               	movlw	170
 12560  0D95  009F               	movwf	31	;volsfr
 12561  0D96                     l6745:	
 12562                           
 12563                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 12564  0D96  149E               	bsf	30,1	;volsfr
 12565  0D97                     l1005:	
 12566                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 12567                           
 12568                           
 12569                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 12570  0D97  189E               	btfsc	30,1	;volsfr
 12571  0D98  2D9A               	goto	u3951
 12572  0D99  2D9B               	goto	u3950
 12573  0D9A                     u3951:	
 12574  0D9A  2D97               	goto	l1005
 12575  0D9B                     u3950:	
 12576  0D9B                     l1007:	
 12577                           
 12578                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 12579  0D9B  111E               	bcf	30,2	;volsfr
 12580  0D9C                     l6747:	
 12581                           
 12582                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 12583  0D9C  0020               	movlb	0	; select bank0
 12584  0D9D  0C2C               	rrf	DATAEE_WriteByte@GIEBitValue,w
 12585  0D9E  1C03               	skipc
 12586  0D9F  138B               	bcf	11,7	;volatile
 12587  0DA0  1803               	skipnc
 12588  0DA1  178B               	bsf	11,7	;volatile
 12589  0DA2                     l1008:	
 12590  0DA2  0008               	return
 12591  0DA3                     __end_of_DATAEE_WriteByte:	
 12592                           
 12593                           	psect	text11
 12594  0AE6                     __ptext11:	
 12595 ;; *************** function _i2c1_driver_open *****************
 12596 ;; Defined at:
 12597 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
 12598 ;; Parameters:    Size  Location     Type
 12599 ;;		None
 12600 ;; Auto vars:     Size  Location     Type
 12601 ;;		None
 12602 ;; Return value:  Size  Location     Type
 12603 ;;		None               void
 12604 ;; Registers used:
 12605 ;;		wreg, status,2
 12606 ;; Tracked objects:
 12607 ;;		On entry : 0/0
 12608 ;;		On exit  : 0/0
 12609 ;;		Unchanged: 0/0
 12610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12615 ;;Total ram usage:        0 bytes
 12616 ;; Hardware stack levels used:    1
 12617 ;; Hardware stack levels required when called:    6
 12618 ;; This function calls:
 12619 ;;		Nothing
 12620 ;; This function is called by:
 12621 ;;		_main
 12622 ;;		_i2c_open
 12623 ;;		_I2C_Initialize
 12624 ;; This function uses a non-reentrant model
 12625 ;;
 12626                           
 12627                           
 12628                           ;psect for function _i2c1_driver_open
 12629  0AE6                     _i2c1_driver_open:	
 12630  0AE6                     l7087:	
 12631                           ;incstack = 0
 12632                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 12633                           
 12634  0AE6  0023               	movlb	3	; select bank3
 12635  0AE7  1A90               	btfsc	16,5	;volatile
 12636  0AE8  2AEA               	goto	u4041
 12637  0AE9  2AEB               	goto	u4040
 12638  0AEA                     u4041:	
 12639  0AEA  2AF1               	goto	l506
 12640  0AEB                     u4040:	
 12641  0AEB                     l7089:	
 12642  0AEB  018F               	clrf	15	;volatile
 12643  0AEC                     l7091:	
 12644  0AEC  3028               	movlw	40
 12645  0AED  0090               	movwf	16	;volatile
 12646  0AEE                     l7093:	
 12647  0AEE  0191               	clrf	17	;volatile
 12648  0AEF  3003               	movlw	3
 12649  0AF0  008D               	movwf	13	;volatile
 12650  0AF1                     l506:	
 12651  0AF1  0008               	return
 12652  0AF2                     __end_of_i2c1_driver_open:	
 12653                           
 12654                           	psect	text12
 12655  03BA                     __ptext12:	
 12656 ;; *************** function _config_routine *****************
 12657 ;; Defined at:
 12658 ;;		line 303 in file "main.c"
 12659 ;; Parameters:    Size  Location     Type
 12660 ;;		None
 12661 ;; Auto vars:     Size  Location     Type
 12662 ;;  select_mode     2   36[BANK0 ] unsigned int 
 12663 ;; Return value:  Size  Location     Type
 12664 ;;                  1    wreg      void 
 12665 ;; Registers used:
 12666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12667 ;; Tracked objects:
 12668 ;;		On entry : 0/0
 12669 ;;		On exit  : 0/0
 12670 ;;		Unchanged: 0/0
 12671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12673 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12674 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12675 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12676 ;;Total ram usage:        3 bytes
 12677 ;; Hardware stack levels used:    1
 12678 ;; Hardware stack levels required when called:   11
 12679 ;; This function calls:
 12680 ;;		_all_LED
 12681 ;;		_checkDebounceSW1
 12682 ;;		_checkDebounceSW2
 12683 ;;		_mod1_LED
 12684 ;;		_mod2_LED
 12685 ;;		_mod3_LED
 12686 ;;		_mod4_LED
 12687 ;;		_mode_select_LED
 12688 ;;		_selectSubfield
 12689 ;; This function is called by:
 12690 ;;		_main
 12691 ;; This function uses a non-reentrant model
 12692 ;;
 12693                           
 12694                           
 12695                           ;psect for function _config_routine
 12696  03BA                     _config_routine:	
 12697  03BA                     l7205:	
 12698                           ;incstack = 0
 12699                           ; Regs used in _config_routine: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12700                           
 12701                           
 12702                           ;main.c: 305:     unsigned int select_mode =0;
 12703  03BA  0020               	movlb	0	; select bank0
 12704  03BB  01C4               	clrf	config_routine@select_mode
 12705  03BC  01C5               	clrf	config_routine@select_mode+1
 12706  03BD                     l7207:	
 12707                           
 12708                           ;main.c: 306:     last_ms = clkms;
 12709  03BD  087D               	movf	_clkms,w	;volatile
 12710  03BE  00C3               	movwf	??_config_routine
 12711  03BF  0843               	movf	??_config_routine,w
 12712  03C0  00DB               	movwf	_last_ms
 12713  03C1                     l7209:	
 12714                           
 12715                           ;main.c: 307:     last_ms2 = clkms;
 12716  03C1  087D               	movf	_clkms,w	;volatile
 12717  03C2  00C3               	movwf	??_config_routine
 12718  03C3  0843               	movf	??_config_routine,w
 12719  03C4  00DA               	movwf	_last_ms2
 12720  03C5                     l7211:	
 12721                           
 12722                           ;main.c: 310:         if(mode_field_subfield[0] == -1 && select_mode == 0){
 12723  03C5  0A61               	incf	_mode_field_subfield,w
 12724  03C6  1D03               	skipz
 12725  03C7  2BCC               	goto	u4141
 12726  03C8  0A62               	incf	_mode_field_subfield+1,w
 12727  03C9  1D03               	btfss	3,2
 12728  03CA  2BCC               	goto	u4141
 12729  03CB  2BCD               	goto	u4140
 12730  03CC                     u4141:	
 12731  03CC  2BD6               	goto	l7217
 12732  03CD                     u4140:	
 12733  03CD                     l7213:	
 12734  03CD  0844               	movf	config_routine@select_mode,w
 12735  03CE  0445               	iorwf	config_routine@select_mode+1,w
 12736  03CF  1D03               	btfss	3,2
 12737  03D0  2BD2               	goto	u4151
 12738  03D1  2BD3               	goto	u4150
 12739  03D2                     u4151:	
 12740  03D2  2BD6               	goto	l7217
 12741  03D3                     u4150:	
 12742  03D3                     l7215:	
 12743                           
 12744                           ;main.c: 311:             all_LED();
 12745  03D3  3184  24A2  3183   	fcall	_all_LED
 12746  03D6                     l7217:	
 12747                           
 12748                           ;main.c: 314:         if(!PORTBbits.RB4){
 12749  03D6  0020               	movlb	0	; select bank0
 12750  03D7  1A0D               	btfsc	13,4	;volatile
 12751  03D8  2BDA               	goto	u4161
 12752  03D9  2BDB               	goto	u4160
 12753  03DA                     u4161:	
 12754  03DA  2C11               	goto	l1320
 12755  03DB                     u4160:	
 12756  03DB                     l7219:	
 12757                           
 12758                           ;main.c: 315:             if(checkDebounceSW1()){
 12759  03DB  3184  24FD  3183   	fcall	_checkDebounceSW1
 12760  03DE  3A00               	xorlw	0
 12761  03DF  1903               	skipnz
 12762  03E0  2BE2               	goto	u4171
 12763  03E1  2BE3               	goto	u4170
 12764  03E2                     u4171:	
 12765  03E2  2C11               	goto	l1320
 12766  03E3                     u4170:	
 12767  03E3                     l7221:	
 12768                           
 12769                           ;main.c: 317:                 select_mode +=1;
 12770  03E3  3001               	movlw	1
 12771  03E4  0020               	movlb	0	; select bank0
 12772  03E5  07C4               	addwf	config_routine@select_mode,f
 12773  03E6  3000               	movlw	0
 12774  03E7  3DC5               	addwfc	config_routine@select_mode+1,f
 12775                           
 12776                           ;main.c: 319:                 switch(select_mode){
 12777  03E8  2BFE               	goto	l7235
 12778  03E9                     l7223:	
 12779  03E9  318A  22B9  3183   	fcall	_mod1_LED
 12780  03EC  2C11               	goto	l1320
 12781  03ED                     l7225:	
 12782  03ED  318A  22AF  3183   	fcall	_mod2_LED
 12783  03F0  2C11               	goto	l1320
 12784  03F1                     l7227:	
 12785  03F1  318A  22C4  3183   	fcall	_mod3_LED
 12786  03F4  2C11               	goto	l1320
 12787  03F5                     l7229:	
 12788  03F5  318A  22CF  3183   	fcall	_mod4_LED
 12789  03F8  2C11               	goto	l1320
 12790  03F9                     l7231:	
 12791  03F9  01C4               	clrf	config_routine@select_mode
 12792  03FA  01C5               	clrf	config_routine@select_mode+1
 12793  03FB  01D6               	clrf	_config_mode	;volatile
 12794  03FC  01D5               	clrf	_alarm	;volatile
 12795                           
 12796                           ;main.c: 325:                     break;
 12797  03FD  2C11               	goto	l1320
 12798  03FE                     l7235:	
 12799                           
 12800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12801                           ; Switch size 1, requested type "simple"
 12802                           ; Number of cases is 1, Range of values is 0 to 0
 12803                           ; switch strategies available:
 12804                           ; Name         Instructions Cycles
 12805                           ; simple_byte            4     3 (average)
 12806                           ; direct_byte            8     6 (fixed)
 12807                           ; jumptable            260     6 (fixed)
 12808                           ;	Chosen strategy is simple_byte
 12809  03FE  0845               	movf	config_routine@select_mode+1,w
 12810  03FF  3A00               	xorlw	0	; case 0
 12811  0400  1903               	skipnz
 12812  0401  2C03               	goto	l7805
 12813  0402  2BF9               	goto	l7231
 12814  0403                     l7805:	
 12815                           
 12816                           ; Switch size 1, requested type "simple"
 12817                           ; Number of cases is 4, Range of values is 1 to 4
 12818                           ; switch strategies available:
 12819                           ; Name         Instructions Cycles
 12820                           ; simple_byte           13     7 (average)
 12821                           ; direct_byte           17     9 (fixed)
 12822                           ; jumptable            263     9 (fixed)
 12823                           ;	Chosen strategy is simple_byte
 12824  0403  0844               	movf	config_routine@select_mode,w
 12825  0404  3A01               	xorlw	1	; case 1
 12826  0405  1903               	skipnz
 12827  0406  2BE9               	goto	l7223
 12828  0407  3A03               	xorlw	3	; case 2
 12829  0408  1903               	skipnz
 12830  0409  2BED               	goto	l7225
 12831  040A  3A01               	xorlw	1	; case 3
 12832  040B  1903               	skipnz
 12833  040C  2BF1               	goto	l7227
 12834  040D  3A07               	xorlw	7	; case 4
 12835  040E  1903               	skipnz
 12836  040F  2BF5               	goto	l7229
 12837  0410  2BF9               	goto	l7231
 12838  0411                     l1320:	
 12839                           ;main.c: 329:         }
 12840                           
 12841                           
 12842                           ;main.c: 332:         if(!PORTCbits.RC5){
 12843  0411  0020               	movlb	0	; select bank0
 12844  0412  1A8E               	btfsc	14,5	;volatile
 12845  0413  2C15               	goto	u4181
 12846  0414  2C16               	goto	u4180
 12847  0415                     u4181:	
 12848  0415  2C2F               	goto	l7249
 12849  0416                     u4180:	
 12850  0416                     l7237:	
 12851                           
 12852                           ;main.c: 333:             if(checkDebounceSW2()){
 12853  0416  3187  2748  3183   	fcall	_checkDebounceSW2
 12854  0419  3A00               	xorlw	0
 12855  041A  1903               	skipnz
 12856  041B  2C1D               	goto	u4191
 12857  041C  2C1E               	goto	u4190
 12858  041D                     u4191:	
 12859  041D  2C2F               	goto	l7249
 12860  041E                     u4190:	
 12861  041E                     l7239:	
 12862                           
 12863                           ;main.c: 334:                 mode_field_subfield[0] = select_mode;
 12864  041E  0020               	movlb	0	; select bank0
 12865  041F  0845               	movf	config_routine@select_mode+1,w
 12866  0420  00E2               	movwf	_mode_field_subfield+1
 12867  0421  0844               	movf	config_routine@select_mode,w
 12868  0422  00E1               	movwf	_mode_field_subfield
 12869  0423                     l7241:	
 12870                           
 12871                           ;main.c: 335:                 mode_select_LED();
 12872  0423  318D  253F  3183   	fcall	_mode_select_LED
 12873  0426                     l7243:	
 12874                           
 12875                           ;main.c: 336:                 selectSubfield();
 12876  0426  3186  26AD  3183   	fcall	_selectSubfield
 12877  0429                     l7245:	
 12878                           
 12879                           ;main.c: 337:                 __nop();
 12880  0429  0000               	nop
 12881  042A                     l7247:	
 12882                           
 12883                           ;main.c: 338:                 select_mode = mode_field_subfield[0];
 12884  042A  0020               	movlb	0	; select bank0
 12885  042B  0862               	movf	_mode_field_subfield+1,w
 12886  042C  00C5               	movwf	config_routine@select_mode+1
 12887  042D  0861               	movf	_mode_field_subfield,w
 12888  042E  00C4               	movwf	config_routine@select_mode
 12889  042F                     l7249:	
 12890                           
 12891                           ;main.c: 342:         _delay((unsigned long)((2)*(1000000/4000.0)));
 12892  042F  30A6               	movlw	166
 12893  0430                     u4617:	
 12894  0430  0B89               	decfsz	9,f
 12895  0431  2C30               	goto	u4617
 12896  0432  3200               	nop2
 12897  0433                     l7251:	
 12898                           
 12899                           ;main.c: 344:     }while(config_mode == 1);
 12900  0433  0020               	movlb	0	; select bank0
 12901  0434  0356               	decf	_config_mode,w	;volatile
 12902  0435  1903               	btfsc	3,2
 12903  0436  2C38               	goto	u4201
 12904  0437  2C39               	goto	u4200
 12905  0438                     u4201:	
 12906  0438  2BC5               	goto	l7211
 12907  0439                     u4200:	
 12908  0439                     l7253:	
 12909                           
 12910                           ;main.c: 346:     mode_field_subfield[0] = -1;
 12911  0439  30FF               	movlw	255
 12912  043A  00E1               	movwf	_mode_field_subfield
 12913  043B  30FF               	movlw	255
 12914  043C  00E2               	movwf	_mode_field_subfield+1
 12915                           
 12916                           ;main.c: 347:     mode_field_subfield[1] = -1;
 12917  043D  30FF               	movlw	255
 12918  043E  00E3               	movwf	_mode_field_subfield+2
 12919  043F  30FF               	movlw	255
 12920  0440  00E4               	movwf	_mode_field_subfield+3
 12921  0441                     l1332:	
 12922  0441  0008               	return
 12923  0442                     __end_of_config_routine:	
 12924                           
 12925                           	psect	text13
 12926  06AD                     __ptext13:	
 12927 ;; *************** function _selectSubfield *****************
 12928 ;; Defined at:
 12929 ;;		line 356 in file "main.c"
 12930 ;; Parameters:    Size  Location     Type
 12931 ;;		None
 12932 ;; Auto vars:     Size  Location     Type
 12933 ;;  subfield        2   33[BANK0 ] unsigned int 
 12934 ;; Return value:  Size  Location     Type
 12935 ;;                  1    wreg      void 
 12936 ;; Registers used:
 12937 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12938 ;; Tracked objects:
 12939 ;;		On entry : 0/0
 12940 ;;		On exit  : 0/0
 12941 ;;		Unchanged: 0/0
 12942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12944 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12947 ;;Total ram usage:        4 bytes
 12948 ;; Hardware stack levels used:    1
 12949 ;; Hardware stack levels required when called:   10
 12950 ;; This function calls:
 12951 ;;		_all_LED
 12952 ;;		_checkDebounceSW1
 12953 ;;		_checkDebounceSW2
 12954 ;;		_getSubfieldInfo
 12955 ;;		_mode_LED
 12956 ;; This function is called by:
 12957 ;;		_config_routine
 12958 ;; This function uses a non-reentrant model
 12959 ;;
 12960                           
 12961                           
 12962                           ;psect for function _selectSubfield
 12963  06AD                     _selectSubfield:	
 12964  06AD                     l7017:	
 12965                           ;incstack = 0
 12966                           ; Regs used in _selectSubfield: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12967                           
 12968                           
 12969                           ;main.c: 357:     unsigned int subfield = 1;
 12970  06AD  3001               	movlw	1
 12971  06AE  0020               	movlb	0	; select bank0
 12972  06AF  00C1               	movwf	selectSubfield@subfield
 12973  06B0  3000               	movlw	0
 12974  06B1  00C2               	movwf	selectSubfield@subfield+1
 12975  06B2                     l7019:	
 12976                           
 12977                           ;main.c: 361:         if(!PORTBbits.RB4){
 12978  06B2  1A0D               	btfsc	13,4	;volatile
 12979  06B3  2EB5               	goto	u3971
 12980  06B4  2EB6               	goto	u3970
 12981  06B5                     u3971:	
 12982  06B5  2EC3               	goto	l7025
 12983  06B6                     u3970:	
 12984  06B6                     l7021:	
 12985                           
 12986                           ;main.c: 362:             if(checkDebounceSW1()){
 12987  06B6  3184  24FD  3186   	fcall	_checkDebounceSW1
 12988  06B9  3A00               	xorlw	0
 12989  06BA  1903               	skipnz
 12990  06BB  2EBD               	goto	u3981
 12991  06BC  2EBE               	goto	u3980
 12992  06BD                     u3981:	
 12993  06BD  2EC3               	goto	l7025
 12994  06BE                     u3980:	
 12995  06BE                     l7023:	
 12996                           
 12997                           ;main.c: 363:                 subfield +=1;
 12998  06BE  3001               	movlw	1
 12999  06BF  0020               	movlb	0	; select bank0
 13000  06C0  07C1               	addwf	selectSubfield@subfield,f
 13001  06C1  3000               	movlw	0
 13002  06C2  3DC2               	addwfc	selectSubfield@subfield+1,f
 13003  06C3                     l7025:	
 13004                           
 13005                           ;main.c: 368:         mode_LED( subfield);
 13006  06C3  0020               	movlb	0	; select bank0
 13007  06C4  0841               	movf	selectSubfield@subfield,w
 13008  06C5  318D  25EE  3186   	fcall	_mode_LED
 13009  06C8                     l7027:	
 13010                           
 13011                           ;main.c: 370:         if(!PORTCbits.RC5){
 13012  06C8  0020               	movlb	0	; select bank0
 13013  06C9  1A8E               	btfsc	14,5	;volatile
 13014  06CA  2ECC               	goto	u3991
 13015  06CB  2ECD               	goto	u3990
 13016  06CC                     u3991:	
 13017  06CC  2EE0               	goto	l7037
 13018  06CD                     u3990:	
 13019  06CD                     l7029:	
 13020                           
 13021                           ;main.c: 371:             if(checkDebounceSW2()){
 13022  06CD  3187  2748  3186   	fcall	_checkDebounceSW2
 13023  06D0  3A00               	xorlw	0
 13024  06D1  1903               	skipnz
 13025  06D2  2ED4               	goto	u4001
 13026  06D3  2ED5               	goto	u4000
 13027  06D4                     u4001:	
 13028  06D4  2EE0               	goto	l7037
 13029  06D5                     u4000:	
 13030  06D5                     l7031:	
 13031                           
 13032                           ;main.c: 372:                 mode_field_subfield[1] = subfield;
 13033  06D5  0020               	movlb	0	; select bank0
 13034  06D6  0842               	movf	selectSubfield@subfield+1,w
 13035  06D7  00E4               	movwf	_mode_field_subfield+3
 13036  06D8  0841               	movf	selectSubfield@subfield,w
 13037  06D9  00E3               	movwf	_mode_field_subfield+2
 13038  06DA                     l7033:	
 13039                           
 13040                           ;main.c: 373:                 getSubfieldInfo();
 13041  06DA  3182  220A  3186   	fcall	_getSubfieldInfo
 13042  06DD                     l7035:	
 13043                           
 13044                           ;main.c: 374:                 all_LED();
 13045  06DD  3184  24A2  3186   	fcall	_all_LED
 13046  06E0                     l7037:	
 13047                           
 13048                           ;main.c: 379:         _delay((unsigned long)((2)*(1000000/4000.0)));
 13049  06E0  30A6               	movlw	166
 13050  06E1                     u4627:	
 13051  06E1  0B89               	decfsz	9,f
 13052  06E2  2EE1               	goto	u4627
 13053  06E3  3200               	nop2
 13054  06E4                     l7039:	
 13055                           
 13056                           ;main.c: 381:     }while(subfield <= num_subfields[mode_field_subfield[0]]);
 13057  06E4  0020               	movlb	0	; select bank0
 13058  06E5  0862               	movf	_mode_field_subfield+1,w
 13059  06E6  0085               	movwf	5
 13060  06E7  0861               	movf	_mode_field_subfield,w
 13061  06E8  0084               	movwf	4
 13062  06E9  3020               	movlw	low (_num_subfields| (0+32768))
 13063  06EA  0784               	addwf	4,f
 13064  06EB  3090               	movlw	high (_num_subfields| (0+32768))
 13065  06EC  3D85               	addwfc	5,f
 13066  06ED  0800               	movf	0,w	;code access
 13067  06EE  00BF               	movwf	??_selectSubfield
 13068  06EF  01C0               	clrf	??_selectSubfield+1
 13069  06F0  0842               	movf	selectSubfield@subfield+1,w
 13070  06F1  0240               	subwf	??_selectSubfield+1,w
 13071  06F2  1D03               	skipz
 13072  06F3  2EF6               	goto	u4015
 13073  06F4  0841               	movf	selectSubfield@subfield,w
 13074  06F5  023F               	subwf	??_selectSubfield,w
 13075  06F6                     u4015:	
 13076  06F6  1803               	skipnc
 13077  06F7  2EF9               	goto	u4011
 13078  06F8  2EFA               	goto	u4010
 13079  06F9                     u4011:	
 13080  06F9  2EB2               	goto	l7019
 13081  06FA                     u4010:	
 13082  06FA                     l1341:	
 13083  06FA  0008               	return
 13084  06FB                     __end_of_selectSubfield:	
 13085                           
 13086                           	psect	text14
 13087  0DEE                     __ptext14:	
 13088 ;; *************** function _mode_LED *****************
 13089 ;; Defined at:
 13090 ;;		line 113 in file "leds.c"
 13091 ;; Parameters:    Size  Location     Type
 13092 ;;  subfield        1    wreg     unsigned char 
 13093 ;; Auto vars:     Size  Location     Type
 13094 ;;  subfield        1   15[BANK0 ] unsigned char 
 13095 ;; Return value:  Size  Location     Type
 13096 ;;                  1    wreg      void 
 13097 ;; Registers used:
 13098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13099 ;; Tracked objects:
 13100 ;;		On entry : 0/0
 13101 ;;		On exit  : 0/0
 13102 ;;		Unchanged: 0/0
 13103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13105 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13106 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13107 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13108 ;;Total ram usage:        3 bytes
 13109 ;; Hardware stack levels used:    1
 13110 ;; Hardware stack levels required when called:    8
 13111 ;; This function calls:
 13112 ;;		_mod1_LED
 13113 ;;		_mod2_LED
 13114 ;;		_mod3_LED
 13115 ;;		_mod4_LED
 13116 ;; This function is called by:
 13117 ;;		_selectSubfield
 13118 ;; This function uses a non-reentrant model
 13119 ;;
 13120                           
 13121                           
 13122                           ;psect for function _mode_LED
 13123  0DEE                     _mode_LED:	
 13124                           
 13125                           ;incstack = 0
 13126                           ; Regs used in _mode_LED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13127                           ;mode_LED@subfield stored from wreg
 13128  0DEE  0020               	movlb	0	; select bank0
 13129  0DEF  00AF               	movwf	mode_LED@subfield
 13130  0DF0                     l6775:	
 13131                           
 13132                           ;leds.c: 114:         switch(subfield){
 13133  0DF0  2E01               	goto	l6787
 13134  0DF1                     l6777:	
 13135  0DF1  318A  22B9  318D   	fcall	_mod1_LED
 13136  0DF4  2E17               	goto	l1725
 13137  0DF5                     l6779:	
 13138  0DF5  318A  22AF  318D   	fcall	_mod2_LED
 13139  0DF8  2E17               	goto	l1725
 13140  0DF9                     l6781:	
 13141  0DF9  318A  22C4  318D   	fcall	_mod3_LED
 13142  0DFC  2E17               	goto	l1725
 13143  0DFD                     l6783:	
 13144  0DFD  318A  22CF  318D   	fcall	_mod4_LED
 13145  0E00  2E17               	goto	l1725
 13146  0E01                     l6787:	
 13147  0E01  082F               	movf	mode_LED@subfield,w
 13148  0E02  00AD               	movwf	??_mode_LED
 13149  0E03  01AE               	clrf	??_mode_LED+1
 13150                           
 13151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13152                           ; Switch size 1, requested type "simple"
 13153                           ; Number of cases is 1, Range of values is 0 to 0
 13154                           ; switch strategies available:
 13155                           ; Name         Instructions Cycles
 13156                           ; simple_byte            4     3 (average)
 13157                           ; direct_byte            8     6 (fixed)
 13158                           ; jumptable            260     6 (fixed)
 13159                           ;	Chosen strategy is simple_byte
 13160  0E04  082E               	movf	??_mode_LED+1,w
 13161  0E05  3A00               	xorlw	0	; case 0
 13162  0E06  1903               	skipnz
 13163  0E07  2E09               	goto	l7807
 13164  0E08  2E17               	goto	l1725
 13165  0E09                     l7807:	
 13166                           
 13167                           ; Switch size 1, requested type "simple"
 13168                           ; Number of cases is 4, Range of values is 1 to 4
 13169                           ; switch strategies available:
 13170                           ; Name         Instructions Cycles
 13171                           ; simple_byte           13     7 (average)
 13172                           ; direct_byte           17     9 (fixed)
 13173                           ; jumptable            263     9 (fixed)
 13174                           ;	Chosen strategy is simple_byte
 13175  0E09  082D               	movf	??_mode_LED,w
 13176  0E0A  3A01               	xorlw	1	; case 1
 13177  0E0B  1903               	skipnz
 13178  0E0C  2DF1               	goto	l6777
 13179  0E0D  3A03               	xorlw	3	; case 2
 13180  0E0E  1903               	skipnz
 13181  0E0F  2DF5               	goto	l6779
 13182  0E10  3A01               	xorlw	1	; case 3
 13183  0E11  1903               	skipnz
 13184  0E12  2DF9               	goto	l6781
 13185  0E13  3A07               	xorlw	7	; case 4
 13186  0E14  1903               	skipnz
 13187  0E15  2DFD               	goto	l6783
 13188  0E16  2E17               	goto	l1725
 13189  0E17                     l1725:	
 13190  0E17  0008               	return
 13191  0E18                     __end_of_mode_LED:	
 13192                           
 13193                           	psect	text15
 13194  0ACF                     __ptext15:	
 13195 ;; *************** function _mod4_LED *****************
 13196 ;; Defined at:
 13197 ;;		line 84 in file "leds.c"
 13198 ;; Parameters:    Size  Location     Type
 13199 ;;		None
 13200 ;; Auto vars:     Size  Location     Type
 13201 ;;		None
 13202 ;; Return value:  Size  Location     Type
 13203 ;;                  1    wreg      void 
 13204 ;; Registers used:
 13205 ;;		wreg, status,2, status,0, pclath, cstack
 13206 ;; Tracked objects:
 13207 ;;		On entry : 0/0
 13208 ;;		On exit  : 0/0
 13209 ;;		Unchanged: 0/0
 13210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13215 ;;Total ram usage:        0 bytes
 13216 ;; Hardware stack levels used:    1
 13217 ;; Hardware stack levels required when called:    7
 13218 ;; This function calls:
 13219 ;;		_PWM6_LoadDutyValue
 13220 ;; This function is called by:
 13221 ;;		_config_routine
 13222 ;;		_mode_LED
 13223 ;; This function uses a non-reentrant model
 13224 ;;
 13225                           
 13226                           
 13227                           ;psect for function _mod4_LED
 13228  0ACF                     _mod4_LED:	
 13229  0ACF                     l6613:	
 13230                           ;incstack = 0
 13231                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 13232                           
 13233                           
 13234                           ;leds.c: 85:     LATA = 0;
 13235  0ACF  0020               	movlb	0	; select bank0
 13236  0AD0  0196               	clrf	22	;volatile
 13237  0AD1                     l6615:	
 13238                           
 13239                           ;leds.c: 86:     PWM6_LoadDutyValue(0);
 13240  0AD1  3000               	movlw	0
 13241  0AD2  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13242  0AD3  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13243  0AD4  318C  2480  318A   	fcall	_PWM6_LoadDutyValue
 13244  0AD7                     l6617:	
 13245  0AD7  0020               	movlb	0	; select bank0
 13246  0AD8  1616               	bsf	22,4	;volatile
 13247  0AD9                     l1704:	
 13248  0AD9  0008               	return
 13249  0ADA                     __end_of_mod4_LED:	
 13250                           
 13251                           	psect	text16
 13252  0AC4                     __ptext16:	
 13253 ;; *************** function _mod3_LED *****************
 13254 ;; Defined at:
 13255 ;;		line 77 in file "leds.c"
 13256 ;; Parameters:    Size  Location     Type
 13257 ;;		None
 13258 ;; Auto vars:     Size  Location     Type
 13259 ;;		None
 13260 ;; Return value:  Size  Location     Type
 13261 ;;                  1    wreg      void 
 13262 ;; Registers used:
 13263 ;;		wreg, status,2, status,0, pclath, cstack
 13264 ;; Tracked objects:
 13265 ;;		On entry : 0/0
 13266 ;;		On exit  : 0/0
 13267 ;;		Unchanged: 0/0
 13268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13273 ;;Total ram usage:        0 bytes
 13274 ;; Hardware stack levels used:    1
 13275 ;; Hardware stack levels required when called:    7
 13276 ;; This function calls:
 13277 ;;		_PWM6_LoadDutyValue
 13278 ;; This function is called by:
 13279 ;;		_config_routine
 13280 ;;		_mode_LED
 13281 ;; This function uses a non-reentrant model
 13282 ;;
 13283                           
 13284                           
 13285                           ;psect for function _mod3_LED
 13286  0AC4                     _mod3_LED:	
 13287  0AC4                     l6607:	
 13288                           ;incstack = 0
 13289                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 13290                           
 13291                           
 13292                           ;leds.c: 78:     LATA = 0;
 13293  0AC4  0020               	movlb	0	; select bank0
 13294  0AC5  0196               	clrf	22	;volatile
 13295  0AC6                     l6609:	
 13296                           
 13297                           ;leds.c: 79:     PWM6_LoadDutyValue(0);
 13298  0AC6  3000               	movlw	0
 13299  0AC7  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13300  0AC8  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13301  0AC9  318C  2480  318A   	fcall	_PWM6_LoadDutyValue
 13302  0ACC                     l6611:	
 13303  0ACC  0020               	movlb	0	; select bank0
 13304  0ACD  1696               	bsf	22,5	;volatile
 13305  0ACE                     l1699:	
 13306  0ACE  0008               	return
 13307  0ACF                     __end_of_mod3_LED:	
 13308                           
 13309                           	psect	text17
 13310  0AAF                     __ptext17:	
 13311 ;; *************** function _mod2_LED *****************
 13312 ;; Defined at:
 13313 ;;		line 72 in file "leds.c"
 13314 ;; Parameters:    Size  Location     Type
 13315 ;;		None
 13316 ;; Auto vars:     Size  Location     Type
 13317 ;;		None
 13318 ;; Return value:  Size  Location     Type
 13319 ;;                  1    wreg      void 
 13320 ;; Registers used:
 13321 ;;		wreg, status,2, status,0, pclath, cstack
 13322 ;; Tracked objects:
 13323 ;;		On entry : 0/0
 13324 ;;		On exit  : 0/0
 13325 ;;		Unchanged: 0/0
 13326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13331 ;;Total ram usage:        0 bytes
 13332 ;; Hardware stack levels used:    1
 13333 ;; Hardware stack levels required when called:    7
 13334 ;; This function calls:
 13335 ;;		_PWM6_LoadDutyValue
 13336 ;; This function is called by:
 13337 ;;		_config_routine
 13338 ;;		_mode_LED
 13339 ;; This function uses a non-reentrant model
 13340 ;;
 13341                           
 13342                           
 13343                           ;psect for function _mod2_LED
 13344  0AAF                     _mod2_LED:	
 13345  0AAF                     l6603:	
 13346                           ;incstack = 0
 13347                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 13348                           
 13349                           
 13350                           ;leds.c: 73:     LATA = 0;
 13351  0AAF  0020               	movlb	0	; select bank0
 13352  0AB0  0196               	clrf	22	;volatile
 13353  0AB1                     l6605:	
 13354                           
 13355                           ;leds.c: 74:     PWM6_LoadDutyValue(1023);
 13356  0AB1  30FF               	movlw	255
 13357  0AB2  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13358  0AB3  3003               	movlw	3
 13359  0AB4  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13360  0AB5  318C  2480  318A   	fcall	_PWM6_LoadDutyValue
 13361  0AB8                     l1694:	
 13362  0AB8  0008               	return
 13363  0AB9                     __end_of_mod2_LED:	
 13364                           
 13365                           	psect	text18
 13366  0AB9                     __ptext18:	
 13367 ;; *************** function _mod1_LED *****************
 13368 ;; Defined at:
 13369 ;;		line 65 in file "leds.c"
 13370 ;; Parameters:    Size  Location     Type
 13371 ;;		None
 13372 ;; Auto vars:     Size  Location     Type
 13373 ;;		None
 13374 ;; Return value:  Size  Location     Type
 13375 ;;                  1    wreg      void 
 13376 ;; Registers used:
 13377 ;;		wreg, status,2, status,0, pclath, cstack
 13378 ;; Tracked objects:
 13379 ;;		On entry : 0/0
 13380 ;;		On exit  : 0/0
 13381 ;;		Unchanged: 0/0
 13382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13387 ;;Total ram usage:        0 bytes
 13388 ;; Hardware stack levels used:    1
 13389 ;; Hardware stack levels required when called:    7
 13390 ;; This function calls:
 13391 ;;		_PWM6_LoadDutyValue
 13392 ;; This function is called by:
 13393 ;;		_config_routine
 13394 ;;		_mode_LED
 13395 ;; This function uses a non-reentrant model
 13396 ;;
 13397                           
 13398                           
 13399                           ;psect for function _mod1_LED
 13400  0AB9                     _mod1_LED:	
 13401  0AB9                     l6597:	
 13402                           ;incstack = 0
 13403                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 13404                           
 13405                           
 13406                           ;leds.c: 66:     LATA = 0;
 13407  0AB9  0020               	movlb	0	; select bank0
 13408  0ABA  0196               	clrf	22	;volatile
 13409  0ABB                     l6599:	
 13410                           
 13411                           ;leds.c: 67:     PWM6_LoadDutyValue(0);
 13412  0ABB  3000               	movlw	0
 13413  0ABC  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13414  0ABD  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13415  0ABE  318C  2480  318A   	fcall	_PWM6_LoadDutyValue
 13416  0AC1                     l6601:	
 13417  0AC1  0020               	movlb	0	; select bank0
 13418  0AC2  1796               	bsf	22,7	;volatile
 13419  0AC3                     l1691:	
 13420  0AC3  0008               	return
 13421  0AC4                     __end_of_mod1_LED:	
 13422                           
 13423                           	psect	text19
 13424  020A                     __ptext19:	
 13425 ;; *************** function _getSubfieldInfo *****************
 13426 ;; Defined at:
 13427 ;;		line 391 in file "main.c"
 13428 ;; Parameters:    Size  Location     Type
 13429 ;;		None
 13430 ;; Auto vars:     Size  Location     Type
 13431 ;;  m_units         1   30[BANK0 ] unsigned char 
 13432 ;;  m_tens          1   29[BANK0 ] unsigned char 
 13433 ;;  h_units         1   28[BANK0 ] unsigned char 
 13434 ;;  h_tens          1   27[BANK0 ] unsigned char 
 13435 ;; Return value:  Size  Location     Type
 13436 ;;                  1    wreg      void 
 13437 ;; Registers used:
 13438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13439 ;; Tracked objects:
 13440 ;;		On entry : 0/0
 13441 ;;		On exit  : 0/0
 13442 ;;		Unchanged: 0/0
 13443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13445 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13446 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13447 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13448 ;;Total ram usage:        7 bytes
 13449 ;; Hardware stack levels used:    1
 13450 ;; Hardware stack levels required when called:    9
 13451 ;; This function calls:
 13452 ;;		___awdiv
 13453 ;;		___awmod
 13454 ;;		___bmul
 13455 ;;		_increment_subfield_clk
 13456 ;;		_limitHoursUnits
 13457 ;; This function is called by:
 13458 ;;		_selectSubfield
 13459 ;; This function uses a non-reentrant model
 13460 ;;
 13461                           
 13462                           
 13463                           ;psect for function _getSubfieldInfo
 13464  020A                     _getSubfieldInfo:	
 13465  020A                     l6795:	
 13466                           ;incstack = 0
 13467                           ; Regs used in _getSubfieldInfo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13468                           
 13469                           
 13470                           ;main.c: 393:     unsigned char h_tens, h_units, m_tens, m_units;;main.c: 395:     switc
      +                          h(mode_field_subfield[0]){
 13471  020A  2B0D               	goto	l6831
 13472  020B                     l1345:	
 13473                           ;main.c: 396:         case 1:
 13474                           
 13475                           
 13476                           ;main.c: 397:             PIE4bits.TMR1IE = 0;
 13477  020B  002E               	movlb	14	; select bank14
 13478  020C  101A               	bcf	26,0	;volatile
 13479  020D                     l6797:	
 13480                           
 13481                           ;main.c: 398:             h_tens = clkh / 10;
 13482  020D  300A               	movlw	10
 13483  020E  0020               	movlb	0	; select bank0
 13484  020F  00A3               	movwf	___awdiv@divisor
 13485  0210  3000               	movlw	0
 13486  0211  00A4               	movwf	___awdiv@divisor+1
 13487  0212  085E               	movf	_clkh,w	;volatile
 13488  0213  00B8               	movwf	??_getSubfieldInfo
 13489  0214  01B9               	clrf	??_getSubfieldInfo+1
 13490  0215  0838               	movf	??_getSubfieldInfo,w
 13491  0216  00A5               	movwf	___awdiv@dividend
 13492  0217  0839               	movf	??_getSubfieldInfo+1,w
 13493  0218  00A6               	movwf	___awdiv@dividend+1
 13494  0219  3184  2442  3182   	fcall	___awdiv
 13495  021C  0020               	movlb	0	; select bank0
 13496  021D  0823               	movf	?___awdiv,w
 13497  021E  00BA               	movwf	??_getSubfieldInfo+2
 13498  021F  083A               	movf	??_getSubfieldInfo+2,w
 13499  0220  00BB               	movwf	getSubfieldInfo@h_tens
 13500                           
 13501                           ;main.c: 399:             h_units = clkh % 10;
 13502  0221  300A               	movlw	10
 13503  0222  00A3               	movwf	___awmod@divisor
 13504  0223  3000               	movlw	0
 13505  0224  00A4               	movwf	___awmod@divisor+1
 13506  0225  085E               	movf	_clkh,w	;volatile
 13507  0226  00B8               	movwf	??_getSubfieldInfo
 13508  0227  01B9               	clrf	??_getSubfieldInfo+1
 13509  0228  0838               	movf	??_getSubfieldInfo,w
 13510  0229  00A5               	movwf	___awmod@dividend
 13511  022A  0839               	movf	??_getSubfieldInfo+1,w
 13512  022B  00A6               	movwf	___awmod@dividend+1
 13513  022C  3186  2605  3182   	fcall	___awmod
 13514  022F  0020               	movlb	0	; select bank0
 13515  0230  0823               	movf	?___awmod,w
 13516  0231  00BA               	movwf	??_getSubfieldInfo+2
 13517  0232  083A               	movf	??_getSubfieldInfo+2,w
 13518  0233  00BC               	movwf	getSubfieldInfo@h_units
 13519                           
 13520                           ;main.c: 400:             m_tens = clkm / 10;
 13521  0234  300A               	movlw	10
 13522  0235  00A3               	movwf	___awdiv@divisor
 13523  0236  3000               	movlw	0
 13524  0237  00A4               	movwf	___awdiv@divisor+1
 13525  0238  085D               	movf	_clkm,w	;volatile
 13526  0239  00B8               	movwf	??_getSubfieldInfo
 13527  023A  01B9               	clrf	??_getSubfieldInfo+1
 13528  023B  0838               	movf	??_getSubfieldInfo,w
 13529  023C  00A5               	movwf	___awdiv@dividend
 13530  023D  0839               	movf	??_getSubfieldInfo+1,w
 13531  023E  00A6               	movwf	___awdiv@dividend+1
 13532  023F  3184  2442  3182   	fcall	___awdiv
 13533  0242  0020               	movlb	0	; select bank0
 13534  0243  0823               	movf	?___awdiv,w
 13535  0244  00BA               	movwf	??_getSubfieldInfo+2
 13536  0245  083A               	movf	??_getSubfieldInfo+2,w
 13537  0246  00BD               	movwf	getSubfieldInfo@m_tens
 13538                           
 13539                           ;main.c: 401:             m_units = clkm % 10;
 13540  0247  300A               	movlw	10
 13541  0248  00A3               	movwf	___awmod@divisor
 13542  0249  3000               	movlw	0
 13543  024A  00A4               	movwf	___awmod@divisor+1
 13544  024B  085D               	movf	_clkm,w	;volatile
 13545  024C  00B8               	movwf	??_getSubfieldInfo
 13546  024D  01B9               	clrf	??_getSubfieldInfo+1
 13547  024E  0838               	movf	??_getSubfieldInfo,w
 13548  024F  00A5               	movwf	___awmod@dividend
 13549  0250  0839               	movf	??_getSubfieldInfo+1,w
 13550  0251  00A6               	movwf	___awmod@dividend+1
 13551  0252  3186  2605  3182   	fcall	___awmod
 13552  0255  0020               	movlb	0	; select bank0
 13553  0256  0823               	movf	?___awmod,w
 13554  0257  00BA               	movwf	??_getSubfieldInfo+2
 13555  0258  083A               	movf	??_getSubfieldInfo+2,w
 13556  0259  00BE               	movwf	getSubfieldInfo@m_units
 13557                           
 13558                           ;main.c: 403:             switch(mode_field_subfield[1]){
 13559  025A  2A9D               	goto	l6809
 13560  025B                     l6799:	
 13561                           
 13562                           ;main.c: 405:                    h_tens = increment_subfield_clk(2, h_tens);
 13563  025B  083B               	movf	getSubfieldInfo@h_tens,w
 13564  025C  00B8               	movwf	??_getSubfieldInfo
 13565  025D  01B9               	clrf	??_getSubfieldInfo+1
 13566  025E  0838               	movf	??_getSubfieldInfo,w
 13567  025F  00B2               	movwf	increment_subfield_clk@init_val
 13568  0260  0839               	movf	??_getSubfieldInfo+1,w
 13569  0261  00B3               	movwf	increment_subfield_clk@init_val+1
 13570  0262  3002               	movlw	2
 13571  0263  3185  25B1  3182   	fcall	_increment_subfield_clk
 13572  0266  0020               	movlb	0	; select bank0
 13573  0267  00BA               	movwf	??_getSubfieldInfo+2
 13574  0268  083A               	movf	??_getSubfieldInfo+2,w
 13575  0269  00BB               	movwf	getSubfieldInfo@h_tens
 13576                           
 13577                           ;main.c: 406:                  break;
 13578  026A  2AB0               	goto	l6811
 13579  026B                     l6801:	
 13580                           
 13581                           ;main.c: 408:                     h_units = increment_subfield_clk( limitHoursUnits() , 
      +                          h_units);
 13582  026B  083C               	movf	getSubfieldInfo@h_units,w
 13583  026C  00B8               	movwf	??_getSubfieldInfo
 13584  026D  01B9               	clrf	??_getSubfieldInfo+1
 13585  026E  0838               	movf	??_getSubfieldInfo,w
 13586  026F  00B2               	movwf	increment_subfield_clk@init_val
 13587  0270  0839               	movf	??_getSubfieldInfo+1,w
 13588  0271  00B3               	movwf	increment_subfield_clk@init_val+1
 13589  0272  318C  24CD  3182   	fcall	_limitHoursUnits
 13590  0275  3185  25B1  3182   	fcall	_increment_subfield_clk
 13591  0278  0020               	movlb	0	; select bank0
 13592  0279  00BA               	movwf	??_getSubfieldInfo+2
 13593  027A  083A               	movf	??_getSubfieldInfo+2,w
 13594  027B  00BC               	movwf	getSubfieldInfo@h_units
 13595                           
 13596                           ;main.c: 409:                  break;
 13597  027C  2AB0               	goto	l6811
 13598  027D                     l6803:	
 13599                           
 13600                           ;main.c: 411:                     m_tens = increment_subfield_clk( 5 , m_tens);
 13601  027D  083D               	movf	getSubfieldInfo@m_tens,w
 13602  027E  00B8               	movwf	??_getSubfieldInfo
 13603  027F  01B9               	clrf	??_getSubfieldInfo+1
 13604  0280  0838               	movf	??_getSubfieldInfo,w
 13605  0281  00B2               	movwf	increment_subfield_clk@init_val
 13606  0282  0839               	movf	??_getSubfieldInfo+1,w
 13607  0283  00B3               	movwf	increment_subfield_clk@init_val+1
 13608  0284  3005               	movlw	5
 13609  0285  3185  25B1  3182   	fcall	_increment_subfield_clk
 13610  0288  0020               	movlb	0	; select bank0
 13611  0289  00BA               	movwf	??_getSubfieldInfo+2
 13612  028A  083A               	movf	??_getSubfieldInfo+2,w
 13613  028B  00BD               	movwf	getSubfieldInfo@m_tens
 13614                           
 13615                           ;main.c: 412:                  break;
 13616  028C  2AB0               	goto	l6811
 13617  028D                     l6805:	
 13618                           
 13619                           ;main.c: 414:                  m_units = increment_subfield_clk( 9, m_units);
 13620  028D  083E               	movf	getSubfieldInfo@m_units,w
 13621  028E  00B8               	movwf	??_getSubfieldInfo
 13622  028F  01B9               	clrf	??_getSubfieldInfo+1
 13623  0290  0838               	movf	??_getSubfieldInfo,w
 13624  0291  00B2               	movwf	increment_subfield_clk@init_val
 13625  0292  0839               	movf	??_getSubfieldInfo+1,w
 13626  0293  00B3               	movwf	increment_subfield_clk@init_val+1
 13627  0294  3009               	movlw	9
 13628  0295  3185  25B1  3182   	fcall	_increment_subfield_clk
 13629  0298  0020               	movlb	0	; select bank0
 13630  0299  00BA               	movwf	??_getSubfieldInfo+2
 13631  029A  083A               	movf	??_getSubfieldInfo+2,w
 13632  029B  00BE               	movwf	getSubfieldInfo@m_units
 13633                           
 13634                           ;main.c: 415:                      break;
 13635  029C  2AB0               	goto	l6811
 13636  029D                     l6809:	
 13637                           
 13638                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13639                           ; Switch size 1, requested type "simple"
 13640                           ; Number of cases is 1, Range of values is 0 to 0
 13641                           ; switch strategies available:
 13642                           ; Name         Instructions Cycles
 13643                           ; simple_byte            4     3 (average)
 13644                           ; direct_byte            8     6 (fixed)
 13645                           ; jumptable            260     6 (fixed)
 13646                           ;	Chosen strategy is simple_byte
 13647  029D  0864               	movf	_mode_field_subfield+3,w
 13648  029E  3A00               	xorlw	0	; case 0
 13649  029F  1903               	skipnz
 13650  02A0  2AA2               	goto	l7809
 13651  02A1  2AB0               	goto	l6811
 13652  02A2                     l7809:	
 13653                           
 13654                           ; Switch size 1, requested type "simple"
 13655                           ; Number of cases is 4, Range of values is 1 to 4
 13656                           ; switch strategies available:
 13657                           ; Name         Instructions Cycles
 13658                           ; simple_byte           13     7 (average)
 13659                           ; direct_byte           17     9 (fixed)
 13660                           ; jumptable            263     9 (fixed)
 13661                           ;	Chosen strategy is simple_byte
 13662  02A2  0863               	movf	_mode_field_subfield+2,w
 13663  02A3  3A01               	xorlw	1	; case 1
 13664  02A4  1903               	skipnz
 13665  02A5  2A5B               	goto	l6799
 13666  02A6  3A03               	xorlw	3	; case 2
 13667  02A7  1903               	skipnz
 13668  02A8  2A6B               	goto	l6801
 13669  02A9  3A01               	xorlw	1	; case 3
 13670  02AA  1903               	skipnz
 13671  02AB  2A7D               	goto	l6803
 13672  02AC  3A07               	xorlw	7	; case 4
 13673  02AD  1903               	skipnz
 13674  02AE  2A8D               	goto	l6805
 13675  02AF  2AB0               	goto	l6811
 13676  02B0                     l6811:	
 13677                           
 13678                           ;main.c: 418:             clkh = 10*h_tens + h_units;
 13679  02B0  300A               	movlw	10
 13680  02B1  00B8               	movwf	??_getSubfieldInfo
 13681  02B2  0838               	movf	??_getSubfieldInfo,w
 13682  02B3  00A3               	movwf	___bmul@multiplicand
 13683  02B4  083B               	movf	getSubfieldInfo@h_tens,w
 13684  02B5  318C  240A  3182   	fcall	___bmul
 13685  02B8  0020               	movlb	0	; select bank0
 13686  02B9  073C               	addwf	getSubfieldInfo@h_units,w
 13687  02BA  00B9               	movwf	??_getSubfieldInfo+1
 13688  02BB  0839               	movf	??_getSubfieldInfo+1,w
 13689  02BC  00DE               	movwf	_clkh	;volatile
 13690                           
 13691                           ;main.c: 419:             clkm = 10*m_tens + m_units;
 13692  02BD  300A               	movlw	10
 13693  02BE  00B8               	movwf	??_getSubfieldInfo
 13694  02BF  0838               	movf	??_getSubfieldInfo,w
 13695  02C0  00A3               	movwf	___bmul@multiplicand
 13696  02C1  083D               	movf	getSubfieldInfo@m_tens,w
 13697  02C2  318C  240A  3182   	fcall	___bmul
 13698  02C5  0020               	movlb	0	; select bank0
 13699  02C6  073E               	addwf	getSubfieldInfo@m_units,w
 13700  02C7  00B9               	movwf	??_getSubfieldInfo+1
 13701  02C8  0839               	movf	??_getSubfieldInfo+1,w
 13702  02C9  00DD               	movwf	_clkm	;volatile
 13703  02CA                     l6813:	
 13704                           
 13705                           ;main.c: 420:       PIE4bits.TMR1IE = 0;
 13706  02CA  002E               	movlb	14	; select bank14
 13707  02CB  101A               	bcf	26,0	;volatile
 13708                           
 13709                           ;main.c: 422:         break;
 13710  02CC  2B21               	goto	l1360
 13711  02CD                     l6815:	
 13712                           
 13713                           ;main.c: 425:             subfield_info.limit = (unsigned char(*)(void))1;
 13714  02CD  3001               	movlw	1
 13715  02CE  00CB               	movwf	_subfield_info
 13716  02CF  3000               	movlw	0
 13717  02D0  00CC               	movwf	_subfield_info+1
 13718                           
 13719                           ;main.c: 426:             subfield_info.reconstruct_subfield = &recAlarm;
 13720  02D1  3000               	movlw	0
 13721  02D2  00CD               	movwf	low ((_subfield_info| 0+2))
 13722  02D3  3000               	movlw	0
 13723  02D4  00CE               	movwf	(low ((_subfield_info| 0+2))+1)
 13724  02D5                     l6817:	
 13725                           
 13726                           ;main.c: 427:             alaf = increment_subfield_clk( 1, alaf );
 13727  02D5  0853               	movf	_alaf,w
 13728  02D6  00B8               	movwf	??_getSubfieldInfo
 13729  02D7  01B9               	clrf	??_getSubfieldInfo+1
 13730  02D8  0838               	movf	??_getSubfieldInfo,w
 13731  02D9  00B2               	movwf	increment_subfield_clk@init_val
 13732  02DA  0839               	movf	??_getSubfieldInfo+1,w
 13733  02DB  00B3               	movwf	increment_subfield_clk@init_val+1
 13734  02DC  3001               	movlw	1
 13735  02DD  3185  25B1  3182   	fcall	_increment_subfield_clk
 13736  02E0  0020               	movlb	0	; select bank0
 13737  02E1  00BA               	movwf	??_getSubfieldInfo+2
 13738  02E2  083A               	movf	??_getSubfieldInfo+2,w
 13739  02E3  00D3               	movwf	_alaf
 13740                           
 13741                           ;main.c: 428:  break;
 13742  02E4  2B21               	goto	l1360
 13743  02E5                     l6819:	
 13744                           
 13745                           ;main.c: 433:                     subfield_info.limit = (unsigned char(*)(void))5;
 13746  02E5  3005               	movlw	5
 13747  02E6  00CB               	movwf	_subfield_info
 13748  02E7  3000               	movlw	0
 13749  02E8  00CC               	movwf	_subfield_info+1
 13750                           
 13751                           ;main.c: 434:                     subfield_info.reconstruct_subfield = &recTempThresh;
 13752  02E9  3000               	movlw	0
 13753  02EA  00CD               	movwf	low ((_subfield_info| 0+2))
 13754  02EB  3000               	movlw	0
 13755  02EC  00CE               	movwf	(low ((_subfield_info| 0+2))+1)
 13756                           
 13757                           ;main.c: 435:                 break;
 13758  02ED  2B21               	goto	l1360
 13759  02EE                     l6821:	
 13760                           
 13761                           ;main.c: 437:                     subfield_info.limit = &limitTempThreshUnits;
 13762  02EE  3000               	movlw	0
 13763  02EF  00CB               	movwf	_subfield_info
 13764  02F0  3000               	movlw	0
 13765  02F1  00CC               	movwf	_subfield_info+1
 13766                           
 13767                           ;main.c: 438:                     subfield_info.reconstruct_subfield = &recTempThresh;
 13768  02F2  3000               	movlw	0
 13769  02F3  00CD               	movwf	low ((_subfield_info| 0+2))
 13770  02F4  3000               	movlw	0
 13771  02F5  00CE               	movwf	(low ((_subfield_info| 0+2))+1)
 13772                           
 13773                           ;main.c: 439:                 break;
 13774  02F6  2B21               	goto	l1360
 13775  02F7                     l6825:	
 13776                           
 13777                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13778                           ; Switch size 1, requested type "simple"
 13779                           ; Number of cases is 1, Range of values is 0 to 0
 13780                           ; switch strategies available:
 13781                           ; Name         Instructions Cycles
 13782                           ; simple_byte            4     3 (average)
 13783                           ; direct_byte            8     6 (fixed)
 13784                           ; jumptable            260     6 (fixed)
 13785                           ;	Chosen strategy is simple_byte
 13786  02F7  0864               	movf	_mode_field_subfield+3,w
 13787  02F8  3A00               	xorlw	0	; case 0
 13788  02F9  1903               	skipnz
 13789  02FA  2AFC               	goto	l7811
 13790  02FB  2B21               	goto	l1360
 13791  02FC                     l7811:	
 13792                           
 13793                           ; Switch size 1, requested type "simple"
 13794                           ; Number of cases is 2, Range of values is 1 to 2
 13795                           ; switch strategies available:
 13796                           ; Name         Instructions Cycles
 13797                           ; simple_byte            7     4 (average)
 13798                           ; direct_byte           13     9 (fixed)
 13799                           ; jumptable            263     9 (fixed)
 13800                           ;	Chosen strategy is simple_byte
 13801  02FC  0863               	movf	_mode_field_subfield+2,w
 13802  02FD  3A01               	xorlw	1	; case 1
 13803  02FE  1903               	skipnz
 13804  02FF  2AE5               	goto	l6819
 13805  0300  3A03               	xorlw	3	; case 2
 13806  0301  1903               	skipnz
 13807  0302  2AEE               	goto	l6821
 13808  0303  2B21               	goto	l1360
 13809  0304                     l6827:	
 13810                           
 13811                           ;main.c: 444:             subfield_info.limit = (unsigned char(*)(void))3;
 13812  0304  3003               	movlw	3
 13813  0305  00CB               	movwf	_subfield_info
 13814  0306  3000               	movlw	0
 13815  0307  00CC               	movwf	_subfield_info+1
 13816                           
 13817                           ;main.c: 445:             subfield_info.reconstruct_subfield = &recLumThresh;
 13818  0308  3000               	movlw	0
 13819  0309  00CD               	movwf	low ((_subfield_info| 0+2))
 13820  030A  3000               	movlw	0
 13821  030B  00CE               	movwf	(low ((_subfield_info| 0+2))+1)
 13822                           
 13823                           ;main.c: 446:         break;
 13824  030C  2B21               	goto	l1360
 13825  030D                     l6831:	
 13826                           
 13827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13828                           ; Switch size 1, requested type "simple"
 13829                           ; Number of cases is 1, Range of values is 0 to 0
 13830                           ; switch strategies available:
 13831                           ; Name         Instructions Cycles
 13832                           ; simple_byte            4     3 (average)
 13833                           ; direct_byte            8     6 (fixed)
 13834                           ; jumptable            260     6 (fixed)
 13835                           ;	Chosen strategy is simple_byte
 13836  030D  0020               	movlb	0	; select bank0
 13837  030E  0862               	movf	_mode_field_subfield+1,w
 13838  030F  3A00               	xorlw	0	; case 0
 13839  0310  1903               	skipnz
 13840  0311  2B13               	goto	l7813
 13841  0312  2B21               	goto	l1360
 13842  0313                     l7813:	
 13843                           
 13844                           ; Switch size 1, requested type "simple"
 13845                           ; Number of cases is 4, Range of values is 1 to 4
 13846                           ; switch strategies available:
 13847                           ; Name         Instructions Cycles
 13848                           ; simple_byte           13     7 (average)
 13849                           ; direct_byte           17     9 (fixed)
 13850                           ; jumptable            263     9 (fixed)
 13851                           ;	Chosen strategy is simple_byte
 13852  0313  0861               	movf	_mode_field_subfield,w
 13853  0314  3A01               	xorlw	1	; case 1
 13854  0315  1903               	skipnz
 13855  0316  2A0B               	goto	l1345
 13856  0317  3A03               	xorlw	3	; case 2
 13857  0318  1903               	skipnz
 13858  0319  2ACD               	goto	l6815
 13859  031A  3A01               	xorlw	1	; case 3
 13860  031B  1903               	skipnz
 13861  031C  2AF7               	goto	l6825
 13862  031D  3A07               	xorlw	7	; case 4
 13863  031E  1903               	skipnz
 13864  031F  2B04               	goto	l6827
 13865  0320  2B21               	goto	l1360
 13866  0321                     l1360:	
 13867  0321  0008               	return
 13868  0322                     __end_of_getSubfieldInfo:	
 13869                           
 13870                           	psect	text20
 13871  0CCD                     __ptext20:	
 13872 ;; *************** function _limitHoursUnits *****************
 13873 ;; Defined at:
 13874 ;;		line 532 in file "main.c"
 13875 ;; Parameters:    Size  Location     Type
 13876 ;;		None
 13877 ;; Auto vars:     Size  Location     Type
 13878 ;;		None
 13879 ;; Return value:  Size  Location     Type
 13880 ;;                  1    wreg      unsigned char 
 13881 ;; Registers used:
 13882 ;;		wreg, status,2, status,0, pclath, cstack
 13883 ;; Tracked objects:
 13884 ;;		On entry : 0/0
 13885 ;;		On exit  : 0/0
 13886 ;;		Unchanged: 0/0
 13887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13890 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13891 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13892 ;;Total ram usage:        2 bytes
 13893 ;; Hardware stack levels used:    1
 13894 ;; Hardware stack levels required when called:    7
 13895 ;; This function calls:
 13896 ;;		___awdiv
 13897 ;; This function is called by:
 13898 ;;		_getSubfieldInfo
 13899 ;; This function uses a non-reentrant model
 13900 ;;
 13901                           
 13902                           
 13903                           ;psect for function _limitHoursUnits
 13904  0CCD                     _limitHoursUnits:	
 13905  0CCD                     l6659:	
 13906                           ;incstack = 0
 13907                           ; Regs used in _limitHoursUnits: [wreg+status,2+status,0+pclath+cstack]
 13908                           
 13909                           
 13910                           ;main.c: 534:     if((clkh / 10) == 2){
 13911  0CCD  300A               	movlw	10
 13912  0CCE  0020               	movlb	0	; select bank0
 13913  0CCF  00A3               	movwf	___awdiv@divisor
 13914  0CD0  3000               	movlw	0
 13915  0CD1  00A4               	movwf	___awdiv@divisor+1
 13916  0CD2  085E               	movf	_clkh,w	;volatile
 13917  0CD3  00AC               	movwf	??_limitHoursUnits
 13918  0CD4  01AD               	clrf	??_limitHoursUnits+1
 13919  0CD5  082C               	movf	??_limitHoursUnits,w
 13920  0CD6  00A5               	movwf	___awdiv@dividend
 13921  0CD7  082D               	movf	??_limitHoursUnits+1,w
 13922  0CD8  00A6               	movwf	___awdiv@dividend+1
 13923  0CD9  3184  2442  318C   	fcall	___awdiv
 13924  0CDC  3002               	movlw	2
 13925  0CDD  0020               	movlb	0	; select bank0
 13926  0CDE  0623               	xorwf	?___awdiv,w
 13927  0CDF  0424               	iorwf	?___awdiv+1,w
 13928  0CE0  1D03               	btfss	3,2
 13929  0CE1  2CE3               	goto	u3831
 13930  0CE2  2CE4               	goto	u3830
 13931  0CE3                     u3831:	
 13932  0CE3  2CE6               	goto	l6667
 13933  0CE4                     u3830:	
 13934  0CE4                     l6661:	
 13935                           
 13936                           ;main.c: 535:         return 3;
 13937  0CE4  3003               	movlw	3
 13938  0CE5  2CE7               	goto	l1390
 13939  0CE6                     l6667:	
 13940                           
 13941                           ;main.c: 537:         return 9;
 13942  0CE6  3009               	movlw	9
 13943  0CE7                     l1390:	
 13944  0CE7  0008               	return
 13945  0CE8                     __end_of_limitHoursUnits:	
 13946                           
 13947                           	psect	text21
 13948  0442                     __ptext21:	
 13949 ;; *************** function ___awdiv *****************
 13950 ;; Defined at:
 13951 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 13952 ;; Parameters:    Size  Location     Type
 13953 ;;  divisor         2    3[BANK0 ] int 
 13954 ;;  dividend        2    5[BANK0 ] int 
 13955 ;; Auto vars:     Size  Location     Type
 13956 ;;  quotient        2   10[BANK0 ] int 
 13957 ;;  sign            1    9[BANK0 ] unsigned char 
 13958 ;;  counter         1    8[BANK0 ] unsigned char 
 13959 ;; Return value:  Size  Location     Type
 13960 ;;                  2    3[BANK0 ] int 
 13961 ;; Registers used:
 13962 ;;		wreg, status,2, status,0
 13963 ;; Tracked objects:
 13964 ;;		On entry : 0/0
 13965 ;;		On exit  : 0/0
 13966 ;;		Unchanged: 0/0
 13967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13968 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13969 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13970 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13971 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13972 ;;Total ram usage:        9 bytes
 13973 ;; Hardware stack levels used:    1
 13974 ;; Hardware stack levels required when called:    6
 13975 ;; This function calls:
 13976 ;;		Nothing
 13977 ;; This function is called by:
 13978 ;;		_getSubfieldInfo
 13979 ;;		_recTempThresh
 13980 ;;		_limitTempThreshUnits
 13981 ;;		_limitHoursUnits
 13982 ;;		_recMinutes
 13983 ;;		_recHour
 13984 ;; This function uses a non-reentrant model
 13985 ;;
 13986                           
 13987                           
 13988                           ;psect for function ___awdiv
 13989  0442                     ___awdiv:	
 13990  0442                     l6537:	
 13991                           ;incstack = 0
 13992                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13993                           
 13994  0442  0020               	movlb	0	; select bank0
 13995  0443  01A9               	clrf	___awdiv@sign
 13996  0444                     l6539:	
 13997  0444  1FA4               	btfss	___awdiv@divisor+1,7
 13998  0445  2C47               	goto	u3661
 13999  0446  2C48               	goto	u3660
 14000  0447                     u3661:	
 14001  0447  2C4F               	goto	l6545
 14002  0448                     u3660:	
 14003  0448                     l6541:	
 14004  0448  09A3               	comf	___awdiv@divisor,f
 14005  0449  09A4               	comf	___awdiv@divisor+1,f
 14006  044A  0AA3               	incf	___awdiv@divisor,f
 14007  044B  1903               	skipnz
 14008  044C  0AA4               	incf	___awdiv@divisor+1,f
 14009  044D                     l6543:	
 14010  044D  01A9               	clrf	___awdiv@sign
 14011  044E  0AA9               	incf	___awdiv@sign,f
 14012  044F                     l6545:	
 14013  044F  1FA6               	btfss	___awdiv@dividend+1,7
 14014  0450  2C52               	goto	u3671
 14015  0451  2C53               	goto	u3670
 14016  0452                     u3671:	
 14017  0452  2C5C               	goto	l6551
 14018  0453                     u3670:	
 14019  0453                     l6547:	
 14020  0453  09A5               	comf	___awdiv@dividend,f
 14021  0454  09A6               	comf	___awdiv@dividend+1,f
 14022  0455  0AA5               	incf	___awdiv@dividend,f
 14023  0456  1903               	skipnz
 14024  0457  0AA6               	incf	___awdiv@dividend+1,f
 14025  0458                     l6549:	
 14026  0458  3001               	movlw	1
 14027  0459  00A7               	movwf	??___awdiv
 14028  045A  0827               	movf	??___awdiv,w
 14029  045B  06A9               	xorwf	___awdiv@sign,f
 14030  045C                     l6551:	
 14031  045C  01AA               	clrf	___awdiv@quotient
 14032  045D  01AB               	clrf	___awdiv@quotient+1
 14033  045E                     l6553:	
 14034  045E  0823               	movf	___awdiv@divisor,w
 14035  045F  0424               	iorwf	___awdiv@divisor+1,w
 14036  0460  1903               	btfsc	3,2
 14037  0461  2C63               	goto	u3681
 14038  0462  2C64               	goto	u3680
 14039  0463                     u3681:	
 14040  0463  2C93               	goto	l6573
 14041  0464                     u3680:	
 14042  0464                     l6555:	
 14043  0464  01A8               	clrf	___awdiv@counter
 14044  0465  0AA8               	incf	___awdiv@counter,f
 14045  0466  2C70               	goto	l6561
 14046  0467                     l6557:	
 14047  0467  3001               	movlw	1
 14048  0468                     u3695:	
 14049  0468  35A3               	lslf	___awdiv@divisor,f
 14050  0469  0DA4               	rlf	___awdiv@divisor+1,f
 14051  046A  0B89               	decfsz	9,f
 14052  046B  2C68               	goto	u3695
 14053  046C                     l6559:	
 14054  046C  3001               	movlw	1
 14055  046D  00A7               	movwf	??___awdiv
 14056  046E  0827               	movf	??___awdiv,w
 14057  046F  07A8               	addwf	___awdiv@counter,f
 14058  0470                     l6561:	
 14059  0470  1FA4               	btfss	___awdiv@divisor+1,7
 14060  0471  2C73               	goto	u3701
 14061  0472  2C74               	goto	u3700
 14062  0473                     u3701:	
 14063  0473  2C67               	goto	l6557
 14064  0474                     u3700:	
 14065  0474                     l6563:	
 14066  0474  3001               	movlw	1
 14067  0475                     u3715:	
 14068  0475  35AA               	lslf	___awdiv@quotient,f
 14069  0476  0DAB               	rlf	___awdiv@quotient+1,f
 14070  0477  0B89               	decfsz	9,f
 14071  0478  2C75               	goto	u3715
 14072  0479  0824               	movf	___awdiv@divisor+1,w
 14073  047A  0226               	subwf	___awdiv@dividend+1,w
 14074  047B  1D03               	skipz
 14075  047C  2C7F               	goto	u3725
 14076  047D  0823               	movf	___awdiv@divisor,w
 14077  047E  0225               	subwf	___awdiv@dividend,w
 14078  047F                     u3725:	
 14079  047F  1C03               	skipc
 14080  0480  2C82               	goto	u3721
 14081  0481  2C83               	goto	u3720
 14082  0482                     u3721:	
 14083  0482  2C88               	goto	l6569
 14084  0483                     u3720:	
 14085  0483                     l6565:	
 14086  0483  0823               	movf	___awdiv@divisor,w
 14087  0484  02A5               	subwf	___awdiv@dividend,f
 14088  0485  0824               	movf	___awdiv@divisor+1,w
 14089  0486  3BA6               	subwfb	___awdiv@dividend+1,f
 14090  0487                     l6567:	
 14091  0487  142A               	bsf	___awdiv@quotient,0
 14092  0488                     l6569:	
 14093  0488  3001               	movlw	1
 14094  0489                     u3735:	
 14095  0489  36A4               	lsrf	___awdiv@divisor+1,f
 14096  048A  0CA3               	rrf	___awdiv@divisor,f
 14097  048B  0B89               	decfsz	9,f
 14098  048C  2C89               	goto	u3735
 14099  048D                     l6571:	
 14100  048D  3001               	movlw	1
 14101  048E  02A8               	subwf	___awdiv@counter,f
 14102  048F  1D03               	btfss	3,2
 14103  0490  2C92               	goto	u3741
 14104  0491  2C93               	goto	u3740
 14105  0492                     u3741:	
 14106  0492  2C74               	goto	l6563
 14107  0493                     u3740:	
 14108  0493                     l6573:	
 14109  0493  0829               	movf	___awdiv@sign,w
 14110  0494  1903               	btfsc	3,2
 14111  0495  2C97               	goto	u3751
 14112  0496  2C98               	goto	u3750
 14113  0497                     u3751:	
 14114  0497  2C9D               	goto	l6577
 14115  0498                     u3750:	
 14116  0498                     l6575:	
 14117  0498  09AA               	comf	___awdiv@quotient,f
 14118  0499  09AB               	comf	___awdiv@quotient+1,f
 14119  049A  0AAA               	incf	___awdiv@quotient,f
 14120  049B  1903               	skipnz
 14121  049C  0AAB               	incf	___awdiv@quotient+1,f
 14122  049D                     l6577:	
 14123  049D  082B               	movf	___awdiv@quotient+1,w
 14124  049E  00A4               	movwf	?___awdiv+1
 14125  049F  082A               	movf	___awdiv@quotient,w
 14126  04A0  00A3               	movwf	?___awdiv
 14127  04A1                     l2034:	
 14128  04A1  0008               	return
 14129  04A2                     __end_of___awdiv:	
 14130                           
 14131                           	psect	text22
 14132  05B1                     __ptext22:	
 14133 ;; *************** function _increment_subfield_clk *****************
 14134 ;; Defined at:
 14135 ;;		line 583 in file "main.c"
 14136 ;; Parameters:    Size  Location     Type
 14137 ;;  limit           1    wreg     unsigned char 
 14138 ;;  init_val        2   18[BANK0 ] unsigned int 
 14139 ;; Auto vars:     Size  Location     Type
 14140 ;;  limit           1   22[BANK0 ] unsigned char 
 14141 ;;  _value          1   23[BANK0 ] unsigned char 
 14142 ;;  exit            1   21[BANK0 ] unsigned char 
 14143 ;; Return value:  Size  Location     Type
 14144 ;;                  1    wreg      unsigned char 
 14145 ;; Registers used:
 14146 ;;		wreg, status,2, status,0, pclath, cstack
 14147 ;; Tracked objects:
 14148 ;;		On entry : 0/0
 14149 ;;		On exit  : 0/0
 14150 ;;		Unchanged: 0/0
 14151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14152 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14153 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14154 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14155 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14156 ;;Total ram usage:        6 bytes
 14157 ;; Hardware stack levels used:    1
 14158 ;; Hardware stack levels required when called:    8
 14159 ;; This function calls:
 14160 ;;		_PWM6_LoadDutyValue
 14161 ;;		_checkDebounceSW1
 14162 ;;		_checkDebounceSW2
 14163 ;;		_representLed
 14164 ;; This function is called by:
 14165 ;;		_getSubfieldInfo
 14166 ;; This function uses a non-reentrant model
 14167 ;;
 14168                           
 14169                           
 14170                           ;psect for function _increment_subfield_clk
 14171  05B1                     _increment_subfield_clk:	
 14172                           
 14173                           ;incstack = 0
 14174                           ; Regs used in _increment_subfield_clk: [wreg+status,2+status,0+pclath+cstack]
 14175                           ;increment_subfield_clk@limit stored from wreg
 14176  05B1  0020               	movlb	0	; select bank0
 14177  05B2  00B6               	movwf	increment_subfield_clk@limit
 14178  05B3                     l6619:	
 14179                           
 14180                           ;main.c: 585:     unsigned char exit = 0;
 14181  05B3  01B5               	clrf	increment_subfield_clk@exit
 14182  05B4                     l6621:	
 14183                           
 14184                           ;main.c: 586:     unsigned char _value = init_val;
 14185  05B4  0832               	movf	increment_subfield_clk@init_val,w
 14186  05B5  00B4               	movwf	??_increment_subfield_clk
 14187  05B6  0834               	movf	??_increment_subfield_clk,w
 14188  05B7  00B7               	movwf	increment_subfield_clk@_value
 14189  05B8                     l6623:	
 14190                           
 14191                           ;main.c: 588:     PWM6_LoadDutyValue(0);
 14192  05B8  3000               	movlw	0
 14193  05B9  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 14194  05BA  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 14195  05BB  318C  2480  3185   	fcall	_PWM6_LoadDutyValue
 14196  05BE                     l6625:	
 14197                           
 14198                           ;main.c: 589:     LATA = 0;
 14199  05BE  0020               	movlb	0	; select bank0
 14200  05BF  0196               	clrf	22	;volatile
 14201  05C0                     l6627:	
 14202                           
 14203                           ;main.c: 591:     if(_value > limit) _value = 0;
 14204  05C0  0837               	movf	increment_subfield_clk@_value,w
 14205  05C1  0236               	subwf	increment_subfield_clk@limit,w
 14206  05C2  1803               	skipnc
 14207  05C3  2DC5               	goto	u3761
 14208  05C4  2DC6               	goto	u3760
 14209  05C5                     u3761:	
 14210  05C5  2DFE               	goto	l6653
 14211  05C6                     u3760:	
 14212  05C6                     l6629:	
 14213  05C6  01B7               	clrf	increment_subfield_clk@_value
 14214  05C7  2DFE               	goto	l6653
 14215  05C8                     l6631:	
 14216                           
 14217                           ;main.c: 594:      representLed(_value);
 14218  05C8  0837               	movf	increment_subfield_clk@_value,w
 14219  05C9  3186  26FB  3185   	fcall	_representLed
 14220  05CC                     l6633:	
 14221                           
 14222                           ;main.c: 595:         if(!PORTCbits.RC5){
 14223  05CC  0020               	movlb	0	; select bank0
 14224  05CD  1A8E               	btfsc	14,5	;volatile
 14225  05CE  2DD0               	goto	u3771
 14226  05CF  2DD1               	goto	u3770
 14227  05D0                     u3771:	
 14228  05D0  2DEA               	goto	l6645
 14229  05D1                     u3770:	
 14230  05D1                     l6635:	
 14231                           
 14232                           ;main.c: 596:             if(checkDebounceSW2()){
 14233  05D1  3187  2748  3185   	fcall	_checkDebounceSW2
 14234  05D4  3A00               	xorlw	0
 14235  05D5  1903               	skipnz
 14236  05D6  2DD8               	goto	u3781
 14237  05D7  2DD9               	goto	u3780
 14238  05D8                     u3781:	
 14239  05D8  2DE5               	goto	l6643
 14240  05D9                     u3780:	
 14241  05D9                     l6637:	
 14242                           
 14243                           ;main.c: 597:                 _value++;
 14244  05D9  3001               	movlw	1
 14245  05DA  0020               	movlb	0	; select bank0
 14246  05DB  00B4               	movwf	??_increment_subfield_clk
 14247  05DC  0834               	movf	??_increment_subfield_clk,w
 14248  05DD  07B7               	addwf	increment_subfield_clk@_value,f
 14249  05DE                     l6639:	
 14250                           
 14251                           ;main.c: 598:                 if(_value > limit) _value = 0;
 14252  05DE  0837               	movf	increment_subfield_clk@_value,w
 14253  05DF  0236               	subwf	increment_subfield_clk@limit,w
 14254  05E0  1803               	skipnc
 14255  05E1  2DE3               	goto	u3791
 14256  05E2  2DE4               	goto	u3790
 14257  05E3                     u3791:	
 14258  05E3  2DE5               	goto	l6643
 14259  05E4                     u3790:	
 14260  05E4                     l6641:	
 14261  05E4  01B7               	clrf	increment_subfield_clk@_value
 14262  05E5                     l6643:	
 14263                           
 14264                           ;main.c: 600:             last_ms2 = clkms;
 14265  05E5  087D               	movf	_clkms,w	;volatile
 14266  05E6  0020               	movlb	0	; select bank0
 14267  05E7  00B4               	movwf	??_increment_subfield_clk
 14268  05E8  0834               	movf	??_increment_subfield_clk,w
 14269  05E9  00DA               	movwf	_last_ms2
 14270  05EA                     l6645:	
 14271                           
 14272                           ;main.c: 603:         if(!PORTBbits.RB4){
 14273  05EA  1A0D               	btfsc	13,4	;volatile
 14274  05EB  2DED               	goto	u3801
 14275  05EC  2DEE               	goto	u3800
 14276  05ED                     u3801:	
 14277  05ED  2DFE               	goto	l6653
 14278  05EE                     u3800:	
 14279  05EE                     l6647:	
 14280                           
 14281                           ;main.c: 604:             if(checkDebounceSW1()){
 14282  05EE  3184  24FD  3185   	fcall	_checkDebounceSW1
 14283  05F1  3A00               	xorlw	0
 14284  05F2  1903               	skipnz
 14285  05F3  2DF5               	goto	u3811
 14286  05F4  2DF6               	goto	u3810
 14287  05F5                     u3811:	
 14288  05F5  2DF9               	goto	l6651
 14289  05F6                     u3810:	
 14290  05F6                     l6649:	
 14291                           
 14292                           ;main.c: 605:                 exit = 1;
 14293  05F6  0020               	movlb	0	; select bank0
 14294  05F7  01B5               	clrf	increment_subfield_clk@exit
 14295  05F8  0AB5               	incf	increment_subfield_clk@exit,f
 14296  05F9                     l6651:	
 14297                           
 14298                           ;main.c: 607:             last_ms = clkms;
 14299  05F9  087D               	movf	_clkms,w	;volatile
 14300  05FA  0020               	movlb	0	; select bank0
 14301  05FB  00B4               	movwf	??_increment_subfield_clk
 14302  05FC  0834               	movf	??_increment_subfield_clk,w
 14303  05FD  00DB               	movwf	_last_ms
 14304  05FE                     l6653:	
 14305                           
 14306                           ;main.c: 593:     while(exit == 0){
 14307  05FE  0835               	movf	increment_subfield_clk@exit,w
 14308  05FF  1903               	btfsc	3,2
 14309  0600  2E02               	goto	u3821
 14310  0601  2E03               	goto	u3820
 14311  0602                     u3821:	
 14312  0602  2DC8               	goto	l6631
 14313  0603                     u3820:	
 14314  0603                     l6655:	
 14315                           
 14316                           ;main.c: 610: return _value;
 14317  0603  0837               	movf	increment_subfield_clk@_value,w
 14318  0604                     l1415:	
 14319  0604  0008               	return
 14320  0605                     __end_of_increment_subfield_clk:	
 14321                           
 14322                           	psect	text23
 14323  06FB                     __ptext23:	
 14324 ;; *************** function _representLed *****************
 14325 ;; Defined at:
 14326 ;;		line 134 in file "leds.c"
 14327 ;; Parameters:    Size  Location     Type
 14328 ;;  val             1    wreg     unsigned char 
 14329 ;; Auto vars:     Size  Location     Type
 14330 ;;  val             1   16[BANK0 ] unsigned char 
 14331 ;;  aux             1   17[BANK0 ] unsigned char 
 14332 ;; Return value:  Size  Location     Type
 14333 ;;                  1    wreg      void 
 14334 ;; Registers used:
 14335 ;;		wreg, status,2, status,0, pclath, cstack
 14336 ;; Tracked objects:
 14337 ;;		On entry : 0/0
 14338 ;;		On exit  : 0/0
 14339 ;;		Unchanged: 0/0
 14340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14342 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14343 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14344 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14345 ;;Total ram usage:        5 bytes
 14346 ;; Hardware stack levels used:    1
 14347 ;; Hardware stack levels required when called:    7
 14348 ;; This function calls:
 14349 ;;		_PWM6_LoadDutyValue
 14350 ;;		___wmul
 14351 ;; This function is called by:
 14352 ;;		_increment_subfield_clk
 14353 ;;		_increment_subfield
 14354 ;; This function uses a non-reentrant model
 14355 ;;
 14356                           
 14357                           
 14358                           ;psect for function _representLed
 14359  06FB                     _representLed:	
 14360                           
 14361                           ;incstack = 0
 14362                           ; Regs used in _representLed: [wreg+status,2+status,0+pclath+cstack]
 14363                           ;representLed@val stored from wreg
 14364  06FB  0020               	movlb	0	; select bank0
 14365  06FC  00B0               	movwf	representLed@val
 14366  06FD                     l6525:	
 14367                           
 14368                           ;leds.c: 134: void representLed(unsigned char val);leds.c: 135: {;leds.c: 136:     unsig
      +                          ned char aux = val;
 14369  06FD  0830               	movf	representLed@val,w
 14370  06FE  00AD               	movwf	??_representLed
 14371  06FF  082D               	movf	??_representLed,w
 14372  0700  00B1               	movwf	representLed@aux
 14373                           
 14374                           ;leds.c: 137:     if(val > 99)
 14375  0701  3064               	movlw	100
 14376  0702  0230               	subwf	representLed@val,w
 14377  0703  1C03               	skipc
 14378  0704  2F06               	goto	u3631
 14379  0705  2F07               	goto	u3630
 14380  0706                     u3631:	
 14381  0706  2F08               	goto	l6529
 14382  0707                     u3630:	
 14383  0707  2F47               	goto	l1729
 14384  0708                     l6529:	
 14385                           
 14386                           ;leds.c: 140:     LATAbits.LATA7 = aux >> 3;
 14387  0708  0831               	movf	representLed@aux,w
 14388  0709  00AD               	movwf	??_representLed
 14389  070A  3003               	movlw	3
 14390  070B                     u3645:	
 14391  070B  36AD               	lsrf	??_representLed,f
 14392  070C  0B89               	decfsz	9,f
 14393  070D  2F0B               	goto	u3645
 14394  070E  082D               	movf	??_representLed,w
 14395  070F  00AE               	movwf	??_representLed+1
 14396  0710  0CAE               	rrf	??_representLed+1,f
 14397  0711  0CAE               	rrf	??_representLed+1,f
 14398  0712  0816               	movf	22,w	;volatile
 14399  0713  062E               	xorwf	??_representLed+1,w
 14400  0714  397F               	andlw	-129
 14401  0715  062E               	xorwf	??_representLed+1,w
 14402  0716  0096               	movwf	22	;volatile
 14403  0717                     l6531:	
 14404                           
 14405                           ;leds.c: 141:     PWM6_LoadDutyValue(((aux >> 2) & 1)*1023);
 14406  0717  0831               	movf	representLed@aux,w
 14407  0718  00AD               	movwf	??_representLed
 14408  0719  3002               	movlw	2
 14409  071A                     u3655:	
 14410  071A  36AD               	lsrf	??_representLed,f
 14411  071B  0B89               	decfsz	9,f
 14412  071C  2F1A               	goto	u3655
 14413  071D  082D               	movf	??_representLed,w
 14414  071E  3901               	andlw	1
 14415  071F  00AE               	movwf	??_representLed+1
 14416  0720  01AF               	clrf	??_representLed+2
 14417  0721  082E               	movf	??_representLed+1,w
 14418  0722  00A3               	movwf	___wmul@multiplier
 14419  0723  082F               	movf	??_representLed+2,w
 14420  0724  00A4               	movwf	___wmul@multiplier+1
 14421  0725  30FF               	movlw	255
 14422  0726  00A5               	movwf	___wmul@multiplicand
 14423  0727  3003               	movlw	3
 14424  0728  00A6               	movwf	___wmul@multiplicand+1
 14425  0729  318D  255F  3186   	fcall	___wmul
 14426  072C  0020               	movlb	0	; select bank0
 14427  072D  0824               	movf	?___wmul+1,w
 14428  072E  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 14429  072F  0823               	movf	?___wmul,w
 14430  0730  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 14431  0731  318C  2480  3186   	fcall	_PWM6_LoadDutyValue
 14432  0734                     l6533:	
 14433                           
 14434                           ;leds.c: 142:     LATAbits.LATA5 = aux >> 1;
 14435  0734  0020               	movlb	0	; select bank0
 14436  0735  3631               	lsrf	representLed@aux,w
 14437  0736  00AD               	movwf	??_representLed
 14438  0737  0EAD               	swapf	??_representLed,f
 14439  0738  0DAD               	rlf	??_representLed,f
 14440  0739  0816               	movf	22,w	;volatile
 14441  073A  062D               	xorwf	??_representLed,w
 14442  073B  39DF               	andlw	-33
 14443  073C  062D               	xorwf	??_representLed,w
 14444  073D  0096               	movwf	22	;volatile
 14445  073E                     l6535:	
 14446                           
 14447                           ;leds.c: 143:     LATAbits.LATA4 = aux & 1;
 14448  073E  0831               	movf	representLed@aux,w
 14449  073F  3901               	andlw	1
 14450  0740  00AD               	movwf	??_representLed
 14451  0741  0EAD               	swapf	??_representLed,f
 14452  0742  0816               	movf	22,w	;volatile
 14453  0743  062D               	xorwf	??_representLed,w
 14454  0744  39EF               	andlw	-17
 14455  0745  062D               	xorwf	??_representLed,w
 14456  0746  0096               	movwf	22	;volatile
 14457  0747                     l1729:	
 14458  0747  0008               	return
 14459  0748                     __end_of_representLed:	
 14460                           
 14461                           	psect	text24
 14462  0D5F                     __ptext24:	
 14463 ;; *************** function ___wmul *****************
 14464 ;; Defined at:
 14465 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 14466 ;; Parameters:    Size  Location     Type
 14467 ;;  multiplier      2    3[BANK0 ] unsigned int 
 14468 ;;  multiplicand    2    5[BANK0 ] unsigned int 
 14469 ;; Auto vars:     Size  Location     Type
 14470 ;;  product         2    7[BANK0 ] unsigned int 
 14471 ;; Return value:  Size  Location     Type
 14472 ;;                  2    3[BANK0 ] unsigned int 
 14473 ;; Registers used:
 14474 ;;		wreg, status,2, status,0
 14475 ;; Tracked objects:
 14476 ;;		On entry : 0/0
 14477 ;;		On exit  : 0/0
 14478 ;;		Unchanged: 0/0
 14479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14480 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14481 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14483 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14484 ;;Total ram usage:        6 bytes
 14485 ;; Hardware stack levels used:    1
 14486 ;; Hardware stack levels required when called:    6
 14487 ;; This function calls:
 14488 ;;		Nothing
 14489 ;; This function is called by:
 14490 ;;		_representLed
 14491 ;; This function uses a non-reentrant model
 14492 ;;
 14493                           
 14494                           
 14495                           ;psect for function ___wmul
 14496  0D5F                     ___wmul:	
 14497  0D5F                     l6465:	
 14498                           ;incstack = 0
 14499                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14500                           
 14501  0D5F  0020               	movlb	0	; select bank0
 14502  0D60  01A7               	clrf	___wmul@product
 14503  0D61  01A8               	clrf	___wmul@product+1
 14504  0D62                     l6467:	
 14505  0D62  1C23               	btfss	___wmul@multiplier,0
 14506  0D63  2D65               	goto	u3531
 14507  0D64  2D66               	goto	u3530
 14508  0D65                     u3531:	
 14509  0D65  2D6A               	goto	l1881
 14510  0D66                     u3530:	
 14511  0D66                     l6469:	
 14512  0D66  0825               	movf	___wmul@multiplicand,w
 14513  0D67  07A7               	addwf	___wmul@product,f
 14514  0D68  0826               	movf	___wmul@multiplicand+1,w
 14515  0D69  3DA8               	addwfc	___wmul@product+1,f
 14516  0D6A                     l1881:	
 14517  0D6A  3001               	movlw	1
 14518  0D6B                     u3545:	
 14519  0D6B  35A5               	lslf	___wmul@multiplicand,f
 14520  0D6C  0DA6               	rlf	___wmul@multiplicand+1,f
 14521  0D6D  0B89               	decfsz	9,f
 14522  0D6E  2D6B               	goto	u3545
 14523  0D6F                     l6471:	
 14524  0D6F  3001               	movlw	1
 14525  0D70                     u3555:	
 14526  0D70  36A4               	lsrf	___wmul@multiplier+1,f
 14527  0D71  0CA3               	rrf	___wmul@multiplier,f
 14528  0D72  0B89               	decfsz	9,f
 14529  0D73  2D70               	goto	u3555
 14530  0D74                     l6473:	
 14531  0D74  0823               	movf	___wmul@multiplier,w
 14532  0D75  0424               	iorwf	___wmul@multiplier+1,w
 14533  0D76  1D03               	btfss	3,2
 14534  0D77  2D79               	goto	u3561
 14535  0D78  2D7A               	goto	u3560
 14536  0D79                     u3561:	
 14537  0D79  2D62               	goto	l6467
 14538  0D7A                     u3560:	
 14539  0D7A                     l6475:	
 14540  0D7A  0828               	movf	___wmul@product+1,w
 14541  0D7B  00A4               	movwf	?___wmul+1
 14542  0D7C  0827               	movf	___wmul@product,w
 14543  0D7D  00A3               	movwf	?___wmul
 14544  0D7E                     l1883:	
 14545  0D7E  0008               	return
 14546  0D7F                     __end_of___wmul:	
 14547                           
 14548                           	psect	text25
 14549  0748                     __ptext25:	
 14550 ;; *************** function _checkDebounceSW2 *****************
 14551 ;; Defined at:
 14552 ;;		line 709 in file "main.c"
 14553 ;; Parameters:    Size  Location     Type
 14554 ;;		None
 14555 ;; Auto vars:     Size  Location     Type
 14556 ;;		None
 14557 ;; Return value:  Size  Location     Type
 14558 ;;                  1    wreg      unsigned char 
 14559 ;; Registers used:
 14560 ;;		wreg, status,2, status,0
 14561 ;; Tracked objects:
 14562 ;;		On entry : 0/0
 14563 ;;		On exit  : 0/0
 14564 ;;		Unchanged: 0/0
 14565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14568 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14569 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14570 ;;Total ram usage:        7 bytes
 14571 ;; Hardware stack levels used:    1
 14572 ;; Hardware stack levels required when called:    6
 14573 ;; This function calls:
 14574 ;;		Nothing
 14575 ;; This function is called by:
 14576 ;;		_config_routine
 14577 ;;		_selectSubfield
 14578 ;;		_increment_subfield_clk
 14579 ;;		_increment_subfield
 14580 ;; This function uses a non-reentrant model
 14581 ;;
 14582                           
 14583                           
 14584                           ;psect for function _checkDebounceSW2
 14585  0748                     _checkDebounceSW2:	
 14586  0748                     l6505:	
 14587                           ;incstack = 0
 14588                           ; Regs used in _checkDebounceSW2: [wreg+status,2+status,0]
 14589                           
 14590                           
 14591                           ;main.c: 712:     if(clkms - last_ms2 < 0){
 14592  0748  087D               	movf	_clkms,w	;volatile
 14593  0749  0020               	movlb	0	; select bank0
 14594  074A  00A3               	movwf	??_checkDebounceSW2
 14595  074B  01A4               	clrf	??_checkDebounceSW2+1
 14596  074C  0824               	movf	??_checkDebounceSW2+1,w
 14597  074D  00A6               	movwf	??_checkDebounceSW2+3
 14598  074E  085A               	movf	_last_ms2,w
 14599  074F  0223               	subwf	??_checkDebounceSW2,w
 14600  0750  00A5               	movwf	??_checkDebounceSW2+2
 14601  0751  1C03               	skipc
 14602  0752  03A6               	decf	??_checkDebounceSW2+3,f
 14603  0753  1FA6               	btfss	??_checkDebounceSW2+3,7
 14604  0754  2F56               	goto	u3601
 14605  0755  2F57               	goto	u3600
 14606  0756                     u3601:	
 14607  0756  2F7B               	goto	l6513
 14608  0757                     u3600:	
 14609  0757                     l6507:	
 14610                           
 14611                           ;main.c: 714:         if ((200 - last_ms2)+ clkms > 15 ){
 14612  0757  087D               	movf	_clkms,w	;volatile
 14613  0758  00A3               	movwf	??_checkDebounceSW2
 14614  0759  01A4               	clrf	??_checkDebounceSW2+1
 14615  075A  0824               	movf	??_checkDebounceSW2+1,w
 14616  075B  00A6               	movwf	??_checkDebounceSW2+3
 14617  075C  085A               	movf	_last_ms2,w
 14618  075D  0223               	subwf	??_checkDebounceSW2,w
 14619  075E  00A5               	movwf	??_checkDebounceSW2+2
 14620  075F  1C03               	skipc
 14621  0760  03A6               	decf	??_checkDebounceSW2+3,f
 14622  0761  0825               	movf	??_checkDebounceSW2+2,w
 14623  0762  3EC8               	addlw	200
 14624  0763  00A7               	movwf	??_checkDebounceSW2+4
 14625  0764  3000               	movlw	0
 14626  0765  3D26               	addwfc	??_checkDebounceSW2+3,w
 14627  0766  00A8               	movwf	??_checkDebounceSW2+5
 14628  0767  0828               	movf	??_checkDebounceSW2+5,w
 14629  0768  3A80               	xorlw	128
 14630  0769  00A9               	movwf	??_checkDebounceSW2+6
 14631  076A  3080               	movlw	128
 14632  076B  0229               	subwf	??_checkDebounceSW2+6,w
 14633  076C  1D03               	skipz
 14634  076D  2F70               	goto	u3615
 14635  076E  3010               	movlw	16
 14636  076F  0227               	subwf	??_checkDebounceSW2+4,w
 14637  0770                     u3615:	
 14638  0770  1C03               	skipc
 14639  0771  2F73               	goto	u3611
 14640  0772  2F74               	goto	u3610
 14641  0773                     u3611:	
 14642  0773  2F7B               	goto	l6513
 14643  0774                     u3610:	
 14644  0774                     l6509:	
 14645                           
 14646                           ;main.c: 715:             last_ms2 = clkms;
 14647  0774  087D               	movf	_clkms,w	;volatile
 14648  0775  0020               	movlb	0	; select bank0
 14649  0776  00A3               	movwf	??_checkDebounceSW2
 14650  0777  0823               	movf	??_checkDebounceSW2,w
 14651  0778  00DA               	movwf	_last_ms2
 14652                           
 14653                           ;main.c: 716:             return 1;
 14654  0779  3001               	movlw	1
 14655  077A  2F94               	goto	l1445
 14656  077B                     l6513:	
 14657                           
 14658                           ;main.c: 720:     if(clkms - last_ms2 < 15){
 14659  077B  087D               	movf	_clkms,w	;volatile
 14660  077C  0020               	movlb	0	; select bank0
 14661  077D  00A3               	movwf	??_checkDebounceSW2
 14662  077E  01A4               	clrf	??_checkDebounceSW2+1
 14663  077F  0824               	movf	??_checkDebounceSW2+1,w
 14664  0780  00A6               	movwf	??_checkDebounceSW2+3
 14665  0781  085A               	movf	_last_ms2,w
 14666  0782  0223               	subwf	??_checkDebounceSW2,w
 14667  0783  00A5               	movwf	??_checkDebounceSW2+2
 14668  0784  1C03               	skipc
 14669  0785  03A6               	decf	??_checkDebounceSW2+3,f
 14670  0786  0826               	movf	??_checkDebounceSW2+3,w
 14671  0787  3A80               	xorlw	128
 14672  0788  00A7               	movwf	??_checkDebounceSW2+4
 14673  0789  3080               	movlw	128
 14674  078A  0227               	subwf	??_checkDebounceSW2+4,w
 14675  078B  1D03               	skipz
 14676  078C  2F8F               	goto	u3625
 14677  078D  300F               	movlw	15
 14678  078E  0225               	subwf	??_checkDebounceSW2+2,w
 14679  078F                     u3625:	
 14680  078F  1803               	skipnc
 14681  0790  2F92               	goto	u3621
 14682  0791  2F93               	goto	u3620
 14683  0792                     u3621:	
 14684  0792  2F74               	goto	l6509
 14685  0793                     u3620:	
 14686  0793                     l6515:	
 14687                           
 14688                           ;main.c: 721:         return 0;
 14689  0793  3000               	movlw	0
 14690  0794                     l1445:	
 14691  0794  0008               	return
 14692  0795                     __end_of_checkDebounceSW2:	
 14693                           
 14694                           	psect	text26
 14695  04FD                     __ptext26:	
 14696 ;; *************** function _checkDebounceSW1 *****************
 14697 ;; Defined at:
 14698 ;;		line 680 in file "main.c"
 14699 ;; Parameters:    Size  Location     Type
 14700 ;;		None
 14701 ;; Auto vars:     Size  Location     Type
 14702 ;;		None
 14703 ;; Return value:  Size  Location     Type
 14704 ;;                  1    wreg      unsigned char 
 14705 ;; Registers used:
 14706 ;;		wreg, status,2, status,0
 14707 ;; Tracked objects:
 14708 ;;		On entry : 0/0
 14709 ;;		On exit  : 0/0
 14710 ;;		Unchanged: 0/0
 14711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14714 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14715 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14716 ;;Total ram usage:        7 bytes
 14717 ;; Hardware stack levels used:    1
 14718 ;; Hardware stack levels required when called:    6
 14719 ;; This function calls:
 14720 ;;		Nothing
 14721 ;; This function is called by:
 14722 ;;		_config_routine
 14723 ;;		_selectSubfield
 14724 ;;		_increment_subfield_clk
 14725 ;;		_increment_subfield
 14726 ;; This function uses a non-reentrant model
 14727 ;;
 14728                           
 14729                           
 14730                           ;psect for function _checkDebounceSW1
 14731  04FD                     _checkDebounceSW1:	
 14732  04FD                     l6479:	
 14733                           ;incstack = 0
 14734                           ; Regs used in _checkDebounceSW1: [wreg+status,2+status,0]
 14735                           
 14736                           
 14737                           ;main.c: 681:     PIE4bits.TMR1IE = 0;
 14738  04FD  002E               	movlb	14	; select bank14
 14739  04FE  101A               	bcf	26,0	;volatile
 14740  04FF                     l6481:	
 14741                           
 14742                           ;main.c: 683:     if(clkms - last_ms < 0){
 14743  04FF  087D               	movf	_clkms,w	;volatile
 14744  0500  0020               	movlb	0	; select bank0
 14745  0501  00A3               	movwf	??_checkDebounceSW1
 14746  0502  01A4               	clrf	??_checkDebounceSW1+1
 14747  0503  0824               	movf	??_checkDebounceSW1+1,w
 14748  0504  00A6               	movwf	??_checkDebounceSW1+3
 14749  0505  085B               	movf	_last_ms,w
 14750  0506  0223               	subwf	??_checkDebounceSW1,w
 14751  0507  00A5               	movwf	??_checkDebounceSW1+2
 14752  0508  1C03               	skipc
 14753  0509  03A6               	decf	??_checkDebounceSW1+3,f
 14754  050A  1FA6               	btfss	??_checkDebounceSW1+3,7
 14755  050B  2D0D               	goto	u3571
 14756  050C  2D0E               	goto	u3570
 14757  050D                     u3571:	
 14758  050D  2D34               	goto	l6491
 14759  050E                     u3570:	
 14760  050E                     l6483:	
 14761                           
 14762                           ;main.c: 685:         if ((200 - last_ms)+ clkms > 15 ){
 14763  050E  087D               	movf	_clkms,w	;volatile
 14764  050F  00A3               	movwf	??_checkDebounceSW1
 14765  0510  01A4               	clrf	??_checkDebounceSW1+1
 14766  0511  0824               	movf	??_checkDebounceSW1+1,w
 14767  0512  00A6               	movwf	??_checkDebounceSW1+3
 14768  0513  085B               	movf	_last_ms,w
 14769  0514  0223               	subwf	??_checkDebounceSW1,w
 14770  0515  00A5               	movwf	??_checkDebounceSW1+2
 14771  0516  1C03               	skipc
 14772  0517  03A6               	decf	??_checkDebounceSW1+3,f
 14773  0518  0825               	movf	??_checkDebounceSW1+2,w
 14774  0519  3EC8               	addlw	200
 14775  051A  00A7               	movwf	??_checkDebounceSW1+4
 14776  051B  3000               	movlw	0
 14777  051C  3D26               	addwfc	??_checkDebounceSW1+3,w
 14778  051D  00A8               	movwf	??_checkDebounceSW1+5
 14779  051E  0828               	movf	??_checkDebounceSW1+5,w
 14780  051F  3A80               	xorlw	128
 14781  0520  00A9               	movwf	??_checkDebounceSW1+6
 14782  0521  3080               	movlw	128
 14783  0522  0229               	subwf	??_checkDebounceSW1+6,w
 14784  0523  1D03               	skipz
 14785  0524  2D27               	goto	u3585
 14786  0525  3010               	movlw	16
 14787  0526  0227               	subwf	??_checkDebounceSW1+4,w
 14788  0527                     u3585:	
 14789  0527  1C03               	skipc
 14790  0528  2D2A               	goto	u3581
 14791  0529  2D2B               	goto	u3580
 14792  052A                     u3581:	
 14793  052A  2D34               	goto	l6491
 14794  052B                     u3580:	
 14795  052B                     l6485:	
 14796                           
 14797                           ;main.c: 686:             last_ms = clkms;
 14798  052B  087D               	movf	_clkms,w	;volatile
 14799  052C  0020               	movlb	0	; select bank0
 14800  052D  00A3               	movwf	??_checkDebounceSW1
 14801  052E  0823               	movf	??_checkDebounceSW1,w
 14802  052F  00DB               	movwf	_last_ms
 14803  0530                     l6487:	
 14804                           
 14805                           ;main.c: 687:             PIE4bits.TMR1IE = 1;
 14806  0530  002E               	movlb	14	; select bank14
 14807  0531  141A               	bsf	26,0	;volatile
 14808                           
 14809                           ;main.c: 688:             return 1;
 14810  0532  3001               	movlw	1
 14811  0533  2D56               	goto	l1438
 14812  0534                     l6491:	
 14813                           
 14814                           ;main.c: 692:     if(clkms - last_ms < 15){
 14815  0534  087D               	movf	_clkms,w	;volatile
 14816  0535  0020               	movlb	0	; select bank0
 14817  0536  00A3               	movwf	??_checkDebounceSW1
 14818  0537  01A4               	clrf	??_checkDebounceSW1+1
 14819  0538  0824               	movf	??_checkDebounceSW1+1,w
 14820  0539  00A6               	movwf	??_checkDebounceSW1+3
 14821  053A  085B               	movf	_last_ms,w
 14822  053B  0223               	subwf	??_checkDebounceSW1,w
 14823  053C  00A5               	movwf	??_checkDebounceSW1+2
 14824  053D  1C03               	skipc
 14825  053E  03A6               	decf	??_checkDebounceSW1+3,f
 14826  053F  0826               	movf	??_checkDebounceSW1+3,w
 14827  0540  3A80               	xorlw	128
 14828  0541  00A7               	movwf	??_checkDebounceSW1+4
 14829  0542  3080               	movlw	128
 14830  0543  0227               	subwf	??_checkDebounceSW1+4,w
 14831  0544  1D03               	skipz
 14832  0545  2D48               	goto	u3595
 14833  0546  300F               	movlw	15
 14834  0547  0225               	subwf	??_checkDebounceSW1+2,w
 14835  0548                     u3595:	
 14836  0548  1803               	skipnc
 14837  0549  2D4B               	goto	u3591
 14838  054A  2D4C               	goto	u3590
 14839  054B                     u3591:	
 14840  054B  2D4E               	goto	l6499
 14841  054C                     u3590:	
 14842  054C                     l6493:	
 14843                           
 14844                           ;main.c: 693:         return 0;
 14845  054C  3000               	movlw	0
 14846  054D  2D56               	goto	l1438
 14847  054E                     l6499:	
 14848                           
 14849                           ;main.c: 696:         last_ms = clkms;
 14850  054E  087D               	movf	_clkms,w	;volatile
 14851  054F  0020               	movlb	0	; select bank0
 14852  0550  00A3               	movwf	??_checkDebounceSW1
 14853  0551  0823               	movf	??_checkDebounceSW1,w
 14854  0552  00DB               	movwf	_last_ms
 14855  0553                     l6501:	
 14856                           
 14857                           ;main.c: 697:         PIE4bits.TMR1IE = 1;
 14858  0553  002E               	movlb	14	; select bank14
 14859  0554  141A               	bsf	26,0	;volatile
 14860                           
 14861                           ;main.c: 698:         return 1;
 14862  0555  3001               	movlw	1
 14863  0556                     l1438:	
 14864  0556  0008               	return
 14865  0557                     __end_of_checkDebounceSW1:	
 14866                           
 14867                           	psect	text27
 14868  0C0A                     __ptext27:	
 14869 ;; *************** function ___bmul *****************
 14870 ;; Defined at:
 14871 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8.c"
 14872 ;; Parameters:    Size  Location     Type
 14873 ;;  multiplier      1    wreg     unsigned char 
 14874 ;;  multiplicand    1    3[BANK0 ] unsigned char 
 14875 ;; Auto vars:     Size  Location     Type
 14876 ;;  multiplier      1    6[BANK0 ] unsigned char 
 14877 ;;  product         1    5[BANK0 ] unsigned char 
 14878 ;; Return value:  Size  Location     Type
 14879 ;;                  1    wreg      unsigned char 
 14880 ;; Registers used:
 14881 ;;		wreg, status,2, status,0
 14882 ;; Tracked objects:
 14883 ;;		On entry : 0/0
 14884 ;;		On exit  : 0/0
 14885 ;;		Unchanged: 0/0
 14886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14887 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14888 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14889 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14890 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14891 ;;Total ram usage:        4 bytes
 14892 ;; Hardware stack levels used:    1
 14893 ;; Hardware stack levels required when called:    6
 14894 ;; This function calls:
 14895 ;;		Nothing
 14896 ;; This function is called by:
 14897 ;;		_getSubfieldInfo
 14898 ;;		_read_ring
 14899 ;; This function uses a non-reentrant model
 14900 ;;
 14901                           
 14902                           
 14903                           ;psect for function ___bmul
 14904  0C0A                     ___bmul:	
 14905                           
 14906                           ;incstack = 0
 14907                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 14908                           ;___bmul@multiplier stored from wreg
 14909  0C0A  0020               	movlb	0	; select bank0
 14910  0C0B  00A6               	movwf	___bmul@multiplier
 14911  0C0C                     l6671:	
 14912  0C0C  01A5               	clrf	___bmul@product
 14913  0C0D                     l6673:	
 14914  0C0D  1C26               	btfss	___bmul@multiplier,0
 14915  0C0E  2C10               	goto	u3841
 14916  0C0F  2C11               	goto	u3840
 14917  0C10                     u3841:	
 14918  0C10  2C15               	goto	l6677
 14919  0C11                     u3840:	
 14920  0C11                     l6675:	
 14921  0C11  0823               	movf	___bmul@multiplicand,w
 14922  0C12  00A4               	movwf	??___bmul
 14923  0C13  0824               	movf	??___bmul,w
 14924  0C14  07A5               	addwf	___bmul@product,f
 14925  0C15                     l6677:	
 14926  0C15  1003               	clrc
 14927  0C16  0DA3               	rlf	___bmul@multiplicand,f
 14928  0C17                     l6679:	
 14929  0C17  1003               	clrc
 14930  0C18  0CA6               	rrf	___bmul@multiplier,f
 14931  0C19  0826               	movf	___bmul@multiplier,w
 14932  0C1A  1D03               	btfss	3,2
 14933  0C1B  2C1D               	goto	u3851
 14934  0C1C  2C1E               	goto	u3850
 14935  0C1D                     u3851:	
 14936  0C1D  2C0D               	goto	l6673
 14937  0C1E                     u3850:	
 14938  0C1E                     l6681:	
 14939  0C1E  0825               	movf	___bmul@product,w
 14940  0C1F                     l1907:	
 14941  0C1F  0008               	return
 14942  0C20                     __end_of___bmul:	
 14943                           
 14944                           	psect	text28
 14945  0605                     __ptext28:	
 14946 ;; *************** function ___awmod *****************
 14947 ;; Defined at:
 14948 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 14949 ;; Parameters:    Size  Location     Type
 14950 ;;  divisor         2    3[BANK0 ] int 
 14951 ;;  dividend        2    5[BANK0 ] int 
 14952 ;; Auto vars:     Size  Location     Type
 14953 ;;  sign            1    9[BANK0 ] unsigned char 
 14954 ;;  counter         1    8[BANK0 ] unsigned char 
 14955 ;; Return value:  Size  Location     Type
 14956 ;;                  2    3[BANK0 ] int 
 14957 ;; Registers used:
 14958 ;;		wreg, status,2, status,0
 14959 ;; Tracked objects:
 14960 ;;		On entry : 0/0
 14961 ;;		On exit  : 0/0
 14962 ;;		Unchanged: 0/0
 14963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14964 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14965 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14966 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14967 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14968 ;;Total ram usage:        7 bytes
 14969 ;; Hardware stack levels used:    1
 14970 ;; Hardware stack levels required when called:    6
 14971 ;; This function calls:
 14972 ;;		Nothing
 14973 ;; This function is called by:
 14974 ;;		_getSubfieldInfo
 14975 ;;		_recTempThresh
 14976 ;;		_recMinutes
 14977 ;;		_recHour
 14978 ;; This function uses a non-reentrant model
 14979 ;;
 14980                           
 14981                           
 14982                           ;psect for function ___awmod
 14983  0605                     ___awmod:	
 14984  0605                     l6685:	
 14985                           ;incstack = 0
 14986                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 14987                           
 14988  0605  0020               	movlb	0	; select bank0
 14989  0606  01A9               	clrf	___awmod@sign
 14990  0607                     l6687:	
 14991  0607  1FA6               	btfss	___awmod@dividend+1,7
 14992  0608  2E0A               	goto	u3861
 14993  0609  2E0B               	goto	u3860
 14994  060A                     u3861:	
 14995  060A  2E12               	goto	l6693
 14996  060B                     u3860:	
 14997  060B                     l6689:	
 14998  060B  09A5               	comf	___awmod@dividend,f
 14999  060C  09A6               	comf	___awmod@dividend+1,f
 15000  060D  0AA5               	incf	___awmod@dividend,f
 15001  060E  1903               	skipnz
 15002  060F  0AA6               	incf	___awmod@dividend+1,f
 15003  0610                     l6691:	
 15004  0610  01A9               	clrf	___awmod@sign
 15005  0611  0AA9               	incf	___awmod@sign,f
 15006  0612                     l6693:	
 15007  0612  1FA4               	btfss	___awmod@divisor+1,7
 15008  0613  2E15               	goto	u3871
 15009  0614  2E16               	goto	u3870
 15010  0615                     u3871:	
 15011  0615  2E1B               	goto	l6697
 15012  0616                     u3870:	
 15013  0616                     l6695:	
 15014  0616  09A3               	comf	___awmod@divisor,f
 15015  0617  09A4               	comf	___awmod@divisor+1,f
 15016  0618  0AA3               	incf	___awmod@divisor,f
 15017  0619  1903               	skipnz
 15018  061A  0AA4               	incf	___awmod@divisor+1,f
 15019  061B                     l6697:	
 15020  061B  0823               	movf	___awmod@divisor,w
 15021  061C  0424               	iorwf	___awmod@divisor+1,w
 15022  061D  1903               	btfsc	3,2
 15023  061E  2E20               	goto	u3881
 15024  061F  2E21               	goto	u3880
 15025  0620                     u3881:	
 15026  0620  2E4A               	goto	l6715
 15027  0621                     u3880:	
 15028  0621                     l6699:	
 15029  0621  01A8               	clrf	___awmod@counter
 15030  0622  0AA8               	incf	___awmod@counter,f
 15031  0623  2E2D               	goto	l6705
 15032  0624                     l6701:	
 15033  0624  3001               	movlw	1
 15034  0625                     u3895:	
 15035  0625  35A3               	lslf	___awmod@divisor,f
 15036  0626  0DA4               	rlf	___awmod@divisor+1,f
 15037  0627  0B89               	decfsz	9,f
 15038  0628  2E25               	goto	u3895
 15039  0629                     l6703:	
 15040  0629  3001               	movlw	1
 15041  062A  00A7               	movwf	??___awmod
 15042  062B  0827               	movf	??___awmod,w
 15043  062C  07A8               	addwf	___awmod@counter,f
 15044  062D                     l6705:	
 15045  062D  1FA4               	btfss	___awmod@divisor+1,7
 15046  062E  2E30               	goto	u3901
 15047  062F  2E31               	goto	u3900
 15048  0630                     u3901:	
 15049  0630  2E24               	goto	l6701
 15050  0631                     u3900:	
 15051  0631                     l6707:	
 15052  0631  0824               	movf	___awmod@divisor+1,w
 15053  0632  0226               	subwf	___awmod@dividend+1,w
 15054  0633  1D03               	skipz
 15055  0634  2E37               	goto	u3915
 15056  0635  0823               	movf	___awmod@divisor,w
 15057  0636  0225               	subwf	___awmod@dividend,w
 15058  0637                     u3915:	
 15059  0637  1C03               	skipc
 15060  0638  2E3A               	goto	u3911
 15061  0639  2E3B               	goto	u3910
 15062  063A                     u3911:	
 15063  063A  2E3F               	goto	l6711
 15064  063B                     u3910:	
 15065  063B                     l6709:	
 15066  063B  0823               	movf	___awmod@divisor,w
 15067  063C  02A5               	subwf	___awmod@dividend,f
 15068  063D  0824               	movf	___awmod@divisor+1,w
 15069  063E  3BA6               	subwfb	___awmod@dividend+1,f
 15070  063F                     l6711:	
 15071  063F  3001               	movlw	1
 15072  0640                     u3925:	
 15073  0640  36A4               	lsrf	___awmod@divisor+1,f
 15074  0641  0CA3               	rrf	___awmod@divisor,f
 15075  0642  0B89               	decfsz	9,f
 15076  0643  2E40               	goto	u3925
 15077  0644                     l6713:	
 15078  0644  3001               	movlw	1
 15079  0645  02A8               	subwf	___awmod@counter,f
 15080  0646  1D03               	btfss	3,2
 15081  0647  2E49               	goto	u3931
 15082  0648  2E4A               	goto	u3930
 15083  0649                     u3931:	
 15084  0649  2E31               	goto	l6707
 15085  064A                     u3930:	
 15086  064A                     l6715:	
 15087  064A  0829               	movf	___awmod@sign,w
 15088  064B  1903               	btfsc	3,2
 15089  064C  2E4E               	goto	u3941
 15090  064D  2E4F               	goto	u3940
 15091  064E                     u3941:	
 15092  064E  2E54               	goto	l6719
 15093  064F                     u3940:	
 15094  064F                     l6717:	
 15095  064F  09A5               	comf	___awmod@dividend,f
 15096  0650  09A6               	comf	___awmod@dividend+1,f
 15097  0651  0AA5               	incf	___awmod@dividend,f
 15098  0652  1903               	skipnz
 15099  0653  0AA6               	incf	___awmod@dividend+1,f
 15100  0654                     l6719:	
 15101  0654  0826               	movf	___awmod@dividend+1,w
 15102  0655  00A4               	movwf	?___awmod+1
 15103  0656  0825               	movf	___awmod@dividend,w
 15104  0657  00A3               	movwf	?___awmod
 15105  0658                     l2047:	
 15106  0658  0008               	return
 15107  0659                     __end_of___awmod:	
 15108                           
 15109                           	psect	text29
 15110  04A2                     __ptext29:	
 15111 ;; *************** function _all_LED *****************
 15112 ;; Defined at:
 15113 ;;		line 20 in file "leds.c"
 15114 ;; Parameters:    Size  Location     Type
 15115 ;;		None
 15116 ;; Auto vars:     Size  Location     Type
 15117 ;;		None
 15118 ;; Return value:  Size  Location     Type
 15119 ;;                  1    wreg      void 
 15120 ;; Registers used:
 15121 ;;		wreg, status,2, status,0, pclath, cstack
 15122 ;; Tracked objects:
 15123 ;;		On entry : 0/0
 15124 ;;		On exit  : 0/0
 15125 ;;		Unchanged: 0/0
 15126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15130 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15131 ;;Total ram usage:        1 bytes
 15132 ;; Hardware stack levels used:    1
 15133 ;; Hardware stack levels required when called:    7
 15134 ;; This function calls:
 15135 ;;		_PWM6_LoadDutyValue
 15136 ;; This function is called by:
 15137 ;;		_config_routine
 15138 ;;		_selectSubfield
 15139 ;; This function uses a non-reentrant model
 15140 ;;
 15141                           
 15142                           
 15143                           ;psect for function _all_LED
 15144  04A2                     _all_LED:	
 15145  04A2                     l1671:	
 15146                           ;incstack = 0
 15147                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 15148                           ;leds.c: 22:     do { LATAbits.LATA7 = 1; } while(0);
 15149                           
 15150  04A2  0020               	movlb	0	; select bank0
 15151  04A3  1796               	bsf	22,7	;volatile
 15152  04A4                     l6751:	
 15153                           
 15154                           ;leds.c: 23:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15155  04A4  3021               	movlw	33
 15156  04A5  0020               	movlb	0	; select bank0
 15157  04A6  00AD               	movwf	??_all_LED
 15158  04A7  3076               	movlw	118
 15159  04A8                     u4637:	
 15160  04A8  0B89               	decfsz	9,f
 15161  04A9  2CA8               	goto	u4637
 15162  04AA  0BAD               	decfsz	??_all_LED,f
 15163  04AB  2CA8               	goto	u4637
 15164  04AC  0000               	nop
 15165  04AD                     l6753:	
 15166  04AD  0020               	movlb	0	; select bank0
 15167  04AE  1396               	bcf	22,7	;volatile
 15168  04AF                     l1674:	
 15169                           
 15170                           ;leds.c: 25:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15171  04AF  3021               	movlw	33
 15172  04B0  0020               	movlb	0	; select bank0
 15173  04B1  00AD               	movwf	??_all_LED
 15174  04B2  3076               	movlw	118
 15175  04B3                     u4647:	
 15176  04B3  0B89               	decfsz	9,f
 15177  04B4  2CB3               	goto	u4647
 15178  04B5  0BAD               	decfsz	??_all_LED,f
 15179  04B6  2CB3               	goto	u4647
 15180  04B7  0000               	nop
 15181  04B8                     l6755:	
 15182                           
 15183                           ;leds.c: 26:     PWM6_LoadDutyValue(1023);
 15184  04B8  30FF               	movlw	255
 15185  04B9  0020               	movlb	0	; select bank0
 15186  04BA  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15187  04BB  3003               	movlw	3
 15188  04BC  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15189  04BD  318C  2480  3184   	fcall	_PWM6_LoadDutyValue
 15190  04C0                     l6757:	
 15191                           
 15192                           ;leds.c: 27:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15193  04C0  3021               	movlw	33
 15194  04C1  0020               	movlb	0	; select bank0
 15195  04C2  00AD               	movwf	??_all_LED
 15196  04C3  3076               	movlw	118
 15197  04C4                     u4657:	
 15198  04C4  0B89               	decfsz	9,f
 15199  04C5  2CC4               	goto	u4657
 15200  04C6  0BAD               	decfsz	??_all_LED,f
 15201  04C7  2CC4               	goto	u4657
 15202  04C8  0000               	nop
 15203                           
 15204                           ;leds.c: 28:     PWM6_LoadDutyValue(0);
 15205  04C9  3000               	movlw	0
 15206  04CA  0020               	movlb	0	; select bank0
 15207  04CB  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15208  04CC  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15209  04CD  318C  2480  3184   	fcall	_PWM6_LoadDutyValue
 15210  04D0                     l6759:	
 15211                           
 15212                           ;leds.c: 29:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15213  04D0  3021               	movlw	33
 15214  04D1  0020               	movlb	0	; select bank0
 15215  04D2  00AD               	movwf	??_all_LED
 15216  04D3  3076               	movlw	118
 15217  04D4                     u4667:	
 15218  04D4  0B89               	decfsz	9,f
 15219  04D5  2CD4               	goto	u4667
 15220  04D6  0BAD               	decfsz	??_all_LED,f
 15221  04D7  2CD4               	goto	u4667
 15222  04D8  0000               	nop
 15223  04D9                     l6761:	
 15224  04D9  0020               	movlb	0	; select bank0
 15225  04DA  1696               	bsf	22,5	;volatile
 15226  04DB                     l6763:	
 15227                           
 15228                           ;leds.c: 31:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15229  04DB  3021               	movlw	33
 15230  04DC  0020               	movlb	0	; select bank0
 15231  04DD  00AD               	movwf	??_all_LED
 15232  04DE  3076               	movlw	118
 15233  04DF                     u4677:	
 15234  04DF  0B89               	decfsz	9,f
 15235  04E0  2CDF               	goto	u4677
 15236  04E1  0BAD               	decfsz	??_all_LED,f
 15237  04E2  2CDF               	goto	u4677
 15238  04E3  0000               	nop
 15239  04E4                     l6765:	
 15240  04E4  0020               	movlb	0	; select bank0
 15241  04E5  1296               	bcf	22,5	;volatile
 15242  04E6                     l6767:	
 15243                           
 15244                           ;leds.c: 33:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15245  04E6  3021               	movlw	33
 15246  04E7  0020               	movlb	0	; select bank0
 15247  04E8  00AD               	movwf	??_all_LED
 15248  04E9  3076               	movlw	118
 15249  04EA                     u4687:	
 15250  04EA  0B89               	decfsz	9,f
 15251  04EB  2CEA               	goto	u4687
 15252  04EC  0BAD               	decfsz	??_all_LED,f
 15253  04ED  2CEA               	goto	u4687
 15254  04EE  0000               	nop
 15255  04EF                     l6769:	
 15256  04EF  0020               	movlb	0	; select bank0
 15257  04F0  1616               	bsf	22,4	;volatile
 15258  04F1                     l6771:	
 15259                           
 15260                           ;leds.c: 35:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15261  04F1  3021               	movlw	33
 15262  04F2  0020               	movlb	0	; select bank0
 15263  04F3  00AD               	movwf	??_all_LED
 15264  04F4  3076               	movlw	118
 15265  04F5                     u4697:	
 15266  04F5  0B89               	decfsz	9,f
 15267  04F6  2CF5               	goto	u4697
 15268  04F7  0BAD               	decfsz	??_all_LED,f
 15269  04F8  2CF5               	goto	u4697
 15270  04F9  0000               	nop
 15271  04FA                     l6773:	
 15272  04FA  0020               	movlb	0	; select bank0
 15273  04FB  1216               	bcf	22,4	;volatile
 15274  04FC                     l1683:	
 15275  04FC  0008               	return
 15276  04FD                     __end_of_all_LED:	
 15277                           
 15278                           	psect	text30
 15279  0D3F                     __ptext30:	
 15280 ;; *************** function _mode_select_LED *****************
 15281 ;; Defined at:
 15282 ;;		line 98 in file "leds.c"
 15283 ;; Parameters:    Size  Location     Type
 15284 ;;		None
 15285 ;; Auto vars:     Size  Location     Type
 15286 ;;		None
 15287 ;; Return value:  Size  Location     Type
 15288 ;;                  1    wreg      void 
 15289 ;; Registers used:
 15290 ;;		wreg, status,2, status,0, pclath, cstack
 15291 ;; Tracked objects:
 15292 ;;		On entry : 0/0
 15293 ;;		On exit  : 0/0
 15294 ;;		Unchanged: 0/0
 15295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15298 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15299 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15300 ;;Total ram usage:        1 bytes
 15301 ;; Hardware stack levels used:    1
 15302 ;; Hardware stack levels required when called:    7
 15303 ;; This function calls:
 15304 ;;		_PWM6_LoadDutyValue
 15305 ;; This function is called by:
 15306 ;;		_config_routine
 15307 ;; This function uses a non-reentrant model
 15308 ;;
 15309                           
 15310                           
 15311                           ;psect for function _mode_select_LED
 15312  0D3F                     _mode_select_LED:	
 15313  0D3F                     l7003:	
 15314                           ;incstack = 0
 15315                           ; Regs used in _mode_select_LED: [wreg+status,2+status,0+pclath+cstack]
 15316                           
 15317                           
 15318                           ;leds.c: 101:     PWM6_LoadDutyValue(1023);
 15319  0D3F  30FF               	movlw	255
 15320  0D40  0020               	movlb	0	; select bank0
 15321  0D41  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15322  0D42  3003               	movlw	3
 15323  0D43  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15324  0D44  318C  2480  318D   	fcall	_PWM6_LoadDutyValue
 15325  0D47                     l7005:	
 15326  0D47  0020               	movlb	0	; select bank0
 15327  0D48  1616               	bsf	22,4	;volatile
 15328  0D49                     l7007:	
 15329                           
 15330                           ;leds.c: 103:     _delay((unsigned long)((500)*(1000000/4000.0)));
 15331  0D49  30A3               	movlw	163
 15332  0D4A  0020               	movlb	0	; select bank0
 15333  0D4B  00AD               	movwf	??_mode_select_LED
 15334  0D4C  3055               	movlw	85
 15335  0D4D                     u4707:	
 15336  0D4D  0B89               	decfsz	9,f
 15337  0D4E  2D4D               	goto	u4707
 15338  0D4F  0BAD               	decfsz	??_mode_select_LED,f
 15339  0D50  2D4D               	goto	u4707
 15340  0D51                     l7009:	
 15341  0D51  0020               	movlb	0	; select bank0
 15342  0D52  1696               	bsf	22,5	;volatile
 15343  0D53                     l7011:	
 15344                           
 15345                           ;leds.c: 105:     _delay((unsigned long)((500)*(1000000/4000.0)));
 15346  0D53  30A3               	movlw	163
 15347  0D54  0020               	movlb	0	; select bank0
 15348  0D55  00AD               	movwf	??_mode_select_LED
 15349  0D56  3055               	movlw	85
 15350  0D57                     u4717:	
 15351  0D57  0B89               	decfsz	9,f
 15352  0D58  2D57               	goto	u4717
 15353  0D59  0BAD               	decfsz	??_mode_select_LED,f
 15354  0D5A  2D57               	goto	u4717
 15355  0D5B                     l7013:	
 15356  0D5B  0020               	movlb	0	; select bank0
 15357  0D5C  1216               	bcf	22,4	;volatile
 15358  0D5D                     l7015:	
 15359  0D5D  1296               	bcf	22,5	;volatile
 15360  0D5E                     l1715:	
 15361  0D5E  0008               	return
 15362  0D5F                     __end_of_mode_select_LED:	
 15363                           
 15364                           	psect	text31
 15365  0C80                     __ptext31:	
 15366 ;; *************** function _PWM6_LoadDutyValue *****************
 15367 ;; Defined at:
 15368 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 15369 ;; Parameters:    Size  Location     Type
 15370 ;;  dutyValue       2    9[BANK0 ] unsigned short 
 15371 ;; Auto vars:     Size  Location     Type
 15372 ;;		None
 15373 ;; Return value:  Size  Location     Type
 15374 ;;                  1    wreg      void 
 15375 ;; Registers used:
 15376 ;;		wreg, status,2, status,0
 15377 ;; Tracked objects:
 15378 ;;		On entry : 0/0
 15379 ;;		On exit  : 0/0
 15380 ;;		Unchanged: 0/0
 15381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15382 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15384 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15385 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15386 ;;Total ram usage:        4 bytes
 15387 ;; Hardware stack levels used:    1
 15388 ;; Hardware stack levels required when called:    6
 15389 ;; This function calls:
 15390 ;;		Nothing
 15391 ;; This function is called by:
 15392 ;;		_main
 15393 ;;		_increment_subfield_clk
 15394 ;;		_all_LED
 15395 ;;		_mod1_LED
 15396 ;;		_mod2_LED
 15397 ;;		_mod3_LED
 15398 ;;		_mod4_LED
 15399 ;;		_mode_select_LED
 15400 ;;		_representLed
 15401 ;;		_increment_subfield
 15402 ;; This function uses a non-reentrant model
 15403 ;;
 15404                           
 15405                           
 15406                           ;psect for function _PWM6_LoadDutyValue
 15407  0C80                     _PWM6_LoadDutyValue:	
 15408  0C80                     l6463:	
 15409                           ;incstack = 0
 15410                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 15411                           
 15412                           
 15413                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 15414  0C80  0020               	movlb	0	; select bank0
 15415  0C81  082A               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 15416  0C82  00AC               	movwf	??_PWM6_LoadDutyValue+1
 15417  0C83  0829               	movf	PWM6_LoadDutyValue@dutyValue,w
 15418  0C84  00AB               	movwf	??_PWM6_LoadDutyValue
 15419  0C85  36AC               	lsrf	??_PWM6_LoadDutyValue+1,f
 15420  0C86  0CAB               	rrf	??_PWM6_LoadDutyValue,f
 15421  0C87  36AC               	lsrf	??_PWM6_LoadDutyValue+1,f
 15422  0C88  0CAB               	rrf	??_PWM6_LoadDutyValue,f
 15423  0C89  082B               	movf	??_PWM6_LoadDutyValue,w
 15424  0C8A  0027               	movlb	7	; select bank7
 15425  0C8B  008D               	movwf	13	;volatile
 15426                           
 15427                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 15428  0C8C  0020               	movlb	0	; select bank0
 15429  0C8D  0829               	movf	PWM6_LoadDutyValue@dutyValue,w
 15430  0C8E  3903               	andlw	3
 15431  0C8F  00AB               	movwf	??_PWM6_LoadDutyValue
 15432  0C90  3005               	movlw	5
 15433  0C91                     u3525:	
 15434  0C91  35AB               	lslf	??_PWM6_LoadDutyValue,f
 15435  0C92  3EFF               	addlw	-1
 15436  0C93  1D03               	skipz
 15437  0C94  2C91               	goto	u3525
 15438  0C95  352B               	lslf	??_PWM6_LoadDutyValue,w
 15439  0C96  0027               	movlb	7	; select bank7
 15440  0C97  008C               	movwf	12	;volatile
 15441  0C98                     l964:	
 15442  0C98  0008               	return
 15443  0C99                     __end_of_PWM6_LoadDutyValue:	
 15444                           
 15445                           	psect	text32
 15446  09E3                     __ptext32:	
 15447 ;; *************** function _TMR0_StartTimer *****************
 15448 ;; Defined at:
 15449 ;;		line 87 in file "mcc_generated_files/tmr0.c"
 15450 ;; Parameters:    Size  Location     Type
 15451 ;;		None
 15452 ;; Auto vars:     Size  Location     Type
 15453 ;;		None
 15454 ;; Return value:  Size  Location     Type
 15455 ;;                  1    wreg      void 
 15456 ;; Registers used:
 15457 ;;		None
 15458 ;; Tracked objects:
 15459 ;;		On entry : 0/0
 15460 ;;		On exit  : 0/0
 15461 ;;		Unchanged: 0/0
 15462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15467 ;;Total ram usage:        0 bytes
 15468 ;; Hardware stack levels used:    1
 15469 ;; Hardware stack levels required when called:    6
 15470 ;; This function calls:
 15471 ;;		Nothing
 15472 ;; This function is called by:
 15473 ;;		_main
 15474 ;; This function uses a non-reentrant model
 15475 ;;
 15476                           
 15477                           
 15478                           ;psect for function _TMR0_StartTimer
 15479  09E3                     _TMR0_StartTimer:	
 15480  09E3                     l7117:	
 15481                           ;incstack = 0
 15482                           ; Regs used in _TMR0_StartTimer: []
 15483                           
 15484                           
 15485                           ;mcc_generated_files/tmr0.c: 90:     T0CON0bits.T0EN = 1;
 15486  09E3  0020               	movlb	0	; select bank0
 15487  09E4  179E               	bsf	30,7	;volatile
 15488  09E5                     l864:	
 15489  09E5  0008               	return
 15490  09E6                     __end_of_TMR0_StartTimer:	
 15491                           
 15492                           	psect	text33
 15493  0CE8                     __ptext33:	
 15494 ;; *************** function _SYSTEM_Initialize *****************
 15495 ;; Defined at:
 15496 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15497 ;; Parameters:    Size  Location     Type
 15498 ;;		None
 15499 ;; Auto vars:     Size  Location     Type
 15500 ;;		None
 15501 ;; Return value:  Size  Location     Type
 15502 ;;                  1    wreg      void 
 15503 ;; Registers used:
 15504 ;;		wreg, status,2, status,0, pclath, cstack
 15505 ;; Tracked objects:
 15506 ;;		On entry : 0/0
 15507 ;;		On exit  : 0/0
 15508 ;;		Unchanged: 0/0
 15509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15514 ;;Total ram usage:        0 bytes
 15515 ;; Hardware stack levels used:    1
 15516 ;; Hardware stack levels required when called:    8
 15517 ;; This function calls:
 15518 ;;		_ADCC_Initialize
 15519 ;;		_EXT_INT_Initialize
 15520 ;;		_OSCILLATOR_Initialize
 15521 ;;		_PIN_MANAGER_Initialize
 15522 ;;		_PMD_Initialize
 15523 ;;		_PWM6_Initialize
 15524 ;;		_TMR0_Initialize
 15525 ;;		_TMR1_Initialize
 15526 ;;		_TMR2_Initialize
 15527 ;; This function is called by:
 15528 ;;		_main
 15529 ;; This function uses a non-reentrant model
 15530 ;;
 15531                           
 15532                           
 15533                           ;psect for function _SYSTEM_Initialize
 15534  0CE8                     _SYSTEM_Initialize:	
 15535  0CE8                     l7099:	
 15536                           ;incstack = 0
 15537                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15538                           
 15539                           
 15540                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 15541  0CE8  318A  225F  318C   	fcall	_PMD_Initialize
 15542  0CEB                     l7101:	
 15543                           
 15544                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 15545  0CEB  318F  27B7  318C   	fcall	_PIN_MANAGER_Initialize
 15546  0CEE                     l7103:	
 15547                           
 15548                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 15549  0CEE  318A  2282  318C   	fcall	_OSCILLATOR_Initialize
 15550  0CF1                     l7105:	
 15551                           
 15552                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 15553  0CF1  318B  230C  318C   	fcall	_PWM6_Initialize
 15554  0CF4                     l7107:	
 15555                           
 15556                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 15557  0CF4  318B  23F4  318C   	fcall	_ADCC_Initialize
 15558  0CF7                     l7109:	
 15559                           
 15560                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 15561  0CF7  318C  244F  318C   	fcall	_TMR2_Initialize
 15562  0CFA                     l7111:	
 15563                           
 15564                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 15565  0CFA  318D  2520  318C   	fcall	_TMR1_Initialize
 15566  0CFD                     l7113:	
 15567                           
 15568                           ;mcc_generated_files/mcc.c: 59:     EXT_INT_Initialize();
 15569  0CFD  318B  2319  318C   	fcall	_EXT_INT_Initialize
 15570  0D00                     l7115:	
 15571                           
 15572                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 15573  0D00  318B  23C9  318C   	fcall	_TMR0_Initialize
 15574  0D03                     l439:	
 15575  0D03  0008               	return
 15576  0D04                     __end_of_SYSTEM_Initialize:	
 15577                           
 15578                           	psect	text34
 15579  0C4F                     __ptext34:	
 15580 ;; *************** function _TMR2_Initialize *****************
 15581 ;; Defined at:
 15582 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 15583 ;; Parameters:    Size  Location     Type
 15584 ;;		None
 15585 ;; Auto vars:     Size  Location     Type
 15586 ;;		None
 15587 ;; Return value:  Size  Location     Type
 15588 ;;                  1    wreg      void 
 15589 ;; Registers used:
 15590 ;;		wreg, status,2, status,0, pclath, cstack
 15591 ;; Tracked objects:
 15592 ;;		On entry : 0/0
 15593 ;;		On exit  : 0/0
 15594 ;;		Unchanged: 0/0
 15595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15600 ;;Total ram usage:        0 bytes
 15601 ;; Hardware stack levels used:    1
 15602 ;; Hardware stack levels required when called:    7
 15603 ;; This function calls:
 15604 ;;		_TMR2_SetInterruptHandler
 15605 ;; This function is called by:
 15606 ;;		_SYSTEM_Initialize
 15607 ;; This function uses a non-reentrant model
 15608 ;;
 15609                           
 15610                           
 15611                           ;psect for function _TMR2_Initialize
 15612  0C4F                     _TMR2_Initialize:	
 15613  0C4F                     l6943:	
 15614                           ;incstack = 0
 15615                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15616                           
 15617                           
 15618                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 15619  0C4F  3001               	movlw	1
 15620  0C50  0025               	movlb	5	; select bank5
 15621  0C51  0090               	movwf	16	;volatile
 15622                           
 15623                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 15624  0C52  3020               	movlw	32
 15625  0C53  008F               	movwf	15	;volatile
 15626  0C54                     l6945:	
 15627                           
 15628                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 15629  0C54  0191               	clrf	17	;volatile
 15630  0C55                     l6947:	
 15631                           
 15632                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 15633  0C55  309B               	movlw	155
 15634  0C56  008D               	movwf	13	;volatile
 15635                           
 15636                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 15637  0C57  018C               	clrf	12	;volatile
 15638  0C58                     l6949:	
 15639                           
 15640                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 15641  0C58  002E               	movlb	14	; select bank14
 15642  0C59  1090               	bcf	16,1	;volatile
 15643  0C5A                     l6951:	
 15644                           
 15645                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 15646  0C5A  149A               	bsf	26,1	;volatile
 15647  0C5B                     l6953:	
 15648                           
 15649                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 15650  0C5B  30C6               	movlw	low _TMR2_DefaultInterruptHandler
 15651  0C5C  0020               	movlb	0	; select bank0
 15652  0C5D  00A3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 15653  0C5E  3009               	movlw	high _TMR2_DefaultInterruptHandler
 15654  0C5F  00A4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 15655  0C60  318A  229D  318C   	fcall	_TMR2_SetInterruptHandler
 15656  0C63                     l6955:	
 15657                           
 15658                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 15659  0C63  30B1               	movlw	177
 15660  0C64  0025               	movlb	5	; select bank5
 15661  0C65  008E               	movwf	14	;volatile
 15662  0C66                     l1046:	
 15663  0C66  0008               	return
 15664  0C67                     __end_of_TMR2_Initialize:	
 15665                           
 15666                           	psect	text35
 15667  0A9D                     __ptext35:	
 15668 ;; *************** function _TMR2_SetInterruptHandler *****************
 15669 ;; Defined at:
 15670 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 15671 ;; Parameters:    Size  Location     Type
 15672 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 15673 ;;		 -> handler_clock_ms(1), TMR2_DefaultInterruptHandler(1), 
 15674 ;; Auto vars:     Size  Location     Type
 15675 ;;		None
 15676 ;; Return value:  Size  Location     Type
 15677 ;;                  1    wreg      void 
 15678 ;; Registers used:
 15679 ;;		wreg
 15680 ;; Tracked objects:
 15681 ;;		On entry : 0/0
 15682 ;;		On exit  : 0/0
 15683 ;;		Unchanged: 0/0
 15684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15685 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15688 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15689 ;;Total ram usage:        2 bytes
 15690 ;; Hardware stack levels used:    1
 15691 ;; Hardware stack levels required when called:    6
 15692 ;; This function calls:
 15693 ;;		Nothing
 15694 ;; This function is called by:
 15695 ;;		_TMR2_Initialize
 15696 ;;		_main
 15697 ;; This function uses a non-reentrant model
 15698 ;;
 15699                           
 15700                           
 15701                           ;psect for function _TMR2_SetInterruptHandler
 15702  0A9D                     _TMR2_SetInterruptHandler:	
 15703  0A9D                     l6749:	
 15704                           ;incstack = 0
 15705                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 15706                           
 15707                           
 15708                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 15709  0A9D  0020               	movlb	0	; select bank0
 15710  0A9E  0824               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 15711  0A9F  0021               	movlb	1	; select bank1
 15712  0AA0  00D5               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 15713  0AA1  0020               	movlb	0	; select bank0
 15714  0AA2  0823               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 15715  0AA3  0021               	movlb	1	; select bank1
 15716  0AA4  00D4               	movwf	_TMR2_InterruptHandler^(0+128)
 15717  0AA5                     l1089:	
 15718  0AA5  0008               	return
 15719  0AA6                     __end_of_TMR2_SetInterruptHandler:	
 15720                           
 15721                           	psect	text36
 15722  0D20                     __ptext36:	
 15723 ;; *************** function _TMR1_Initialize *****************
 15724 ;; Defined at:
 15725 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 15726 ;; Parameters:    Size  Location     Type
 15727 ;;		None
 15728 ;; Auto vars:     Size  Location     Type
 15729 ;;		None
 15730 ;; Return value:  Size  Location     Type
 15731 ;;                  1    wreg      void 
 15732 ;; Registers used:
 15733 ;;		wreg, status,2, status,0, pclath, cstack
 15734 ;; Tracked objects:
 15735 ;;		On entry : 0/0
 15736 ;;		On exit  : 0/0
 15737 ;;		Unchanged: 0/0
 15738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15743 ;;Total ram usage:        0 bytes
 15744 ;; Hardware stack levels used:    1
 15745 ;; Hardware stack levels required when called:    7
 15746 ;; This function calls:
 15747 ;;		_TMR1_SetInterruptHandler
 15748 ;; This function is called by:
 15749 ;;		_SYSTEM_Initialize
 15750 ;; This function uses a non-reentrant model
 15751 ;;
 15752                           
 15753                           
 15754                           ;psect for function _TMR1_Initialize
 15755  0D20                     _TMR1_Initialize:	
 15756  0D20                     l6957:	
 15757                           ;incstack = 0
 15758                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15759                           
 15760                           
 15761                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 15762  0D20  0024               	movlb	4	; select bank4
 15763  0D21  018F               	clrf	15	;volatile
 15764                           
 15765                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 15766  0D22  0190               	clrf	16	;volatile
 15767  0D23                     l6959:	
 15768                           
 15769                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 15770  0D23  3004               	movlw	4
 15771  0D24  0091               	movwf	17	;volatile
 15772  0D25                     l6961:	
 15773                           
 15774                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 15775  0D25  30E1               	movlw	225
 15776  0D26  008D               	movwf	13	;volatile
 15777  0D27                     l6963:	
 15778                           
 15779                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 15780  0D27  30BA               	movlw	186
 15781  0D28  008C               	movwf	12	;volatile
 15782  0D29                     l6965:	
 15783                           
 15784                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 15785  0D29  080D               	movf	13,w	;volatile
 15786  0D2A  0021               	movlb	1	; select bank1
 15787  0D2B  00D9               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 15788  0D2C  0024               	movlb	4	; select bank4
 15789  0D2D  080C               	movf	12,w	;volatile
 15790  0D2E  0021               	movlb	1	; select bank1
 15791  0D2F  00D8               	movwf	_timer1ReloadVal^(0+128)	;volatile
 15792  0D30                     l6967:	
 15793                           
 15794                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 15795  0D30  002E               	movlb	14	; select bank14
 15796  0D31  1010               	bcf	16,0	;volatile
 15797  0D32                     l6969:	
 15798                           
 15799                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 15800  0D32  141A               	bsf	26,0	;volatile
 15801  0D33                     l6971:	
 15802                           
 15803                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 15804  0D33  30C5               	movlw	low _TMR1_DefaultInterruptHandler
 15805  0D34  0020               	movlb	0	; select bank0
 15806  0D35  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 15807  0D36  3009               	movlw	high _TMR1_DefaultInterruptHandler
 15808  0D37  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 15809  0D38  318A  2294  318D   	fcall	_TMR1_SetInterruptHandler
 15810  0D3B                     l6973:	
 15811                           
 15812                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 15813  0D3B  3015               	movlw	21
 15814  0D3C  0024               	movlb	4	; select bank4
 15815  0D3D  008E               	movwf	14	;volatile
 15816  0D3E                     l917:	
 15817  0D3E  0008               	return
 15818  0D3F                     __end_of_TMR1_Initialize:	
 15819                           
 15820                           	psect	text37
 15821  0A94                     __ptext37:	
 15822 ;; *************** function _TMR1_SetInterruptHandler *****************
 15823 ;; Defined at:
 15824 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 15825 ;; Parameters:    Size  Location     Type
 15826 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 15827 ;;		 -> handler_clock_hms(1), TMR1_DefaultInterruptHandler(1), 
 15828 ;; Auto vars:     Size  Location     Type
 15829 ;;		None
 15830 ;; Return value:  Size  Location     Type
 15831 ;;                  1    wreg      void 
 15832 ;; Registers used:
 15833 ;;		wreg
 15834 ;; Tracked objects:
 15835 ;;		On entry : 0/0
 15836 ;;		On exit  : 0/0
 15837 ;;		Unchanged: 0/0
 15838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15839 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15842 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15843 ;;Total ram usage:        2 bytes
 15844 ;; Hardware stack levels used:    1
 15845 ;; Hardware stack levels required when called:    6
 15846 ;; This function calls:
 15847 ;;		Nothing
 15848 ;; This function is called by:
 15849 ;;		_TMR1_Initialize
 15850 ;;		_main
 15851 ;; This function uses a non-reentrant model
 15852 ;;
 15853                           
 15854                           
 15855                           ;psect for function _TMR1_SetInterruptHandler
 15856  0A94                     _TMR1_SetInterruptHandler:	
 15857  0A94                     l6727:	
 15858                           ;incstack = 0
 15859                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 15860                           
 15861                           
 15862                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 15863  0A94  0020               	movlb	0	; select bank0
 15864  0A95  0824               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 15865  0A96  0021               	movlb	1	; select bank1
 15866  0A97  00D7               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 15867  0A98  0020               	movlb	0	; select bank0
 15868  0A99  0823               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 15869  0A9A  0021               	movlb	1	; select bank1
 15870  0A9B  00D6               	movwf	_TMR1_InterruptHandler^(0+128)
 15871  0A9C                     l947:	
 15872  0A9C  0008               	return
 15873  0A9D                     __end_of_TMR1_SetInterruptHandler:	
 15874                           
 15875                           	psect	text38
 15876  0BC9                     __ptext38:	
 15877 ;; *************** function _TMR0_Initialize *****************
 15878 ;; Defined at:
 15879 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 15880 ;; Parameters:    Size  Location     Type
 15881 ;;		None
 15882 ;; Auto vars:     Size  Location     Type
 15883 ;;		None
 15884 ;; Return value:  Size  Location     Type
 15885 ;;                  1    wreg      void 
 15886 ;; Registers used:
 15887 ;;		wreg, status,2, status,0, pclath, cstack
 15888 ;; Tracked objects:
 15889 ;;		On entry : 0/0
 15890 ;;		On exit  : 0/0
 15891 ;;		Unchanged: 0/0
 15892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15897 ;;Total ram usage:        0 bytes
 15898 ;; Hardware stack levels used:    1
 15899 ;; Hardware stack levels required when called:    7
 15900 ;; This function calls:
 15901 ;;		_TMR0_SetInterruptHandler
 15902 ;; This function is called by:
 15903 ;;		_SYSTEM_Initialize
 15904 ;; This function uses a non-reentrant model
 15905 ;;
 15906                           
 15907                           
 15908                           ;psect for function _TMR0_Initialize
 15909  0BC9                     _TMR0_Initialize:	
 15910  0BC9                     l6975:	
 15911                           ;incstack = 0
 15912                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15913                           
 15914                           
 15915                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x96;
 15916  0BC9  3096               	movlw	150
 15917  0BCA  0020               	movlb	0	; select bank0
 15918  0BCB  009F               	movwf	31	;volatile
 15919                           
 15920                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0x90;
 15921  0BCC  3090               	movlw	144
 15922  0BCD  009D               	movwf	29	;volatile
 15923  0BCE                     l6977:	
 15924                           
 15925                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 15926  0BCE  019C               	clrf	28	;volatile
 15927  0BCF                     l6979:	
 15928                           
 15929                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 15930  0BCF  002E               	movlb	14	; select bank14
 15931  0BD0  128C               	bcf	12,5	;volatile
 15932  0BD1                     l6981:	
 15933                           
 15934                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 15935  0BD1  1696               	bsf	22,5	;volatile
 15936  0BD2                     l6983:	
 15937                           
 15938                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 15939  0BD2  30C4               	movlw	low _TMR0_DefaultInterruptHandler
 15940  0BD3  0020               	movlb	0	; select bank0
 15941  0BD4  00A3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 15942  0BD5  3009               	movlw	high _TMR0_DefaultInterruptHandler
 15943  0BD6  00A4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 15944  0BD7  318A  228B  318B   	fcall	_TMR0_SetInterruptHandler
 15945  0BDA                     l6985:	
 15946                           
 15947                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x09;
 15948  0BDA  3009               	movlw	9
 15949  0BDB  0020               	movlb	0	; select bank0
 15950  0BDC  009E               	movwf	30	;volatile
 15951  0BDD                     l861:	
 15952  0BDD  0008               	return
 15953  0BDE                     __end_of_TMR0_Initialize:	
 15954                           
 15955                           	psect	text39
 15956  0A8B                     __ptext39:	
 15957 ;; *************** function _TMR0_SetInterruptHandler *****************
 15958 ;; Defined at:
 15959 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 15960 ;; Parameters:    Size  Location     Type
 15961 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 15962 ;;		 -> ISR_3s(1), TMR0_DefaultInterruptHandler(1), 
 15963 ;; Auto vars:     Size  Location     Type
 15964 ;;		None
 15965 ;; Return value:  Size  Location     Type
 15966 ;;                  1    wreg      void 
 15967 ;; Registers used:
 15968 ;;		wreg
 15969 ;; Tracked objects:
 15970 ;;		On entry : 0/0
 15971 ;;		On exit  : 0/0
 15972 ;;		Unchanged: 0/0
 15973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15974 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15977 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15978 ;;Total ram usage:        2 bytes
 15979 ;; Hardware stack levels used:    1
 15980 ;; Hardware stack levels required when called:    6
 15981 ;; This function calls:
 15982 ;;		Nothing
 15983 ;; This function is called by:
 15984 ;;		_TMR0_Initialize
 15985 ;;		_main
 15986 ;; This function uses a non-reentrant model
 15987 ;;
 15988                           
 15989                           
 15990                           ;psect for function _TMR0_SetInterruptHandler
 15991  0A8B                     _TMR0_SetInterruptHandler:	
 15992  0A8B                     l6725:	
 15993                           ;incstack = 0
 15994                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 15995                           
 15996                           
 15997                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 15998  0A8B  0020               	movlb	0	; select bank0
 15999  0A8C  0824               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 16000  0A8D  0021               	movlb	1	; select bank1
 16001  0A8E  00DB               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 16002  0A8F  0020               	movlb	0	; select bank0
 16003  0A90  0823               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 16004  0A91  0021               	movlb	1	; select bank1
 16005  0A92  00DA               	movwf	_TMR0_InterruptHandler^(0+128)
 16006  0A93                     l883:	
 16007  0A93  0008               	return
 16008  0A94                     __end_of_TMR0_SetInterruptHandler:	
 16009                           
 16010                           	psect	text40
 16011  0B0C                     __ptext40:	
 16012 ;; *************** function _PWM6_Initialize *****************
 16013 ;; Defined at:
 16014 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 16015 ;; Parameters:    Size  Location     Type
 16016 ;;		None
 16017 ;; Auto vars:     Size  Location     Type
 16018 ;;		None
 16019 ;; Return value:  Size  Location     Type
 16020 ;;                  1    wreg      void 
 16021 ;; Registers used:
 16022 ;;		wreg, status,2, status,0
 16023 ;; Tracked objects:
 16024 ;;		On entry : 0/0
 16025 ;;		On exit  : 0/0
 16026 ;;		Unchanged: 0/0
 16027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16032 ;;Total ram usage:        0 bytes
 16033 ;; Hardware stack levels used:    1
 16034 ;; Hardware stack levels required when called:    6
 16035 ;; This function calls:
 16036 ;;		Nothing
 16037 ;; This function is called by:
 16038 ;;		_SYSTEM_Initialize
 16039 ;; This function uses a non-reentrant model
 16040 ;;
 16041                           
 16042                           
 16043                           ;psect for function _PWM6_Initialize
 16044  0B0C                     _PWM6_Initialize:	
 16045  0B0C                     l6933:	
 16046                           ;incstack = 0
 16047                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 16048                           
 16049                           
 16050                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 16051  0B0C  3080               	movlw	128
 16052  0B0D  0027               	movlb	7	; select bank7
 16053  0B0E  008E               	movwf	14	;volatile
 16054                           
 16055                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 16056  0B0F  303E               	movlw	62
 16057  0B10  008D               	movwf	13	;volatile
 16058                           
 16059                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 16060  0B11  3040               	movlw	64
 16061  0B12  008C               	movwf	12	;volatile
 16062  0B13                     l6935:	
 16063                           
 16064                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 16065  0B13  0024               	movlb	4	; select bank4
 16066  0B14  081F               	movf	31,w	;volatile
 16067  0B15  39F3               	andlw	-13
 16068  0B16  3804               	iorlw	4
 16069  0B17  009F               	movwf	31	;volatile
 16070  0B18                     l961:	
 16071  0B18  0008               	return
 16072  0B19                     __end_of_PWM6_Initialize:	
 16073                           
 16074                           	psect	text41
 16075  0A5F                     __ptext41:	
 16076 ;; *************** function _PMD_Initialize *****************
 16077 ;; Defined at:
 16078 ;;		line 77 in file "mcc_generated_files/mcc.c"
 16079 ;; Parameters:    Size  Location     Type
 16080 ;;		None
 16081 ;; Auto vars:     Size  Location     Type
 16082 ;;		None
 16083 ;; Return value:  Size  Location     Type
 16084 ;;                  1    wreg      void 
 16085 ;; Registers used:
 16086 ;;		status,2
 16087 ;; Tracked objects:
 16088 ;;		On entry : 0/0
 16089 ;;		On exit  : 0/0
 16090 ;;		Unchanged: 0/0
 16091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16096 ;;Total ram usage:        0 bytes
 16097 ;; Hardware stack levels used:    1
 16098 ;; Hardware stack levels required when called:    6
 16099 ;; This function calls:
 16100 ;;		Nothing
 16101 ;; This function is called by:
 16102 ;;		_SYSTEM_Initialize
 16103 ;; This function uses a non-reentrant model
 16104 ;;
 16105                           
 16106                           
 16107                           ;psect for function _PMD_Initialize
 16108  0A5F                     _PMD_Initialize:	
 16109  0A5F                     l6869:	
 16110                           ;incstack = 0
 16111                           ; Regs used in _PMD_Initialize: [status,2]
 16112                           
 16113                           
 16114                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 16115  0A5F  002F               	movlb	15	; select bank15
 16116  0A60  0196               	clrf	22	;volatile
 16117                           
 16118                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 16119  0A61  0197               	clrf	23	;volatile
 16120                           
 16121                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 16122  0A62  0198               	clrf	24	;volatile
 16123                           
 16124                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 16125  0A63  0199               	clrf	25	;volatile
 16126                           
 16127                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 16128  0A64  019A               	clrf	26	;volatile
 16129                           
 16130                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 16131  0A65  019B               	clrf	27	;volatile
 16132  0A66                     l445:	
 16133  0A66  0008               	return
 16134  0A67                     __end_of_PMD_Initialize:	
 16135                           
 16136                           	psect	text42
 16137  0FB7                     __ptext42:	
 16138 ;; *************** function _PIN_MANAGER_Initialize *****************
 16139 ;; Defined at:
 16140 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 16141 ;; Parameters:    Size  Location     Type
 16142 ;;		None
 16143 ;; Auto vars:     Size  Location     Type
 16144 ;;		None
 16145 ;; Return value:  Size  Location     Type
 16146 ;;                  1    wreg      void 
 16147 ;; Registers used:
 16148 ;;		wreg, status,2
 16149 ;; Tracked objects:
 16150 ;;		On entry : 0/0
 16151 ;;		On exit  : 0/0
 16152 ;;		Unchanged: 0/0
 16153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16158 ;;Total ram usage:        0 bytes
 16159 ;; Hardware stack levels used:    1
 16160 ;; Hardware stack levels required when called:    6
 16161 ;; This function calls:
 16162 ;;		Nothing
 16163 ;; This function is called by:
 16164 ;;		_SYSTEM_Initialize
 16165 ;; This function uses a non-reentrant model
 16166 ;;
 16167                           
 16168                           
 16169                           ;psect for function _PIN_MANAGER_Initialize
 16170  0FB7                     _PIN_MANAGER_Initialize:	
 16171  0FB7                     l6871:	
 16172                           ;incstack = 0
 16173                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 16174                           
 16175                           
 16176                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 16177  0FB7  0020               	movlb	0	; select bank0
 16178  0FB8  019A               	clrf	26	;volatile
 16179                           
 16180                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 16181  0FB9  0199               	clrf	25	;volatile
 16182                           
 16183                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 16184  0FBA  0196               	clrf	22	;volatile
 16185                           
 16186                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 16187  0FBB  0197               	clrf	23	;volatile
 16188                           
 16189                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 16190  0FBC  0198               	clrf	24	;volatile
 16191  0FBD                     l6873:	
 16192                           
 16193                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 16194  0FBD  3007               	movlw	7
 16195  0FBE  0095               	movwf	21	;volatile
 16196  0FBF                     l6875:	
 16197                           
 16198                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 16199  0FBF  300F               	movlw	15
 16200  0FC0  0091               	movwf	17	;volatile
 16201  0FC1                     l6877:	
 16202                           
 16203                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 16204  0FC1  30FF               	movlw	255
 16205  0FC2  0092               	movwf	18	;volatile
 16206  0FC3                     l6879:	
 16207                           
 16208                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 16209  0FC3  30FF               	movlw	255
 16210  0FC4  0093               	movwf	19	;volatile
 16211  0FC5                     l6881:	
 16212                           
 16213                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 16214  0FC5  30FF               	movlw	255
 16215  0FC6  0094               	movwf	20	;volatile
 16216  0FC7                     l6883:	
 16217                           
 16218                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 16219  0FC7  30FF               	movlw	255
 16220  0FC8  003E               	movlb	30	; select bank30
 16221  0FC9  00D9               	movwf	89	;volatile
 16222  0FCA                     l6885:	
 16223                           
 16224                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 16225  0FCA  30C7               	movlw	199
 16226  0FCB  00CE               	movwf	78	;volatile
 16227  0FCC                     l6887:	
 16228                           
 16229                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 16230  0FCC  30EF               	movlw	239
 16231  0FCD  00C3               	movwf	67	;volatile
 16232  0FCE                     l6889:	
 16233                           
 16234                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 16235  0FCE  3007               	movlw	7
 16236  0FCF  00E4               	movwf	100	;volatile
 16237  0FD0                     l6891:	
 16238                           
 16239                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 16240  0FD0  30FF               	movlw	255
 16241  0FD1  00B8               	movwf	56	;volatile
 16242                           
 16243                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 16244  0FD2  01DA               	clrf	90	;volatile
 16245                           
 16246                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 16247  0FD3  01E5               	clrf	101	;volatile
 16248                           
 16249                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 16250  0FD4  01C4               	clrf	68	;volatile
 16251                           
 16252                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 16253  0FD5  01B9               	clrf	57	;volatile
 16254                           
 16255                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 16256  0FD6  01CF               	clrf	79	;volatile
 16257                           
 16258                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 16259  0FD7  01E6               	clrf	102	;volatile
 16260                           
 16261                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 16262  0FD8  01BA               	clrf	58	;volatile
 16263                           
 16264                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 16265  0FD9  01C5               	clrf	69	;volatile
 16266                           
 16267                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 16268  0FDA  01D0               	clrf	80	;volatile
 16269                           
 16270                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 16271  0FDB  01DB               	clrf	91	;volatile
 16272  0FDC                     l6893:	
 16273                           
 16274                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 16275  0FDC  30FF               	movlw	255
 16276  0FDD  00BB               	movwf	59	;volatile
 16277  0FDE                     l6895:	
 16278                           
 16279                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 16280  0FDE  30FF               	movlw	255
 16281  0FDF  00C6               	movwf	70	;volatile
 16282  0FE0                     l6897:	
 16283                           
 16284                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 16285  0FE0  30FF               	movlw	255
 16286  0FE1  00D1               	movwf	81	;volatile
 16287  0FE2                     l6899:	
 16288                           
 16289                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 16290  0FE2  30FF               	movlw	255
 16291  0FE3  00DC               	movwf	92	;volatile
 16292  0FE4                     l6901:	
 16293                           
 16294                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 16295  0FE4  3007               	movlw	7
 16296  0FE5  00E7               	movwf	103	;volatile
 16297  0FE6                     l6903:	
 16298                           
 16299                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 16300  0FE6  30FF               	movlw	255
 16301  0FE7  00BC               	movwf	60	;volatile
 16302  0FE8                     l6905:	
 16303                           
 16304                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 16305  0FE8  30FF               	movlw	255
 16306  0FE9  00C7               	movwf	71	;volatile
 16307  0FEA                     l6907:	
 16308                           
 16309                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 16310  0FEA  30FF               	movlw	255
 16311  0FEB  00D2               	movwf	82	;volatile
 16312  0FEC                     l6909:	
 16313                           
 16314                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 16315  0FEC  30FF               	movlw	255
 16316  0FED  00DD               	movwf	93	;volatile
 16317  0FEE                     l6911:	
 16318                           
 16319                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 16320  0FEE  3007               	movlw	7
 16321  0FEF  00E8               	movwf	104	;volatile
 16322  0FF0                     l6913:	
 16323                           
 16324                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 16325  0FF0  300C               	movlw	12
 16326  0FF1  003D               	movlb	29	; select bank29
 16327  0FF2  0090               	movwf	16	;volatile
 16328  0FF3                     l6915:	
 16329                           
 16330                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 16331  0FF3  3013               	movlw	19
 16332  0FF4  00C5               	movwf	69	;volatile
 16333  0FF5                     l6917:	
 16334                           
 16335                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 16336  0FF5  3014               	movlw	20
 16337  0FF6  003E               	movlb	30	; select bank30
 16338  0FF7  00A3               	movwf	35	;volatile
 16339  0FF8                     l6919:	
 16340                           
 16341                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 16342  0FF8  3015               	movlw	21
 16343  0FF9  00A4               	movwf	36	;volatile
 16344  0FFA                     l6921:	
 16345                           
 16346                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 16347  0FFA  300E               	movlw	14
 16348  0FFB  0096               	movwf	22	;volatile
 16349  0FFC                     l6923:	
 16350                           
 16351                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 16352  0FFC  3014               	movlw	20
 16353  0FFD  003D               	movlb	29	; select bank29
 16354  0FFE  00C6               	movwf	70	;volatile
 16355  0FFF                     l675:	
 16356  0FFF  0008               	return
 16357  1000                     __end_of_PIN_MANAGER_Initialize:	
 16358                           
 16359                           	psect	text43
 16360  0A82                     __ptext43:	
 16361 ;; *************** function _OSCILLATOR_Initialize *****************
 16362 ;; Defined at:
 16363 ;;		line 63 in file "mcc_generated_files/mcc.c"
 16364 ;; Parameters:    Size  Location     Type
 16365 ;;		None
 16366 ;; Auto vars:     Size  Location     Type
 16367 ;;		None
 16368 ;; Return value:  Size  Location     Type
 16369 ;;                  1    wreg      void 
 16370 ;; Registers used:
 16371 ;;		wreg, status,2
 16372 ;; Tracked objects:
 16373 ;;		On entry : 0/0
 16374 ;;		On exit  : 0/0
 16375 ;;		Unchanged: 0/0
 16376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16381 ;;Total ram usage:        0 bytes
 16382 ;; Hardware stack levels used:    1
 16383 ;; Hardware stack levels required when called:    6
 16384 ;; This function calls:
 16385 ;;		Nothing
 16386 ;; This function is called by:
 16387 ;;		_SYSTEM_Initialize
 16388 ;; This function uses a non-reentrant model
 16389 ;;
 16390                           
 16391                           
 16392                           ;psect for function _OSCILLATOR_Initialize
 16393  0A82                     _OSCILLATOR_Initialize:	
 16394  0A82                     l6925:	
 16395                           ;incstack = 0
 16396                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 16397                           
 16398                           
 16399                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 16400  0A82  3062               	movlw	98
 16401  0A83  0031               	movlb	17	; select bank17
 16402  0A84  008D               	movwf	13	;volatile
 16403  0A85                     l6927:	
 16404                           
 16405                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 16406  0A85  018F               	clrf	15	;volatile
 16407  0A86                     l6929:	
 16408                           
 16409                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 16410  0A86  0191               	clrf	17	;volatile
 16411                           
 16412                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 16413  0A87  3002               	movlw	2
 16414  0A88  0093               	movwf	19	;volatile
 16415  0A89                     l6931:	
 16416                           
 16417                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 16418  0A89  0192               	clrf	18	;volatile
 16419  0A8A                     l442:	
 16420  0A8A  0008               	return
 16421  0A8B                     __end_of_OSCILLATOR_Initialize:	
 16422                           
 16423                           	psect	text44
 16424  0B19                     __ptext44:	
 16425 ;; *************** function _EXT_INT_Initialize *****************
 16426 ;; Defined at:
 16427 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 16428 ;; Parameters:    Size  Location     Type
 16429 ;;		None
 16430 ;; Auto vars:     Size  Location     Type
 16431 ;;		None
 16432 ;; Return value:  Size  Location     Type
 16433 ;;                  1    wreg      void 
 16434 ;; Registers used:
 16435 ;;		wreg, status,2, status,0, pclath, cstack
 16436 ;; Tracked objects:
 16437 ;;		On entry : 0/0
 16438 ;;		On exit  : 0/0
 16439 ;;		Unchanged: 0/0
 16440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16445 ;;Total ram usage:        0 bytes
 16446 ;; Hardware stack levels used:    1
 16447 ;; Hardware stack levels required when called:    7
 16448 ;; This function calls:
 16449 ;;		_INT_SetInterruptHandler
 16450 ;; This function is called by:
 16451 ;;		_SYSTEM_Initialize
 16452 ;; This function uses a non-reentrant model
 16453 ;;
 16454                           
 16455                           
 16456                           ;psect for function _EXT_INT_Initialize
 16457  0B19                     _EXT_INT_Initialize:	
 16458  0B19                     l6863:	
 16459                           ;incstack = 0
 16460                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16461                           
 16462                           
 16463                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 16464  0B19  002E               	movlb	14	; select bank14
 16465  0B1A  100C               	bcf	12,0	;volatile
 16466                           
 16467                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 16468  0B1B  140B               	bsf	11,0	;volatile
 16469  0B1C                     l6865:	
 16470                           
 16471                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 16472  0B1C  30C3               	movlw	low _INT_DefaultInterruptHandler
 16473  0B1D  0020               	movlb	0	; select bank0
 16474  0B1E  00A3               	movwf	INT_SetInterruptHandler@InterruptHandler
 16475  0B1F  3009               	movlw	high _INT_DefaultInterruptHandler
 16476  0B20  00A4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 16477  0B21  318A  2279  318B   	fcall	_INT_SetInterruptHandler
 16478  0B24                     l6867:	
 16479                           
 16480                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 16481  0B24  002E               	movlb	14	; select bank14
 16482  0B25  1416               	bsf	22,0	;volatile
 16483  0B26                     l347:	
 16484  0B26  0008               	return
 16485  0B27                     __end_of_EXT_INT_Initialize:	
 16486                           
 16487                           	psect	text45
 16488  0A79                     __ptext45:	
 16489 ;; *************** function _INT_SetInterruptHandler *****************
 16490 ;; Defined at:
 16491 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 16492 ;; Parameters:    Size  Location     Type
 16493 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 16494 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 16495 ;; Auto vars:     Size  Location     Type
 16496 ;;		None
 16497 ;; Return value:  Size  Location     Type
 16498 ;;                  1    wreg      void 
 16499 ;; Registers used:
 16500 ;;		wreg
 16501 ;; Tracked objects:
 16502 ;;		On entry : 0/0
 16503 ;;		On exit  : 0/0
 16504 ;;		Unchanged: 0/0
 16505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16506 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16509 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16510 ;;Total ram usage:        2 bytes
 16511 ;; Hardware stack levels used:    1
 16512 ;; Hardware stack levels required when called:    6
 16513 ;; This function calls:
 16514 ;;		Nothing
 16515 ;; This function is called by:
 16516 ;;		_EXT_INT_Initialize
 16517 ;;		_main
 16518 ;; This function uses a non-reentrant model
 16519 ;;
 16520                           
 16521                           
 16522                           ;psect for function _INT_SetInterruptHandler
 16523  0A79                     _INT_SetInterruptHandler:	
 16524  0A79                     l6723:	
 16525                           ;incstack = 0
 16526                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 16527                           
 16528                           
 16529                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 16530  0A79  0020               	movlb	0	; select bank0
 16531  0A7A  0824               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 16532  0A7B  0021               	movlb	1	; select bank1
 16533  0A7C  00DD               	movwf	(_INT_InterruptHandler+1)^(0+128)
 16534  0A7D  0020               	movlb	0	; select bank0
 16535  0A7E  0823               	movf	INT_SetInterruptHandler@InterruptHandler,w
 16536  0A7F  0021               	movlb	1	; select bank1
 16537  0A80  00DC               	movwf	_INT_InterruptHandler^(0+128)
 16538  0A81                     l341:	
 16539  0A81  0008               	return
 16540  0A82                     __end_of_INT_SetInterruptHandler:	
 16541                           
 16542                           	psect	text46
 16543  0BF4                     __ptext46:	
 16544 ;; *************** function _ADCC_Initialize *****************
 16545 ;; Defined at:
 16546 ;;		line 63 in file "mcc_generated_files/adcc.c"
 16547 ;; Parameters:    Size  Location     Type
 16548 ;;		None
 16549 ;; Auto vars:     Size  Location     Type
 16550 ;;		None
 16551 ;; Return value:  Size  Location     Type
 16552 ;;                  1    wreg      void 
 16553 ;; Registers used:
 16554 ;;		wreg, status,2
 16555 ;; Tracked objects:
 16556 ;;		On entry : 0/0
 16557 ;;		On exit  : 0/0
 16558 ;;		Unchanged: 0/0
 16559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16564 ;;Total ram usage:        0 bytes
 16565 ;; Hardware stack levels used:    1
 16566 ;; Hardware stack levels required when called:    6
 16567 ;; This function calls:
 16568 ;;		Nothing
 16569 ;; This function is called by:
 16570 ;;		_SYSTEM_Initialize
 16571 ;; This function uses a non-reentrant model
 16572 ;;
 16573                           
 16574                           
 16575                           ;psect for function _ADCC_Initialize
 16576  0BF4                     _ADCC_Initialize:	
 16577  0BF4                     l6937:	
 16578                           ;incstack = 0
 16579                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 16580                           
 16581                           
 16582                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 16583  0BF4  0022               	movlb	2	; select bank2
 16584  0BF5  018E               	clrf	14	;volatile
 16585                           
 16586                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 16587  0BF6  018F               	clrf	15	;volatile
 16588                           
 16589                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 16590  0BF7  0190               	clrf	16	;volatile
 16591                           
 16592                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 16593  0BF8  0191               	clrf	17	;volatile
 16594                           
 16595                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 16596  0BF9  0192               	clrf	18	;volatile
 16597                           
 16598                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 16599  0BFA  0193               	clrf	19	;volatile
 16600                           
 16601                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 16602  0BFB  018D               	clrf	13	;volatile
 16603                           
 16604                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 16605  0BFC  0021               	movlb	1	; select bank1
 16606  0BFD  019E               	clrf	30	;volatile
 16607                           
 16608                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 16609  0BFE  019B               	clrf	27	;volatile
 16610                           
 16611                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 16612  0BFF  0194               	clrf	20	;volatile
 16613                           
 16614                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 16615  0C00  0195               	clrf	21	;volatile
 16616                           
 16617                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 16618  0C01  0196               	clrf	22	;volatile
 16619                           
 16620                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 16621  0C02  0197               	clrf	23	;volatile
 16622                           
 16623                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 16624  0C03  019A               	clrf	26	;volatile
 16625                           
 16626                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 16627  0C04  0199               	clrf	25	;volatile
 16628                           
 16629                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 16630  0C05  0198               	clrf	24	;volatile
 16631  0C06                     l6939:	
 16632                           
 16633                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 16634  0C06  3084               	movlw	132
 16635  0C07  0093               	movwf	19	;volatile
 16636  0C08                     l6941:	
 16637                           
 16638                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 16639  0C08  019D               	clrf	29	;volatile
 16640  0C09                     l757:	
 16641  0C09  0008               	return
 16642  0C0A                     __end_of_ADCC_Initialize:	
 16643                           
 16644                           	psect	text47
 16645  0CB3                     __ptext47:	
 16646 ;; *************** function _LED_bin *****************
 16647 ;; Defined at:
 16648 ;;		line 48 in file "leds.c"
 16649 ;; Parameters:    Size  Location     Type
 16650 ;;  value           2    3[BANK0 ] unsigned int 
 16651 ;; Auto vars:     Size  Location     Type
 16652 ;;		None
 16653 ;; Return value:  Size  Location     Type
 16654 ;;                  1    wreg      void 
 16655 ;; Registers used:
 16656 ;;		wreg, status,2, status,0
 16657 ;; Tracked objects:
 16658 ;;		On entry : 0/0
 16659 ;;		On exit  : 0/0
 16660 ;;		Unchanged: 0/0
 16661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16662 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16664 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16665 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16666 ;;Total ram usage:        5 bytes
 16667 ;; Hardware stack levels used:    1
 16668 ;; Hardware stack levels required when called:    6
 16669 ;; This function calls:
 16670 ;;		Nothing
 16671 ;; This function is called by:
 16672 ;;		_main
 16673 ;; This function uses a non-reentrant model
 16674 ;;
 16675                           
 16676                           
 16677                           ;psect for function _LED_bin
 16678  0CB3                     _LED_bin:	
 16679  0CB3                     l7147:	
 16680                           ;incstack = 0
 16681                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 16682                           
 16683                           
 16684                           ;leds.c: 50:     LATAbits.LATA4 = (value & 1);
 16685  0CB3  0020               	movlb	0	; select bank0
 16686  0CB4  0823               	movf	LED_bin@value,w
 16687  0CB5  3901               	andlw	1
 16688  0CB6  00A5               	movwf	??_LED_bin
 16689  0CB7  0EA5               	swapf	??_LED_bin,f
 16690  0CB8  0816               	movf	22,w	;volatile
 16691  0CB9  0625               	xorwf	??_LED_bin,w
 16692  0CBA  39EF               	andlw	-17
 16693  0CBB  0625               	xorwf	??_LED_bin,w
 16694  0CBC  0096               	movwf	22	;volatile
 16695                           
 16696                           ;leds.c: 51:     LATAbits.LATA5 = (value >>1);
 16697  0CBD  0824               	movf	LED_bin@value+1,w
 16698  0CBE  00A6               	movwf	??_LED_bin+1
 16699  0CBF  0823               	movf	LED_bin@value,w
 16700  0CC0  00A5               	movwf	??_LED_bin
 16701  0CC1  36A6               	lsrf	??_LED_bin+1,f
 16702  0CC2  0CA5               	rrf	??_LED_bin,f
 16703  0CC3  0825               	movf	??_LED_bin,w
 16704  0CC4  00A7               	movwf	??_LED_bin+2
 16705  0CC5  0EA7               	swapf	??_LED_bin+2,f
 16706  0CC6  0DA7               	rlf	??_LED_bin+2,f
 16707  0CC7  0816               	movf	22,w	;volatile
 16708  0CC8  0627               	xorwf	??_LED_bin+2,w
 16709  0CC9  39DF               	andlw	-33
 16710  0CCA  0627               	xorwf	??_LED_bin+2,w
 16711  0CCB  0096               	movwf	22	;volatile
 16712  0CCC                     l1686:	
 16713  0CCC  0008               	return
 16714  0CCD                     __end_of_LED_bin:	
 16715                           
 16716                           	psect	text48
 16717  0C99                     __ptext48:	
 16718 ;; *************** function _ADC_read *****************
 16719 ;; Defined at:
 16720 ;;		line 623 in file "main.c"
 16721 ;; Parameters:    Size  Location     Type
 16722 ;;		None
 16723 ;; Auto vars:     Size  Location     Type
 16724 ;;		None
 16725 ;; Return value:  Size  Location     Type
 16726 ;;                  2    5[BANK0 ] unsigned int 
 16727 ;; Registers used:
 16728 ;;		wreg, status,2, status,0, pclath, cstack
 16729 ;; Tracked objects:
 16730 ;;		On entry : 0/0
 16731 ;;		On exit  : 0/0
 16732 ;;		Unchanged: 0/0
 16733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16737 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16738 ;;Total ram usage:        2 bytes
 16739 ;; Hardware stack levels used:    1
 16740 ;; Hardware stack levels required when called:    7
 16741 ;; This function calls:
 16742 ;;		_ADCC_GetConversionResult
 16743 ;;		_ADCC_IsConversionDone
 16744 ;;		_ADCC_StartConversion
 16745 ;; This function is called by:
 16746 ;;		_main
 16747 ;; This function uses a non-reentrant model
 16748 ;;
 16749                           
 16750                           
 16751                           ;psect for function _ADC_read
 16752  0C99                     _ADC_read:	
 16753  0C99                     l7137:	
 16754                           ;incstack = 0
 16755                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 16756                           
 16757                           
 16758                           ;main.c: 625:     ADCC_StartConversion(channel_ANA0);
 16759  0C99  3000               	movlw	0
 16760  0C9A  318A  2257  318C   	fcall	_ADCC_StartConversion
 16761                           
 16762                           ;main.c: 626:     while(!ADCC_IsConversionDone()){
 16763  0C9D  2CA2               	goto	l7141
 16764  0C9E                     l7139:	
 16765                           
 16766                           ;main.c: 627:         _delay((unsigned long)((1)*(1000000/4000.0)));
 16767  0C9E  3053               	movlw	83
 16768  0C9F                     u4727:	
 16769  0C9F  0B89               	decfsz	9,f
 16770  0CA0  2C9F               	goto	u4727
 16771  0CA1  0000               	nop
 16772  0CA2                     l7141:	
 16773                           
 16774                           ;main.c: 626:     while(!ADCC_IsConversionDone()){
 16775  0CA2  318A  2238  318C   	fcall	_ADCC_IsConversionDone
 16776  0CA5  3A00               	xorlw	0
 16777  0CA6  1903               	skipnz
 16778  0CA7  2CA9               	goto	u4071
 16779  0CA8  2CAA               	goto	u4070
 16780  0CA9                     u4071:	
 16781  0CA9  2C9E               	goto	l7139
 16782  0CAA                     u4070:	
 16783  0CAA                     l7143:	
 16784                           
 16785                           ;main.c: 630:     return ADCC_GetConversionResult();
 16786  0CAA  318A  2270  318C   	fcall	_ADCC_GetConversionResult
 16787  0CAD  0020               	movlb	0	; select bank0
 16788  0CAE  0824               	movf	?_ADCC_GetConversionResult+1,w
 16789  0CAF  00A6               	movwf	?_ADC_read+1
 16790  0CB0  0823               	movf	?_ADCC_GetConversionResult,w
 16791  0CB1  00A5               	movwf	?_ADC_read
 16792  0CB2                     l1421:	
 16793  0CB2  0008               	return
 16794  0CB3                     __end_of_ADC_read:	
 16795                           
 16796                           	psect	text49
 16797  0A57                     __ptext49:	
 16798 ;; *************** function _ADCC_StartConversion *****************
 16799 ;; Defined at:
 16800 ;;		line 106 in file "mcc_generated_files/adcc.c"
 16801 ;; Parameters:    Size  Location     Type
 16802 ;;  channel         1    wreg     enum E12246
 16803 ;; Auto vars:     Size  Location     Type
 16804 ;;  channel         1    3[BANK0 ] enum E12246
 16805 ;; Return value:  Size  Location     Type
 16806 ;;                  1    wreg      void 
 16807 ;; Registers used:
 16808 ;;		wreg
 16809 ;; Tracked objects:
 16810 ;;		On entry : 0/0
 16811 ;;		On exit  : 0/0
 16812 ;;		Unchanged: 0/0
 16813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16815 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16817 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16818 ;;Total ram usage:        1 bytes
 16819 ;; Hardware stack levels used:    1
 16820 ;; Hardware stack levels required when called:    6
 16821 ;; This function calls:
 16822 ;;		Nothing
 16823 ;; This function is called by:
 16824 ;;		_ADC_read
 16825 ;; This function uses a non-reentrant model
 16826 ;;
 16827                           
 16828                           
 16829                           ;psect for function _ADCC_StartConversion
 16830  0A57                     _ADCC_StartConversion:	
 16831                           
 16832                           ;incstack = 0
 16833                           ; Regs used in _ADCC_StartConversion: [wreg]
 16834                           ;ADCC_StartConversion@channel stored from wreg
 16835  0A57  0020               	movlb	0	; select bank0
 16836  0A58  00A3               	movwf	ADCC_StartConversion@channel
 16837  0A59                     l6987:	
 16838                           
 16839                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 16840  0A59  0823               	movf	ADCC_StartConversion@channel,w
 16841  0A5A  0021               	movlb	1	; select bank1
 16842  0A5B  009E               	movwf	30	;volatile
 16843  0A5C                     l6989:	
 16844                           
 16845                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 16846  0A5C  1793               	bsf	19,7	;volatile
 16847  0A5D                     l6991:	
 16848                           
 16849                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 16850  0A5D  1413               	bsf	19,0	;volatile
 16851  0A5E                     l760:	
 16852  0A5E  0008               	return
 16853  0A5F                     __end_of_ADCC_StartConversion:	
 16854                           
 16855                           	psect	text50
 16856  0A38                     __ptext50:	
 16857 ;; *************** function _ADCC_IsConversionDone *****************
 16858 ;; Defined at:
 16859 ;;		line 118 in file "mcc_generated_files/adcc.c"
 16860 ;; Parameters:    Size  Location     Type
 16861 ;;		None
 16862 ;; Auto vars:     Size  Location     Type
 16863 ;;		None
 16864 ;; Return value:  Size  Location     Type
 16865 ;;                  1    wreg      _Bool 
 16866 ;; Registers used:
 16867 ;;		wreg, status,0
 16868 ;; Tracked objects:
 16869 ;;		On entry : 0/0
 16870 ;;		On exit  : 0/0
 16871 ;;		Unchanged: 0/0
 16872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16877 ;;Total ram usage:        0 bytes
 16878 ;; Hardware stack levels used:    1
 16879 ;; Hardware stack levels required when called:    6
 16880 ;; This function calls:
 16881 ;;		Nothing
 16882 ;; This function is called by:
 16883 ;;		_ADC_read
 16884 ;; This function uses a non-reentrant model
 16885 ;;
 16886                           
 16887                           
 16888                           ;psect for function _ADCC_IsConversionDone
 16889  0A38                     _ADCC_IsConversionDone:	
 16890  0A38                     l6993:	
 16891                           ;incstack = 0
 16892                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 16893                           
 16894                           
 16895                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 16896  0A38  1003               	clrc
 16897  0A39  0021               	movlb	1	; select bank1
 16898  0A3A  1C13               	btfss	19,0	;volatile
 16899  0A3B  1403               	setc
 16900  0A3C  3000               	movlw	0
 16901  0A3D  3D09               	addwfc	9,w
 16902  0A3E                     l763:	
 16903  0A3E  0008               	return
 16904  0A3F                     __end_of_ADCC_IsConversionDone:	
 16905                           
 16906                           	psect	text51
 16907  0A70                     __ptext51:	
 16908 ;; *************** function _ADCC_GetConversionResult *****************
 16909 ;; Defined at:
 16910 ;;		line 124 in file "mcc_generated_files/adcc.c"
 16911 ;; Parameters:    Size  Location     Type
 16912 ;;		None
 16913 ;; Auto vars:     Size  Location     Type
 16914 ;;		None
 16915 ;; Return value:  Size  Location     Type
 16916 ;;                  2    3[BANK0 ] unsigned short 
 16917 ;; Registers used:
 16918 ;;		wreg
 16919 ;; Tracked objects:
 16920 ;;		On entry : 0/0
 16921 ;;		On exit  : 0/0
 16922 ;;		Unchanged: 0/0
 16923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16924 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16927 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16928 ;;Total ram usage:        2 bytes
 16929 ;; Hardware stack levels used:    1
 16930 ;; Hardware stack levels required when called:    6
 16931 ;; This function calls:
 16932 ;;		Nothing
 16933 ;; This function is called by:
 16934 ;;		_ADC_read
 16935 ;; This function uses a non-reentrant model
 16936 ;;
 16937                           
 16938                           
 16939                           ;psect for function _ADCC_GetConversionResult
 16940  0A70                     _ADCC_GetConversionResult:	
 16941  0A70                     l6997:	
 16942                           ;incstack = 0
 16943                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 16944                           
 16945                           
 16946                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 16947  0A70  0021               	movlb	1	; select bank1
 16948  0A71  080D               	movf	13,w	;volatile
 16949  0A72  0020               	movlb	0	; select bank0
 16950  0A73  00A4               	movwf	?_ADCC_GetConversionResult+1
 16951  0A74  0021               	movlb	1	; select bank1
 16952  0A75  080C               	movf	12,w	;volatile
 16953  0A76  0020               	movlb	0	; select bank0
 16954  0A77  00A3               	movwf	?_ADCC_GetConversionResult
 16955  0A78                     l766:	
 16956  0A78  0008               	return
 16957  0A79                     __end_of_ADCC_GetConversionResult:	
 16958                           
 16959                           	psect	intentry
 16960  0004                     __pintentry:	
 16961 ;; *************** function _INTERRUPT_InterruptManager *****************
 16962 ;; Defined at:
 16963 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16964 ;; Parameters:    Size  Location     Type
 16965 ;;		None
 16966 ;; Auto vars:     Size  Location     Type
 16967 ;;		None
 16968 ;; Return value:  Size  Location     Type
 16969 ;;                  1    wreg      void 
 16970 ;; Registers used:
 16971 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16972 ;; Tracked objects:
 16973 ;;		On entry : 0/0
 16974 ;;		On exit  : 0/0
 16975 ;;		Unchanged: 0/0
 16976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16981 ;;Total ram usage:        0 bytes
 16982 ;; Hardware stack levels used:    1
 16983 ;; Hardware stack levels required when called:    5
 16984 ;; This function calls:
 16985 ;;		Absolute function
 16986 ;;		_INT_ISR
 16987 ;;		_TMR0_ISR
 16988 ;;		_TMR1_ISR
 16989 ;;		_TMR2_ISR
 16990 ;;		_i2c_ISR
 16991 ;;		_i2c_busCollisionISR
 16992 ;; This function is called by:
 16993 ;;		Interrupt level 1
 16994 ;; This function uses a non-reentrant model
 16995 ;;
 16996                           
 16997  0004                     _INTERRUPT_InterruptManager:	
 16998                           
 16999                           ;incstack = 0
 17000  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 17001                           
 17002                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17003  0005  3180               	pagesel	$
 17004  0006                     i1l6013:	
 17005                           
 17006                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 17007  0006  002E               	movlb	14	; select bank14
 17008  0007  1C16               	btfss	22,0	;volatile
 17009  0008  280A               	goto	u317_21
 17010  0009  280B               	goto	u317_20
 17011  000A                     u317_21:	
 17012  000A  2813               	goto	i1l378
 17013  000B                     u317_20:	
 17014  000B                     i1l6015:	
 17015  000B  1C0C               	btfss	12,0	;volatile
 17016  000C  280E               	goto	u318_21
 17017  000D  280F               	goto	u318_20
 17018  000E                     u318_21:	
 17019  000E  2813               	goto	i1l378
 17020  000F                     u318_20:	
 17021  000F                     i1l6017:	
 17022                           
 17023                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 17024  000F  318A  221F  3180   	fcall	_INT_ISR
 17025                           
 17026                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17027  0012  2859               	goto	i1l392
 17028  0013                     i1l378:	
 17029                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 17030                           
 17031  0013  1E96               	btfss	22,5	;volatile
 17032  0014  2816               	goto	u319_21
 17033  0015  2817               	goto	u319_20
 17034  0016                     u319_21:	
 17035  0016  281F               	goto	i1l380
 17036  0017                     u319_20:	
 17037  0017                     i1l6019:	
 17038  0017  1E8C               	btfss	12,5	;volatile
 17039  0018  281A               	goto	u320_21
 17040  0019  281B               	goto	u320_20
 17041  001A                     u320_21:	
 17042  001A  281F               	goto	i1l380
 17043  001B                     u320_20:	
 17044  001B                     i1l6021:	
 17045                           
 17046                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 17047  001B  318B  2327  3180   	fcall	_TMR0_ISR
 17048                           
 17049                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 17050  001E  2859               	goto	i1l392
 17051  001F                     i1l380:	
 17052                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 17053                           
 17054  001F  1F0B               	btfss	11,6	;volatile
 17055  0020  2822               	goto	u321_21
 17056  0021  2823               	goto	u321_20
 17057  0022                     u321_21:	
 17058  0022  2859               	goto	i1l386
 17059  0023                     u321_20:	
 17060  0023                     i1l6023:	
 17061                           
 17062                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 17063  0023  1C99               	btfss	25,1	;volatile
 17064  0024  2826               	goto	u322_21
 17065  0025  2827               	goto	u322_20
 17066  0026                     u322_21:	
 17067  0026  2832               	goto	i1l383
 17068  0027                     u322_20:	
 17069  0027                     i1l6025:	
 17070  0027  1C8F               	btfss	15,1	;volatile
 17071  0028  282A               	goto	u323_21
 17072  0029  282B               	goto	u323_20
 17073  002A                     u323_21:	
 17074  002A  2832               	goto	i1l383
 17075  002B                     u323_20:	
 17076  002B                     i1l6027:	
 17077                           
 17078                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_busCollisionISR();
 17079  002B  0021               	movlb	1	; select bank1
 17080  002C  084E               	movf	(_i2c1_driver_busCollisionISR+1)^(0+128),w
 17081  002D  008A               	movwf	10
 17082  002E  084D               	movf	_i2c1_driver_busCollisionISR^(0+128),w
 17083  002F  000A               	callw
 17084  0030  3180               	pagesel	$
 17085                           
 17086                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 17087  0031  2859               	goto	i1l392
 17088  0032                     i1l383:	
 17089                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 17090                           
 17091  0032  1C19               	btfss	25,0	;volatile
 17092  0033  2835               	goto	u324_21
 17093  0034  2836               	goto	u324_20
 17094  0035                     u324_21:	
 17095  0035  2841               	goto	i1l385
 17096  0036                     u324_20:	
 17097  0036                     i1l6029:	
 17098  0036  1C0F               	btfss	15,0	;volatile
 17099  0037  2839               	goto	u325_21
 17100  0038  283A               	goto	u325_20
 17101  0039                     u325_21:	
 17102  0039  2841               	goto	i1l385
 17103  003A                     u325_20:	
 17104  003A                     i1l6031:	
 17105                           
 17106                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_i2cISR();
 17107  003A  0021               	movlb	1	; select bank1
 17108  003B  084C               	movf	(_i2c1_driver_i2cISR+1)^(0+128),w
 17109  003C  008A               	movwf	10
 17110  003D  084B               	movf	_i2c1_driver_i2cISR^(0+128),w
 17111  003E  000A               	callw
 17112  003F  3180               	pagesel	$
 17113                           
 17114                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 17115  0040  2859               	goto	i1l392
 17116  0041                     i1l385:	
 17117                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 17118                           
 17119  0041  1C1A               	btfss	26,0	;volatile
 17120  0042  2844               	goto	u326_21
 17121  0043  2845               	goto	u326_20
 17122  0044                     u326_21:	
 17123  0044  284D               	goto	i1l387
 17124  0045                     u326_20:	
 17125  0045                     i1l6033:	
 17126  0045  1C10               	btfss	16,0	;volatile
 17127  0046  2848               	goto	u327_21
 17128  0047  2849               	goto	u327_20
 17129  0048                     u327_21:	
 17130  0048  284D               	goto	i1l387
 17131  0049                     u327_20:	
 17132  0049                     i1l6035:	
 17133                           
 17134                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 17135  0049  318C  2420  3180   	fcall	_TMR1_ISR
 17136                           
 17137                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 17138  004C  2859               	goto	i1l392
 17139  004D                     i1l387:	
 17140                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 17141                           
 17142  004D  1C9A               	btfss	26,1	;volatile
 17143  004E  2850               	goto	u328_21
 17144  004F  2851               	goto	u328_20
 17145  0050                     u328_21:	
 17146  0050  2859               	goto	i1l386
 17147  0051                     u328_20:	
 17148  0051                     i1l6037:	
 17149  0051  1C90               	btfss	16,1	;volatile
 17150  0052  2854               	goto	u329_21
 17151  0053  2855               	goto	u329_20
 17152  0054                     u329_21:	
 17153  0054  2859               	goto	i1l386
 17154  0055                     u329_20:	
 17155  0055                     i1l6039:	
 17156                           
 17157                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR2_ISR();
 17158  0055  318B  2336  3180   	fcall	_TMR2_ISR
 17159                           
 17160                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 17161  0058  2859               	goto	i1l392
 17162  0059                     i1l386:	
 17163  0059                     i1l392:	
 17164  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 17165  005A  0009               	retfie
 17166  005B                     __end_of_INTERRUPT_InterruptManager:	
 17167                           
 17168                           	psect	text53
 17169  09EE                     __ptext53:	
 17170 ;; *************** function _i2c_busCollisionISR *****************
 17171 ;; Defined at:
 17172 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 17173 ;; Parameters:    Size  Location     Type
 17174 ;;		None
 17175 ;; Auto vars:     Size  Location     Type
 17176 ;;		None
 17177 ;; Return value:  Size  Location     Type
 17178 ;;                  1    wreg      void 
 17179 ;; Registers used:
 17180 ;;		status,2, status,0, pclath, cstack
 17181 ;; Tracked objects:
 17182 ;;		On entry : 0/0
 17183 ;;		On exit  : 0/0
 17184 ;;		Unchanged: 0/0
 17185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17190 ;;Total ram usage:        0 bytes
 17191 ;; Hardware stack levels used:    1
 17192 ;; Hardware stack levels required when called:    1
 17193 ;; This function calls:
 17194 ;;		_i2c1_driver_clearBusCollision
 17195 ;; This function is called by:
 17196 ;;		_i2c_open
 17197 ;;		_INTERRUPT_InterruptManager
 17198 ;; This function uses a non-reentrant model
 17199 ;;
 17200                           
 17201                           
 17202                           ;psect for function _i2c_busCollisionISR
 17203  09EE                     _i2c_busCollisionISR:	
 17204  09EE                     i1l5663:	
 17205                           ;incstack = 0
 17206                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 17207                           
 17208                           
 17209                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 17210  09EE  3189  21E0  3189   	fcall	_i2c1_driver_clearBusCollision
 17211  09F1                     i1l213:	
 17212  09F1  0008               	return
 17213  09F2                     __end_of_i2c_busCollisionISR:	
 17214                           
 17215                           	psect	text54
 17216  09E0                     __ptext54:	
 17217 ;; *************** function _i2c1_driver_clearBusCollision *****************
 17218 ;; Defined at:
 17219 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 17220 ;; Parameters:    Size  Location     Type
 17221 ;;		None
 17222 ;; Auto vars:     Size  Location     Type
 17223 ;;		None
 17224 ;; Return value:  Size  Location     Type
 17225 ;;                  1    wreg      void 
 17226 ;; Registers used:
 17227 ;;		None
 17228 ;; Tracked objects:
 17229 ;;		On entry : 0/0
 17230 ;;		On exit  : 0/0
 17231 ;;		Unchanged: 0/0
 17232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17237 ;;Total ram usage:        0 bytes
 17238 ;; Hardware stack levels used:    1
 17239 ;; This function calls:
 17240 ;;		Nothing
 17241 ;; This function is called by:
 17242 ;;		_i2c_busCollisionISR
 17243 ;; This function uses a non-reentrant model
 17244 ;;
 17245                           
 17246                           
 17247                           ;psect for function _i2c1_driver_clearBusCollision
 17248  09E0                     _i2c1_driver_clearBusCollision:	
 17249  09E0                     i1l5341:	
 17250                           ;incstack = 0
 17251                           ; Regs used in _i2c1_driver_clearBusCollision: []
 17252                           
 17253                           
 17254                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 17255  09E0  002E               	movlb	14	; select bank14
 17256  09E1  108F               	bcf	15,1	;volatile
 17257  09E2                     i1l584:	
 17258  09E2  0008               	return
 17259  09E3                     __end_of_i2c1_driver_clearBusCollision:	
 17260                           
 17261                           	psect	text55
 17262  0E6E                     __ptext55:	
 17263 ;; *************** function _i2c_ISR *****************
 17264 ;; Defined at:
 17265 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 17266 ;; Parameters:    Size  Location     Type
 17267 ;;		None
 17268 ;; Auto vars:     Size  Location     Type
 17269 ;;		None
 17270 ;; Return value:  Size  Location     Type
 17271 ;;                  1    wreg      void 
 17272 ;; Registers used:
 17273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17274 ;; Tracked objects:
 17275 ;;		On entry : 0/0
 17276 ;;		On exit  : 0/0
 17277 ;;		Unchanged: 0/0
 17278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17281 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17282 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17283 ;;Total ram usage:        3 bytes
 17284 ;; Hardware stack levels used:    1
 17285 ;; Hardware stack levels required when called:    4
 17286 ;; This function calls:
 17287 ;;		_do_I2C_DO_ACK
 17288 ;;		_do_I2C_DO_ADDRESS_NACK
 17289 ;;		_do_I2C_DO_NACK_RESTART
 17290 ;;		_do_I2C_DO_NACK_STOP
 17291 ;;		_do_I2C_IDLE
 17292 ;;		_do_I2C_RCEN
 17293 ;;		_do_I2C_RESET
 17294 ;;		_do_I2C_RX
 17295 ;;		_do_I2C_SEND_ADR_READ
 17296 ;;		_do_I2C_SEND_ADR_WRITE
 17297 ;;		_do_I2C_SEND_RESTART
 17298 ;;		_do_I2C_SEND_RESTART_READ
 17299 ;;		_do_I2C_SEND_RESTART_WRITE
 17300 ;;		_do_I2C_SEND_STOP
 17301 ;;		_do_I2C_TX
 17302 ;;		_do_I2C_TX_EMPTY
 17303 ;;		_i2c1_driver_isNACK
 17304 ;;		_mssp1_clearIRQ
 17305 ;; This function is called by:
 17306 ;;		_i2c_open
 17307 ;;		_i2c_poller
 17308 ;;		_INTERRUPT_InterruptManager
 17309 ;; This function uses a non-reentrant model
 17310 ;;
 17311                           
 17312                           
 17313                           ;psect for function _i2c_ISR
 17314  0E6E                     _i2c_ISR:	
 17315  0E6E                     i1l5653:	
 17316                           ;incstack = 0
 17317                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17318                           
 17319                           
 17320                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 17321  0E6E  3189  21DD  318E   	fcall	_mssp1_clearIRQ
 17322  0E71                     i1l5655:	
 17323                           
 17324                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 17325  0E71  0021               	movlb	1	; select bank1
 17326  0E72  1DA0               	btfss	_i2c_status^(0+128),3
 17327  0E73  2E75               	goto	u277_21
 17328  0E74  2E76               	goto	u277_20
 17329  0E75                     u277_21:	
 17330  0E75  2E83               	goto	i1l5661
 17331  0E76                     u277_20:	
 17332  0E76                     i1l5657:	
 17333  0E76  318A  223F  318E   	fcall	_i2c1_driver_isNACK
 17334  0E79  1C03               	btfss	3,0
 17335  0E7A  2E7C               	goto	u278_21
 17336  0E7B  2E7D               	goto	u278_20
 17337  0E7C                     u278_21:	
 17338  0E7C  2E83               	goto	i1l5661
 17339  0E7D                     u278_20:	
 17340  0E7D                     i1l5659:	
 17341                           
 17342                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 17343  0E7D  300F               	movlw	15
 17344  0E7E  0020               	movlb	0	; select bank0
 17345  0E7F  00A0               	movwf	??_i2c_ISR
 17346  0E80  0820               	movf	??_i2c_ISR,w
 17347  0E81  0021               	movlb	1	; select bank1
 17348  0E82  00A9               	movwf	(_i2c_status^(0+128)+9)
 17349  0E83                     i1l5661:	
 17350                           
 17351                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 17352  0E83  0021               	movlb	1	; select bank1
 17353  0E84  0829               	movf	(_i2c_status^(0+128)+9),w
 17354  0E85  0020               	movlb	0	; select bank0
 17355  0E86  00A0               	movwf	??_i2c_ISR
 17356  0E87  01A1               	clrf	??_i2c_ISR+1
 17357  0E88  35A0               	lslf	??_i2c_ISR,f
 17358  0E89  0DA1               	rlf	??_i2c_ISR+1,f
 17359  0E8A  3000               	movlw	low (_fsmStateTable| (0+32768))
 17360  0E8B  0720               	addwf	??_i2c_ISR,w
 17361  0E8C  0084               	movwf	4
 17362  0E8D  3090               	movlw	high (_fsmStateTable| (0+32768))
 17363  0E8E  3D21               	addwfc	??_i2c_ISR+1,w
 17364  0E8F  0085               	movwf	5
 17365  0E90  3F01               	moviw [1]fsr0
 17366  0E91  008A               	movwf	10
 17367  0E92  3F00               	moviw [0]fsr0
 17368  0E93  000A               	callw
 17369  0E94  318E               	pagesel	$
 17370  0E95  0020               	movlb	0	; select bank0
 17371  0E96  00A2               	movwf	??_i2c_ISR+2
 17372  0E97  0822               	movf	??_i2c_ISR+2,w
 17373  0E98  0021               	movlb	1	; select bank1
 17374  0E99  00A9               	movwf	(_i2c_status^(0+128)+9)
 17375  0E9A                     i1l210:	
 17376  0E9A  0008               	return
 17377  0E9B                     __end_of_i2c_ISR:	
 17378                           
 17379                           	psect	text56
 17380  09DD                     __ptext56:	
 17381 ;; *************** function _mssp1_clearIRQ *****************
 17382 ;; Defined at:
 17383 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 17384 ;; Parameters:    Size  Location     Type
 17385 ;;		None
 17386 ;; Auto vars:     Size  Location     Type
 17387 ;;		None
 17388 ;; Return value:  Size  Location     Type
 17389 ;;                  1    wreg      void 
 17390 ;; Registers used:
 17391 ;;		None
 17392 ;; Tracked objects:
 17393 ;;		On entry : 0/0
 17394 ;;		On exit  : 0/0
 17395 ;;		Unchanged: 0/0
 17396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17401 ;;Total ram usage:        0 bytes
 17402 ;; Hardware stack levels used:    1
 17403 ;; This function calls:
 17404 ;;		Nothing
 17405 ;; This function is called by:
 17406 ;;		_i2c_ISR
 17407 ;;		_i2c_open
 17408 ;;		_i2c_close
 17409 ;; This function uses a non-reentrant model
 17410 ;;
 17411                           
 17412                           
 17413                           ;psect for function _mssp1_clearIRQ
 17414  09DD                     _mssp1_clearIRQ:	
 17415  09DD                     i1l5157:	
 17416                           ;incstack = 0
 17417                           ; Regs used in _mssp1_clearIRQ: []
 17418                           
 17419                           
 17420                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 17421  09DD  002E               	movlb	14	; select bank14
 17422  09DE  100F               	bcf	15,0	;volatile
 17423  09DF                     i1l488:	
 17424  09DF  0008               	return
 17425  09E0                     __end_of_mssp1_clearIRQ:	
 17426                           
 17427                           	psect	text57
 17428  0795                     __ptext57:	
 17429 ;; *************** function _do_I2C_RX *****************
 17430 ;; Defined at:
 17431 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 17432 ;; Parameters:    Size  Location     Type
 17433 ;;		None
 17434 ;; Auto vars:     Size  Location     Type
 17435 ;;		None
 17436 ;; Return value:  Size  Location     Type
 17437 ;;                  1    wreg      enum E12722
 17438 ;; Registers used:
 17439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17440 ;; Tracked objects:
 17441 ;;		On entry : 0/0
 17442 ;;		On exit  : 0/0
 17443 ;;		Unchanged: 0/0
 17444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17447 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17448 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17449 ;;Total ram usage:        3 bytes
 17450 ;; Hardware stack levels used:    1
 17451 ;; Hardware stack levels required when called:    3
 17452 ;; This function calls:
 17453 ;;		Absolute function
 17454 ;;		_do_I2C_DO_NACK_RESTART
 17455 ;;		_do_I2C_DO_NACK_STOP
 17456 ;;		_i2c1_driver_getRXData
 17457 ;;		_i2c1_driver_sendACK
 17458 ;;		_i2c_restartWrite
 17459 ;;		_rd1RegCompleteHandler
 17460 ;;		_rd2RegCompleteHandler
 17461 ;;		_rdBlkRegCompleteHandler
 17462 ;;		_returnReset
 17463 ;;		_returnStop
 17464 ;;		_wr1RegCompleteHandler
 17465 ;;		_wr2RegCompleteHandler
 17466 ;; This function is called by:
 17467 ;;		_i2c_ISR
 17468 ;; This function uses a non-reentrant model
 17469 ;;
 17470                           
 17471                           
 17472                           ;psect for function _do_I2C_RX
 17473  0795                     _do_I2C_RX:	
 17474  0795                     i1l5283:	
 17475                           ;incstack = 0
 17476                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17477                           
 17478                           
 17479                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 17480  0795  3189  21D7  3187   	fcall	_i2c1_driver_getRXData
 17481  0798  00FA               	movwf	??_do_I2C_RX
 17482  0799  0021               	movlb	1	; select bank1
 17483  079A  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 17484  079B  0086               	movwf	6
 17485  079C  0187               	clrf	7
 17486  079D  087A               	movf	??_do_I2C_RX,w
 17487  079E  0081               	movwf	1
 17488  079F                     i1l5285:	
 17489  079F  3001               	movlw	1
 17490  07A0  00FA               	movwf	??_do_I2C_RX
 17491  07A1  087A               	movf	??_do_I2C_RX,w
 17492  07A2  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 17493  07A3                     i1l5287:	
 17494                           
 17495                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 17496  07A3  3001               	movlw	1
 17497  07A4  02A3               	subwf	(_i2c_status^(0+128)+3),f
 17498  07A5  3000               	movlw	0
 17499  07A6  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 17500  07A7  0823               	movf	(_i2c_status^(0+128)+3),w
 17501  07A8  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 17502  07A9  1903               	btfsc	3,2
 17503  07AA  2FAC               	goto	u258_21
 17504  07AB  2FAD               	goto	u258_20
 17505  07AC                     u258_21:	
 17506  07AC  2FB2               	goto	i1l185
 17507  07AD                     u258_20:	
 17508  07AD                     i1l5289:	
 17509                           
 17510                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 17511  07AD  3189  21E6  3187   	fcall	_i2c1_driver_sendACK
 17512  07B0                     i1l5291:	
 17513                           
 17514                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 17515  07B0  3005               	movlw	5
 17516  07B1  2FDE               	goto	i1l186
 17517  07B2                     i1l185:	
 17518                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 17519                           
 17520                           
 17521                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 17522  07B2  1520               	bsf	_i2c_status^(0+128),2
 17523                           
 17524                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 17525  07B3  2FBC               	goto	i1l5307
 17526  07B4                     i1l5297:	
 17527                           
 17528                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 17529  07B4  318A  221A  3187   	fcall	_do_I2C_DO_NACK_RESTART
 17530  07B7  2FDE               	goto	i1l186
 17531  07B8                     i1l5301:	
 17532                           
 17533                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 17534  07B8  318A  2215  3187   	fcall	_do_I2C_DO_NACK_STOP
 17535  07BB  2FDE               	goto	i1l186
 17536  07BC                     i1l5307:	
 17537  07BC  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 17538  07BD  00FA               	movwf	??_do_I2C_RX
 17539  07BE  087A               	movf	??_do_I2C_RX,w
 17540  07BF  00F9               	movwf	rdBlkRegCompleteHandler@p
 17541  07C0  300B               	movlw	11
 17542  07C1  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17543  07C2  0086               	movwf	6
 17544  07C3  0187               	clrf	7
 17545  07C4  3F41               	moviw [1]fsr1
 17546  07C5  008A               	movwf	10
 17547  07C6  3F40               	moviw [0]fsr1
 17548  07C7  000A               	callw
 17549  07C8  3187               	pagesel	$
 17550  07C9  00FB               	movwf	??_do_I2C_RX+1
 17551  07CA  01FC               	clrf	??_do_I2C_RX+2
 17552                           
 17553                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17554                           ; Switch size 1, requested type "simple"
 17555                           ; Number of cases is 1, Range of values is 0 to 0
 17556                           ; switch strategies available:
 17557                           ; Name         Instructions Cycles
 17558                           ; simple_byte            4     3 (average)
 17559                           ; direct_byte            8     6 (fixed)
 17560                           ; jumptable            260     6 (fixed)
 17561                           ;	Chosen strategy is simple_byte
 17562  07CB  087C               	movf	??_do_I2C_RX+2,w
 17563  07CC  3A00               	xorlw	0	; case 0
 17564  07CD  1903               	skipnz
 17565  07CE  2FD0               	goto	i1l7815
 17566  07CF  2FB8               	goto	i1l5301
 17567  07D0                     i1l7815:	
 17568                           
 17569                           ; Switch size 1, requested type "simple"
 17570                           ; Number of cases is 4, Range of values is 1 to 4
 17571                           ; switch strategies available:
 17572                           ; Name         Instructions Cycles
 17573                           ; simple_byte           13     7 (average)
 17574                           ; direct_byte           17     9 (fixed)
 17575                           ; jumptable            263     9 (fixed)
 17576                           ;	Chosen strategy is simple_byte
 17577  07D0  087B               	movf	??_do_I2C_RX+1,w
 17578  07D1  3A01               	xorlw	1	; case 1
 17579  07D2  1903               	skipnz
 17580  07D3  2FB8               	goto	i1l5301
 17581  07D4  3A03               	xorlw	3	; case 2
 17582  07D5  1903               	skipnz
 17583  07D6  2FB4               	goto	i1l5297
 17584  07D7  3A01               	xorlw	1	; case 3
 17585  07D8  1903               	skipnz
 17586  07D9  2FB4               	goto	i1l5297
 17587  07DA  3A07               	xorlw	7	; case 4
 17588  07DB  1903               	skipnz
 17589  07DC  2FB8               	goto	i1l5301
 17590  07DD  2FB8               	goto	i1l5301
 17591  07DE                     i1l186:	
 17592  07DE  0008               	return
 17593  07DF                     __end_of_do_I2C_RX:	
 17594                           
 17595                           	psect	text58
 17596  0659                     __ptext58:	
 17597 ;; *************** function _do_I2C_TX *****************
 17598 ;; Defined at:
 17599 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 17600 ;; Parameters:    Size  Location     Type
 17601 ;;		None
 17602 ;; Auto vars:     Size  Location     Type
 17603 ;;		None
 17604 ;; Return value:  Size  Location     Type
 17605 ;;                  1    wreg      enum E12722
 17606 ;; Registers used:
 17607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17608 ;; Tracked objects:
 17609 ;;		On entry : 0/0
 17610 ;;		On exit  : 0/0
 17611 ;;		Unchanged: 0/0
 17612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17615 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17616 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17617 ;;Total ram usage:        3 bytes
 17618 ;; Hardware stack levels used:    1
 17619 ;; Hardware stack levels required when called:    3
 17620 ;; This function calls:
 17621 ;;		Absolute function
 17622 ;;		_do_I2C_SEND_RESTART_READ
 17623 ;;		_do_I2C_SEND_RESTART_WRITE
 17624 ;;		_do_I2C_SEND_STOP
 17625 ;;		_i2c1_driver_TXData
 17626 ;;		_i2c1_driver_isNACK
 17627 ;;		_i2c_restartWrite
 17628 ;;		_rd1RegCompleteHandler
 17629 ;;		_rd2RegCompleteHandler
 17630 ;;		_rdBlkRegCompleteHandler
 17631 ;;		_returnReset
 17632 ;;		_returnStop
 17633 ;;		_wr1RegCompleteHandler
 17634 ;;		_wr2RegCompleteHandler
 17635 ;; This function is called by:
 17636 ;;		_i2c_ISR
 17637 ;; This function uses a non-reentrant model
 17638 ;;
 17639                           
 17640                           
 17641                           ;psect for function _do_I2C_TX
 17642  0659                     _do_I2C_TX:	
 17643  0659                     i1l5249:	
 17644                           ;incstack = 0
 17645                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17646                           
 17647                           
 17648                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 17649  0659  318A  223F  3186   	fcall	_i2c1_driver_isNACK
 17650  065C  1C03               	btfss	3,0
 17651  065D  2E5F               	goto	u256_21
 17652  065E  2E60               	goto	u256_20
 17653  065F                     u256_21:	
 17654  065F  2E90               	goto	i1l169
 17655  0660                     u256_20:	
 17656  0660  2E6D               	goto	i1l5267
 17657  0661                     i1l5253:	
 17658                           
 17659                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 17660  0661  3189  21FC  3186   	fcall	_do_I2C_SEND_RESTART_READ
 17661  0664  2EAC               	goto	i1l172
 17662  0665                     i1l5257:	
 17663                           
 17664                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 17665  0665  318A  2201  3186   	fcall	_do_I2C_SEND_RESTART_WRITE
 17666  0668  2EAC               	goto	i1l172
 17667  0669                     i1l5261:	
 17668                           
 17669                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 17670  0669  318A  220B  3186   	fcall	_do_I2C_SEND_STOP
 17671  066C  2EAC               	goto	i1l172
 17672  066D                     i1l5267:	
 17673  066D  0021               	movlb	1	; select bank1
 17674  066E  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 17675  066F  00FA               	movwf	??_do_I2C_TX
 17676  0670  087A               	movf	??_do_I2C_TX,w
 17677  0671  00F9               	movwf	rdBlkRegCompleteHandler@p
 17678  0672  3011               	movlw	17
 17679  0673  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17680  0674  0086               	movwf	6
 17681  0675  0187               	clrf	7
 17682  0676  3F41               	moviw [1]fsr1
 17683  0677  008A               	movwf	10
 17684  0678  3F40               	moviw [0]fsr1
 17685  0679  000A               	callw
 17686  067A  3186               	pagesel	$
 17687  067B  00FB               	movwf	??_do_I2C_TX+1
 17688  067C  01FC               	clrf	??_do_I2C_TX+2
 17689                           
 17690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17691                           ; Switch size 1, requested type "simple"
 17692                           ; Number of cases is 1, Range of values is 0 to 0
 17693                           ; switch strategies available:
 17694                           ; Name         Instructions Cycles
 17695                           ; simple_byte            4     3 (average)
 17696                           ; direct_byte            8     6 (fixed)
 17697                           ; jumptable            260     6 (fixed)
 17698                           ;	Chosen strategy is simple_byte
 17699  067D  087C               	movf	??_do_I2C_TX+2,w
 17700  067E  3A00               	xorlw	0	; case 0
 17701  067F  1903               	skipnz
 17702  0680  2E82               	goto	i1l7817
 17703  0681  2E69               	goto	i1l5261
 17704  0682                     i1l7817:	
 17705                           
 17706                           ; Switch size 1, requested type "simple"
 17707                           ; Number of cases is 4, Range of values is 1 to 4
 17708                           ; switch strategies available:
 17709                           ; Name         Instructions Cycles
 17710                           ; simple_byte           13     7 (average)
 17711                           ; direct_byte           17     9 (fixed)
 17712                           ; jumptable            263     9 (fixed)
 17713                           ;	Chosen strategy is simple_byte
 17714  0682  087B               	movf	??_do_I2C_TX+1,w
 17715  0683  3A01               	xorlw	1	; case 1
 17716  0684  1903               	skipnz
 17717  0685  2E69               	goto	i1l5261
 17718  0686  3A03               	xorlw	3	; case 2
 17719  0687  1903               	skipnz
 17720  0688  2E61               	goto	i1l5253
 17721  0689  3A01               	xorlw	1	; case 3
 17722  068A  1903               	skipnz
 17723  068B  2E65               	goto	i1l5257
 17724  068C  3A07               	xorlw	7	; case 4
 17725  068D  1903               	skipnz
 17726  068E  2E69               	goto	i1l5261
 17727  068F  2E69               	goto	i1l5261
 17728  0690                     i1l169:	
 17729                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 17730                           
 17731                           
 17732                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 17733  0690  0021               	movlb	1	; select bank1
 17734  0691  11A0               	bcf	_i2c_status^(0+128),3
 17735  0692                     i1l5269:	
 17736                           
 17737                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 17738  0692  3002               	movlw	2
 17739  0693  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17740  0694  0086               	movwf	6
 17741  0695  0187               	clrf	7
 17742  0696  3F40               	moviw [0]fsr1
 17743  0697  0084               	movwf	4
 17744  0698  0185               	clrf	5
 17745  0699  0A81               	incf	1,f
 17746  069A  0800               	movf	0,w
 17747  069B  3189  21F2  3186   	fcall	_i2c1_driver_TXData
 17748  069E                     i1l5271:	
 17749                           
 17750                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 17751  069E  3001               	movlw	1
 17752  069F  0021               	movlb	1	; select bank1
 17753  06A0  02A3               	subwf	(_i2c_status^(0+128)+3),f
 17754  06A1  3000               	movlw	0
 17755  06A2  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 17756  06A3  0823               	movf	(_i2c_status^(0+128)+3),w
 17757  06A4  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 17758  06A5  1D03               	btfss	3,2
 17759  06A6  2EA8               	goto	u257_21
 17760  06A7  2EA9               	goto	u257_20
 17761  06A8                     u257_21:	
 17762  06A8  2EAB               	goto	i1l5275
 17763  06A9                     u257_20:	
 17764  06A9                     i1l5273:	
 17765  06A9  3006               	movlw	6
 17766  06AA  2EAC               	goto	i1l172
 17767  06AB                     i1l5275:	
 17768  06AB  3003               	movlw	3
 17769  06AC                     i1l172:	
 17770  06AC  0008               	return
 17771  06AD                     __end_of_do_I2C_TX:	
 17772                           
 17773                           	psect	text59
 17774  0E42                     __ptext59:	
 17775 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 17776 ;; Defined at:
 17777 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 17778 ;; Parameters:    Size  Location     Type
 17779 ;;		None
 17780 ;; Auto vars:     Size  Location     Type
 17781 ;;		None
 17782 ;; Return value:  Size  Location     Type
 17783 ;;                  1    wreg      enum E12722
 17784 ;; Registers used:
 17785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17786 ;; Tracked objects:
 17787 ;;		On entry : 0/0
 17788 ;;		On exit  : 0/0
 17789 ;;		Unchanged: 0/0
 17790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17793 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17794 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17795 ;;Total ram usage:        3 bytes
 17796 ;; Hardware stack levels used:    1
 17797 ;; Hardware stack levels required when called:    3
 17798 ;; This function calls:
 17799 ;;		Absolute function
 17800 ;;		_do_I2C_SEND_RESTART
 17801 ;;		_do_I2C_SEND_STOP
 17802 ;;		_i2c_restartWrite
 17803 ;;		_rd1RegCompleteHandler
 17804 ;;		_rd2RegCompleteHandler
 17805 ;;		_rdBlkRegCompleteHandler
 17806 ;;		_returnReset
 17807 ;;		_returnStop
 17808 ;;		_wr1RegCompleteHandler
 17809 ;;		_wr2RegCompleteHandler
 17810 ;; This function is called by:
 17811 ;;		_i2c_ISR
 17812 ;; This function uses a non-reentrant model
 17813 ;;
 17814                           
 17815                           
 17816                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 17817  0E42                     _do_I2C_DO_ADDRESS_NACK:	
 17818  0E42                     i1l5227:	
 17819                           ;incstack = 0
 17820                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17821                           
 17822                           
 17823                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 17824  0E42  0021               	movlb	1	; select bank1
 17825  0E43  11A0               	bcf	_i2c_status^(0+128),3
 17826  0E44                     i1l5229:	
 17827                           
 17828                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 17829  0E44  3002               	movlw	2
 17830  0E45  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 17831  0E46  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 17832  0E47  00AA               	movwf	(_i2c_status^(0+128)+10)
 17833                           
 17834                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 17835  0E48  2E51               	goto	i1l5241
 17836  0E49                     i1l5231:	
 17837                           
 17838                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 17839  0E49  318A  2206  318E   	fcall	_do_I2C_SEND_RESTART
 17840  0E4C  2E6D               	goto	i1l164
 17841  0E4D                     i1l5235:	
 17842                           
 17843                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 17844  0E4D  318A  220B  318E   	fcall	_do_I2C_SEND_STOP
 17845  0E50  2E6D               	goto	i1l164
 17846  0E51                     i1l5241:	
 17847  0E51  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 17848  0E52  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 17849  0E53  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 17850  0E54  00F9               	movwf	rdBlkRegCompleteHandler@p
 17851  0E55  300F               	movlw	15
 17852  0E56  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17853  0E57  0086               	movwf	6
 17854  0E58  0187               	clrf	7
 17855  0E59  3F41               	moviw [1]fsr1
 17856  0E5A  008A               	movwf	10
 17857  0E5B  3F40               	moviw [0]fsr1
 17858  0E5C  000A               	callw
 17859  0E5D  318E               	pagesel	$
 17860  0E5E  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 17861  0E5F  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 17862                           
 17863                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17864                           ; Switch size 1, requested type "simple"
 17865                           ; Number of cases is 1, Range of values is 0 to 0
 17866                           ; switch strategies available:
 17867                           ; Name         Instructions Cycles
 17868                           ; simple_byte            4     3 (average)
 17869                           ; direct_byte            8     6 (fixed)
 17870                           ; jumptable            260     6 (fixed)
 17871                           ;	Chosen strategy is simple_byte
 17872  0E60  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 17873  0E61  3A00               	xorlw	0	; case 0
 17874  0E62  1903               	skipnz
 17875  0E63  2E65               	goto	i1l7819
 17876  0E64  2E4D               	goto	i1l5235
 17877  0E65                     i1l7819:	
 17878                           
 17879                           ; Switch size 1, requested type "simple"
 17880                           ; Number of cases is 2, Range of values is 2 to 3
 17881                           ; switch strategies available:
 17882                           ; Name         Instructions Cycles
 17883                           ; simple_byte            7     4 (average)
 17884                           ; direct_byte           13     9 (fixed)
 17885                           ; jumptable            263     9 (fixed)
 17886                           ;	Chosen strategy is simple_byte
 17887  0E65  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 17888  0E66  3A02               	xorlw	2	; case 2
 17889  0E67  1903               	skipnz
 17890  0E68  2E49               	goto	i1l5231
 17891  0E69  3A01               	xorlw	1	; case 3
 17892  0E6A  1903               	skipnz
 17893  0E6B  2E49               	goto	i1l5231
 17894  0E6C  2E4D               	goto	i1l5235
 17895  0E6D                     i1l164:	
 17896  0E6D  0008               	return
 17897  0E6E                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 17898                           
 17899                           	psect	text60
 17900  0A1A                     __ptext60:	
 17901 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 17902 ;; Defined at:
 17903 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 17904 ;; Parameters:    Size  Location     Type
 17905 ;;		None
 17906 ;; Auto vars:     Size  Location     Type
 17907 ;;		None
 17908 ;; Return value:  Size  Location     Type
 17909 ;;                  1    wreg      enum E12722
 17910 ;; Registers used:
 17911 ;;		wreg, status,2, status,0, pclath, cstack
 17912 ;; Tracked objects:
 17913 ;;		On entry : 0/0
 17914 ;;		On exit  : 0/0
 17915 ;;		Unchanged: 0/0
 17916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17921 ;;Total ram usage:        0 bytes
 17922 ;; Hardware stack levels used:    1
 17923 ;; Hardware stack levels required when called:    1
 17924 ;; This function calls:
 17925 ;;		_i2c1_driver_sendNACK
 17926 ;; This function is called by:
 17927 ;;		_do_I2C_RX
 17928 ;;		_i2c_ISR
 17929 ;; This function uses a non-reentrant model
 17930 ;;
 17931                           
 17932                           
 17933                           ;psect for function _do_I2C_DO_NACK_RESTART
 17934  0A1A                     _do_I2C_DO_NACK_RESTART:	
 17935  0A1A                     i1l4939:	
 17936                           ;incstack = 0
 17937                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 17938                           
 17939                           
 17940                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 17941  0A1A  3189  21EA  318A   	fcall	_i2c1_driver_sendNACK
 17942  0A1D                     i1l4941:	
 17943                           
 17944                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 17945  0A1D  3009               	movlw	9
 17946  0A1E                     i1l158:	
 17947  0A1E  0008               	return
 17948  0A1F                     __end_of_do_I2C_DO_NACK_RESTART:	
 17949                           
 17950                           	psect	text61
 17951  0A15                     __ptext61:	
 17952 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 17953 ;; Defined at:
 17954 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 17955 ;; Parameters:    Size  Location     Type
 17956 ;;		None
 17957 ;; Auto vars:     Size  Location     Type
 17958 ;;		None
 17959 ;; Return value:  Size  Location     Type
 17960 ;;                  1    wreg      enum E12722
 17961 ;; Registers used:
 17962 ;;		wreg, status,2, status,0, pclath, cstack
 17963 ;; Tracked objects:
 17964 ;;		On entry : 0/0
 17965 ;;		On exit  : 0/0
 17966 ;;		Unchanged: 0/0
 17967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17972 ;;Total ram usage:        0 bytes
 17973 ;; Hardware stack levels used:    1
 17974 ;; Hardware stack levels required when called:    1
 17975 ;; This function calls:
 17976 ;;		_i2c1_driver_sendNACK
 17977 ;; This function is called by:
 17978 ;;		_do_I2C_RX
 17979 ;;		_i2c_ISR
 17980 ;; This function uses a non-reentrant model
 17981 ;;
 17982                           
 17983                           
 17984                           ;psect for function _do_I2C_DO_NACK_STOP
 17985  0A15                     _do_I2C_DO_NACK_STOP:	
 17986  0A15                     i1l4933:	
 17987                           ;incstack = 0
 17988                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 17989                           
 17990                           
 17991                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 17992  0A15  3189  21EA  318A   	fcall	_i2c1_driver_sendNACK
 17993  0A18                     i1l4935:	
 17994                           
 17995                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 17996  0A18  300A               	movlw	10
 17997  0A19                     i1l155:	
 17998  0A19  0008               	return
 17999  0A1A                     __end_of_do_I2C_DO_NACK_STOP:	
 18000                           
 18001                           	psect	text62
 18002  0A10                     __ptext62:	
 18003 ;; *************** function _do_I2C_DO_ACK *****************
 18004 ;; Defined at:
 18005 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 18006 ;; Parameters:    Size  Location     Type
 18007 ;;		None
 18008 ;; Auto vars:     Size  Location     Type
 18009 ;;		None
 18010 ;; Return value:  Size  Location     Type
 18011 ;;                  1    wreg      enum E12722
 18012 ;; Registers used:
 18013 ;;		wreg, status,2, status,0, pclath, cstack
 18014 ;; Tracked objects:
 18015 ;;		On entry : 0/0
 18016 ;;		On exit  : 0/0
 18017 ;;		Unchanged: 0/0
 18018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18023 ;;Total ram usage:        0 bytes
 18024 ;; Hardware stack levels used:    1
 18025 ;; Hardware stack levels required when called:    1
 18026 ;; This function calls:
 18027 ;;		_i2c1_driver_sendACK
 18028 ;; This function is called by:
 18029 ;;		_i2c_ISR
 18030 ;; This function uses a non-reentrant model
 18031 ;;
 18032                           
 18033                           
 18034                           ;psect for function _do_I2C_DO_ACK
 18035  0A10                     _do_I2C_DO_ACK:	
 18036  0A10                     i1l5221:	
 18037                           ;incstack = 0
 18038                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 18039                           
 18040                           
 18041                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 18042  0A10  3189  21E6  318A   	fcall	_i2c1_driver_sendACK
 18043  0A13                     i1l5223:	
 18044                           
 18045                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 18046  0A13  3005               	movlw	5
 18047  0A14                     i1l152:	
 18048  0A14  0008               	return
 18049  0A15                     __end_of_do_I2C_DO_ACK:	
 18050                           
 18051                           	psect	text63
 18052  0A31                     __ptext63:	
 18053 ;; *************** function _do_I2C_RCEN *****************
 18054 ;; Defined at:
 18055 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 18056 ;; Parameters:    Size  Location     Type
 18057 ;;		None
 18058 ;; Auto vars:     Size  Location     Type
 18059 ;;		None
 18060 ;; Return value:  Size  Location     Type
 18061 ;;                  1    wreg      enum E12722
 18062 ;; Registers used:
 18063 ;;		wreg, status,2, status,0, pclath, cstack
 18064 ;; Tracked objects:
 18065 ;;		On entry : 0/0
 18066 ;;		On exit  : 0/0
 18067 ;;		Unchanged: 0/0
 18068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18073 ;;Total ram usage:        0 bytes
 18074 ;; Hardware stack levels used:    1
 18075 ;; Hardware stack levels required when called:    1
 18076 ;; This function calls:
 18077 ;;		_i2c1_driver_startRX
 18078 ;; This function is called by:
 18079 ;;		_i2c_ISR
 18080 ;; This function uses a non-reentrant model
 18081 ;;
 18082                           
 18083                           
 18084                           ;psect for function _do_I2C_RCEN
 18085  0A31                     _do_I2C_RCEN:	
 18086  0A31                     i1l5213:	
 18087                           ;incstack = 0
 18088                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 18089                           
 18090                           
 18091                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 18092  0A31  0021               	movlb	1	; select bank1
 18093  0A32  11A0               	bcf	_i2c_status^(0+128),3
 18094  0A33                     i1l5215:	
 18095                           
 18096                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 18097  0A33  3189  21D4  318A   	fcall	_i2c1_driver_startRX
 18098  0A36                     i1l5217:	
 18099                           
 18100                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 18101  0A36  3004               	movlw	4
 18102  0A37                     i1l149:	
 18103  0A37  0008               	return
 18104  0A38                     __end_of_do_I2C_RCEN:	
 18105                           
 18106                           	psect	text64
 18107  0A4F                     __ptext64:	
 18108 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 18109 ;; Defined at:
 18110 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 18111 ;; Parameters:    Size  Location     Type
 18112 ;;		None
 18113 ;; Auto vars:     Size  Location     Type
 18114 ;;		None
 18115 ;; Return value:  Size  Location     Type
 18116 ;;                  1    wreg      enum E12722
 18117 ;; Registers used:
 18118 ;;		wreg, status,2, status,0, pclath, cstack
 18119 ;; Tracked objects:
 18120 ;;		On entry : 0/0
 18121 ;;		On exit  : 0/0
 18122 ;;		Unchanged: 0/0
 18123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18128 ;;Total ram usage:        0 bytes
 18129 ;; Hardware stack levels used:    1
 18130 ;; Hardware stack levels required when called:    1
 18131 ;; This function calls:
 18132 ;;		_i2c1_driver_TXData
 18133 ;; This function is called by:
 18134 ;;		_i2c_ISR
 18135 ;; This function uses a non-reentrant model
 18136 ;;
 18137                           
 18138                           
 18139                           ;psect for function _do_I2C_SEND_ADR_WRITE
 18140  0A4F                     _do_I2C_SEND_ADR_WRITE:	
 18141  0A4F                     i1l5205:	
 18142                           ;incstack = 0
 18143                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 18144                           
 18145                           
 18146                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 18147  0A4F  0021               	movlb	1	; select bank1
 18148  0A50  15A0               	bsf	_i2c_status^(0+128),3
 18149  0A51                     i1l5207:	
 18150                           
 18151                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 18152  0A51  3521               	lslf	(_i2c_status^(0+128)+1),w
 18153  0A52  3189  21F2  318A   	fcall	_i2c1_driver_TXData
 18154  0A55                     i1l5209:	
 18155                           
 18156                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 18157  0A55  3003               	movlw	3
 18158  0A56                     i1l146:	
 18159  0A56  0008               	return
 18160  0A57                     __end_of_do_I2C_SEND_ADR_WRITE:	
 18161                           
 18162                           	psect	text65
 18163  0A67                     __ptext65:	
 18164 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 18165 ;; Defined at:
 18166 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 18167 ;; Parameters:    Size  Location     Type
 18168 ;;		None
 18169 ;; Auto vars:     Size  Location     Type
 18170 ;;		None
 18171 ;; Return value:  Size  Location     Type
 18172 ;;                  1    wreg      enum E12722
 18173 ;; Registers used:
 18174 ;;		wreg, status,2, status,0, pclath, cstack
 18175 ;; Tracked objects:
 18176 ;;		On entry : 0/0
 18177 ;;		On exit  : 0/0
 18178 ;;		Unchanged: 0/0
 18179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18184 ;;Total ram usage:        0 bytes
 18185 ;; Hardware stack levels used:    1
 18186 ;; Hardware stack levels required when called:    1
 18187 ;; This function calls:
 18188 ;;		_i2c1_driver_TXData
 18189 ;; This function is called by:
 18190 ;;		_i2c_ISR
 18191 ;; This function uses a non-reentrant model
 18192 ;;
 18193                           
 18194                           
 18195                           ;psect for function _do_I2C_SEND_ADR_READ
 18196  0A67                     _do_I2C_SEND_ADR_READ:	
 18197  0A67                     i1l5197:	
 18198                           ;incstack = 0
 18199                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 18200                           
 18201                           
 18202                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 18203  0A67  0021               	movlb	1	; select bank1
 18204  0A68  15A0               	bsf	_i2c_status^(0+128),3
 18205  0A69                     i1l5199:	
 18206                           
 18207                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 18208  0A69  1403               	setc
 18209  0A6A  0D21               	rlf	(_i2c_status^(0+128)+1),w
 18210  0A6B  3189  21F2  318A   	fcall	_i2c1_driver_TXData
 18211  0A6E                     i1l5201:	
 18212                           
 18213                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 18214  0A6E  3005               	movlw	5
 18215  0A6F                     i1l143:	
 18216  0A6F  0008               	return
 18217  0A70                     __end_of_do_I2C_SEND_ADR_READ:	
 18218                           
 18219                           	psect	text66
 18220  0A0B                     __ptext66:	
 18221 ;; *************** function _do_I2C_SEND_STOP *****************
 18222 ;; Defined at:
 18223 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 18224 ;; Parameters:    Size  Location     Type
 18225 ;;		None
 18226 ;; Auto vars:     Size  Location     Type
 18227 ;;		None
 18228 ;; Return value:  Size  Location     Type
 18229 ;;                  1    wreg      enum E12722
 18230 ;; Registers used:
 18231 ;;		wreg, status,2, status,0, pclath, cstack
 18232 ;; Tracked objects:
 18233 ;;		On entry : 0/0
 18234 ;;		On exit  : 0/0
 18235 ;;		Unchanged: 0/0
 18236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18241 ;;Total ram usage:        0 bytes
 18242 ;; Hardware stack levels used:    1
 18243 ;; Hardware stack levels required when called:    1
 18244 ;; This function calls:
 18245 ;;		_i2c1_driver_stop
 18246 ;; This function is called by:
 18247 ;;		_do_I2C_DO_ADDRESS_NACK
 18248 ;;		_do_I2C_TX
 18249 ;;		_do_I2C_TX_EMPTY
 18250 ;;		_i2c_ISR
 18251 ;; This function uses a non-reentrant model
 18252 ;;
 18253                           
 18254                           
 18255                           ;psect for function _do_I2C_SEND_STOP
 18256  0A0B                     _do_I2C_SEND_STOP:	
 18257  0A0B                     i1l4921:	
 18258                           ;incstack = 0
 18259                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 18260                           
 18261                           
 18262                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 18263  0A0B  3189  21D1  318A   	fcall	_i2c1_driver_stop
 18264  0A0E                     i1l4923:	
 18265                           
 18266                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 18267  0A0E  3000               	movlw	0
 18268  0A0F                     i1l140:	
 18269  0A0F  0008               	return
 18270  0A10                     __end_of_do_I2C_SEND_STOP:	
 18271                           
 18272                           	psect	text67
 18273  0A06                     __ptext67:	
 18274 ;; *************** function _do_I2C_SEND_RESTART *****************
 18275 ;; Defined at:
 18276 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 18277 ;; Parameters:    Size  Location     Type
 18278 ;;		None
 18279 ;; Auto vars:     Size  Location     Type
 18280 ;;		None
 18281 ;; Return value:  Size  Location     Type
 18282 ;;                  1    wreg      enum E12722
 18283 ;; Registers used:
 18284 ;;		wreg, status,2, status,0, pclath, cstack
 18285 ;; Tracked objects:
 18286 ;;		On entry : 0/0
 18287 ;;		On exit  : 0/0
 18288 ;;		Unchanged: 0/0
 18289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18294 ;;Total ram usage:        0 bytes
 18295 ;; Hardware stack levels used:    1
 18296 ;; Hardware stack levels required when called:    1
 18297 ;; This function calls:
 18298 ;;		_i2c1_driver_restart
 18299 ;; This function is called by:
 18300 ;;		_do_I2C_DO_ADDRESS_NACK
 18301 ;;		_do_I2C_TX_EMPTY
 18302 ;;		_i2c_ISR
 18303 ;; This function uses a non-reentrant model
 18304 ;;
 18305                           
 18306                           
 18307                           ;psect for function _do_I2C_SEND_RESTART
 18308  0A06                     _do_I2C_SEND_RESTART:	
 18309  0A06                     i1l4915:	
 18310                           ;incstack = 0
 18311                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18312                           
 18313                           
 18314                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 18315  0A06  3189  21CE  318A   	fcall	_i2c1_driver_restart
 18316  0A09                     i1l4917:	
 18317                           
 18318                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 18319  0A09  3001               	movlw	1
 18320  0A0A                     i1l137:	
 18321  0A0A  0008               	return
 18322  0A0B                     __end_of_do_I2C_SEND_RESTART:	
 18323                           
 18324                           	psect	text68
 18325  0A01                     __ptext68:	
 18326 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 18327 ;; Defined at:
 18328 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 18329 ;; Parameters:    Size  Location     Type
 18330 ;;		None
 18331 ;; Auto vars:     Size  Location     Type
 18332 ;;		None
 18333 ;; Return value:  Size  Location     Type
 18334 ;;                  1    wreg      enum E12722
 18335 ;; Registers used:
 18336 ;;		wreg, status,2, status,0, pclath, cstack
 18337 ;; Tracked objects:
 18338 ;;		On entry : 0/0
 18339 ;;		On exit  : 0/0
 18340 ;;		Unchanged: 0/0
 18341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18346 ;;Total ram usage:        0 bytes
 18347 ;; Hardware stack levels used:    1
 18348 ;; Hardware stack levels required when called:    1
 18349 ;; This function calls:
 18350 ;;		_i2c1_driver_restart
 18351 ;; This function is called by:
 18352 ;;		_do_I2C_TX
 18353 ;;		_i2c_ISR
 18354 ;; This function uses a non-reentrant model
 18355 ;;
 18356                           
 18357                           
 18358                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 18359  0A01                     _do_I2C_SEND_RESTART_WRITE:	
 18360  0A01                     i1l4909:	
 18361                           ;incstack = 0
 18362                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 18363                           
 18364                           
 18365                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 18366  0A01  3189  21CE  318A   	fcall	_i2c1_driver_restart
 18367  0A04                     i1l4911:	
 18368                           
 18369                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 18370  0A04  3002               	movlw	2
 18371  0A05                     i1l134:	
 18372  0A05  0008               	return
 18373  0A06                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 18374                           
 18375                           	psect	text69
 18376  09FC                     __ptext69:	
 18377 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 18378 ;; Defined at:
 18379 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 18380 ;; Parameters:    Size  Location     Type
 18381 ;;		None
 18382 ;; Auto vars:     Size  Location     Type
 18383 ;;		None
 18384 ;; Return value:  Size  Location     Type
 18385 ;;                  1    wreg      enum E12722
 18386 ;; Registers used:
 18387 ;;		wreg, status,2, status,0, pclath, cstack
 18388 ;; Tracked objects:
 18389 ;;		On entry : 0/0
 18390 ;;		On exit  : 0/0
 18391 ;;		Unchanged: 0/0
 18392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18397 ;;Total ram usage:        0 bytes
 18398 ;; Hardware stack levels used:    1
 18399 ;; Hardware stack levels required when called:    1
 18400 ;; This function calls:
 18401 ;;		_i2c1_driver_restart
 18402 ;; This function is called by:
 18403 ;;		_do_I2C_TX
 18404 ;;		_i2c_ISR
 18405 ;; This function uses a non-reentrant model
 18406 ;;
 18407                           
 18408                           
 18409                           ;psect for function _do_I2C_SEND_RESTART_READ
 18410  09FC                     _do_I2C_SEND_RESTART_READ:	
 18411  09FC                     i1l4903:	
 18412                           ;incstack = 0
 18413                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 18414                           
 18415                           
 18416                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 18417  09FC  3189  21CE  3189   	fcall	_i2c1_driver_restart
 18418  09FF                     i1l4905:	
 18419                           
 18420                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 18421  09FF  3001               	movlw	1
 18422  0A00                     i1l131:	
 18423  0A00  0008               	return
 18424  0A01                     __end_of_do_I2C_SEND_RESTART_READ:	
 18425                           
 18426                           	psect	text70
 18427  09F7                     __ptext70:	
 18428 ;; *************** function _do_I2C_IDLE *****************
 18429 ;; Defined at:
 18430 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 18431 ;; Parameters:    Size  Location     Type
 18432 ;;		None
 18433 ;; Auto vars:     Size  Location     Type
 18434 ;;		None
 18435 ;; Return value:  Size  Location     Type
 18436 ;;                  1    wreg      enum E12722
 18437 ;; Registers used:
 18438 ;;		wreg, status,2
 18439 ;; Tracked objects:
 18440 ;;		On entry : 0/0
 18441 ;;		On exit  : 0/0
 18442 ;;		Unchanged: 0/0
 18443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18448 ;;Total ram usage:        0 bytes
 18449 ;; Hardware stack levels used:    1
 18450 ;; This function calls:
 18451 ;;		Nothing
 18452 ;; This function is called by:
 18453 ;;		_i2c_ISR
 18454 ;; This function uses a non-reentrant model
 18455 ;;
 18456                           
 18457                           
 18458                           ;psect for function _do_I2C_IDLE
 18459  09F7                     _do_I2C_IDLE:	
 18460  09F7                     i1l5189:	
 18461                           ;incstack = 0
 18462                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 18463                           
 18464                           
 18465                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 18466  09F7  0021               	movlb	1	; select bank1
 18467  09F8  1020               	bcf	_i2c_status^(0+128),0
 18468  09F9                     i1l5191:	
 18469                           
 18470                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 18471  09F9  01AA               	clrf	(_i2c_status^(0+128)+10)
 18472  09FA                     i1l5193:	
 18473                           
 18474                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 18475  09FA  300E               	movlw	14
 18476  09FB                     i1l128:	
 18477  09FB  0008               	return
 18478  09FC                     __end_of_do_I2C_IDLE:	
 18479                           
 18480                           	psect	text71
 18481  0A47                     __ptext71:	
 18482 ;; *************** function _do_I2C_RESET *****************
 18483 ;; Defined at:
 18484 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 18485 ;; Parameters:    Size  Location     Type
 18486 ;;		None
 18487 ;; Auto vars:     Size  Location     Type
 18488 ;;		None
 18489 ;; Return value:  Size  Location     Type
 18490 ;;                  1    wreg      enum E12722
 18491 ;; Registers used:
 18492 ;;		wreg, status,2, status,0, pclath, cstack
 18493 ;; Tracked objects:
 18494 ;;		On entry : 0/0
 18495 ;;		On exit  : 0/0
 18496 ;;		Unchanged: 0/0
 18497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18502 ;;Total ram usage:        0 bytes
 18503 ;; Hardware stack levels used:    1
 18504 ;; Hardware stack levels required when called:    1
 18505 ;; This function calls:
 18506 ;;		_i2c1_driver_resetBus
 18507 ;; This function is called by:
 18508 ;;		_i2c_ISR
 18509 ;; This function uses a non-reentrant model
 18510 ;;
 18511                           
 18512                           
 18513                           ;psect for function _do_I2C_RESET
 18514  0A47                     _do_I2C_RESET:	
 18515  0A47                     i1l5179:	
 18516                           ;incstack = 0
 18517                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 18518                           
 18519                           
 18520                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 18521  0A47  3187  27FF  318A   	fcall	_i2c1_driver_resetBus
 18522  0A4A                     i1l5181:	
 18523                           
 18524                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 18525  0A4A  0021               	movlb	1	; select bank1
 18526  0A4B  1020               	bcf	_i2c_status^(0+128),0
 18527  0A4C                     i1l5183:	
 18528                           
 18529                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 18530  0A4C  01AA               	clrf	(_i2c_status^(0+128)+10)
 18531  0A4D                     i1l5185:	
 18532                           
 18533                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 18534  0A4D  300E               	movlw	14
 18535  0A4E                     i1l125:	
 18536  0A4E  0008               	return
 18537  0A4F                     __end_of_do_I2C_RESET:	
 18538                           
 18539                           	psect	text72
 18540  0ECA                     __ptext72:	
 18541 ;; *************** function _do_I2C_TX_EMPTY *****************
 18542 ;; Defined at:
 18543 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 18544 ;; Parameters:    Size  Location     Type
 18545 ;;		None
 18546 ;; Auto vars:     Size  Location     Type
 18547 ;;		None
 18548 ;; Return value:  Size  Location     Type
 18549 ;;                  1    wreg      enum E12722
 18550 ;; Registers used:
 18551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18552 ;; Tracked objects:
 18553 ;;		On entry : 0/0
 18554 ;;		On exit  : 0/0
 18555 ;;		Unchanged: 0/0
 18556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18559 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18560 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18561 ;;Total ram usage:        3 bytes
 18562 ;; Hardware stack levels used:    1
 18563 ;; Hardware stack levels required when called:    3
 18564 ;; This function calls:
 18565 ;;		Absolute function
 18566 ;;		_do_I2C_SEND_RESTART
 18567 ;;		_do_I2C_SEND_STOP
 18568 ;;		_i2c_restartWrite
 18569 ;;		_mssp1_setIRQ
 18570 ;;		_rd1RegCompleteHandler
 18571 ;;		_rd2RegCompleteHandler
 18572 ;;		_rdBlkRegCompleteHandler
 18573 ;;		_returnReset
 18574 ;;		_returnStop
 18575 ;;		_wr1RegCompleteHandler
 18576 ;;		_wr2RegCompleteHandler
 18577 ;; This function is called by:
 18578 ;;		_i2c_ISR
 18579 ;; This function uses a non-reentrant model
 18580 ;;
 18581                           
 18582                           
 18583                           ;psect for function _do_I2C_TX_EMPTY
 18584  0ECA                     _do_I2C_TX_EMPTY:	
 18585  0ECA                     i1l5315:	
 18586                           ;incstack = 0
 18587                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18588                           
 18589                           
 18590                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 18591  0ECA  0021               	movlb	1	; select bank1
 18592  0ECB  1520               	bsf	_i2c_status^(0+128),2
 18593                           
 18594                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 18595  0ECC  2EDA               	goto	i1l5333
 18596  0ECD                     i1l5317:	
 18597                           
 18598                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 18599  0ECD  318A  2206  318E   	fcall	_do_I2C_SEND_RESTART
 18600  0ED0  2EFC               	goto	i1l200
 18601  0ED1                     i1l5321:	
 18602                           
 18603                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 18604  0ED1  3189  21DA  318E   	fcall	_mssp1_setIRQ
 18605  0ED4                     i1l5323:	
 18606                           
 18607                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 18608  0ED4  3003               	movlw	3
 18609  0ED5  2EFC               	goto	i1l200
 18610  0ED6                     i1l5327:	
 18611                           
 18612                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 18613  0ED6  318A  220B  318E   	fcall	_do_I2C_SEND_STOP
 18614  0ED9  2EFC               	goto	i1l200
 18615  0EDA                     i1l5333:	
 18616  0EDA  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 18617  0EDB  00FA               	movwf	??_do_I2C_TX_EMPTY
 18618  0EDC  087A               	movf	??_do_I2C_TX_EMPTY,w
 18619  0EDD  00F9               	movwf	rdBlkRegCompleteHandler@p
 18620  0EDE  300B               	movlw	11
 18621  0EDF  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 18622  0EE0  0086               	movwf	6
 18623  0EE1  0187               	clrf	7
 18624  0EE2  3F41               	moviw [1]fsr1
 18625  0EE3  008A               	movwf	10
 18626  0EE4  3F40               	moviw [0]fsr1
 18627  0EE5  000A               	callw
 18628  0EE6  318E               	pagesel	$
 18629  0EE7  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 18630  0EE8  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 18631                           
 18632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18633                           ; Switch size 1, requested type "simple"
 18634                           ; Number of cases is 1, Range of values is 0 to 0
 18635                           ; switch strategies available:
 18636                           ; Name         Instructions Cycles
 18637                           ; simple_byte            4     3 (average)
 18638                           ; direct_byte            8     6 (fixed)
 18639                           ; jumptable            260     6 (fixed)
 18640                           ;	Chosen strategy is simple_byte
 18641  0EE9  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 18642  0EEA  3A00               	xorlw	0	; case 0
 18643  0EEB  1903               	skipnz
 18644  0EEC  2EEE               	goto	i1l7821
 18645  0EED  2ED6               	goto	i1l5327
 18646  0EEE                     i1l7821:	
 18647                           
 18648                           ; Switch size 1, requested type "simple"
 18649                           ; Number of cases is 4, Range of values is 1 to 4
 18650                           ; switch strategies available:
 18651                           ; Name         Instructions Cycles
 18652                           ; simple_byte           13     7 (average)
 18653                           ; direct_byte           17     9 (fixed)
 18654                           ; jumptable            263     9 (fixed)
 18655                           ;	Chosen strategy is simple_byte
 18656  0EEE  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 18657  0EEF  3A01               	xorlw	1	; case 1
 18658  0EF0  1903               	skipnz
 18659  0EF1  2ED6               	goto	i1l5327
 18660  0EF2  3A03               	xorlw	3	; case 2
 18661  0EF3  1903               	skipnz
 18662  0EF4  2ECD               	goto	i1l5317
 18663  0EF5  3A01               	xorlw	1	; case 3
 18664  0EF6  1903               	skipnz
 18665  0EF7  2ECD               	goto	i1l5317
 18666  0EF8  3A07               	xorlw	7	; case 4
 18667  0EF9  1903               	skipnz
 18668  0EFA  2ED1               	goto	i1l5321
 18669  0EFB  2ED6               	goto	i1l5327
 18670  0EFC                     i1l200:	
 18671  0EFC  0008               	return
 18672  0EFD                     __end_of_do_I2C_TX_EMPTY:	
 18673                           
 18674                           	psect	text73
 18675  09DA                     __ptext73:	
 18676 ;; *************** function _mssp1_setIRQ *****************
 18677 ;; Defined at:
 18678 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 18679 ;; Parameters:    Size  Location     Type
 18680 ;;		None
 18681 ;; Auto vars:     Size  Location     Type
 18682 ;;		None
 18683 ;; Return value:  Size  Location     Type
 18684 ;;                  1    wreg      void 
 18685 ;; Registers used:
 18686 ;;		None
 18687 ;; Tracked objects:
 18688 ;;		On entry : 0/0
 18689 ;;		On exit  : 0/0
 18690 ;;		Unchanged: 0/0
 18691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18696 ;;Total ram usage:        0 bytes
 18697 ;; Hardware stack levels used:    1
 18698 ;; This function calls:
 18699 ;;		Nothing
 18700 ;; This function is called by:
 18701 ;;		_do_I2C_TX_EMPTY
 18702 ;; This function uses a non-reentrant model
 18703 ;;
 18704                           
 18705                           
 18706                           ;psect for function _mssp1_setIRQ
 18707  09DA                     _mssp1_setIRQ:	
 18708  09DA                     i1l4953:	
 18709                           ;incstack = 0
 18710                           ; Regs used in _mssp1_setIRQ: []
 18711                           
 18712                           
 18713                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 18714  09DA  002E               	movlb	14	; select bank14
 18715  09DB  140F               	bsf	15,0	;volatile
 18716  09DC                     i1l491:	
 18717  09DC  0008               	return
 18718  09DD                     __end_of_mssp1_setIRQ:	
 18719                           
 18720                           	psect	text74
 18721  0A3F                     __ptext74:	
 18722 ;; *************** function _i2c1_driver_isNACK *****************
 18723 ;; Defined at:
 18724 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 18725 ;; Parameters:    Size  Location     Type
 18726 ;;		None
 18727 ;; Auto vars:     Size  Location     Type
 18728 ;;		None
 18729 ;; Return value:  Size  Location     Type
 18730 ;;		None               void
 18731 ;; Registers used:
 18732 ;;		wreg, status,2, status,0
 18733 ;; Tracked objects:
 18734 ;;		On entry : 0/0
 18735 ;;		On exit  : 0/0
 18736 ;;		Unchanged: 0/0
 18737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18742 ;;Total ram usage:        1 bytes
 18743 ;; Hardware stack levels used:    1
 18744 ;; This function calls:
 18745 ;;		Nothing
 18746 ;; This function is called by:
 18747 ;;		_do_I2C_TX
 18748 ;;		_i2c_ISR
 18749 ;; This function uses a non-reentrant model
 18750 ;;
 18751                           
 18752                           
 18753                           ;psect for function _i2c1_driver_isNACK
 18754  0A3F                     _i2c1_driver_isNACK:	
 18755  0A3F                     i1l4945:	
 18756                           ;incstack = 0
 18757                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 18758                           
 18759                           
 18760                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 18761  0A3F  0023               	movlb	3	; select bank3
 18762  0A40  0E11               	swapf	17,w	;volatile
 18763  0A41  0C89               	rrf	9,f
 18764  0A42  0C89               	rrf	9,f
 18765  0A43  3901               	andlw	1
 18766  0A44  00F0               	movwf	??_i2c1_driver_isNACK
 18767  0A45  0C70               	rrf	??_i2c1_driver_isNACK,w
 18768  0A46                     i1l526:	
 18769  0A46  0008               	return
 18770  0A47                     __end_of_i2c1_driver_isNACK:	
 18771                           
 18772                           	psect	text75
 18773  09F2                     __ptext75:	
 18774 ;; *************** function _i2c1_driver_TXData *****************
 18775 ;; Defined at:
 18776 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 18777 ;; Parameters:    Size  Location     Type
 18778 ;;  d               1    wreg     unsigned char 
 18779 ;; Auto vars:     Size  Location     Type
 18780 ;;  d               1    0[COMMON] unsigned char 
 18781 ;; Return value:  Size  Location     Type
 18782 ;;                  1    wreg      void 
 18783 ;; Registers used:
 18784 ;;		wreg
 18785 ;; Tracked objects:
 18786 ;;		On entry : 0/0
 18787 ;;		On exit  : 0/0
 18788 ;;		Unchanged: 0/0
 18789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18793 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18794 ;;Total ram usage:        1 bytes
 18795 ;; Hardware stack levels used:    1
 18796 ;; This function calls:
 18797 ;;		Nothing
 18798 ;; This function is called by:
 18799 ;;		_do_I2C_SEND_ADR_READ
 18800 ;;		_do_I2C_SEND_ADR_WRITE
 18801 ;;		_do_I2C_TX
 18802 ;; This function uses a non-reentrant model
 18803 ;;
 18804                           
 18805                           
 18806                           ;psect for function _i2c1_driver_TXData
 18807  09F2                     _i2c1_driver_TXData:	
 18808                           
 18809                           ;incstack = 0
 18810                           ; Regs used in _i2c1_driver_TXData: [wreg]
 18811                           ;i2c1_driver_TXData@d stored from wreg
 18812  09F2  00F0               	movwf	i2c1_driver_TXData@d
 18813  09F3                     i1l4927:	
 18814                           
 18815                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 18816  09F3  0870               	movf	i2c1_driver_TXData@d,w
 18817  09F4  0023               	movlb	3	; select bank3
 18818  09F5  008C               	movwf	12	;volatile
 18819  09F6                     i1l541:	
 18820  09F6  0008               	return
 18821  09F7                     __end_of_i2c1_driver_TXData:	
 18822                           
 18823                           	psect	text76
 18824  09D7                     __ptext76:	
 18825 ;; *************** function _i2c1_driver_getRXData *****************
 18826 ;; Defined at:
 18827 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 18828 ;; Parameters:    Size  Location     Type
 18829 ;;		None
 18830 ;; Auto vars:     Size  Location     Type
 18831 ;;		None
 18832 ;; Return value:  Size  Location     Type
 18833 ;;                  1    wreg      unsigned char 
 18834 ;; Registers used:
 18835 ;;		wreg
 18836 ;; Tracked objects:
 18837 ;;		On entry : 0/0
 18838 ;;		On exit  : 0/0
 18839 ;;		Unchanged: 0/0
 18840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18845 ;;Total ram usage:        0 bytes
 18846 ;; Hardware stack levels used:    1
 18847 ;; This function calls:
 18848 ;;		Nothing
 18849 ;; This function is called by:
 18850 ;;		_do_I2C_RX
 18851 ;; This function uses a non-reentrant model
 18852 ;;
 18853                           
 18854                           
 18855                           ;psect for function _i2c1_driver_getRXData
 18856  09D7                     _i2c1_driver_getRXData:	
 18857  09D7                     i1l4949:	
 18858                           ;incstack = 0
 18859                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 18860                           
 18861                           
 18862                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 18863  09D7  0023               	movlb	3	; select bank3
 18864  09D8  080C               	movf	12,w	;volatile
 18865  09D9                     i1l532:	
 18866  09D9  0008               	return
 18867  09DA                     __end_of_i2c1_driver_getRXData:	
 18868                           
 18869                           	psect	text77
 18870  09EA                     __ptext77:	
 18871 ;; *************** function _i2c1_driver_sendNACK *****************
 18872 ;; Defined at:
 18873 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 18874 ;; Parameters:    Size  Location     Type
 18875 ;;		None
 18876 ;; Auto vars:     Size  Location     Type
 18877 ;;		None
 18878 ;; Return value:  Size  Location     Type
 18879 ;;                  1    wreg      void 
 18880 ;; Registers used:
 18881 ;;		None
 18882 ;; Tracked objects:
 18883 ;;		On entry : 0/0
 18884 ;;		On exit  : 0/0
 18885 ;;		Unchanged: 0/0
 18886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18891 ;;Total ram usage:        0 bytes
 18892 ;; Hardware stack levels used:    1
 18893 ;; This function calls:
 18894 ;;		Nothing
 18895 ;; This function is called by:
 18896 ;;		_do_I2C_DO_NACK_STOP
 18897 ;;		_do_I2C_DO_NACK_RESTART
 18898 ;; This function uses a non-reentrant model
 18899 ;;
 18900                           
 18901                           
 18902                           ;psect for function _i2c1_driver_sendNACK
 18903  09EA                     _i2c1_driver_sendNACK:	
 18904  09EA                     i1l4719:	
 18905                           ;incstack = 0
 18906                           ; Regs used in _i2c1_driver_sendNACK: []
 18907                           
 18908                           
 18909                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 18910  09EA  0023               	movlb	3	; select bank3
 18911  09EB  1691               	bsf	17,5	;volatile
 18912                           
 18913                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 18914  09EC  1611               	bsf	17,4	;volatile
 18915  09ED                     i1l550:	
 18916  09ED  0008               	return
 18917  09EE                     __end_of_i2c1_driver_sendNACK:	
 18918                           
 18919                           	psect	text78
 18920  07FF                     __ptext78:	
 18921 ;; *************** function _i2c1_driver_resetBus *****************
 18922 ;; Defined at:
 18923 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 18924 ;; Parameters:    Size  Location     Type
 18925 ;;		None
 18926 ;; Auto vars:     Size  Location     Type
 18927 ;;		None
 18928 ;; Return value:  Size  Location     Type
 18929 ;;                  1    wreg      void 
 18930 ;; Registers used:
 18931 ;;		None
 18932 ;; Tracked objects:
 18933 ;;		On entry : 0/0
 18934 ;;		On exit  : 0/0
 18935 ;;		Unchanged: 0/0
 18936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18941 ;;Total ram usage:        0 bytes
 18942 ;; Hardware stack levels used:    1
 18943 ;; This function calls:
 18944 ;;		Nothing
 18945 ;; This function is called by:
 18946 ;;		_do_I2C_RESET
 18947 ;; This function uses a non-reentrant model
 18948 ;;
 18949                           
 18950                           
 18951                           ;psect for function _i2c1_driver_resetBus
 18952  07FF                     _i2c1_driver_resetBus:	
 18953  07FF                     i1l514:	
 18954                           ;incstack = 0
 18955                           ; Regs used in _i2c1_driver_resetBus: []
 18956                           
 18957  07FF  0008               	return
 18958  0800                     __end_of_i2c1_driver_resetBus:	
 18959                           
 18960                           	psect	text79
 18961  09D4                     __ptext79:	
 18962 ;; *************** function _i2c1_driver_startRX *****************
 18963 ;; Defined at:
 18964 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 18965 ;; Parameters:    Size  Location     Type
 18966 ;;		None
 18967 ;; Auto vars:     Size  Location     Type
 18968 ;;		None
 18969 ;; Return value:  Size  Location     Type
 18970 ;;                  1    wreg      void 
 18971 ;; Registers used:
 18972 ;;		None
 18973 ;; Tracked objects:
 18974 ;;		On entry : 0/0
 18975 ;;		On exit  : 0/0
 18976 ;;		Unchanged: 0/0
 18977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18982 ;;Total ram usage:        0 bytes
 18983 ;; Hardware stack levels used:    1
 18984 ;; This function calls:
 18985 ;;		Nothing
 18986 ;; This function is called by:
 18987 ;;		_do_I2C_RCEN
 18988 ;; This function uses a non-reentrant model
 18989 ;;
 18990                           
 18991                           
 18992                           ;psect for function _i2c1_driver_startRX
 18993  09D4                     _i2c1_driver_startRX:	
 18994  09D4                     i1l4929:	
 18995                           ;incstack = 0
 18996                           ; Regs used in _i2c1_driver_startRX: []
 18997                           
 18998                           
 18999                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 19000  09D4  0023               	movlb	3	; select bank3
 19001  09D5  1591               	bsf	17,3	;volatile
 19002  09D6                     i1l529:	
 19003  09D6  0008               	return
 19004  09D7                     __end_of_i2c1_driver_startRX:	
 19005                           
 19006                           	psect	text80
 19007  0C37                     __ptext80:	
 19008 ;; *************** function _rdBlkRegCompleteHandler *****************
 19009 ;; Defined at:
 19010 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19011 ;; Parameters:    Size  Location     Type
 19012 ;;  p               1    9[COMMON] PTR void 
 19013 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19014 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19015 ;; Auto vars:     Size  Location     Type
 19016 ;;		None
 19017 ;; Return value:  Size  Location     Type
 19018 ;;                  1    wreg      enum E358
 19019 ;; Registers used:
 19020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19021 ;; Tracked objects:
 19022 ;;		On entry : 0/0
 19023 ;;		On exit  : 0/0
 19024 ;;		Unchanged: 0/0
 19025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19026 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19029 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19030 ;;Total ram usage:        1 bytes
 19031 ;; Hardware stack levels used:    1
 19032 ;; Hardware stack levels required when called:    2
 19033 ;; This function calls:
 19034 ;;		_i2c_setBuffer
 19035 ;;		_i2c_setDataCompleteCallback
 19036 ;; This function is called by:
 19037 ;;		_i2c_readDataBlock
 19038 ;;		_do_I2C_DO_ADDRESS_NACK
 19039 ;;		_do_I2C_TX
 19040 ;;		_do_I2C_RX
 19041 ;;		_do_I2C_TX_EMPTY
 19042 ;; This function uses a non-reentrant model
 19043 ;;
 19044                           
 19045                           
 19046                           ;psect for function _rdBlkRegCompleteHandler
 19047  0C37                     _rdBlkRegCompleteHandler:	
 19048  0C37                     i1l4995:	
 19049                           ;incstack = 0
 19050                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 19051                           
 19052                           
 19053                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 19054  0C37  0879               	movf	rdBlkRegCompleteHandler@p,w
 19055  0C38  0086               	movwf	6
 19056  0C39  0187               	clrf	7
 19057  0C3A  3F40               	moviw [0]fsr1
 19058  0C3B  00F0               	movwf	i2c_setBuffer@bufferSize
 19059  0C3C  3F41               	moviw [1]fsr1
 19060  0C3D  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19061  0C3E  0879               	movf	rdBlkRegCompleteHandler@p,w
 19062  0C3F  3E02               	addlw	2
 19063  0C40  0086               	movwf	6
 19064  0C41  0187               	clrf	7
 19065  0C42  0801               	movf	1,w
 19066  0C43  318B  2354  318C   	fcall	_i2c_setBuffer
 19067                           
 19068                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 19069  0C46  3000               	movlw	0
 19070  0C47  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19071  0C48  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19072  0C49  01F7               	clrf	i2c_setDataCompleteCallback@p
 19073  0C4A  318A  22FF  318C   	fcall	_i2c_setDataCompleteCallback
 19074  0C4D                     i1l4997:	
 19075                           
 19076                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 19077  0C4D  3002               	movlw	2
 19078  0C4E                     i1l303:	
 19079  0C4E  0008               	return
 19080  0C4F                     __end_of_rdBlkRegCompleteHandler:	
 19081                           
 19082                           	psect	text81
 19083  0BB8                     __ptext81:	
 19084 ;; *************** function _rd2RegCompleteHandler *****************
 19085 ;; Defined at:
 19086 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19087 ;; Parameters:    Size  Location     Type
 19088 ;;  p               1    9[COMMON] PTR void 
 19089 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19090 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19091 ;; Auto vars:     Size  Location     Type
 19092 ;;		None
 19093 ;; Return value:  Size  Location     Type
 19094 ;;                  1    wreg      enum E358
 19095 ;; Registers used:
 19096 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19097 ;; Tracked objects:
 19098 ;;		On entry : 0/0
 19099 ;;		On exit  : 0/0
 19100 ;;		Unchanged: 0/0
 19101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19102 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19105 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19106 ;;Total ram usage:        1 bytes
 19107 ;; Hardware stack levels used:    1
 19108 ;; Hardware stack levels required when called:    2
 19109 ;; This function calls:
 19110 ;;		_i2c_setBuffer
 19111 ;;		_i2c_setDataCompleteCallback
 19112 ;; This function is called by:
 19113 ;;		_i2c_read2ByteRegister
 19114 ;;		_do_I2C_DO_ADDRESS_NACK
 19115 ;;		_do_I2C_TX
 19116 ;;		_do_I2C_RX
 19117 ;;		_do_I2C_TX_EMPTY
 19118 ;; This function uses a non-reentrant model
 19119 ;;
 19120                           
 19121                           
 19122                           ;psect for function _rd2RegCompleteHandler
 19123  0BB8                     _rd2RegCompleteHandler:	
 19124  0BB8                     i1l4979:	
 19125                           ;incstack = 0
 19126                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19127                           
 19128                           
 19129                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 19130  0BB8  3002               	movlw	2
 19131  0BB9  00F0               	movwf	i2c_setBuffer@bufferSize
 19132  0BBA  3000               	movlw	0
 19133  0BBB  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19134  0BBC  0879               	movf	rd2RegCompleteHandler@p,w
 19135  0BBD  318B  2354  318B   	fcall	_i2c_setBuffer
 19136  0BC0                     i1l4981:	
 19137                           
 19138                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 19139  0BC0  3000               	movlw	0
 19140  0BC1  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19141  0BC2  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19142  0BC3  01F7               	clrf	i2c_setDataCompleteCallback@p
 19143  0BC4  318A  22FF  318B   	fcall	_i2c_setDataCompleteCallback
 19144  0BC7                     i1l4983:	
 19145                           
 19146                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 19147  0BC7  3002               	movlw	2
 19148  0BC8                     i1l279:	
 19149  0BC8  0008               	return
 19150  0BC9                     __end_of_rd2RegCompleteHandler:	
 19151                           
 19152                           	psect	text82
 19153  0BA7                     __ptext82:	
 19154 ;; *************** function _rd1RegCompleteHandler *****************
 19155 ;; Defined at:
 19156 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19157 ;; Parameters:    Size  Location     Type
 19158 ;;  p               1    9[COMMON] PTR void 
 19159 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19160 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19161 ;; Auto vars:     Size  Location     Type
 19162 ;;		None
 19163 ;; Return value:  Size  Location     Type
 19164 ;;                  1    wreg      enum E358
 19165 ;; Registers used:
 19166 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19167 ;; Tracked objects:
 19168 ;;		On entry : 0/0
 19169 ;;		On exit  : 0/0
 19170 ;;		Unchanged: 0/0
 19171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19172 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19176 ;;Total ram usage:        1 bytes
 19177 ;; Hardware stack levels used:    1
 19178 ;; Hardware stack levels required when called:    2
 19179 ;; This function calls:
 19180 ;;		_i2c_setBuffer
 19181 ;;		_i2c_setDataCompleteCallback
 19182 ;; This function is called by:
 19183 ;;		_i2c_read1ByteRegister
 19184 ;;		_do_I2C_DO_ADDRESS_NACK
 19185 ;;		_do_I2C_TX
 19186 ;;		_do_I2C_RX
 19187 ;;		_do_I2C_TX_EMPTY
 19188 ;; This function uses a non-reentrant model
 19189 ;;
 19190                           
 19191                           
 19192                           ;psect for function _rd1RegCompleteHandler
 19193  0BA7                     _rd1RegCompleteHandler:	
 19194  0BA7                     i1l4971:	
 19195                           ;incstack = 0
 19196                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19197                           
 19198                           
 19199                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 19200  0BA7  3001               	movlw	1
 19201  0BA8  00F0               	movwf	i2c_setBuffer@bufferSize
 19202  0BA9  3000               	movlw	0
 19203  0BAA  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19204  0BAB  0879               	movf	rd1RegCompleteHandler@p,w
 19205  0BAC  318B  2354  318B   	fcall	_i2c_setBuffer
 19206  0BAF                     i1l4973:	
 19207                           
 19208                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 19209  0BAF  3000               	movlw	0
 19210  0BB0  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19211  0BB1  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19212  0BB2  01F7               	clrf	i2c_setDataCompleteCallback@p
 19213  0BB3  318A  22FF  318B   	fcall	_i2c_setDataCompleteCallback
 19214  0BB6                     i1l4975:	
 19215                           
 19216                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 19217  0BB6  3002               	movlw	2
 19218  0BB7                     i1l264:	
 19219  0BB7  0008               	return
 19220  0BB8                     __end_of_rd1RegCompleteHandler:	
 19221                           
 19222                           	psect	text83
 19223  0B96                     __ptext83:	
 19224 ;; *************** function _wr1RegCompleteHandler *****************
 19225 ;; Defined at:
 19226 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19227 ;; Parameters:    Size  Location     Type
 19228 ;;  p               1    9[COMMON] PTR void 
 19229 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19230 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19231 ;; Auto vars:     Size  Location     Type
 19232 ;;		None
 19233 ;; Return value:  Size  Location     Type
 19234 ;;                  1    wreg      enum E358
 19235 ;; Registers used:
 19236 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19237 ;; Tracked objects:
 19238 ;;		On entry : 0/0
 19239 ;;		On exit  : 0/0
 19240 ;;		Unchanged: 0/0
 19241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19242 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19246 ;;Total ram usage:        1 bytes
 19247 ;; Hardware stack levels used:    1
 19248 ;; Hardware stack levels required when called:    2
 19249 ;; This function calls:
 19250 ;;		_i2c_setBuffer
 19251 ;;		_i2c_setDataCompleteCallback
 19252 ;; This function is called by:
 19253 ;;		_i2c_write1ByteRegister
 19254 ;;		_do_I2C_DO_ADDRESS_NACK
 19255 ;;		_do_I2C_TX
 19256 ;;		_do_I2C_RX
 19257 ;;		_do_I2C_TX_EMPTY
 19258 ;; This function uses a non-reentrant model
 19259 ;;
 19260                           
 19261                           
 19262                           ;psect for function _wr1RegCompleteHandler
 19263  0B96                     _wr1RegCompleteHandler:	
 19264  0B96                     i1l4963:	
 19265                           ;incstack = 0
 19266                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19267                           
 19268                           
 19269                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 19270  0B96  3001               	movlw	1
 19271  0B97  00F0               	movwf	i2c_setBuffer@bufferSize
 19272  0B98  3000               	movlw	0
 19273  0B99  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19274  0B9A  0879               	movf	wr1RegCompleteHandler@p,w
 19275  0B9B  318B  2354  318B   	fcall	_i2c_setBuffer
 19276  0B9E                     i1l4965:	
 19277                           
 19278                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 19279  0B9E  3000               	movlw	0
 19280  0B9F  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19281  0BA0  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19282  0BA1  01F7               	clrf	i2c_setDataCompleteCallback@p
 19283  0BA2  318A  22FF  318B   	fcall	_i2c_setDataCompleteCallback
 19284  0BA5                     i1l4967:	
 19285                           
 19286                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 19287  0BA5  3004               	movlw	4
 19288  0BA6                     i1l243:	
 19289  0BA6  0008               	return
 19290  0BA7                     __end_of_wr1RegCompleteHandler:	
 19291                           
 19292                           	psect	text84
 19293  0002                     __ptext84:	
 19294 ;; *************** function _returnReset *****************
 19295 ;; Defined at:
 19296 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 19297 ;; Parameters:    Size  Location     Type
 19298 ;;  p               1    9[COMMON] PTR void 
 19299 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19300 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19301 ;; Auto vars:     Size  Location     Type
 19302 ;;		None
 19303 ;; Return value:  Size  Location     Type
 19304 ;;                  1    wreg      enum E12568
 19305 ;; Registers used:
 19306 ;;		wreg
 19307 ;; Tracked objects:
 19308 ;;		On entry : 0/0
 19309 ;;		On exit  : 0/0
 19310 ;;		Unchanged: 0/0
 19311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19312 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19316 ;;Total ram usage:        1 bytes
 19317 ;; Hardware stack levels used:    1
 19318 ;; This function calls:
 19319 ;;		Nothing
 19320 ;; This function is called by:
 19321 ;;		_i2c_open
 19322 ;;		_do_I2C_DO_ADDRESS_NACK
 19323 ;;		_do_I2C_TX
 19324 ;;		_do_I2C_RX
 19325 ;;		_do_I2C_TX_EMPTY
 19326 ;; This function uses a non-reentrant model
 19327 ;;
 19328                           
 19329                           
 19330                           ;psect for function _returnReset
 19331  0002                     _returnReset:	
 19332  0002                     i1l4959:	
 19333                           ;incstack = 0
 19334                           ; Regs used in _returnReset: [wreg]
 19335                           
 19336                           
 19337                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 19338  0002  3005               	movlw	5
 19339  0003                     i1l219:	
 19340  0003  0008               	return
 19341  0004                     __end_of_returnReset:	
 19342                           
 19343                           	psect	text85
 19344  09C9                     __ptext85:	
 19345 ;; *************** function _returnStop *****************
 19346 ;; Defined at:
 19347 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 19348 ;; Parameters:    Size  Location     Type
 19349 ;;  p               1    9[COMMON] PTR void 
 19350 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19351 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19352 ;; Auto vars:     Size  Location     Type
 19353 ;;		None
 19354 ;; Return value:  Size  Location     Type
 19355 ;;                  1    wreg      enum E12568
 19356 ;; Registers used:
 19357 ;;		wreg
 19358 ;; Tracked objects:
 19359 ;;		On entry : 0/0
 19360 ;;		On exit  : 0/0
 19361 ;;		Unchanged: 0/0
 19362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19363 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19367 ;;Total ram usage:        1 bytes
 19368 ;; Hardware stack levels used:    1
 19369 ;; This function calls:
 19370 ;;		Nothing
 19371 ;; This function is called by:
 19372 ;;		_setCallBack
 19373 ;;		_i2c_open
 19374 ;;		_do_I2C_DO_ADDRESS_NACK
 19375 ;;		_do_I2C_TX
 19376 ;;		_do_I2C_RX
 19377 ;;		_do_I2C_TX_EMPTY
 19378 ;; This function uses a non-reentrant model
 19379 ;;
 19380                           
 19381                           
 19382                           ;psect for function _returnStop
 19383  09C9                     _returnStop:	
 19384  09C9                     i1l4955:	
 19385                           ;incstack = 0
 19386                           ; Regs used in _returnStop: [wreg]
 19387                           
 19388                           
 19389                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 19390  09C9  3001               	movlw	1
 19391  09CA                     i1l216:	
 19392  09CA  0008               	return
 19393  09CB                     __end_of_returnStop:	
 19394                           
 19395                           	psect	text86
 19396  09C7                     __ptext86:	
 19397 ;; *************** function _i2c_restartWrite *****************
 19398 ;; Defined at:
 19399 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 19400 ;; Parameters:    Size  Location     Type
 19401 ;;  p               1    9[COMMON] PTR void 
 19402 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19403 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19404 ;; Auto vars:     Size  Location     Type
 19405 ;;		None
 19406 ;; Return value:  Size  Location     Type
 19407 ;;                  1    wreg      enum E358
 19408 ;; Registers used:
 19409 ;;		wreg
 19410 ;; Tracked objects:
 19411 ;;		On entry : 0/0
 19412 ;;		On exit  : 0/0
 19413 ;;		Unchanged: 0/0
 19414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19415 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19418 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19419 ;;Total ram usage:        1 bytes
 19420 ;; Hardware stack levels used:    1
 19421 ;; This function calls:
 19422 ;;		Nothing
 19423 ;; This function is called by:
 19424 ;;		_i2c_write1ByteRegister
 19425 ;;		_i2c_writeNBytes
 19426 ;;		_i2c_read1ByteRegister
 19427 ;;		_i2c_read2ByteRegister
 19428 ;;		_i2c_write2ByteRegister
 19429 ;;		_i2c_readDataBlock
 19430 ;;		_do_I2C_DO_ADDRESS_NACK
 19431 ;;		_do_I2C_TX
 19432 ;;		_do_I2C_RX
 19433 ;;		_do_I2C_TX_EMPTY
 19434 ;; This function uses a non-reentrant model
 19435 ;;
 19436                           
 19437                           
 19438                           ;psect for function _i2c_restartWrite
 19439  09C7                     _i2c_restartWrite:	
 19440  09C7                     i1l4891:	
 19441                           ;incstack = 0
 19442                           ; Regs used in _i2c_restartWrite: [wreg]
 19443                           
 19444                           
 19445                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 19446  09C7  3003               	movlw	3
 19447  09C8                     i1l9:	
 19448  09C8  0008               	return
 19449  09C9                     __end_of_i2c_restartWrite:	
 19450                           
 19451                           	psect	text87
 19452  0B85                     __ptext87:	
 19453 ;; *************** function _wr2RegCompleteHandler *****************
 19454 ;; Defined at:
 19455 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19456 ;; Parameters:    Size  Location     Type
 19457 ;;  p               1    9[COMMON] PTR void 
 19458 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19459 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19460 ;; Auto vars:     Size  Location     Type
 19461 ;;		None
 19462 ;; Return value:  Size  Location     Type
 19463 ;;                  1    wreg      enum E358
 19464 ;; Registers used:
 19465 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19466 ;; Tracked objects:
 19467 ;;		On entry : 0/0
 19468 ;;		On exit  : 0/0
 19469 ;;		Unchanged: 0/0
 19470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19471 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19474 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19475 ;;Total ram usage:        1 bytes
 19476 ;; Hardware stack levels used:    1
 19477 ;; Hardware stack levels required when called:    2
 19478 ;; This function calls:
 19479 ;;		_i2c_setBuffer
 19480 ;;		_i2c_setDataCompleteCallback
 19481 ;; This function is called by:
 19482 ;;		_i2c_write2ByteRegister
 19483 ;;		_do_I2C_DO_ADDRESS_NACK
 19484 ;;		_do_I2C_TX
 19485 ;;		_do_I2C_RX
 19486 ;;		_do_I2C_TX_EMPTY
 19487 ;; This function uses a non-reentrant model
 19488 ;;
 19489                           
 19490                           
 19491                           ;psect for function _wr2RegCompleteHandler
 19492  0B85                     _wr2RegCompleteHandler:	
 19493  0B85                     i1l4987:	
 19494                           ;incstack = 0
 19495                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19496                           
 19497                           
 19498                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 19499  0B85  3002               	movlw	2
 19500  0B86  00F0               	movwf	i2c_setBuffer@bufferSize
 19501  0B87  3000               	movlw	0
 19502  0B88  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19503  0B89  0879               	movf	wr2RegCompleteHandler@p,w
 19504  0B8A  318B  2354  318B   	fcall	_i2c_setBuffer
 19505  0B8D                     i1l4989:	
 19506                           
 19507                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 19508  0B8D  3000               	movlw	0
 19509  0B8E  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19510  0B8F  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19511  0B90  01F7               	clrf	i2c_setDataCompleteCallback@p
 19512  0B91  318A  22FF  318B   	fcall	_i2c_setDataCompleteCallback
 19513  0B94                     i1l4991:	
 19514                           
 19515                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 19516  0B94  3004               	movlw	4
 19517  0B95                     i1l291:	
 19518  0B95  0008               	return
 19519  0B96                     __end_of_wr2RegCompleteHandler:	
 19520                           
 19521                           	psect	text88
 19522  0AFF                     __ptext88:	
 19523 ;; *************** function _i2c_setDataCompleteCallback *****************
 19524 ;; Defined at:
 19525 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 19526 ;; Parameters:    Size  Location     Type
 19527 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 19528 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 19529 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 19530 ;;  p               1    7[COMMON] PTR void 
 19531 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19532 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19533 ;; Auto vars:     Size  Location     Type
 19534 ;;		None
 19535 ;; Return value:  Size  Location     Type
 19536 ;;                  1    wreg      void 
 19537 ;; Registers used:
 19538 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19539 ;; Tracked objects:
 19540 ;;		On entry : 0/0
 19541 ;;		On exit  : 0/0
 19542 ;;		Unchanged: 0/0
 19543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19544 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19547 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19548 ;;Total ram usage:        4 bytes
 19549 ;; Hardware stack levels used:    1
 19550 ;; Hardware stack levels required when called:    1
 19551 ;; This function calls:
 19552 ;;		_setCallBack
 19553 ;; This function is called by:
 19554 ;;		_wr1RegCompleteHandler
 19555 ;;		_rd1RegCompleteHandler
 19556 ;;		_rd2RegCompleteHandler
 19557 ;;		_wr2RegCompleteHandler
 19558 ;;		_rdBlkRegCompleteHandler
 19559 ;;		_i2c_write1ByteRegister
 19560 ;;		_i2c_read1ByteRegister
 19561 ;;		_i2c_read2ByteRegister
 19562 ;;		_i2c_write2ByteRegister
 19563 ;;		_i2c_readDataBlock
 19564 ;; This function uses a non-reentrant model
 19565 ;;
 19566                           
 19567                           
 19568                           ;psect for function _i2c_setDataCompleteCallback
 19569  0AFF                     _i2c_setDataCompleteCallback:	
 19570  0AFF                     i1l4707:	
 19571                           ;incstack = 0
 19572                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 19573                           
 19574                           
 19575                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 19576  0AFF  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 19577  0B00  00F1               	movwf	setCallBack@cb+1
 19578  0B01  0875               	movf	i2c_setDataCompleteCallback@cb,w
 19579  0B02  00F0               	movwf	setCallBack@cb
 19580  0B03  0877               	movf	i2c_setDataCompleteCallback@p,w
 19581  0B04  00F8               	movwf	??_i2c_setDataCompleteCallback
 19582  0B05  0878               	movf	??_i2c_setDataCompleteCallback,w
 19583  0B06  00F2               	movwf	setCallBack@p
 19584  0B07  3000               	movlw	0
 19585  0B08  318D  25C8  318A   	fcall	_setCallBack
 19586  0B0B                     i1l73:	
 19587  0B0B  0008               	return
 19588  0B0C                     __end_of_i2c_setDataCompleteCallback:	
 19589                           
 19590                           	psect	text89
 19591  0DC8                     __ptext89:	
 19592 ;; *************** function _setCallBack *****************
 19593 ;; Defined at:
 19594 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 19595 ;; Parameters:    Size  Location     Type
 19596 ;;  idx             1    wreg     enum E12740
 19597 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 19598 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 19599 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), i2c_restartWrite(1), 
 19600 ;;  p               1    2[COMMON] PTR void 
 19601 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19602 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19603 ;; Auto vars:     Size  Location     Type
 19604 ;;  idx             1    4[COMMON] enum E12740
 19605 ;; Return value:  Size  Location     Type
 19606 ;;                  1    wreg      void 
 19607 ;; Registers used:
 19608 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19609 ;; Tracked objects:
 19610 ;;		On entry : 0/0
 19611 ;;		On exit  : 0/0
 19612 ;;		Unchanged: 0/0
 19613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19614 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19616 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19617 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19618 ;;Total ram usage:        5 bytes
 19619 ;; Hardware stack levels used:    1
 19620 ;; This function calls:
 19621 ;;		Nothing
 19622 ;; This function is called by:
 19623 ;;		_i2c_setDataCompleteCallback
 19624 ;;		_i2c_setWriteCollisionCallback
 19625 ;;		_i2c_setAddressNACKCallback
 19626 ;;		_i2c_setDataNACKCallback
 19627 ;;		_i2c_setTimeOutCallback
 19628 ;; This function uses a non-reentrant model
 19629 ;;
 19630                           
 19631                           
 19632                           ;psect for function _setCallBack
 19633  0DC8                     _setCallBack:	
 19634                           
 19635                           ;incstack = 0
 19636                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 19637                           ;setCallBack@idx stored from wreg
 19638  0DC8  00F4               	movwf	setCallBack@idx
 19639  0DC9                     i1l4599:	
 19640                           
 19641                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 19642  0DC9  0870               	movf	setCallBack@cb,w
 19643  0DCA  0471               	iorwf	setCallBack@cb+1,w
 19644  0DCB  1903               	btfsc	3,2
 19645  0DCC  2DCE               	goto	u203_21
 19646  0DCD  2DCF               	goto	u203_20
 19647  0DCE                     u203_21:	
 19648  0DCE  2DE0               	goto	i1l4603
 19649  0DCF                     u203_20:	
 19650  0DCF                     i1l4601:	
 19651                           
 19652                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 19653  0DCF  3574               	lslf	setCallBack@idx,w
 19654  0DD0  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 19655  0DD1  0086               	movwf	6
 19656  0DD2  0187               	clrf	7
 19657  0DD3  0870               	movf	setCallBack@cb,w
 19658  0DD4  3FC0               	movwi [0]fsr1
 19659  0DD5  0871               	movf	setCallBack@cb+1,w
 19660  0DD6  3FC1               	movwi [1]fsr1
 19661                           
 19662                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 19663  0DD7  0872               	movf	setCallBack@p,w
 19664  0DD8  00F3               	movwf	??_setCallBack
 19665  0DD9  0874               	movf	setCallBack@idx,w
 19666  0DDA  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 19667  0DDB  0086               	movwf	6
 19668  0DDC  0187               	clrf	7
 19669  0DDD  0873               	movf	??_setCallBack,w
 19670  0DDE  0081               	movwf	1
 19671                           
 19672                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 19673  0DDF  2DED               	goto	i1l224
 19674  0DE0                     i1l4603:	
 19675                           
 19676                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 19677  0DE0  3574               	lslf	setCallBack@idx,w
 19678  0DE1  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 19679  0DE2  0086               	movwf	6
 19680  0DE3  0187               	clrf	7
 19681  0DE4  30C9               	movlw	low _returnStop
 19682  0DE5  3FC0               	movwi [0]fsr1
 19683  0DE6  3009               	movlw	high _returnStop
 19684  0DE7  3FC1               	movwi [1]fsr1
 19685                           
 19686                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 19687  0DE8  0874               	movf	setCallBack@idx,w
 19688  0DE9  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 19689  0DEA  0086               	movwf	6
 19690  0DEB  0187               	clrf	7
 19691  0DEC  0181               	clrf	1
 19692  0DED                     i1l224:	
 19693  0DED  0008               	return
 19694  0DEE                     __end_of_setCallBack:	
 19695                           
 19696                           	psect	text90
 19697  0B54                     __ptext90:	
 19698 ;; *************** function _i2c_setBuffer *****************
 19699 ;; Defined at:
 19700 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 19701 ;; Parameters:    Size  Location     Type
 19702 ;;  buffer          1    wreg     PTR void 
 19703 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 19704 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 19705 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 19706 ;;  bufferSize      2    0[COMMON] unsigned int 
 19707 ;; Auto vars:     Size  Location     Type
 19708 ;;  buffer          1    3[COMMON] PTR void 
 19709 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 19710 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 19711 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 19712 ;; Return value:  Size  Location     Type
 19713 ;;                  1    wreg      void 
 19714 ;; Registers used:
 19715 ;;		wreg
 19716 ;; Tracked objects:
 19717 ;;		On entry : 0/0
 19718 ;;		On exit  : 0/0
 19719 ;;		Unchanged: 0/0
 19720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19724 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19725 ;;Total ram usage:        4 bytes
 19726 ;; Hardware stack levels used:    1
 19727 ;; This function calls:
 19728 ;;		Nothing
 19729 ;; This function is called by:
 19730 ;;		_wr1RegCompleteHandler
 19731 ;;		_rd1RegCompleteHandler
 19732 ;;		_rd2RegCompleteHandler
 19733 ;;		_wr2RegCompleteHandler
 19734 ;;		_rdBlkRegCompleteHandler
 19735 ;;		_i2c_write1ByteRegister
 19736 ;;		_i2c_writeNBytes
 19737 ;;		_i2c_read1ByteRegister
 19738 ;;		_i2c_read2ByteRegister
 19739 ;;		_i2c_write2ByteRegister
 19740 ;;		_i2c_readDataBlock
 19741 ;;		_i2c_readNBytes
 19742 ;; This function uses a non-reentrant model
 19743 ;;
 19744                           
 19745                           
 19746                           ;psect for function _i2c_setBuffer
 19747  0B54                     _i2c_setBuffer:	
 19748                           
 19749                           ;incstack = 0
 19750                           ; Regs used in _i2c_setBuffer: [wreg]
 19751                           ;i2c_setBuffer@buffer stored from wreg
 19752  0B54  00F3               	movwf	i2c_setBuffer@buffer
 19753  0B55                     i1l4709:	
 19754                           
 19755                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 19756  0B55  0021               	movlb	1	; select bank1
 19757  0B56  1D20               	btfss	_i2c_status^(0+128),2
 19758  0B57  2B59               	goto	u223_21
 19759  0B58  2B5A               	goto	u223_20
 19760  0B59                     u223_21:	
 19761  0B59  2B63               	goto	i1l103
 19762  0B5A                     u223_20:	
 19763  0B5A                     i1l4711:	
 19764                           
 19765                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 19766  0B5A  0873               	movf	i2c_setBuffer@buffer,w
 19767  0B5B  00F2               	movwf	??_i2c_setBuffer
 19768  0B5C  0872               	movf	??_i2c_setBuffer,w
 19769  0B5D  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 19770                           
 19771                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 19772  0B5E  0871               	movf	i2c_setBuffer@bufferSize+1,w
 19773  0B5F  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 19774  0B60  0870               	movf	i2c_setBuffer@bufferSize,w
 19775  0B61  00A3               	movwf	(_i2c_status^(0+128)+3)
 19776  0B62                     i1l4713:	
 19777                           
 19778                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 19779  0B62  1120               	bcf	_i2c_status^(0+128),2
 19780  0B63                     i1l103:	
 19781  0B63  0008               	return
 19782  0B64                     __end_of_i2c_setBuffer:	
 19783                           
 19784                           	psect	text91
 19785  09D1                     __ptext91:	
 19786 ;; *************** function _i2c1_driver_stop *****************
 19787 ;; Defined at:
 19788 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 19789 ;; Parameters:    Size  Location     Type
 19790 ;;		None
 19791 ;; Auto vars:     Size  Location     Type
 19792 ;;		None
 19793 ;; Return value:  Size  Location     Type
 19794 ;;                  1    wreg      void 
 19795 ;; Registers used:
 19796 ;;		None
 19797 ;; Tracked objects:
 19798 ;;		On entry : 0/0
 19799 ;;		On exit  : 0/0
 19800 ;;		Unchanged: 0/0
 19801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19806 ;;Total ram usage:        0 bytes
 19807 ;; Hardware stack levels used:    1
 19808 ;; This function calls:
 19809 ;;		Nothing
 19810 ;; This function is called by:
 19811 ;;		_do_I2C_SEND_STOP
 19812 ;; This function uses a non-reentrant model
 19813 ;;
 19814                           
 19815                           
 19816                           ;psect for function _i2c1_driver_stop
 19817  09D1                     _i2c1_driver_stop:	
 19818  09D1                     i1l4717:	
 19819                           ;incstack = 0
 19820                           ; Regs used in _i2c1_driver_stop: []
 19821                           
 19822                           
 19823                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 19824  09D1  0023               	movlb	3	; select bank3
 19825  09D2  1511               	bsf	17,2	;volatile
 19826  09D3                     i1l523:	
 19827  09D3  0008               	return
 19828  09D4                     __end_of_i2c1_driver_stop:	
 19829                           
 19830                           	psect	text92
 19831  09CE                     __ptext92:	
 19832 ;; *************** function _i2c1_driver_restart *****************
 19833 ;; Defined at:
 19834 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 19835 ;; Parameters:    Size  Location     Type
 19836 ;;		None
 19837 ;; Auto vars:     Size  Location     Type
 19838 ;;		None
 19839 ;; Return value:  Size  Location     Type
 19840 ;;                  1    wreg      void 
 19841 ;; Registers used:
 19842 ;;		None
 19843 ;; Tracked objects:
 19844 ;;		On entry : 0/0
 19845 ;;		On exit  : 0/0
 19846 ;;		Unchanged: 0/0
 19847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19852 ;;Total ram usage:        0 bytes
 19853 ;; Hardware stack levels used:    1
 19854 ;; This function calls:
 19855 ;;		Nothing
 19856 ;; This function is called by:
 19857 ;;		_do_I2C_SEND_RESTART_READ
 19858 ;;		_do_I2C_SEND_RESTART_WRITE
 19859 ;;		_do_I2C_SEND_RESTART
 19860 ;; This function uses a non-reentrant model
 19861 ;;
 19862                           
 19863                           
 19864                           ;psect for function _i2c1_driver_restart
 19865  09CE                     _i2c1_driver_restart:	
 19866  09CE                     i1l4715:	
 19867                           ;incstack = 0
 19868                           ; Regs used in _i2c1_driver_restart: []
 19869                           
 19870                           
 19871                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 19872  09CE  0023               	movlb	3	; select bank3
 19873  09CF  1491               	bsf	17,1	;volatile
 19874  09D0                     i1l520:	
 19875  09D0  0008               	return
 19876  09D1                     __end_of_i2c1_driver_restart:	
 19877                           
 19878                           	psect	text93
 19879  09E6                     __ptext93:	
 19880 ;; *************** function _i2c1_driver_sendACK *****************
 19881 ;; Defined at:
 19882 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 19883 ;; Parameters:    Size  Location     Type
 19884 ;;		None
 19885 ;; Auto vars:     Size  Location     Type
 19886 ;;		None
 19887 ;; Return value:  Size  Location     Type
 19888 ;;                  1    wreg      void 
 19889 ;; Registers used:
 19890 ;;		None
 19891 ;; Tracked objects:
 19892 ;;		On entry : 0/0
 19893 ;;		On exit  : 0/0
 19894 ;;		Unchanged: 0/0
 19895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19900 ;;Total ram usage:        0 bytes
 19901 ;; Hardware stack levels used:    1
 19902 ;; This function calls:
 19903 ;;		Nothing
 19904 ;; This function is called by:
 19905 ;;		_do_I2C_DO_ACK
 19906 ;;		_do_I2C_RX
 19907 ;; This function uses a non-reentrant model
 19908 ;;
 19909                           
 19910                           
 19911                           ;psect for function _i2c1_driver_sendACK
 19912  09E6                     _i2c1_driver_sendACK:	
 19913  09E6                     i1l4931:	
 19914                           ;incstack = 0
 19915                           ; Regs used in _i2c1_driver_sendACK: []
 19916                           
 19917                           
 19918                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 19919  09E6  0023               	movlb	3	; select bank3
 19920  09E7  1291               	bcf	17,5	;volatile
 19921                           
 19922                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 19923  09E8  1611               	bsf	17,4	;volatile
 19924  09E9                     i1l547:	
 19925  09E9  0008               	return
 19926  09EA                     __end_of_i2c1_driver_sendACK:	
 19927                           
 19928                           	psect	text94
 19929  0B36                     __ptext94:	
 19930 ;; *************** function _TMR2_ISR *****************
 19931 ;; Defined at:
 19932 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 19933 ;; Parameters:    Size  Location     Type
 19934 ;;		None
 19935 ;; Auto vars:     Size  Location     Type
 19936 ;;		None
 19937 ;; Return value:  Size  Location     Type
 19938 ;;                  1    wreg      void 
 19939 ;; Registers used:
 19940 ;;		wreg, status,2, status,0, pclath, cstack
 19941 ;; Tracked objects:
 19942 ;;		On entry : 0/0
 19943 ;;		On exit  : 0/0
 19944 ;;		Unchanged: 0/0
 19945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19950 ;;Total ram usage:        0 bytes
 19951 ;; Hardware stack levels used:    1
 19952 ;; Hardware stack levels required when called:    1
 19953 ;; This function calls:
 19954 ;;		Absolute function
 19955 ;;		_TMR2_DefaultInterruptHandler
 19956 ;;		_handler_clock_ms
 19957 ;; This function is called by:
 19958 ;;		_INTERRUPT_InterruptManager
 19959 ;; This function uses a non-reentrant model
 19960 ;;
 19961                           
 19962                           
 19963                           ;psect for function _TMR2_ISR
 19964  0B36                     _TMR2_ISR:	
 19965  0B36                     i1l5683:	
 19966                           ;incstack = 0
 19967                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 19968                           
 19969                           
 19970                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 19971  0B36  002E               	movlb	14	; select bank14
 19972  0B37  1090               	bcf	16,1	;volatile
 19973  0B38                     i1l5685:	
 19974                           
 19975                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 19976  0B38  0021               	movlb	1	; select bank1
 19977  0B39  0854               	movf	_TMR2_InterruptHandler^(0+128),w
 19978  0B3A  0455               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 19979  0B3B  1903               	btfsc	3,2
 19980  0B3C  2B3E               	goto	u281_21
 19981  0B3D  2B3F               	goto	u281_20
 19982  0B3E                     u281_21:	
 19983  0B3E  2B44               	goto	i1l1086
 19984  0B3F                     u281_20:	
 19985  0B3F                     i1l5687:	
 19986                           
 19987                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 19988  0B3F  0855               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 19989  0B40  008A               	movwf	10
 19990  0B41  0854               	movf	_TMR2_InterruptHandler^(0+128),w
 19991  0B42  000A               	callw
 19992  0B43  318B               	pagesel	$
 19993  0B44                     i1l1086:	
 19994  0B44  0008               	return
 19995  0B45                     __end_of_TMR2_ISR:	
 19996                           
 19997                           	psect	text95
 19998  09C6                     __ptext95:	
 19999 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 20000 ;; Defined at:
 20001 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 20002 ;; Parameters:    Size  Location     Type
 20003 ;;		None
 20004 ;; Auto vars:     Size  Location     Type
 20005 ;;		None
 20006 ;; Return value:  Size  Location     Type
 20007 ;;                  1    wreg      void 
 20008 ;; Registers used:
 20009 ;;		None
 20010 ;; Tracked objects:
 20011 ;;		On entry : 0/0
 20012 ;;		On exit  : 0/0
 20013 ;;		Unchanged: 0/0
 20014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20019 ;;Total ram usage:        0 bytes
 20020 ;; Hardware stack levels used:    1
 20021 ;; This function calls:
 20022 ;;		Nothing
 20023 ;; This function is called by:
 20024 ;;		_TMR2_Initialize
 20025 ;;		_TMR2_ISR
 20026 ;; This function uses a non-reentrant model
 20027 ;;
 20028                           
 20029                           
 20030                           ;psect for function _TMR2_DefaultInterruptHandler
 20031  09C6                     _TMR2_DefaultInterruptHandler:	
 20032  09C6                     i1l1092:	
 20033                           ;incstack = 0
 20034                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 20035                           
 20036  09C6  0008               	return
 20037  09C7                     __end_of_TMR2_DefaultInterruptHandler:	
 20038                           
 20039                           	psect	text96
 20040  0ADA                     __ptext96:	
 20041 ;; *************** function _handler_clock_ms *****************
 20042 ;; Defined at:
 20043 ;;		line 665 in file "main.c"
 20044 ;; Parameters:    Size  Location     Type
 20045 ;;		None
 20046 ;; Auto vars:     Size  Location     Type
 20047 ;;		None
 20048 ;; Return value:  Size  Location     Type
 20049 ;;                  1    wreg      void 
 20050 ;; Registers used:
 20051 ;;		wreg, status,2, status,0
 20052 ;; Tracked objects:
 20053 ;;		On entry : 0/0
 20054 ;;		On exit  : 0/0
 20055 ;;		Unchanged: 0/0
 20056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20059 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20061 ;;Total ram usage:        1 bytes
 20062 ;; Hardware stack levels used:    1
 20063 ;; This function calls:
 20064 ;;		Nothing
 20065 ;; This function is called by:
 20066 ;;		_main
 20067 ;;		_TMR2_ISR
 20068 ;; This function uses a non-reentrant model
 20069 ;;
 20070                           
 20071                           
 20072                           ;psect for function _handler_clock_ms
 20073  0ADA                     _handler_clock_ms:	
 20074  0ADA                     i1l5567:	
 20075                           ;incstack = 0
 20076                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 20077                           
 20078                           
 20079                           ;main.c: 666:     clkms++;
 20080  0ADA  3001               	movlw	1
 20081  0ADB  00F0               	movwf	??_handler_clock_ms
 20082  0ADC  0870               	movf	??_handler_clock_ms,w
 20083  0ADD  07FD               	addwf	_clkms,f	;volatile
 20084  0ADE                     i1l5569:	
 20085                           
 20086                           ;main.c: 668:     if(clkms > 200){
 20087  0ADE  30C9               	movlw	201
 20088  0ADF  027D               	subwf	_clkms,w	;volatile
 20089  0AE0  1C03               	skipc
 20090  0AE1  2AE3               	goto	u272_21
 20091  0AE2  2AE4               	goto	u272_20
 20092  0AE3                     u272_21:	
 20093  0AE3  2AE5               	goto	i1l1433
 20094  0AE4                     u272_20:	
 20095  0AE4                     i1l5571:	
 20096                           
 20097                           ;main.c: 669:         clkms = 0;
 20098  0AE4  01FD               	clrf	_clkms	;volatile
 20099  0AE5                     i1l1433:	
 20100  0AE5  0008               	return
 20101  0AE6                     __end_of_handler_clock_ms:	
 20102                           
 20103                           	psect	text97
 20104  0C20                     __ptext97:	
 20105 ;; *************** function _TMR1_ISR *****************
 20106 ;; Defined at:
 20107 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 20108 ;; Parameters:    Size  Location     Type
 20109 ;;		None
 20110 ;; Auto vars:     Size  Location     Type
 20111 ;;		None
 20112 ;; Return value:  Size  Location     Type
 20113 ;;                  1    wreg      void 
 20114 ;; Registers used:
 20115 ;;		wreg, status,2, status,0, pclath, cstack
 20116 ;; Tracked objects:
 20117 ;;		On entry : 0/0
 20118 ;;		On exit  : 0/0
 20119 ;;		Unchanged: 0/0
 20120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20125 ;;Total ram usage:        0 bytes
 20126 ;; Hardware stack levels used:    1
 20127 ;; Hardware stack levels required when called:    1
 20128 ;; This function calls:
 20129 ;;		Absolute function
 20130 ;;		_TMR1_DefaultInterruptHandler
 20131 ;;		_TMR1_WriteTimer
 20132 ;;		_handler_clock_hms
 20133 ;; This function is called by:
 20134 ;;		_INTERRUPT_InterruptManager
 20135 ;; This function uses a non-reentrant model
 20136 ;;
 20137                           
 20138                           
 20139                           ;psect for function _TMR1_ISR
 20140  0C20                     _TMR1_ISR:	
 20141  0C20                     i1l5675:	
 20142                           ;incstack = 0
 20143                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 20144                           
 20145                           
 20146                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 20147  0C20  002E               	movlb	14	; select bank14
 20148  0C21  1010               	bcf	16,0	;volatile
 20149  0C22                     i1l5677:	
 20150                           
 20151                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 20152  0C22  0021               	movlb	1	; select bank1
 20153  0C23  0859               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 20154  0C24  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 20155  0C25  0858               	movf	_timer1ReloadVal^(0+128),w	;volatile
 20156  0C26  00F0               	movwf	TMR1_WriteTimer@timerVal
 20157  0C27  318B  2374  318C   	fcall	_TMR1_WriteTimer
 20158  0C2A                     i1l5679:	
 20159                           
 20160                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 20161  0C2A  0021               	movlb	1	; select bank1
 20162  0C2B  0856               	movf	_TMR1_InterruptHandler^(0+128),w
 20163  0C2C  0457               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 20164  0C2D  1903               	btfsc	3,2
 20165  0C2E  2C30               	goto	u280_21
 20166  0C2F  2C31               	goto	u280_20
 20167  0C30                     u280_21:	
 20168  0C30  2C36               	goto	i1l944
 20169  0C31                     u280_20:	
 20170  0C31                     i1l5681:	
 20171                           
 20172                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 20173  0C31  0857               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 20174  0C32  008A               	movwf	10
 20175  0C33  0856               	movf	_TMR1_InterruptHandler^(0+128),w
 20176  0C34  000A               	callw
 20177  0C35  318C               	pagesel	$
 20178  0C36                     i1l944:	
 20179  0C36  0008               	return
 20180  0C37                     __end_of_TMR1_ISR:	
 20181                           
 20182                           	psect	text98
 20183  09C5                     __ptext98:	
 20184 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 20185 ;; Defined at:
 20186 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 20187 ;; Parameters:    Size  Location     Type
 20188 ;;		None
 20189 ;; Auto vars:     Size  Location     Type
 20190 ;;		None
 20191 ;; Return value:  Size  Location     Type
 20192 ;;                  1    wreg      void 
 20193 ;; Registers used:
 20194 ;;		None
 20195 ;; Tracked objects:
 20196 ;;		On entry : 0/0
 20197 ;;		On exit  : 0/0
 20198 ;;		Unchanged: 0/0
 20199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20204 ;;Total ram usage:        0 bytes
 20205 ;; Hardware stack levels used:    1
 20206 ;; This function calls:
 20207 ;;		Nothing
 20208 ;; This function is called by:
 20209 ;;		_TMR1_Initialize
 20210 ;;		_TMR1_ISR
 20211 ;; This function uses a non-reentrant model
 20212 ;;
 20213                           
 20214                           
 20215                           ;psect for function _TMR1_DefaultInterruptHandler
 20216  09C5                     _TMR1_DefaultInterruptHandler:	
 20217  09C5                     i1l950:	
 20218                           ;incstack = 0
 20219                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 20220                           
 20221  09C5  0008               	return
 20222  09C6                     __end_of_TMR1_DefaultInterruptHandler:	
 20223                           
 20224                           	psect	text99
 20225  0EFD                     __ptext99:	
 20226 ;; *************** function _handler_clock_hms *****************
 20227 ;; Defined at:
 20228 ;;		line 639 in file "main.c"
 20229 ;; Parameters:    Size  Location     Type
 20230 ;;		None
 20231 ;; Auto vars:     Size  Location     Type
 20232 ;;		None
 20233 ;; Return value:  Size  Location     Type
 20234 ;;                  1    wreg      void 
 20235 ;; Registers used:
 20236 ;;		wreg, status,2, status,0
 20237 ;; Tracked objects:
 20238 ;;		On entry : 0/0
 20239 ;;		On exit  : 0/0
 20240 ;;		Unchanged: 0/0
 20241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20244 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20246 ;;Total ram usage:        1 bytes
 20247 ;; Hardware stack levels used:    1
 20248 ;; This function calls:
 20249 ;;		Nothing
 20250 ;; This function is called by:
 20251 ;;		_main
 20252 ;;		_TMR1_ISR
 20253 ;; This function uses a non-reentrant model
 20254 ;;
 20255                           
 20256                           
 20257                           ;psect for function _handler_clock_hms
 20258  0EFD                     _handler_clock_hms:	
 20259  0EFD                     i1l5547:	
 20260                           ;incstack = 0
 20261                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 20262                           
 20263                           
 20264                           ;main.c: 641:     if(!config_mode){
 20265  0EFD  0020               	movlb	0	; select bank0
 20266  0EFE  0856               	movf	_config_mode,w	;volatile
 20267  0EFF  1D03               	btfss	3,2
 20268  0F00  2F02               	goto	u267_21
 20269  0F01  2F03               	goto	u267_20
 20270  0F02                     u267_21:	
 20271  0F02  2F0E               	goto	i1l5551
 20272  0F03                     u267_20:	
 20273  0F03                     i1l5549:	
 20274  0F03  1003               	clrc
 20275  0F04  1F96               	btfss	22,7	;volatile
 20276  0F05  1403               	setc
 20277  0F06  1803               	btfsc	3,0
 20278  0F07  2F09               	goto	u268_21
 20279  0F08  2F0C               	goto	u268_20
 20280  0F09                     u268_21:	
 20281  0F09  0020               	movlb	0	; select bank0
 20282  0F0A  1796               	bsf	22,7	;volatile
 20283  0F0B  2F0E               	goto	u269_24
 20284  0F0C                     u268_20:	
 20285  0F0C  0020               	movlb	0	; select bank0
 20286  0F0D  1396               	bcf	22,7	;volatile
 20287  0F0E                     u269_24:	
 20288  0F0E                     i1l5551:	
 20289                           
 20290                           ;main.c: 645:     last5s++;
 20291  0F0E  3001               	movlw	1
 20292  0F0F  00F0               	movwf	??_handler_clock_hms
 20293  0F10  0870               	movf	??_handler_clock_hms,w
 20294  0F11  07D9               	addwf	_last5s,f	;volatile
 20295  0F12                     i1l5553:	
 20296                           
 20297                           ;main.c: 646:     seg++;
 20298  0F12  3001               	movlw	1
 20299  0F13  00F0               	movwf	??_handler_clock_hms
 20300  0F14  0870               	movf	??_handler_clock_hms,w
 20301  0F15  07DC               	addwf	_seg,f	;volatile
 20302  0F16                     i1l5555:	
 20303                           
 20304                           ;main.c: 647:     if(seg >= 60) {
 20305  0F16  303C               	movlw	60
 20306  0F17  025C               	subwf	_seg,w	;volatile
 20307  0F18  1C03               	skipc
 20308  0F19  2F1B               	goto	u270_21
 20309  0F1A  2F1C               	goto	u270_20
 20310  0F1B                     u270_21:	
 20311  0F1B  2F30               	goto	i1l1429
 20312  0F1C                     u270_20:	
 20313  0F1C                     i1l5557:	
 20314                           
 20315                           ;main.c: 648:         clkm++;
 20316  0F1C  3001               	movlw	1
 20317  0F1D  00F0               	movwf	??_handler_clock_hms
 20318  0F1E  0870               	movf	??_handler_clock_hms,w
 20319  0F1F  07DD               	addwf	_clkm,f	;volatile
 20320                           
 20321                           ;main.c: 649:         last1m++;
 20322  0F20  3001               	movlw	1
 20323  0F21  00F0               	movwf	??_handler_clock_hms
 20324  0F22  0870               	movf	??_handler_clock_hms,w
 20325  0F23  07D8               	addwf	_last1m,f	;volatile
 20326  0F24                     i1l5559:	
 20327                           
 20328                           ;main.c: 650:         seg = 0;
 20329  0F24  01DC               	clrf	_seg	;volatile
 20330  0F25                     i1l5561:	
 20331                           
 20332                           ;main.c: 651:         if(clkm >= 60) {
 20333  0F25  303C               	movlw	60
 20334  0F26  025D               	subwf	_clkm,w	;volatile
 20335  0F27  1C03               	skipc
 20336  0F28  2F2A               	goto	u271_21
 20337  0F29  2F2B               	goto	u271_20
 20338  0F2A                     u271_21:	
 20339  0F2A  2F30               	goto	i1l1429
 20340  0F2B                     u271_20:	
 20341  0F2B                     i1l5563:	
 20342                           
 20343                           ;main.c: 652:             clkh++;
 20344  0F2B  3001               	movlw	1
 20345  0F2C  00F0               	movwf	??_handler_clock_hms
 20346  0F2D  0870               	movf	??_handler_clock_hms,w
 20347  0F2E  07DE               	addwf	_clkh,f	;volatile
 20348  0F2F                     i1l5565:	
 20349                           
 20350                           ;main.c: 653:             clkm = 0;
 20351  0F2F  01DD               	clrf	_clkm	;volatile
 20352  0F30                     i1l1429:	
 20353  0F30  0008               	return
 20354  0F31                     __end_of_handler_clock_hms:	
 20355                           
 20356                           	psect	text100
 20357  0B74                     __ptext100:	
 20358 ;; *************** function _TMR1_WriteTimer *****************
 20359 ;; Defined at:
 20360 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 20361 ;; Parameters:    Size  Location     Type
 20362 ;;  timerVal        2    0[COMMON] unsigned short 
 20363 ;; Auto vars:     Size  Location     Type
 20364 ;;		None
 20365 ;; Return value:  Size  Location     Type
 20366 ;;                  1    wreg      void 
 20367 ;; Registers used:
 20368 ;;		wreg, status,2
 20369 ;; Tracked objects:
 20370 ;;		On entry : 0/0
 20371 ;;		On exit  : 0/0
 20372 ;;		Unchanged: 0/0
 20373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20378 ;;Total ram usage:        2 bytes
 20379 ;; Hardware stack levels used:    1
 20380 ;; This function calls:
 20381 ;;		Nothing
 20382 ;; This function is called by:
 20383 ;;		_TMR1_ISR
 20384 ;;		_TMR1_Reload
 20385 ;; This function uses a non-reentrant model
 20386 ;;
 20387                           
 20388                           
 20389                           ;psect for function _TMR1_WriteTimer
 20390  0B74                     _TMR1_WriteTimer:	
 20391  0B74                     i1l5485:	
 20392                           ;incstack = 0
 20393                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 20394                           
 20395                           
 20396                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 20397  0B74  0024               	movlb	4	; select bank4
 20398  0B75  1D0E               	btfss	14,2	;volatile
 20399  0B76  2B78               	goto	u260_21
 20400  0B77  2B79               	goto	u260_20
 20401  0B78                     u260_21:	
 20402  0B78  2B80               	goto	i1l5495
 20403  0B79                     u260_20:	
 20404  0B79                     i1l5487:	
 20405                           
 20406                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 20407  0B79  100E               	bcf	14,0	;volatile
 20408  0B7A                     i1l5489:	
 20409                           
 20410                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 20411  0B7A  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 20412  0B7B  008D               	movwf	13	;volatile
 20413  0B7C                     i1l5491:	
 20414                           
 20415                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 20416  0B7C  0870               	movf	TMR1_WriteTimer@timerVal,w
 20417  0B7D  008C               	movwf	12	;volatile
 20418  0B7E                     i1l5493:	
 20419                           
 20420                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 20421  0B7E  140E               	bsf	14,0	;volatile
 20422                           
 20423                           ;mcc_generated_files/tmr1.c: 140:     }
 20424  0B7F  2B84               	goto	i1l931
 20425  0B80                     i1l5495:	
 20426                           
 20427                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 20428  0B80  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 20429  0B81  008D               	movwf	13	;volatile
 20430  0B82                     i1l5497:	
 20431                           
 20432                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 20433  0B82  0870               	movf	TMR1_WriteTimer@timerVal,w
 20434  0B83  008C               	movwf	12	;volatile
 20435  0B84                     i1l931:	
 20436  0B84  0008               	return
 20437  0B85                     __end_of_TMR1_WriteTimer:	
 20438                           
 20439                           	psect	text101
 20440  0B27                     __ptext101:	
 20441 ;; *************** function _TMR0_ISR *****************
 20442 ;; Defined at:
 20443 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 20444 ;; Parameters:    Size  Location     Type
 20445 ;;		None
 20446 ;; Auto vars:     Size  Location     Type
 20447 ;;		None
 20448 ;; Return value:  Size  Location     Type
 20449 ;;                  1    wreg      void 
 20450 ;; Registers used:
 20451 ;;		wreg, status,2, status,0, pclath, cstack
 20452 ;; Tracked objects:
 20453 ;;		On entry : 0/0
 20454 ;;		On exit  : 0/0
 20455 ;;		Unchanged: 0/0
 20456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20461 ;;Total ram usage:        0 bytes
 20462 ;; Hardware stack levels used:    1
 20463 ;; Hardware stack levels required when called:    2
 20464 ;; This function calls:
 20465 ;;		Absolute function
 20466 ;;		_ISR_3s
 20467 ;;		_TMR0_DefaultInterruptHandler
 20468 ;; This function is called by:
 20469 ;;		_INTERRUPT_InterruptManager
 20470 ;; This function uses a non-reentrant model
 20471 ;;
 20472                           
 20473                           
 20474                           ;psect for function _TMR0_ISR
 20475  0B27                     _TMR0_ISR:	
 20476  0B27                     i1l5669:	
 20477                           ;incstack = 0
 20478                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 20479                           
 20480                           
 20481                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 20482  0B27  002E               	movlb	14	; select bank14
 20483  0B28  128C               	bcf	12,5	;volatile
 20484  0B29                     i1l5671:	
 20485                           
 20486                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 20487  0B29  0021               	movlb	1	; select bank1
 20488  0B2A  085A               	movf	_TMR0_InterruptHandler^(0+128),w
 20489  0B2B  045B               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 20490  0B2C  1903               	btfsc	3,2
 20491  0B2D  2B2F               	goto	u279_21
 20492  0B2E  2B30               	goto	u279_20
 20493  0B2F                     u279_21:	
 20494  0B2F  2B35               	goto	i1l880
 20495  0B30                     u279_20:	
 20496  0B30                     i1l5673:	
 20497                           
 20498                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 20499  0B30  085B               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 20500  0B31  008A               	movwf	10
 20501  0B32  085A               	movf	_TMR0_InterruptHandler^(0+128),w
 20502  0B33  000A               	callw
 20503  0B34  318B               	pagesel	$
 20504  0B35                     i1l880:	
 20505  0B35  0008               	return
 20506  0B36                     __end_of_TMR0_ISR:	
 20507                           
 20508                           	psect	text102
 20509  0C67                     __ptext102:	
 20510 ;; *************** function _ISR_3s *****************
 20511 ;; Defined at:
 20512 ;;		line 151 in file "main.c"
 20513 ;; Parameters:    Size  Location     Type
 20514 ;;		None
 20515 ;; Auto vars:     Size  Location     Type
 20516 ;;		None
 20517 ;; Return value:  Size  Location     Type
 20518 ;;                  1    wreg      void 
 20519 ;; Registers used:
 20520 ;;		wreg, status,2, status,0, pclath, cstack
 20521 ;; Tracked objects:
 20522 ;;		On entry : 0/0
 20523 ;;		On exit  : 0/0
 20524 ;;		Unchanged: 0/0
 20525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20529 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20530 ;;Total ram usage:        1 bytes
 20531 ;; Hardware stack levels used:    1
 20532 ;; Hardware stack levels required when called:    1
 20533 ;; This function calls:
 20534 ;;		_TMR0_StopTimer
 20535 ;;		i1_PWM6_LoadDutyValue
 20536 ;; This function is called by:
 20537 ;;		_main
 20538 ;;		_TMR0_ISR
 20539 ;; This function uses a non-reentrant model
 20540 ;;
 20541                           
 20542                           
 20543                           ;psect for function _ISR_3s
 20544  0C67                     _ISR_3s:	
 20545  0C67                     i1l5499:	
 20546                           ;incstack = 0
 20547                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 20548                           
 20549                           
 20550                           ;main.c: 153:     if (lum_threshold){
 20551  0C67  0020               	movlb	0	; select bank0
 20552  0C68  084F               	movf	_lum_threshold,w
 20553  0C69  0450               	iorwf	_lum_threshold+1,w
 20554  0C6A  1903               	btfsc	3,2
 20555  0C6B  2C6D               	goto	u261_21
 20556  0C6C  2C6E               	goto	u261_20
 20557  0C6D                     u261_21:	
 20558  0C6D  2C7A               	goto	i1l1282
 20559  0C6E                     u261_20:	
 20560  0C6E                     i1l5501:	
 20561                           
 20562                           ;main.c: 154:         PWM6_LoadDutyValue(1023);
 20563  0C6E  30FF               	movlw	255
 20564  0C6F  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 20565  0C70  3003               	movlw	3
 20566  0C71  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 20567  0C72  318B  23DE  318C   	fcall	i1_PWM6_LoadDutyValue
 20568  0C75                     i1l5503:	
 20569                           
 20570                           ;main.c: 155:         alarm = 1;
 20571  0C75  3001               	movlw	1
 20572  0C76  00F4               	movwf	??_ISR_3s
 20573  0C77  0874               	movf	??_ISR_3s,w
 20574  0C78  0020               	movlb	0	; select bank0
 20575  0C79  00D5               	movwf	_alarm	;volatile
 20576  0C7A                     i1l1282:	
 20577                           ;main.c: 157:     }
 20578                           
 20579                           
 20580                           ;main.c: 159:     TMR0_StopTimer();
 20581  0C7A  3189  21CB  318C   	fcall	_TMR0_StopTimer
 20582  0C7D                     i1l5505:	
 20583                           
 20584                           ;main.c: 160:     PIE0bits.TMR0IE = 0;
 20585  0C7D  002E               	movlb	14	; select bank14
 20586  0C7E  1296               	bcf	22,5	;volatile
 20587  0C7F                     i1l1283:	
 20588  0C7F  0008               	return
 20589  0C80                     __end_of_ISR_3s:	
 20590                           
 20591                           	psect	text103
 20592  09C4                     __ptext103:	
 20593 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 20594 ;; Defined at:
 20595 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 20596 ;; Parameters:    Size  Location     Type
 20597 ;;		None
 20598 ;; Auto vars:     Size  Location     Type
 20599 ;;		None
 20600 ;; Return value:  Size  Location     Type
 20601 ;;                  1    wreg      void 
 20602 ;; Registers used:
 20603 ;;		None
 20604 ;; Tracked objects:
 20605 ;;		On entry : 0/0
 20606 ;;		On exit  : 0/0
 20607 ;;		Unchanged: 0/0
 20608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20613 ;;Total ram usage:        0 bytes
 20614 ;; Hardware stack levels used:    1
 20615 ;; This function calls:
 20616 ;;		Nothing
 20617 ;; This function is called by:
 20618 ;;		_TMR0_Initialize
 20619 ;;		_TMR0_ISR
 20620 ;; This function uses a non-reentrant model
 20621 ;;
 20622                           
 20623                           
 20624                           ;psect for function _TMR0_DefaultInterruptHandler
 20625  09C4                     _TMR0_DefaultInterruptHandler:	
 20626  09C4                     i1l886:	
 20627                           ;incstack = 0
 20628                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 20629                           
 20630  09C4  0008               	return
 20631  09C5                     __end_of_TMR0_DefaultInterruptHandler:	
 20632                           
 20633                           	psect	text104
 20634  09CB                     __ptext104:	
 20635 ;; *************** function _TMR0_StopTimer *****************
 20636 ;; Defined at:
 20637 ;;		line 93 in file "mcc_generated_files/tmr0.c"
 20638 ;; Parameters:    Size  Location     Type
 20639 ;;		None
 20640 ;; Auto vars:     Size  Location     Type
 20641 ;;		None
 20642 ;; Return value:  Size  Location     Type
 20643 ;;                  1    wreg      void 
 20644 ;; Registers used:
 20645 ;;		None
 20646 ;; Tracked objects:
 20647 ;;		On entry : 0/0
 20648 ;;		On exit  : 0/0
 20649 ;;		Unchanged: 0/0
 20650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20655 ;;Total ram usage:        0 bytes
 20656 ;; Hardware stack levels used:    1
 20657 ;; This function calls:
 20658 ;;		Nothing
 20659 ;; This function is called by:
 20660 ;;		_ISR_3s
 20661 ;; This function uses a non-reentrant model
 20662 ;;
 20663                           
 20664                           
 20665                           ;psect for function _TMR0_StopTimer
 20666  09CB                     _TMR0_StopTimer:	
 20667  09CB                     i1l5005:	
 20668                           ;incstack = 0
 20669                           ; Regs used in _TMR0_StopTimer: []
 20670                           
 20671                           
 20672                           ;mcc_generated_files/tmr0.c: 96:     T0CON0bits.T0EN = 0;
 20673  09CB  0020               	movlb	0	; select bank0
 20674  09CC  139E               	bcf	30,7	;volatile
 20675  09CD                     i1l867:	
 20676  09CD  0008               	return
 20677  09CE                     __end_of_TMR0_StopTimer:	
 20678                           
 20679                           	psect	text105
 20680  0A1F                     __ptext105:	
 20681 ;; *************** function _INT_ISR *****************
 20682 ;; Defined at:
 20683 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 20684 ;; Parameters:    Size  Location     Type
 20685 ;;		None
 20686 ;; Auto vars:     Size  Location     Type
 20687 ;;		None
 20688 ;; Return value:  Size  Location     Type
 20689 ;;                  1    wreg      void 
 20690 ;; Registers used:
 20691 ;;		wreg, status,2, status,0, pclath, cstack
 20692 ;; Tracked objects:
 20693 ;;		On entry : 0/0
 20694 ;;		On exit  : 0/0
 20695 ;;		Unchanged: 0/0
 20696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20701 ;;Total ram usage:        0 bytes
 20702 ;; Hardware stack levels used:    1
 20703 ;; Hardware stack levels required when called:    3
 20704 ;; This function calls:
 20705 ;;		_INT_CallBack
 20706 ;; This function is called by:
 20707 ;;		_INTERRUPT_InterruptManager
 20708 ;; This function uses a non-reentrant model
 20709 ;;
 20710                           
 20711                           
 20712                           ;psect for function _INT_ISR
 20713  0A1F                     _INT_ISR:	
 20714  0A1F                     i1l5665:	
 20715                           ;incstack = 0
 20716                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 20717                           
 20718                           
 20719                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 20720  0A1F  002E               	movlb	14	; select bank14
 20721  0A20  100C               	bcf	12,0	;volatile
 20722  0A21                     i1l5667:	
 20723                           
 20724                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 20725  0A21  318A  22F2  318A   	fcall	_INT_CallBack
 20726  0A24                     i1l334:	
 20727  0A24  0008               	return
 20728  0A25                     __end_of_INT_ISR:	
 20729                           
 20730                           	psect	text106
 20731  0AF2                     __ptext106:	
 20732 ;; *************** function _INT_CallBack *****************
 20733 ;; Defined at:
 20734 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 20735 ;; Parameters:    Size  Location     Type
 20736 ;;		None
 20737 ;; Auto vars:     Size  Location     Type
 20738 ;;		None
 20739 ;; Return value:  Size  Location     Type
 20740 ;;                  1    wreg      void 
 20741 ;; Registers used:
 20742 ;;		wreg, status,2, status,0, pclath, cstack
 20743 ;; Tracked objects:
 20744 ;;		On entry : 0/0
 20745 ;;		On exit  : 0/0
 20746 ;;		Unchanged: 0/0
 20747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20752 ;;Total ram usage:        0 bytes
 20753 ;; Hardware stack levels used:    1
 20754 ;; Hardware stack levels required when called:    2
 20755 ;; This function calls:
 20756 ;;		Absolute function
 20757 ;;		_INT_DefaultInterruptHandler
 20758 ;;		_sw1_EXT
 20759 ;; This function is called by:
 20760 ;;		_INT_ISR
 20761 ;; This function uses a non-reentrant model
 20762 ;;
 20763                           
 20764                           
 20765                           ;psect for function _INT_CallBack
 20766  0AF2                     _INT_CallBack:	
 20767  0AF2                     i1l5343:	
 20768                           ;incstack = 0
 20769                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 20770                           
 20771                           
 20772                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 20773  0AF2  0021               	movlb	1	; select bank1
 20774  0AF3  085C               	movf	_INT_InterruptHandler^(0+128),w
 20775  0AF4  045D               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 20776  0AF5  1903               	btfsc	3,2
 20777  0AF6  2AF8               	goto	u259_21
 20778  0AF7  2AF9               	goto	u259_20
 20779  0AF8                     u259_21:	
 20780  0AF8  2AFE               	goto	i1l338
 20781  0AF9                     u259_20:	
 20782  0AF9                     i1l5345:	
 20783                           
 20784                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 20785  0AF9  085D               	movf	(_INT_InterruptHandler+1)^(0+128),w
 20786  0AFA  008A               	movwf	10
 20787  0AFB  085C               	movf	_INT_InterruptHandler^(0+128),w
 20788  0AFC  000A               	callw
 20789  0AFD  318A               	pagesel	$
 20790  0AFE                     i1l338:	
 20791  0AFE  0008               	return
 20792  0AFF                     __end_of_INT_CallBack:	
 20793                           
 20794                           	psect	text107
 20795  09C3                     __ptext107:	
 20796 ;; *************** function _INT_DefaultInterruptHandler *****************
 20797 ;; Defined at:
 20798 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 20799 ;; Parameters:    Size  Location     Type
 20800 ;;		None
 20801 ;; Auto vars:     Size  Location     Type
 20802 ;;		None
 20803 ;; Return value:  Size  Location     Type
 20804 ;;                  1    wreg      void 
 20805 ;; Registers used:
 20806 ;;		None
 20807 ;; Tracked objects:
 20808 ;;		On entry : 0/0
 20809 ;;		On exit  : 0/0
 20810 ;;		Unchanged: 0/0
 20811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20816 ;;Total ram usage:        0 bytes
 20817 ;; Hardware stack levels used:    1
 20818 ;; This function calls:
 20819 ;;		Nothing
 20820 ;; This function is called by:
 20821 ;;		_EXT_INT_Initialize
 20822 ;;		_INT_CallBack
 20823 ;; This function uses a non-reentrant model
 20824 ;;
 20825                           
 20826                           
 20827                           ;psect for function _INT_DefaultInterruptHandler
 20828  09C3                     _INT_DefaultInterruptHandler:	
 20829  09C3                     i1l344:	
 20830                           ;incstack = 0
 20831                           ; Regs used in _INT_DefaultInterruptHandler: []
 20832                           
 20833  09C3  0008               	return
 20834  09C4                     __end_of_INT_DefaultInterruptHandler:	
 20835                           
 20836                           	psect	text108
 20837  0DA3                     __ptext108:	
 20838 ;; *************** function _sw1_EXT *****************
 20839 ;; Defined at:
 20840 ;;		line 129 in file "main.c"
 20841 ;; Parameters:    Size  Location     Type
 20842 ;;		None
 20843 ;; Auto vars:     Size  Location     Type
 20844 ;;		None
 20845 ;; Return value:  Size  Location     Type
 20846 ;;                  1    wreg      void 
 20847 ;; Registers used:
 20848 ;;		wreg, status,2, status,0, pclath, cstack
 20849 ;; Tracked objects:
 20850 ;;		On entry : 0/0
 20851 ;;		On exit  : 0/0
 20852 ;;		Unchanged: 0/0
 20853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20856 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20858 ;;Total ram usage:        1 bytes
 20859 ;; Hardware stack levels used:    1
 20860 ;; Hardware stack levels required when called:    1
 20861 ;; This function calls:
 20862 ;;		i1_PWM6_LoadDutyValue
 20863 ;;		i1_checkDebounceSW1
 20864 ;; This function is called by:
 20865 ;;		_main
 20866 ;;		_INT_CallBack
 20867 ;; This function uses a non-reentrant model
 20868 ;;
 20869                           
 20870                           
 20871                           ;psect for function _sw1_EXT
 20872  0DA3                     _sw1_EXT:	
 20873  0DA3                     i1l5031:	
 20874                           ;incstack = 0
 20875                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 20876                           
 20877                           
 20878                           ;main.c: 131:     if(checkDebounceSW1()){
 20879  0DA3  3185  2557  318D   	fcall	i1_checkDebounceSW1
 20880  0DA6  3A00               	xorlw	0
 20881  0DA7  1903               	skipnz
 20882  0DA8  2DAA               	goto	u249_21
 20883  0DA9  2DAB               	goto	u249_20
 20884  0DAA                     u249_21:	
 20885  0DAA  2DC7               	goto	i1l1279
 20886  0DAB                     u249_20:	
 20887  0DAB                     i1l5033:	
 20888                           
 20889                           ;main.c: 132:         if (alarm == 1){
 20890  0DAB  0020               	movlb	0	; select bank0
 20891  0DAC  0355               	decf	_alarm,w	;volatile
 20892  0DAD  1D03               	btfss	3,2
 20893  0DAE  2DB0               	goto	u250_21
 20894  0DAF  2DB1               	goto	u250_20
 20895  0DB0                     u250_21:	
 20896  0DB0  2DBE               	goto	i1l5041
 20897  0DB1                     u250_20:	
 20898  0DB1                     i1l5035:	
 20899                           
 20900                           ;main.c: 133:             alarm = 0;
 20901  0DB1  01D5               	clrf	_alarm	;volatile
 20902  0DB2                     i1l5037:	
 20903                           
 20904                           ;main.c: 134:             PWM6_LoadDutyValue(0);
 20905  0DB2  3000               	movlw	0
 20906  0DB3  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 20907  0DB4  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 20908  0DB5  318B  23DE  318D   	fcall	i1_PWM6_LoadDutyValue
 20909  0DB8                     i1l5039:	
 20910                           
 20911                           ;main.c: 135:             last_ms = clkms;
 20912  0DB8  087D               	movf	_clkms,w	;volatile
 20913  0DB9  00F7               	movwf	??_sw1_EXT
 20914  0DBA  0877               	movf	??_sw1_EXT,w
 20915  0DBB  0020               	movlb	0	; select bank0
 20916  0DBC  00DB               	movwf	_last_ms
 20917                           
 20918                           ;main.c: 136:         }
 20919  0DBD  2DC7               	goto	i1l1279
 20920  0DBE                     i1l5041:	
 20921                           
 20922                           ;main.c: 138:             if(config_mode == 0){
 20923  0DBE  0856               	movf	_config_mode,w	;volatile
 20924  0DBF  1D03               	btfss	3,2
 20925  0DC0  2DC2               	goto	u251_21
 20926  0DC1  2DC3               	goto	u251_20
 20927  0DC2                     u251_21:	
 20928  0DC2  2DC7               	goto	i1l1279
 20929  0DC3                     u251_20:	
 20930  0DC3                     i1l5043:	
 20931                           
 20932                           ;main.c: 139:                 config_mode = 1;
 20933  0DC3  3001               	movlw	1
 20934  0DC4  00F7               	movwf	??_sw1_EXT
 20935  0DC5  0877               	movf	??_sw1_EXT,w
 20936  0DC6  00D6               	movwf	_config_mode	;volatile
 20937  0DC7                     i1l1279:	
 20938  0DC7  0008               	return
 20939  0DC8                     __end_of_sw1_EXT:	
 20940                           
 20941                           	psect	text109
 20942  0557                     __ptext109:	
 20943 ;; *************** function i1_checkDebounceSW1 *****************
 20944 ;; Defined at:
 20945 ;;		line 680 in file "main.c"
 20946 ;; Parameters:    Size  Location     Type
 20947 ;;		None
 20948 ;; Auto vars:     Size  Location     Type
 20949 ;;		None
 20950 ;; Return value:  Size  Location     Type
 20951 ;;                  1    wreg      unsigned char 
 20952 ;; Registers used:
 20953 ;;		wreg, status,2, status,0
 20954 ;; Tracked objects:
 20955 ;;		On entry : 0/0
 20956 ;;		On exit  : 0/0
 20957 ;;		Unchanged: 0/0
 20958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20961 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20962 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20963 ;;Total ram usage:        7 bytes
 20964 ;; Hardware stack levels used:    1
 20965 ;; This function calls:
 20966 ;;		Nothing
 20967 ;; This function is called by:
 20968 ;;		_sw1_EXT
 20969 ;; This function uses a non-reentrant model
 20970 ;;
 20971                           
 20972                           
 20973                           ;psect for function i1_checkDebounceSW1
 20974  0557                     i1_checkDebounceSW1:	
 20975  0557                     i1l4865:	
 20976                           ;incstack = 0
 20977                           ; Regs used in i1_checkDebounceSW1: [wreg+status,2+status,0]
 20978                           
 20979                           
 20980                           ;main.c: 681:     PIE4bits.TMR1IE = 0;
 20981  0557  002E               	movlb	14	; select bank14
 20982  0558  101A               	bcf	26,0	;volatile
 20983  0559                     i1l4867:	
 20984                           
 20985                           ;main.c: 683:     if(clkms - last_ms < 0){
 20986  0559  087D               	movf	_clkms,w	;volatile
 20987  055A  00F0               	movwf	??i1_checkDebounceSW1
 20988  055B  01F1               	clrf	??i1_checkDebounceSW1+1
 20989  055C  0871               	movf	??i1_checkDebounceSW1+1,w
 20990  055D  00F3               	movwf	??i1_checkDebounceSW1+3
 20991  055E  0020               	movlb	0	; select bank0
 20992  055F  085B               	movf	_last_ms,w
 20993  0560  0270               	subwf	??i1_checkDebounceSW1,w
 20994  0561  00F2               	movwf	??i1_checkDebounceSW1+2
 20995  0562  1C03               	skipc
 20996  0563  03F3               	decf	??i1_checkDebounceSW1+3,f
 20997  0564  1FF3               	btfss	??i1_checkDebounceSW1+3,7
 20998  0565  2D67               	goto	u244_21
 20999  0566  2D68               	goto	u244_20
 21000  0567                     u244_21:	
 21001  0567  2D8E               	goto	i1l4877
 21002  0568                     u244_20:	
 21003  0568                     i1l4869:	
 21004                           
 21005                           ;main.c: 685:         if ((200 - last_ms)+ clkms > 15 ){
 21006  0568  087D               	movf	_clkms,w	;volatile
 21007  0569  00F0               	movwf	??i1_checkDebounceSW1
 21008  056A  01F1               	clrf	??i1_checkDebounceSW1+1
 21009  056B  0871               	movf	??i1_checkDebounceSW1+1,w
 21010  056C  00F3               	movwf	??i1_checkDebounceSW1+3
 21011  056D  085B               	movf	_last_ms,w
 21012  056E  0270               	subwf	??i1_checkDebounceSW1,w
 21013  056F  00F2               	movwf	??i1_checkDebounceSW1+2
 21014  0570  1C03               	skipc
 21015  0571  03F3               	decf	??i1_checkDebounceSW1+3,f
 21016  0572  0872               	movf	??i1_checkDebounceSW1+2,w
 21017  0573  3EC8               	addlw	200
 21018  0574  00F4               	movwf	??i1_checkDebounceSW1+4
 21019  0575  3000               	movlw	0
 21020  0576  3D73               	addwfc	??i1_checkDebounceSW1+3,w
 21021  0577  00F5               	movwf	??i1_checkDebounceSW1+5
 21022  0578  0875               	movf	??i1_checkDebounceSW1+5,w
 21023  0579  3A80               	xorlw	128
 21024  057A  00F6               	movwf	??i1_checkDebounceSW1+6
 21025  057B  3080               	movlw	128
 21026  057C  0276               	subwf	??i1_checkDebounceSW1+6,w
 21027  057D  1D03               	skipz
 21028  057E  2D81               	goto	u245_25
 21029  057F  3010               	movlw	16
 21030  0580  0274               	subwf	??i1_checkDebounceSW1+4,w
 21031  0581                     u245_25:	
 21032  0581  1C03               	skipc
 21033  0582  2D84               	goto	u245_21
 21034  0583  2D85               	goto	u245_20
 21035  0584                     u245_21:	
 21036  0584  2D8E               	goto	i1l4877
 21037  0585                     u245_20:	
 21038  0585                     i1l4871:	
 21039                           
 21040                           ;main.c: 686:             last_ms = clkms;
 21041  0585  087D               	movf	_clkms,w	;volatile
 21042  0586  00F0               	movwf	??i1_checkDebounceSW1
 21043  0587  0870               	movf	??i1_checkDebounceSW1,w
 21044  0588  0020               	movlb	0	; select bank0
 21045  0589  00DB               	movwf	_last_ms
 21046  058A                     i1l4873:	
 21047                           
 21048                           ;main.c: 687:             PIE4bits.TMR1IE = 1;
 21049  058A  002E               	movlb	14	; select bank14
 21050  058B  141A               	bsf	26,0	;volatile
 21051                           
 21052                           ;main.c: 688:             return 1;
 21053  058C  3001               	movlw	1
 21054  058D  2DB0               	goto	i1l1438
 21055  058E                     i1l4877:	
 21056                           
 21057                           ;main.c: 692:     if(clkms - last_ms < 15){
 21058  058E  087D               	movf	_clkms,w	;volatile
 21059  058F  00F0               	movwf	??i1_checkDebounceSW1
 21060  0590  01F1               	clrf	??i1_checkDebounceSW1+1
 21061  0591  0871               	movf	??i1_checkDebounceSW1+1,w
 21062  0592  00F3               	movwf	??i1_checkDebounceSW1+3
 21063  0593  0020               	movlb	0	; select bank0
 21064  0594  085B               	movf	_last_ms,w
 21065  0595  0270               	subwf	??i1_checkDebounceSW1,w
 21066  0596  00F2               	movwf	??i1_checkDebounceSW1+2
 21067  0597  1C03               	skipc
 21068  0598  03F3               	decf	??i1_checkDebounceSW1+3,f
 21069  0599  0873               	movf	??i1_checkDebounceSW1+3,w
 21070  059A  3A80               	xorlw	128
 21071  059B  00F4               	movwf	??i1_checkDebounceSW1+4
 21072  059C  3080               	movlw	128
 21073  059D  0274               	subwf	??i1_checkDebounceSW1+4,w
 21074  059E  1D03               	skipz
 21075  059F  2DA2               	goto	u246_25
 21076  05A0  300F               	movlw	15
 21077  05A1  0272               	subwf	??i1_checkDebounceSW1+2,w
 21078  05A2                     u246_25:	
 21079  05A2  1803               	skipnc
 21080  05A3  2DA5               	goto	u246_21
 21081  05A4  2DA6               	goto	u246_20
 21082  05A5                     u246_21:	
 21083  05A5  2DA8               	goto	i1l4885
 21084  05A6                     u246_20:	
 21085  05A6                     i1l4879:	
 21086                           
 21087                           ;main.c: 693:         return 0;
 21088  05A6  3000               	movlw	0
 21089  05A7  2DB0               	goto	i1l1438
 21090  05A8                     i1l4885:	
 21091                           
 21092                           ;main.c: 696:         last_ms = clkms;
 21093  05A8  087D               	movf	_clkms,w	;volatile
 21094  05A9  00F0               	movwf	??i1_checkDebounceSW1
 21095  05AA  0870               	movf	??i1_checkDebounceSW1,w
 21096  05AB  0020               	movlb	0	; select bank0
 21097  05AC  00DB               	movwf	_last_ms
 21098  05AD                     i1l4887:	
 21099                           
 21100                           ;main.c: 697:         PIE4bits.TMR1IE = 1;
 21101  05AD  002E               	movlb	14	; select bank14
 21102  05AE  141A               	bsf	26,0	;volatile
 21103                           
 21104                           ;main.c: 698:         return 1;
 21105  05AF  3001               	movlw	1
 21106  05B0                     i1l1438:	
 21107  05B0  0008               	return
 21108  05B1                     __end_ofi1_checkDebounceSW1:	
 21109                           
 21110                           	psect	text110
 21111  0BDE                     __ptext110:	
 21112 ;; *************** function i1_PWM6_LoadDutyValue *****************
 21113 ;; Defined at:
 21114 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 21115 ;; Parameters:    Size  Location     Type
 21116 ;;  dutyValue       2    0[COMMON] unsigned short 
 21117 ;; Auto vars:     Size  Location     Type
 21118 ;;		None
 21119 ;; Return value:  Size  Location     Type
 21120 ;;                  1    wreg      void 
 21121 ;; Registers used:
 21122 ;;		wreg, status,2, status,0
 21123 ;; Tracked objects:
 21124 ;;		On entry : 0/0
 21125 ;;		On exit  : 0/0
 21126 ;;		Unchanged: 0/0
 21127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21130 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21131 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21132 ;;Total ram usage:        4 bytes
 21133 ;; Hardware stack levels used:    1
 21134 ;; This function calls:
 21135 ;;		Nothing
 21136 ;; This function is called by:
 21137 ;;		_sw1_EXT
 21138 ;;		_ISR_3s
 21139 ;; This function uses a non-reentrant model
 21140 ;;
 21141                           
 21142                           
 21143                           ;psect for function i1_PWM6_LoadDutyValue
 21144  0BDE                     i1_PWM6_LoadDutyValue:	
 21145  0BDE                     i1l4863:	
 21146                           ;incstack = 0
 21147                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 21148                           
 21149                           
 21150                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 21151  0BDE  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 21152  0BDF  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 21153  0BE0  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 21154  0BE1  00F2               	movwf	??i1_PWM6_LoadDutyValue
 21155  0BE2  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 21156  0BE3  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 21157  0BE4  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 21158  0BE5  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 21159  0BE6  0872               	movf	??i1_PWM6_LoadDutyValue,w
 21160  0BE7  0027               	movlb	7	; select bank7
 21161  0BE8  008D               	movwf	13	;volatile
 21162                           
 21163                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 21164  0BE9  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 21165  0BEA  3903               	andlw	3
 21166  0BEB  00F2               	movwf	??i1_PWM6_LoadDutyValue
 21167  0BEC  3005               	movlw	5
 21168  0BED                     u243_25:	
 21169  0BED  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 21170  0BEE  3EFF               	addlw	-1
 21171  0BEF  1D03               	skipz
 21172  0BF0  2BED               	goto	u243_25
 21173  0BF1  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 21174  0BF2  008C               	movwf	12	;volatile
 21175  0BF3                     i1l964:	
 21176  0BF3  0008               	return
 21177  0BF4                     __end_ofi1_PWM6_LoadDutyValue:	
 21178  007E                     btemp	set	126	;btemp
 21179  007E                     int$flags	set	126
 21180  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    37
    Data        9
    BSS         75
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     43      74
    BANK1            80      5      67
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3779$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3785	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3784	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3779	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    push_ring@ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    push_ring@nreg_pt	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_pt(BANK0[1]), 

    push_ring@nreg_init	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_init(BANK0[1]), 

    ring_buffer@_ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    S2082Subfield_Info_Struct$reconstruct_subfield	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> recLumThresh(), recTempThresh(), recAlarm(), Absolute function(), 

    subfield_info.reconstruct_subfield	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> recLumThresh(), recTempThresh(), recAlarm(), Absolute function(), 

    S2082Subfield_Info_Struct$limit	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), limitTempThreshUnits(), Absolute function(), Absolute function(), 
		 -> Absolute function(), 

    subfield_info.limit	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), limitTempThreshUnits(), Absolute function(), Absolute function(), 
		 -> Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ISR_3s(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ISR_3s(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S383$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S66$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S66$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounceSW1

Critical Paths under _main in BANK0

    _main->_config_routine
    _save_recovery_params->_cksum_w
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_selectSubfield
    _selectSubfield->_getSubfieldInfo
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _getSubfieldInfo->_increment_subfield_clk
    _limitHoursUnits->___awdiv
    _increment_subfield_clk->_representLed
    _representLed->_PWM6_LoadDutyValue
    _all_LED->_PWM6_LoadDutyValue
    _mode_select_LED->_PWM6_LoadDutyValue
    _PWM6_LoadDutyValue->___wmul
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   53563
                                             38 BANK0      5     5      0
                                              0 BANK1      5     5      0
                           _ADC_read
                   _DATAEE_WriteByte
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                            _cksum_w
                     _config_routine
                   _i2c1_driver_open
                          _push_ring
                          _read_ring
                        _recoverData
                        _ring_buffer
               _save_recovery_params
 ---------------------------------------------------------------------------------
 (1) _save_recovery_params                                 3     3      0    5020
                                             14 BANK0      3     3      0
                   _DATAEE_WriteByte
                            _cksum_w
 ---------------------------------------------------------------------------------
 (1) _ring_buffer                                          7     2      5     796
                                              3 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0    9038
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    2026
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    3025
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0    1098
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            9     5      4    2503
                                              7 BANK0      9     5      4
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2     962
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            7     4      3    2580
                                             13 BANK0      7     4      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    1927
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0   25313
                                             35 BANK0      3     3      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
                    _mode_select_LED
                     _selectSubfield
 ---------------------------------------------------------------------------------
 (2) _selectSubfield                                       4     4      0   17156
                                             31 BANK0      4     4      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _getSubfieldInfo
                           _mode_LED
 ---------------------------------------------------------------------------------
 (3) _mode_LED                                             3     3      0    5399
                                             13 BANK0      3     3      0
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (4) _mod4_LED                                             0     0      0    1342
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod3_LED                                             0     0      0    1342
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod2_LED                                             0     0      0    1342
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _mod1_LED                                             0     0      0    1342
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _getSubfieldInfo                                      7     7      0   10316
                                             24 BANK0      7     7      0
                            ___awdiv
                            ___awmod
                             ___bmul
             _increment_subfield_clk
                    _limitHoursUnits
 ---------------------------------------------------------------------------------
 (4) _limitHoursUnits                                      2     2      0    1705
                                             12 BANK0      2     2      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    1705
                                              3 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _increment_subfield_clk                               6     4      2    4895
                                             18 BANK0      6     4      2
                 _PWM6_LoadDutyValue
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _limitHoursUnits (ARG)
                       _representLed
 ---------------------------------------------------------------------------------
 (5) _representLed                                         5     5      0    2837
                                             13 BANK0      5     5      0
                 _PWM6_LoadDutyValue
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1306
                                              3 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _checkDebounceSW2                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (5) _checkDebounceSW1                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     406
                                              3 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1333
                                              3 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _all_LED                                              1     1      0    1342
                                             13 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_select_LED                                      1     1      0    1342
                                             13 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (5) _PWM6_LoadDutyValue                                   4     2      2    1342
                                              9 BANK0      4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     844
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     152
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      31
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (8) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (9) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _mssp1_setIRQ                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_WRITE                           0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART_READ                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_TXData                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_getRXData                               0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_STOP                                 0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (10) _do_I2C_DO_NACK_RESTART                              0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_resetBus                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_startRX                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _returnStop                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _returnReset                                         1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _i2c_setDataCompleteCallback                         4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (12) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (11) _i2c_setBuffer                                       4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _i2c_restartWrite                                    1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_STOP                                    0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _do_I2C_SEND_RESTART                                 0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (11) _i2c1_driver_restart                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_sendACK                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (9) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (9) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (10) _TMR0_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (9) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (10) _sw1_EXT                                             1     1      0      96
                                              7 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                 i1_checkDebounceSW1
 ---------------------------------------------------------------------------------
 (11) i1_checkDebounceSW1                                  7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (10) i1_PWM6_LoadDutyValue                                4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (10) _INT_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
     ___wmul (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _config_routine
     _all_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _checkDebounceSW1
     _checkDebounceSW2
     _mod1_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod2_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod3_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod4_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mode_select_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _selectSubfield
       _all_LED
         _PWM6_LoadDutyValue
           ___wmul (ARG)
       _checkDebounceSW1
       _checkDebounceSW2
       _getSubfieldInfo
         ___awdiv
         ___awmod
         ___bmul
         _increment_subfield_clk
           _PWM6_LoadDutyValue
             ___wmul (ARG)
           _checkDebounceSW1
           _checkDebounceSW2
           _limitHoursUnits (ARG)
             ___awdiv
           _representLed (ARG)
             _PWM6_LoadDutyValue
               ___wmul (ARG)
             ___wmul
         _limitHoursUnits
           ___awdiv
       _mode_LED
         _mod1_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod2_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod3_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
         _mod4_LED
           _PWM6_LoadDutyValue
             ___wmul (ARG)
   _i2c1_driver_open
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
   _ring_buffer
   _save_recovery_params
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounceSW1
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2B      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      5      43       7       83.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 29 12:56:22 2019

                            returnReset@p 0079          __end_of_TMR2_SetInterruptHandler 0AA6  
                          ___bmul@product 0025                               __CFG_CP$OFF 0000  
                            ___awdiv@sign 0029                      __size_of_do_I2C_IDLE 0005  
                           _subfield_info 004B                       _do_I2C_SEND_RESTART 0A06  
                    __size_of_do_I2C_RCEN 0007                       ___wmul@multiplicand 0025  
             __size_of_PWM6_LoadDutyValue 0019                               __CFG_LVP$ON 0000  
                                     l341 0A81                                       l442 0A8A  
                                     l506 0AF1                                       l347 0B26  
                                     l445 0A66                                       l439 0D03  
                                     l760 0A5E                                       l763 0A3E  
                                     l675 0FFF                                       l757 0C09  
                                     l861 0BDD                                       l917 0D3E  
                                     l766 0A78                                       l864 09E5  
                                     l961 0B18                                       l883 0A93  
                                     l947 0A9C                                       l964 0C98  
                                     _PR2 028D                              __CFG_CPD$OFF 0000  
                                     i1l9 09C8                           _timer1ReloadVal 00D8  
                                     _seg 005C             i2c_setDataCompleteCallback@cb 0075  
                 __size_of_PMD_Initialize 0008                              ___awmod@sign 0029  
                         _TMR2_Initialize 0C4F                     __size_of_do_I2C_RESET 0008  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_ZCD$OFF 0000                           __end_of_LED_bin 0CCD  
                                    l1011 0B53                                      l1005 0D97  
                                    l1007 0D9B                                      l1008 0DA2  
                 ??_rd2RegCompleteHandler 007A                                      l1046 0C66  
                                    l1320 0411                                      l2034 04A1  
                                    l1307 01D7                                      l1332 0441  
                                    l1421 0CB2                                      l1341 06FA  
                                    l2047 0658                                      l1415 0604  
                                    l1360 0321                                      l1089 0AA5  
                                    l1345 020B                                      l1450 0E41  
                                    l1291 00A1                                      l1445 0794  
                                    l1453 0EC9                                      l1438 0556  
                                    l1390 0CE7                                      l1294 00CD  
                                    l1295 01F4                                      l1704 0AD9  
                                    l1715 0D5E                                      l1643 0F6F  
                                    l1651 07FE                                      l1636 0FB6  
                                    l1725 0E17                                      l1629 03B9  
                                    l1646 0B73                                      l1671 04A2  
                                    l1656 0D1F                                      l1729 0747  
                                    l1674 04AF                                      l1683 04FC  
                                    l1907 0C1F                                      l1691 0AC3  
                                    l1686 0CCC                                      l1694 0AB8  
                    _ADCC_StartConversion 0A57                                      l1881 0D6A  
                                    l7001 0B64                                      l7011 0D53  
                                    l7003 0D3F                                      l1883 0D7E  
                                    l1699 0ACE                                      l7101 0CEB  
                                    l7013 0D5B                                      l7005 0D47  
                                    l7021 06B6                                      l7111 0CFA  
                                    l7103 0CEE                                      l7015 0D5D  
                                    l7007 0D49                                      l7031 06D5  
                                    l7023 06BE                                      l7113 0CFD  
                                    l7105 0CF1                                      l7009 0D51  
                                    l7033 06DA                                      l7025 06C3  
                                    l7017 06AD                                      l7201 0FAC  
                                    l7041 0D04                                      l7121 032F  
                                    l7115 0D00                                      l7107 0CF4  
                                    l7035 06DD                                      l7027 06C8  
                                    l7019 06B2                                      l7211 03C5  
                                    l7203 0FB0                                      l7131 039E  
                                    l7123 0341                                      l7141 0CA2  
                                    l7109 0CF7                                      l7117 09E3  
                                    l6501 0553                                      l7029 06CD  
                                    l7037 06E0                                      l7221 03E3  
                                    l7213 03CD                                      l7205 03BA  
                                    l7045 0D09                                      l7133 03AA  
                                    l7125 0383                                      l7143 0CAA  
                                    l7039 06E4                                      l7231 03F9  
                                    l7223 03E9                                      l7215 03D3  
                                    l7207 03BD                                      l7151 0F33  
                                    l7047 0D11                                      l7135 03B6  
                                    l7127 0386                                      l7119 0322  
                                    l7137 0C99                                      l6513 077B  
                                    l6505 0748                                      l6601 0AC1  
                                    l7241 0423                                      l7225 03ED  
                                    l7217 03D6                                      l7209 03C1  
                                    l7161 0F58                                      l7153 0F39  
                                    l7049 0D16                                      l7129 0392  
                                    l7401 00AA                                      l7139 0C9E  
                                    l7147 0CB3                                      l6515 0793  
                                    l6507 0757                                      l6531 0717  
                                    l6603 0AAF                                      l6611 0ACC  
                                    l7251 0433                                      l7243 0426  
                                    l7227 03F1                                      l7235 03FE  
                                    l7219 03DB                                      l7091 0AEC  
                                    l7155 0F3E                                      l7163 0F63  
                                    l7171 0E9D                                      l7411 00B4  
                                    l7403 00AB                                      l6701 0624  
                                    l6509 0774                                      l6533 0734  
                                    l6525 06FD                                      l6621 05B4  
                                    l6541 0448                                      l6605 0AB1  
                                    l6613 0ACF                                      l7253 0439  
                                    l7245 0429                                      l7237 0416  
                                    l7229 03F5                                      l7093 0AEE  
                                    l7157 0F4B                                      l7149 0F33  
                                    l7181 0EC1                                      l7173 0E9F  
                                    l7261 0E1A                                      l7501 01D4  
                                    l7421 00BD                                      l7413 00B7  
                                    l7405 00AD                                      l6463 0C80  
                                    l6711 063F                                      l6703 0629  
                                    l6471 0D6F                                      l6535 073E  
                                    l6631 05C8                                      l6623 05B8  
                                    l6551 045C                                      l6543 044D  
                                    l6607 0AC4                                      l6615 0AD1  
                                    l7247 042A                                      l7239 041E  
                                    l7087 0AE6                                      l7183 0F72  
                                    l7167 0F65                                      l7159 0F51  
                                    l7175 0EAE                                      l7271 0E32  
                                    l7263 0E1C                                      l7511 01E4  
                                    l7503 01D8                                      l7431 00CC  
                                    l7423 00C0                                      l7415 00B9  
                                    l7407 00AF                                      l6713 0644  
                                    l6705 062D                                      l6481 04FF  
                                    l6473 0D74                                      l6465 0D5F  
                                    l6529 0708                                      l6641 05E4  
                                    l6633 05CC                                      l6625 05BE  
                                    l6561 0470                                      l6553 045E  
                                    l6545 044F                                      l6537 0442  
                                    l6801 026B                                      l6609 0AC6  
                                    l6617 0AD7                                      l7249 042F  
                                    l7089 0AEB                                      l7193 0F80  
                                    l7185 0F7A                                      l7177 0EB6  
                                    l7273 0E3E                                      l7265 0E20  
                                    l7521 0204                                      l7513 01ED  
                                    l7505 01DD                                      l7441 00D9  
                                    l7433 00CE                                      l7425 00C7  
                                    l7417 00BA                                      l7409 00B2  
                                    l6723 0A79                                      l7099 0CE8  
                                    l6707 0631                                      l6715 064A  
                                    l6483 050E                                      l6491 0534  
                                    l6475 0D7A                                      l6467 0D62  
                                    l6651 05F9                                      l6643 05E5  
                                    l6635 05D1                                      l6627 05C0  
                                    l6619 05B3                                      l6571 048D  
                                    l6563 0474                                      l6555 0464  
                                    l6547 0453                                      l6539 0444  
                                    l6803 027D                                      l6811 02B0  
                                    l6731 0D87                                      l7195 0F89  
                                    l7187 0F7F                                      l7179 0EB8  
                                    l7267 0E24                                      l7259 0E18  
                                    l7515 01F6                                      l7507 01DF  
                                    l7451 00ED                                      l7443 00E1  
                                    l7435 00CF                                      l7427 00C9  
                                    l7419 00BC                                      l6901 0FE4  
                                    l6725 0A8B                                      l6717 064F  
                                    l6709 063B                                      l6493 054C  
                                    l6485 052B                                      l6469 0D66  
                                    l6637 05D9                                      l6645 05EA  
                                    l6629 05C6                                      l6653 05FE  
                                    l6565 0483                                      l6557 0467  
                                    l6573 0493                                      l6549 0458  
                                    l6661 0CE4                                      l6821 02EE  
                                    l6813 02CA                                      l6805 028D  
                                    l6741 0D92                                      l6733 0D8B  
                                    l7197 0F8D                                      l6581 0B45  
                                    l7269 0E26                                      l7517 01FC  
                                    l7509 01E2                                      l7461 010F  
                                    l7453 00F8                                      l7445 00E3  
                                    l7437 00D1                                      l7429 00CB  
                                    l6911 0FEE                                      l6903 0FE6  
                                    l6727 0A94                                      l6751 04A4  
                                    l6719 0654                                      l6671 0C0C  
                                    l6487 0530                                      l6479 04FD  
                                    l6655 0603                                      l6647 05EE  
                                    l6639 05DE                                      l6575 0498  
                                    l6567 0487                                      l6559 046C  
                                    l6815 02CD                                      l6831 030D  
                                    l6743 0D94                                      l6735 0D8F  
                                    l7199 0FA4                                      l6591 0B50  
                                    l6583 0B49                                      l7519 01FE  
                                    l7471 017D                                      l7463 0127  
                                    l7455 0106                                      l7447 00E5  
                                    l7439 00D7                                      l7391 00A1  
                                    l6921 0FFA                                      l6913 0FF0  
                                    l6905 0FE8                                      l6761 04D9  
                                    l6753 04AD                                      l6681 0C1E  
                                    l6673 0C0D                                      l6649 05F6  
                                    l6577 049D                                      l6569 0488  
                                    l6825 02F7                                      l6817 02D5  
                                    l6809 029D                                      l6745 0D96  
                                    l6737 0D90                                      l6729 0D7F  
                                    l6593 0B51                                      l6585 0B4D  
                                    l7481 019C                                      l7473 0180  
                                    l7465 0145                                      l7457 010D  
                                    l7449 00E7                                      l7385 007E  
                                    l6931 0A89                                      l6923 0FFC  
                                    l6915 0FF3                                      l6907 0FEA  
                                    l6771 04F1                                      l6763 04DB  
                                    l6755 04B8                                      l6691 0610  
                                    l6675 0C11                                      l6499 054E  
                                    l6667 0CE6                                      l6659 0CCD  
                                    l6827 0304                                      l7811 02FC  
                                    l6819 02E5                                      l6747 0D9C  
                                    l6739 0D91                                      l6587 0B4E  
                                    l7491 01BD                                      l7483 01A2  
                                    l7475 018A                                      l7467 016E  
                                    l7459 010E                                      l7395 00A6  
                                    l7387 00A1                                      l6941 0C08  
                                    l6925 0A82                                      l6917 0FF5  
                                    l6909 0FEC                                      l6933 0B0C  
                                    l6749 0A9D                                      l6773 04FA  
                                    l6765 04E4                                      l6757 04C0  
                                    l6693 0612                                      l6685 0605  
                                    l6677 0C15                                      l7813 0313  
                                    l6597 0AB9                                      l6781 0DF9  
                                    l7805 0403                                      l6589 0B4F  
                                    l6853 07E5                                      l6845 07DF  
                                    l7493 01BF                                      l7485 01A8  
                                    l7477 0190                                      l7469 017A  
                                    l7397 00A7                                      l7389 00A1  
                                    l6863 0B19                                      l6927 0A85  
                                    l6919 0FF8                                      l6871 0FB7  
                                    l6935 0B13                                      l6951 0C5A  
                                    l6943 0C4F                                      l6767 04E6  
                                    l6759 04D0                                      l6695 0616  
                                    l6687 0607                                      l6679 0C17  
                                    l6599 0ABB                                      l7807 0E09  
                                    l6783 0DFD                                      l6775 0DF0  
                                    l6855 07F0                                      l6847 07E1  
                                    l7495 01C2                                      l7487 01AD  
                                    l7479 0192                                      l7399 00A8  
                                    l6937 0BF4                                      l6865 0B1C  
                                    l6929 0A86                                      l6881 0FC5  
                                    l6873 0FBD                                      l6961 0D25  
                                    l6953 0C5B                                      l6945 0C54  
                                    l6769 04EF                                      l6697 061B  
                                    l6689 060B                                      l7809 02A2  
                                    l6777 0DF1                                      l6857 07F4  
                                    l7489 01B8                                      l7497 01C8  
                                    l6939 0C06                                      l6867 0B24  
                                    l6891 0FD0                                      l6883 0FC7  
                                    l6875 0FBF                                      l6971 0D33  
                                    l6963 0D27                                      l6955 0C63  
                                    l6947 0C55                                      l6699 0621  
                                    l6795 020A                                      l6779 0DF5  
                                    l6787 0E01                                      l6859 07FD  
                                    l7499 01CE                                      l6893 0FDC  
                                    l6885 0FCA                                      l6877 0FC1  
                                    l6869 0A5F                                      l6981 0BD1  
                                    l6973 0D3B                                      l6965 0D29  
                                    l6957 0D20                                      l6949 0C58  
                                    l6797 020D                                      l6991 0A5D  
                                    l6895 0FDE                                      l6887 0FCC  
                                    l6879 0FC3                                      l6983 0BD2  
                                    l6975 0BC9                                      l6967 0D30  
                                    l6959 0D23                                      l6799 025B  
                                    l6993 0A38                                      l6897 0FE0  
                                    l6889 0FCE                                      l6985 0BDA  
                                    l6977 0BCE                                      l6969 0D32  
                                    l6987 0A59                                      l6899 0FE2  
                                    l6979 0BCF                                      l6997 0A70  
                                    l6989 0A5C                                      _LATA 0016  
                                    _LATB 0017                           __end_of_INT_ISR 0A25  
                                    _LATC 0018                                      u4000 06D5  
                                    _LATD 0019                                      u4001 06D4  
                                    _LATE 001A                                      u4010 06FA  
                                    u4011 06F9                                      u4100 0F51  
                                    u4020 0D1F                                      u4101 0F50  
                                    u4021 0D1E                                      u4110 0F7A  
                                    u4015 06F6                                      u4111 0F79  
                                    u4200 0439                                      u4040 0AEB  
                                    u4120 0F89                   __size_of_selectSubfield 004E  
                                    u4201 0438                                      u4041 0AEA  
                                    u4121 0F88                                      u4130 0FB6  
                                    u4050 032F                                      _T2PR 028D  
                                    u4131 0FB5                                      u4051 032E  
                                    u4140 03CD                                      u4060 0341  
                                    u4141 03CC                                      u4061 0340  
                                    u4070 0CAA                                      u4150 03D3  
                                    u4071 0CA9                                      u4151 03D2  
                                    u3600 0757                                      u4160 03DB  
                                    u4080 0F39                                      u4400 0127  
                                    u3601 0756                                      u4161 03DA  
                                    u4081 0F38                                      u4401 0126  
                                    u3610 0774                                      u3530 0D66  
                                    u4170 03E3                                      u4090 0F3E  
                                    u4410 0145                                      u3611 0773  
                                    u3531 0D65                                      u4171 03E2  
                                    u4091 0F3D                                      u4411 0144  
                                    u3620 0793                                      u3700 0474  
                                    u4180 0416                                      u4500 0204  
                                    u4420 018A                                      u3525 0C91  
                                    u3621 0792                                      u3701 0473  
                                    u4181 0415                                      u4501 0203  
                                    u4421 0189                                      u3630 0707  
                                    u4190 041E                                      u4430 0190  
                                    u3615 0770                                      u3631 0706  
                                    u4191 041D                                      u4431 018F  
                                    u4415 0141                                      u3560 0D7A  
                                    u3800 05EE                                      u3720 0483  
                                    u4440 01A2                                      u3625 078F  
                                    u3561 0D79                                      u3545 0D6B  
                                    u3801 05ED                                      u3721 0482  
                                    u4441 01A1                                      u3570 050E  
                                    u3810 05F6                                      u4450 01A8  
                                    u3571 050D                                      u3555 0D70  
                                    u3811 05F5                                      u3715 0475  
                                    u4451 01A7                                      u3900 0631  
                                    u3580 052B                                      u3820 0603  
                                    u3740 0493                                      u3660 0448  
                                    u4460 01BD                                      u4380 00E1  
                                    _PMD0 0796                                      u3901 0630  
                                    u3581 052A                                      u3645 070B  
                                    u3821 0602                                      u3741 0492  
                                    u3725 047F                                      u3661 0447  
                                    u4461 01BC                                      u4381 00E0  
                                    _PMD1 0797                                      u3910 063B  
                                    u3590 054C                                      u3750 0498  
                                    u3670 0453                                      u3830 0CE4  
                                    u4470 01CE                                      u4390 00ED  
                                    _PMD2 0798                                      u3911 063A  
                                    u3591 054B                                      u3655 071A  
                                    u3751 0497                                      u3735 0489  
                                    u3671 0452                                      u3831 0CE3  
                                    u4607 01E8                                      u4471 01CD  
                                    u4391 00EC                                      _PMD3 0799  
                                    u3840 0C11                                      u3760 05C6  
                                    u3680 0464                                      u4480 01DD  
                                    _PMD4 079A                                      u3841 0C10  
                                    u3585 0527                                      u3761 05C5  
                                    u3681 0463                                      u4617 0430  
                                    u4481 01DC                                      _PMD5 079B  
                                    u3930 064A                                      u3850 0C1E  
                                    u3770 05D1                                      u4490 01F4  
                                    u4707 0D4D                                      u3931 0649  
                                    u3915 0637                                      u3851 0C1D  
                                    u3595 0548                                      u3771 05D0  
                                    u4627 06E1                                      u4491 01F3  
                                    u3940 064F                                      u3860 060B  
                                    u3780 05D9                                      u4717 0D57  
                                    u4637 04A8                                      u3941 064E  
                                    u3925 0640                                      u3861 060A  
                                    u3781 05D8                                      u3870 0616  
                                    u3790 05E4                                      u3950 0D9B  
                                    u4727 0C9F                                      u4647 04B3  
                                    u3871 0615                                      u3791 05E3  
                                    u3695 0468                                      u3951 0D9A  
                                    u3880 0621                                      u3960 07FD  
                                    i1l73 0B0B                                      u4657 04C4  
                                    u3881 0620                                      u3961 07FC  
                                    u3970 06B6                                      u4667 04D4  
                                    u3971 06B5                                      u3980 06BE  
                                    u4677 04DF                                      u3981 06BD  
                                    u3990 06CD                                      u4687 04EA  
                                    u3895 0625                                      u3991 06CC  
                                    u4697 04F5                      ?_do_I2C_SEND_RESTART 0070  
                                    _TMR2 028C                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                 ??_wr2RegCompleteHandler 007A                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000         __size_of_do_I2C_SEND_RESTART_READ 0005  
                                    _alaf 0053                                      _clkh 005E  
               ?_do_I2C_SEND_RESTART_READ 0070                                      _clkm 005D  
                                    _main 007E                                      _tala 0067  
               __size_of_do_I2C_SEND_STOP 0005                    __size_of_do_I2C_DO_ACK 0005  
                                    _nreg 0069                           _TMR0_StartTimer 09E3  
                                    _temp 0054                                      _pmon 0068  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
     __end_of_INT_DefaultInterruptHandler 09C4               _INT_DefaultInterruptHandler 09C3  
                   ?_do_I2C_SEND_ADR_READ 0070           ??_i2c1_driver_clearBusCollision 0070  
                                    start 005B                          __end_of_ADC_read 0CB3  
         __end_of_INT_SetInterruptHandler 0A82                             _i2c_setBuffer 0B54  
              ??_TMR1_SetInterruptHandler 0025                             __CFG_CSWEN$ON 0000  
                       ___bmul@multiplier 0026                             __CFG_MCLRE$ON 0000  
                         __end_of_i2c_ISR 0E9B          __size_of_rdBlkRegCompleteHandler 0018  
                ??_do_I2C_DO_NACK_RESTART 0070                 config_routine@select_mode 0044  
               __size_of_DATAEE_WriteByte 0024                   __end_of_TMR0_Initialize 0BDE  
                            _do_I2C_RESET 0A47            ??_TMR0_DefaultInterruptHandler 0070  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 0A8B  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                  __end_of_i2c1_driver_open 0AF2  
                                   ?_main 0070                                     _ADCLK 0098  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                           __end_of___awdiv 04A2  
                __end_of_i2c1_driver_stop 09D4                                     _ADPRE 009C  
                           __CFG_WDTE$OFF 0000                           __end_of___awmod 0659  
                                   _ADRPT 010D                                     _T1CLK 0211  
                         ___awdiv@divisor 0023                                     _T1CON 020E  
                                   _T2CON 028E                                     _T2HLT 028F  
              __end_of_i2c1_driver_TXData 09F7                            __CFG_DEBUG$OFF 0000  
                                   i1l103 0B63                                     i1l200 0EFC  
                                   i1l210 0E9A                                     i1l131 0A00  
                                   i1l140 0A0F                                     _T2TMR 028C  
                                   i1l125 0A4E                                     i1l213 09F1  
                                   i1l134 0A05                                     i1l303 0C4E  
                                   i1l143 0A6F                                     i1l224 0DED  
                                   i1l216 09CA                                     i1l128 09FB  
                                   i1l152 0A14                                     i1l137 0A0A  
                                   i1l146 0A56                                     _T2RST 0291  
                                   i1l219 0003                                     i1l243 0BA6  
                                   i1l155 0A19                                     i1l164 0E6D  
                                   i1l172 06AC                                     i1l149 0A37  
                                   i1l334 0A24                                     i1l158 0A1E  
                                   i1l344 09C3                                     i1l520 09D0  
                                   i1l264 0BB7                                     i1l169 0690  
                                   i1l185 07B2                                     i1l338 0AFE  
                                   i1l514 07FF                                     i1l186 07DE  
                                   i1l523 09D3                                     i1l291 0B95  
                                   i1l532 09D9                                     i1l380 001F  
                                   i1l541 09F6                                     i1l550 09ED  
                                   i1l526 0A46                                     i1l279 0BC8  
                                   i1l383 0032                                     i1l392 0059  
                                   i1l529 09D6                                     i1l385 0041  
                                   i1l386 0059                                     i1l378 0013  
                                   i1l547 09E9                                     i1l491 09DC  
                                   i1l387 004D                                     i1l488 09DF  
                                   i1l584 09E2                                     i1l931 0B84  
                                   i1l950 09C5                                     i1l880 0B35  
                                   i1l944 0C36                                     i1l867 09CD  
                                   i1l964 0BF3                                     i1l886 09C4  
                         ___awdiv@counter 0028                                     _OSCEN 0891  
                         __end_of_all_LED 04FD                                     _TMR0H 001D  
                                   _TMR1H 020D                                     _TMR0L 001C  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
       __size_of_TMR0_SetInterruptHandler 0009                           _PWM6_Initialize 0B0C  
               ?_TMR0_SetInterruptHandler 0023                   ??_ADCC_IsConversionDone 0023  
                        __end_of_TMR0_ISR 0B36                          __end_of_TMR1_ISR 0C37  
                        __end_of_TMR2_ISR 0B45                           __end_of_sw1_EXT 0DC8  
                         __end_of_cksum_w 0B74                           _DATAEE_ReadByte 0B45  
                                   _alarm 0055                                     _clkms 007D  
              __end_of_i2c1_driver_isNACK 0A47                                     _cksum 07DF  
                   ?_ADCC_StartConversion 0070                           representLed@aux 0031  
                         representLed@val 0030                ?_do_I2C_SEND_RESTART_WRITE 0070  
                                   _value 00C9                         ?_checkDebounceSW1 0070  
                       ?_checkDebounceSW2 0070                     ??_do_I2C_SEND_RESTART 0070  
                 __end_of_TMR1_Initialize 0D3F                                     pclath 000A  
                 __size_of_mssp1_clearIRQ 0003                        ??_checkDebounceSW1 0023  
                      ??_checkDebounceSW2 0023                    ?_do_I2C_SEND_ADR_WRITE 0070  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 0B74                            ?_i2c_setBuffer 0070  
                            ?_setCallBack 0070                   ?_increment_subfield_clk 0032  
                    _save_recovery_params 0E18                         ??_getSubfieldInfo 0038  
                           _fsmStateTable 1000                           __initialization 005D  
                              _i2c_status 00A0                              __end_of_main 020A  
                       ??_limitHoursUnits 002C                   __end_of_TMR2_Initialize 0C67  
             ?_INTERRUPT_InterruptManager 0070                              ?_recoverData 0070  
                           setCallBack@cb 0070                             _do_I2C_DO_ACK 0A10  
                _TMR2_SetInterruptHandler 0A9D                                    ??_main 0046  
                       ?_i2c_restartWrite 0079             __size_of_i2c1_driver_sendNACK 0004  
              increment_subfield_clk@exit 0035                                 ??_LED_bin 0025  
                      ??_i2c_restartWrite 007A                 __size_of_handler_clock_ms 000C  
           __size_of_i2c1_driver_resetBus 0001                                 ??_INT_ISR 0078  
                 ?_do_I2C_DO_ADDRESS_NACK 0070                            _convertedValue 00BF  
                                  _ADACCH 0091                                    _ADACCL 0090  
                 __end_of_TMR0_StartTimer 09E6               __size_ofi1_checkDebounceSW1 005A  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  ?_cksum 0070                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                          ___awdiv@dividend 0025  
                                  _ADUTHL 0110                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                      __CFG_RSTOSC$HFINT1 0000                                    _T0CON0 001E  
                                  _T0CON1 001F                                    _T1GATE 0210  
                                  _T1GCON 020F                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                   TMR1_WriteTimer@timerVal 0070  
                                  _RC4PPS 0F24                                    i1l1092 09C6  
                                  i1l1086 0B44                                    i1l1433 0AE5  
                                  _ODCONA 0F3A                                    i1l1282 0C7A  
                                  _ODCONB 0F45                                    i1l1283 0C7F  
                                  _ODCONC 0F50                                    _ODCOND 0F5B  
                                  i1l1429 0F30                                    _ODCONE 0F66  
                                  i1l1438 05B0                                    i1l1279 0DC7  
                                  i1l5005 09CB                                    i1l5031 0DA3  
                                  i1l5041 0DBE                                    i1l5033 0DAB  
                                  i1l5201 0A6E                                    i1l5043 0DC3  
                                  i1l5035 0DB1                                    i1l5037 0DB2  
                                  i1l5205 0A4F                                    i1l5213 0A31  
                                  i1l5221 0A10                                    i1l5301 07B8  
                                  i1l6021 001B                                    i1l6013 0006  
                                  i1l5039 0DB8                                    i1l5207 0A51  
                                  i1l5215 0A33                                    i1l5223 0A13  
                                  i1l5231 0E49                                    i1l6031 003A  
                                  i1l6023 0023                                    i1l6015 000B  
                                  u203_20 0DCF                                    i1l4601 0DCF  
                                  u203_21 0DCE                                    i1l5321 0ED1  
                                  i1l5209 0A55                                    i1l5217 0A36  
                                  i1l5241 0E51                                    i1l6033 0045  
                                  i1l6025 0027                                    i1l6017 000F  
                                  i1l4603 0DE0                                    i1l5323 0ED4  
                                  i1l5315 0ECA                                    i1l5235 0E4D  
                                  i1l5227 0E42                                    i1l5307 07BC  
                                  i1l6035 0049                                    i1l6027 002B  
                                  i1l6019 0017                                    i1l5501 0C6E  
                                  i1l5317 0ECD                                    i1l5333 0EDA  
                                  i1l5181 0A4A                                    i1l5229 0E44  
                                  i1l5261 0669                                    i1l5253 0661  
                                  i1l5157 09DD                                    i1l5341 09E0  
                                  i1l6037 0051                                    i1l6029 0036  
                                  i1l5343 0AF2                                    i1l5503 0C75  
                                  i1l4711 0B5A                                    i1l5327 0ED6  
                                  i1l5183 0A4C                                    i1l5191 09F9  
                                  i1l5271 069E                                    i1l6039 0055  
                                  i1l5345 0AF9                                    i1l5505 0C7D  
                                  i1l4713 0B62                                    i1l5185 0A4D  
                                  i1l5193 09FA                                    i1l5273 06A9  
                                  i1l5257 0665                                    i1l5249 0659  
                                  i1l4715 09CE                                    i1l4707 0AFF  
                                  i1l5179 0A47                                    i1l5275 06AB  
                                  i1l5267 066D                                    i1l5291 07B0  
                                  i1l5283 0795                                    i1l4717 09D1  
                                  i1l4709 0B55                                    i1l5189 09F7  
                                  i1l5197 0A67                                    i1l5269 0692  
                                  i1l5285 079F                                    i1l5551 0F0E  
                                  i1l4719 09EA                                    i1l4903 09FC  
                                  i1l4911 0A04                                    i1l5199 0A69  
                                  i1l5287 07A3                                    i1l5561 0F25  
                                  i1l5553 0F12                                    i1l4905 09FF  
                                  i1l4921 0A0B                                    i1l5297 07B4  
                                  i1l5289 07AD                                    i1l5491 0B7C  
                                  i1l5563 0F2B                                    i1l5555 0F16  
                                  i1l5547 0EFD                                    i1l5571 0AE4  
                                  i1l4931 09E6                                    i1l4915 0A06  
                                  i1l4923 0A0E                                    i1l5493 0B7E  
                                  i1l5485 0B74                                    i1l5565 0F2F  
                                  i1l5557 0F1C                                    i1l5549 0F03  
                                  i1l4909 0A01                                    i1l4917 0A09  
                                  i1l4933 0A15                                    i1l4941 0A1D  
                                  i1l5661 0E83                                    i1l5653 0E6E  
                                  i1l4863 0BDE                                    i1l4871 0585  
                                  i1l5671 0B29                                    i1l5487 0B79  
                                  i1l5495 0B80                                    i1l5559 0F24  
                                  i1l5567 0ADA                                    i1l4599 0DC9  
                                  i1l4927 09F3                                    i1l4935 0A18  
                                  i1l5655 0E71                                    i1l5663 09EE  
                                  i1l4873 058A                                    i1l4865 0557  
                                  i1l5665 0A1F                                    i1l5673 0B30  
                                  i1l5497 0B82                                    i1l5489 0B7A  
                                  i1l5681 0C31                                    i1l5569 0ADE  
                                  i1l4929 09D4                                    i1l4945 0A3F  
                                  i1l4953 09DA                                    i1l5657 0E76  
                                  i1l4867 0559                                    i1l5667 0A21  
                                  i1l5499 0C67                                    i1l5675 0C20  
                                  i1l5683 0B36                                    i1l4891 09C7  
                                  i1l4955 09C9                                    i1l4963 0B96  
                                  i1l4971 0BA7                                    i1l4939 0A1A  
                                  i1l5659 0E7D                                    i1l4885 05A8  
                                  i1l4869 0568                                    i1l4877 058E  
                                  i1l5669 0B27                                    i1l5677 0C22  
                                  i1l5685 0B38                                    i1l4965 0B9E  
                                  i1l4973 0BAF                                    i1l4981 0BC0  
                                  i1l4949 09D7                                    i1l4887 05AD  
                                  i1l4879 05A6                                    i1l5679 0C2A  
                                  i1l5687 0B3F                                    i1l4991 0B94  
                                  i1l4959 0002                                    i1l4967 0BA5  
                                  i1l4975 0BB6                                    i1l4983 0BC7  
                                  u223_20 0B5A                                    u223_21 0B59  
                                  i1l4987 0B85                                    i1l4979 0BB8  
                                  i1l4995 0C37                                    i1l4989 0B8D  
                                  i1l4997 0C4D                                    i1l7821 0EEE  
                                  i1l7815 07D0                                    u320_20 001B  
                                  i1l7817 0682                                    u320_21 001A  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  i1l7819 0E65                                    _INLVLC 0F52  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  u321_20 0023                                    u321_21 0022  
                                  u250_20 0DB1                                    u322_20 0027  
                                  u250_21 0DB0                                    u322_21 0026  
                                  u251_20 0DC3                                    u323_20 002B  
                                  u251_21 0DC2                                    u323_21 002A  
                                  u243_25 0BED                                    u244_20 0568  
                                  u260_20 0B79                                    u324_20 0036  
                                  u244_21 0567                                    u260_21 0B78  
                                  u324_21 0035                                    u245_20 0585  
                                  u261_20 0C6E                                    u325_20 003A  
                                  u317_20 000B                                    u245_21 0584  
                                  u261_21 0C6D                                    u325_21 0039  
                                  u317_21 000A                                    u245_25 0581  
                                  u246_20 05A6                                    u270_20 0F1C  
                                  u326_20 0045                                    u318_20 000F  
                                  u246_21 05A5                                    u270_21 0F1B  
                                  u326_21 0044                                    u318_21 000E  
                                  u246_25 05A2                                    u271_20 0F2B  
                                  u327_20 0049                                    u319_20 0017  
                                  u271_21 0F2A                                    u327_21 0048  
                                  u319_21 0016                                    u280_20 0C31  
                                  u272_20 0AE4                                    u256_20 0660  
                                  u328_20 0051                                    u280_21 0C30  
                                  u272_21 0AE3                                    u256_21 065F  
                                  u328_21 0050                                    _INTPPS 0E90  
                                  u249_20 0DAB                                    u281_20 0B3F  
                                  u257_20 06A9                                    u329_20 0055  
                                  u249_21 0DAA                                    u281_21 0B3E  
                                  u257_21 06A8                                    u329_21 0054  
                                  u258_20 07AD                                    u258_21 07AC  
                                  u259_20 0AF9                                    u267_20 0F03  
                                  u259_21 0AF8                                    u267_21 0F02  
                                  u268_20 0F0C                                    u268_21 0F09  
                                  u277_20 0E76                                    u277_21 0E75  
                                  u269_24 0F0E                                    u278_20 0E7D  
                                  u278_21 0E7C                                    u279_20 0B30  
                                  u279_21 0B2F                                    _OSCFRQ 0893  
                                  _ISR_3s 0C67                    ??_do_I2C_SEND_ADR_READ 0070  
                rdBlkRegCompleteHandler@p 0079            __end_of_increment_subfield_clk 0605  
                               ??_i2c_ISR 0020                ??_ADCC_GetConversionResult 0025  
                   ?_save_recovery_params 0070                              ?_ring_buffer 0023  
                          __CFG_PWRTE$OFF 0000              __end_ofi1_PWM6_LoadDutyValue 0BF4  
                   _i2c1_driver_getRXData 09D7                          __end_of_mod1_LED 0AC4  
                        __end_of_mod2_LED 0AB9                          __end_of_mod3_LED 0ACF  
                        __end_of_mod4_LED 0ADA      __end_of_TMR1_DefaultInterruptHandler 09C6  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 09C5  
                            _CCPTMRS1bits 021F                                    ___bmul 0C0A  
             __end_of_do_I2C_DO_NACK_STOP 0A1A       __end_of_i2c_setDataCompleteCallback 0B0C  
             _i2c_setDataCompleteCallback 0AFF                                    ___wmul 0D5F  
                               ??___awdiv 0027     __end_of_i2c1_driver_clearBusCollision 09E3  
  __size_of_i2c1_driver_clearBusCollision 0003             _i2c1_driver_clearBusCollision 09E0  
                          __CFG_STVREN$ON 0000                                 ??___awmod 0027  
         __size_of_do_I2C_DO_NACK_RESTART 0005                                    _last1m 0058  
                                  _last5s 0059                                 ??_all_LED 002D  
                        __end_of_mode_LED 0E18                          ?_TMR0_Initialize 0070  
                 __end_of_PWM6_Initialize 0B19                          ___awdiv@quotient 002A  
                   ring_buffer@_ring_byte 0029                            ?_do_I2C_DO_ACK 0070  
                         ___awmod@divisor 0023                           ___awmod@counter 0028  
                                  cksum@i 0027                             ?_INT_CallBack 0070  
                 __end_of_DATAEE_ReadByte 0B54                                 ??_sw1_EXT 0077  
                               ??_cksum_w 002D              increment_subfield_clk@_value 0037  
                         _ADCC_Initialize 0BF4               __end_of_i2c1_driver_sendACK 09EA  
                          _PMD_Initialize 0A5F            __end_of_do_I2C_DO_ADDRESS_NACK 0E6E  
             __end_of_i2c1_driver_restart 09D1                              ?_returnReset 0079  
                               ?_ADC_read 0025                    ??_ADCC_StartConversion 0023  
             __end_of_i2c1_driver_startRX 09D7          __size_of_INT_SetInterruptHandler 0009  
TMR2_SetInterruptHandler@InterruptHandler 0023  TMR1_SetInterruptHandler@InterruptHandler 0023  
TMR0_SetInterruptHandler@InterruptHandler 0023   INT_SetInterruptHandler@InterruptHandler 0023  
                 __end_of_TMR1_WriteTimer 0B85                            _selectSubfield 06AD  
                        ??_config_routine 0043                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 0CE8                   __end_of__initialization 007A  
                         ??_i2c_setBuffer 0072                          _do_I2C_SEND_STOP 0A0B  
                      __size_of_do_I2C_RX 004A                        __size_of_do_I2C_TX 0054  
                      ?_SYSTEM_Initialize 0070                  __size_of_mode_select_LED 0020  
                __size_of_do_I2C_TX_EMPTY 0033                  save_recovery_params@aux1 0030  
                     ___bmul@multiplicand 0023                   _rdBlkRegCompleteHandler 0C37  
                           _recTempThresh 0000                            __pcstackCOMMON 0070  
                            __pidataBANK0 0AA6                       ??_SYSTEM_Initialize 0025  
                               ?_TMR0_ISR 0070                                 ?_TMR1_ISR 0070  
                               ?_TMR2_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                           __end_of_cksum 07FF                          _DATAEE_WriteByte 0D7F  
                      ring_buffer@clock_h 0023                        ring_buffer@clock_m 0024  
                      ring_buffer@clock_s 0025                          ?_TMR2_Initialize 0070  
                   getSubfieldInfo@h_tens 003B                              LED_bin@value 0023  
                          ??_INT_CallBack 0078                    __end_of_PMD_Initialize 0A67  
                   getSubfieldInfo@m_tens 003D               __size_of_EXT_INT_Initialize 000E  
                              ??_ADC_read 0027                    __end_of_selectSubfield 06FB  
             ADCC_StartConversion@channel 0023                            setCallBack@idx 0074  
                                 ??_cksum 0025                          ?_TMR0_StartTimer 0070  
                  _do_I2C_DO_NACK_RESTART 0A1A                 __end_of_SYSTEM_Initialize 0D04  
                          _mssp1_clearIRQ 09DD                                __pbssBANK0 004B  
                              __pbssBANK1 00A0            __size_of_rd2RegCompleteHandler 0011  
                                 ?_ISR_3s 0070             __end_of_rd2RegCompleteHandler 0BC9  
                      read_ring@nreg_init 0028               increment_subfield_clk@limit 0036  
                  ??_save_recovery_params 002E            __size_of_wr2RegCompleteHandler 0011  
           __end_of_wr2RegCompleteHandler 0B96                     _rd1RegCompleteHandler 0BA7  
                  ?_i2c1_driver_getRXData 0070                        __size_of_read_ring 003F  
                   _wr1RegCompleteHandler 0B96              __size_of_i2c_busCollisionISR 0004  
                              __pmaintext 007E                             ??_do_I2C_IDLE 0070  
                    __size_of_setCallBack 0026                             ??_do_I2C_RCEN 0070  
                                 ?___bmul 0023          __end_of_TMR0_SetInterruptHandler 0A94  
                 __size_of_TMR0_StopTimer 0003                                   ?___wmul 0023  
                              ??_TMR0_ISR 0075                                ??_TMR1_ISR 0072  
                         __CFG_PPS1WAY$ON 0000                                ??_TMR2_ISR 0071  
                 __end_of_ADCC_Initialize 0C0A                __end_of_PWM6_LoadDutyValue 0C99  
                         ??_do_I2C_DO_ACK 0070                                __pintentry 0004  
                    _limitTempThreshUnits 0000                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                                   _ADPREVH 008F  
                                 _ADPREVL 008E                          ?_PWM6_Initialize 0070  
                     i2c_setBuffer@buffer 0073                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                           ?_PMD_Initialize 0070  
          ?_i2c1_driver_clearBusCollision 0070                          ?_DATAEE_ReadByte 0023  
                       ?_i2c1_driver_open 0070                         __end_of_do_I2C_RX 07DF  
                       __end_of_do_I2C_TX 06AD                         ?_i2c1_driver_stop 0070  
           i1PWM6_LoadDutyValue@dutyValue 0070                      __size_of_recoverData 0098  
                                 _LED_bin 0CB3                          _handler_clock_ms 0ADA  
                      ??_i2c1_driver_open 0023                                   _INT_ISR 0A1F  
                      ??_i2c1_driver_stop 0070                                   _OSCCON1 088D  
                                 _OSCCON3 088F                             ?_mssp1_setIRQ 0070  
                    i1_PWM6_LoadDutyValue 0BDE                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                  selectSubfield@subfield 0041                                   _NVMCON2 081F  
                         ?_selectSubfield 0070                                   _PWM6DCH 038D  
                                 _PWM6DCL 038C                                   _PWM6CON 038E  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                    __end_of_mssp1_clearIRQ 09E0  
                                 _SSP1MSK 018E            __size_of_ADCC_IsConversionDone 0007  
                               ?_mod1_LED 0070                                 ?_mod2_LED 0070  
                               ?_mod3_LED 0070                                 ?_mod4_LED 0070  
           __end_of_ADCC_IsConversionDone 0A3F                   ??_do_I2C_SEND_ADR_WRITE 0071  
                      __size_of_push_ring 0047                           _getSubfieldInfo 020A  
                        ?_TMR1_WriteTimer 0070               ??_do_I2C_SEND_RESTART_WRITE 0070  
                      _i2c1_driver_TXData 09F2                      DATAEE_WriteByte@bAdd 0029  
                      _i2c1_driver_i2cISR 00CB                                 ?_mode_LED 0070  
                         __size_of_ISR_3s 0019                                   _i2c_ISR 0E6E  
                         _limitHoursUnits 0CCD                 ??_rdBlkRegCompleteHandler 007A  
                          ring_buffer@lum 0027                            ring_buffer@tem 0026  
                      _i2c1_driver_isNACK 0A3F                       ?_i2c1_driver_TXData 0070  
              ??_TMR2_SetInterruptHandler 0025                     __end_of_num_subfields 1025  
                    __size_of_ring_buffer 002F                      __CFG_SCANE$available 0000  
               __size_of_checkDebounceSW1 005A                 __size_of_checkDebounceSW2 004D  
                         __size_of___bmul 0016                                   ___awdiv 0442  
                                 ___awmod 0605                             ?_representLed 0070  
                         __size_of___wmul 0020                         ??_mode_select_LED 002D  
                       ??_do_I2C_TX_EMPTY 007A                                   _all_LED 04A2  
                     ?_i2c1_driver_isNACK 0070                                   __ptext1 0E18  
                                 __ptext2 0E9B                                   __ptext3 0322  
                                 __ptext4 0D04                                   __ptext5 0B64  
                                 __ptext6 07DF                                   __ptext7 0F31  
                                 __ptext8 0B45                                   __ptext9 0F70  
                     __end_of_do_I2C_IDLE 09FC                       __end_of_do_I2C_RCEN 0A38  
                                 _sw1_EXT 0DA3            ??_TMR1_DefaultInterruptHandler 0070  
                                 _cksum_w 0B64                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 0A82                                   _last_ms 005B  
                               _T2CONbits 028E               __end_of_do_I2C_SEND_RESTART 0A0B  
                          ??_mssp1_setIRQ 0070                          ___awmod@dividend 0025  
                              _duty_cycle 00BD                               reset_recv@i 002D  
       __size_of_TMR1_SetInterruptHandler 0009                     ?i1_PWM6_LoadDutyValue 0070  
                    ??_i2c1_driver_TXData 0070                         __end_of_read_ring 0F70  
                ??_PIN_MANAGER_Initialize 0023                 ?_TMR1_SetInterruptHandler 0023  
                               _T2HLTbits 028F                                   _nreg_pt 005F  
                 _INT_SetInterruptHandler 0A79                                   _lum_bin 0051  
                         ?_mssp1_clearIRQ 0070                                ??_mod1_LED 002D  
                              ??_mod2_LED 002D                                ??_mod3_LED 002D  
                              ??_mod4_LED 002D                                   main@t1m 00E1  
                                 main@t5s 00E0                  _do_I2C_SEND_RESTART_READ 09FC  
              __size_of_SYSTEM_Initialize 001C                                   clrloop0 0A26  
                              _hours_tens 00C7                      __size_of_returnReset 0002  
                    end_of_initialization 007A                                 _T2RSTbits 0291  
                    ??_i2c1_driver_isNACK 0070                 __size_of_i2c_restartWrite 0002  
                                 init_ram 0A2B                                ??_mode_LED 002D  
            __end_of_i2c1_driver_sendNACK 09EE                    ?_rd1RegCompleteHandler 0079  
                                 initloop 0A2C                      __end_of_INT_CallBack 0AFF  
                  ?_wr1RegCompleteHandler 0079              __end_of_i2c1_driver_resetBus 0800  
                              _reset_recv 0D04                                _lum_thresh 0065  
                           push_ring@nreg 002D                          mode_LED@subfield 002F  
                          ??_representLed 002D                 _do_I2C_SEND_RESTART_WRITE 0A01  
                        ?_ADCC_Initialize 0070                         __end_of_push_ring 0FB7  
                   __CFG_WDTCPS$WDTCPS_14 0000                                _returnStop 09C9  
                _TMR0_SetInterruptHandler 0A8B                                 _PORTBbits 000D  
                               _PORTCbits 000E           __end_of_rdBlkRegCompleteHandler 0C4F  
                __end_of_do_I2C_SEND_STOP 0A10                      __CFG_WDTCCS$HFINTOSC 0000  
                 __end_of_getSubfieldInfo 0322                __end_ofi1_checkDebounceSW1 05B1  
          increment_subfield_clk@init_val 0032                                 _TRISCbits 0013  
    __size_of_i2c_setDataCompleteCallback 000D                   __end_of_limitHoursUnits 0CE8  
                             returnStop@p 0079                          __CFG_FEXTOSC$OFF 0000  
                       __size_of_ADC_read 001A                  __end_of_DATAEE_WriteByte 0DA3  
            i2c_setDataCompleteCallback@p 0077                            __end_of_ISR_3s 0C80  
           __size_of_do_I2C_SEND_ADR_READ 0009                            _TMR0_StopTimer 09CB  
                             _do_I2C_IDLE 09F7                               _do_I2C_RCEN 0A31  
    __end_of_TMR2_DefaultInterruptHandler 09C7     __size_of_TMR2_DefaultInterruptHandler 0001  
            _TMR2_DefaultInterruptHandler 09C6                            __end_of___bmul 0C20  
                          __end_of___wmul 0D7F                         __size_of_TMR0_ISR 000F  
                       __size_of_TMR1_ISR 0017                         __size_of_TMR2_ISR 000F  
                  ?_OSCILLATOR_Initialize 0070         __size_of_ADCC_GetConversionResult 0009  
               ??_INT_SetInterruptHandler 0025              __size_of_do_I2C_DO_NACK_STOP 0005  
               ?_ADCC_GetConversionResult 0023                    ??i1_PWM6_LoadDutyValue 0072  
                 ?_do_I2C_DO_NACK_RESTART 0070                       start_initialization 005D  
                  getSubfieldInfo@h_units 003C                       _i2c_busCollisionISR 09EE  
                __size_of_TMR0_Initialize 0015           __size_of_PIN_MANAGER_Initialize 0049  
                  getSubfieldInfo@m_units 003E             __size_of_ADCC_StartConversion 0008  
                            setCallBack@p 0072              __size_of_i2c1_driver_sendACK 0004  
                 i2c_setBuffer@bufferSize 0070                   ??_i2c1_driver_getRXData 0070  
                  rd1RegCompleteHandler@p 0079                                  ??_ISR_3s 0074  
            __size_of_i2c1_driver_restart 0003              __size_of_i2c1_driver_startRX 0003  
                     DATAEE_ReadByte@bAdd 0023                     __end_of_i2c_setBuffer 0B64  
            ?_INT_DefaultInterruptHandler 0070                    __end_of_TMR0_StopTimer 09CE  
                __end_of_handler_clock_ms 0AE6                      ?_i2c_busCollisionISR 0070  
                        __CFG_LPBOREN$OFF 0000                               ?_reset_recv 0070  
                    __end_of_mssp1_setIRQ 09DD                  __size_of_TMR1_Initialize 001F  
                                ??___bmul 0024                          ??_PMD_Initialize 0023  
                        _checkDebounceSW1 04FD                          _checkDebounceSW2 0748  
                                ??___wmul 0027                    wr1RegCompleteHandler@p 0079  
                           ?_do_I2C_RESET 0070                               __pdataBANK0 0061  
              __end_of_EXT_INT_Initialize 0B27             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0079                          ??_selectSubfield 003F  
          __end_of_do_I2C_DO_NACK_RESTART 0A1F                                read_ring@i 002D  
                    _i2c1_driver_sendNACK 09EA                         read_ring@absindex 002F  
                            _recLumThresh 0000                          ?_getSubfieldInfo 0070  
                                ?_LED_bin 0023                               __pbssCOMMON 007D  
                               ___latbits 0002                      _i2c1_driver_resetBus 07FF  
                                ?_INT_ISR 0070                   save_recovery_params@aux 002F  
                           __pcstackBANK0 0020                             __pcstackBANK1 00DE  
                      _PWM6_LoadDutyValue 0C80                  __size_of_TMR2_Initialize 0018  
                               _do_I2C_RX 0795                                 _do_I2C_TX 0659  
                ??_increment_subfield_clk 0034                     __size_of_INT_CallBack 000D  
                        ?_limitHoursUnits 0070                      __end_of_representLed 0748  
          __size_of_do_I2C_SEND_ADR_WRITE 0008                         __size_of_mod1_LED 000B  
                       __size_of_mod2_LED 000A             __end_of_do_I2C_SEND_ADR_WRITE 0A57  
                       __size_of_mod3_LED 000B                         __size_of_mod4_LED 000B  
                     ?_PWM6_LoadDutyValue 0029                          _i2c_restartWrite 09C7  
               __size_of_i2c1_driver_open 000C                           _mode_select_LED 0D3F  
               __size_of_i2c1_driver_stop 0003                                  ?_i2c_ISR 0070  
                         _do_I2C_TX_EMPTY 0ECA                     _TMR0_InterruptHandler 00DA  
                           ??_setCallBack 0073                                 __pnvBANK1 00D4  
                   _rd2RegCompleteHandler 0BB8                  __size_of_TMR0_StartTimer 0003  
                         ?_TMR0_StopTimer 0070                     ??_i2c_busCollisionISR 0070  
                       __size_of_mode_LED 002A                     __end_of_fsmStateTable 1020  
           __size_of_save_recovery_params 002A                                 _main$2460 00E2  
                  _PIN_MANAGER_Initialize 0FB7                     _wr2RegCompleteHandler 0B85  
           ??_INT_DefaultInterruptHandler 0070                   __size_of_config_routine 0088  
        __end_of_TMR1_SetInterruptHandler 0A9D                         read_ring@subindex 002A  
                          ??_do_I2C_RESET 0070                                  ?___awdiv 0023  
                               __ptext100 0B74                                 __ptext101 0B27  
                               __ptext110 0BDE                                 __ptext102 0C67  
                               __ptext103 09C4                                 __ptext104 09CB  
                               __ptext105 0A1F                                 __ptext106 0AF2  
                               __ptext107 09C3                                 __ptext108 0DA3  
                               __ptext109 0557                                  ?___awmod 0023  
                ??_do_I2C_DO_ADDRESS_NACK 007A               _i2c1_driver_busCollisionISR 00CD  
                                ?_all_LED 0070                     __end_of_do_I2C_DO_ACK 0A15  
                    ??_PWM6_LoadDutyValue 002B                             ??_recoverData 002F  
            ??_INTERRUPT_InterruptManager 007D                ??_do_I2C_SEND_RESTART_READ 0070  
                   ?_i2c1_driver_sendNACK 0070                                  ?_sw1_EXT 0070  
                                ?_cksum_w 0070                              _INT_CallBack 0AF2  
                        ??_mssp1_clearIRQ 0070                     ?_i2c1_driver_resetBus 0070  
      __size_of_do_I2C_SEND_RESTART_WRITE 0005                                  _ADC_read 0C99  
                              ?_do_I2C_RX 0070                                ?_do_I2C_TX 0070  
                __size_of_PWM6_Initialize 000D                       __size_of_reset_recv 001C  
                          __size_of_cksum 0020                                  _T2CLKCON 0290  
                __size_of_DATAEE_ReadByte 000F                   ??_rd1RegCompleteHandler 007A  
                               _read_ring 0F31                                 _min_units 00C1  
                 ??_wr1RegCompleteHandler 007A                     _ADCC_IsConversionDone 0A38  
                       ??_TMR0_Initialize 0025                            ___wmul@product 0027  
                                _LATAbits 0016                       __size_of_returnStop 0002  
                               clear_ram0 0A25                                  _PIE0bits 0716  
                       _handler_clock_hms 0EFD                                 _nreg_init 0060  
                           ??_ring_buffer 0028                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0057                             _lum_threshold 004F  
              ??_TMR0_SetInterruptHandler 0025                                  _PIR0bits 070C  
                             _config_mode 0056                                  _PIR3bits 070F  
                               _ring_byte 00CF                                  _PIR4bits 0710  
                      ?_handler_clock_hms 0070                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR0_ISR 0B27  
                                _TMR1_ISR 0C20                                  _TMR2_ISR 0B36  
            ?_i2c_setDataCompleteCallback 0075                                  _SSP1STAT 018F  
                     __end_of_setCallBack 0DEE                          push_ring@nreg_pt 0033  
                     ??_handler_clock_hms 0070                         ??_TMR1_Initialize 0025  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                       ___wmul@multiplier 0023                                 _push_ring 0F70  
                       ?_do_I2C_SEND_STOP 0070                                  _WPUBbits 0F44  
    __size_of_INT_DefaultInterruptHandler 0001            ??_TMR2_DefaultInterruptHandler 0070  
       __size_of_TMR2_SetInterruptHandler 0009                             ??_returnReset 007A  
               ?_TMR2_SetInterruptHandler 0023                        ??_do_I2C_SEND_STOP 0070  
             __size_of_i2c1_driver_TXData 0005                          __size_of_LED_bin 001A  
                   DATAEE_WriteByte@bData 002B                       __end_of_recoverData 03BA  
       __end_of_do_I2C_SEND_RESTART_WRITE 0A06                          __size_of_INT_ISR 0006  
                 __end_of_mode_select_LED 0D5F                   __end_of_do_I2C_TX_EMPTY 0EFD  
         __size_of_increment_subfield_clk 0054                                ?_read_ring 0027  
                ?_rdBlkRegCompleteHandler 0079                         ?_DATAEE_WriteByte 0029  
            __size_of_do_I2C_SEND_RESTART 0005               __size_of_i2c1_driver_isNACK 0008  
               __end_of_handler_clock_hms 0F31                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 0025                    ?_rd2RegCompleteHandler 0079  
                      ??_DATAEE_WriteByte 002C                        i1_checkDebounceSW1 0557  
                     _do_I2C_DO_NACK_STOP 0A15                          __size_of_i2c_ISR 002D  
                  ?_wr2RegCompleteHandler 0079                                _ADSTATbits 0097  
        __end_of_ADCC_GetConversionResult 0A79                              ?_do_I2C_IDLE 0070  
                     ?i1_checkDebounceSW1 0070                              ?_do_I2C_RCEN 0070  
                              push_ring@i 0032                   ??_OSCILLATOR_Initialize 0023  
                       ??_TMR0_StartTimer 0023                       __end_of_ring_buffer 0ECA  
                     _i2c1_driver_sendACK 09E6                          __size_of___awdiv 0060  
                        __size_of___awmod 0054           __size_of_do_I2C_DO_ADDRESS_NACK 002C  
                     i2c1_driver_TXData@d 0070                    ??_i2c1_driver_sendNACK 0070  
           ??_i2c_setDataCompleteCallback 0078                          __size_of_all_LED 005B  
                     _i2c1_driver_restart 09CE                  _TMR1_SetInterruptHandler 0A94  
                    ?_do_I2C_DO_NACK_STOP 0070                       _i2c1_driver_startRX 09D4  
            __end_of_do_I2C_SEND_ADR_READ 0A70                                ?_push_ring 002D  
                  ??_i2c1_driver_resetBus 0070                     _TMR1_InterruptHandler 00D6  
                        __size_of_sw1_EXT 0025                          __size_of_cksum_w 0010  
                   __size_of_representLed 004D                                _T0CON0bits 001E  
                __size_of_ADCC_Initialize 0016                          read_ring@nreg_pt 002E  
                            _mssp1_setIRQ 09DA                               ??_do_I2C_RX 007A  
                             ??_do_I2C_TX 007A                      ??i1_checkDebounceSW1 0070  
                                __ptext10 0D7F                                  __ptext11 0AE6  
                                __ptext20 0CCD                                  __ptext12 03BA  
                                __ptext21 0442                                  __ptext13 06AD  
                              _T1GCONbits 020F                                  __ptext30 0D3F  
                                __ptext22 05B1                                  __ptext14 0DEE  
                                __ptext31 0C80                                  __ptext23 06FB  
                                __ptext15 0ACF                                  __ptext40 0B0C  
                                __ptext32 09E3                                  __ptext24 0D5F  
                                __ptext16 0AC4                                  __ptext41 0A5F  
                                __ptext33 0CE8                                  __ptext25 0748  
                                __ptext17 0AAF                                  __ptext50 0A38  
                                __ptext42 0FB7                                  __ptext34 0C4F  
                                __ptext26 04FD                                  __ptext18 0AB9  
                                __ptext51 0A70                                  __ptext43 0A82  
                                __ptext35 0A9D                                  __ptext27 0C0A  
                                __ptext19 020A                                  __ptext60 0A1A  
                                __ptext44 0B19                                  __ptext36 0D20  
                                __ptext28 0605                                  __ptext61 0A15  
                                __ptext53 09EE                                  __ptext45 0A79  
                                __ptext37 0A94                                  __ptext29 04A2  
                                __ptext70 09F7                                  __ptext62 0A10  
                                __ptext54 09E0                                  __ptext46 0BF4  
                                __ptext38 0BC9                                  __ptext71 0A47  
                                __ptext63 0A31                                  __ptext55 0E6E  
                                __ptext47 0CB3                                  __ptext39 0A8B  
                                __ptext80 0C37                                  __ptext72 0ECA  
                                __ptext64 0A4F                                  __ptext56 09DD  
                                __ptext48 0C99                                  __ptext81 0BB8  
                                __ptext73 09DA                                  __ptext65 0A67  
                                __ptext57 0795                                  __ptext49 0A57  
                                __ptext90 0B54                                  __ptext82 0BA7  
                                __ptext74 0A3F                                  __ptext66 0A0B  
                                __ptext58 0659                                  __ptext91 09D1  
                                __ptext83 0B96                                  __ptext75 09F2  
                                __ptext67 0A06                                  __ptext59 0E42  
                                __ptext92 09CE                                  __ptext84 0002  
                                __ptext76 09D7                                  __ptext68 0A01  
                                __ptext93 09E6                                  __ptext85 09C9  
                                __ptext77 09EA                                  __ptext69 09FC  
                                __ptext94 0B36                                  __ptext86 09C7  
                                __ptext78 07FF                                  __ptext95 09C6  
                                __ptext87 0B85                                  __ptext79 09D4  
                                __ptext96 0ADA                                  __ptext88 0AFF  
                                __ptext97 0C20                                  __ptext89 0DC8  
                                __ptext98 09C5                                  __ptext99 0EFD  
                                _mod1_LED 0AB9                              _SSP1CON1bits 0190  
                                _mod2_LED 0AAF                  __end_of_checkDebounceSW1 0557  
                            _SSP1CON2bits 0191                  __end_of_checkDebounceSW2 0795  
                                _mod3_LED 0AC4                                  _mod4_LED 0ACF  
                  ?_ADCC_IsConversionDone 0070                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 0A4F               DATAEE_WriteByte@GIEBitValue 002C  
                                _recAlarm 0000                      ?_i2c1_driver_restart 0070  
                     __end_of_returnReset 0004                                  _last_ms2 005A  
                        _i2c1_driver_open 0AE6                                  _mode_LED 0DEE  
                       ??_PWM6_Initialize 0023                          _i2c1_driver_stop 09D1  
                           __size_of_main 018C                      ?_i2c1_driver_startRX 0070  
          __size_of_i2c1_driver_getRXData 0003                                  _min_tens 00C3  
           __end_of_i2c1_driver_getRXData 09DA      __end_of_TMR0_DefaultInterruptHandler 09C5  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 09C4  
                       ??_DATAEE_ReadByte 0025                      __CFG_WDTCWS$WDTCWS_7 0000  
                             _setCallBack 0DC8                              ??_reset_recv 002D  
                       ?_handler_clock_ms 0070                                  _set_mode 0057  
                          _config_routine 03BA                             _num_subfields 1020  
                  _increment_subfield_clk 05B1              __end_of_ADCC_StartConversion 0A5F  
                                int$flags 007E                        ??_handler_clock_ms 0070  
                            _representLed 06FB        __end_of_INTERRUPT_InterruptManager 005B  
              _INTERRUPT_InterruptManager 0004                       _mode_field_subfield 0061  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                                cksum@res 0026          __end_of_do_I2C_SEND_RESTART_READ 0A01  
                            ??_returnStop 007A                               _hours_units 00C5  
                __end_of_i2c_restartWrite 09C9                     ??_do_I2C_DO_NACK_STOP 0070  
                             _recoverData 0322                                _INTCONbits 000B  
                             _NVMCON1bits 081E             __size_ofi1_PWM6_LoadDutyValue 0016  
                    _INT_InterruptHandler 00DC                          ?_mode_select_LED 0070  
                      __end_of_reset_recv 0D20                     ??_i2c1_driver_sendACK 0070  
                      _EXT_INT_Initialize 0B19                          ?_do_I2C_TX_EMPTY 0070  
                             ??_read_ring 002B                    _do_I2C_DO_ADDRESS_NACK 0E42  
                                intlevel1 0000                          ??_TMR0_StopTimer 0070  
                   ??_i2c1_driver_restart 0070                __size_of_handler_clock_hms 0034  
                  rd2RegCompleteHandler@p 0079                     ??_i2c1_driver_startRX 0070  
                 ?_PIN_MANAGER_Initialize 0070                         i2c_restartWrite@p 0079  
                       __CFG_CLKOUTEN$OFF 0000                       ?_EXT_INT_Initialize 0070  
                      __end_of_returnStop 09CB                    __end_of_config_routine 0442  
                             _ring_buffer 0E9B             ?_TMR0_DefaultInterruptHandler 0070  
                  wr2RegCompleteHandler@p 0079                  ?_INT_SetInterruptHandler 0023  
                _ADCC_GetConversionResult 0A70                               _temp_thresh 0066  
                           __pstringtext1 1000                             __pstringtext2 1020  
                    ??_EXT_INT_Initialize 0025                            read_ring@index 0029  
                             ??_push_ring 0030                                _SSP1DATPPS 0EC6  
            __end_of_save_recovery_params 0E42                                _SSP1CLKPPS 0EC5  
                         _TMR0_Initialize 0BC9                    __size_of_i2c_setBuffer 0010  
                             _returnReset 0002               PWM6_LoadDutyValue@dutyValue 0029  
                           read_ring@nreg 0027            __end_of_PIN_MANAGER_Initialize 1000  
                       ??_ADCC_Initialize 0023               __end_of_i2c_busCollisionISR 09F2  
                __size_of_getSubfieldInfo 0118            __size_of_rd1RegCompleteHandler 0011  
           __end_of_rd1RegCompleteHandler 0BB8                        push_ring@nreg_init 002E  
          __size_of_wr1RegCompleteHandler 0011             __end_of_wr1RegCompleteHandler 0BA7  
                   _TMR2_InterruptHandler 00D4                     _do_I2C_SEND_ADR_WRITE 0A4F  
                      push_ring@ring_byte 002F                  __size_of_limitHoursUnits 001B  
                    _do_I2C_SEND_ADR_READ 0A67                           ?_config_routine 0070  
                         _TMR1_Initialize 0D20  
