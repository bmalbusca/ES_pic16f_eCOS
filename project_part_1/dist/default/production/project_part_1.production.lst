

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov 26 19:01:40 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2
    54                           	psect	text35,local,class=CODE,merge=1,delta=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2
    65                           	psect	text46,local,class=CODE,merge=1,delta=2
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2
    75                           	psect	intentry,global,class=CODE,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
    80                           	psect	text61,local,class=CODE,merge=1,delta=2
    81                           	psect	text62,local,class=CODE,merge=1,delta=2
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	psect	text64,local,class=CODE,merge=1,delta=2
    84                           	psect	text65,local,class=CODE,merge=1,delta=2
    85                           	psect	text66,local,class=CODE,merge=1,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,delta=2
    87                           	psect	text68,local,class=CODE,merge=1,delta=2
    88                           	psect	text69,local,class=CODE,merge=1,delta=2
    89                           	psect	text70,local,class=CODE,merge=1,delta=2
    90                           	psect	text71,local,class=CODE,merge=1,delta=2
    91                           	psect	text72,local,class=CODE,merge=1,delta=2
    92                           	psect	text73,local,class=CODE,merge=1,delta=2
    93                           	psect	text74,local,class=CODE,merge=1,delta=2
    94                           	psect	text75,local,class=CODE,merge=1,delta=2
    95                           	psect	text76,local,class=CODE,merge=1,delta=2
    96                           	psect	text77,local,class=CODE,merge=1,inline,delta=2
    97                           	psect	text78,local,class=CODE,merge=1,inline,delta=2
    98                           	psect	text79,local,class=CODE,merge=1,inline,delta=2
    99                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   100                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   101                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   102                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   103                           	psect	text84,local,class=CODE,merge=1,delta=2
   104                           	psect	text85,local,class=CODE,merge=1,delta=2
   105                           	psect	text86,local,class=CODE,merge=1,delta=2
   106                           	psect	text87,local,class=CODE,merge=1,delta=2
   107                           	psect	text88,local,class=CODE,merge=1,delta=2
   108                           	psect	text89,local,class=CODE,merge=1,delta=2
   109                           	psect	text90,local,class=CODE,merge=1,delta=2
   110                           	psect	text91,local,class=CODE,merge=1,delta=2
   111                           	psect	text92,local,class=CODE,merge=1,delta=2
   112                           	psect	text93,local,class=CODE,merge=1,delta=2
   113                           	psect	text94,local,class=CODE,merge=1,delta=2
   114                           	psect	text95,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text96,local,class=CODE,merge=1,inline,delta=2
   116                           	psect	text97,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text98,local,class=CODE,merge=1,delta=2
   118                           	psect	text99,local,class=CODE,merge=1,delta=2
   119                           	psect	text100,local,class=CODE,merge=1,delta=2
   120                           	psect	text101,local,class=CODE,merge=1,delta=2
   121                           	psect	text102,local,class=CODE,merge=1,delta=2
   122                           	psect	text103,local,class=CODE,merge=1,delta=2
   123                           	psect	text104,local,class=CODE,merge=1,delta=2
   124                           	psect	text105,local,class=CODE,merge=1,delta=2
   125                           	psect	text106,local,class=CODE,merge=1,delta=2
   126                           	psect	text107,local,class=CODE,merge=1,delta=2
   127                           	psect	text108,local,class=CODE,merge=1,delta=2
   128                           	psect	text109,local,class=CODE,merge=1,delta=2
   129                           	psect	text110,local,class=CODE,merge=1,delta=2
   130                           	psect	text111,local,class=CODE,merge=1,delta=2
   131                           	psect	text112,local,class=CODE,merge=1,delta=2
   132                           	psect	text113,local,class=CODE,merge=1,delta=2
   133                           	psect	text114,local,class=CODE,merge=1,delta=2
   134                           	dabs	1,0x7E,2
   135  0000                     
   136                           ; Version 2.10
   137                           ; Generated 31/07/2019 GMT
   138                           ; 
   139                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   140                           ; All rights reserved.
   141                           ; 
   142                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   143                           ; 
   144                           ; Redistribution and use in source and binary forms, with or without modification, are
   145                           ; permitted provided that the following conditions are met:
   146                           ; 
   147                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   148                           ;        conditions and the following disclaimer.
   149                           ; 
   150                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   151                           ;        of conditions and the following disclaimer in the documentation and/or other
   152                           ;        materials provided with the distribution.
   153                           ; 
   154                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   155                           ;        software without specific prior written permission.
   156                           ; 
   157                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   158                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   159                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   160                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   161                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   162                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   163                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   164                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   165                           ; 
   166                           ; 
   167                           ; Code-generator required, PIC16F18875 Definitions
   168                           ; 
   169                           ; SFR Addresses
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001C                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  008C                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0093                     	;# 
   213  0094                     	;# 
   214  0095                     	;# 
   215  0096                     	;# 
   216  0097                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009A                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0110                     	;# 
   230  0110                     	;# 
   231  0111                     	;# 
   232  0112                     	;# 
   233  0112                     	;# 
   234  0113                     	;# 
   235  0114                     	;# 
   236  0114                     	;# 
   237  0115                     	;# 
   238  0116                     	;# 
   239  0116                     	;# 
   240  0117                     	;# 
   241  0119                     	;# 
   242  0119                     	;# 
   243  0119                     	;# 
   244  011A                     	;# 
   245  011A                     	;# 
   246  011A                     	;# 
   247  011B                     	;# 
   248  011B                     	;# 
   249  011B                     	;# 
   250  011B                     	;# 
   251  011B                     	;# 
   252  011C                     	;# 
   253  011C                     	;# 
   254  011C                     	;# 
   255  011D                     	;# 
   256  011D                     	;# 
   257  011D                     	;# 
   258  011E                     	;# 
   259  011E                     	;# 
   260  011E                     	;# 
   261  011F                     	;# 
   262  011F                     	;# 
   263  011F                     	;# 
   264  011F                     	;# 
   265  011F                     	;# 
   266  018C                     	;# 
   267  018D                     	;# 
   268  018E                     	;# 
   269  018F                     	;# 
   270  0190                     	;# 
   271  0191                     	;# 
   272  0192                     	;# 
   273  0196                     	;# 
   274  0197                     	;# 
   275  0198                     	;# 
   276  0199                     	;# 
   277  019A                     	;# 
   278  019B                     	;# 
   279  019C                     	;# 
   280  020C                     	;# 
   281  020C                     	;# 
   282  020D                     	;# 
   283  020E                     	;# 
   284  020F                     	;# 
   285  020F                     	;# 
   286  0210                     	;# 
   287  0210                     	;# 
   288  0211                     	;# 
   289  0211                     	;# 
   290  0212                     	;# 
   291  0212                     	;# 
   292  0213                     	;# 
   293  0214                     	;# 
   294  0215                     	;# 
   295  0215                     	;# 
   296  0216                     	;# 
   297  0216                     	;# 
   298  0217                     	;# 
   299  0217                     	;# 
   300  0218                     	;# 
   301  0218                     	;# 
   302  0219                     	;# 
   303  021A                     	;# 
   304  021B                     	;# 
   305  021B                     	;# 
   306  021C                     	;# 
   307  021C                     	;# 
   308  021D                     	;# 
   309  021D                     	;# 
   310  021E                     	;# 
   311  021F                     	;# 
   312  028C                     	;# 
   313  028C                     	;# 
   314  028D                     	;# 
   315  028D                     	;# 
   316  028E                     	;# 
   317  028F                     	;# 
   318  0290                     	;# 
   319  0290                     	;# 
   320  0291                     	;# 
   321  0292                     	;# 
   322  0292                     	;# 
   323  0293                     	;# 
   324  0293                     	;# 
   325  0294                     	;# 
   326  0295                     	;# 
   327  0296                     	;# 
   328  0296                     	;# 
   329  0297                     	;# 
   330  0298                     	;# 
   331  0298                     	;# 
   332  0299                     	;# 
   333  0299                     	;# 
   334  029A                     	;# 
   335  029B                     	;# 
   336  029C                     	;# 
   337  029C                     	;# 
   338  029D                     	;# 
   339  030C                     	;# 
   340  030C                     	;# 
   341  030D                     	;# 
   342  030E                     	;# 
   343  030F                     	;# 
   344  0310                     	;# 
   345  0310                     	;# 
   346  0311                     	;# 
   347  0312                     	;# 
   348  0313                     	;# 
   349  0314                     	;# 
   350  0314                     	;# 
   351  0315                     	;# 
   352  0316                     	;# 
   353  0317                     	;# 
   354  0318                     	;# 
   355  0318                     	;# 
   356  0319                     	;# 
   357  031A                     	;# 
   358  031B                     	;# 
   359  031C                     	;# 
   360  031C                     	;# 
   361  031D                     	;# 
   362  031E                     	;# 
   363  031F                     	;# 
   364  038C                     	;# 
   365  038C                     	;# 
   366  038D                     	;# 
   367  038E                     	;# 
   368  0390                     	;# 
   369  0390                     	;# 
   370  0391                     	;# 
   371  0392                     	;# 
   372  040C                     	;# 
   373  040D                     	;# 
   374  040E                     	;# 
   375  040F                     	;# 
   376  0410                     	;# 
   377  0411                     	;# 
   378  0416                     	;# 
   379  0416                     	;# 
   380  0417                     	;# 
   381  0418                     	;# 
   382  0418                     	;# 
   383  0419                     	;# 
   384  041A                     	;# 
   385  041A                     	;# 
   386  041B                     	;# 
   387  041C                     	;# 
   388  041C                     	;# 
   389  041D                     	;# 
   390  041E                     	;# 
   391  041F                     	;# 
   392  048C                     	;# 
   393  048C                     	;# 
   394  048D                     	;# 
   395  048E                     	;# 
   396  048F                     	;# 
   397  048F                     	;# 
   398  0490                     	;# 
   399  0491                     	;# 
   400  0492                     	;# 
   401  0492                     	;# 
   402  0493                     	;# 
   403  0494                     	;# 
   404  0495                     	;# 
   405  0495                     	;# 
   406  0496                     	;# 
   407  0497                     	;# 
   408  0498                     	;# 
   409  0499                     	;# 
   410  049A                     	;# 
   411  049B                     	;# 
   412  049C                     	;# 
   413  049D                     	;# 
   414  050C                     	;# 
   415  050C                     	;# 
   416  050D                     	;# 
   417  050E                     	;# 
   418  050F                     	;# 
   419  050F                     	;# 
   420  0510                     	;# 
   421  0511                     	;# 
   422  0512                     	;# 
   423  0512                     	;# 
   424  0513                     	;# 
   425  0514                     	;# 
   426  0515                     	;# 
   427  0515                     	;# 
   428  0516                     	;# 
   429  0517                     	;# 
   430  0518                     	;# 
   431  0519                     	;# 
   432  051A                     	;# 
   433  051B                     	;# 
   434  051C                     	;# 
   435  051D                     	;# 
   436  058C                     	;# 
   437  058C                     	;# 
   438  058D                     	;# 
   439  058E                     	;# 
   440  058F                     	;# 
   441  058F                     	;# 
   442  0590                     	;# 
   443  0591                     	;# 
   444  0592                     	;# 
   445  0593                     	;# 
   446  060C                     	;# 
   447  060D                     	;# 
   448  060E                     	;# 
   449  060F                     	;# 
   450  0610                     	;# 
   451  0611                     	;# 
   452  0612                     	;# 
   453  0613                     	;# 
   454  0614                     	;# 
   455  0616                     	;# 
   456  0617                     	;# 
   457  0618                     	;# 
   458  0619                     	;# 
   459  061A                     	;# 
   460  061B                     	;# 
   461  061C                     	;# 
   462  061D                     	;# 
   463  061E                     	;# 
   464  068C                     	;# 
   465  068D                     	;# 
   466  068E                     	;# 
   467  068F                     	;# 
   468  0690                     	;# 
   469  0691                     	;# 
   470  0692                     	;# 
   471  0693                     	;# 
   472  0694                     	;# 
   473  070C                     	;# 
   474  070D                     	;# 
   475  070E                     	;# 
   476  070F                     	;# 
   477  0710                     	;# 
   478  0711                     	;# 
   479  0712                     	;# 
   480  0713                     	;# 
   481  0714                     	;# 
   482  0716                     	;# 
   483  0717                     	;# 
   484  0718                     	;# 
   485  0719                     	;# 
   486  071A                     	;# 
   487  071B                     	;# 
   488  071C                     	;# 
   489  071D                     	;# 
   490  071E                     	;# 
   491  0796                     	;# 
   492  0797                     	;# 
   493  0798                     	;# 
   494  0799                     	;# 
   495  079A                     	;# 
   496  079B                     	;# 
   497  080C                     	;# 
   498  080D                     	;# 
   499  080E                     	;# 
   500  080F                     	;# 
   501  0810                     	;# 
   502  0811                     	;# 
   503  0812                     	;# 
   504  0813                     	;# 
   505  0814                     	;# 
   506  081A                     	;# 
   507  081B                     	;# 
   508  081C                     	;# 
   509  081D                     	;# 
   510  081E                     	;# 
   511  081F                     	;# 
   512  088C                     	;# 
   513  088D                     	;# 
   514  088E                     	;# 
   515  088F                     	;# 
   516  0890                     	;# 
   517  0891                     	;# 
   518  0892                     	;# 
   519  0893                     	;# 
   520  0895                     	;# 
   521  0896                     	;# 
   522  0897                     	;# 
   523  0898                     	;# 
   524  0899                     	;# 
   525  089A                     	;# 
   526  089B                     	;# 
   527  090C                     	;# 
   528  090E                     	;# 
   529  090F                     	;# 
   530  091F                     	;# 
   531  091F                     	;# 
   532  098F                     	;# 
   533  098F                     	;# 
   534  0990                     	;# 
   535  0991                     	;# 
   536  0992                     	;# 
   537  0993                     	;# 
   538  0994                     	;# 
   539  0995                     	;# 
   540  0996                     	;# 
   541  0997                     	;# 
   542  0E0F                     	;# 
   543  0E10                     	;# 
   544  0E11                     	;# 
   545  0E12                     	;# 
   546  0E13                     	;# 
   547  0E14                     	;# 
   548  0E15                     	;# 
   549  0E16                     	;# 
   550  0E17                     	;# 
   551  0E18                     	;# 
   552  0E19                     	;# 
   553  0E1A                     	;# 
   554  0E1B                     	;# 
   555  0E1C                     	;# 
   556  0E1D                     	;# 
   557  0E1E                     	;# 
   558  0E1F                     	;# 
   559  0E20                     	;# 
   560  0E21                     	;# 
   561  0E22                     	;# 
   562  0E23                     	;# 
   563  0E24                     	;# 
   564  0E25                     	;# 
   565  0E26                     	;# 
   566  0E27                     	;# 
   567  0E28                     	;# 
   568  0E29                     	;# 
   569  0E2A                     	;# 
   570  0E2B                     	;# 
   571  0E2C                     	;# 
   572  0E2D                     	;# 
   573  0E2E                     	;# 
   574  0E2F                     	;# 
   575  0E30                     	;# 
   576  0E31                     	;# 
   577  0E32                     	;# 
   578  0E33                     	;# 
   579  0E34                     	;# 
   580  0E35                     	;# 
   581  0E36                     	;# 
   582  0E37                     	;# 
   583  0E8F                     	;# 
   584  0E90                     	;# 
   585  0E91                     	;# 
   586  0E92                     	;# 
   587  0E93                     	;# 
   588  0E94                     	;# 
   589  0E95                     	;# 
   590  0E96                     	;# 
   591  0E97                     	;# 
   592  0E9C                     	;# 
   593  0E9D                     	;# 
   594  0E9E                     	;# 
   595  0EA1                     	;# 
   596  0EA2                     	;# 
   597  0EA3                     	;# 
   598  0EA4                     	;# 
   599  0EA5                     	;# 
   600  0EA9                     	;# 
   601  0EAA                     	;# 
   602  0EAB                     	;# 
   603  0EAC                     	;# 
   604  0EB1                     	;# 
   605  0EB2                     	;# 
   606  0EB3                     	;# 
   607  0EB8                     	;# 
   608  0EB9                     	;# 
   609  0EBA                     	;# 
   610  0EBB                     	;# 
   611  0EBC                     	;# 
   612  0EBD                     	;# 
   613  0EBE                     	;# 
   614  0EC3                     	;# 
   615  0EC5                     	;# 
   616  0EC6                     	;# 
   617  0EC7                     	;# 
   618  0EC8                     	;# 
   619  0EC9                     	;# 
   620  0ECA                     	;# 
   621  0ECB                     	;# 
   622  0ECC                     	;# 
   623  0F10                     	;# 
   624  0F11                     	;# 
   625  0F12                     	;# 
   626  0F13                     	;# 
   627  0F14                     	;# 
   628  0F15                     	;# 
   629  0F16                     	;# 
   630  0F17                     	;# 
   631  0F18                     	;# 
   632  0F19                     	;# 
   633  0F1A                     	;# 
   634  0F1B                     	;# 
   635  0F1C                     	;# 
   636  0F1D                     	;# 
   637  0F1E                     	;# 
   638  0F1F                     	;# 
   639  0F20                     	;# 
   640  0F21                     	;# 
   641  0F22                     	;# 
   642  0F23                     	;# 
   643  0F24                     	;# 
   644  0F25                     	;# 
   645  0F26                     	;# 
   646  0F27                     	;# 
   647  0F28                     	;# 
   648  0F29                     	;# 
   649  0F2A                     	;# 
   650  0F2B                     	;# 
   651  0F2C                     	;# 
   652  0F2D                     	;# 
   653  0F2E                     	;# 
   654  0F2F                     	;# 
   655  0F30                     	;# 
   656  0F31                     	;# 
   657  0F32                     	;# 
   658  0F38                     	;# 
   659  0F39                     	;# 
   660  0F3A                     	;# 
   661  0F3B                     	;# 
   662  0F3C                     	;# 
   663  0F3D                     	;# 
   664  0F3E                     	;# 
   665  0F3F                     	;# 
   666  0F40                     	;# 
   667  0F41                     	;# 
   668  0F43                     	;# 
   669  0F44                     	;# 
   670  0F45                     	;# 
   671  0F46                     	;# 
   672  0F47                     	;# 
   673  0F48                     	;# 
   674  0F49                     	;# 
   675  0F4A                     	;# 
   676  0F4B                     	;# 
   677  0F4C                     	;# 
   678  0F4E                     	;# 
   679  0F4F                     	;# 
   680  0F50                     	;# 
   681  0F51                     	;# 
   682  0F52                     	;# 
   683  0F53                     	;# 
   684  0F54                     	;# 
   685  0F55                     	;# 
   686  0F56                     	;# 
   687  0F57                     	;# 
   688  0F59                     	;# 
   689  0F5A                     	;# 
   690  0F5B                     	;# 
   691  0F5C                     	;# 
   692  0F5D                     	;# 
   693  0F61                     	;# 
   694  0F62                     	;# 
   695  0F64                     	;# 
   696  0F65                     	;# 
   697  0F66                     	;# 
   698  0F67                     	;# 
   699  0F68                     	;# 
   700  0F69                     	;# 
   701  0F6A                     	;# 
   702  0F6B                     	;# 
   703  0F6C                     	;# 
   704  0F6D                     	;# 
   705  0FE4                     	;# 
   706  0FE5                     	;# 
   707  0FE6                     	;# 
   708  0FE7                     	;# 
   709  0FE8                     	;# 
   710  0FE9                     	;# 
   711  0FEA                     	;# 
   712  0FEB                     	;# 
   713  0FED                     	;# 
   714  0FEE                     	;# 
   715  0FEF                     	;# 
   716  0000                     	;# 
   717  0001                     	;# 
   718  0002                     	;# 
   719  0003                     	;# 
   720  0004                     	;# 
   721  0005                     	;# 
   722  0006                     	;# 
   723  0007                     	;# 
   724  0008                     	;# 
   725  0009                     	;# 
   726  000A                     	;# 
   727  000B                     	;# 
   728  000C                     	;# 
   729  000D                     	;# 
   730  000E                     	;# 
   731  000F                     	;# 
   732  0010                     	;# 
   733  0011                     	;# 
   734  0012                     	;# 
   735  0013                     	;# 
   736  0014                     	;# 
   737  0015                     	;# 
   738  0016                     	;# 
   739  0017                     	;# 
   740  0018                     	;# 
   741  0019                     	;# 
   742  001A                     	;# 
   743  001C                     	;# 
   744  001C                     	;# 
   745  001D                     	;# 
   746  001D                     	;# 
   747  001E                     	;# 
   748  001F                     	;# 
   749  008C                     	;# 
   750  008C                     	;# 
   751  008D                     	;# 
   752  008E                     	;# 
   753  008E                     	;# 
   754  008F                     	;# 
   755  0090                     	;# 
   756  0090                     	;# 
   757  0091                     	;# 
   758  0093                     	;# 
   759  0094                     	;# 
   760  0095                     	;# 
   761  0096                     	;# 
   762  0097                     	;# 
   763  0098                     	;# 
   764  0099                     	;# 
   765  009A                     	;# 
   766  009B                     	;# 
   767  009C                     	;# 
   768  009D                     	;# 
   769  009E                     	;# 
   770  010C                     	;# 
   771  010D                     	;# 
   772  010E                     	;# 
   773  010E                     	;# 
   774  010F                     	;# 
   775  0110                     	;# 
   776  0110                     	;# 
   777  0111                     	;# 
   778  0112                     	;# 
   779  0112                     	;# 
   780  0113                     	;# 
   781  0114                     	;# 
   782  0114                     	;# 
   783  0115                     	;# 
   784  0116                     	;# 
   785  0116                     	;# 
   786  0117                     	;# 
   787  0119                     	;# 
   788  0119                     	;# 
   789  0119                     	;# 
   790  011A                     	;# 
   791  011A                     	;# 
   792  011A                     	;# 
   793  011B                     	;# 
   794  011B                     	;# 
   795  011B                     	;# 
   796  011B                     	;# 
   797  011B                     	;# 
   798  011C                     	;# 
   799  011C                     	;# 
   800  011C                     	;# 
   801  011D                     	;# 
   802  011D                     	;# 
   803  011D                     	;# 
   804  011E                     	;# 
   805  011E                     	;# 
   806  011E                     	;# 
   807  011F                     	;# 
   808  011F                     	;# 
   809  011F                     	;# 
   810  011F                     	;# 
   811  011F                     	;# 
   812  018C                     	;# 
   813  018D                     	;# 
   814  018E                     	;# 
   815  018F                     	;# 
   816  0190                     	;# 
   817  0191                     	;# 
   818  0192                     	;# 
   819  0196                     	;# 
   820  0197                     	;# 
   821  0198                     	;# 
   822  0199                     	;# 
   823  019A                     	;# 
   824  019B                     	;# 
   825  019C                     	;# 
   826  020C                     	;# 
   827  020C                     	;# 
   828  020D                     	;# 
   829  020E                     	;# 
   830  020F                     	;# 
   831  020F                     	;# 
   832  0210                     	;# 
   833  0210                     	;# 
   834  0211                     	;# 
   835  0211                     	;# 
   836  0212                     	;# 
   837  0212                     	;# 
   838  0213                     	;# 
   839  0214                     	;# 
   840  0215                     	;# 
   841  0215                     	;# 
   842  0216                     	;# 
   843  0216                     	;# 
   844  0217                     	;# 
   845  0217                     	;# 
   846  0218                     	;# 
   847  0218                     	;# 
   848  0219                     	;# 
   849  021A                     	;# 
   850  021B                     	;# 
   851  021B                     	;# 
   852  021C                     	;# 
   853  021C                     	;# 
   854  021D                     	;# 
   855  021D                     	;# 
   856  021E                     	;# 
   857  021F                     	;# 
   858  028C                     	;# 
   859  028C                     	;# 
   860  028D                     	;# 
   861  028D                     	;# 
   862  028E                     	;# 
   863  028F                     	;# 
   864  0290                     	;# 
   865  0290                     	;# 
   866  0291                     	;# 
   867  0292                     	;# 
   868  0292                     	;# 
   869  0293                     	;# 
   870  0293                     	;# 
   871  0294                     	;# 
   872  0295                     	;# 
   873  0296                     	;# 
   874  0296                     	;# 
   875  0297                     	;# 
   876  0298                     	;# 
   877  0298                     	;# 
   878  0299                     	;# 
   879  0299                     	;# 
   880  029A                     	;# 
   881  029B                     	;# 
   882  029C                     	;# 
   883  029C                     	;# 
   884  029D                     	;# 
   885  030C                     	;# 
   886  030C                     	;# 
   887  030D                     	;# 
   888  030E                     	;# 
   889  030F                     	;# 
   890  0310                     	;# 
   891  0310                     	;# 
   892  0311                     	;# 
   893  0312                     	;# 
   894  0313                     	;# 
   895  0314                     	;# 
   896  0314                     	;# 
   897  0315                     	;# 
   898  0316                     	;# 
   899  0317                     	;# 
   900  0318                     	;# 
   901  0318                     	;# 
   902  0319                     	;# 
   903  031A                     	;# 
   904  031B                     	;# 
   905  031C                     	;# 
   906  031C                     	;# 
   907  031D                     	;# 
   908  031E                     	;# 
   909  031F                     	;# 
   910  038C                     	;# 
   911  038C                     	;# 
   912  038D                     	;# 
   913  038E                     	;# 
   914  0390                     	;# 
   915  0390                     	;# 
   916  0391                     	;# 
   917  0392                     	;# 
   918  040C                     	;# 
   919  040D                     	;# 
   920  040E                     	;# 
   921  040F                     	;# 
   922  0410                     	;# 
   923  0411                     	;# 
   924  0416                     	;# 
   925  0416                     	;# 
   926  0417                     	;# 
   927  0418                     	;# 
   928  0418                     	;# 
   929  0419                     	;# 
   930  041A                     	;# 
   931  041A                     	;# 
   932  041B                     	;# 
   933  041C                     	;# 
   934  041C                     	;# 
   935  041D                     	;# 
   936  041E                     	;# 
   937  041F                     	;# 
   938  048C                     	;# 
   939  048C                     	;# 
   940  048D                     	;# 
   941  048E                     	;# 
   942  048F                     	;# 
   943  048F                     	;# 
   944  0490                     	;# 
   945  0491                     	;# 
   946  0492                     	;# 
   947  0492                     	;# 
   948  0493                     	;# 
   949  0494                     	;# 
   950  0495                     	;# 
   951  0495                     	;# 
   952  0496                     	;# 
   953  0497                     	;# 
   954  0498                     	;# 
   955  0499                     	;# 
   956  049A                     	;# 
   957  049B                     	;# 
   958  049C                     	;# 
   959  049D                     	;# 
   960  050C                     	;# 
   961  050C                     	;# 
   962  050D                     	;# 
   963  050E                     	;# 
   964  050F                     	;# 
   965  050F                     	;# 
   966  0510                     	;# 
   967  0511                     	;# 
   968  0512                     	;# 
   969  0512                     	;# 
   970  0513                     	;# 
   971  0514                     	;# 
   972  0515                     	;# 
   973  0515                     	;# 
   974  0516                     	;# 
   975  0517                     	;# 
   976  0518                     	;# 
   977  0519                     	;# 
   978  051A                     	;# 
   979  051B                     	;# 
   980  051C                     	;# 
   981  051D                     	;# 
   982  058C                     	;# 
   983  058C                     	;# 
   984  058D                     	;# 
   985  058E                     	;# 
   986  058F                     	;# 
   987  058F                     	;# 
   988  0590                     	;# 
   989  0591                     	;# 
   990  0592                     	;# 
   991  0593                     	;# 
   992  060C                     	;# 
   993  060D                     	;# 
   994  060E                     	;# 
   995  060F                     	;# 
   996  0610                     	;# 
   997  0611                     	;# 
   998  0612                     	;# 
   999  0613                     	;# 
  1000  0614                     	;# 
  1001  0616                     	;# 
  1002  0617                     	;# 
  1003  0618                     	;# 
  1004  0619                     	;# 
  1005  061A                     	;# 
  1006  061B                     	;# 
  1007  061C                     	;# 
  1008  061D                     	;# 
  1009  061E                     	;# 
  1010  068C                     	;# 
  1011  068D                     	;# 
  1012  068E                     	;# 
  1013  068F                     	;# 
  1014  0690                     	;# 
  1015  0691                     	;# 
  1016  0692                     	;# 
  1017  0693                     	;# 
  1018  0694                     	;# 
  1019  070C                     	;# 
  1020  070D                     	;# 
  1021  070E                     	;# 
  1022  070F                     	;# 
  1023  0710                     	;# 
  1024  0711                     	;# 
  1025  0712                     	;# 
  1026  0713                     	;# 
  1027  0714                     	;# 
  1028  0716                     	;# 
  1029  0717                     	;# 
  1030  0718                     	;# 
  1031  0719                     	;# 
  1032  071A                     	;# 
  1033  071B                     	;# 
  1034  071C                     	;# 
  1035  071D                     	;# 
  1036  071E                     	;# 
  1037  0796                     	;# 
  1038  0797                     	;# 
  1039  0798                     	;# 
  1040  0799                     	;# 
  1041  079A                     	;# 
  1042  079B                     	;# 
  1043  080C                     	;# 
  1044  080D                     	;# 
  1045  080E                     	;# 
  1046  080F                     	;# 
  1047  0810                     	;# 
  1048  0811                     	;# 
  1049  0812                     	;# 
  1050  0813                     	;# 
  1051  0814                     	;# 
  1052  081A                     	;# 
  1053  081B                     	;# 
  1054  081C                     	;# 
  1055  081D                     	;# 
  1056  081E                     	;# 
  1057  081F                     	;# 
  1058  088C                     	;# 
  1059  088D                     	;# 
  1060  088E                     	;# 
  1061  088F                     	;# 
  1062  0890                     	;# 
  1063  0891                     	;# 
  1064  0892                     	;# 
  1065  0893                     	;# 
  1066  0895                     	;# 
  1067  0896                     	;# 
  1068  0897                     	;# 
  1069  0898                     	;# 
  1070  0899                     	;# 
  1071  089A                     	;# 
  1072  089B                     	;# 
  1073  090C                     	;# 
  1074  090E                     	;# 
  1075  090F                     	;# 
  1076  091F                     	;# 
  1077  091F                     	;# 
  1078  098F                     	;# 
  1079  098F                     	;# 
  1080  0990                     	;# 
  1081  0991                     	;# 
  1082  0992                     	;# 
  1083  0993                     	;# 
  1084  0994                     	;# 
  1085  0995                     	;# 
  1086  0996                     	;# 
  1087  0997                     	;# 
  1088  0E0F                     	;# 
  1089  0E10                     	;# 
  1090  0E11                     	;# 
  1091  0E12                     	;# 
  1092  0E13                     	;# 
  1093  0E14                     	;# 
  1094  0E15                     	;# 
  1095  0E16                     	;# 
  1096  0E17                     	;# 
  1097  0E18                     	;# 
  1098  0E19                     	;# 
  1099  0E1A                     	;# 
  1100  0E1B                     	;# 
  1101  0E1C                     	;# 
  1102  0E1D                     	;# 
  1103  0E1E                     	;# 
  1104  0E1F                     	;# 
  1105  0E20                     	;# 
  1106  0E21                     	;# 
  1107  0E22                     	;# 
  1108  0E23                     	;# 
  1109  0E24                     	;# 
  1110  0E25                     	;# 
  1111  0E26                     	;# 
  1112  0E27                     	;# 
  1113  0E28                     	;# 
  1114  0E29                     	;# 
  1115  0E2A                     	;# 
  1116  0E2B                     	;# 
  1117  0E2C                     	;# 
  1118  0E2D                     	;# 
  1119  0E2E                     	;# 
  1120  0E2F                     	;# 
  1121  0E30                     	;# 
  1122  0E31                     	;# 
  1123  0E32                     	;# 
  1124  0E33                     	;# 
  1125  0E34                     	;# 
  1126  0E35                     	;# 
  1127  0E36                     	;# 
  1128  0E37                     	;# 
  1129  0E8F                     	;# 
  1130  0E90                     	;# 
  1131  0E91                     	;# 
  1132  0E92                     	;# 
  1133  0E93                     	;# 
  1134  0E94                     	;# 
  1135  0E95                     	;# 
  1136  0E96                     	;# 
  1137  0E97                     	;# 
  1138  0E9C                     	;# 
  1139  0E9D                     	;# 
  1140  0E9E                     	;# 
  1141  0EA1                     	;# 
  1142  0EA2                     	;# 
  1143  0EA3                     	;# 
  1144  0EA4                     	;# 
  1145  0EA5                     	;# 
  1146  0EA9                     	;# 
  1147  0EAA                     	;# 
  1148  0EAB                     	;# 
  1149  0EAC                     	;# 
  1150  0EB1                     	;# 
  1151  0EB2                     	;# 
  1152  0EB3                     	;# 
  1153  0EB8                     	;# 
  1154  0EB9                     	;# 
  1155  0EBA                     	;# 
  1156  0EBB                     	;# 
  1157  0EBC                     	;# 
  1158  0EBD                     	;# 
  1159  0EBE                     	;# 
  1160  0EC3                     	;# 
  1161  0EC5                     	;# 
  1162  0EC6                     	;# 
  1163  0EC7                     	;# 
  1164  0EC8                     	;# 
  1165  0EC9                     	;# 
  1166  0ECA                     	;# 
  1167  0ECB                     	;# 
  1168  0ECC                     	;# 
  1169  0F10                     	;# 
  1170  0F11                     	;# 
  1171  0F12                     	;# 
  1172  0F13                     	;# 
  1173  0F14                     	;# 
  1174  0F15                     	;# 
  1175  0F16                     	;# 
  1176  0F17                     	;# 
  1177  0F18                     	;# 
  1178  0F19                     	;# 
  1179  0F1A                     	;# 
  1180  0F1B                     	;# 
  1181  0F1C                     	;# 
  1182  0F1D                     	;# 
  1183  0F1E                     	;# 
  1184  0F1F                     	;# 
  1185  0F20                     	;# 
  1186  0F21                     	;# 
  1187  0F22                     	;# 
  1188  0F23                     	;# 
  1189  0F24                     	;# 
  1190  0F25                     	;# 
  1191  0F26                     	;# 
  1192  0F27                     	;# 
  1193  0F28                     	;# 
  1194  0F29                     	;# 
  1195  0F2A                     	;# 
  1196  0F2B                     	;# 
  1197  0F2C                     	;# 
  1198  0F2D                     	;# 
  1199  0F2E                     	;# 
  1200  0F2F                     	;# 
  1201  0F30                     	;# 
  1202  0F31                     	;# 
  1203  0F32                     	;# 
  1204  0F38                     	;# 
  1205  0F39                     	;# 
  1206  0F3A                     	;# 
  1207  0F3B                     	;# 
  1208  0F3C                     	;# 
  1209  0F3D                     	;# 
  1210  0F3E                     	;# 
  1211  0F3F                     	;# 
  1212  0F40                     	;# 
  1213  0F41                     	;# 
  1214  0F43                     	;# 
  1215  0F44                     	;# 
  1216  0F45                     	;# 
  1217  0F46                     	;# 
  1218  0F47                     	;# 
  1219  0F48                     	;# 
  1220  0F49                     	;# 
  1221  0F4A                     	;# 
  1222  0F4B                     	;# 
  1223  0F4C                     	;# 
  1224  0F4E                     	;# 
  1225  0F4F                     	;# 
  1226  0F50                     	;# 
  1227  0F51                     	;# 
  1228  0F52                     	;# 
  1229  0F53                     	;# 
  1230  0F54                     	;# 
  1231  0F55                     	;# 
  1232  0F56                     	;# 
  1233  0F57                     	;# 
  1234  0F59                     	;# 
  1235  0F5A                     	;# 
  1236  0F5B                     	;# 
  1237  0F5C                     	;# 
  1238  0F5D                     	;# 
  1239  0F61                     	;# 
  1240  0F62                     	;# 
  1241  0F64                     	;# 
  1242  0F65                     	;# 
  1243  0F66                     	;# 
  1244  0F67                     	;# 
  1245  0F68                     	;# 
  1246  0F69                     	;# 
  1247  0F6A                     	;# 
  1248  0F6B                     	;# 
  1249  0F6C                     	;# 
  1250  0F6D                     	;# 
  1251  0FE4                     	;# 
  1252  0FE5                     	;# 
  1253  0FE6                     	;# 
  1254  0FE7                     	;# 
  1255  0FE8                     	;# 
  1256  0FE9                     	;# 
  1257  0FEA                     	;# 
  1258  0FEB                     	;# 
  1259  0FED                     	;# 
  1260  0FEE                     	;# 
  1261  0FEF                     	;# 
  1262  0000                     	;# 
  1263  0001                     	;# 
  1264  0002                     	;# 
  1265  0003                     	;# 
  1266  0004                     	;# 
  1267  0005                     	;# 
  1268  0006                     	;# 
  1269  0007                     	;# 
  1270  0008                     	;# 
  1271  0009                     	;# 
  1272  000A                     	;# 
  1273  000B                     	;# 
  1274  000C                     	;# 
  1275  000D                     	;# 
  1276  000E                     	;# 
  1277  000F                     	;# 
  1278  0010                     	;# 
  1279  0011                     	;# 
  1280  0012                     	;# 
  1281  0013                     	;# 
  1282  0014                     	;# 
  1283  0015                     	;# 
  1284  0016                     	;# 
  1285  0017                     	;# 
  1286  0018                     	;# 
  1287  0019                     	;# 
  1288  001A                     	;# 
  1289  001C                     	;# 
  1290  001C                     	;# 
  1291  001D                     	;# 
  1292  001D                     	;# 
  1293  001E                     	;# 
  1294  001F                     	;# 
  1295  008C                     	;# 
  1296  008C                     	;# 
  1297  008D                     	;# 
  1298  008E                     	;# 
  1299  008E                     	;# 
  1300  008F                     	;# 
  1301  0090                     	;# 
  1302  0090                     	;# 
  1303  0091                     	;# 
  1304  0093                     	;# 
  1305  0094                     	;# 
  1306  0095                     	;# 
  1307  0096                     	;# 
  1308  0097                     	;# 
  1309  0098                     	;# 
  1310  0099                     	;# 
  1311  009A                     	;# 
  1312  009B                     	;# 
  1313  009C                     	;# 
  1314  009D                     	;# 
  1315  009E                     	;# 
  1316  010C                     	;# 
  1317  010D                     	;# 
  1318  010E                     	;# 
  1319  010E                     	;# 
  1320  010F                     	;# 
  1321  0110                     	;# 
  1322  0110                     	;# 
  1323  0111                     	;# 
  1324  0112                     	;# 
  1325  0112                     	;# 
  1326  0113                     	;# 
  1327  0114                     	;# 
  1328  0114                     	;# 
  1329  0115                     	;# 
  1330  0116                     	;# 
  1331  0116                     	;# 
  1332  0117                     	;# 
  1333  0119                     	;# 
  1334  0119                     	;# 
  1335  0119                     	;# 
  1336  011A                     	;# 
  1337  011A                     	;# 
  1338  011A                     	;# 
  1339  011B                     	;# 
  1340  011B                     	;# 
  1341  011B                     	;# 
  1342  011B                     	;# 
  1343  011B                     	;# 
  1344  011C                     	;# 
  1345  011C                     	;# 
  1346  011C                     	;# 
  1347  011D                     	;# 
  1348  011D                     	;# 
  1349  011D                     	;# 
  1350  011E                     	;# 
  1351  011E                     	;# 
  1352  011E                     	;# 
  1353  011F                     	;# 
  1354  011F                     	;# 
  1355  011F                     	;# 
  1356  011F                     	;# 
  1357  011F                     	;# 
  1358  018C                     	;# 
  1359  018D                     	;# 
  1360  018E                     	;# 
  1361  018F                     	;# 
  1362  0190                     	;# 
  1363  0191                     	;# 
  1364  0192                     	;# 
  1365  0196                     	;# 
  1366  0197                     	;# 
  1367  0198                     	;# 
  1368  0199                     	;# 
  1369  019A                     	;# 
  1370  019B                     	;# 
  1371  019C                     	;# 
  1372  020C                     	;# 
  1373  020C                     	;# 
  1374  020D                     	;# 
  1375  020E                     	;# 
  1376  020F                     	;# 
  1377  020F                     	;# 
  1378  0210                     	;# 
  1379  0210                     	;# 
  1380  0211                     	;# 
  1381  0211                     	;# 
  1382  0212                     	;# 
  1383  0212                     	;# 
  1384  0213                     	;# 
  1385  0214                     	;# 
  1386  0215                     	;# 
  1387  0215                     	;# 
  1388  0216                     	;# 
  1389  0216                     	;# 
  1390  0217                     	;# 
  1391  0217                     	;# 
  1392  0218                     	;# 
  1393  0218                     	;# 
  1394  0219                     	;# 
  1395  021A                     	;# 
  1396  021B                     	;# 
  1397  021B                     	;# 
  1398  021C                     	;# 
  1399  021C                     	;# 
  1400  021D                     	;# 
  1401  021D                     	;# 
  1402  021E                     	;# 
  1403  021F                     	;# 
  1404  028C                     	;# 
  1405  028C                     	;# 
  1406  028D                     	;# 
  1407  028D                     	;# 
  1408  028E                     	;# 
  1409  028F                     	;# 
  1410  0290                     	;# 
  1411  0290                     	;# 
  1412  0291                     	;# 
  1413  0292                     	;# 
  1414  0292                     	;# 
  1415  0293                     	;# 
  1416  0293                     	;# 
  1417  0294                     	;# 
  1418  0295                     	;# 
  1419  0296                     	;# 
  1420  0296                     	;# 
  1421  0297                     	;# 
  1422  0298                     	;# 
  1423  0298                     	;# 
  1424  0299                     	;# 
  1425  0299                     	;# 
  1426  029A                     	;# 
  1427  029B                     	;# 
  1428  029C                     	;# 
  1429  029C                     	;# 
  1430  029D                     	;# 
  1431  030C                     	;# 
  1432  030C                     	;# 
  1433  030D                     	;# 
  1434  030E                     	;# 
  1435  030F                     	;# 
  1436  0310                     	;# 
  1437  0310                     	;# 
  1438  0311                     	;# 
  1439  0312                     	;# 
  1440  0313                     	;# 
  1441  0314                     	;# 
  1442  0314                     	;# 
  1443  0315                     	;# 
  1444  0316                     	;# 
  1445  0317                     	;# 
  1446  0318                     	;# 
  1447  0318                     	;# 
  1448  0319                     	;# 
  1449  031A                     	;# 
  1450  031B                     	;# 
  1451  031C                     	;# 
  1452  031C                     	;# 
  1453  031D                     	;# 
  1454  031E                     	;# 
  1455  031F                     	;# 
  1456  038C                     	;# 
  1457  038C                     	;# 
  1458  038D                     	;# 
  1459  038E                     	;# 
  1460  0390                     	;# 
  1461  0390                     	;# 
  1462  0391                     	;# 
  1463  0392                     	;# 
  1464  040C                     	;# 
  1465  040D                     	;# 
  1466  040E                     	;# 
  1467  040F                     	;# 
  1468  0410                     	;# 
  1469  0411                     	;# 
  1470  0416                     	;# 
  1471  0416                     	;# 
  1472  0417                     	;# 
  1473  0418                     	;# 
  1474  0418                     	;# 
  1475  0419                     	;# 
  1476  041A                     	;# 
  1477  041A                     	;# 
  1478  041B                     	;# 
  1479  041C                     	;# 
  1480  041C                     	;# 
  1481  041D                     	;# 
  1482  041E                     	;# 
  1483  041F                     	;# 
  1484  048C                     	;# 
  1485  048C                     	;# 
  1486  048D                     	;# 
  1487  048E                     	;# 
  1488  048F                     	;# 
  1489  048F                     	;# 
  1490  0490                     	;# 
  1491  0491                     	;# 
  1492  0492                     	;# 
  1493  0492                     	;# 
  1494  0493                     	;# 
  1495  0494                     	;# 
  1496  0495                     	;# 
  1497  0495                     	;# 
  1498  0496                     	;# 
  1499  0497                     	;# 
  1500  0498                     	;# 
  1501  0499                     	;# 
  1502  049A                     	;# 
  1503  049B                     	;# 
  1504  049C                     	;# 
  1505  049D                     	;# 
  1506  050C                     	;# 
  1507  050C                     	;# 
  1508  050D                     	;# 
  1509  050E                     	;# 
  1510  050F                     	;# 
  1511  050F                     	;# 
  1512  0510                     	;# 
  1513  0511                     	;# 
  1514  0512                     	;# 
  1515  0512                     	;# 
  1516  0513                     	;# 
  1517  0514                     	;# 
  1518  0515                     	;# 
  1519  0515                     	;# 
  1520  0516                     	;# 
  1521  0517                     	;# 
  1522  0518                     	;# 
  1523  0519                     	;# 
  1524  051A                     	;# 
  1525  051B                     	;# 
  1526  051C                     	;# 
  1527  051D                     	;# 
  1528  058C                     	;# 
  1529  058C                     	;# 
  1530  058D                     	;# 
  1531  058E                     	;# 
  1532  058F                     	;# 
  1533  058F                     	;# 
  1534  0590                     	;# 
  1535  0591                     	;# 
  1536  0592                     	;# 
  1537  0593                     	;# 
  1538  060C                     	;# 
  1539  060D                     	;# 
  1540  060E                     	;# 
  1541  060F                     	;# 
  1542  0610                     	;# 
  1543  0611                     	;# 
  1544  0612                     	;# 
  1545  0613                     	;# 
  1546  0614                     	;# 
  1547  0616                     	;# 
  1548  0617                     	;# 
  1549  0618                     	;# 
  1550  0619                     	;# 
  1551  061A                     	;# 
  1552  061B                     	;# 
  1553  061C                     	;# 
  1554  061D                     	;# 
  1555  061E                     	;# 
  1556  068C                     	;# 
  1557  068D                     	;# 
  1558  068E                     	;# 
  1559  068F                     	;# 
  1560  0690                     	;# 
  1561  0691                     	;# 
  1562  0692                     	;# 
  1563  0693                     	;# 
  1564  0694                     	;# 
  1565  070C                     	;# 
  1566  070D                     	;# 
  1567  070E                     	;# 
  1568  070F                     	;# 
  1569  0710                     	;# 
  1570  0711                     	;# 
  1571  0712                     	;# 
  1572  0713                     	;# 
  1573  0714                     	;# 
  1574  0716                     	;# 
  1575  0717                     	;# 
  1576  0718                     	;# 
  1577  0719                     	;# 
  1578  071A                     	;# 
  1579  071B                     	;# 
  1580  071C                     	;# 
  1581  071D                     	;# 
  1582  071E                     	;# 
  1583  0796                     	;# 
  1584  0797                     	;# 
  1585  0798                     	;# 
  1586  0799                     	;# 
  1587  079A                     	;# 
  1588  079B                     	;# 
  1589  080C                     	;# 
  1590  080D                     	;# 
  1591  080E                     	;# 
  1592  080F                     	;# 
  1593  0810                     	;# 
  1594  0811                     	;# 
  1595  0812                     	;# 
  1596  0813                     	;# 
  1597  0814                     	;# 
  1598  081A                     	;# 
  1599  081B                     	;# 
  1600  081C                     	;# 
  1601  081D                     	;# 
  1602  081E                     	;# 
  1603  081F                     	;# 
  1604  088C                     	;# 
  1605  088D                     	;# 
  1606  088E                     	;# 
  1607  088F                     	;# 
  1608  0890                     	;# 
  1609  0891                     	;# 
  1610  0892                     	;# 
  1611  0893                     	;# 
  1612  0895                     	;# 
  1613  0896                     	;# 
  1614  0897                     	;# 
  1615  0898                     	;# 
  1616  0899                     	;# 
  1617  089A                     	;# 
  1618  089B                     	;# 
  1619  090C                     	;# 
  1620  090E                     	;# 
  1621  090F                     	;# 
  1622  091F                     	;# 
  1623  091F                     	;# 
  1624  098F                     	;# 
  1625  098F                     	;# 
  1626  0990                     	;# 
  1627  0991                     	;# 
  1628  0992                     	;# 
  1629  0993                     	;# 
  1630  0994                     	;# 
  1631  0995                     	;# 
  1632  0996                     	;# 
  1633  0997                     	;# 
  1634  0E0F                     	;# 
  1635  0E10                     	;# 
  1636  0E11                     	;# 
  1637  0E12                     	;# 
  1638  0E13                     	;# 
  1639  0E14                     	;# 
  1640  0E15                     	;# 
  1641  0E16                     	;# 
  1642  0E17                     	;# 
  1643  0E18                     	;# 
  1644  0E19                     	;# 
  1645  0E1A                     	;# 
  1646  0E1B                     	;# 
  1647  0E1C                     	;# 
  1648  0E1D                     	;# 
  1649  0E1E                     	;# 
  1650  0E1F                     	;# 
  1651  0E20                     	;# 
  1652  0E21                     	;# 
  1653  0E22                     	;# 
  1654  0E23                     	;# 
  1655  0E24                     	;# 
  1656  0E25                     	;# 
  1657  0E26                     	;# 
  1658  0E27                     	;# 
  1659  0E28                     	;# 
  1660  0E29                     	;# 
  1661  0E2A                     	;# 
  1662  0E2B                     	;# 
  1663  0E2C                     	;# 
  1664  0E2D                     	;# 
  1665  0E2E                     	;# 
  1666  0E2F                     	;# 
  1667  0E30                     	;# 
  1668  0E31                     	;# 
  1669  0E32                     	;# 
  1670  0E33                     	;# 
  1671  0E34                     	;# 
  1672  0E35                     	;# 
  1673  0E36                     	;# 
  1674  0E37                     	;# 
  1675  0E8F                     	;# 
  1676  0E90                     	;# 
  1677  0E91                     	;# 
  1678  0E92                     	;# 
  1679  0E93                     	;# 
  1680  0E94                     	;# 
  1681  0E95                     	;# 
  1682  0E96                     	;# 
  1683  0E97                     	;# 
  1684  0E9C                     	;# 
  1685  0E9D                     	;# 
  1686  0E9E                     	;# 
  1687  0EA1                     	;# 
  1688  0EA2                     	;# 
  1689  0EA3                     	;# 
  1690  0EA4                     	;# 
  1691  0EA5                     	;# 
  1692  0EA9                     	;# 
  1693  0EAA                     	;# 
  1694  0EAB                     	;# 
  1695  0EAC                     	;# 
  1696  0EB1                     	;# 
  1697  0EB2                     	;# 
  1698  0EB3                     	;# 
  1699  0EB8                     	;# 
  1700  0EB9                     	;# 
  1701  0EBA                     	;# 
  1702  0EBB                     	;# 
  1703  0EBC                     	;# 
  1704  0EBD                     	;# 
  1705  0EBE                     	;# 
  1706  0EC3                     	;# 
  1707  0EC5                     	;# 
  1708  0EC6                     	;# 
  1709  0EC7                     	;# 
  1710  0EC8                     	;# 
  1711  0EC9                     	;# 
  1712  0ECA                     	;# 
  1713  0ECB                     	;# 
  1714  0ECC                     	;# 
  1715  0F10                     	;# 
  1716  0F11                     	;# 
  1717  0F12                     	;# 
  1718  0F13                     	;# 
  1719  0F14                     	;# 
  1720  0F15                     	;# 
  1721  0F16                     	;# 
  1722  0F17                     	;# 
  1723  0F18                     	;# 
  1724  0F19                     	;# 
  1725  0F1A                     	;# 
  1726  0F1B                     	;# 
  1727  0F1C                     	;# 
  1728  0F1D                     	;# 
  1729  0F1E                     	;# 
  1730  0F1F                     	;# 
  1731  0F20                     	;# 
  1732  0F21                     	;# 
  1733  0F22                     	;# 
  1734  0F23                     	;# 
  1735  0F24                     	;# 
  1736  0F25                     	;# 
  1737  0F26                     	;# 
  1738  0F27                     	;# 
  1739  0F28                     	;# 
  1740  0F29                     	;# 
  1741  0F2A                     	;# 
  1742  0F2B                     	;# 
  1743  0F2C                     	;# 
  1744  0F2D                     	;# 
  1745  0F2E                     	;# 
  1746  0F2F                     	;# 
  1747  0F30                     	;# 
  1748  0F31                     	;# 
  1749  0F32                     	;# 
  1750  0F38                     	;# 
  1751  0F39                     	;# 
  1752  0F3A                     	;# 
  1753  0F3B                     	;# 
  1754  0F3C                     	;# 
  1755  0F3D                     	;# 
  1756  0F3E                     	;# 
  1757  0F3F                     	;# 
  1758  0F40                     	;# 
  1759  0F41                     	;# 
  1760  0F43                     	;# 
  1761  0F44                     	;# 
  1762  0F45                     	;# 
  1763  0F46                     	;# 
  1764  0F47                     	;# 
  1765  0F48                     	;# 
  1766  0F49                     	;# 
  1767  0F4A                     	;# 
  1768  0F4B                     	;# 
  1769  0F4C                     	;# 
  1770  0F4E                     	;# 
  1771  0F4F                     	;# 
  1772  0F50                     	;# 
  1773  0F51                     	;# 
  1774  0F52                     	;# 
  1775  0F53                     	;# 
  1776  0F54                     	;# 
  1777  0F55                     	;# 
  1778  0F56                     	;# 
  1779  0F57                     	;# 
  1780  0F59                     	;# 
  1781  0F5A                     	;# 
  1782  0F5B                     	;# 
  1783  0F5C                     	;# 
  1784  0F5D                     	;# 
  1785  0F61                     	;# 
  1786  0F62                     	;# 
  1787  0F64                     	;# 
  1788  0F65                     	;# 
  1789  0F66                     	;# 
  1790  0F67                     	;# 
  1791  0F68                     	;# 
  1792  0F69                     	;# 
  1793  0F6A                     	;# 
  1794  0F6B                     	;# 
  1795  0F6C                     	;# 
  1796  0F6D                     	;# 
  1797  0FE4                     	;# 
  1798  0FE5                     	;# 
  1799  0FE6                     	;# 
  1800  0FE7                     	;# 
  1801  0FE8                     	;# 
  1802  0FE9                     	;# 
  1803  0FEA                     	;# 
  1804  0FEB                     	;# 
  1805  0FED                     	;# 
  1806  0FEE                     	;# 
  1807  0FEF                     	;# 
  1808  0000                     	;# 
  1809  0001                     	;# 
  1810  0002                     	;# 
  1811  0003                     	;# 
  1812  0004                     	;# 
  1813  0005                     	;# 
  1814  0006                     	;# 
  1815  0007                     	;# 
  1816  0008                     	;# 
  1817  0009                     	;# 
  1818  000A                     	;# 
  1819  000B                     	;# 
  1820  000C                     	;# 
  1821  000D                     	;# 
  1822  000E                     	;# 
  1823  000F                     	;# 
  1824  0010                     	;# 
  1825  0011                     	;# 
  1826  0012                     	;# 
  1827  0013                     	;# 
  1828  0014                     	;# 
  1829  0015                     	;# 
  1830  0016                     	;# 
  1831  0017                     	;# 
  1832  0018                     	;# 
  1833  0019                     	;# 
  1834  001A                     	;# 
  1835  001C                     	;# 
  1836  001C                     	;# 
  1837  001D                     	;# 
  1838  001D                     	;# 
  1839  001E                     	;# 
  1840  001F                     	;# 
  1841  008C                     	;# 
  1842  008C                     	;# 
  1843  008D                     	;# 
  1844  008E                     	;# 
  1845  008E                     	;# 
  1846  008F                     	;# 
  1847  0090                     	;# 
  1848  0090                     	;# 
  1849  0091                     	;# 
  1850  0093                     	;# 
  1851  0094                     	;# 
  1852  0095                     	;# 
  1853  0096                     	;# 
  1854  0097                     	;# 
  1855  0098                     	;# 
  1856  0099                     	;# 
  1857  009A                     	;# 
  1858  009B                     	;# 
  1859  009C                     	;# 
  1860  009D                     	;# 
  1861  009E                     	;# 
  1862  010C                     	;# 
  1863  010D                     	;# 
  1864  010E                     	;# 
  1865  010E                     	;# 
  1866  010F                     	;# 
  1867  0110                     	;# 
  1868  0110                     	;# 
  1869  0111                     	;# 
  1870  0112                     	;# 
  1871  0112                     	;# 
  1872  0113                     	;# 
  1873  0114                     	;# 
  1874  0114                     	;# 
  1875  0115                     	;# 
  1876  0116                     	;# 
  1877  0116                     	;# 
  1878  0117                     	;# 
  1879  0119                     	;# 
  1880  0119                     	;# 
  1881  0119                     	;# 
  1882  011A                     	;# 
  1883  011A                     	;# 
  1884  011A                     	;# 
  1885  011B                     	;# 
  1886  011B                     	;# 
  1887  011B                     	;# 
  1888  011B                     	;# 
  1889  011B                     	;# 
  1890  011C                     	;# 
  1891  011C                     	;# 
  1892  011C                     	;# 
  1893  011D                     	;# 
  1894  011D                     	;# 
  1895  011D                     	;# 
  1896  011E                     	;# 
  1897  011E                     	;# 
  1898  011E                     	;# 
  1899  011F                     	;# 
  1900  011F                     	;# 
  1901  011F                     	;# 
  1902  011F                     	;# 
  1903  011F                     	;# 
  1904  018C                     	;# 
  1905  018D                     	;# 
  1906  018E                     	;# 
  1907  018F                     	;# 
  1908  0190                     	;# 
  1909  0191                     	;# 
  1910  0192                     	;# 
  1911  0196                     	;# 
  1912  0197                     	;# 
  1913  0198                     	;# 
  1914  0199                     	;# 
  1915  019A                     	;# 
  1916  019B                     	;# 
  1917  019C                     	;# 
  1918  020C                     	;# 
  1919  020C                     	;# 
  1920  020D                     	;# 
  1921  020E                     	;# 
  1922  020F                     	;# 
  1923  020F                     	;# 
  1924  0210                     	;# 
  1925  0210                     	;# 
  1926  0211                     	;# 
  1927  0211                     	;# 
  1928  0212                     	;# 
  1929  0212                     	;# 
  1930  0213                     	;# 
  1931  0214                     	;# 
  1932  0215                     	;# 
  1933  0215                     	;# 
  1934  0216                     	;# 
  1935  0216                     	;# 
  1936  0217                     	;# 
  1937  0217                     	;# 
  1938  0218                     	;# 
  1939  0218                     	;# 
  1940  0219                     	;# 
  1941  021A                     	;# 
  1942  021B                     	;# 
  1943  021B                     	;# 
  1944  021C                     	;# 
  1945  021C                     	;# 
  1946  021D                     	;# 
  1947  021D                     	;# 
  1948  021E                     	;# 
  1949  021F                     	;# 
  1950  028C                     	;# 
  1951  028C                     	;# 
  1952  028D                     	;# 
  1953  028D                     	;# 
  1954  028E                     	;# 
  1955  028F                     	;# 
  1956  0290                     	;# 
  1957  0290                     	;# 
  1958  0291                     	;# 
  1959  0292                     	;# 
  1960  0292                     	;# 
  1961  0293                     	;# 
  1962  0293                     	;# 
  1963  0294                     	;# 
  1964  0295                     	;# 
  1965  0296                     	;# 
  1966  0296                     	;# 
  1967  0297                     	;# 
  1968  0298                     	;# 
  1969  0298                     	;# 
  1970  0299                     	;# 
  1971  0299                     	;# 
  1972  029A                     	;# 
  1973  029B                     	;# 
  1974  029C                     	;# 
  1975  029C                     	;# 
  1976  029D                     	;# 
  1977  030C                     	;# 
  1978  030C                     	;# 
  1979  030D                     	;# 
  1980  030E                     	;# 
  1981  030F                     	;# 
  1982  0310                     	;# 
  1983  0310                     	;# 
  1984  0311                     	;# 
  1985  0312                     	;# 
  1986  0313                     	;# 
  1987  0314                     	;# 
  1988  0314                     	;# 
  1989  0315                     	;# 
  1990  0316                     	;# 
  1991  0317                     	;# 
  1992  0318                     	;# 
  1993  0318                     	;# 
  1994  0319                     	;# 
  1995  031A                     	;# 
  1996  031B                     	;# 
  1997  031C                     	;# 
  1998  031C                     	;# 
  1999  031D                     	;# 
  2000  031E                     	;# 
  2001  031F                     	;# 
  2002  038C                     	;# 
  2003  038C                     	;# 
  2004  038D                     	;# 
  2005  038E                     	;# 
  2006  0390                     	;# 
  2007  0390                     	;# 
  2008  0391                     	;# 
  2009  0392                     	;# 
  2010  040C                     	;# 
  2011  040D                     	;# 
  2012  040E                     	;# 
  2013  040F                     	;# 
  2014  0410                     	;# 
  2015  0411                     	;# 
  2016  0416                     	;# 
  2017  0416                     	;# 
  2018  0417                     	;# 
  2019  0418                     	;# 
  2020  0418                     	;# 
  2021  0419                     	;# 
  2022  041A                     	;# 
  2023  041A                     	;# 
  2024  041B                     	;# 
  2025  041C                     	;# 
  2026  041C                     	;# 
  2027  041D                     	;# 
  2028  041E                     	;# 
  2029  041F                     	;# 
  2030  048C                     	;# 
  2031  048C                     	;# 
  2032  048D                     	;# 
  2033  048E                     	;# 
  2034  048F                     	;# 
  2035  048F                     	;# 
  2036  0490                     	;# 
  2037  0491                     	;# 
  2038  0492                     	;# 
  2039  0492                     	;# 
  2040  0493                     	;# 
  2041  0494                     	;# 
  2042  0495                     	;# 
  2043  0495                     	;# 
  2044  0496                     	;# 
  2045  0497                     	;# 
  2046  0498                     	;# 
  2047  0499                     	;# 
  2048  049A                     	;# 
  2049  049B                     	;# 
  2050  049C                     	;# 
  2051  049D                     	;# 
  2052  050C                     	;# 
  2053  050C                     	;# 
  2054  050D                     	;# 
  2055  050E                     	;# 
  2056  050F                     	;# 
  2057  050F                     	;# 
  2058  0510                     	;# 
  2059  0511                     	;# 
  2060  0512                     	;# 
  2061  0512                     	;# 
  2062  0513                     	;# 
  2063  0514                     	;# 
  2064  0515                     	;# 
  2065  0515                     	;# 
  2066  0516                     	;# 
  2067  0517                     	;# 
  2068  0518                     	;# 
  2069  0519                     	;# 
  2070  051A                     	;# 
  2071  051B                     	;# 
  2072  051C                     	;# 
  2073  051D                     	;# 
  2074  058C                     	;# 
  2075  058C                     	;# 
  2076  058D                     	;# 
  2077  058E                     	;# 
  2078  058F                     	;# 
  2079  058F                     	;# 
  2080  0590                     	;# 
  2081  0591                     	;# 
  2082  0592                     	;# 
  2083  0593                     	;# 
  2084  060C                     	;# 
  2085  060D                     	;# 
  2086  060E                     	;# 
  2087  060F                     	;# 
  2088  0610                     	;# 
  2089  0611                     	;# 
  2090  0612                     	;# 
  2091  0613                     	;# 
  2092  0614                     	;# 
  2093  0616                     	;# 
  2094  0617                     	;# 
  2095  0618                     	;# 
  2096  0619                     	;# 
  2097  061A                     	;# 
  2098  061B                     	;# 
  2099  061C                     	;# 
  2100  061D                     	;# 
  2101  061E                     	;# 
  2102  068C                     	;# 
  2103  068D                     	;# 
  2104  068E                     	;# 
  2105  068F                     	;# 
  2106  0690                     	;# 
  2107  0691                     	;# 
  2108  0692                     	;# 
  2109  0693                     	;# 
  2110  0694                     	;# 
  2111  070C                     	;# 
  2112  070D                     	;# 
  2113  070E                     	;# 
  2114  070F                     	;# 
  2115  0710                     	;# 
  2116  0711                     	;# 
  2117  0712                     	;# 
  2118  0713                     	;# 
  2119  0714                     	;# 
  2120  0716                     	;# 
  2121  0717                     	;# 
  2122  0718                     	;# 
  2123  0719                     	;# 
  2124  071A                     	;# 
  2125  071B                     	;# 
  2126  071C                     	;# 
  2127  071D                     	;# 
  2128  071E                     	;# 
  2129  0796                     	;# 
  2130  0797                     	;# 
  2131  0798                     	;# 
  2132  0799                     	;# 
  2133  079A                     	;# 
  2134  079B                     	;# 
  2135  080C                     	;# 
  2136  080D                     	;# 
  2137  080E                     	;# 
  2138  080F                     	;# 
  2139  0810                     	;# 
  2140  0811                     	;# 
  2141  0812                     	;# 
  2142  0813                     	;# 
  2143  0814                     	;# 
  2144  081A                     	;# 
  2145  081B                     	;# 
  2146  081C                     	;# 
  2147  081D                     	;# 
  2148  081E                     	;# 
  2149  081F                     	;# 
  2150  088C                     	;# 
  2151  088D                     	;# 
  2152  088E                     	;# 
  2153  088F                     	;# 
  2154  0890                     	;# 
  2155  0891                     	;# 
  2156  0892                     	;# 
  2157  0893                     	;# 
  2158  0895                     	;# 
  2159  0896                     	;# 
  2160  0897                     	;# 
  2161  0898                     	;# 
  2162  0899                     	;# 
  2163  089A                     	;# 
  2164  089B                     	;# 
  2165  090C                     	;# 
  2166  090E                     	;# 
  2167  090F                     	;# 
  2168  091F                     	;# 
  2169  091F                     	;# 
  2170  098F                     	;# 
  2171  098F                     	;# 
  2172  0990                     	;# 
  2173  0991                     	;# 
  2174  0992                     	;# 
  2175  0993                     	;# 
  2176  0994                     	;# 
  2177  0995                     	;# 
  2178  0996                     	;# 
  2179  0997                     	;# 
  2180  0E0F                     	;# 
  2181  0E10                     	;# 
  2182  0E11                     	;# 
  2183  0E12                     	;# 
  2184  0E13                     	;# 
  2185  0E14                     	;# 
  2186  0E15                     	;# 
  2187  0E16                     	;# 
  2188  0E17                     	;# 
  2189  0E18                     	;# 
  2190  0E19                     	;# 
  2191  0E1A                     	;# 
  2192  0E1B                     	;# 
  2193  0E1C                     	;# 
  2194  0E1D                     	;# 
  2195  0E1E                     	;# 
  2196  0E1F                     	;# 
  2197  0E20                     	;# 
  2198  0E21                     	;# 
  2199  0E22                     	;# 
  2200  0E23                     	;# 
  2201  0E24                     	;# 
  2202  0E25                     	;# 
  2203  0E26                     	;# 
  2204  0E27                     	;# 
  2205  0E28                     	;# 
  2206  0E29                     	;# 
  2207  0E2A                     	;# 
  2208  0E2B                     	;# 
  2209  0E2C                     	;# 
  2210  0E2D                     	;# 
  2211  0E2E                     	;# 
  2212  0E2F                     	;# 
  2213  0E30                     	;# 
  2214  0E31                     	;# 
  2215  0E32                     	;# 
  2216  0E33                     	;# 
  2217  0E34                     	;# 
  2218  0E35                     	;# 
  2219  0E36                     	;# 
  2220  0E37                     	;# 
  2221  0E8F                     	;# 
  2222  0E90                     	;# 
  2223  0E91                     	;# 
  2224  0E92                     	;# 
  2225  0E93                     	;# 
  2226  0E94                     	;# 
  2227  0E95                     	;# 
  2228  0E96                     	;# 
  2229  0E97                     	;# 
  2230  0E9C                     	;# 
  2231  0E9D                     	;# 
  2232  0E9E                     	;# 
  2233  0EA1                     	;# 
  2234  0EA2                     	;# 
  2235  0EA3                     	;# 
  2236  0EA4                     	;# 
  2237  0EA5                     	;# 
  2238  0EA9                     	;# 
  2239  0EAA                     	;# 
  2240  0EAB                     	;# 
  2241  0EAC                     	;# 
  2242  0EB1                     	;# 
  2243  0EB2                     	;# 
  2244  0EB3                     	;# 
  2245  0EB8                     	;# 
  2246  0EB9                     	;# 
  2247  0EBA                     	;# 
  2248  0EBB                     	;# 
  2249  0EBC                     	;# 
  2250  0EBD                     	;# 
  2251  0EBE                     	;# 
  2252  0EC3                     	;# 
  2253  0EC5                     	;# 
  2254  0EC6                     	;# 
  2255  0EC7                     	;# 
  2256  0EC8                     	;# 
  2257  0EC9                     	;# 
  2258  0ECA                     	;# 
  2259  0ECB                     	;# 
  2260  0ECC                     	;# 
  2261  0F10                     	;# 
  2262  0F11                     	;# 
  2263  0F12                     	;# 
  2264  0F13                     	;# 
  2265  0F14                     	;# 
  2266  0F15                     	;# 
  2267  0F16                     	;# 
  2268  0F17                     	;# 
  2269  0F18                     	;# 
  2270  0F19                     	;# 
  2271  0F1A                     	;# 
  2272  0F1B                     	;# 
  2273  0F1C                     	;# 
  2274  0F1D                     	;# 
  2275  0F1E                     	;# 
  2276  0F1F                     	;# 
  2277  0F20                     	;# 
  2278  0F21                     	;# 
  2279  0F22                     	;# 
  2280  0F23                     	;# 
  2281  0F24                     	;# 
  2282  0F25                     	;# 
  2283  0F26                     	;# 
  2284  0F27                     	;# 
  2285  0F28                     	;# 
  2286  0F29                     	;# 
  2287  0F2A                     	;# 
  2288  0F2B                     	;# 
  2289  0F2C                     	;# 
  2290  0F2D                     	;# 
  2291  0F2E                     	;# 
  2292  0F2F                     	;# 
  2293  0F30                     	;# 
  2294  0F31                     	;# 
  2295  0F32                     	;# 
  2296  0F38                     	;# 
  2297  0F39                     	;# 
  2298  0F3A                     	;# 
  2299  0F3B                     	;# 
  2300  0F3C                     	;# 
  2301  0F3D                     	;# 
  2302  0F3E                     	;# 
  2303  0F3F                     	;# 
  2304  0F40                     	;# 
  2305  0F41                     	;# 
  2306  0F43                     	;# 
  2307  0F44                     	;# 
  2308  0F45                     	;# 
  2309  0F46                     	;# 
  2310  0F47                     	;# 
  2311  0F48                     	;# 
  2312  0F49                     	;# 
  2313  0F4A                     	;# 
  2314  0F4B                     	;# 
  2315  0F4C                     	;# 
  2316  0F4E                     	;# 
  2317  0F4F                     	;# 
  2318  0F50                     	;# 
  2319  0F51                     	;# 
  2320  0F52                     	;# 
  2321  0F53                     	;# 
  2322  0F54                     	;# 
  2323  0F55                     	;# 
  2324  0F56                     	;# 
  2325  0F57                     	;# 
  2326  0F59                     	;# 
  2327  0F5A                     	;# 
  2328  0F5B                     	;# 
  2329  0F5C                     	;# 
  2330  0F5D                     	;# 
  2331  0F61                     	;# 
  2332  0F62                     	;# 
  2333  0F64                     	;# 
  2334  0F65                     	;# 
  2335  0F66                     	;# 
  2336  0F67                     	;# 
  2337  0F68                     	;# 
  2338  0F69                     	;# 
  2339  0F6A                     	;# 
  2340  0F6B                     	;# 
  2341  0F6C                     	;# 
  2342  0F6D                     	;# 
  2343  0FE4                     	;# 
  2344  0FE5                     	;# 
  2345  0FE6                     	;# 
  2346  0FE7                     	;# 
  2347  0FE8                     	;# 
  2348  0FE9                     	;# 
  2349  0FEA                     	;# 
  2350  0FEB                     	;# 
  2351  0FED                     	;# 
  2352  0FEE                     	;# 
  2353  0FEF                     	;# 
  2354  0000                     	;# 
  2355  0001                     	;# 
  2356  0002                     	;# 
  2357  0003                     	;# 
  2358  0004                     	;# 
  2359  0005                     	;# 
  2360  0006                     	;# 
  2361  0007                     	;# 
  2362  0008                     	;# 
  2363  0009                     	;# 
  2364  000A                     	;# 
  2365  000B                     	;# 
  2366  000C                     	;# 
  2367  000D                     	;# 
  2368  000E                     	;# 
  2369  000F                     	;# 
  2370  0010                     	;# 
  2371  0011                     	;# 
  2372  0012                     	;# 
  2373  0013                     	;# 
  2374  0014                     	;# 
  2375  0015                     	;# 
  2376  0016                     	;# 
  2377  0017                     	;# 
  2378  0018                     	;# 
  2379  0019                     	;# 
  2380  001A                     	;# 
  2381  001C                     	;# 
  2382  001C                     	;# 
  2383  001D                     	;# 
  2384  001D                     	;# 
  2385  001E                     	;# 
  2386  001F                     	;# 
  2387  008C                     	;# 
  2388  008C                     	;# 
  2389  008D                     	;# 
  2390  008E                     	;# 
  2391  008E                     	;# 
  2392  008F                     	;# 
  2393  0090                     	;# 
  2394  0090                     	;# 
  2395  0091                     	;# 
  2396  0093                     	;# 
  2397  0094                     	;# 
  2398  0095                     	;# 
  2399  0096                     	;# 
  2400  0097                     	;# 
  2401  0098                     	;# 
  2402  0099                     	;# 
  2403  009A                     	;# 
  2404  009B                     	;# 
  2405  009C                     	;# 
  2406  009D                     	;# 
  2407  009E                     	;# 
  2408  010C                     	;# 
  2409  010D                     	;# 
  2410  010E                     	;# 
  2411  010E                     	;# 
  2412  010F                     	;# 
  2413  0110                     	;# 
  2414  0110                     	;# 
  2415  0111                     	;# 
  2416  0112                     	;# 
  2417  0112                     	;# 
  2418  0113                     	;# 
  2419  0114                     	;# 
  2420  0114                     	;# 
  2421  0115                     	;# 
  2422  0116                     	;# 
  2423  0116                     	;# 
  2424  0117                     	;# 
  2425  0119                     	;# 
  2426  0119                     	;# 
  2427  0119                     	;# 
  2428  011A                     	;# 
  2429  011A                     	;# 
  2430  011A                     	;# 
  2431  011B                     	;# 
  2432  011B                     	;# 
  2433  011B                     	;# 
  2434  011B                     	;# 
  2435  011B                     	;# 
  2436  011C                     	;# 
  2437  011C                     	;# 
  2438  011C                     	;# 
  2439  011D                     	;# 
  2440  011D                     	;# 
  2441  011D                     	;# 
  2442  011E                     	;# 
  2443  011E                     	;# 
  2444  011E                     	;# 
  2445  011F                     	;# 
  2446  011F                     	;# 
  2447  011F                     	;# 
  2448  011F                     	;# 
  2449  011F                     	;# 
  2450  018C                     	;# 
  2451  018D                     	;# 
  2452  018E                     	;# 
  2453  018F                     	;# 
  2454  0190                     	;# 
  2455  0191                     	;# 
  2456  0192                     	;# 
  2457  0196                     	;# 
  2458  0197                     	;# 
  2459  0198                     	;# 
  2460  0199                     	;# 
  2461  019A                     	;# 
  2462  019B                     	;# 
  2463  019C                     	;# 
  2464  020C                     	;# 
  2465  020C                     	;# 
  2466  020D                     	;# 
  2467  020E                     	;# 
  2468  020F                     	;# 
  2469  020F                     	;# 
  2470  0210                     	;# 
  2471  0210                     	;# 
  2472  0211                     	;# 
  2473  0211                     	;# 
  2474  0212                     	;# 
  2475  0212                     	;# 
  2476  0213                     	;# 
  2477  0214                     	;# 
  2478  0215                     	;# 
  2479  0215                     	;# 
  2480  0216                     	;# 
  2481  0216                     	;# 
  2482  0217                     	;# 
  2483  0217                     	;# 
  2484  0218                     	;# 
  2485  0218                     	;# 
  2486  0219                     	;# 
  2487  021A                     	;# 
  2488  021B                     	;# 
  2489  021B                     	;# 
  2490  021C                     	;# 
  2491  021C                     	;# 
  2492  021D                     	;# 
  2493  021D                     	;# 
  2494  021E                     	;# 
  2495  021F                     	;# 
  2496  028C                     	;# 
  2497  028C                     	;# 
  2498  028D                     	;# 
  2499  028D                     	;# 
  2500  028E                     	;# 
  2501  028F                     	;# 
  2502  0290                     	;# 
  2503  0290                     	;# 
  2504  0291                     	;# 
  2505  0292                     	;# 
  2506  0292                     	;# 
  2507  0293                     	;# 
  2508  0293                     	;# 
  2509  0294                     	;# 
  2510  0295                     	;# 
  2511  0296                     	;# 
  2512  0296                     	;# 
  2513  0297                     	;# 
  2514  0298                     	;# 
  2515  0298                     	;# 
  2516  0299                     	;# 
  2517  0299                     	;# 
  2518  029A                     	;# 
  2519  029B                     	;# 
  2520  029C                     	;# 
  2521  029C                     	;# 
  2522  029D                     	;# 
  2523  030C                     	;# 
  2524  030C                     	;# 
  2525  030D                     	;# 
  2526  030E                     	;# 
  2527  030F                     	;# 
  2528  0310                     	;# 
  2529  0310                     	;# 
  2530  0311                     	;# 
  2531  0312                     	;# 
  2532  0313                     	;# 
  2533  0314                     	;# 
  2534  0314                     	;# 
  2535  0315                     	;# 
  2536  0316                     	;# 
  2537  0317                     	;# 
  2538  0318                     	;# 
  2539  0318                     	;# 
  2540  0319                     	;# 
  2541  031A                     	;# 
  2542  031B                     	;# 
  2543  031C                     	;# 
  2544  031C                     	;# 
  2545  031D                     	;# 
  2546  031E                     	;# 
  2547  031F                     	;# 
  2548  038C                     	;# 
  2549  038C                     	;# 
  2550  038D                     	;# 
  2551  038E                     	;# 
  2552  0390                     	;# 
  2553  0390                     	;# 
  2554  0391                     	;# 
  2555  0392                     	;# 
  2556  040C                     	;# 
  2557  040D                     	;# 
  2558  040E                     	;# 
  2559  040F                     	;# 
  2560  0410                     	;# 
  2561  0411                     	;# 
  2562  0416                     	;# 
  2563  0416                     	;# 
  2564  0417                     	;# 
  2565  0418                     	;# 
  2566  0418                     	;# 
  2567  0419                     	;# 
  2568  041A                     	;# 
  2569  041A                     	;# 
  2570  041B                     	;# 
  2571  041C                     	;# 
  2572  041C                     	;# 
  2573  041D                     	;# 
  2574  041E                     	;# 
  2575  041F                     	;# 
  2576  048C                     	;# 
  2577  048C                     	;# 
  2578  048D                     	;# 
  2579  048E                     	;# 
  2580  048F                     	;# 
  2581  048F                     	;# 
  2582  0490                     	;# 
  2583  0491                     	;# 
  2584  0492                     	;# 
  2585  0492                     	;# 
  2586  0493                     	;# 
  2587  0494                     	;# 
  2588  0495                     	;# 
  2589  0495                     	;# 
  2590  0496                     	;# 
  2591  0497                     	;# 
  2592  0498                     	;# 
  2593  0499                     	;# 
  2594  049A                     	;# 
  2595  049B                     	;# 
  2596  049C                     	;# 
  2597  049D                     	;# 
  2598  050C                     	;# 
  2599  050C                     	;# 
  2600  050D                     	;# 
  2601  050E                     	;# 
  2602  050F                     	;# 
  2603  050F                     	;# 
  2604  0510                     	;# 
  2605  0511                     	;# 
  2606  0512                     	;# 
  2607  0512                     	;# 
  2608  0513                     	;# 
  2609  0514                     	;# 
  2610  0515                     	;# 
  2611  0515                     	;# 
  2612  0516                     	;# 
  2613  0517                     	;# 
  2614  0518                     	;# 
  2615  0519                     	;# 
  2616  051A                     	;# 
  2617  051B                     	;# 
  2618  051C                     	;# 
  2619  051D                     	;# 
  2620  058C                     	;# 
  2621  058C                     	;# 
  2622  058D                     	;# 
  2623  058E                     	;# 
  2624  058F                     	;# 
  2625  058F                     	;# 
  2626  0590                     	;# 
  2627  0591                     	;# 
  2628  0592                     	;# 
  2629  0593                     	;# 
  2630  060C                     	;# 
  2631  060D                     	;# 
  2632  060E                     	;# 
  2633  060F                     	;# 
  2634  0610                     	;# 
  2635  0611                     	;# 
  2636  0612                     	;# 
  2637  0613                     	;# 
  2638  0614                     	;# 
  2639  0616                     	;# 
  2640  0617                     	;# 
  2641  0618                     	;# 
  2642  0619                     	;# 
  2643  061A                     	;# 
  2644  061B                     	;# 
  2645  061C                     	;# 
  2646  061D                     	;# 
  2647  061E                     	;# 
  2648  068C                     	;# 
  2649  068D                     	;# 
  2650  068E                     	;# 
  2651  068F                     	;# 
  2652  0690                     	;# 
  2653  0691                     	;# 
  2654  0692                     	;# 
  2655  0693                     	;# 
  2656  0694                     	;# 
  2657  070C                     	;# 
  2658  070D                     	;# 
  2659  070E                     	;# 
  2660  070F                     	;# 
  2661  0710                     	;# 
  2662  0711                     	;# 
  2663  0712                     	;# 
  2664  0713                     	;# 
  2665  0714                     	;# 
  2666  0716                     	;# 
  2667  0717                     	;# 
  2668  0718                     	;# 
  2669  0719                     	;# 
  2670  071A                     	;# 
  2671  071B                     	;# 
  2672  071C                     	;# 
  2673  071D                     	;# 
  2674  071E                     	;# 
  2675  0796                     	;# 
  2676  0797                     	;# 
  2677  0798                     	;# 
  2678  0799                     	;# 
  2679  079A                     	;# 
  2680  079B                     	;# 
  2681  080C                     	;# 
  2682  080D                     	;# 
  2683  080E                     	;# 
  2684  080F                     	;# 
  2685  0810                     	;# 
  2686  0811                     	;# 
  2687  0812                     	;# 
  2688  0813                     	;# 
  2689  0814                     	;# 
  2690  081A                     	;# 
  2691  081B                     	;# 
  2692  081C                     	;# 
  2693  081D                     	;# 
  2694  081E                     	;# 
  2695  081F                     	;# 
  2696  088C                     	;# 
  2697  088D                     	;# 
  2698  088E                     	;# 
  2699  088F                     	;# 
  2700  0890                     	;# 
  2701  0891                     	;# 
  2702  0892                     	;# 
  2703  0893                     	;# 
  2704  0895                     	;# 
  2705  0896                     	;# 
  2706  0897                     	;# 
  2707  0898                     	;# 
  2708  0899                     	;# 
  2709  089A                     	;# 
  2710  089B                     	;# 
  2711  090C                     	;# 
  2712  090E                     	;# 
  2713  090F                     	;# 
  2714  091F                     	;# 
  2715  091F                     	;# 
  2716  098F                     	;# 
  2717  098F                     	;# 
  2718  0990                     	;# 
  2719  0991                     	;# 
  2720  0992                     	;# 
  2721  0993                     	;# 
  2722  0994                     	;# 
  2723  0995                     	;# 
  2724  0996                     	;# 
  2725  0997                     	;# 
  2726  0E0F                     	;# 
  2727  0E10                     	;# 
  2728  0E11                     	;# 
  2729  0E12                     	;# 
  2730  0E13                     	;# 
  2731  0E14                     	;# 
  2732  0E15                     	;# 
  2733  0E16                     	;# 
  2734  0E17                     	;# 
  2735  0E18                     	;# 
  2736  0E19                     	;# 
  2737  0E1A                     	;# 
  2738  0E1B                     	;# 
  2739  0E1C                     	;# 
  2740  0E1D                     	;# 
  2741  0E1E                     	;# 
  2742  0E1F                     	;# 
  2743  0E20                     	;# 
  2744  0E21                     	;# 
  2745  0E22                     	;# 
  2746  0E23                     	;# 
  2747  0E24                     	;# 
  2748  0E25                     	;# 
  2749  0E26                     	;# 
  2750  0E27                     	;# 
  2751  0E28                     	;# 
  2752  0E29                     	;# 
  2753  0E2A                     	;# 
  2754  0E2B                     	;# 
  2755  0E2C                     	;# 
  2756  0E2D                     	;# 
  2757  0E2E                     	;# 
  2758  0E2F                     	;# 
  2759  0E30                     	;# 
  2760  0E31                     	;# 
  2761  0E32                     	;# 
  2762  0E33                     	;# 
  2763  0E34                     	;# 
  2764  0E35                     	;# 
  2765  0E36                     	;# 
  2766  0E37                     	;# 
  2767  0E8F                     	;# 
  2768  0E90                     	;# 
  2769  0E91                     	;# 
  2770  0E92                     	;# 
  2771  0E93                     	;# 
  2772  0E94                     	;# 
  2773  0E95                     	;# 
  2774  0E96                     	;# 
  2775  0E97                     	;# 
  2776  0E9C                     	;# 
  2777  0E9D                     	;# 
  2778  0E9E                     	;# 
  2779  0EA1                     	;# 
  2780  0EA2                     	;# 
  2781  0EA3                     	;# 
  2782  0EA4                     	;# 
  2783  0EA5                     	;# 
  2784  0EA9                     	;# 
  2785  0EAA                     	;# 
  2786  0EAB                     	;# 
  2787  0EAC                     	;# 
  2788  0EB1                     	;# 
  2789  0EB2                     	;# 
  2790  0EB3                     	;# 
  2791  0EB8                     	;# 
  2792  0EB9                     	;# 
  2793  0EBA                     	;# 
  2794  0EBB                     	;# 
  2795  0EBC                     	;# 
  2796  0EBD                     	;# 
  2797  0EBE                     	;# 
  2798  0EC3                     	;# 
  2799  0EC5                     	;# 
  2800  0EC6                     	;# 
  2801  0EC7                     	;# 
  2802  0EC8                     	;# 
  2803  0EC9                     	;# 
  2804  0ECA                     	;# 
  2805  0ECB                     	;# 
  2806  0ECC                     	;# 
  2807  0F10                     	;# 
  2808  0F11                     	;# 
  2809  0F12                     	;# 
  2810  0F13                     	;# 
  2811  0F14                     	;# 
  2812  0F15                     	;# 
  2813  0F16                     	;# 
  2814  0F17                     	;# 
  2815  0F18                     	;# 
  2816  0F19                     	;# 
  2817  0F1A                     	;# 
  2818  0F1B                     	;# 
  2819  0F1C                     	;# 
  2820  0F1D                     	;# 
  2821  0F1E                     	;# 
  2822  0F1F                     	;# 
  2823  0F20                     	;# 
  2824  0F21                     	;# 
  2825  0F22                     	;# 
  2826  0F23                     	;# 
  2827  0F24                     	;# 
  2828  0F25                     	;# 
  2829  0F26                     	;# 
  2830  0F27                     	;# 
  2831  0F28                     	;# 
  2832  0F29                     	;# 
  2833  0F2A                     	;# 
  2834  0F2B                     	;# 
  2835  0F2C                     	;# 
  2836  0F2D                     	;# 
  2837  0F2E                     	;# 
  2838  0F2F                     	;# 
  2839  0F30                     	;# 
  2840  0F31                     	;# 
  2841  0F32                     	;# 
  2842  0F38                     	;# 
  2843  0F39                     	;# 
  2844  0F3A                     	;# 
  2845  0F3B                     	;# 
  2846  0F3C                     	;# 
  2847  0F3D                     	;# 
  2848  0F3E                     	;# 
  2849  0F3F                     	;# 
  2850  0F40                     	;# 
  2851  0F41                     	;# 
  2852  0F43                     	;# 
  2853  0F44                     	;# 
  2854  0F45                     	;# 
  2855  0F46                     	;# 
  2856  0F47                     	;# 
  2857  0F48                     	;# 
  2858  0F49                     	;# 
  2859  0F4A                     	;# 
  2860  0F4B                     	;# 
  2861  0F4C                     	;# 
  2862  0F4E                     	;# 
  2863  0F4F                     	;# 
  2864  0F50                     	;# 
  2865  0F51                     	;# 
  2866  0F52                     	;# 
  2867  0F53                     	;# 
  2868  0F54                     	;# 
  2869  0F55                     	;# 
  2870  0F56                     	;# 
  2871  0F57                     	;# 
  2872  0F59                     	;# 
  2873  0F5A                     	;# 
  2874  0F5B                     	;# 
  2875  0F5C                     	;# 
  2876  0F5D                     	;# 
  2877  0F61                     	;# 
  2878  0F62                     	;# 
  2879  0F64                     	;# 
  2880  0F65                     	;# 
  2881  0F66                     	;# 
  2882  0F67                     	;# 
  2883  0F68                     	;# 
  2884  0F69                     	;# 
  2885  0F6A                     	;# 
  2886  0F6B                     	;# 
  2887  0F6C                     	;# 
  2888  0F6D                     	;# 
  2889  0FE4                     	;# 
  2890  0FE5                     	;# 
  2891  0FE6                     	;# 
  2892  0FE7                     	;# 
  2893  0FE8                     	;# 
  2894  0FE9                     	;# 
  2895  0FEA                     	;# 
  2896  0FEB                     	;# 
  2897  0FED                     	;# 
  2898  0FEE                     	;# 
  2899  0FEF                     	;# 
  2900  0000                     	;# 
  2901  0001                     	;# 
  2902  0002                     	;# 
  2903  0003                     	;# 
  2904  0004                     	;# 
  2905  0005                     	;# 
  2906  0006                     	;# 
  2907  0007                     	;# 
  2908  0008                     	;# 
  2909  0009                     	;# 
  2910  000A                     	;# 
  2911  000B                     	;# 
  2912  000C                     	;# 
  2913  000D                     	;# 
  2914  000E                     	;# 
  2915  000F                     	;# 
  2916  0010                     	;# 
  2917  0011                     	;# 
  2918  0012                     	;# 
  2919  0013                     	;# 
  2920  0014                     	;# 
  2921  0015                     	;# 
  2922  0016                     	;# 
  2923  0017                     	;# 
  2924  0018                     	;# 
  2925  0019                     	;# 
  2926  001A                     	;# 
  2927  001C                     	;# 
  2928  001C                     	;# 
  2929  001D                     	;# 
  2930  001D                     	;# 
  2931  001E                     	;# 
  2932  001F                     	;# 
  2933  008C                     	;# 
  2934  008C                     	;# 
  2935  008D                     	;# 
  2936  008E                     	;# 
  2937  008E                     	;# 
  2938  008F                     	;# 
  2939  0090                     	;# 
  2940  0090                     	;# 
  2941  0091                     	;# 
  2942  0093                     	;# 
  2943  0094                     	;# 
  2944  0095                     	;# 
  2945  0096                     	;# 
  2946  0097                     	;# 
  2947  0098                     	;# 
  2948  0099                     	;# 
  2949  009A                     	;# 
  2950  009B                     	;# 
  2951  009C                     	;# 
  2952  009D                     	;# 
  2953  009E                     	;# 
  2954  010C                     	;# 
  2955  010D                     	;# 
  2956  010E                     	;# 
  2957  010E                     	;# 
  2958  010F                     	;# 
  2959  0110                     	;# 
  2960  0110                     	;# 
  2961  0111                     	;# 
  2962  0112                     	;# 
  2963  0112                     	;# 
  2964  0113                     	;# 
  2965  0114                     	;# 
  2966  0114                     	;# 
  2967  0115                     	;# 
  2968  0116                     	;# 
  2969  0116                     	;# 
  2970  0117                     	;# 
  2971  0119                     	;# 
  2972  0119                     	;# 
  2973  0119                     	;# 
  2974  011A                     	;# 
  2975  011A                     	;# 
  2976  011A                     	;# 
  2977  011B                     	;# 
  2978  011B                     	;# 
  2979  011B                     	;# 
  2980  011B                     	;# 
  2981  011B                     	;# 
  2982  011C                     	;# 
  2983  011C                     	;# 
  2984  011C                     	;# 
  2985  011D                     	;# 
  2986  011D                     	;# 
  2987  011D                     	;# 
  2988  011E                     	;# 
  2989  011E                     	;# 
  2990  011E                     	;# 
  2991  011F                     	;# 
  2992  011F                     	;# 
  2993  011F                     	;# 
  2994  011F                     	;# 
  2995  011F                     	;# 
  2996  018C                     	;# 
  2997  018D                     	;# 
  2998  018E                     	;# 
  2999  018F                     	;# 
  3000  0190                     	;# 
  3001  0191                     	;# 
  3002  0192                     	;# 
  3003  0196                     	;# 
  3004  0197                     	;# 
  3005  0198                     	;# 
  3006  0199                     	;# 
  3007  019A                     	;# 
  3008  019B                     	;# 
  3009  019C                     	;# 
  3010  020C                     	;# 
  3011  020C                     	;# 
  3012  020D                     	;# 
  3013  020E                     	;# 
  3014  020F                     	;# 
  3015  020F                     	;# 
  3016  0210                     	;# 
  3017  0210                     	;# 
  3018  0211                     	;# 
  3019  0211                     	;# 
  3020  0212                     	;# 
  3021  0212                     	;# 
  3022  0213                     	;# 
  3023  0214                     	;# 
  3024  0215                     	;# 
  3025  0215                     	;# 
  3026  0216                     	;# 
  3027  0216                     	;# 
  3028  0217                     	;# 
  3029  0217                     	;# 
  3030  0218                     	;# 
  3031  0218                     	;# 
  3032  0219                     	;# 
  3033  021A                     	;# 
  3034  021B                     	;# 
  3035  021B                     	;# 
  3036  021C                     	;# 
  3037  021C                     	;# 
  3038  021D                     	;# 
  3039  021D                     	;# 
  3040  021E                     	;# 
  3041  021F                     	;# 
  3042  028C                     	;# 
  3043  028C                     	;# 
  3044  028D                     	;# 
  3045  028D                     	;# 
  3046  028E                     	;# 
  3047  028F                     	;# 
  3048  0290                     	;# 
  3049  0290                     	;# 
  3050  0291                     	;# 
  3051  0292                     	;# 
  3052  0292                     	;# 
  3053  0293                     	;# 
  3054  0293                     	;# 
  3055  0294                     	;# 
  3056  0295                     	;# 
  3057  0296                     	;# 
  3058  0296                     	;# 
  3059  0297                     	;# 
  3060  0298                     	;# 
  3061  0298                     	;# 
  3062  0299                     	;# 
  3063  0299                     	;# 
  3064  029A                     	;# 
  3065  029B                     	;# 
  3066  029C                     	;# 
  3067  029C                     	;# 
  3068  029D                     	;# 
  3069  030C                     	;# 
  3070  030C                     	;# 
  3071  030D                     	;# 
  3072  030E                     	;# 
  3073  030F                     	;# 
  3074  0310                     	;# 
  3075  0310                     	;# 
  3076  0311                     	;# 
  3077  0312                     	;# 
  3078  0313                     	;# 
  3079  0314                     	;# 
  3080  0314                     	;# 
  3081  0315                     	;# 
  3082  0316                     	;# 
  3083  0317                     	;# 
  3084  0318                     	;# 
  3085  0318                     	;# 
  3086  0319                     	;# 
  3087  031A                     	;# 
  3088  031B                     	;# 
  3089  031C                     	;# 
  3090  031C                     	;# 
  3091  031D                     	;# 
  3092  031E                     	;# 
  3093  031F                     	;# 
  3094  038C                     	;# 
  3095  038C                     	;# 
  3096  038D                     	;# 
  3097  038E                     	;# 
  3098  0390                     	;# 
  3099  0390                     	;# 
  3100  0391                     	;# 
  3101  0392                     	;# 
  3102  040C                     	;# 
  3103  040D                     	;# 
  3104  040E                     	;# 
  3105  040F                     	;# 
  3106  0410                     	;# 
  3107  0411                     	;# 
  3108  0416                     	;# 
  3109  0416                     	;# 
  3110  0417                     	;# 
  3111  0418                     	;# 
  3112  0418                     	;# 
  3113  0419                     	;# 
  3114  041A                     	;# 
  3115  041A                     	;# 
  3116  041B                     	;# 
  3117  041C                     	;# 
  3118  041C                     	;# 
  3119  041D                     	;# 
  3120  041E                     	;# 
  3121  041F                     	;# 
  3122  048C                     	;# 
  3123  048C                     	;# 
  3124  048D                     	;# 
  3125  048E                     	;# 
  3126  048F                     	;# 
  3127  048F                     	;# 
  3128  0490                     	;# 
  3129  0491                     	;# 
  3130  0492                     	;# 
  3131  0492                     	;# 
  3132  0493                     	;# 
  3133  0494                     	;# 
  3134  0495                     	;# 
  3135  0495                     	;# 
  3136  0496                     	;# 
  3137  0497                     	;# 
  3138  0498                     	;# 
  3139  0499                     	;# 
  3140  049A                     	;# 
  3141  049B                     	;# 
  3142  049C                     	;# 
  3143  049D                     	;# 
  3144  050C                     	;# 
  3145  050C                     	;# 
  3146  050D                     	;# 
  3147  050E                     	;# 
  3148  050F                     	;# 
  3149  050F                     	;# 
  3150  0510                     	;# 
  3151  0511                     	;# 
  3152  0512                     	;# 
  3153  0512                     	;# 
  3154  0513                     	;# 
  3155  0514                     	;# 
  3156  0515                     	;# 
  3157  0515                     	;# 
  3158  0516                     	;# 
  3159  0517                     	;# 
  3160  0518                     	;# 
  3161  0519                     	;# 
  3162  051A                     	;# 
  3163  051B                     	;# 
  3164  051C                     	;# 
  3165  051D                     	;# 
  3166  058C                     	;# 
  3167  058C                     	;# 
  3168  058D                     	;# 
  3169  058E                     	;# 
  3170  058F                     	;# 
  3171  058F                     	;# 
  3172  0590                     	;# 
  3173  0591                     	;# 
  3174  0592                     	;# 
  3175  0593                     	;# 
  3176  060C                     	;# 
  3177  060D                     	;# 
  3178  060E                     	;# 
  3179  060F                     	;# 
  3180  0610                     	;# 
  3181  0611                     	;# 
  3182  0612                     	;# 
  3183  0613                     	;# 
  3184  0614                     	;# 
  3185  0616                     	;# 
  3186  0617                     	;# 
  3187  0618                     	;# 
  3188  0619                     	;# 
  3189  061A                     	;# 
  3190  061B                     	;# 
  3191  061C                     	;# 
  3192  061D                     	;# 
  3193  061E                     	;# 
  3194  068C                     	;# 
  3195  068D                     	;# 
  3196  068E                     	;# 
  3197  068F                     	;# 
  3198  0690                     	;# 
  3199  0691                     	;# 
  3200  0692                     	;# 
  3201  0693                     	;# 
  3202  0694                     	;# 
  3203  070C                     	;# 
  3204  070D                     	;# 
  3205  070E                     	;# 
  3206  070F                     	;# 
  3207  0710                     	;# 
  3208  0711                     	;# 
  3209  0712                     	;# 
  3210  0713                     	;# 
  3211  0714                     	;# 
  3212  0716                     	;# 
  3213  0717                     	;# 
  3214  0718                     	;# 
  3215  0719                     	;# 
  3216  071A                     	;# 
  3217  071B                     	;# 
  3218  071C                     	;# 
  3219  071D                     	;# 
  3220  071E                     	;# 
  3221  0796                     	;# 
  3222  0797                     	;# 
  3223  0798                     	;# 
  3224  0799                     	;# 
  3225  079A                     	;# 
  3226  079B                     	;# 
  3227  080C                     	;# 
  3228  080D                     	;# 
  3229  080E                     	;# 
  3230  080F                     	;# 
  3231  0810                     	;# 
  3232  0811                     	;# 
  3233  0812                     	;# 
  3234  0813                     	;# 
  3235  0814                     	;# 
  3236  081A                     	;# 
  3237  081B                     	;# 
  3238  081C                     	;# 
  3239  081D                     	;# 
  3240  081E                     	;# 
  3241  081F                     	;# 
  3242  088C                     	;# 
  3243  088D                     	;# 
  3244  088E                     	;# 
  3245  088F                     	;# 
  3246  0890                     	;# 
  3247  0891                     	;# 
  3248  0892                     	;# 
  3249  0893                     	;# 
  3250  0895                     	;# 
  3251  0896                     	;# 
  3252  0897                     	;# 
  3253  0898                     	;# 
  3254  0899                     	;# 
  3255  089A                     	;# 
  3256  089B                     	;# 
  3257  090C                     	;# 
  3258  090E                     	;# 
  3259  090F                     	;# 
  3260  091F                     	;# 
  3261  091F                     	;# 
  3262  098F                     	;# 
  3263  098F                     	;# 
  3264  0990                     	;# 
  3265  0991                     	;# 
  3266  0992                     	;# 
  3267  0993                     	;# 
  3268  0994                     	;# 
  3269  0995                     	;# 
  3270  0996                     	;# 
  3271  0997                     	;# 
  3272  0E0F                     	;# 
  3273  0E10                     	;# 
  3274  0E11                     	;# 
  3275  0E12                     	;# 
  3276  0E13                     	;# 
  3277  0E14                     	;# 
  3278  0E15                     	;# 
  3279  0E16                     	;# 
  3280  0E17                     	;# 
  3281  0E18                     	;# 
  3282  0E19                     	;# 
  3283  0E1A                     	;# 
  3284  0E1B                     	;# 
  3285  0E1C                     	;# 
  3286  0E1D                     	;# 
  3287  0E1E                     	;# 
  3288  0E1F                     	;# 
  3289  0E20                     	;# 
  3290  0E21                     	;# 
  3291  0E22                     	;# 
  3292  0E23                     	;# 
  3293  0E24                     	;# 
  3294  0E25                     	;# 
  3295  0E26                     	;# 
  3296  0E27                     	;# 
  3297  0E28                     	;# 
  3298  0E29                     	;# 
  3299  0E2A                     	;# 
  3300  0E2B                     	;# 
  3301  0E2C                     	;# 
  3302  0E2D                     	;# 
  3303  0E2E                     	;# 
  3304  0E2F                     	;# 
  3305  0E30                     	;# 
  3306  0E31                     	;# 
  3307  0E32                     	;# 
  3308  0E33                     	;# 
  3309  0E34                     	;# 
  3310  0E35                     	;# 
  3311  0E36                     	;# 
  3312  0E37                     	;# 
  3313  0E8F                     	;# 
  3314  0E90                     	;# 
  3315  0E91                     	;# 
  3316  0E92                     	;# 
  3317  0E93                     	;# 
  3318  0E94                     	;# 
  3319  0E95                     	;# 
  3320  0E96                     	;# 
  3321  0E97                     	;# 
  3322  0E9C                     	;# 
  3323  0E9D                     	;# 
  3324  0E9E                     	;# 
  3325  0EA1                     	;# 
  3326  0EA2                     	;# 
  3327  0EA3                     	;# 
  3328  0EA4                     	;# 
  3329  0EA5                     	;# 
  3330  0EA9                     	;# 
  3331  0EAA                     	;# 
  3332  0EAB                     	;# 
  3333  0EAC                     	;# 
  3334  0EB1                     	;# 
  3335  0EB2                     	;# 
  3336  0EB3                     	;# 
  3337  0EB8                     	;# 
  3338  0EB9                     	;# 
  3339  0EBA                     	;# 
  3340  0EBB                     	;# 
  3341  0EBC                     	;# 
  3342  0EBD                     	;# 
  3343  0EBE                     	;# 
  3344  0EC3                     	;# 
  3345  0EC5                     	;# 
  3346  0EC6                     	;# 
  3347  0EC7                     	;# 
  3348  0EC8                     	;# 
  3349  0EC9                     	;# 
  3350  0ECA                     	;# 
  3351  0ECB                     	;# 
  3352  0ECC                     	;# 
  3353  0F10                     	;# 
  3354  0F11                     	;# 
  3355  0F12                     	;# 
  3356  0F13                     	;# 
  3357  0F14                     	;# 
  3358  0F15                     	;# 
  3359  0F16                     	;# 
  3360  0F17                     	;# 
  3361  0F18                     	;# 
  3362  0F19                     	;# 
  3363  0F1A                     	;# 
  3364  0F1B                     	;# 
  3365  0F1C                     	;# 
  3366  0F1D                     	;# 
  3367  0F1E                     	;# 
  3368  0F1F                     	;# 
  3369  0F20                     	;# 
  3370  0F21                     	;# 
  3371  0F22                     	;# 
  3372  0F23                     	;# 
  3373  0F24                     	;# 
  3374  0F25                     	;# 
  3375  0F26                     	;# 
  3376  0F27                     	;# 
  3377  0F28                     	;# 
  3378  0F29                     	;# 
  3379  0F2A                     	;# 
  3380  0F2B                     	;# 
  3381  0F2C                     	;# 
  3382  0F2D                     	;# 
  3383  0F2E                     	;# 
  3384  0F2F                     	;# 
  3385  0F30                     	;# 
  3386  0F31                     	;# 
  3387  0F32                     	;# 
  3388  0F38                     	;# 
  3389  0F39                     	;# 
  3390  0F3A                     	;# 
  3391  0F3B                     	;# 
  3392  0F3C                     	;# 
  3393  0F3D                     	;# 
  3394  0F3E                     	;# 
  3395  0F3F                     	;# 
  3396  0F40                     	;# 
  3397  0F41                     	;# 
  3398  0F43                     	;# 
  3399  0F44                     	;# 
  3400  0F45                     	;# 
  3401  0F46                     	;# 
  3402  0F47                     	;# 
  3403  0F48                     	;# 
  3404  0F49                     	;# 
  3405  0F4A                     	;# 
  3406  0F4B                     	;# 
  3407  0F4C                     	;# 
  3408  0F4E                     	;# 
  3409  0F4F                     	;# 
  3410  0F50                     	;# 
  3411  0F51                     	;# 
  3412  0F52                     	;# 
  3413  0F53                     	;# 
  3414  0F54                     	;# 
  3415  0F55                     	;# 
  3416  0F56                     	;# 
  3417  0F57                     	;# 
  3418  0F59                     	;# 
  3419  0F5A                     	;# 
  3420  0F5B                     	;# 
  3421  0F5C                     	;# 
  3422  0F5D                     	;# 
  3423  0F61                     	;# 
  3424  0F62                     	;# 
  3425  0F64                     	;# 
  3426  0F65                     	;# 
  3427  0F66                     	;# 
  3428  0F67                     	;# 
  3429  0F68                     	;# 
  3430  0F69                     	;# 
  3431  0F6A                     	;# 
  3432  0F6B                     	;# 
  3433  0F6C                     	;# 
  3434  0F6D                     	;# 
  3435  0FE4                     	;# 
  3436  0FE5                     	;# 
  3437  0FE6                     	;# 
  3438  0FE7                     	;# 
  3439  0FE8                     	;# 
  3440  0FE9                     	;# 
  3441  0FEA                     	;# 
  3442  0FEB                     	;# 
  3443  0FED                     	;# 
  3444  0FEE                     	;# 
  3445  0FEF                     	;# 
  3446  0000                     	;# 
  3447  0001                     	;# 
  3448  0002                     	;# 
  3449  0003                     	;# 
  3450  0004                     	;# 
  3451  0005                     	;# 
  3452  0006                     	;# 
  3453  0007                     	;# 
  3454  0008                     	;# 
  3455  0009                     	;# 
  3456  000A                     	;# 
  3457  000B                     	;# 
  3458  000C                     	;# 
  3459  000D                     	;# 
  3460  000E                     	;# 
  3461  000F                     	;# 
  3462  0010                     	;# 
  3463  0011                     	;# 
  3464  0012                     	;# 
  3465  0013                     	;# 
  3466  0014                     	;# 
  3467  0015                     	;# 
  3468  0016                     	;# 
  3469  0017                     	;# 
  3470  0018                     	;# 
  3471  0019                     	;# 
  3472  001A                     	;# 
  3473  001C                     	;# 
  3474  001C                     	;# 
  3475  001D                     	;# 
  3476  001D                     	;# 
  3477  001E                     	;# 
  3478  001F                     	;# 
  3479  008C                     	;# 
  3480  008C                     	;# 
  3481  008D                     	;# 
  3482  008E                     	;# 
  3483  008E                     	;# 
  3484  008F                     	;# 
  3485  0090                     	;# 
  3486  0090                     	;# 
  3487  0091                     	;# 
  3488  0093                     	;# 
  3489  0094                     	;# 
  3490  0095                     	;# 
  3491  0096                     	;# 
  3492  0097                     	;# 
  3493  0098                     	;# 
  3494  0099                     	;# 
  3495  009A                     	;# 
  3496  009B                     	;# 
  3497  009C                     	;# 
  3498  009D                     	;# 
  3499  009E                     	;# 
  3500  010C                     	;# 
  3501  010D                     	;# 
  3502  010E                     	;# 
  3503  010E                     	;# 
  3504  010F                     	;# 
  3505  0110                     	;# 
  3506  0110                     	;# 
  3507  0111                     	;# 
  3508  0112                     	;# 
  3509  0112                     	;# 
  3510  0113                     	;# 
  3511  0114                     	;# 
  3512  0114                     	;# 
  3513  0115                     	;# 
  3514  0116                     	;# 
  3515  0116                     	;# 
  3516  0117                     	;# 
  3517  0119                     	;# 
  3518  0119                     	;# 
  3519  0119                     	;# 
  3520  011A                     	;# 
  3521  011A                     	;# 
  3522  011A                     	;# 
  3523  011B                     	;# 
  3524  011B                     	;# 
  3525  011B                     	;# 
  3526  011B                     	;# 
  3527  011B                     	;# 
  3528  011C                     	;# 
  3529  011C                     	;# 
  3530  011C                     	;# 
  3531  011D                     	;# 
  3532  011D                     	;# 
  3533  011D                     	;# 
  3534  011E                     	;# 
  3535  011E                     	;# 
  3536  011E                     	;# 
  3537  011F                     	;# 
  3538  011F                     	;# 
  3539  011F                     	;# 
  3540  011F                     	;# 
  3541  011F                     	;# 
  3542  018C                     	;# 
  3543  018D                     	;# 
  3544  018E                     	;# 
  3545  018F                     	;# 
  3546  0190                     	;# 
  3547  0191                     	;# 
  3548  0192                     	;# 
  3549  0196                     	;# 
  3550  0197                     	;# 
  3551  0198                     	;# 
  3552  0199                     	;# 
  3553  019A                     	;# 
  3554  019B                     	;# 
  3555  019C                     	;# 
  3556  020C                     	;# 
  3557  020C                     	;# 
  3558  020D                     	;# 
  3559  020E                     	;# 
  3560  020F                     	;# 
  3561  020F                     	;# 
  3562  0210                     	;# 
  3563  0210                     	;# 
  3564  0211                     	;# 
  3565  0211                     	;# 
  3566  0212                     	;# 
  3567  0212                     	;# 
  3568  0213                     	;# 
  3569  0214                     	;# 
  3570  0215                     	;# 
  3571  0215                     	;# 
  3572  0216                     	;# 
  3573  0216                     	;# 
  3574  0217                     	;# 
  3575  0217                     	;# 
  3576  0218                     	;# 
  3577  0218                     	;# 
  3578  0219                     	;# 
  3579  021A                     	;# 
  3580  021B                     	;# 
  3581  021B                     	;# 
  3582  021C                     	;# 
  3583  021C                     	;# 
  3584  021D                     	;# 
  3585  021D                     	;# 
  3586  021E                     	;# 
  3587  021F                     	;# 
  3588  028C                     	;# 
  3589  028C                     	;# 
  3590  028D                     	;# 
  3591  028D                     	;# 
  3592  028E                     	;# 
  3593  028F                     	;# 
  3594  0290                     	;# 
  3595  0290                     	;# 
  3596  0291                     	;# 
  3597  0292                     	;# 
  3598  0292                     	;# 
  3599  0293                     	;# 
  3600  0293                     	;# 
  3601  0294                     	;# 
  3602  0295                     	;# 
  3603  0296                     	;# 
  3604  0296                     	;# 
  3605  0297                     	;# 
  3606  0298                     	;# 
  3607  0298                     	;# 
  3608  0299                     	;# 
  3609  0299                     	;# 
  3610  029A                     	;# 
  3611  029B                     	;# 
  3612  029C                     	;# 
  3613  029C                     	;# 
  3614  029D                     	;# 
  3615  030C                     	;# 
  3616  030C                     	;# 
  3617  030D                     	;# 
  3618  030E                     	;# 
  3619  030F                     	;# 
  3620  0310                     	;# 
  3621  0310                     	;# 
  3622  0311                     	;# 
  3623  0312                     	;# 
  3624  0313                     	;# 
  3625  0314                     	;# 
  3626  0314                     	;# 
  3627  0315                     	;# 
  3628  0316                     	;# 
  3629  0317                     	;# 
  3630  0318                     	;# 
  3631  0318                     	;# 
  3632  0319                     	;# 
  3633  031A                     	;# 
  3634  031B                     	;# 
  3635  031C                     	;# 
  3636  031C                     	;# 
  3637  031D                     	;# 
  3638  031E                     	;# 
  3639  031F                     	;# 
  3640  038C                     	;# 
  3641  038C                     	;# 
  3642  038D                     	;# 
  3643  038E                     	;# 
  3644  0390                     	;# 
  3645  0390                     	;# 
  3646  0391                     	;# 
  3647  0392                     	;# 
  3648  040C                     	;# 
  3649  040D                     	;# 
  3650  040E                     	;# 
  3651  040F                     	;# 
  3652  0410                     	;# 
  3653  0411                     	;# 
  3654  0416                     	;# 
  3655  0416                     	;# 
  3656  0417                     	;# 
  3657  0418                     	;# 
  3658  0418                     	;# 
  3659  0419                     	;# 
  3660  041A                     	;# 
  3661  041A                     	;# 
  3662  041B                     	;# 
  3663  041C                     	;# 
  3664  041C                     	;# 
  3665  041D                     	;# 
  3666  041E                     	;# 
  3667  041F                     	;# 
  3668  048C                     	;# 
  3669  048C                     	;# 
  3670  048D                     	;# 
  3671  048E                     	;# 
  3672  048F                     	;# 
  3673  048F                     	;# 
  3674  0490                     	;# 
  3675  0491                     	;# 
  3676  0492                     	;# 
  3677  0492                     	;# 
  3678  0493                     	;# 
  3679  0494                     	;# 
  3680  0495                     	;# 
  3681  0495                     	;# 
  3682  0496                     	;# 
  3683  0497                     	;# 
  3684  0498                     	;# 
  3685  0499                     	;# 
  3686  049A                     	;# 
  3687  049B                     	;# 
  3688  049C                     	;# 
  3689  049D                     	;# 
  3690  050C                     	;# 
  3691  050C                     	;# 
  3692  050D                     	;# 
  3693  050E                     	;# 
  3694  050F                     	;# 
  3695  050F                     	;# 
  3696  0510                     	;# 
  3697  0511                     	;# 
  3698  0512                     	;# 
  3699  0512                     	;# 
  3700  0513                     	;# 
  3701  0514                     	;# 
  3702  0515                     	;# 
  3703  0515                     	;# 
  3704  0516                     	;# 
  3705  0517                     	;# 
  3706  0518                     	;# 
  3707  0519                     	;# 
  3708  051A                     	;# 
  3709  051B                     	;# 
  3710  051C                     	;# 
  3711  051D                     	;# 
  3712  058C                     	;# 
  3713  058C                     	;# 
  3714  058D                     	;# 
  3715  058E                     	;# 
  3716  058F                     	;# 
  3717  058F                     	;# 
  3718  0590                     	;# 
  3719  0591                     	;# 
  3720  0592                     	;# 
  3721  0593                     	;# 
  3722  060C                     	;# 
  3723  060D                     	;# 
  3724  060E                     	;# 
  3725  060F                     	;# 
  3726  0610                     	;# 
  3727  0611                     	;# 
  3728  0612                     	;# 
  3729  0613                     	;# 
  3730  0614                     	;# 
  3731  0616                     	;# 
  3732  0617                     	;# 
  3733  0618                     	;# 
  3734  0619                     	;# 
  3735  061A                     	;# 
  3736  061B                     	;# 
  3737  061C                     	;# 
  3738  061D                     	;# 
  3739  061E                     	;# 
  3740  068C                     	;# 
  3741  068D                     	;# 
  3742  068E                     	;# 
  3743  068F                     	;# 
  3744  0690                     	;# 
  3745  0691                     	;# 
  3746  0692                     	;# 
  3747  0693                     	;# 
  3748  0694                     	;# 
  3749  070C                     	;# 
  3750  070D                     	;# 
  3751  070E                     	;# 
  3752  070F                     	;# 
  3753  0710                     	;# 
  3754  0711                     	;# 
  3755  0712                     	;# 
  3756  0713                     	;# 
  3757  0714                     	;# 
  3758  0716                     	;# 
  3759  0717                     	;# 
  3760  0718                     	;# 
  3761  0719                     	;# 
  3762  071A                     	;# 
  3763  071B                     	;# 
  3764  071C                     	;# 
  3765  071D                     	;# 
  3766  071E                     	;# 
  3767  0796                     	;# 
  3768  0797                     	;# 
  3769  0798                     	;# 
  3770  0799                     	;# 
  3771  079A                     	;# 
  3772  079B                     	;# 
  3773  080C                     	;# 
  3774  080D                     	;# 
  3775  080E                     	;# 
  3776  080F                     	;# 
  3777  0810                     	;# 
  3778  0811                     	;# 
  3779  0812                     	;# 
  3780  0813                     	;# 
  3781  0814                     	;# 
  3782  081A                     	;# 
  3783  081B                     	;# 
  3784  081C                     	;# 
  3785  081D                     	;# 
  3786  081E                     	;# 
  3787  081F                     	;# 
  3788  088C                     	;# 
  3789  088D                     	;# 
  3790  088E                     	;# 
  3791  088F                     	;# 
  3792  0890                     	;# 
  3793  0891                     	;# 
  3794  0892                     	;# 
  3795  0893                     	;# 
  3796  0895                     	;# 
  3797  0896                     	;# 
  3798  0897                     	;# 
  3799  0898                     	;# 
  3800  0899                     	;# 
  3801  089A                     	;# 
  3802  089B                     	;# 
  3803  090C                     	;# 
  3804  090E                     	;# 
  3805  090F                     	;# 
  3806  091F                     	;# 
  3807  091F                     	;# 
  3808  098F                     	;# 
  3809  098F                     	;# 
  3810  0990                     	;# 
  3811  0991                     	;# 
  3812  0992                     	;# 
  3813  0993                     	;# 
  3814  0994                     	;# 
  3815  0995                     	;# 
  3816  0996                     	;# 
  3817  0997                     	;# 
  3818  0E0F                     	;# 
  3819  0E10                     	;# 
  3820  0E11                     	;# 
  3821  0E12                     	;# 
  3822  0E13                     	;# 
  3823  0E14                     	;# 
  3824  0E15                     	;# 
  3825  0E16                     	;# 
  3826  0E17                     	;# 
  3827  0E18                     	;# 
  3828  0E19                     	;# 
  3829  0E1A                     	;# 
  3830  0E1B                     	;# 
  3831  0E1C                     	;# 
  3832  0E1D                     	;# 
  3833  0E1E                     	;# 
  3834  0E1F                     	;# 
  3835  0E20                     	;# 
  3836  0E21                     	;# 
  3837  0E22                     	;# 
  3838  0E23                     	;# 
  3839  0E24                     	;# 
  3840  0E25                     	;# 
  3841  0E26                     	;# 
  3842  0E27                     	;# 
  3843  0E28                     	;# 
  3844  0E29                     	;# 
  3845  0E2A                     	;# 
  3846  0E2B                     	;# 
  3847  0E2C                     	;# 
  3848  0E2D                     	;# 
  3849  0E2E                     	;# 
  3850  0E2F                     	;# 
  3851  0E30                     	;# 
  3852  0E31                     	;# 
  3853  0E32                     	;# 
  3854  0E33                     	;# 
  3855  0E34                     	;# 
  3856  0E35                     	;# 
  3857  0E36                     	;# 
  3858  0E37                     	;# 
  3859  0E8F                     	;# 
  3860  0E90                     	;# 
  3861  0E91                     	;# 
  3862  0E92                     	;# 
  3863  0E93                     	;# 
  3864  0E94                     	;# 
  3865  0E95                     	;# 
  3866  0E96                     	;# 
  3867  0E97                     	;# 
  3868  0E9C                     	;# 
  3869  0E9D                     	;# 
  3870  0E9E                     	;# 
  3871  0EA1                     	;# 
  3872  0EA2                     	;# 
  3873  0EA3                     	;# 
  3874  0EA4                     	;# 
  3875  0EA5                     	;# 
  3876  0EA9                     	;# 
  3877  0EAA                     	;# 
  3878  0EAB                     	;# 
  3879  0EAC                     	;# 
  3880  0EB1                     	;# 
  3881  0EB2                     	;# 
  3882  0EB3                     	;# 
  3883  0EB8                     	;# 
  3884  0EB9                     	;# 
  3885  0EBA                     	;# 
  3886  0EBB                     	;# 
  3887  0EBC                     	;# 
  3888  0EBD                     	;# 
  3889  0EBE                     	;# 
  3890  0EC3                     	;# 
  3891  0EC5                     	;# 
  3892  0EC6                     	;# 
  3893  0EC7                     	;# 
  3894  0EC8                     	;# 
  3895  0EC9                     	;# 
  3896  0ECA                     	;# 
  3897  0ECB                     	;# 
  3898  0ECC                     	;# 
  3899  0F10                     	;# 
  3900  0F11                     	;# 
  3901  0F12                     	;# 
  3902  0F13                     	;# 
  3903  0F14                     	;# 
  3904  0F15                     	;# 
  3905  0F16                     	;# 
  3906  0F17                     	;# 
  3907  0F18                     	;# 
  3908  0F19                     	;# 
  3909  0F1A                     	;# 
  3910  0F1B                     	;# 
  3911  0F1C                     	;# 
  3912  0F1D                     	;# 
  3913  0F1E                     	;# 
  3914  0F1F                     	;# 
  3915  0F20                     	;# 
  3916  0F21                     	;# 
  3917  0F22                     	;# 
  3918  0F23                     	;# 
  3919  0F24                     	;# 
  3920  0F25                     	;# 
  3921  0F26                     	;# 
  3922  0F27                     	;# 
  3923  0F28                     	;# 
  3924  0F29                     	;# 
  3925  0F2A                     	;# 
  3926  0F2B                     	;# 
  3927  0F2C                     	;# 
  3928  0F2D                     	;# 
  3929  0F2E                     	;# 
  3930  0F2F                     	;# 
  3931  0F30                     	;# 
  3932  0F31                     	;# 
  3933  0F32                     	;# 
  3934  0F38                     	;# 
  3935  0F39                     	;# 
  3936  0F3A                     	;# 
  3937  0F3B                     	;# 
  3938  0F3C                     	;# 
  3939  0F3D                     	;# 
  3940  0F3E                     	;# 
  3941  0F3F                     	;# 
  3942  0F40                     	;# 
  3943  0F41                     	;# 
  3944  0F43                     	;# 
  3945  0F44                     	;# 
  3946  0F45                     	;# 
  3947  0F46                     	;# 
  3948  0F47                     	;# 
  3949  0F48                     	;# 
  3950  0F49                     	;# 
  3951  0F4A                     	;# 
  3952  0F4B                     	;# 
  3953  0F4C                     	;# 
  3954  0F4E                     	;# 
  3955  0F4F                     	;# 
  3956  0F50                     	;# 
  3957  0F51                     	;# 
  3958  0F52                     	;# 
  3959  0F53                     	;# 
  3960  0F54                     	;# 
  3961  0F55                     	;# 
  3962  0F56                     	;# 
  3963  0F57                     	;# 
  3964  0F59                     	;# 
  3965  0F5A                     	;# 
  3966  0F5B                     	;# 
  3967  0F5C                     	;# 
  3968  0F5D                     	;# 
  3969  0F61                     	;# 
  3970  0F62                     	;# 
  3971  0F64                     	;# 
  3972  0F65                     	;# 
  3973  0F66                     	;# 
  3974  0F67                     	;# 
  3975  0F68                     	;# 
  3976  0F69                     	;# 
  3977  0F6A                     	;# 
  3978  0F6B                     	;# 
  3979  0F6C                     	;# 
  3980  0F6D                     	;# 
  3981  0FE4                     	;# 
  3982  0FE5                     	;# 
  3983  0FE6                     	;# 
  3984  0FE7                     	;# 
  3985  0FE8                     	;# 
  3986  0FE9                     	;# 
  3987  0FEA                     	;# 
  3988  0FEB                     	;# 
  3989  0FED                     	;# 
  3990  0FEE                     	;# 
  3991  0FEF                     	;# 
  3992  0000                     	;# 
  3993  0001                     	;# 
  3994  0002                     	;# 
  3995  0003                     	;# 
  3996  0004                     	;# 
  3997  0005                     	;# 
  3998  0006                     	;# 
  3999  0007                     	;# 
  4000  0008                     	;# 
  4001  0009                     	;# 
  4002  000A                     	;# 
  4003  000B                     	;# 
  4004  000C                     	;# 
  4005  000D                     	;# 
  4006  000E                     	;# 
  4007  000F                     	;# 
  4008  0010                     	;# 
  4009  0011                     	;# 
  4010  0012                     	;# 
  4011  0013                     	;# 
  4012  0014                     	;# 
  4013  0015                     	;# 
  4014  0016                     	;# 
  4015  0017                     	;# 
  4016  0018                     	;# 
  4017  0019                     	;# 
  4018  001A                     	;# 
  4019  001C                     	;# 
  4020  001C                     	;# 
  4021  001D                     	;# 
  4022  001D                     	;# 
  4023  001E                     	;# 
  4024  001F                     	;# 
  4025  008C                     	;# 
  4026  008C                     	;# 
  4027  008D                     	;# 
  4028  008E                     	;# 
  4029  008E                     	;# 
  4030  008F                     	;# 
  4031  0090                     	;# 
  4032  0090                     	;# 
  4033  0091                     	;# 
  4034  0093                     	;# 
  4035  0094                     	;# 
  4036  0095                     	;# 
  4037  0096                     	;# 
  4038  0097                     	;# 
  4039  0098                     	;# 
  4040  0099                     	;# 
  4041  009A                     	;# 
  4042  009B                     	;# 
  4043  009C                     	;# 
  4044  009D                     	;# 
  4045  009E                     	;# 
  4046  010C                     	;# 
  4047  010D                     	;# 
  4048  010E                     	;# 
  4049  010E                     	;# 
  4050  010F                     	;# 
  4051  0110                     	;# 
  4052  0110                     	;# 
  4053  0111                     	;# 
  4054  0112                     	;# 
  4055  0112                     	;# 
  4056  0113                     	;# 
  4057  0114                     	;# 
  4058  0114                     	;# 
  4059  0115                     	;# 
  4060  0116                     	;# 
  4061  0116                     	;# 
  4062  0117                     	;# 
  4063  0119                     	;# 
  4064  0119                     	;# 
  4065  0119                     	;# 
  4066  011A                     	;# 
  4067  011A                     	;# 
  4068  011A                     	;# 
  4069  011B                     	;# 
  4070  011B                     	;# 
  4071  011B                     	;# 
  4072  011B                     	;# 
  4073  011B                     	;# 
  4074  011C                     	;# 
  4075  011C                     	;# 
  4076  011C                     	;# 
  4077  011D                     	;# 
  4078  011D                     	;# 
  4079  011D                     	;# 
  4080  011E                     	;# 
  4081  011E                     	;# 
  4082  011E                     	;# 
  4083  011F                     	;# 
  4084  011F                     	;# 
  4085  011F                     	;# 
  4086  011F                     	;# 
  4087  011F                     	;# 
  4088  018C                     	;# 
  4089  018D                     	;# 
  4090  018E                     	;# 
  4091  018F                     	;# 
  4092  0190                     	;# 
  4093  0191                     	;# 
  4094  0192                     	;# 
  4095  0196                     	;# 
  4096  0197                     	;# 
  4097  0198                     	;# 
  4098  0199                     	;# 
  4099  019A                     	;# 
  4100  019B                     	;# 
  4101  019C                     	;# 
  4102  020C                     	;# 
  4103  020C                     	;# 
  4104  020D                     	;# 
  4105  020E                     	;# 
  4106  020F                     	;# 
  4107  020F                     	;# 
  4108  0210                     	;# 
  4109  0210                     	;# 
  4110  0211                     	;# 
  4111  0211                     	;# 
  4112  0212                     	;# 
  4113  0212                     	;# 
  4114  0213                     	;# 
  4115  0214                     	;# 
  4116  0215                     	;# 
  4117  0215                     	;# 
  4118  0216                     	;# 
  4119  0216                     	;# 
  4120  0217                     	;# 
  4121  0217                     	;# 
  4122  0218                     	;# 
  4123  0218                     	;# 
  4124  0219                     	;# 
  4125  021A                     	;# 
  4126  021B                     	;# 
  4127  021B                     	;# 
  4128  021C                     	;# 
  4129  021C                     	;# 
  4130  021D                     	;# 
  4131  021D                     	;# 
  4132  021E                     	;# 
  4133  021F                     	;# 
  4134  028C                     	;# 
  4135  028C                     	;# 
  4136  028D                     	;# 
  4137  028D                     	;# 
  4138  028E                     	;# 
  4139  028F                     	;# 
  4140  0290                     	;# 
  4141  0290                     	;# 
  4142  0291                     	;# 
  4143  0292                     	;# 
  4144  0292                     	;# 
  4145  0293                     	;# 
  4146  0293                     	;# 
  4147  0294                     	;# 
  4148  0295                     	;# 
  4149  0296                     	;# 
  4150  0296                     	;# 
  4151  0297                     	;# 
  4152  0298                     	;# 
  4153  0298                     	;# 
  4154  0299                     	;# 
  4155  0299                     	;# 
  4156  029A                     	;# 
  4157  029B                     	;# 
  4158  029C                     	;# 
  4159  029C                     	;# 
  4160  029D                     	;# 
  4161  030C                     	;# 
  4162  030C                     	;# 
  4163  030D                     	;# 
  4164  030E                     	;# 
  4165  030F                     	;# 
  4166  0310                     	;# 
  4167  0310                     	;# 
  4168  0311                     	;# 
  4169  0312                     	;# 
  4170  0313                     	;# 
  4171  0314                     	;# 
  4172  0314                     	;# 
  4173  0315                     	;# 
  4174  0316                     	;# 
  4175  0317                     	;# 
  4176  0318                     	;# 
  4177  0318                     	;# 
  4178  0319                     	;# 
  4179  031A                     	;# 
  4180  031B                     	;# 
  4181  031C                     	;# 
  4182  031C                     	;# 
  4183  031D                     	;# 
  4184  031E                     	;# 
  4185  031F                     	;# 
  4186  038C                     	;# 
  4187  038C                     	;# 
  4188  038D                     	;# 
  4189  038E                     	;# 
  4190  0390                     	;# 
  4191  0390                     	;# 
  4192  0391                     	;# 
  4193  0392                     	;# 
  4194  040C                     	;# 
  4195  040D                     	;# 
  4196  040E                     	;# 
  4197  040F                     	;# 
  4198  0410                     	;# 
  4199  0411                     	;# 
  4200  0416                     	;# 
  4201  0416                     	;# 
  4202  0417                     	;# 
  4203  0418                     	;# 
  4204  0418                     	;# 
  4205  0419                     	;# 
  4206  041A                     	;# 
  4207  041A                     	;# 
  4208  041B                     	;# 
  4209  041C                     	;# 
  4210  041C                     	;# 
  4211  041D                     	;# 
  4212  041E                     	;# 
  4213  041F                     	;# 
  4214  048C                     	;# 
  4215  048C                     	;# 
  4216  048D                     	;# 
  4217  048E                     	;# 
  4218  048F                     	;# 
  4219  048F                     	;# 
  4220  0490                     	;# 
  4221  0491                     	;# 
  4222  0492                     	;# 
  4223  0492                     	;# 
  4224  0493                     	;# 
  4225  0494                     	;# 
  4226  0495                     	;# 
  4227  0495                     	;# 
  4228  0496                     	;# 
  4229  0497                     	;# 
  4230  0498                     	;# 
  4231  0499                     	;# 
  4232  049A                     	;# 
  4233  049B                     	;# 
  4234  049C                     	;# 
  4235  049D                     	;# 
  4236  050C                     	;# 
  4237  050C                     	;# 
  4238  050D                     	;# 
  4239  050E                     	;# 
  4240  050F                     	;# 
  4241  050F                     	;# 
  4242  0510                     	;# 
  4243  0511                     	;# 
  4244  0512                     	;# 
  4245  0512                     	;# 
  4246  0513                     	;# 
  4247  0514                     	;# 
  4248  0515                     	;# 
  4249  0515                     	;# 
  4250  0516                     	;# 
  4251  0517                     	;# 
  4252  0518                     	;# 
  4253  0519                     	;# 
  4254  051A                     	;# 
  4255  051B                     	;# 
  4256  051C                     	;# 
  4257  051D                     	;# 
  4258  058C                     	;# 
  4259  058C                     	;# 
  4260  058D                     	;# 
  4261  058E                     	;# 
  4262  058F                     	;# 
  4263  058F                     	;# 
  4264  0590                     	;# 
  4265  0591                     	;# 
  4266  0592                     	;# 
  4267  0593                     	;# 
  4268  060C                     	;# 
  4269  060D                     	;# 
  4270  060E                     	;# 
  4271  060F                     	;# 
  4272  0610                     	;# 
  4273  0611                     	;# 
  4274  0612                     	;# 
  4275  0613                     	;# 
  4276  0614                     	;# 
  4277  0616                     	;# 
  4278  0617                     	;# 
  4279  0618                     	;# 
  4280  0619                     	;# 
  4281  061A                     	;# 
  4282  061B                     	;# 
  4283  061C                     	;# 
  4284  061D                     	;# 
  4285  061E                     	;# 
  4286  068C                     	;# 
  4287  068D                     	;# 
  4288  068E                     	;# 
  4289  068F                     	;# 
  4290  0690                     	;# 
  4291  0691                     	;# 
  4292  0692                     	;# 
  4293  0693                     	;# 
  4294  0694                     	;# 
  4295  070C                     	;# 
  4296  070D                     	;# 
  4297  070E                     	;# 
  4298  070F                     	;# 
  4299  0710                     	;# 
  4300  0711                     	;# 
  4301  0712                     	;# 
  4302  0713                     	;# 
  4303  0714                     	;# 
  4304  0716                     	;# 
  4305  0717                     	;# 
  4306  0718                     	;# 
  4307  0719                     	;# 
  4308  071A                     	;# 
  4309  071B                     	;# 
  4310  071C                     	;# 
  4311  071D                     	;# 
  4312  071E                     	;# 
  4313  0796                     	;# 
  4314  0797                     	;# 
  4315  0798                     	;# 
  4316  0799                     	;# 
  4317  079A                     	;# 
  4318  079B                     	;# 
  4319  080C                     	;# 
  4320  080D                     	;# 
  4321  080E                     	;# 
  4322  080F                     	;# 
  4323  0810                     	;# 
  4324  0811                     	;# 
  4325  0812                     	;# 
  4326  0813                     	;# 
  4327  0814                     	;# 
  4328  081A                     	;# 
  4329  081B                     	;# 
  4330  081C                     	;# 
  4331  081D                     	;# 
  4332  081E                     	;# 
  4333  081F                     	;# 
  4334  088C                     	;# 
  4335  088D                     	;# 
  4336  088E                     	;# 
  4337  088F                     	;# 
  4338  0890                     	;# 
  4339  0891                     	;# 
  4340  0892                     	;# 
  4341  0893                     	;# 
  4342  0895                     	;# 
  4343  0896                     	;# 
  4344  0897                     	;# 
  4345  0898                     	;# 
  4346  0899                     	;# 
  4347  089A                     	;# 
  4348  089B                     	;# 
  4349  090C                     	;# 
  4350  090E                     	;# 
  4351  090F                     	;# 
  4352  091F                     	;# 
  4353  091F                     	;# 
  4354  098F                     	;# 
  4355  098F                     	;# 
  4356  0990                     	;# 
  4357  0991                     	;# 
  4358  0992                     	;# 
  4359  0993                     	;# 
  4360  0994                     	;# 
  4361  0995                     	;# 
  4362  0996                     	;# 
  4363  0997                     	;# 
  4364  0E0F                     	;# 
  4365  0E10                     	;# 
  4366  0E11                     	;# 
  4367  0E12                     	;# 
  4368  0E13                     	;# 
  4369  0E14                     	;# 
  4370  0E15                     	;# 
  4371  0E16                     	;# 
  4372  0E17                     	;# 
  4373  0E18                     	;# 
  4374  0E19                     	;# 
  4375  0E1A                     	;# 
  4376  0E1B                     	;# 
  4377  0E1C                     	;# 
  4378  0E1D                     	;# 
  4379  0E1E                     	;# 
  4380  0E1F                     	;# 
  4381  0E20                     	;# 
  4382  0E21                     	;# 
  4383  0E22                     	;# 
  4384  0E23                     	;# 
  4385  0E24                     	;# 
  4386  0E25                     	;# 
  4387  0E26                     	;# 
  4388  0E27                     	;# 
  4389  0E28                     	;# 
  4390  0E29                     	;# 
  4391  0E2A                     	;# 
  4392  0E2B                     	;# 
  4393  0E2C                     	;# 
  4394  0E2D                     	;# 
  4395  0E2E                     	;# 
  4396  0E2F                     	;# 
  4397  0E30                     	;# 
  4398  0E31                     	;# 
  4399  0E32                     	;# 
  4400  0E33                     	;# 
  4401  0E34                     	;# 
  4402  0E35                     	;# 
  4403  0E36                     	;# 
  4404  0E37                     	;# 
  4405  0E8F                     	;# 
  4406  0E90                     	;# 
  4407  0E91                     	;# 
  4408  0E92                     	;# 
  4409  0E93                     	;# 
  4410  0E94                     	;# 
  4411  0E95                     	;# 
  4412  0E96                     	;# 
  4413  0E97                     	;# 
  4414  0E9C                     	;# 
  4415  0E9D                     	;# 
  4416  0E9E                     	;# 
  4417  0EA1                     	;# 
  4418  0EA2                     	;# 
  4419  0EA3                     	;# 
  4420  0EA4                     	;# 
  4421  0EA5                     	;# 
  4422  0EA9                     	;# 
  4423  0EAA                     	;# 
  4424  0EAB                     	;# 
  4425  0EAC                     	;# 
  4426  0EB1                     	;# 
  4427  0EB2                     	;# 
  4428  0EB3                     	;# 
  4429  0EB8                     	;# 
  4430  0EB9                     	;# 
  4431  0EBA                     	;# 
  4432  0EBB                     	;# 
  4433  0EBC                     	;# 
  4434  0EBD                     	;# 
  4435  0EBE                     	;# 
  4436  0EC3                     	;# 
  4437  0EC5                     	;# 
  4438  0EC6                     	;# 
  4439  0EC7                     	;# 
  4440  0EC8                     	;# 
  4441  0EC9                     	;# 
  4442  0ECA                     	;# 
  4443  0ECB                     	;# 
  4444  0ECC                     	;# 
  4445  0F10                     	;# 
  4446  0F11                     	;# 
  4447  0F12                     	;# 
  4448  0F13                     	;# 
  4449  0F14                     	;# 
  4450  0F15                     	;# 
  4451  0F16                     	;# 
  4452  0F17                     	;# 
  4453  0F18                     	;# 
  4454  0F19                     	;# 
  4455  0F1A                     	;# 
  4456  0F1B                     	;# 
  4457  0F1C                     	;# 
  4458  0F1D                     	;# 
  4459  0F1E                     	;# 
  4460  0F1F                     	;# 
  4461  0F20                     	;# 
  4462  0F21                     	;# 
  4463  0F22                     	;# 
  4464  0F23                     	;# 
  4465  0F24                     	;# 
  4466  0F25                     	;# 
  4467  0F26                     	;# 
  4468  0F27                     	;# 
  4469  0F28                     	;# 
  4470  0F29                     	;# 
  4471  0F2A                     	;# 
  4472  0F2B                     	;# 
  4473  0F2C                     	;# 
  4474  0F2D                     	;# 
  4475  0F2E                     	;# 
  4476  0F2F                     	;# 
  4477  0F30                     	;# 
  4478  0F31                     	;# 
  4479  0F32                     	;# 
  4480  0F38                     	;# 
  4481  0F39                     	;# 
  4482  0F3A                     	;# 
  4483  0F3B                     	;# 
  4484  0F3C                     	;# 
  4485  0F3D                     	;# 
  4486  0F3E                     	;# 
  4487  0F3F                     	;# 
  4488  0F40                     	;# 
  4489  0F41                     	;# 
  4490  0F43                     	;# 
  4491  0F44                     	;# 
  4492  0F45                     	;# 
  4493  0F46                     	;# 
  4494  0F47                     	;# 
  4495  0F48                     	;# 
  4496  0F49                     	;# 
  4497  0F4A                     	;# 
  4498  0F4B                     	;# 
  4499  0F4C                     	;# 
  4500  0F4E                     	;# 
  4501  0F4F                     	;# 
  4502  0F50                     	;# 
  4503  0F51                     	;# 
  4504  0F52                     	;# 
  4505  0F53                     	;# 
  4506  0F54                     	;# 
  4507  0F55                     	;# 
  4508  0F56                     	;# 
  4509  0F57                     	;# 
  4510  0F59                     	;# 
  4511  0F5A                     	;# 
  4512  0F5B                     	;# 
  4513  0F5C                     	;# 
  4514  0F5D                     	;# 
  4515  0F61                     	;# 
  4516  0F62                     	;# 
  4517  0F64                     	;# 
  4518  0F65                     	;# 
  4519  0F66                     	;# 
  4520  0F67                     	;# 
  4521  0F68                     	;# 
  4522  0F69                     	;# 
  4523  0F6A                     	;# 
  4524  0F6B                     	;# 
  4525  0F6C                     	;# 
  4526  0F6D                     	;# 
  4527  0FE4                     	;# 
  4528  0FE5                     	;# 
  4529  0FE6                     	;# 
  4530  0FE7                     	;# 
  4531  0FE8                     	;# 
  4532  0FE9                     	;# 
  4533  0FEA                     	;# 
  4534  0FEB                     	;# 
  4535  0FED                     	;# 
  4536  0FEE                     	;# 
  4537  0FEF                     	;# 
  4538  0000                     	;# 
  4539  0001                     	;# 
  4540  0002                     	;# 
  4541  0003                     	;# 
  4542  0004                     	;# 
  4543  0005                     	;# 
  4544  0006                     	;# 
  4545  0007                     	;# 
  4546  0008                     	;# 
  4547  0009                     	;# 
  4548  000A                     	;# 
  4549  000B                     	;# 
  4550  000C                     	;# 
  4551  000D                     	;# 
  4552  000E                     	;# 
  4553  000F                     	;# 
  4554  0010                     	;# 
  4555  0011                     	;# 
  4556  0012                     	;# 
  4557  0013                     	;# 
  4558  0014                     	;# 
  4559  0015                     	;# 
  4560  0016                     	;# 
  4561  0017                     	;# 
  4562  0018                     	;# 
  4563  0019                     	;# 
  4564  001A                     	;# 
  4565  001C                     	;# 
  4566  001C                     	;# 
  4567  001D                     	;# 
  4568  001D                     	;# 
  4569  001E                     	;# 
  4570  001F                     	;# 
  4571  008C                     	;# 
  4572  008C                     	;# 
  4573  008D                     	;# 
  4574  008E                     	;# 
  4575  008E                     	;# 
  4576  008F                     	;# 
  4577  0090                     	;# 
  4578  0090                     	;# 
  4579  0091                     	;# 
  4580  0093                     	;# 
  4581  0094                     	;# 
  4582  0095                     	;# 
  4583  0096                     	;# 
  4584  0097                     	;# 
  4585  0098                     	;# 
  4586  0099                     	;# 
  4587  009A                     	;# 
  4588  009B                     	;# 
  4589  009C                     	;# 
  4590  009D                     	;# 
  4591  009E                     	;# 
  4592  010C                     	;# 
  4593  010D                     	;# 
  4594  010E                     	;# 
  4595  010E                     	;# 
  4596  010F                     	;# 
  4597  0110                     	;# 
  4598  0110                     	;# 
  4599  0111                     	;# 
  4600  0112                     	;# 
  4601  0112                     	;# 
  4602  0113                     	;# 
  4603  0114                     	;# 
  4604  0114                     	;# 
  4605  0115                     	;# 
  4606  0116                     	;# 
  4607  0116                     	;# 
  4608  0117                     	;# 
  4609  0119                     	;# 
  4610  0119                     	;# 
  4611  0119                     	;# 
  4612  011A                     	;# 
  4613  011A                     	;# 
  4614  011A                     	;# 
  4615  011B                     	;# 
  4616  011B                     	;# 
  4617  011B                     	;# 
  4618  011B                     	;# 
  4619  011B                     	;# 
  4620  011C                     	;# 
  4621  011C                     	;# 
  4622  011C                     	;# 
  4623  011D                     	;# 
  4624  011D                     	;# 
  4625  011D                     	;# 
  4626  011E                     	;# 
  4627  011E                     	;# 
  4628  011E                     	;# 
  4629  011F                     	;# 
  4630  011F                     	;# 
  4631  011F                     	;# 
  4632  011F                     	;# 
  4633  011F                     	;# 
  4634  018C                     	;# 
  4635  018D                     	;# 
  4636  018E                     	;# 
  4637  018F                     	;# 
  4638  0190                     	;# 
  4639  0191                     	;# 
  4640  0192                     	;# 
  4641  0196                     	;# 
  4642  0197                     	;# 
  4643  0198                     	;# 
  4644  0199                     	;# 
  4645  019A                     	;# 
  4646  019B                     	;# 
  4647  019C                     	;# 
  4648  020C                     	;# 
  4649  020C                     	;# 
  4650  020D                     	;# 
  4651  020E                     	;# 
  4652  020F                     	;# 
  4653  020F                     	;# 
  4654  0210                     	;# 
  4655  0210                     	;# 
  4656  0211                     	;# 
  4657  0211                     	;# 
  4658  0212                     	;# 
  4659  0212                     	;# 
  4660  0213                     	;# 
  4661  0214                     	;# 
  4662  0215                     	;# 
  4663  0215                     	;# 
  4664  0216                     	;# 
  4665  0216                     	;# 
  4666  0217                     	;# 
  4667  0217                     	;# 
  4668  0218                     	;# 
  4669  0218                     	;# 
  4670  0219                     	;# 
  4671  021A                     	;# 
  4672  021B                     	;# 
  4673  021B                     	;# 
  4674  021C                     	;# 
  4675  021C                     	;# 
  4676  021D                     	;# 
  4677  021D                     	;# 
  4678  021E                     	;# 
  4679  021F                     	;# 
  4680  028C                     	;# 
  4681  028C                     	;# 
  4682  028D                     	;# 
  4683  028D                     	;# 
  4684  028E                     	;# 
  4685  028F                     	;# 
  4686  0290                     	;# 
  4687  0290                     	;# 
  4688  0291                     	;# 
  4689  0292                     	;# 
  4690  0292                     	;# 
  4691  0293                     	;# 
  4692  0293                     	;# 
  4693  0294                     	;# 
  4694  0295                     	;# 
  4695  0296                     	;# 
  4696  0296                     	;# 
  4697  0297                     	;# 
  4698  0298                     	;# 
  4699  0298                     	;# 
  4700  0299                     	;# 
  4701  0299                     	;# 
  4702  029A                     	;# 
  4703  029B                     	;# 
  4704  029C                     	;# 
  4705  029C                     	;# 
  4706  029D                     	;# 
  4707  030C                     	;# 
  4708  030C                     	;# 
  4709  030D                     	;# 
  4710  030E                     	;# 
  4711  030F                     	;# 
  4712  0310                     	;# 
  4713  0310                     	;# 
  4714  0311                     	;# 
  4715  0312                     	;# 
  4716  0313                     	;# 
  4717  0314                     	;# 
  4718  0314                     	;# 
  4719  0315                     	;# 
  4720  0316                     	;# 
  4721  0317                     	;# 
  4722  0318                     	;# 
  4723  0318                     	;# 
  4724  0319                     	;# 
  4725  031A                     	;# 
  4726  031B                     	;# 
  4727  031C                     	;# 
  4728  031C                     	;# 
  4729  031D                     	;# 
  4730  031E                     	;# 
  4731  031F                     	;# 
  4732  038C                     	;# 
  4733  038C                     	;# 
  4734  038D                     	;# 
  4735  038E                     	;# 
  4736  0390                     	;# 
  4737  0390                     	;# 
  4738  0391                     	;# 
  4739  0392                     	;# 
  4740  040C                     	;# 
  4741  040D                     	;# 
  4742  040E                     	;# 
  4743  040F                     	;# 
  4744  0410                     	;# 
  4745  0411                     	;# 
  4746  0416                     	;# 
  4747  0416                     	;# 
  4748  0417                     	;# 
  4749  0418                     	;# 
  4750  0418                     	;# 
  4751  0419                     	;# 
  4752  041A                     	;# 
  4753  041A                     	;# 
  4754  041B                     	;# 
  4755  041C                     	;# 
  4756  041C                     	;# 
  4757  041D                     	;# 
  4758  041E                     	;# 
  4759  041F                     	;# 
  4760  048C                     	;# 
  4761  048C                     	;# 
  4762  048D                     	;# 
  4763  048E                     	;# 
  4764  048F                     	;# 
  4765  048F                     	;# 
  4766  0490                     	;# 
  4767  0491                     	;# 
  4768  0492                     	;# 
  4769  0492                     	;# 
  4770  0493                     	;# 
  4771  0494                     	;# 
  4772  0495                     	;# 
  4773  0495                     	;# 
  4774  0496                     	;# 
  4775  0497                     	;# 
  4776  0498                     	;# 
  4777  0499                     	;# 
  4778  049A                     	;# 
  4779  049B                     	;# 
  4780  049C                     	;# 
  4781  049D                     	;# 
  4782  050C                     	;# 
  4783  050C                     	;# 
  4784  050D                     	;# 
  4785  050E                     	;# 
  4786  050F                     	;# 
  4787  050F                     	;# 
  4788  0510                     	;# 
  4789  0511                     	;# 
  4790  0512                     	;# 
  4791  0512                     	;# 
  4792  0513                     	;# 
  4793  0514                     	;# 
  4794  0515                     	;# 
  4795  0515                     	;# 
  4796  0516                     	;# 
  4797  0517                     	;# 
  4798  0518                     	;# 
  4799  0519                     	;# 
  4800  051A                     	;# 
  4801  051B                     	;# 
  4802  051C                     	;# 
  4803  051D                     	;# 
  4804  058C                     	;# 
  4805  058C                     	;# 
  4806  058D                     	;# 
  4807  058E                     	;# 
  4808  058F                     	;# 
  4809  058F                     	;# 
  4810  0590                     	;# 
  4811  0591                     	;# 
  4812  0592                     	;# 
  4813  0593                     	;# 
  4814  060C                     	;# 
  4815  060D                     	;# 
  4816  060E                     	;# 
  4817  060F                     	;# 
  4818  0610                     	;# 
  4819  0611                     	;# 
  4820  0612                     	;# 
  4821  0613                     	;# 
  4822  0614                     	;# 
  4823  0616                     	;# 
  4824  0617                     	;# 
  4825  0618                     	;# 
  4826  0619                     	;# 
  4827  061A                     	;# 
  4828  061B                     	;# 
  4829  061C                     	;# 
  4830  061D                     	;# 
  4831  061E                     	;# 
  4832  068C                     	;# 
  4833  068D                     	;# 
  4834  068E                     	;# 
  4835  068F                     	;# 
  4836  0690                     	;# 
  4837  0691                     	;# 
  4838  0692                     	;# 
  4839  0693                     	;# 
  4840  0694                     	;# 
  4841  070C                     	;# 
  4842  070D                     	;# 
  4843  070E                     	;# 
  4844  070F                     	;# 
  4845  0710                     	;# 
  4846  0711                     	;# 
  4847  0712                     	;# 
  4848  0713                     	;# 
  4849  0714                     	;# 
  4850  0716                     	;# 
  4851  0717                     	;# 
  4852  0718                     	;# 
  4853  0719                     	;# 
  4854  071A                     	;# 
  4855  071B                     	;# 
  4856  071C                     	;# 
  4857  071D                     	;# 
  4858  071E                     	;# 
  4859  0796                     	;# 
  4860  0797                     	;# 
  4861  0798                     	;# 
  4862  0799                     	;# 
  4863  079A                     	;# 
  4864  079B                     	;# 
  4865  080C                     	;# 
  4866  080D                     	;# 
  4867  080E                     	;# 
  4868  080F                     	;# 
  4869  0810                     	;# 
  4870  0811                     	;# 
  4871  0812                     	;# 
  4872  0813                     	;# 
  4873  0814                     	;# 
  4874  081A                     	;# 
  4875  081B                     	;# 
  4876  081C                     	;# 
  4877  081D                     	;# 
  4878  081E                     	;# 
  4879  081F                     	;# 
  4880  088C                     	;# 
  4881  088D                     	;# 
  4882  088E                     	;# 
  4883  088F                     	;# 
  4884  0890                     	;# 
  4885  0891                     	;# 
  4886  0892                     	;# 
  4887  0893                     	;# 
  4888  0895                     	;# 
  4889  0896                     	;# 
  4890  0897                     	;# 
  4891  0898                     	;# 
  4892  0899                     	;# 
  4893  089A                     	;# 
  4894  089B                     	;# 
  4895  090C                     	;# 
  4896  090E                     	;# 
  4897  090F                     	;# 
  4898  091F                     	;# 
  4899  091F                     	;# 
  4900  098F                     	;# 
  4901  098F                     	;# 
  4902  0990                     	;# 
  4903  0991                     	;# 
  4904  0992                     	;# 
  4905  0993                     	;# 
  4906  0994                     	;# 
  4907  0995                     	;# 
  4908  0996                     	;# 
  4909  0997                     	;# 
  4910  0E0F                     	;# 
  4911  0E10                     	;# 
  4912  0E11                     	;# 
  4913  0E12                     	;# 
  4914  0E13                     	;# 
  4915  0E14                     	;# 
  4916  0E15                     	;# 
  4917  0E16                     	;# 
  4918  0E17                     	;# 
  4919  0E18                     	;# 
  4920  0E19                     	;# 
  4921  0E1A                     	;# 
  4922  0E1B                     	;# 
  4923  0E1C                     	;# 
  4924  0E1D                     	;# 
  4925  0E1E                     	;# 
  4926  0E1F                     	;# 
  4927  0E20                     	;# 
  4928  0E21                     	;# 
  4929  0E22                     	;# 
  4930  0E23                     	;# 
  4931  0E24                     	;# 
  4932  0E25                     	;# 
  4933  0E26                     	;# 
  4934  0E27                     	;# 
  4935  0E28                     	;# 
  4936  0E29                     	;# 
  4937  0E2A                     	;# 
  4938  0E2B                     	;# 
  4939  0E2C                     	;# 
  4940  0E2D                     	;# 
  4941  0E2E                     	;# 
  4942  0E2F                     	;# 
  4943  0E30                     	;# 
  4944  0E31                     	;# 
  4945  0E32                     	;# 
  4946  0E33                     	;# 
  4947  0E34                     	;# 
  4948  0E35                     	;# 
  4949  0E36                     	;# 
  4950  0E37                     	;# 
  4951  0E8F                     	;# 
  4952  0E90                     	;# 
  4953  0E91                     	;# 
  4954  0E92                     	;# 
  4955  0E93                     	;# 
  4956  0E94                     	;# 
  4957  0E95                     	;# 
  4958  0E96                     	;# 
  4959  0E97                     	;# 
  4960  0E9C                     	;# 
  4961  0E9D                     	;# 
  4962  0E9E                     	;# 
  4963  0EA1                     	;# 
  4964  0EA2                     	;# 
  4965  0EA3                     	;# 
  4966  0EA4                     	;# 
  4967  0EA5                     	;# 
  4968  0EA9                     	;# 
  4969  0EAA                     	;# 
  4970  0EAB                     	;# 
  4971  0EAC                     	;# 
  4972  0EB1                     	;# 
  4973  0EB2                     	;# 
  4974  0EB3                     	;# 
  4975  0EB8                     	;# 
  4976  0EB9                     	;# 
  4977  0EBA                     	;# 
  4978  0EBB                     	;# 
  4979  0EBC                     	;# 
  4980  0EBD                     	;# 
  4981  0EBE                     	;# 
  4982  0EC3                     	;# 
  4983  0EC5                     	;# 
  4984  0EC6                     	;# 
  4985  0EC7                     	;# 
  4986  0EC8                     	;# 
  4987  0EC9                     	;# 
  4988  0ECA                     	;# 
  4989  0ECB                     	;# 
  4990  0ECC                     	;# 
  4991  0F10                     	;# 
  4992  0F11                     	;# 
  4993  0F12                     	;# 
  4994  0F13                     	;# 
  4995  0F14                     	;# 
  4996  0F15                     	;# 
  4997  0F16                     	;# 
  4998  0F17                     	;# 
  4999  0F18                     	;# 
  5000  0F19                     	;# 
  5001  0F1A                     	;# 
  5002  0F1B                     	;# 
  5003  0F1C                     	;# 
  5004  0F1D                     	;# 
  5005  0F1E                     	;# 
  5006  0F1F                     	;# 
  5007  0F20                     	;# 
  5008  0F21                     	;# 
  5009  0F22                     	;# 
  5010  0F23                     	;# 
  5011  0F24                     	;# 
  5012  0F25                     	;# 
  5013  0F26                     	;# 
  5014  0F27                     	;# 
  5015  0F28                     	;# 
  5016  0F29                     	;# 
  5017  0F2A                     	;# 
  5018  0F2B                     	;# 
  5019  0F2C                     	;# 
  5020  0F2D                     	;# 
  5021  0F2E                     	;# 
  5022  0F2F                     	;# 
  5023  0F30                     	;# 
  5024  0F31                     	;# 
  5025  0F32                     	;# 
  5026  0F38                     	;# 
  5027  0F39                     	;# 
  5028  0F3A                     	;# 
  5029  0F3B                     	;# 
  5030  0F3C                     	;# 
  5031  0F3D                     	;# 
  5032  0F3E                     	;# 
  5033  0F3F                     	;# 
  5034  0F40                     	;# 
  5035  0F41                     	;# 
  5036  0F43                     	;# 
  5037  0F44                     	;# 
  5038  0F45                     	;# 
  5039  0F46                     	;# 
  5040  0F47                     	;# 
  5041  0F48                     	;# 
  5042  0F49                     	;# 
  5043  0F4A                     	;# 
  5044  0F4B                     	;# 
  5045  0F4C                     	;# 
  5046  0F4E                     	;# 
  5047  0F4F                     	;# 
  5048  0F50                     	;# 
  5049  0F51                     	;# 
  5050  0F52                     	;# 
  5051  0F53                     	;# 
  5052  0F54                     	;# 
  5053  0F55                     	;# 
  5054  0F56                     	;# 
  5055  0F57                     	;# 
  5056  0F59                     	;# 
  5057  0F5A                     	;# 
  5058  0F5B                     	;# 
  5059  0F5C                     	;# 
  5060  0F5D                     	;# 
  5061  0F61                     	;# 
  5062  0F62                     	;# 
  5063  0F64                     	;# 
  5064  0F65                     	;# 
  5065  0F66                     	;# 
  5066  0F67                     	;# 
  5067  0F68                     	;# 
  5068  0F69                     	;# 
  5069  0F6A                     	;# 
  5070  0F6B                     	;# 
  5071  0F6C                     	;# 
  5072  0F6D                     	;# 
  5073  0FE4                     	;# 
  5074  0FE5                     	;# 
  5075  0FE6                     	;# 
  5076  0FE7                     	;# 
  5077  0FE8                     	;# 
  5078  0FE9                     	;# 
  5079  0FEA                     	;# 
  5080  0FEB                     	;# 
  5081  0FED                     	;# 
  5082  0FEE                     	;# 
  5083  0FEF                     	;# 
  5084  0000                     	;# 
  5085  0001                     	;# 
  5086  0002                     	;# 
  5087  0003                     	;# 
  5088  0004                     	;# 
  5089  0005                     	;# 
  5090  0006                     	;# 
  5091  0007                     	;# 
  5092  0008                     	;# 
  5093  0009                     	;# 
  5094  000A                     	;# 
  5095  000B                     	;# 
  5096  000C                     	;# 
  5097  000D                     	;# 
  5098  000E                     	;# 
  5099  000F                     	;# 
  5100  0010                     	;# 
  5101  0011                     	;# 
  5102  0012                     	;# 
  5103  0013                     	;# 
  5104  0014                     	;# 
  5105  0015                     	;# 
  5106  0016                     	;# 
  5107  0017                     	;# 
  5108  0018                     	;# 
  5109  0019                     	;# 
  5110  001A                     	;# 
  5111  001C                     	;# 
  5112  001C                     	;# 
  5113  001D                     	;# 
  5114  001D                     	;# 
  5115  001E                     	;# 
  5116  001F                     	;# 
  5117  008C                     	;# 
  5118  008C                     	;# 
  5119  008D                     	;# 
  5120  008E                     	;# 
  5121  008E                     	;# 
  5122  008F                     	;# 
  5123  0090                     	;# 
  5124  0090                     	;# 
  5125  0091                     	;# 
  5126  0093                     	;# 
  5127  0094                     	;# 
  5128  0095                     	;# 
  5129  0096                     	;# 
  5130  0097                     	;# 
  5131  0098                     	;# 
  5132  0099                     	;# 
  5133  009A                     	;# 
  5134  009B                     	;# 
  5135  009C                     	;# 
  5136  009D                     	;# 
  5137  009E                     	;# 
  5138  010C                     	;# 
  5139  010D                     	;# 
  5140  010E                     	;# 
  5141  010E                     	;# 
  5142  010F                     	;# 
  5143  0110                     	;# 
  5144  0110                     	;# 
  5145  0111                     	;# 
  5146  0112                     	;# 
  5147  0112                     	;# 
  5148  0113                     	;# 
  5149  0114                     	;# 
  5150  0114                     	;# 
  5151  0115                     	;# 
  5152  0116                     	;# 
  5153  0116                     	;# 
  5154  0117                     	;# 
  5155  0119                     	;# 
  5156  0119                     	;# 
  5157  0119                     	;# 
  5158  011A                     	;# 
  5159  011A                     	;# 
  5160  011A                     	;# 
  5161  011B                     	;# 
  5162  011B                     	;# 
  5163  011B                     	;# 
  5164  011B                     	;# 
  5165  011B                     	;# 
  5166  011C                     	;# 
  5167  011C                     	;# 
  5168  011C                     	;# 
  5169  011D                     	;# 
  5170  011D                     	;# 
  5171  011D                     	;# 
  5172  011E                     	;# 
  5173  011E                     	;# 
  5174  011E                     	;# 
  5175  011F                     	;# 
  5176  011F                     	;# 
  5177  011F                     	;# 
  5178  011F                     	;# 
  5179  011F                     	;# 
  5180  018C                     	;# 
  5181  018D                     	;# 
  5182  018E                     	;# 
  5183  018F                     	;# 
  5184  0190                     	;# 
  5185  0191                     	;# 
  5186  0192                     	;# 
  5187  0196                     	;# 
  5188  0197                     	;# 
  5189  0198                     	;# 
  5190  0199                     	;# 
  5191  019A                     	;# 
  5192  019B                     	;# 
  5193  019C                     	;# 
  5194  020C                     	;# 
  5195  020C                     	;# 
  5196  020D                     	;# 
  5197  020E                     	;# 
  5198  020F                     	;# 
  5199  020F                     	;# 
  5200  0210                     	;# 
  5201  0210                     	;# 
  5202  0211                     	;# 
  5203  0211                     	;# 
  5204  0212                     	;# 
  5205  0212                     	;# 
  5206  0213                     	;# 
  5207  0214                     	;# 
  5208  0215                     	;# 
  5209  0215                     	;# 
  5210  0216                     	;# 
  5211  0216                     	;# 
  5212  0217                     	;# 
  5213  0217                     	;# 
  5214  0218                     	;# 
  5215  0218                     	;# 
  5216  0219                     	;# 
  5217  021A                     	;# 
  5218  021B                     	;# 
  5219  021B                     	;# 
  5220  021C                     	;# 
  5221  021C                     	;# 
  5222  021D                     	;# 
  5223  021D                     	;# 
  5224  021E                     	;# 
  5225  021F                     	;# 
  5226  028C                     	;# 
  5227  028C                     	;# 
  5228  028D                     	;# 
  5229  028D                     	;# 
  5230  028E                     	;# 
  5231  028F                     	;# 
  5232  0290                     	;# 
  5233  0290                     	;# 
  5234  0291                     	;# 
  5235  0292                     	;# 
  5236  0292                     	;# 
  5237  0293                     	;# 
  5238  0293                     	;# 
  5239  0294                     	;# 
  5240  0295                     	;# 
  5241  0296                     	;# 
  5242  0296                     	;# 
  5243  0297                     	;# 
  5244  0298                     	;# 
  5245  0298                     	;# 
  5246  0299                     	;# 
  5247  0299                     	;# 
  5248  029A                     	;# 
  5249  029B                     	;# 
  5250  029C                     	;# 
  5251  029C                     	;# 
  5252  029D                     	;# 
  5253  030C                     	;# 
  5254  030C                     	;# 
  5255  030D                     	;# 
  5256  030E                     	;# 
  5257  030F                     	;# 
  5258  0310                     	;# 
  5259  0310                     	;# 
  5260  0311                     	;# 
  5261  0312                     	;# 
  5262  0313                     	;# 
  5263  0314                     	;# 
  5264  0314                     	;# 
  5265  0315                     	;# 
  5266  0316                     	;# 
  5267  0317                     	;# 
  5268  0318                     	;# 
  5269  0318                     	;# 
  5270  0319                     	;# 
  5271  031A                     	;# 
  5272  031B                     	;# 
  5273  031C                     	;# 
  5274  031C                     	;# 
  5275  031D                     	;# 
  5276  031E                     	;# 
  5277  031F                     	;# 
  5278  038C                     	;# 
  5279  038C                     	;# 
  5280  038D                     	;# 
  5281  038E                     	;# 
  5282  0390                     	;# 
  5283  0390                     	;# 
  5284  0391                     	;# 
  5285  0392                     	;# 
  5286  040C                     	;# 
  5287  040D                     	;# 
  5288  040E                     	;# 
  5289  040F                     	;# 
  5290  0410                     	;# 
  5291  0411                     	;# 
  5292  0416                     	;# 
  5293  0416                     	;# 
  5294  0417                     	;# 
  5295  0418                     	;# 
  5296  0418                     	;# 
  5297  0419                     	;# 
  5298  041A                     	;# 
  5299  041A                     	;# 
  5300  041B                     	;# 
  5301  041C                     	;# 
  5302  041C                     	;# 
  5303  041D                     	;# 
  5304  041E                     	;# 
  5305  041F                     	;# 
  5306  048C                     	;# 
  5307  048C                     	;# 
  5308  048D                     	;# 
  5309  048E                     	;# 
  5310  048F                     	;# 
  5311  048F                     	;# 
  5312  0490                     	;# 
  5313  0491                     	;# 
  5314  0492                     	;# 
  5315  0492                     	;# 
  5316  0493                     	;# 
  5317  0494                     	;# 
  5318  0495                     	;# 
  5319  0495                     	;# 
  5320  0496                     	;# 
  5321  0497                     	;# 
  5322  0498                     	;# 
  5323  0499                     	;# 
  5324  049A                     	;# 
  5325  049B                     	;# 
  5326  049C                     	;# 
  5327  049D                     	;# 
  5328  050C                     	;# 
  5329  050C                     	;# 
  5330  050D                     	;# 
  5331  050E                     	;# 
  5332  050F                     	;# 
  5333  050F                     	;# 
  5334  0510                     	;# 
  5335  0511                     	;# 
  5336  0512                     	;# 
  5337  0512                     	;# 
  5338  0513                     	;# 
  5339  0514                     	;# 
  5340  0515                     	;# 
  5341  0515                     	;# 
  5342  0516                     	;# 
  5343  0517                     	;# 
  5344  0518                     	;# 
  5345  0519                     	;# 
  5346  051A                     	;# 
  5347  051B                     	;# 
  5348  051C                     	;# 
  5349  051D                     	;# 
  5350  058C                     	;# 
  5351  058C                     	;# 
  5352  058D                     	;# 
  5353  058E                     	;# 
  5354  058F                     	;# 
  5355  058F                     	;# 
  5356  0590                     	;# 
  5357  0591                     	;# 
  5358  0592                     	;# 
  5359  0593                     	;# 
  5360  060C                     	;# 
  5361  060D                     	;# 
  5362  060E                     	;# 
  5363  060F                     	;# 
  5364  0610                     	;# 
  5365  0611                     	;# 
  5366  0612                     	;# 
  5367  0613                     	;# 
  5368  0614                     	;# 
  5369  0616                     	;# 
  5370  0617                     	;# 
  5371  0618                     	;# 
  5372  0619                     	;# 
  5373  061A                     	;# 
  5374  061B                     	;# 
  5375  061C                     	;# 
  5376  061D                     	;# 
  5377  061E                     	;# 
  5378  068C                     	;# 
  5379  068D                     	;# 
  5380  068E                     	;# 
  5381  068F                     	;# 
  5382  0690                     	;# 
  5383  0691                     	;# 
  5384  0692                     	;# 
  5385  0693                     	;# 
  5386  0694                     	;# 
  5387  070C                     	;# 
  5388  070D                     	;# 
  5389  070E                     	;# 
  5390  070F                     	;# 
  5391  0710                     	;# 
  5392  0711                     	;# 
  5393  0712                     	;# 
  5394  0713                     	;# 
  5395  0714                     	;# 
  5396  0716                     	;# 
  5397  0717                     	;# 
  5398  0718                     	;# 
  5399  0719                     	;# 
  5400  071A                     	;# 
  5401  071B                     	;# 
  5402  071C                     	;# 
  5403  071D                     	;# 
  5404  071E                     	;# 
  5405  0796                     	;# 
  5406  0797                     	;# 
  5407  0798                     	;# 
  5408  0799                     	;# 
  5409  079A                     	;# 
  5410  079B                     	;# 
  5411  080C                     	;# 
  5412  080D                     	;# 
  5413  080E                     	;# 
  5414  080F                     	;# 
  5415  0810                     	;# 
  5416  0811                     	;# 
  5417  0812                     	;# 
  5418  0813                     	;# 
  5419  0814                     	;# 
  5420  081A                     	;# 
  5421  081B                     	;# 
  5422  081C                     	;# 
  5423  081D                     	;# 
  5424  081E                     	;# 
  5425  081F                     	;# 
  5426  088C                     	;# 
  5427  088D                     	;# 
  5428  088E                     	;# 
  5429  088F                     	;# 
  5430  0890                     	;# 
  5431  0891                     	;# 
  5432  0892                     	;# 
  5433  0893                     	;# 
  5434  0895                     	;# 
  5435  0896                     	;# 
  5436  0897                     	;# 
  5437  0898                     	;# 
  5438  0899                     	;# 
  5439  089A                     	;# 
  5440  089B                     	;# 
  5441  090C                     	;# 
  5442  090E                     	;# 
  5443  090F                     	;# 
  5444  091F                     	;# 
  5445  091F                     	;# 
  5446  098F                     	;# 
  5447  098F                     	;# 
  5448  0990                     	;# 
  5449  0991                     	;# 
  5450  0992                     	;# 
  5451  0993                     	;# 
  5452  0994                     	;# 
  5453  0995                     	;# 
  5454  0996                     	;# 
  5455  0997                     	;# 
  5456  0E0F                     	;# 
  5457  0E10                     	;# 
  5458  0E11                     	;# 
  5459  0E12                     	;# 
  5460  0E13                     	;# 
  5461  0E14                     	;# 
  5462  0E15                     	;# 
  5463  0E16                     	;# 
  5464  0E17                     	;# 
  5465  0E18                     	;# 
  5466  0E19                     	;# 
  5467  0E1A                     	;# 
  5468  0E1B                     	;# 
  5469  0E1C                     	;# 
  5470  0E1D                     	;# 
  5471  0E1E                     	;# 
  5472  0E1F                     	;# 
  5473  0E20                     	;# 
  5474  0E21                     	;# 
  5475  0E22                     	;# 
  5476  0E23                     	;# 
  5477  0E24                     	;# 
  5478  0E25                     	;# 
  5479  0E26                     	;# 
  5480  0E27                     	;# 
  5481  0E28                     	;# 
  5482  0E29                     	;# 
  5483  0E2A                     	;# 
  5484  0E2B                     	;# 
  5485  0E2C                     	;# 
  5486  0E2D                     	;# 
  5487  0E2E                     	;# 
  5488  0E2F                     	;# 
  5489  0E30                     	;# 
  5490  0E31                     	;# 
  5491  0E32                     	;# 
  5492  0E33                     	;# 
  5493  0E34                     	;# 
  5494  0E35                     	;# 
  5495  0E36                     	;# 
  5496  0E37                     	;# 
  5497  0E8F                     	;# 
  5498  0E90                     	;# 
  5499  0E91                     	;# 
  5500  0E92                     	;# 
  5501  0E93                     	;# 
  5502  0E94                     	;# 
  5503  0E95                     	;# 
  5504  0E96                     	;# 
  5505  0E97                     	;# 
  5506  0E9C                     	;# 
  5507  0E9D                     	;# 
  5508  0E9E                     	;# 
  5509  0EA1                     	;# 
  5510  0EA2                     	;# 
  5511  0EA3                     	;# 
  5512  0EA4                     	;# 
  5513  0EA5                     	;# 
  5514  0EA9                     	;# 
  5515  0EAA                     	;# 
  5516  0EAB                     	;# 
  5517  0EAC                     	;# 
  5518  0EB1                     	;# 
  5519  0EB2                     	;# 
  5520  0EB3                     	;# 
  5521  0EB8                     	;# 
  5522  0EB9                     	;# 
  5523  0EBA                     	;# 
  5524  0EBB                     	;# 
  5525  0EBC                     	;# 
  5526  0EBD                     	;# 
  5527  0EBE                     	;# 
  5528  0EC3                     	;# 
  5529  0EC5                     	;# 
  5530  0EC6                     	;# 
  5531  0EC7                     	;# 
  5532  0EC8                     	;# 
  5533  0EC9                     	;# 
  5534  0ECA                     	;# 
  5535  0ECB                     	;# 
  5536  0ECC                     	;# 
  5537  0F10                     	;# 
  5538  0F11                     	;# 
  5539  0F12                     	;# 
  5540  0F13                     	;# 
  5541  0F14                     	;# 
  5542  0F15                     	;# 
  5543  0F16                     	;# 
  5544  0F17                     	;# 
  5545  0F18                     	;# 
  5546  0F19                     	;# 
  5547  0F1A                     	;# 
  5548  0F1B                     	;# 
  5549  0F1C                     	;# 
  5550  0F1D                     	;# 
  5551  0F1E                     	;# 
  5552  0F1F                     	;# 
  5553  0F20                     	;# 
  5554  0F21                     	;# 
  5555  0F22                     	;# 
  5556  0F23                     	;# 
  5557  0F24                     	;# 
  5558  0F25                     	;# 
  5559  0F26                     	;# 
  5560  0F27                     	;# 
  5561  0F28                     	;# 
  5562  0F29                     	;# 
  5563  0F2A                     	;# 
  5564  0F2B                     	;# 
  5565  0F2C                     	;# 
  5566  0F2D                     	;# 
  5567  0F2E                     	;# 
  5568  0F2F                     	;# 
  5569  0F30                     	;# 
  5570  0F31                     	;# 
  5571  0F32                     	;# 
  5572  0F38                     	;# 
  5573  0F39                     	;# 
  5574  0F3A                     	;# 
  5575  0F3B                     	;# 
  5576  0F3C                     	;# 
  5577  0F3D                     	;# 
  5578  0F3E                     	;# 
  5579  0F3F                     	;# 
  5580  0F40                     	;# 
  5581  0F41                     	;# 
  5582  0F43                     	;# 
  5583  0F44                     	;# 
  5584  0F45                     	;# 
  5585  0F46                     	;# 
  5586  0F47                     	;# 
  5587  0F48                     	;# 
  5588  0F49                     	;# 
  5589  0F4A                     	;# 
  5590  0F4B                     	;# 
  5591  0F4C                     	;# 
  5592  0F4E                     	;# 
  5593  0F4F                     	;# 
  5594  0F50                     	;# 
  5595  0F51                     	;# 
  5596  0F52                     	;# 
  5597  0F53                     	;# 
  5598  0F54                     	;# 
  5599  0F55                     	;# 
  5600  0F56                     	;# 
  5601  0F57                     	;# 
  5602  0F59                     	;# 
  5603  0F5A                     	;# 
  5604  0F5B                     	;# 
  5605  0F5C                     	;# 
  5606  0F5D                     	;# 
  5607  0F61                     	;# 
  5608  0F62                     	;# 
  5609  0F64                     	;# 
  5610  0F65                     	;# 
  5611  0F66                     	;# 
  5612  0F67                     	;# 
  5613  0F68                     	;# 
  5614  0F69                     	;# 
  5615  0F6A                     	;# 
  5616  0F6B                     	;# 
  5617  0F6C                     	;# 
  5618  0F6D                     	;# 
  5619  0FE4                     	;# 
  5620  0FE5                     	;# 
  5621  0FE6                     	;# 
  5622  0FE7                     	;# 
  5623  0FE8                     	;# 
  5624  0FE9                     	;# 
  5625  0FEA                     	;# 
  5626  0FEB                     	;# 
  5627  0FED                     	;# 
  5628  0FEE                     	;# 
  5629  0FEF                     	;# 
  5630  0000                     	;# 
  5631  0001                     	;# 
  5632  0002                     	;# 
  5633  0003                     	;# 
  5634  0004                     	;# 
  5635  0005                     	;# 
  5636  0006                     	;# 
  5637  0007                     	;# 
  5638  0008                     	;# 
  5639  0009                     	;# 
  5640  000A                     	;# 
  5641  000B                     	;# 
  5642  000C                     	;# 
  5643  000D                     	;# 
  5644  000E                     	;# 
  5645  000F                     	;# 
  5646  0010                     	;# 
  5647  0011                     	;# 
  5648  0012                     	;# 
  5649  0013                     	;# 
  5650  0014                     	;# 
  5651  0015                     	;# 
  5652  0016                     	;# 
  5653  0017                     	;# 
  5654  0018                     	;# 
  5655  0019                     	;# 
  5656  001A                     	;# 
  5657  001C                     	;# 
  5658  001C                     	;# 
  5659  001D                     	;# 
  5660  001D                     	;# 
  5661  001E                     	;# 
  5662  001F                     	;# 
  5663  008C                     	;# 
  5664  008C                     	;# 
  5665  008D                     	;# 
  5666  008E                     	;# 
  5667  008E                     	;# 
  5668  008F                     	;# 
  5669  0090                     	;# 
  5670  0090                     	;# 
  5671  0091                     	;# 
  5672  0093                     	;# 
  5673  0094                     	;# 
  5674  0095                     	;# 
  5675  0096                     	;# 
  5676  0097                     	;# 
  5677  0098                     	;# 
  5678  0099                     	;# 
  5679  009A                     	;# 
  5680  009B                     	;# 
  5681  009C                     	;# 
  5682  009D                     	;# 
  5683  009E                     	;# 
  5684  010C                     	;# 
  5685  010D                     	;# 
  5686  010E                     	;# 
  5687  010E                     	;# 
  5688  010F                     	;# 
  5689  0110                     	;# 
  5690  0110                     	;# 
  5691  0111                     	;# 
  5692  0112                     	;# 
  5693  0112                     	;# 
  5694  0113                     	;# 
  5695  0114                     	;# 
  5696  0114                     	;# 
  5697  0115                     	;# 
  5698  0116                     	;# 
  5699  0116                     	;# 
  5700  0117                     	;# 
  5701  0119                     	;# 
  5702  0119                     	;# 
  5703  0119                     	;# 
  5704  011A                     	;# 
  5705  011A                     	;# 
  5706  011A                     	;# 
  5707  011B                     	;# 
  5708  011B                     	;# 
  5709  011B                     	;# 
  5710  011B                     	;# 
  5711  011B                     	;# 
  5712  011C                     	;# 
  5713  011C                     	;# 
  5714  011C                     	;# 
  5715  011D                     	;# 
  5716  011D                     	;# 
  5717  011D                     	;# 
  5718  011E                     	;# 
  5719  011E                     	;# 
  5720  011E                     	;# 
  5721  011F                     	;# 
  5722  011F                     	;# 
  5723  011F                     	;# 
  5724  011F                     	;# 
  5725  011F                     	;# 
  5726  018C                     	;# 
  5727  018D                     	;# 
  5728  018E                     	;# 
  5729  018F                     	;# 
  5730  0190                     	;# 
  5731  0191                     	;# 
  5732  0192                     	;# 
  5733  0196                     	;# 
  5734  0197                     	;# 
  5735  0198                     	;# 
  5736  0199                     	;# 
  5737  019A                     	;# 
  5738  019B                     	;# 
  5739  019C                     	;# 
  5740  020C                     	;# 
  5741  020C                     	;# 
  5742  020D                     	;# 
  5743  020E                     	;# 
  5744  020F                     	;# 
  5745  020F                     	;# 
  5746  0210                     	;# 
  5747  0210                     	;# 
  5748  0211                     	;# 
  5749  0211                     	;# 
  5750  0212                     	;# 
  5751  0212                     	;# 
  5752  0213                     	;# 
  5753  0214                     	;# 
  5754  0215                     	;# 
  5755  0215                     	;# 
  5756  0216                     	;# 
  5757  0216                     	;# 
  5758  0217                     	;# 
  5759  0217                     	;# 
  5760  0218                     	;# 
  5761  0218                     	;# 
  5762  0219                     	;# 
  5763  021A                     	;# 
  5764  021B                     	;# 
  5765  021B                     	;# 
  5766  021C                     	;# 
  5767  021C                     	;# 
  5768  021D                     	;# 
  5769  021D                     	;# 
  5770  021E                     	;# 
  5771  021F                     	;# 
  5772  028C                     	;# 
  5773  028C                     	;# 
  5774  028D                     	;# 
  5775  028D                     	;# 
  5776  028E                     	;# 
  5777  028F                     	;# 
  5778  0290                     	;# 
  5779  0290                     	;# 
  5780  0291                     	;# 
  5781  0292                     	;# 
  5782  0292                     	;# 
  5783  0293                     	;# 
  5784  0293                     	;# 
  5785  0294                     	;# 
  5786  0295                     	;# 
  5787  0296                     	;# 
  5788  0296                     	;# 
  5789  0297                     	;# 
  5790  0298                     	;# 
  5791  0298                     	;# 
  5792  0299                     	;# 
  5793  0299                     	;# 
  5794  029A                     	;# 
  5795  029B                     	;# 
  5796  029C                     	;# 
  5797  029C                     	;# 
  5798  029D                     	;# 
  5799  030C                     	;# 
  5800  030C                     	;# 
  5801  030D                     	;# 
  5802  030E                     	;# 
  5803  030F                     	;# 
  5804  0310                     	;# 
  5805  0310                     	;# 
  5806  0311                     	;# 
  5807  0312                     	;# 
  5808  0313                     	;# 
  5809  0314                     	;# 
  5810  0314                     	;# 
  5811  0315                     	;# 
  5812  0316                     	;# 
  5813  0317                     	;# 
  5814  0318                     	;# 
  5815  0318                     	;# 
  5816  0319                     	;# 
  5817  031A                     	;# 
  5818  031B                     	;# 
  5819  031C                     	;# 
  5820  031C                     	;# 
  5821  031D                     	;# 
  5822  031E                     	;# 
  5823  031F                     	;# 
  5824  038C                     	;# 
  5825  038C                     	;# 
  5826  038D                     	;# 
  5827  038E                     	;# 
  5828  0390                     	;# 
  5829  0390                     	;# 
  5830  0391                     	;# 
  5831  0392                     	;# 
  5832  040C                     	;# 
  5833  040D                     	;# 
  5834  040E                     	;# 
  5835  040F                     	;# 
  5836  0410                     	;# 
  5837  0411                     	;# 
  5838  0416                     	;# 
  5839  0416                     	;# 
  5840  0417                     	;# 
  5841  0418                     	;# 
  5842  0418                     	;# 
  5843  0419                     	;# 
  5844  041A                     	;# 
  5845  041A                     	;# 
  5846  041B                     	;# 
  5847  041C                     	;# 
  5848  041C                     	;# 
  5849  041D                     	;# 
  5850  041E                     	;# 
  5851  041F                     	;# 
  5852  048C                     	;# 
  5853  048C                     	;# 
  5854  048D                     	;# 
  5855  048E                     	;# 
  5856  048F                     	;# 
  5857  048F                     	;# 
  5858  0490                     	;# 
  5859  0491                     	;# 
  5860  0492                     	;# 
  5861  0492                     	;# 
  5862  0493                     	;# 
  5863  0494                     	;# 
  5864  0495                     	;# 
  5865  0495                     	;# 
  5866  0496                     	;# 
  5867  0497                     	;# 
  5868  0498                     	;# 
  5869  0499                     	;# 
  5870  049A                     	;# 
  5871  049B                     	;# 
  5872  049C                     	;# 
  5873  049D                     	;# 
  5874  050C                     	;# 
  5875  050C                     	;# 
  5876  050D                     	;# 
  5877  050E                     	;# 
  5878  050F                     	;# 
  5879  050F                     	;# 
  5880  0510                     	;# 
  5881  0511                     	;# 
  5882  0512                     	;# 
  5883  0512                     	;# 
  5884  0513                     	;# 
  5885  0514                     	;# 
  5886  0515                     	;# 
  5887  0515                     	;# 
  5888  0516                     	;# 
  5889  0517                     	;# 
  5890  0518                     	;# 
  5891  0519                     	;# 
  5892  051A                     	;# 
  5893  051B                     	;# 
  5894  051C                     	;# 
  5895  051D                     	;# 
  5896  058C                     	;# 
  5897  058C                     	;# 
  5898  058D                     	;# 
  5899  058E                     	;# 
  5900  058F                     	;# 
  5901  058F                     	;# 
  5902  0590                     	;# 
  5903  0591                     	;# 
  5904  0592                     	;# 
  5905  0593                     	;# 
  5906  060C                     	;# 
  5907  060D                     	;# 
  5908  060E                     	;# 
  5909  060F                     	;# 
  5910  0610                     	;# 
  5911  0611                     	;# 
  5912  0612                     	;# 
  5913  0613                     	;# 
  5914  0614                     	;# 
  5915  0616                     	;# 
  5916  0617                     	;# 
  5917  0618                     	;# 
  5918  0619                     	;# 
  5919  061A                     	;# 
  5920  061B                     	;# 
  5921  061C                     	;# 
  5922  061D                     	;# 
  5923  061E                     	;# 
  5924  068C                     	;# 
  5925  068D                     	;# 
  5926  068E                     	;# 
  5927  068F                     	;# 
  5928  0690                     	;# 
  5929  0691                     	;# 
  5930  0692                     	;# 
  5931  0693                     	;# 
  5932  0694                     	;# 
  5933  070C                     	;# 
  5934  070D                     	;# 
  5935  070E                     	;# 
  5936  070F                     	;# 
  5937  0710                     	;# 
  5938  0711                     	;# 
  5939  0712                     	;# 
  5940  0713                     	;# 
  5941  0714                     	;# 
  5942  0716                     	;# 
  5943  0717                     	;# 
  5944  0718                     	;# 
  5945  0719                     	;# 
  5946  071A                     	;# 
  5947  071B                     	;# 
  5948  071C                     	;# 
  5949  071D                     	;# 
  5950  071E                     	;# 
  5951  0796                     	;# 
  5952  0797                     	;# 
  5953  0798                     	;# 
  5954  0799                     	;# 
  5955  079A                     	;# 
  5956  079B                     	;# 
  5957  080C                     	;# 
  5958  080D                     	;# 
  5959  080E                     	;# 
  5960  080F                     	;# 
  5961  0810                     	;# 
  5962  0811                     	;# 
  5963  0812                     	;# 
  5964  0813                     	;# 
  5965  0814                     	;# 
  5966  081A                     	;# 
  5967  081B                     	;# 
  5968  081C                     	;# 
  5969  081D                     	;# 
  5970  081E                     	;# 
  5971  081F                     	;# 
  5972  088C                     	;# 
  5973  088D                     	;# 
  5974  088E                     	;# 
  5975  088F                     	;# 
  5976  0890                     	;# 
  5977  0891                     	;# 
  5978  0892                     	;# 
  5979  0893                     	;# 
  5980  0895                     	;# 
  5981  0896                     	;# 
  5982  0897                     	;# 
  5983  0898                     	;# 
  5984  0899                     	;# 
  5985  089A                     	;# 
  5986  089B                     	;# 
  5987  090C                     	;# 
  5988  090E                     	;# 
  5989  090F                     	;# 
  5990  091F                     	;# 
  5991  091F                     	;# 
  5992  098F                     	;# 
  5993  098F                     	;# 
  5994  0990                     	;# 
  5995  0991                     	;# 
  5996  0992                     	;# 
  5997  0993                     	;# 
  5998  0994                     	;# 
  5999  0995                     	;# 
  6000  0996                     	;# 
  6001  0997                     	;# 
  6002  0E0F                     	;# 
  6003  0E10                     	;# 
  6004  0E11                     	;# 
  6005  0E12                     	;# 
  6006  0E13                     	;# 
  6007  0E14                     	;# 
  6008  0E15                     	;# 
  6009  0E16                     	;# 
  6010  0E17                     	;# 
  6011  0E18                     	;# 
  6012  0E19                     	;# 
  6013  0E1A                     	;# 
  6014  0E1B                     	;# 
  6015  0E1C                     	;# 
  6016  0E1D                     	;# 
  6017  0E1E                     	;# 
  6018  0E1F                     	;# 
  6019  0E20                     	;# 
  6020  0E21                     	;# 
  6021  0E22                     	;# 
  6022  0E23                     	;# 
  6023  0E24                     	;# 
  6024  0E25                     	;# 
  6025  0E26                     	;# 
  6026  0E27                     	;# 
  6027  0E28                     	;# 
  6028  0E29                     	;# 
  6029  0E2A                     	;# 
  6030  0E2B                     	;# 
  6031  0E2C                     	;# 
  6032  0E2D                     	;# 
  6033  0E2E                     	;# 
  6034  0E2F                     	;# 
  6035  0E30                     	;# 
  6036  0E31                     	;# 
  6037  0E32                     	;# 
  6038  0E33                     	;# 
  6039  0E34                     	;# 
  6040  0E35                     	;# 
  6041  0E36                     	;# 
  6042  0E37                     	;# 
  6043  0E8F                     	;# 
  6044  0E90                     	;# 
  6045  0E91                     	;# 
  6046  0E92                     	;# 
  6047  0E93                     	;# 
  6048  0E94                     	;# 
  6049  0E95                     	;# 
  6050  0E96                     	;# 
  6051  0E97                     	;# 
  6052  0E9C                     	;# 
  6053  0E9D                     	;# 
  6054  0E9E                     	;# 
  6055  0EA1                     	;# 
  6056  0EA2                     	;# 
  6057  0EA3                     	;# 
  6058  0EA4                     	;# 
  6059  0EA5                     	;# 
  6060  0EA9                     	;# 
  6061  0EAA                     	;# 
  6062  0EAB                     	;# 
  6063  0EAC                     	;# 
  6064  0EB1                     	;# 
  6065  0EB2                     	;# 
  6066  0EB3                     	;# 
  6067  0EB8                     	;# 
  6068  0EB9                     	;# 
  6069  0EBA                     	;# 
  6070  0EBB                     	;# 
  6071  0EBC                     	;# 
  6072  0EBD                     	;# 
  6073  0EBE                     	;# 
  6074  0EC3                     	;# 
  6075  0EC5                     	;# 
  6076  0EC6                     	;# 
  6077  0EC7                     	;# 
  6078  0EC8                     	;# 
  6079  0EC9                     	;# 
  6080  0ECA                     	;# 
  6081  0ECB                     	;# 
  6082  0ECC                     	;# 
  6083  0F10                     	;# 
  6084  0F11                     	;# 
  6085  0F12                     	;# 
  6086  0F13                     	;# 
  6087  0F14                     	;# 
  6088  0F15                     	;# 
  6089  0F16                     	;# 
  6090  0F17                     	;# 
  6091  0F18                     	;# 
  6092  0F19                     	;# 
  6093  0F1A                     	;# 
  6094  0F1B                     	;# 
  6095  0F1C                     	;# 
  6096  0F1D                     	;# 
  6097  0F1E                     	;# 
  6098  0F1F                     	;# 
  6099  0F20                     	;# 
  6100  0F21                     	;# 
  6101  0F22                     	;# 
  6102  0F23                     	;# 
  6103  0F24                     	;# 
  6104  0F25                     	;# 
  6105  0F26                     	;# 
  6106  0F27                     	;# 
  6107  0F28                     	;# 
  6108  0F29                     	;# 
  6109  0F2A                     	;# 
  6110  0F2B                     	;# 
  6111  0F2C                     	;# 
  6112  0F2D                     	;# 
  6113  0F2E                     	;# 
  6114  0F2F                     	;# 
  6115  0F30                     	;# 
  6116  0F31                     	;# 
  6117  0F32                     	;# 
  6118  0F38                     	;# 
  6119  0F39                     	;# 
  6120  0F3A                     	;# 
  6121  0F3B                     	;# 
  6122  0F3C                     	;# 
  6123  0F3D                     	;# 
  6124  0F3E                     	;# 
  6125  0F3F                     	;# 
  6126  0F40                     	;# 
  6127  0F41                     	;# 
  6128  0F43                     	;# 
  6129  0F44                     	;# 
  6130  0F45                     	;# 
  6131  0F46                     	;# 
  6132  0F47                     	;# 
  6133  0F48                     	;# 
  6134  0F49                     	;# 
  6135  0F4A                     	;# 
  6136  0F4B                     	;# 
  6137  0F4C                     	;# 
  6138  0F4E                     	;# 
  6139  0F4F                     	;# 
  6140  0F50                     	;# 
  6141  0F51                     	;# 
  6142  0F52                     	;# 
  6143  0F53                     	;# 
  6144  0F54                     	;# 
  6145  0F55                     	;# 
  6146  0F56                     	;# 
  6147  0F57                     	;# 
  6148  0F59                     	;# 
  6149  0F5A                     	;# 
  6150  0F5B                     	;# 
  6151  0F5C                     	;# 
  6152  0F5D                     	;# 
  6153  0F61                     	;# 
  6154  0F62                     	;# 
  6155  0F64                     	;# 
  6156  0F65                     	;# 
  6157  0F66                     	;# 
  6158  0F67                     	;# 
  6159  0F68                     	;# 
  6160  0F69                     	;# 
  6161  0F6A                     	;# 
  6162  0F6B                     	;# 
  6163  0F6C                     	;# 
  6164  0F6D                     	;# 
  6165  0FE4                     	;# 
  6166  0FE5                     	;# 
  6167  0FE6                     	;# 
  6168  0FE7                     	;# 
  6169  0FE8                     	;# 
  6170  0FE9                     	;# 
  6171  0FEA                     	;# 
  6172  0FEB                     	;# 
  6173  0FED                     	;# 
  6174  0FEE                     	;# 
  6175  0FEF                     	;# 
  6176  0000                     	;# 
  6177  0001                     	;# 
  6178  0002                     	;# 
  6179  0003                     	;# 
  6180  0004                     	;# 
  6181  0005                     	;# 
  6182  0006                     	;# 
  6183  0007                     	;# 
  6184  0008                     	;# 
  6185  0009                     	;# 
  6186  000A                     	;# 
  6187  000B                     	;# 
  6188  000C                     	;# 
  6189  000D                     	;# 
  6190  000E                     	;# 
  6191  000F                     	;# 
  6192  0010                     	;# 
  6193  0011                     	;# 
  6194  0012                     	;# 
  6195  0013                     	;# 
  6196  0014                     	;# 
  6197  0015                     	;# 
  6198  0016                     	;# 
  6199  0017                     	;# 
  6200  0018                     	;# 
  6201  0019                     	;# 
  6202  001A                     	;# 
  6203  001C                     	;# 
  6204  001C                     	;# 
  6205  001D                     	;# 
  6206  001D                     	;# 
  6207  001E                     	;# 
  6208  001F                     	;# 
  6209  008C                     	;# 
  6210  008C                     	;# 
  6211  008D                     	;# 
  6212  008E                     	;# 
  6213  008E                     	;# 
  6214  008F                     	;# 
  6215  0090                     	;# 
  6216  0090                     	;# 
  6217  0091                     	;# 
  6218  0093                     	;# 
  6219  0094                     	;# 
  6220  0095                     	;# 
  6221  0096                     	;# 
  6222  0097                     	;# 
  6223  0098                     	;# 
  6224  0099                     	;# 
  6225  009A                     	;# 
  6226  009B                     	;# 
  6227  009C                     	;# 
  6228  009D                     	;# 
  6229  009E                     	;# 
  6230  010C                     	;# 
  6231  010D                     	;# 
  6232  010E                     	;# 
  6233  010E                     	;# 
  6234  010F                     	;# 
  6235  0110                     	;# 
  6236  0110                     	;# 
  6237  0111                     	;# 
  6238  0112                     	;# 
  6239  0112                     	;# 
  6240  0113                     	;# 
  6241  0114                     	;# 
  6242  0114                     	;# 
  6243  0115                     	;# 
  6244  0116                     	;# 
  6245  0116                     	;# 
  6246  0117                     	;# 
  6247  0119                     	;# 
  6248  0119                     	;# 
  6249  0119                     	;# 
  6250  011A                     	;# 
  6251  011A                     	;# 
  6252  011A                     	;# 
  6253  011B                     	;# 
  6254  011B                     	;# 
  6255  011B                     	;# 
  6256  011B                     	;# 
  6257  011B                     	;# 
  6258  011C                     	;# 
  6259  011C                     	;# 
  6260  011C                     	;# 
  6261  011D                     	;# 
  6262  011D                     	;# 
  6263  011D                     	;# 
  6264  011E                     	;# 
  6265  011E                     	;# 
  6266  011E                     	;# 
  6267  011F                     	;# 
  6268  011F                     	;# 
  6269  011F                     	;# 
  6270  011F                     	;# 
  6271  011F                     	;# 
  6272  018C                     	;# 
  6273  018D                     	;# 
  6274  018E                     	;# 
  6275  018F                     	;# 
  6276  0190                     	;# 
  6277  0191                     	;# 
  6278  0192                     	;# 
  6279  0196                     	;# 
  6280  0197                     	;# 
  6281  0198                     	;# 
  6282  0199                     	;# 
  6283  019A                     	;# 
  6284  019B                     	;# 
  6285  019C                     	;# 
  6286  020C                     	;# 
  6287  020C                     	;# 
  6288  020D                     	;# 
  6289  020E                     	;# 
  6290  020F                     	;# 
  6291  020F                     	;# 
  6292  0210                     	;# 
  6293  0210                     	;# 
  6294  0211                     	;# 
  6295  0211                     	;# 
  6296  0212                     	;# 
  6297  0212                     	;# 
  6298  0213                     	;# 
  6299  0214                     	;# 
  6300  0215                     	;# 
  6301  0215                     	;# 
  6302  0216                     	;# 
  6303  0216                     	;# 
  6304  0217                     	;# 
  6305  0217                     	;# 
  6306  0218                     	;# 
  6307  0218                     	;# 
  6308  0219                     	;# 
  6309  021A                     	;# 
  6310  021B                     	;# 
  6311  021B                     	;# 
  6312  021C                     	;# 
  6313  021C                     	;# 
  6314  021D                     	;# 
  6315  021D                     	;# 
  6316  021E                     	;# 
  6317  021F                     	;# 
  6318  028C                     	;# 
  6319  028C                     	;# 
  6320  028D                     	;# 
  6321  028D                     	;# 
  6322  028E                     	;# 
  6323  028F                     	;# 
  6324  0290                     	;# 
  6325  0290                     	;# 
  6326  0291                     	;# 
  6327  0292                     	;# 
  6328  0292                     	;# 
  6329  0293                     	;# 
  6330  0293                     	;# 
  6331  0294                     	;# 
  6332  0295                     	;# 
  6333  0296                     	;# 
  6334  0296                     	;# 
  6335  0297                     	;# 
  6336  0298                     	;# 
  6337  0298                     	;# 
  6338  0299                     	;# 
  6339  0299                     	;# 
  6340  029A                     	;# 
  6341  029B                     	;# 
  6342  029C                     	;# 
  6343  029C                     	;# 
  6344  029D                     	;# 
  6345  030C                     	;# 
  6346  030C                     	;# 
  6347  030D                     	;# 
  6348  030E                     	;# 
  6349  030F                     	;# 
  6350  0310                     	;# 
  6351  0310                     	;# 
  6352  0311                     	;# 
  6353  0312                     	;# 
  6354  0313                     	;# 
  6355  0314                     	;# 
  6356  0314                     	;# 
  6357  0315                     	;# 
  6358  0316                     	;# 
  6359  0317                     	;# 
  6360  0318                     	;# 
  6361  0318                     	;# 
  6362  0319                     	;# 
  6363  031A                     	;# 
  6364  031B                     	;# 
  6365  031C                     	;# 
  6366  031C                     	;# 
  6367  031D                     	;# 
  6368  031E                     	;# 
  6369  031F                     	;# 
  6370  038C                     	;# 
  6371  038C                     	;# 
  6372  038D                     	;# 
  6373  038E                     	;# 
  6374  0390                     	;# 
  6375  0390                     	;# 
  6376  0391                     	;# 
  6377  0392                     	;# 
  6378  040C                     	;# 
  6379  040D                     	;# 
  6380  040E                     	;# 
  6381  040F                     	;# 
  6382  0410                     	;# 
  6383  0411                     	;# 
  6384  0416                     	;# 
  6385  0416                     	;# 
  6386  0417                     	;# 
  6387  0418                     	;# 
  6388  0418                     	;# 
  6389  0419                     	;# 
  6390  041A                     	;# 
  6391  041A                     	;# 
  6392  041B                     	;# 
  6393  041C                     	;# 
  6394  041C                     	;# 
  6395  041D                     	;# 
  6396  041E                     	;# 
  6397  041F                     	;# 
  6398  048C                     	;# 
  6399  048C                     	;# 
  6400  048D                     	;# 
  6401  048E                     	;# 
  6402  048F                     	;# 
  6403  048F                     	;# 
  6404  0490                     	;# 
  6405  0491                     	;# 
  6406  0492                     	;# 
  6407  0492                     	;# 
  6408  0493                     	;# 
  6409  0494                     	;# 
  6410  0495                     	;# 
  6411  0495                     	;# 
  6412  0496                     	;# 
  6413  0497                     	;# 
  6414  0498                     	;# 
  6415  0499                     	;# 
  6416  049A                     	;# 
  6417  049B                     	;# 
  6418  049C                     	;# 
  6419  049D                     	;# 
  6420  050C                     	;# 
  6421  050C                     	;# 
  6422  050D                     	;# 
  6423  050E                     	;# 
  6424  050F                     	;# 
  6425  050F                     	;# 
  6426  0510                     	;# 
  6427  0511                     	;# 
  6428  0512                     	;# 
  6429  0512                     	;# 
  6430  0513                     	;# 
  6431  0514                     	;# 
  6432  0515                     	;# 
  6433  0515                     	;# 
  6434  0516                     	;# 
  6435  0517                     	;# 
  6436  0518                     	;# 
  6437  0519                     	;# 
  6438  051A                     	;# 
  6439  051B                     	;# 
  6440  051C                     	;# 
  6441  051D                     	;# 
  6442  058C                     	;# 
  6443  058C                     	;# 
  6444  058D                     	;# 
  6445  058E                     	;# 
  6446  058F                     	;# 
  6447  058F                     	;# 
  6448  0590                     	;# 
  6449  0591                     	;# 
  6450  0592                     	;# 
  6451  0593                     	;# 
  6452  060C                     	;# 
  6453  060D                     	;# 
  6454  060E                     	;# 
  6455  060F                     	;# 
  6456  0610                     	;# 
  6457  0611                     	;# 
  6458  0612                     	;# 
  6459  0613                     	;# 
  6460  0614                     	;# 
  6461  0616                     	;# 
  6462  0617                     	;# 
  6463  0618                     	;# 
  6464  0619                     	;# 
  6465  061A                     	;# 
  6466  061B                     	;# 
  6467  061C                     	;# 
  6468  061D                     	;# 
  6469  061E                     	;# 
  6470  068C                     	;# 
  6471  068D                     	;# 
  6472  068E                     	;# 
  6473  068F                     	;# 
  6474  0690                     	;# 
  6475  0691                     	;# 
  6476  0692                     	;# 
  6477  0693                     	;# 
  6478  0694                     	;# 
  6479  070C                     	;# 
  6480  070D                     	;# 
  6481  070E                     	;# 
  6482  070F                     	;# 
  6483  0710                     	;# 
  6484  0711                     	;# 
  6485  0712                     	;# 
  6486  0713                     	;# 
  6487  0714                     	;# 
  6488  0716                     	;# 
  6489  0717                     	;# 
  6490  0718                     	;# 
  6491  0719                     	;# 
  6492  071A                     	;# 
  6493  071B                     	;# 
  6494  071C                     	;# 
  6495  071D                     	;# 
  6496  071E                     	;# 
  6497  0796                     	;# 
  6498  0797                     	;# 
  6499  0798                     	;# 
  6500  0799                     	;# 
  6501  079A                     	;# 
  6502  079B                     	;# 
  6503  080C                     	;# 
  6504  080D                     	;# 
  6505  080E                     	;# 
  6506  080F                     	;# 
  6507  0810                     	;# 
  6508  0811                     	;# 
  6509  0812                     	;# 
  6510  0813                     	;# 
  6511  0814                     	;# 
  6512  081A                     	;# 
  6513  081B                     	;# 
  6514  081C                     	;# 
  6515  081D                     	;# 
  6516  081E                     	;# 
  6517  081F                     	;# 
  6518  088C                     	;# 
  6519  088D                     	;# 
  6520  088E                     	;# 
  6521  088F                     	;# 
  6522  0890                     	;# 
  6523  0891                     	;# 
  6524  0892                     	;# 
  6525  0893                     	;# 
  6526  0895                     	;# 
  6527  0896                     	;# 
  6528  0897                     	;# 
  6529  0898                     	;# 
  6530  0899                     	;# 
  6531  089A                     	;# 
  6532  089B                     	;# 
  6533  090C                     	;# 
  6534  090E                     	;# 
  6535  090F                     	;# 
  6536  091F                     	;# 
  6537  091F                     	;# 
  6538  098F                     	;# 
  6539  098F                     	;# 
  6540  0990                     	;# 
  6541  0991                     	;# 
  6542  0992                     	;# 
  6543  0993                     	;# 
  6544  0994                     	;# 
  6545  0995                     	;# 
  6546  0996                     	;# 
  6547  0997                     	;# 
  6548  0E0F                     	;# 
  6549  0E10                     	;# 
  6550  0E11                     	;# 
  6551  0E12                     	;# 
  6552  0E13                     	;# 
  6553  0E14                     	;# 
  6554  0E15                     	;# 
  6555  0E16                     	;# 
  6556  0E17                     	;# 
  6557  0E18                     	;# 
  6558  0E19                     	;# 
  6559  0E1A                     	;# 
  6560  0E1B                     	;# 
  6561  0E1C                     	;# 
  6562  0E1D                     	;# 
  6563  0E1E                     	;# 
  6564  0E1F                     	;# 
  6565  0E20                     	;# 
  6566  0E21                     	;# 
  6567  0E22                     	;# 
  6568  0E23                     	;# 
  6569  0E24                     	;# 
  6570  0E25                     	;# 
  6571  0E26                     	;# 
  6572  0E27                     	;# 
  6573  0E28                     	;# 
  6574  0E29                     	;# 
  6575  0E2A                     	;# 
  6576  0E2B                     	;# 
  6577  0E2C                     	;# 
  6578  0E2D                     	;# 
  6579  0E2E                     	;# 
  6580  0E2F                     	;# 
  6581  0E30                     	;# 
  6582  0E31                     	;# 
  6583  0E32                     	;# 
  6584  0E33                     	;# 
  6585  0E34                     	;# 
  6586  0E35                     	;# 
  6587  0E36                     	;# 
  6588  0E37                     	;# 
  6589  0E8F                     	;# 
  6590  0E90                     	;# 
  6591  0E91                     	;# 
  6592  0E92                     	;# 
  6593  0E93                     	;# 
  6594  0E94                     	;# 
  6595  0E95                     	;# 
  6596  0E96                     	;# 
  6597  0E97                     	;# 
  6598  0E9C                     	;# 
  6599  0E9D                     	;# 
  6600  0E9E                     	;# 
  6601  0EA1                     	;# 
  6602  0EA2                     	;# 
  6603  0EA3                     	;# 
  6604  0EA4                     	;# 
  6605  0EA5                     	;# 
  6606  0EA9                     	;# 
  6607  0EAA                     	;# 
  6608  0EAB                     	;# 
  6609  0EAC                     	;# 
  6610  0EB1                     	;# 
  6611  0EB2                     	;# 
  6612  0EB3                     	;# 
  6613  0EB8                     	;# 
  6614  0EB9                     	;# 
  6615  0EBA                     	;# 
  6616  0EBB                     	;# 
  6617  0EBC                     	;# 
  6618  0EBD                     	;# 
  6619  0EBE                     	;# 
  6620  0EC3                     	;# 
  6621  0EC5                     	;# 
  6622  0EC6                     	;# 
  6623  0EC7                     	;# 
  6624  0EC8                     	;# 
  6625  0EC9                     	;# 
  6626  0ECA                     	;# 
  6627  0ECB                     	;# 
  6628  0ECC                     	;# 
  6629  0F10                     	;# 
  6630  0F11                     	;# 
  6631  0F12                     	;# 
  6632  0F13                     	;# 
  6633  0F14                     	;# 
  6634  0F15                     	;# 
  6635  0F16                     	;# 
  6636  0F17                     	;# 
  6637  0F18                     	;# 
  6638  0F19                     	;# 
  6639  0F1A                     	;# 
  6640  0F1B                     	;# 
  6641  0F1C                     	;# 
  6642  0F1D                     	;# 
  6643  0F1E                     	;# 
  6644  0F1F                     	;# 
  6645  0F20                     	;# 
  6646  0F21                     	;# 
  6647  0F22                     	;# 
  6648  0F23                     	;# 
  6649  0F24                     	;# 
  6650  0F25                     	;# 
  6651  0F26                     	;# 
  6652  0F27                     	;# 
  6653  0F28                     	;# 
  6654  0F29                     	;# 
  6655  0F2A                     	;# 
  6656  0F2B                     	;# 
  6657  0F2C                     	;# 
  6658  0F2D                     	;# 
  6659  0F2E                     	;# 
  6660  0F2F                     	;# 
  6661  0F30                     	;# 
  6662  0F31                     	;# 
  6663  0F32                     	;# 
  6664  0F38                     	;# 
  6665  0F39                     	;# 
  6666  0F3A                     	;# 
  6667  0F3B                     	;# 
  6668  0F3C                     	;# 
  6669  0F3D                     	;# 
  6670  0F3E                     	;# 
  6671  0F3F                     	;# 
  6672  0F40                     	;# 
  6673  0F41                     	;# 
  6674  0F43                     	;# 
  6675  0F44                     	;# 
  6676  0F45                     	;# 
  6677  0F46                     	;# 
  6678  0F47                     	;# 
  6679  0F48                     	;# 
  6680  0F49                     	;# 
  6681  0F4A                     	;# 
  6682  0F4B                     	;# 
  6683  0F4C                     	;# 
  6684  0F4E                     	;# 
  6685  0F4F                     	;# 
  6686  0F50                     	;# 
  6687  0F51                     	;# 
  6688  0F52                     	;# 
  6689  0F53                     	;# 
  6690  0F54                     	;# 
  6691  0F55                     	;# 
  6692  0F56                     	;# 
  6693  0F57                     	;# 
  6694  0F59                     	;# 
  6695  0F5A                     	;# 
  6696  0F5B                     	;# 
  6697  0F5C                     	;# 
  6698  0F5D                     	;# 
  6699  0F61                     	;# 
  6700  0F62                     	;# 
  6701  0F64                     	;# 
  6702  0F65                     	;# 
  6703  0F66                     	;# 
  6704  0F67                     	;# 
  6705  0F68                     	;# 
  6706  0F69                     	;# 
  6707  0F6A                     	;# 
  6708  0F6B                     	;# 
  6709  0F6C                     	;# 
  6710  0F6D                     	;# 
  6711  0FE4                     	;# 
  6712  0FE5                     	;# 
  6713  0FE6                     	;# 
  6714  0FE7                     	;# 
  6715  0FE8                     	;# 
  6716  0FE9                     	;# 
  6717  0FEA                     	;# 
  6718  0FEB                     	;# 
  6719  0FED                     	;# 
  6720  0FEE                     	;# 
  6721  0FEF                     	;# 
  6722  0000                     	;# 
  6723  0001                     	;# 
  6724  0002                     	;# 
  6725  0003                     	;# 
  6726  0004                     	;# 
  6727  0005                     	;# 
  6728  0006                     	;# 
  6729  0007                     	;# 
  6730  0008                     	;# 
  6731  0009                     	;# 
  6732  000A                     	;# 
  6733  000B                     	;# 
  6734  000C                     	;# 
  6735  000D                     	;# 
  6736  000E                     	;# 
  6737  000F                     	;# 
  6738  0010                     	;# 
  6739  0011                     	;# 
  6740  0012                     	;# 
  6741  0013                     	;# 
  6742  0014                     	;# 
  6743  0015                     	;# 
  6744  0016                     	;# 
  6745  0017                     	;# 
  6746  0018                     	;# 
  6747  0019                     	;# 
  6748  001A                     	;# 
  6749  001C                     	;# 
  6750  001C                     	;# 
  6751  001D                     	;# 
  6752  001D                     	;# 
  6753  001E                     	;# 
  6754  001F                     	;# 
  6755  008C                     	;# 
  6756  008C                     	;# 
  6757  008D                     	;# 
  6758  008E                     	;# 
  6759  008E                     	;# 
  6760  008F                     	;# 
  6761  0090                     	;# 
  6762  0090                     	;# 
  6763  0091                     	;# 
  6764  0093                     	;# 
  6765  0094                     	;# 
  6766  0095                     	;# 
  6767  0096                     	;# 
  6768  0097                     	;# 
  6769  0098                     	;# 
  6770  0099                     	;# 
  6771  009A                     	;# 
  6772  009B                     	;# 
  6773  009C                     	;# 
  6774  009D                     	;# 
  6775  009E                     	;# 
  6776  010C                     	;# 
  6777  010D                     	;# 
  6778  010E                     	;# 
  6779  010E                     	;# 
  6780  010F                     	;# 
  6781  0110                     	;# 
  6782  0110                     	;# 
  6783  0111                     	;# 
  6784  0112                     	;# 
  6785  0112                     	;# 
  6786  0113                     	;# 
  6787  0114                     	;# 
  6788  0114                     	;# 
  6789  0115                     	;# 
  6790  0116                     	;# 
  6791  0116                     	;# 
  6792  0117                     	;# 
  6793  0119                     	;# 
  6794  0119                     	;# 
  6795  0119                     	;# 
  6796  011A                     	;# 
  6797  011A                     	;# 
  6798  011A                     	;# 
  6799  011B                     	;# 
  6800  011B                     	;# 
  6801  011B                     	;# 
  6802  011B                     	;# 
  6803  011B                     	;# 
  6804  011C                     	;# 
  6805  011C                     	;# 
  6806  011C                     	;# 
  6807  011D                     	;# 
  6808  011D                     	;# 
  6809  011D                     	;# 
  6810  011E                     	;# 
  6811  011E                     	;# 
  6812  011E                     	;# 
  6813  011F                     	;# 
  6814  011F                     	;# 
  6815  011F                     	;# 
  6816  011F                     	;# 
  6817  011F                     	;# 
  6818  018C                     	;# 
  6819  018D                     	;# 
  6820  018E                     	;# 
  6821  018F                     	;# 
  6822  0190                     	;# 
  6823  0191                     	;# 
  6824  0192                     	;# 
  6825  0196                     	;# 
  6826  0197                     	;# 
  6827  0198                     	;# 
  6828  0199                     	;# 
  6829  019A                     	;# 
  6830  019B                     	;# 
  6831  019C                     	;# 
  6832  020C                     	;# 
  6833  020C                     	;# 
  6834  020D                     	;# 
  6835  020E                     	;# 
  6836  020F                     	;# 
  6837  020F                     	;# 
  6838  0210                     	;# 
  6839  0210                     	;# 
  6840  0211                     	;# 
  6841  0211                     	;# 
  6842  0212                     	;# 
  6843  0212                     	;# 
  6844  0213                     	;# 
  6845  0214                     	;# 
  6846  0215                     	;# 
  6847  0215                     	;# 
  6848  0216                     	;# 
  6849  0216                     	;# 
  6850  0217                     	;# 
  6851  0217                     	;# 
  6852  0218                     	;# 
  6853  0218                     	;# 
  6854  0219                     	;# 
  6855  021A                     	;# 
  6856  021B                     	;# 
  6857  021B                     	;# 
  6858  021C                     	;# 
  6859  021C                     	;# 
  6860  021D                     	;# 
  6861  021D                     	;# 
  6862  021E                     	;# 
  6863  021F                     	;# 
  6864  028C                     	;# 
  6865  028C                     	;# 
  6866  028D                     	;# 
  6867  028D                     	;# 
  6868  028E                     	;# 
  6869  028F                     	;# 
  6870  0290                     	;# 
  6871  0290                     	;# 
  6872  0291                     	;# 
  6873  0292                     	;# 
  6874  0292                     	;# 
  6875  0293                     	;# 
  6876  0293                     	;# 
  6877  0294                     	;# 
  6878  0295                     	;# 
  6879  0296                     	;# 
  6880  0296                     	;# 
  6881  0297                     	;# 
  6882  0298                     	;# 
  6883  0298                     	;# 
  6884  0299                     	;# 
  6885  0299                     	;# 
  6886  029A                     	;# 
  6887  029B                     	;# 
  6888  029C                     	;# 
  6889  029C                     	;# 
  6890  029D                     	;# 
  6891  030C                     	;# 
  6892  030C                     	;# 
  6893  030D                     	;# 
  6894  030E                     	;# 
  6895  030F                     	;# 
  6896  0310                     	;# 
  6897  0310                     	;# 
  6898  0311                     	;# 
  6899  0312                     	;# 
  6900  0313                     	;# 
  6901  0314                     	;# 
  6902  0314                     	;# 
  6903  0315                     	;# 
  6904  0316                     	;# 
  6905  0317                     	;# 
  6906  0318                     	;# 
  6907  0318                     	;# 
  6908  0319                     	;# 
  6909  031A                     	;# 
  6910  031B                     	;# 
  6911  031C                     	;# 
  6912  031C                     	;# 
  6913  031D                     	;# 
  6914  031E                     	;# 
  6915  031F                     	;# 
  6916  038C                     	;# 
  6917  038C                     	;# 
  6918  038D                     	;# 
  6919  038E                     	;# 
  6920  0390                     	;# 
  6921  0390                     	;# 
  6922  0391                     	;# 
  6923  0392                     	;# 
  6924  040C                     	;# 
  6925  040D                     	;# 
  6926  040E                     	;# 
  6927  040F                     	;# 
  6928  0410                     	;# 
  6929  0411                     	;# 
  6930  0416                     	;# 
  6931  0416                     	;# 
  6932  0417                     	;# 
  6933  0418                     	;# 
  6934  0418                     	;# 
  6935  0419                     	;# 
  6936  041A                     	;# 
  6937  041A                     	;# 
  6938  041B                     	;# 
  6939  041C                     	;# 
  6940  041C                     	;# 
  6941  041D                     	;# 
  6942  041E                     	;# 
  6943  041F                     	;# 
  6944  048C                     	;# 
  6945  048C                     	;# 
  6946  048D                     	;# 
  6947  048E                     	;# 
  6948  048F                     	;# 
  6949  048F                     	;# 
  6950  0490                     	;# 
  6951  0491                     	;# 
  6952  0492                     	;# 
  6953  0492                     	;# 
  6954  0493                     	;# 
  6955  0494                     	;# 
  6956  0495                     	;# 
  6957  0495                     	;# 
  6958  0496                     	;# 
  6959  0497                     	;# 
  6960  0498                     	;# 
  6961  0499                     	;# 
  6962  049A                     	;# 
  6963  049B                     	;# 
  6964  049C                     	;# 
  6965  049D                     	;# 
  6966  050C                     	;# 
  6967  050C                     	;# 
  6968  050D                     	;# 
  6969  050E                     	;# 
  6970  050F                     	;# 
  6971  050F                     	;# 
  6972  0510                     	;# 
  6973  0511                     	;# 
  6974  0512                     	;# 
  6975  0512                     	;# 
  6976  0513                     	;# 
  6977  0514                     	;# 
  6978  0515                     	;# 
  6979  0515                     	;# 
  6980  0516                     	;# 
  6981  0517                     	;# 
  6982  0518                     	;# 
  6983  0519                     	;# 
  6984  051A                     	;# 
  6985  051B                     	;# 
  6986  051C                     	;# 
  6987  051D                     	;# 
  6988  058C                     	;# 
  6989  058C                     	;# 
  6990  058D                     	;# 
  6991  058E                     	;# 
  6992  058F                     	;# 
  6993  058F                     	;# 
  6994  0590                     	;# 
  6995  0591                     	;# 
  6996  0592                     	;# 
  6997  0593                     	;# 
  6998  060C                     	;# 
  6999  060D                     	;# 
  7000  060E                     	;# 
  7001  060F                     	;# 
  7002  0610                     	;# 
  7003  0611                     	;# 
  7004  0612                     	;# 
  7005  0613                     	;# 
  7006  0614                     	;# 
  7007  0616                     	;# 
  7008  0617                     	;# 
  7009  0618                     	;# 
  7010  0619                     	;# 
  7011  061A                     	;# 
  7012  061B                     	;# 
  7013  061C                     	;# 
  7014  061D                     	;# 
  7015  061E                     	;# 
  7016  068C                     	;# 
  7017  068D                     	;# 
  7018  068E                     	;# 
  7019  068F                     	;# 
  7020  0690                     	;# 
  7021  0691                     	;# 
  7022  0692                     	;# 
  7023  0693                     	;# 
  7024  0694                     	;# 
  7025  070C                     	;# 
  7026  070D                     	;# 
  7027  070E                     	;# 
  7028  070F                     	;# 
  7029  0710                     	;# 
  7030  0711                     	;# 
  7031  0712                     	;# 
  7032  0713                     	;# 
  7033  0714                     	;# 
  7034  0716                     	;# 
  7035  0717                     	;# 
  7036  0718                     	;# 
  7037  0719                     	;# 
  7038  071A                     	;# 
  7039  071B                     	;# 
  7040  071C                     	;# 
  7041  071D                     	;# 
  7042  071E                     	;# 
  7043  0796                     	;# 
  7044  0797                     	;# 
  7045  0798                     	;# 
  7046  0799                     	;# 
  7047  079A                     	;# 
  7048  079B                     	;# 
  7049  080C                     	;# 
  7050  080D                     	;# 
  7051  080E                     	;# 
  7052  080F                     	;# 
  7053  0810                     	;# 
  7054  0811                     	;# 
  7055  0812                     	;# 
  7056  0813                     	;# 
  7057  0814                     	;# 
  7058  081A                     	;# 
  7059  081B                     	;# 
  7060  081C                     	;# 
  7061  081D                     	;# 
  7062  081E                     	;# 
  7063  081F                     	;# 
  7064  088C                     	;# 
  7065  088D                     	;# 
  7066  088E                     	;# 
  7067  088F                     	;# 
  7068  0890                     	;# 
  7069  0891                     	;# 
  7070  0892                     	;# 
  7071  0893                     	;# 
  7072  0895                     	;# 
  7073  0896                     	;# 
  7074  0897                     	;# 
  7075  0898                     	;# 
  7076  0899                     	;# 
  7077  089A                     	;# 
  7078  089B                     	;# 
  7079  090C                     	;# 
  7080  090E                     	;# 
  7081  090F                     	;# 
  7082  091F                     	;# 
  7083  091F                     	;# 
  7084  098F                     	;# 
  7085  098F                     	;# 
  7086  0990                     	;# 
  7087  0991                     	;# 
  7088  0992                     	;# 
  7089  0993                     	;# 
  7090  0994                     	;# 
  7091  0995                     	;# 
  7092  0996                     	;# 
  7093  0997                     	;# 
  7094  0E0F                     	;# 
  7095  0E10                     	;# 
  7096  0E11                     	;# 
  7097  0E12                     	;# 
  7098  0E13                     	;# 
  7099  0E14                     	;# 
  7100  0E15                     	;# 
  7101  0E16                     	;# 
  7102  0E17                     	;# 
  7103  0E18                     	;# 
  7104  0E19                     	;# 
  7105  0E1A                     	;# 
  7106  0E1B                     	;# 
  7107  0E1C                     	;# 
  7108  0E1D                     	;# 
  7109  0E1E                     	;# 
  7110  0E1F                     	;# 
  7111  0E20                     	;# 
  7112  0E21                     	;# 
  7113  0E22                     	;# 
  7114  0E23                     	;# 
  7115  0E24                     	;# 
  7116  0E25                     	;# 
  7117  0E26                     	;# 
  7118  0E27                     	;# 
  7119  0E28                     	;# 
  7120  0E29                     	;# 
  7121  0E2A                     	;# 
  7122  0E2B                     	;# 
  7123  0E2C                     	;# 
  7124  0E2D                     	;# 
  7125  0E2E                     	;# 
  7126  0E2F                     	;# 
  7127  0E30                     	;# 
  7128  0E31                     	;# 
  7129  0E32                     	;# 
  7130  0E33                     	;# 
  7131  0E34                     	;# 
  7132  0E35                     	;# 
  7133  0E36                     	;# 
  7134  0E37                     	;# 
  7135  0E8F                     	;# 
  7136  0E90                     	;# 
  7137  0E91                     	;# 
  7138  0E92                     	;# 
  7139  0E93                     	;# 
  7140  0E94                     	;# 
  7141  0E95                     	;# 
  7142  0E96                     	;# 
  7143  0E97                     	;# 
  7144  0E9C                     	;# 
  7145  0E9D                     	;# 
  7146  0E9E                     	;# 
  7147  0EA1                     	;# 
  7148  0EA2                     	;# 
  7149  0EA3                     	;# 
  7150  0EA4                     	;# 
  7151  0EA5                     	;# 
  7152  0EA9                     	;# 
  7153  0EAA                     	;# 
  7154  0EAB                     	;# 
  7155  0EAC                     	;# 
  7156  0EB1                     	;# 
  7157  0EB2                     	;# 
  7158  0EB3                     	;# 
  7159  0EB8                     	;# 
  7160  0EB9                     	;# 
  7161  0EBA                     	;# 
  7162  0EBB                     	;# 
  7163  0EBC                     	;# 
  7164  0EBD                     	;# 
  7165  0EBE                     	;# 
  7166  0EC3                     	;# 
  7167  0EC5                     	;# 
  7168  0EC6                     	;# 
  7169  0EC7                     	;# 
  7170  0EC8                     	;# 
  7171  0EC9                     	;# 
  7172  0ECA                     	;# 
  7173  0ECB                     	;# 
  7174  0ECC                     	;# 
  7175  0F10                     	;# 
  7176  0F11                     	;# 
  7177  0F12                     	;# 
  7178  0F13                     	;# 
  7179  0F14                     	;# 
  7180  0F15                     	;# 
  7181  0F16                     	;# 
  7182  0F17                     	;# 
  7183  0F18                     	;# 
  7184  0F19                     	;# 
  7185  0F1A                     	;# 
  7186  0F1B                     	;# 
  7187  0F1C                     	;# 
  7188  0F1D                     	;# 
  7189  0F1E                     	;# 
  7190  0F1F                     	;# 
  7191  0F20                     	;# 
  7192  0F21                     	;# 
  7193  0F22                     	;# 
  7194  0F23                     	;# 
  7195  0F24                     	;# 
  7196  0F25                     	;# 
  7197  0F26                     	;# 
  7198  0F27                     	;# 
  7199  0F28                     	;# 
  7200  0F29                     	;# 
  7201  0F2A                     	;# 
  7202  0F2B                     	;# 
  7203  0F2C                     	;# 
  7204  0F2D                     	;# 
  7205  0F2E                     	;# 
  7206  0F2F                     	;# 
  7207  0F30                     	;# 
  7208  0F31                     	;# 
  7209  0F32                     	;# 
  7210  0F38                     	;# 
  7211  0F39                     	;# 
  7212  0F3A                     	;# 
  7213  0F3B                     	;# 
  7214  0F3C                     	;# 
  7215  0F3D                     	;# 
  7216  0F3E                     	;# 
  7217  0F3F                     	;# 
  7218  0F40                     	;# 
  7219  0F41                     	;# 
  7220  0F43                     	;# 
  7221  0F44                     	;# 
  7222  0F45                     	;# 
  7223  0F46                     	;# 
  7224  0F47                     	;# 
  7225  0F48                     	;# 
  7226  0F49                     	;# 
  7227  0F4A                     	;# 
  7228  0F4B                     	;# 
  7229  0F4C                     	;# 
  7230  0F4E                     	;# 
  7231  0F4F                     	;# 
  7232  0F50                     	;# 
  7233  0F51                     	;# 
  7234  0F52                     	;# 
  7235  0F53                     	;# 
  7236  0F54                     	;# 
  7237  0F55                     	;# 
  7238  0F56                     	;# 
  7239  0F57                     	;# 
  7240  0F59                     	;# 
  7241  0F5A                     	;# 
  7242  0F5B                     	;# 
  7243  0F5C                     	;# 
  7244  0F5D                     	;# 
  7245  0F61                     	;# 
  7246  0F62                     	;# 
  7247  0F64                     	;# 
  7248  0F65                     	;# 
  7249  0F66                     	;# 
  7250  0F67                     	;# 
  7251  0F68                     	;# 
  7252  0F69                     	;# 
  7253  0F6A                     	;# 
  7254  0F6B                     	;# 
  7255  0F6C                     	;# 
  7256  0F6D                     	;# 
  7257  0FE4                     	;# 
  7258  0FE5                     	;# 
  7259  0FE6                     	;# 
  7260  0FE7                     	;# 
  7261  0FE8                     	;# 
  7262  0FE9                     	;# 
  7263  0FEA                     	;# 
  7264  0FEB                     	;# 
  7265  0FED                     	;# 
  7266  0FEE                     	;# 
  7267  0FEF                     	;# 
  7268  0000                     	;# 
  7269  0001                     	;# 
  7270  0002                     	;# 
  7271  0003                     	;# 
  7272  0004                     	;# 
  7273  0005                     	;# 
  7274  0006                     	;# 
  7275  0007                     	;# 
  7276  0008                     	;# 
  7277  0009                     	;# 
  7278  000A                     	;# 
  7279  000B                     	;# 
  7280  000C                     	;# 
  7281  000D                     	;# 
  7282  000E                     	;# 
  7283  000F                     	;# 
  7284  0010                     	;# 
  7285  0011                     	;# 
  7286  0012                     	;# 
  7287  0013                     	;# 
  7288  0014                     	;# 
  7289  0015                     	;# 
  7290  0016                     	;# 
  7291  0017                     	;# 
  7292  0018                     	;# 
  7293  0019                     	;# 
  7294  001A                     	;# 
  7295  001C                     	;# 
  7296  001C                     	;# 
  7297  001D                     	;# 
  7298  001D                     	;# 
  7299  001E                     	;# 
  7300  001F                     	;# 
  7301  008C                     	;# 
  7302  008C                     	;# 
  7303  008D                     	;# 
  7304  008E                     	;# 
  7305  008E                     	;# 
  7306  008F                     	;# 
  7307  0090                     	;# 
  7308  0090                     	;# 
  7309  0091                     	;# 
  7310  0093                     	;# 
  7311  0094                     	;# 
  7312  0095                     	;# 
  7313  0096                     	;# 
  7314  0097                     	;# 
  7315  0098                     	;# 
  7316  0099                     	;# 
  7317  009A                     	;# 
  7318  009B                     	;# 
  7319  009C                     	;# 
  7320  009D                     	;# 
  7321  009E                     	;# 
  7322  010C                     	;# 
  7323  010D                     	;# 
  7324  010E                     	;# 
  7325  010E                     	;# 
  7326  010F                     	;# 
  7327  0110                     	;# 
  7328  0110                     	;# 
  7329  0111                     	;# 
  7330  0112                     	;# 
  7331  0112                     	;# 
  7332  0113                     	;# 
  7333  0114                     	;# 
  7334  0114                     	;# 
  7335  0115                     	;# 
  7336  0116                     	;# 
  7337  0116                     	;# 
  7338  0117                     	;# 
  7339  0119                     	;# 
  7340  0119                     	;# 
  7341  0119                     	;# 
  7342  011A                     	;# 
  7343  011A                     	;# 
  7344  011A                     	;# 
  7345  011B                     	;# 
  7346  011B                     	;# 
  7347  011B                     	;# 
  7348  011B                     	;# 
  7349  011B                     	;# 
  7350  011C                     	;# 
  7351  011C                     	;# 
  7352  011C                     	;# 
  7353  011D                     	;# 
  7354  011D                     	;# 
  7355  011D                     	;# 
  7356  011E                     	;# 
  7357  011E                     	;# 
  7358  011E                     	;# 
  7359  011F                     	;# 
  7360  011F                     	;# 
  7361  011F                     	;# 
  7362  011F                     	;# 
  7363  011F                     	;# 
  7364  018C                     	;# 
  7365  018D                     	;# 
  7366  018E                     	;# 
  7367  018F                     	;# 
  7368  0190                     	;# 
  7369  0191                     	;# 
  7370  0192                     	;# 
  7371  0196                     	;# 
  7372  0197                     	;# 
  7373  0198                     	;# 
  7374  0199                     	;# 
  7375  019A                     	;# 
  7376  019B                     	;# 
  7377  019C                     	;# 
  7378  020C                     	;# 
  7379  020C                     	;# 
  7380  020D                     	;# 
  7381  020E                     	;# 
  7382  020F                     	;# 
  7383  020F                     	;# 
  7384  0210                     	;# 
  7385  0210                     	;# 
  7386  0211                     	;# 
  7387  0211                     	;# 
  7388  0212                     	;# 
  7389  0212                     	;# 
  7390  0213                     	;# 
  7391  0214                     	;# 
  7392  0215                     	;# 
  7393  0215                     	;# 
  7394  0216                     	;# 
  7395  0216                     	;# 
  7396  0217                     	;# 
  7397  0217                     	;# 
  7398  0218                     	;# 
  7399  0218                     	;# 
  7400  0219                     	;# 
  7401  021A                     	;# 
  7402  021B                     	;# 
  7403  021B                     	;# 
  7404  021C                     	;# 
  7405  021C                     	;# 
  7406  021D                     	;# 
  7407  021D                     	;# 
  7408  021E                     	;# 
  7409  021F                     	;# 
  7410  028C                     	;# 
  7411  028C                     	;# 
  7412  028D                     	;# 
  7413  028D                     	;# 
  7414  028E                     	;# 
  7415  028F                     	;# 
  7416  0290                     	;# 
  7417  0290                     	;# 
  7418  0291                     	;# 
  7419  0292                     	;# 
  7420  0292                     	;# 
  7421  0293                     	;# 
  7422  0293                     	;# 
  7423  0294                     	;# 
  7424  0295                     	;# 
  7425  0296                     	;# 
  7426  0296                     	;# 
  7427  0297                     	;# 
  7428  0298                     	;# 
  7429  0298                     	;# 
  7430  0299                     	;# 
  7431  0299                     	;# 
  7432  029A                     	;# 
  7433  029B                     	;# 
  7434  029C                     	;# 
  7435  029C                     	;# 
  7436  029D                     	;# 
  7437  030C                     	;# 
  7438  030C                     	;# 
  7439  030D                     	;# 
  7440  030E                     	;# 
  7441  030F                     	;# 
  7442  0310                     	;# 
  7443  0310                     	;# 
  7444  0311                     	;# 
  7445  0312                     	;# 
  7446  0313                     	;# 
  7447  0314                     	;# 
  7448  0314                     	;# 
  7449  0315                     	;# 
  7450  0316                     	;# 
  7451  0317                     	;# 
  7452  0318                     	;# 
  7453  0318                     	;# 
  7454  0319                     	;# 
  7455  031A                     	;# 
  7456  031B                     	;# 
  7457  031C                     	;# 
  7458  031C                     	;# 
  7459  031D                     	;# 
  7460  031E                     	;# 
  7461  031F                     	;# 
  7462  038C                     	;# 
  7463  038C                     	;# 
  7464  038D                     	;# 
  7465  038E                     	;# 
  7466  0390                     	;# 
  7467  0390                     	;# 
  7468  0391                     	;# 
  7469  0392                     	;# 
  7470  040C                     	;# 
  7471  040D                     	;# 
  7472  040E                     	;# 
  7473  040F                     	;# 
  7474  0410                     	;# 
  7475  0411                     	;# 
  7476  0416                     	;# 
  7477  0416                     	;# 
  7478  0417                     	;# 
  7479  0418                     	;# 
  7480  0418                     	;# 
  7481  0419                     	;# 
  7482  041A                     	;# 
  7483  041A                     	;# 
  7484  041B                     	;# 
  7485  041C                     	;# 
  7486  041C                     	;# 
  7487  041D                     	;# 
  7488  041E                     	;# 
  7489  041F                     	;# 
  7490  048C                     	;# 
  7491  048C                     	;# 
  7492  048D                     	;# 
  7493  048E                     	;# 
  7494  048F                     	;# 
  7495  048F                     	;# 
  7496  0490                     	;# 
  7497  0491                     	;# 
  7498  0492                     	;# 
  7499  0492                     	;# 
  7500  0493                     	;# 
  7501  0494                     	;# 
  7502  0495                     	;# 
  7503  0495                     	;# 
  7504  0496                     	;# 
  7505  0497                     	;# 
  7506  0498                     	;# 
  7507  0499                     	;# 
  7508  049A                     	;# 
  7509  049B                     	;# 
  7510  049C                     	;# 
  7511  049D                     	;# 
  7512  050C                     	;# 
  7513  050C                     	;# 
  7514  050D                     	;# 
  7515  050E                     	;# 
  7516  050F                     	;# 
  7517  050F                     	;# 
  7518  0510                     	;# 
  7519  0511                     	;# 
  7520  0512                     	;# 
  7521  0512                     	;# 
  7522  0513                     	;# 
  7523  0514                     	;# 
  7524  0515                     	;# 
  7525  0515                     	;# 
  7526  0516                     	;# 
  7527  0517                     	;# 
  7528  0518                     	;# 
  7529  0519                     	;# 
  7530  051A                     	;# 
  7531  051B                     	;# 
  7532  051C                     	;# 
  7533  051D                     	;# 
  7534  058C                     	;# 
  7535  058C                     	;# 
  7536  058D                     	;# 
  7537  058E                     	;# 
  7538  058F                     	;# 
  7539  058F                     	;# 
  7540  0590                     	;# 
  7541  0591                     	;# 
  7542  0592                     	;# 
  7543  0593                     	;# 
  7544  060C                     	;# 
  7545  060D                     	;# 
  7546  060E                     	;# 
  7547  060F                     	;# 
  7548  0610                     	;# 
  7549  0611                     	;# 
  7550  0612                     	;# 
  7551  0613                     	;# 
  7552  0614                     	;# 
  7553  0616                     	;# 
  7554  0617                     	;# 
  7555  0618                     	;# 
  7556  0619                     	;# 
  7557  061A                     	;# 
  7558  061B                     	;# 
  7559  061C                     	;# 
  7560  061D                     	;# 
  7561  061E                     	;# 
  7562  068C                     	;# 
  7563  068D                     	;# 
  7564  068E                     	;# 
  7565  068F                     	;# 
  7566  0690                     	;# 
  7567  0691                     	;# 
  7568  0692                     	;# 
  7569  0693                     	;# 
  7570  0694                     	;# 
  7571  070C                     	;# 
  7572  070D                     	;# 
  7573  070E                     	;# 
  7574  070F                     	;# 
  7575  0710                     	;# 
  7576  0711                     	;# 
  7577  0712                     	;# 
  7578  0713                     	;# 
  7579  0714                     	;# 
  7580  0716                     	;# 
  7581  0717                     	;# 
  7582  0718                     	;# 
  7583  0719                     	;# 
  7584  071A                     	;# 
  7585  071B                     	;# 
  7586  071C                     	;# 
  7587  071D                     	;# 
  7588  071E                     	;# 
  7589  0796                     	;# 
  7590  0797                     	;# 
  7591  0798                     	;# 
  7592  0799                     	;# 
  7593  079A                     	;# 
  7594  079B                     	;# 
  7595  080C                     	;# 
  7596  080D                     	;# 
  7597  080E                     	;# 
  7598  080F                     	;# 
  7599  0810                     	;# 
  7600  0811                     	;# 
  7601  0812                     	;# 
  7602  0813                     	;# 
  7603  0814                     	;# 
  7604  081A                     	;# 
  7605  081B                     	;# 
  7606  081C                     	;# 
  7607  081D                     	;# 
  7608  081E                     	;# 
  7609  081F                     	;# 
  7610  088C                     	;# 
  7611  088D                     	;# 
  7612  088E                     	;# 
  7613  088F                     	;# 
  7614  0890                     	;# 
  7615  0891                     	;# 
  7616  0892                     	;# 
  7617  0893                     	;# 
  7618  0895                     	;# 
  7619  0896                     	;# 
  7620  0897                     	;# 
  7621  0898                     	;# 
  7622  0899                     	;# 
  7623  089A                     	;# 
  7624  089B                     	;# 
  7625  090C                     	;# 
  7626  090E                     	;# 
  7627  090F                     	;# 
  7628  091F                     	;# 
  7629  091F                     	;# 
  7630  098F                     	;# 
  7631  098F                     	;# 
  7632  0990                     	;# 
  7633  0991                     	;# 
  7634  0992                     	;# 
  7635  0993                     	;# 
  7636  0994                     	;# 
  7637  0995                     	;# 
  7638  0996                     	;# 
  7639  0997                     	;# 
  7640  0E0F                     	;# 
  7641  0E10                     	;# 
  7642  0E11                     	;# 
  7643  0E12                     	;# 
  7644  0E13                     	;# 
  7645  0E14                     	;# 
  7646  0E15                     	;# 
  7647  0E16                     	;# 
  7648  0E17                     	;# 
  7649  0E18                     	;# 
  7650  0E19                     	;# 
  7651  0E1A                     	;# 
  7652  0E1B                     	;# 
  7653  0E1C                     	;# 
  7654  0E1D                     	;# 
  7655  0E1E                     	;# 
  7656  0E1F                     	;# 
  7657  0E20                     	;# 
  7658  0E21                     	;# 
  7659  0E22                     	;# 
  7660  0E23                     	;# 
  7661  0E24                     	;# 
  7662  0E25                     	;# 
  7663  0E26                     	;# 
  7664  0E27                     	;# 
  7665  0E28                     	;# 
  7666  0E29                     	;# 
  7667  0E2A                     	;# 
  7668  0E2B                     	;# 
  7669  0E2C                     	;# 
  7670  0E2D                     	;# 
  7671  0E2E                     	;# 
  7672  0E2F                     	;# 
  7673  0E30                     	;# 
  7674  0E31                     	;# 
  7675  0E32                     	;# 
  7676  0E33                     	;# 
  7677  0E34                     	;# 
  7678  0E35                     	;# 
  7679  0E36                     	;# 
  7680  0E37                     	;# 
  7681  0E8F                     	;# 
  7682  0E90                     	;# 
  7683  0E91                     	;# 
  7684  0E92                     	;# 
  7685  0E93                     	;# 
  7686  0E94                     	;# 
  7687  0E95                     	;# 
  7688  0E96                     	;# 
  7689  0E97                     	;# 
  7690  0E9C                     	;# 
  7691  0E9D                     	;# 
  7692  0E9E                     	;# 
  7693  0EA1                     	;# 
  7694  0EA2                     	;# 
  7695  0EA3                     	;# 
  7696  0EA4                     	;# 
  7697  0EA5                     	;# 
  7698  0EA9                     	;# 
  7699  0EAA                     	;# 
  7700  0EAB                     	;# 
  7701  0EAC                     	;# 
  7702  0EB1                     	;# 
  7703  0EB2                     	;# 
  7704  0EB3                     	;# 
  7705  0EB8                     	;# 
  7706  0EB9                     	;# 
  7707  0EBA                     	;# 
  7708  0EBB                     	;# 
  7709  0EBC                     	;# 
  7710  0EBD                     	;# 
  7711  0EBE                     	;# 
  7712  0EC3                     	;# 
  7713  0EC5                     	;# 
  7714  0EC6                     	;# 
  7715  0EC7                     	;# 
  7716  0EC8                     	;# 
  7717  0EC9                     	;# 
  7718  0ECA                     	;# 
  7719  0ECB                     	;# 
  7720  0ECC                     	;# 
  7721  0F10                     	;# 
  7722  0F11                     	;# 
  7723  0F12                     	;# 
  7724  0F13                     	;# 
  7725  0F14                     	;# 
  7726  0F15                     	;# 
  7727  0F16                     	;# 
  7728  0F17                     	;# 
  7729  0F18                     	;# 
  7730  0F19                     	;# 
  7731  0F1A                     	;# 
  7732  0F1B                     	;# 
  7733  0F1C                     	;# 
  7734  0F1D                     	;# 
  7735  0F1E                     	;# 
  7736  0F1F                     	;# 
  7737  0F20                     	;# 
  7738  0F21                     	;# 
  7739  0F22                     	;# 
  7740  0F23                     	;# 
  7741  0F24                     	;# 
  7742  0F25                     	;# 
  7743  0F26                     	;# 
  7744  0F27                     	;# 
  7745  0F28                     	;# 
  7746  0F29                     	;# 
  7747  0F2A                     	;# 
  7748  0F2B                     	;# 
  7749  0F2C                     	;# 
  7750  0F2D                     	;# 
  7751  0F2E                     	;# 
  7752  0F2F                     	;# 
  7753  0F30                     	;# 
  7754  0F31                     	;# 
  7755  0F32                     	;# 
  7756  0F38                     	;# 
  7757  0F39                     	;# 
  7758  0F3A                     	;# 
  7759  0F3B                     	;# 
  7760  0F3C                     	;# 
  7761  0F3D                     	;# 
  7762  0F3E                     	;# 
  7763  0F3F                     	;# 
  7764  0F40                     	;# 
  7765  0F41                     	;# 
  7766  0F43                     	;# 
  7767  0F44                     	;# 
  7768  0F45                     	;# 
  7769  0F46                     	;# 
  7770  0F47                     	;# 
  7771  0F48                     	;# 
  7772  0F49                     	;# 
  7773  0F4A                     	;# 
  7774  0F4B                     	;# 
  7775  0F4C                     	;# 
  7776  0F4E                     	;# 
  7777  0F4F                     	;# 
  7778  0F50                     	;# 
  7779  0F51                     	;# 
  7780  0F52                     	;# 
  7781  0F53                     	;# 
  7782  0F54                     	;# 
  7783  0F55                     	;# 
  7784  0F56                     	;# 
  7785  0F57                     	;# 
  7786  0F59                     	;# 
  7787  0F5A                     	;# 
  7788  0F5B                     	;# 
  7789  0F5C                     	;# 
  7790  0F5D                     	;# 
  7791  0F61                     	;# 
  7792  0F62                     	;# 
  7793  0F64                     	;# 
  7794  0F65                     	;# 
  7795  0F66                     	;# 
  7796  0F67                     	;# 
  7797  0F68                     	;# 
  7798  0F69                     	;# 
  7799  0F6A                     	;# 
  7800  0F6B                     	;# 
  7801  0F6C                     	;# 
  7802  0F6D                     	;# 
  7803  0FE4                     	;# 
  7804  0FE5                     	;# 
  7805  0FE6                     	;# 
  7806  0FE7                     	;# 
  7807  0FE8                     	;# 
  7808  0FE9                     	;# 
  7809  0FEA                     	;# 
  7810  0FEB                     	;# 
  7811  0FED                     	;# 
  7812  0FEE                     	;# 
  7813  0FEF                     	;# 
  7814  0000                     	;# 
  7815  0001                     	;# 
  7816  0002                     	;# 
  7817  0003                     	;# 
  7818  0004                     	;# 
  7819  0005                     	;# 
  7820  0006                     	;# 
  7821  0007                     	;# 
  7822  0008                     	;# 
  7823  0009                     	;# 
  7824  000A                     	;# 
  7825  000B                     	;# 
  7826  000C                     	;# 
  7827  000D                     	;# 
  7828  000E                     	;# 
  7829  000F                     	;# 
  7830  0010                     	;# 
  7831  0011                     	;# 
  7832  0012                     	;# 
  7833  0013                     	;# 
  7834  0014                     	;# 
  7835  0015                     	;# 
  7836  0016                     	;# 
  7837  0017                     	;# 
  7838  0018                     	;# 
  7839  0019                     	;# 
  7840  001A                     	;# 
  7841  001C                     	;# 
  7842  001C                     	;# 
  7843  001D                     	;# 
  7844  001D                     	;# 
  7845  001E                     	;# 
  7846  001F                     	;# 
  7847  008C                     	;# 
  7848  008C                     	;# 
  7849  008D                     	;# 
  7850  008E                     	;# 
  7851  008E                     	;# 
  7852  008F                     	;# 
  7853  0090                     	;# 
  7854  0090                     	;# 
  7855  0091                     	;# 
  7856  0093                     	;# 
  7857  0094                     	;# 
  7858  0095                     	;# 
  7859  0096                     	;# 
  7860  0097                     	;# 
  7861  0098                     	;# 
  7862  0099                     	;# 
  7863  009A                     	;# 
  7864  009B                     	;# 
  7865  009C                     	;# 
  7866  009D                     	;# 
  7867  009E                     	;# 
  7868  010C                     	;# 
  7869  010D                     	;# 
  7870  010E                     	;# 
  7871  010E                     	;# 
  7872  010F                     	;# 
  7873  0110                     	;# 
  7874  0110                     	;# 
  7875  0111                     	;# 
  7876  0112                     	;# 
  7877  0112                     	;# 
  7878  0113                     	;# 
  7879  0114                     	;# 
  7880  0114                     	;# 
  7881  0115                     	;# 
  7882  0116                     	;# 
  7883  0116                     	;# 
  7884  0117                     	;# 
  7885  0119                     	;# 
  7886  0119                     	;# 
  7887  0119                     	;# 
  7888  011A                     	;# 
  7889  011A                     	;# 
  7890  011A                     	;# 
  7891  011B                     	;# 
  7892  011B                     	;# 
  7893  011B                     	;# 
  7894  011B                     	;# 
  7895  011B                     	;# 
  7896  011C                     	;# 
  7897  011C                     	;# 
  7898  011C                     	;# 
  7899  011D                     	;# 
  7900  011D                     	;# 
  7901  011D                     	;# 
  7902  011E                     	;# 
  7903  011E                     	;# 
  7904  011E                     	;# 
  7905  011F                     	;# 
  7906  011F                     	;# 
  7907  011F                     	;# 
  7908  011F                     	;# 
  7909  011F                     	;# 
  7910  018C                     	;# 
  7911  018D                     	;# 
  7912  018E                     	;# 
  7913  018F                     	;# 
  7914  0190                     	;# 
  7915  0191                     	;# 
  7916  0192                     	;# 
  7917  0196                     	;# 
  7918  0197                     	;# 
  7919  0198                     	;# 
  7920  0199                     	;# 
  7921  019A                     	;# 
  7922  019B                     	;# 
  7923  019C                     	;# 
  7924  020C                     	;# 
  7925  020C                     	;# 
  7926  020D                     	;# 
  7927  020E                     	;# 
  7928  020F                     	;# 
  7929  020F                     	;# 
  7930  0210                     	;# 
  7931  0210                     	;# 
  7932  0211                     	;# 
  7933  0211                     	;# 
  7934  0212                     	;# 
  7935  0212                     	;# 
  7936  0213                     	;# 
  7937  0214                     	;# 
  7938  0215                     	;# 
  7939  0215                     	;# 
  7940  0216                     	;# 
  7941  0216                     	;# 
  7942  0217                     	;# 
  7943  0217                     	;# 
  7944  0218                     	;# 
  7945  0218                     	;# 
  7946  0219                     	;# 
  7947  021A                     	;# 
  7948  021B                     	;# 
  7949  021B                     	;# 
  7950  021C                     	;# 
  7951  021C                     	;# 
  7952  021D                     	;# 
  7953  021D                     	;# 
  7954  021E                     	;# 
  7955  021F                     	;# 
  7956  028C                     	;# 
  7957  028C                     	;# 
  7958  028D                     	;# 
  7959  028D                     	;# 
  7960  028E                     	;# 
  7961  028F                     	;# 
  7962  0290                     	;# 
  7963  0290                     	;# 
  7964  0291                     	;# 
  7965  0292                     	;# 
  7966  0292                     	;# 
  7967  0293                     	;# 
  7968  0293                     	;# 
  7969  0294                     	;# 
  7970  0295                     	;# 
  7971  0296                     	;# 
  7972  0296                     	;# 
  7973  0297                     	;# 
  7974  0298                     	;# 
  7975  0298                     	;# 
  7976  0299                     	;# 
  7977  0299                     	;# 
  7978  029A                     	;# 
  7979  029B                     	;# 
  7980  029C                     	;# 
  7981  029C                     	;# 
  7982  029D                     	;# 
  7983  030C                     	;# 
  7984  030C                     	;# 
  7985  030D                     	;# 
  7986  030E                     	;# 
  7987  030F                     	;# 
  7988  0310                     	;# 
  7989  0310                     	;# 
  7990  0311                     	;# 
  7991  0312                     	;# 
  7992  0313                     	;# 
  7993  0314                     	;# 
  7994  0314                     	;# 
  7995  0315                     	;# 
  7996  0316                     	;# 
  7997  0317                     	;# 
  7998  0318                     	;# 
  7999  0318                     	;# 
  8000  0319                     	;# 
  8001  031A                     	;# 
  8002  031B                     	;# 
  8003  031C                     	;# 
  8004  031C                     	;# 
  8005  031D                     	;# 
  8006  031E                     	;# 
  8007  031F                     	;# 
  8008  038C                     	;# 
  8009  038C                     	;# 
  8010  038D                     	;# 
  8011  038E                     	;# 
  8012  0390                     	;# 
  8013  0390                     	;# 
  8014  0391                     	;# 
  8015  0392                     	;# 
  8016  040C                     	;# 
  8017  040D                     	;# 
  8018  040E                     	;# 
  8019  040F                     	;# 
  8020  0410                     	;# 
  8021  0411                     	;# 
  8022  0416                     	;# 
  8023  0416                     	;# 
  8024  0417                     	;# 
  8025  0418                     	;# 
  8026  0418                     	;# 
  8027  0419                     	;# 
  8028  041A                     	;# 
  8029  041A                     	;# 
  8030  041B                     	;# 
  8031  041C                     	;# 
  8032  041C                     	;# 
  8033  041D                     	;# 
  8034  041E                     	;# 
  8035  041F                     	;# 
  8036  048C                     	;# 
  8037  048C                     	;# 
  8038  048D                     	;# 
  8039  048E                     	;# 
  8040  048F                     	;# 
  8041  048F                     	;# 
  8042  0490                     	;# 
  8043  0491                     	;# 
  8044  0492                     	;# 
  8045  0492                     	;# 
  8046  0493                     	;# 
  8047  0494                     	;# 
  8048  0495                     	;# 
  8049  0495                     	;# 
  8050  0496                     	;# 
  8051  0497                     	;# 
  8052  0498                     	;# 
  8053  0499                     	;# 
  8054  049A                     	;# 
  8055  049B                     	;# 
  8056  049C                     	;# 
  8057  049D                     	;# 
  8058  050C                     	;# 
  8059  050C                     	;# 
  8060  050D                     	;# 
  8061  050E                     	;# 
  8062  050F                     	;# 
  8063  050F                     	;# 
  8064  0510                     	;# 
  8065  0511                     	;# 
  8066  0512                     	;# 
  8067  0512                     	;# 
  8068  0513                     	;# 
  8069  0514                     	;# 
  8070  0515                     	;# 
  8071  0515                     	;# 
  8072  0516                     	;# 
  8073  0517                     	;# 
  8074  0518                     	;# 
  8075  0519                     	;# 
  8076  051A                     	;# 
  8077  051B                     	;# 
  8078  051C                     	;# 
  8079  051D                     	;# 
  8080  058C                     	;# 
  8081  058C                     	;# 
  8082  058D                     	;# 
  8083  058E                     	;# 
  8084  058F                     	;# 
  8085  058F                     	;# 
  8086  0590                     	;# 
  8087  0591                     	;# 
  8088  0592                     	;# 
  8089  0593                     	;# 
  8090  060C                     	;# 
  8091  060D                     	;# 
  8092  060E                     	;# 
  8093  060F                     	;# 
  8094  0610                     	;# 
  8095  0611                     	;# 
  8096  0612                     	;# 
  8097  0613                     	;# 
  8098  0614                     	;# 
  8099  0616                     	;# 
  8100  0617                     	;# 
  8101  0618                     	;# 
  8102  0619                     	;# 
  8103  061A                     	;# 
  8104  061B                     	;# 
  8105  061C                     	;# 
  8106  061D                     	;# 
  8107  061E                     	;# 
  8108  068C                     	;# 
  8109  068D                     	;# 
  8110  068E                     	;# 
  8111  068F                     	;# 
  8112  0690                     	;# 
  8113  0691                     	;# 
  8114  0692                     	;# 
  8115  0693                     	;# 
  8116  0694                     	;# 
  8117  070C                     	;# 
  8118  070D                     	;# 
  8119  070E                     	;# 
  8120  070F                     	;# 
  8121  0710                     	;# 
  8122  0711                     	;# 
  8123  0712                     	;# 
  8124  0713                     	;# 
  8125  0714                     	;# 
  8126  0716                     	;# 
  8127  0717                     	;# 
  8128  0718                     	;# 
  8129  0719                     	;# 
  8130  071A                     	;# 
  8131  071B                     	;# 
  8132  071C                     	;# 
  8133  071D                     	;# 
  8134  071E                     	;# 
  8135  0796                     	;# 
  8136  0797                     	;# 
  8137  0798                     	;# 
  8138  0799                     	;# 
  8139  079A                     	;# 
  8140  079B                     	;# 
  8141  080C                     	;# 
  8142  080D                     	;# 
  8143  080E                     	;# 
  8144  080F                     	;# 
  8145  0810                     	;# 
  8146  0811                     	;# 
  8147  0812                     	;# 
  8148  0813                     	;# 
  8149  0814                     	;# 
  8150  081A                     	;# 
  8151  081B                     	;# 
  8152  081C                     	;# 
  8153  081D                     	;# 
  8154  081E                     	;# 
  8155  081F                     	;# 
  8156  088C                     	;# 
  8157  088D                     	;# 
  8158  088E                     	;# 
  8159  088F                     	;# 
  8160  0890                     	;# 
  8161  0891                     	;# 
  8162  0892                     	;# 
  8163  0893                     	;# 
  8164  0895                     	;# 
  8165  0896                     	;# 
  8166  0897                     	;# 
  8167  0898                     	;# 
  8168  0899                     	;# 
  8169  089A                     	;# 
  8170  089B                     	;# 
  8171  090C                     	;# 
  8172  090E                     	;# 
  8173  090F                     	;# 
  8174  091F                     	;# 
  8175  091F                     	;# 
  8176  098F                     	;# 
  8177  098F                     	;# 
  8178  0990                     	;# 
  8179  0991                     	;# 
  8180  0992                     	;# 
  8181  0993                     	;# 
  8182  0994                     	;# 
  8183  0995                     	;# 
  8184  0996                     	;# 
  8185  0997                     	;# 
  8186  0E0F                     	;# 
  8187  0E10                     	;# 
  8188  0E11                     	;# 
  8189  0E12                     	;# 
  8190  0E13                     	;# 
  8191  0E14                     	;# 
  8192  0E15                     	;# 
  8193  0E16                     	;# 
  8194  0E17                     	;# 
  8195  0E18                     	;# 
  8196  0E19                     	;# 
  8197  0E1A                     	;# 
  8198  0E1B                     	;# 
  8199  0E1C                     	;# 
  8200  0E1D                     	;# 
  8201  0E1E                     	;# 
  8202  0E1F                     	;# 
  8203  0E20                     	;# 
  8204  0E21                     	;# 
  8205  0E22                     	;# 
  8206  0E23                     	;# 
  8207  0E24                     	;# 
  8208  0E25                     	;# 
  8209  0E26                     	;# 
  8210  0E27                     	;# 
  8211  0E28                     	;# 
  8212  0E29                     	;# 
  8213  0E2A                     	;# 
  8214  0E2B                     	;# 
  8215  0E2C                     	;# 
  8216  0E2D                     	;# 
  8217  0E2E                     	;# 
  8218  0E2F                     	;# 
  8219  0E30                     	;# 
  8220  0E31                     	;# 
  8221  0E32                     	;# 
  8222  0E33                     	;# 
  8223  0E34                     	;# 
  8224  0E35                     	;# 
  8225  0E36                     	;# 
  8226  0E37                     	;# 
  8227  0E8F                     	;# 
  8228  0E90                     	;# 
  8229  0E91                     	;# 
  8230  0E92                     	;# 
  8231  0E93                     	;# 
  8232  0E94                     	;# 
  8233  0E95                     	;# 
  8234  0E96                     	;# 
  8235  0E97                     	;# 
  8236  0E9C                     	;# 
  8237  0E9D                     	;# 
  8238  0E9E                     	;# 
  8239  0EA1                     	;# 
  8240  0EA2                     	;# 
  8241  0EA3                     	;# 
  8242  0EA4                     	;# 
  8243  0EA5                     	;# 
  8244  0EA9                     	;# 
  8245  0EAA                     	;# 
  8246  0EAB                     	;# 
  8247  0EAC                     	;# 
  8248  0EB1                     	;# 
  8249  0EB2                     	;# 
  8250  0EB3                     	;# 
  8251  0EB8                     	;# 
  8252  0EB9                     	;# 
  8253  0EBA                     	;# 
  8254  0EBB                     	;# 
  8255  0EBC                     	;# 
  8256  0EBD                     	;# 
  8257  0EBE                     	;# 
  8258  0EC3                     	;# 
  8259  0EC5                     	;# 
  8260  0EC6                     	;# 
  8261  0EC7                     	;# 
  8262  0EC8                     	;# 
  8263  0EC9                     	;# 
  8264  0ECA                     	;# 
  8265  0ECB                     	;# 
  8266  0ECC                     	;# 
  8267  0F10                     	;# 
  8268  0F11                     	;# 
  8269  0F12                     	;# 
  8270  0F13                     	;# 
  8271  0F14                     	;# 
  8272  0F15                     	;# 
  8273  0F16                     	;# 
  8274  0F17                     	;# 
  8275  0F18                     	;# 
  8276  0F19                     	;# 
  8277  0F1A                     	;# 
  8278  0F1B                     	;# 
  8279  0F1C                     	;# 
  8280  0F1D                     	;# 
  8281  0F1E                     	;# 
  8282  0F1F                     	;# 
  8283  0F20                     	;# 
  8284  0F21                     	;# 
  8285  0F22                     	;# 
  8286  0F23                     	;# 
  8287  0F24                     	;# 
  8288  0F25                     	;# 
  8289  0F26                     	;# 
  8290  0F27                     	;# 
  8291  0F28                     	;# 
  8292  0F29                     	;# 
  8293  0F2A                     	;# 
  8294  0F2B                     	;# 
  8295  0F2C                     	;# 
  8296  0F2D                     	;# 
  8297  0F2E                     	;# 
  8298  0F2F                     	;# 
  8299  0F30                     	;# 
  8300  0F31                     	;# 
  8301  0F32                     	;# 
  8302  0F38                     	;# 
  8303  0F39                     	;# 
  8304  0F3A                     	;# 
  8305  0F3B                     	;# 
  8306  0F3C                     	;# 
  8307  0F3D                     	;# 
  8308  0F3E                     	;# 
  8309  0F3F                     	;# 
  8310  0F40                     	;# 
  8311  0F41                     	;# 
  8312  0F43                     	;# 
  8313  0F44                     	;# 
  8314  0F45                     	;# 
  8315  0F46                     	;# 
  8316  0F47                     	;# 
  8317  0F48                     	;# 
  8318  0F49                     	;# 
  8319  0F4A                     	;# 
  8320  0F4B                     	;# 
  8321  0F4C                     	;# 
  8322  0F4E                     	;# 
  8323  0F4F                     	;# 
  8324  0F50                     	;# 
  8325  0F51                     	;# 
  8326  0F52                     	;# 
  8327  0F53                     	;# 
  8328  0F54                     	;# 
  8329  0F55                     	;# 
  8330  0F56                     	;# 
  8331  0F57                     	;# 
  8332  0F59                     	;# 
  8333  0F5A                     	;# 
  8334  0F5B                     	;# 
  8335  0F5C                     	;# 
  8336  0F5D                     	;# 
  8337  0F61                     	;# 
  8338  0F62                     	;# 
  8339  0F64                     	;# 
  8340  0F65                     	;# 
  8341  0F66                     	;# 
  8342  0F67                     	;# 
  8343  0F68                     	;# 
  8344  0F69                     	;# 
  8345  0F6A                     	;# 
  8346  0F6B                     	;# 
  8347  0F6C                     	;# 
  8348  0F6D                     	;# 
  8349  0FE4                     	;# 
  8350  0FE5                     	;# 
  8351  0FE6                     	;# 
  8352  0FE7                     	;# 
  8353  0FE8                     	;# 
  8354  0FE9                     	;# 
  8355  0FEA                     	;# 
  8356  0FEB                     	;# 
  8357  0FED                     	;# 
  8358  0FEE                     	;# 
  8359  0FEF                     	;# 
  8360  0000                     	;# 
  8361  0001                     	;# 
  8362  0002                     	;# 
  8363  0003                     	;# 
  8364  0004                     	;# 
  8365  0005                     	;# 
  8366  0006                     	;# 
  8367  0007                     	;# 
  8368  0008                     	;# 
  8369  0009                     	;# 
  8370  000A                     	;# 
  8371  000B                     	;# 
  8372  000C                     	;# 
  8373  000D                     	;# 
  8374  000E                     	;# 
  8375  000F                     	;# 
  8376  0010                     	;# 
  8377  0011                     	;# 
  8378  0012                     	;# 
  8379  0013                     	;# 
  8380  0014                     	;# 
  8381  0015                     	;# 
  8382  0016                     	;# 
  8383  0017                     	;# 
  8384  0018                     	;# 
  8385  0019                     	;# 
  8386  001A                     	;# 
  8387  001C                     	;# 
  8388  001C                     	;# 
  8389  001D                     	;# 
  8390  001D                     	;# 
  8391  001E                     	;# 
  8392  001F                     	;# 
  8393  008C                     	;# 
  8394  008C                     	;# 
  8395  008D                     	;# 
  8396  008E                     	;# 
  8397  008E                     	;# 
  8398  008F                     	;# 
  8399  0090                     	;# 
  8400  0090                     	;# 
  8401  0091                     	;# 
  8402  0093                     	;# 
  8403  0094                     	;# 
  8404  0095                     	;# 
  8405  0096                     	;# 
  8406  0097                     	;# 
  8407  0098                     	;# 
  8408  0099                     	;# 
  8409  009A                     	;# 
  8410  009B                     	;# 
  8411  009C                     	;# 
  8412  009D                     	;# 
  8413  009E                     	;# 
  8414  010C                     	;# 
  8415  010D                     	;# 
  8416  010E                     	;# 
  8417  010E                     	;# 
  8418  010F                     	;# 
  8419  0110                     	;# 
  8420  0110                     	;# 
  8421  0111                     	;# 
  8422  0112                     	;# 
  8423  0112                     	;# 
  8424  0113                     	;# 
  8425  0114                     	;# 
  8426  0114                     	;# 
  8427  0115                     	;# 
  8428  0116                     	;# 
  8429  0116                     	;# 
  8430  0117                     	;# 
  8431  0119                     	;# 
  8432  0119                     	;# 
  8433  0119                     	;# 
  8434  011A                     	;# 
  8435  011A                     	;# 
  8436  011A                     	;# 
  8437  011B                     	;# 
  8438  011B                     	;# 
  8439  011B                     	;# 
  8440  011B                     	;# 
  8441  011B                     	;# 
  8442  011C                     	;# 
  8443  011C                     	;# 
  8444  011C                     	;# 
  8445  011D                     	;# 
  8446  011D                     	;# 
  8447  011D                     	;# 
  8448  011E                     	;# 
  8449  011E                     	;# 
  8450  011E                     	;# 
  8451  011F                     	;# 
  8452  011F                     	;# 
  8453  011F                     	;# 
  8454  011F                     	;# 
  8455  011F                     	;# 
  8456  018C                     	;# 
  8457  018D                     	;# 
  8458  018E                     	;# 
  8459  018F                     	;# 
  8460  0190                     	;# 
  8461  0191                     	;# 
  8462  0192                     	;# 
  8463  0196                     	;# 
  8464  0197                     	;# 
  8465  0198                     	;# 
  8466  0199                     	;# 
  8467  019A                     	;# 
  8468  019B                     	;# 
  8469  019C                     	;# 
  8470  020C                     	;# 
  8471  020C                     	;# 
  8472  020D                     	;# 
  8473  020E                     	;# 
  8474  020F                     	;# 
  8475  020F                     	;# 
  8476  0210                     	;# 
  8477  0210                     	;# 
  8478  0211                     	;# 
  8479  0211                     	;# 
  8480  0212                     	;# 
  8481  0212                     	;# 
  8482  0213                     	;# 
  8483  0214                     	;# 
  8484  0215                     	;# 
  8485  0215                     	;# 
  8486  0216                     	;# 
  8487  0216                     	;# 
  8488  0217                     	;# 
  8489  0217                     	;# 
  8490  0218                     	;# 
  8491  0218                     	;# 
  8492  0219                     	;# 
  8493  021A                     	;# 
  8494  021B                     	;# 
  8495  021B                     	;# 
  8496  021C                     	;# 
  8497  021C                     	;# 
  8498  021D                     	;# 
  8499  021D                     	;# 
  8500  021E                     	;# 
  8501  021F                     	;# 
  8502  028C                     	;# 
  8503  028C                     	;# 
  8504  028D                     	;# 
  8505  028D                     	;# 
  8506  028E                     	;# 
  8507  028F                     	;# 
  8508  0290                     	;# 
  8509  0290                     	;# 
  8510  0291                     	;# 
  8511  0292                     	;# 
  8512  0292                     	;# 
  8513  0293                     	;# 
  8514  0293                     	;# 
  8515  0294                     	;# 
  8516  0295                     	;# 
  8517  0296                     	;# 
  8518  0296                     	;# 
  8519  0297                     	;# 
  8520  0298                     	;# 
  8521  0298                     	;# 
  8522  0299                     	;# 
  8523  0299                     	;# 
  8524  029A                     	;# 
  8525  029B                     	;# 
  8526  029C                     	;# 
  8527  029C                     	;# 
  8528  029D                     	;# 
  8529  030C                     	;# 
  8530  030C                     	;# 
  8531  030D                     	;# 
  8532  030E                     	;# 
  8533  030F                     	;# 
  8534  0310                     	;# 
  8535  0310                     	;# 
  8536  0311                     	;# 
  8537  0312                     	;# 
  8538  0313                     	;# 
  8539  0314                     	;# 
  8540  0314                     	;# 
  8541  0315                     	;# 
  8542  0316                     	;# 
  8543  0317                     	;# 
  8544  0318                     	;# 
  8545  0318                     	;# 
  8546  0319                     	;# 
  8547  031A                     	;# 
  8548  031B                     	;# 
  8549  031C                     	;# 
  8550  031C                     	;# 
  8551  031D                     	;# 
  8552  031E                     	;# 
  8553  031F                     	;# 
  8554  038C                     	;# 
  8555  038C                     	;# 
  8556  038D                     	;# 
  8557  038E                     	;# 
  8558  0390                     	;# 
  8559  0390                     	;# 
  8560  0391                     	;# 
  8561  0392                     	;# 
  8562  040C                     	;# 
  8563  040D                     	;# 
  8564  040E                     	;# 
  8565  040F                     	;# 
  8566  0410                     	;# 
  8567  0411                     	;# 
  8568  0416                     	;# 
  8569  0416                     	;# 
  8570  0417                     	;# 
  8571  0418                     	;# 
  8572  0418                     	;# 
  8573  0419                     	;# 
  8574  041A                     	;# 
  8575  041A                     	;# 
  8576  041B                     	;# 
  8577  041C                     	;# 
  8578  041C                     	;# 
  8579  041D                     	;# 
  8580  041E                     	;# 
  8581  041F                     	;# 
  8582  048C                     	;# 
  8583  048C                     	;# 
  8584  048D                     	;# 
  8585  048E                     	;# 
  8586  048F                     	;# 
  8587  048F                     	;# 
  8588  0490                     	;# 
  8589  0491                     	;# 
  8590  0492                     	;# 
  8591  0492                     	;# 
  8592  0493                     	;# 
  8593  0494                     	;# 
  8594  0495                     	;# 
  8595  0495                     	;# 
  8596  0496                     	;# 
  8597  0497                     	;# 
  8598  0498                     	;# 
  8599  0499                     	;# 
  8600  049A                     	;# 
  8601  049B                     	;# 
  8602  049C                     	;# 
  8603  049D                     	;# 
  8604  050C                     	;# 
  8605  050C                     	;# 
  8606  050D                     	;# 
  8607  050E                     	;# 
  8608  050F                     	;# 
  8609  050F                     	;# 
  8610  0510                     	;# 
  8611  0511                     	;# 
  8612  0512                     	;# 
  8613  0512                     	;# 
  8614  0513                     	;# 
  8615  0514                     	;# 
  8616  0515                     	;# 
  8617  0515                     	;# 
  8618  0516                     	;# 
  8619  0517                     	;# 
  8620  0518                     	;# 
  8621  0519                     	;# 
  8622  051A                     	;# 
  8623  051B                     	;# 
  8624  051C                     	;# 
  8625  051D                     	;# 
  8626  058C                     	;# 
  8627  058C                     	;# 
  8628  058D                     	;# 
  8629  058E                     	;# 
  8630  058F                     	;# 
  8631  058F                     	;# 
  8632  0590                     	;# 
  8633  0591                     	;# 
  8634  0592                     	;# 
  8635  0593                     	;# 
  8636  060C                     	;# 
  8637  060D                     	;# 
  8638  060E                     	;# 
  8639  060F                     	;# 
  8640  0610                     	;# 
  8641  0611                     	;# 
  8642  0612                     	;# 
  8643  0613                     	;# 
  8644  0614                     	;# 
  8645  0616                     	;# 
  8646  0617                     	;# 
  8647  0618                     	;# 
  8648  0619                     	;# 
  8649  061A                     	;# 
  8650  061B                     	;# 
  8651  061C                     	;# 
  8652  061D                     	;# 
  8653  061E                     	;# 
  8654  068C                     	;# 
  8655  068D                     	;# 
  8656  068E                     	;# 
  8657  068F                     	;# 
  8658  0690                     	;# 
  8659  0691                     	;# 
  8660  0692                     	;# 
  8661  0693                     	;# 
  8662  0694                     	;# 
  8663  070C                     	;# 
  8664  070D                     	;# 
  8665  070E                     	;# 
  8666  070F                     	;# 
  8667  0710                     	;# 
  8668  0711                     	;# 
  8669  0712                     	;# 
  8670  0713                     	;# 
  8671  0714                     	;# 
  8672  0716                     	;# 
  8673  0717                     	;# 
  8674  0718                     	;# 
  8675  0719                     	;# 
  8676  071A                     	;# 
  8677  071B                     	;# 
  8678  071C                     	;# 
  8679  071D                     	;# 
  8680  071E                     	;# 
  8681  0796                     	;# 
  8682  0797                     	;# 
  8683  0798                     	;# 
  8684  0799                     	;# 
  8685  079A                     	;# 
  8686  079B                     	;# 
  8687  080C                     	;# 
  8688  080D                     	;# 
  8689  080E                     	;# 
  8690  080F                     	;# 
  8691  0810                     	;# 
  8692  0811                     	;# 
  8693  0812                     	;# 
  8694  0813                     	;# 
  8695  0814                     	;# 
  8696  081A                     	;# 
  8697  081B                     	;# 
  8698  081C                     	;# 
  8699  081D                     	;# 
  8700  081E                     	;# 
  8701  081F                     	;# 
  8702  088C                     	;# 
  8703  088D                     	;# 
  8704  088E                     	;# 
  8705  088F                     	;# 
  8706  0890                     	;# 
  8707  0891                     	;# 
  8708  0892                     	;# 
  8709  0893                     	;# 
  8710  0895                     	;# 
  8711  0896                     	;# 
  8712  0897                     	;# 
  8713  0898                     	;# 
  8714  0899                     	;# 
  8715  089A                     	;# 
  8716  089B                     	;# 
  8717  090C                     	;# 
  8718  090E                     	;# 
  8719  090F                     	;# 
  8720  091F                     	;# 
  8721  091F                     	;# 
  8722  098F                     	;# 
  8723  098F                     	;# 
  8724  0990                     	;# 
  8725  0991                     	;# 
  8726  0992                     	;# 
  8727  0993                     	;# 
  8728  0994                     	;# 
  8729  0995                     	;# 
  8730  0996                     	;# 
  8731  0997                     	;# 
  8732  0E0F                     	;# 
  8733  0E10                     	;# 
  8734  0E11                     	;# 
  8735  0E12                     	;# 
  8736  0E13                     	;# 
  8737  0E14                     	;# 
  8738  0E15                     	;# 
  8739  0E16                     	;# 
  8740  0E17                     	;# 
  8741  0E18                     	;# 
  8742  0E19                     	;# 
  8743  0E1A                     	;# 
  8744  0E1B                     	;# 
  8745  0E1C                     	;# 
  8746  0E1D                     	;# 
  8747  0E1E                     	;# 
  8748  0E1F                     	;# 
  8749  0E20                     	;# 
  8750  0E21                     	;# 
  8751  0E22                     	;# 
  8752  0E23                     	;# 
  8753  0E24                     	;# 
  8754  0E25                     	;# 
  8755  0E26                     	;# 
  8756  0E27                     	;# 
  8757  0E28                     	;# 
  8758  0E29                     	;# 
  8759  0E2A                     	;# 
  8760  0E2B                     	;# 
  8761  0E2C                     	;# 
  8762  0E2D                     	;# 
  8763  0E2E                     	;# 
  8764  0E2F                     	;# 
  8765  0E30                     	;# 
  8766  0E31                     	;# 
  8767  0E32                     	;# 
  8768  0E33                     	;# 
  8769  0E34                     	;# 
  8770  0E35                     	;# 
  8771  0E36                     	;# 
  8772  0E37                     	;# 
  8773  0E8F                     	;# 
  8774  0E90                     	;# 
  8775  0E91                     	;# 
  8776  0E92                     	;# 
  8777  0E93                     	;# 
  8778  0E94                     	;# 
  8779  0E95                     	;# 
  8780  0E96                     	;# 
  8781  0E97                     	;# 
  8782  0E9C                     	;# 
  8783  0E9D                     	;# 
  8784  0E9E                     	;# 
  8785  0EA1                     	;# 
  8786  0EA2                     	;# 
  8787  0EA3                     	;# 
  8788  0EA4                     	;# 
  8789  0EA5                     	;# 
  8790  0EA9                     	;# 
  8791  0EAA                     	;# 
  8792  0EAB                     	;# 
  8793  0EAC                     	;# 
  8794  0EB1                     	;# 
  8795  0EB2                     	;# 
  8796  0EB3                     	;# 
  8797  0EB8                     	;# 
  8798  0EB9                     	;# 
  8799  0EBA                     	;# 
  8800  0EBB                     	;# 
  8801  0EBC                     	;# 
  8802  0EBD                     	;# 
  8803  0EBE                     	;# 
  8804  0EC3                     	;# 
  8805  0EC5                     	;# 
  8806  0EC6                     	;# 
  8807  0EC7                     	;# 
  8808  0EC8                     	;# 
  8809  0EC9                     	;# 
  8810  0ECA                     	;# 
  8811  0ECB                     	;# 
  8812  0ECC                     	;# 
  8813  0F10                     	;# 
  8814  0F11                     	;# 
  8815  0F12                     	;# 
  8816  0F13                     	;# 
  8817  0F14                     	;# 
  8818  0F15                     	;# 
  8819  0F16                     	;# 
  8820  0F17                     	;# 
  8821  0F18                     	;# 
  8822  0F19                     	;# 
  8823  0F1A                     	;# 
  8824  0F1B                     	;# 
  8825  0F1C                     	;# 
  8826  0F1D                     	;# 
  8827  0F1E                     	;# 
  8828  0F1F                     	;# 
  8829  0F20                     	;# 
  8830  0F21                     	;# 
  8831  0F22                     	;# 
  8832  0F23                     	;# 
  8833  0F24                     	;# 
  8834  0F25                     	;# 
  8835  0F26                     	;# 
  8836  0F27                     	;# 
  8837  0F28                     	;# 
  8838  0F29                     	;# 
  8839  0F2A                     	;# 
  8840  0F2B                     	;# 
  8841  0F2C                     	;# 
  8842  0F2D                     	;# 
  8843  0F2E                     	;# 
  8844  0F2F                     	;# 
  8845  0F30                     	;# 
  8846  0F31                     	;# 
  8847  0F32                     	;# 
  8848  0F38                     	;# 
  8849  0F39                     	;# 
  8850  0F3A                     	;# 
  8851  0F3B                     	;# 
  8852  0F3C                     	;# 
  8853  0F3D                     	;# 
  8854  0F3E                     	;# 
  8855  0F3F                     	;# 
  8856  0F40                     	;# 
  8857  0F41                     	;# 
  8858  0F43                     	;# 
  8859  0F44                     	;# 
  8860  0F45                     	;# 
  8861  0F46                     	;# 
  8862  0F47                     	;# 
  8863  0F48                     	;# 
  8864  0F49                     	;# 
  8865  0F4A                     	;# 
  8866  0F4B                     	;# 
  8867  0F4C                     	;# 
  8868  0F4E                     	;# 
  8869  0F4F                     	;# 
  8870  0F50                     	;# 
  8871  0F51                     	;# 
  8872  0F52                     	;# 
  8873  0F53                     	;# 
  8874  0F54                     	;# 
  8875  0F55                     	;# 
  8876  0F56                     	;# 
  8877  0F57                     	;# 
  8878  0F59                     	;# 
  8879  0F5A                     	;# 
  8880  0F5B                     	;# 
  8881  0F5C                     	;# 
  8882  0F5D                     	;# 
  8883  0F61                     	;# 
  8884  0F62                     	;# 
  8885  0F64                     	;# 
  8886  0F65                     	;# 
  8887  0F66                     	;# 
  8888  0F67                     	;# 
  8889  0F68                     	;# 
  8890  0F69                     	;# 
  8891  0F6A                     	;# 
  8892  0F6B                     	;# 
  8893  0F6C                     	;# 
  8894  0F6D                     	;# 
  8895  0FE4                     	;# 
  8896  0FE5                     	;# 
  8897  0FE6                     	;# 
  8898  0FE7                     	;# 
  8899  0FE8                     	;# 
  8900  0FE9                     	;# 
  8901  0FEA                     	;# 
  8902  0FEB                     	;# 
  8903  0FED                     	;# 
  8904  0FEE                     	;# 
  8905  0FEF                     	;# 
  8906                           
  8907 ;; Function _limitTempThreshUnits is unused but had its address taken
  8908  0000                     
  8909 ;; Function _limitHoursUnits is unused but had its address taken
  8910  0000                     
  8911                           	psect	idataBANK0
  8912  0910                     __pidataBANK0:	
  8913                           
  8914                           ;initializer for _mode_field_subfield
  8915  0910  34FF               	retlw	255
  8916  0911  34FF               	retlw	255
  8917  0912  34FF               	retlw	255
  8918  0913  34FF               	retlw	255
  8919                           
  8920                           ;initializer for _lum_thresh
  8921  0914  3402               	retlw	2
  8922                           
  8923                           ;initializer for _temp_thresh
  8924  0915  3464               	retlw	100
  8925                           
  8926                           ;initializer for _tala
  8927  0916  3403               	retlw	3
  8928                           
  8929                           ;initializer for _pmon
  8930  0917  3405               	retlw	5
  8931                           
  8932                           ;initializer for _nreg
  8933  0918  341E               	retlw	30
  8934                           
  8935                           	psect	stringtext1
  8936  1000                     __pstringtext1:	
  8937  1000                     _fsmStateTable:	
  8938  1000  345A               	retlw	low _do_I2C_IDLE
  8939  1001  3408               	retlw	high _do_I2C_IDLE
  8940  1002  34D1               	retlw	low _do_I2C_SEND_ADR_READ
  8941  1003  3408               	retlw	high _do_I2C_SEND_ADR_READ
  8942  1004  34B9               	retlw	low _do_I2C_SEND_ADR_WRITE
  8943  1005  3408               	retlw	high _do_I2C_SEND_ADR_WRITE
  8944  1006  3458               	retlw	low _do_I2C_TX
  8945  1007  340F               	retlw	high _do_I2C_TX
  8946  1008  3474               	retlw	low _do_I2C_RX
  8947  1009  340E               	retlw	high _do_I2C_RX
  8948  100A  349B               	retlw	low _do_I2C_RCEN
  8949  100B  3408               	retlw	high _do_I2C_RCEN
  8950  100C  3472               	retlw	low _do_I2C_TX_EMPTY
  8951  100D  340D               	retlw	high _do_I2C_TX_EMPTY
  8952  100E  345F               	retlw	low _do_I2C_SEND_RESTART_READ
  8953  100F  3408               	retlw	high _do_I2C_SEND_RESTART_READ
  8954  1010  3464               	retlw	low _do_I2C_SEND_RESTART_WRITE
  8955  1011  3408               	retlw	high _do_I2C_SEND_RESTART_WRITE
  8956  1012  3469               	retlw	low _do_I2C_SEND_RESTART
  8957  1013  3408               	retlw	high _do_I2C_SEND_RESTART
  8958  1014  346E               	retlw	low _do_I2C_SEND_STOP
  8959  1015  3408               	retlw	high _do_I2C_SEND_STOP
  8960  1016  3473               	retlw	low _do_I2C_DO_ACK
  8961  1017  3408               	retlw	high _do_I2C_DO_ACK
  8962  1018  3478               	retlw	low _do_I2C_DO_NACK_STOP
  8963  1019  3408               	retlw	high _do_I2C_DO_NACK_STOP
  8964  101A  34FB               	retlw	low _do_I2C_DO_NACK_RESTART
  8965  101B  3407               	retlw	high _do_I2C_DO_NACK_RESTART
  8966  101C  34B1               	retlw	low _do_I2C_RESET
  8967  101D  3408               	retlw	high _do_I2C_RESET
  8968  101E  3457               	retlw	low _do_I2C_DO_ADDRESS_NACK
  8969  101F  340C               	retlw	high _do_I2C_DO_ADDRESS_NACK
  8970  1020                     __end_of_fsmStateTable:	
  8971                           
  8972                           	psect	stringtext2
  8973  1020                     __pstringtext2:	
  8974  1020                     _num_subfields:	
  8975  1020  3404               	retlw	4
  8976  1021  3401               	retlw	1
  8977  1022  3402               	retlw	2
  8978  1023  3401               	retlw	1
  8979  1024                     __end_of_num_subfields:	
  8980                           
  8981                           	psect	nvBANK0
  8982  0068                     __pnvBANK0:	
  8983  0068                     _timer1ReloadVal:	
  8984  0068                     	ds	2
  8985                           
  8986                           	psect	nvBANK1
  8987  00CC                     __pnvBANK1:	
  8988  00CC                     _TMR0_InterruptHandler:	
  8989  00CC                     	ds	2
  8990  00CE                     _TMR2_InterruptHandler:	
  8991  00CE                     	ds	2
  8992  00D0                     _TMR1_InterruptHandler:	
  8993  00D0                     	ds	2
  8994  00D2                     _INT_InterruptHandler:	
  8995  00D2                     	ds	2
  8996  000E                     _PORTCbits	set	14
  8997  0013                     _TRISCbits	set	19
  8998  000D                     _PORTBbits	set	13
  8999  0016                     _LATAbits	set	22
  9000  001E                     _T0CON0bits	set	30
  9001  001E                     _T0CON0	set	30
  9002  001C                     _TMR0L	set	28
  9003  001D                     _TMR0H	set	29
  9004  001F                     _T0CON1	set	31
  9005  0014                     _TRISD	set	20
  9006  0013                     _TRISC	set	19
  9007  0012                     _TRISB	set	18
  9008  0011                     _TRISA	set	17
  9009  0015                     _TRISE	set	21
  9010  0018                     _LATC	set	24
  9011  0017                     _LATB	set	23
  9012  0016                     _LATA	set	22
  9013  0019                     _LATD	set	25
  9014  001A                     _LATE	set	26
  9015  000B                     _INTCONbits	set	11
  9016  0094                     _ADCON1bits	set	148
  9017  008E                     _ADPREVL	set	142
  9018  008F                     _ADPREVH	set	143
  9019  0097                     _ADSTATbits	set	151
  9020  0090                     _ADACCL	set	144
  9021  0091                     _ADACCH	set	145
  9022  0095                     _ADCON2bits	set	149
  9023  009C                     _ADPRE	set	156
  9024  0096                     _ADCON3bits	set	150
  9025  008C                     _ADRESL	set	140
  9026  008D                     _ADRESH	set	141
  9027  0093                     _ADCON0bits	set	147
  9028  009D                     _ADACQ	set	157
  9029  0093                     _ADCON0	set	147
  9030  0098                     _ADCLK	set	152
  9031  0099                     _ADACT	set	153
  9032  009A                     _ADREF	set	154
  9033  0097                     _ADSTAT	set	151
  9034  0096                     _ADCON3	set	150
  9035  0095                     _ADCON2	set	149
  9036  0094                     _ADCON1	set	148
  9037  009B                     _ADCAP	set	155
  9038  009E                     _ADPCH	set	158
  9039  0116                     _ADERRL	set	278
  9040  0117                     _ADERRH	set	279
  9041  0114                     _ADFLTRL	set	276
  9042  0115                     _ADFLTRH	set	277
  9043  010C                     _ADCNT	set	268
  9044  010D                     _ADRPT	set	269
  9045  0113                     _ADSTPTH	set	275
  9046  0112                     _ADSTPTL	set	274
  9047  0111                     _ADUTHH	set	273
  9048  0110                     _ADUTHL	set	272
  9049  010F                     _ADLTHH	set	271
  9050  010E                     _ADLTHL	set	270
  9051  018F                     _SSP1STATbits	set	399
  9052  018E                     _SSP1MSK	set	398
  9053  018C                     _SSP1BUF	set	396
  9054  0191                     _SSP1CON2bits	set	401
  9055  018D                     _SSP1ADD	set	397
  9056  0191                     _SSP1CON2	set	401
  9057  0190                     _SSP1CON1	set	400
  9058  018F                     _SSP1STAT	set	399
  9059  0190                     _SSP1CON1bits	set	400
  9060  021F                     _CCPTMRS1bits	set	543
  9061  020F                     _T1GCONbits	set	527
  9062  020E                     _T1CONbits	set	526
  9063  020E                     _T1CON	set	526
  9064  020C                     _TMR1L	set	524
  9065  020D                     _TMR1H	set	525
  9066  0211                     _T1CLK	set	529
  9067  0210                     _T1GATE	set	528
  9068  020F                     _T1GCON	set	527
  9069  028D                     _PR2	set	653
  9070  028C                     _TMR2	set	652
  9071  028E                     _T2CONbits	set	654
  9072  0291                     _T2RSTbits	set	657
  9073  028F                     _T2HLTbits	set	655
  9074  028E                     _T2CON	set	654
  9075  028C                     _T2TMR	set	652
  9076  028D                     _T2PR	set	653
  9077  0291                     _T2RST	set	657
  9078  028F                     _T2HLT	set	655
  9079  0290                     _T2CLKCON	set	656
  9080  038C                     _PWM6DCL	set	908
  9081  038D                     _PWM6DCH	set	909
  9082  038E                     _PWM6CON	set	910
  9083  0710                     _PIR4bits	set	1808
  9084  071A                     _PIE4bits	set	1818
  9085  070F                     _PIR3bits	set	1807
  9086  0719                     _PIE3bits	set	1817
  9087  0716                     _PIE0bits	set	1814
  9088  070C                     _PIR0bits	set	1804
  9089  079B                     _PMD5	set	1947
  9090  079A                     _PMD4	set	1946
  9091  0799                     _PMD3	set	1945
  9092  0798                     _PMD2	set	1944
  9093  0797                     _PMD1	set	1943
  9094  0796                     _PMD0	set	1942
  9095  081F                     _NVMCON2	set	2079
  9096  081C                     _NVMDATL	set	2076
  9097  081D                     _NVMDATH	set	2077
  9098  081E                     _NVMCON1bits	set	2078
  9099  081B                     _NVMADRH	set	2075
  9100  081A                     _NVMADRL	set	2074
  9101  0892                     _OSCTUNE	set	2194
  9102  0893                     _OSCFRQ	set	2195
  9103  0891                     _OSCEN	set	2193
  9104  088F                     _OSCCON3	set	2191
  9105  088D                     _OSCCON1	set	2189
  9106  0EC6                     _SSP1DATPPS	set	3782
  9107  0EC5                     _SSP1CLKPPS	set	3781
  9108  0E90                     _INTPPS	set	3728
  9109  0F44                     _WPUBbits	set	3908
  9110  0F16                     _RA6PPS	set	3862
  9111  0F24                     _RC4PPS	set	3876
  9112  0F23                     _RC3PPS	set	3875
  9113  0F68                     _INLVLE	set	3944
  9114  0F5D                     _INLVLD	set	3933
  9115  0F52                     _INLVLC	set	3922
  9116  0F47                     _INLVLB	set	3911
  9117  0F3C                     _INLVLA	set	3900
  9118  0F67                     _SLRCONE	set	3943
  9119  0F5C                     _SLRCOND	set	3932
  9120  0F51                     _SLRCONC	set	3921
  9121  0F46                     _SLRCONB	set	3910
  9122  0F3B                     _SLRCONA	set	3899
  9123  0F5B                     _ODCOND	set	3931
  9124  0F50                     _ODCONC	set	3920
  9125  0F45                     _ODCONB	set	3909
  9126  0F3A                     _ODCONA	set	3898
  9127  0F66                     _ODCONE	set	3942
  9128  0F4F                     _WPUC	set	3919
  9129  0F39                     _WPUA	set	3897
  9130  0F44                     _WPUB	set	3908
  9131  0F65                     _WPUE	set	3941
  9132  0F5A                     _WPUD	set	3930
  9133  0F38                     _ANSELA	set	3896
  9134  0F64                     _ANSELE	set	3940
  9135  0F43                     _ANSELB	set	3907
  9136  0F4E                     _ANSELC	set	3918
  9137  0F59                     _ANSELD	set	3929
  9138  7A7C                     _WPUC4	set	31356
  9139  7A7B                     _WPUC3	set	31355
  9140                           
  9141                           ; #config settings
  9142  0000                     
  9143                           	psect	cinit
  9144  005D                     start_initialization:	
  9145  005D                     __initialization:	
  9146                           
  9147                           ; Initialize objects allocated to BANK0
  9148  005D  3010               	movlw	low __pidataBANK0
  9149  005E  0084               	movwf	4
  9150  005F  3089               	movlw	(high __pidataBANK0)| (0+128)
  9151  0060  0085               	movwf	5
  9152  0061  305F               	movlw	low __pdataBANK0
  9153  0062  0086               	movwf	6
  9154  0063  3000               	movlw	high __pdataBANK0
  9155  0064  0087               	movwf	7
  9156  0065  3009               	movlw	9
  9157  0066  3188  2095  3180   	fcall	init_ram
  9158                           
  9159                           ; Clear objects allocated to COMMON
  9160  0069  01FD               	clrf	__pbssCOMMON& (0+127)
  9161                           
  9162                           ; Clear objects allocated to BANK0
  9163  006A  3041               	movlw	low __pbssBANK0
  9164  006B  0084               	movwf	4
  9165  006C  3000               	movlw	high __pbssBANK0
  9166  006D  0085               	movwf	5
  9167  006E  301E               	movlw	30
  9168  006F  3188  208F  3180   	fcall	clear_ram0
  9169                           
  9170                           ; Clear objects allocated to BANK1
  9171  0072  30A0               	movlw	low __pbssBANK1
  9172  0073  0084               	movwf	4
  9173  0074  3000               	movlw	high __pbssBANK1
  9174  0075  0085               	movwf	5
  9175  0076  302C               	movlw	44
  9176  0077  3188  208F  3180   	fcall	clear_ram0
  9177  007A                     end_of_initialization:	
  9178                           ;End of C runtime variable initialization code
  9179                           
  9180  007A                     __end_of__initialization:	
  9181  007A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  9182  007B  0020               	movlb	0
  9183  007C  3180  287E         	ljmp	_main	;jump to C main() function
  9184                           
  9185                           	psect	bssCOMMON
  9186  007D                     __pbssCOMMON:	
  9187  007D                     _clkms:	
  9188  007D                     	ds	1
  9189                           
  9190                           	psect	bssBANK0
  9191  0041                     __pbssBANK0:	
  9192  0041                     _subfield_info:	
  9193  0041                     	ds	4
  9194  0045                     _lum_threshold:	
  9195  0045                     	ds	2
  9196  0047                     _lum_bin:	
  9197  0047                     	ds	2
  9198  0049                     _duty_cycle:	
  9199  0049                     	ds	2
  9200  004B                     _convertedValue:	
  9201  004B                     	ds	2
  9202  004D                     _i2c1_driver_i2cISR:	
  9203  004D                     	ds	2
  9204  004F                     _i2c1_driver_busCollisionISR:	
  9205  004F                     	ds	2
  9206  0051                     _alaf:	
  9207  0051                     	ds	1
  9208  0052                     _temp:	
  9209  0052                     	ds	1
  9210  0053                     _alarm:	
  9211  0053                     	ds	1
  9212  0054                     _config_mode:	
  9213  0054                     	ds	1
  9214  0055                     _set_mode:	
  9215  0055                     	ds	1
  9216  0056                     _last1m:	
  9217  0056                     	ds	1
  9218  0057                     _last5s:	
  9219  0057                     	ds	1
  9220  0058                     _last_ms2:	
  9221  0058                     	ds	1
  9222  0059                     _last_ms:	
  9223  0059                     	ds	1
  9224  005A                     _seg:	
  9225  005A                     	ds	1
  9226  005B                     _clkm:	
  9227  005B                     	ds	1
  9228  005C                     _clkh:	
  9229  005C                     	ds	1
  9230  005D                     _nreg_pt:	
  9231  005D                     	ds	1
  9232  005E                     _nreg_init:	
  9233  005E                     	ds	1
  9234                           
  9235                           	psect	dataBANK0
  9236  005F                     __pdataBANK0:	
  9237  005F                     _mode_field_subfield:	
  9238  005F                     	ds	4
  9239  0063                     _lum_thresh:	
  9240  0063                     	ds	1
  9241  0064                     _temp_thresh:	
  9242  0064                     	ds	1
  9243  0065                     _tala:	
  9244  0065                     	ds	1
  9245  0066                     _pmon:	
  9246  0066                     	ds	1
  9247  0067                     _nreg:	
  9248  0067                     	ds	1
  9249                           
  9250                           	psect	bssBANK1
  9251  00A0                     __pbssBANK1:	
  9252  00A0                     _i2c_status:	
  9253  00A0                     	ds	29
  9254  00BD                     _min_units:	
  9255  00BD                     	ds	2
  9256  00BF                     _min_tens:	
  9257  00BF                     	ds	2
  9258  00C1                     _hours_units:	
  9259  00C1                     	ds	2
  9260  00C3                     _hours_tens:	
  9261  00C3                     	ds	2
  9262  00C5                     _value:	
  9263  00C5                     	ds	2
  9264  00C7                     _ring_byte:	
  9265  00C7                     	ds	5
  9266                           
  9267                           	psect	inittext
  9268  0895                     init_ram:	
  9269  0895  00FE               	movwf	btemp
  9270  0896                     initloop:	
  9271  0896  0012               	moviw fsr0++
  9272  0897  001E               	movwi fsr1++
  9273  0898  0BFE               	decfsz	btemp,f
  9274  0899  2896               	goto	initloop
  9275  089A  3400               	retlw	0
  9276                           
  9277                           	psect	clrtext
  9278  088F                     clear_ram0:	
  9279                           ;	Called with FSR0 containing the base address, and
  9280                           ;	WREG with the size to clear
  9281                           
  9282  088F  0064               	clrwdt	;clear the watchdog before getting into this loop
  9283  0890                     clrloop0:	
  9284  0890  0180               	clrf	0	;clear RAM location pointed to by FSR
  9285  0891  3101               	addfsr 0,1
  9286  0892  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  9287  0893  2890               	goto	clrloop0	;have we reached the end yet?
  9288  0894  3400               	retlw	0	;all done for this memory range, return
  9289                           
  9290                           	psect	cstackBANK1
  9291  00D4                     __pcstackBANK1:	
  9292  00D4                     main@aux:	
  9293                           
  9294                           ; 1 bytes @ 0x0
  9295  00D4                     	ds	1
  9296  00D5                     main@aux1:	
  9297                           
  9298                           ; 1 bytes @ 0x1
  9299  00D5                     	ds	3
  9300  00D8                     main@t5s:	
  9301                           
  9302                           ; 1 bytes @ 0x4
  9303  00D8                     	ds	1
  9304  00D9                     _main$2481:	
  9305                           
  9306                           ; 1 bytes @ 0x5
  9307  00D9                     	ds	1
  9308                           
  9309                           	psect	cstackCOMMON
  9310  0070                     __pcstackCOMMON:	
  9311  0070                     ?_i2c1_driver_open:	
  9312  0070                     ?_i2c1_driver_isNACK:	
  9313                           ; 1 bit 
  9314                           
  9315  0070                     ?_setCallBack:	
  9316                           ; 1 bit 
  9317                           
  9318  0070                     ?_mssp1_clearIRQ:	
  9319                           ; 1 bytes @ 0x0
  9320                           
  9321  0070                     ??_mssp1_clearIRQ:	
  9322                           ; 1 bytes @ 0x0
  9323                           
  9324  0070                     ?_i2c_busCollisionISR:	
  9325                           ; 1 bytes @ 0x0
  9326                           
  9327  0070                     ??_i2c_busCollisionISR:	
  9328                           ; 1 bytes @ 0x0
  9329                           
  9330  0070                     ?_i2c_ISR:	
  9331                           ; 1 bytes @ 0x0
  9332                           
  9333  0070                     ?_i2c1_driver_resetBus:	
  9334                           ; 1 bytes @ 0x0
  9335                           
  9336  0070                     ??_i2c1_driver_resetBus:	
  9337                           ; 1 bytes @ 0x0
  9338                           
  9339  0070                     ?_i2c1_driver_restart:	
  9340                           ; 1 bytes @ 0x0
  9341                           
  9342  0070                     ??_i2c1_driver_restart:	
  9343                           ; 1 bytes @ 0x0
  9344                           
  9345  0070                     ?_i2c1_driver_stop:	
  9346                           ; 1 bytes @ 0x0
  9347                           
  9348  0070                     ??_i2c1_driver_stop:	
  9349                           ; 1 bytes @ 0x0
  9350                           
  9351  0070                     ?_i2c1_driver_TXData:	
  9352                           ; 1 bytes @ 0x0
  9353                           
  9354  0070                     ??_i2c1_driver_TXData:	
  9355                           ; 1 bytes @ 0x0
  9356                           
  9357  0070                     ?_i2c1_driver_startRX:	
  9358                           ; 1 bytes @ 0x0
  9359                           
  9360  0070                     ??_i2c1_driver_startRX:	
  9361                           ; 1 bytes @ 0x0
  9362                           
  9363  0070                     ?_i2c1_driver_sendACK:	
  9364                           ; 1 bytes @ 0x0
  9365                           
  9366  0070                     ??_i2c1_driver_sendACK:	
  9367                           ; 1 bytes @ 0x0
  9368                           
  9369  0070                     ?_i2c1_driver_sendNACK:	
  9370                           ; 1 bytes @ 0x0
  9371                           
  9372  0070                     ??_i2c1_driver_sendNACK:	
  9373                           ; 1 bytes @ 0x0
  9374                           
  9375  0070                     ??_i2c1_driver_isNACK:	
  9376                           ; 1 bytes @ 0x0
  9377                           
  9378  0070                     ?_i2c1_driver_getRXData:	
  9379                           ; 1 bytes @ 0x0
  9380                           
  9381  0070                     ??_i2c1_driver_getRXData:	
  9382                           ; 1 bytes @ 0x0
  9383                           
  9384  0070                     ?_mssp1_setIRQ:	
  9385                           ; 1 bytes @ 0x0
  9386                           
  9387  0070                     ??_mssp1_setIRQ:	
  9388                           ; 1 bytes @ 0x0
  9389                           
  9390  0070                     ?_i2c1_driver_clearBusCollision:	
  9391                           ; 1 bytes @ 0x0
  9392                           
  9393  0070                     ??_i2c1_driver_clearBusCollision:	
  9394                           ; 1 bytes @ 0x0
  9395                           
  9396  0070                     ?_INT_CallBack:	
  9397                           ; 1 bytes @ 0x0
  9398                           
  9399  0070                     ?_TMR0_ISR:	
  9400                           ; 1 bytes @ 0x0
  9401                           
  9402  0070                     ?_TMR1_ISR:	
  9403                           ; 1 bytes @ 0x0
  9404                           
  9405  0070                     ?_TMR2_ISR:	
  9406                           ; 1 bytes @ 0x0
  9407                           
  9408  0070                     ?_PMD_Initialize:	
  9409                           ; 1 bytes @ 0x0
  9410                           
  9411  0070                     ?_PIN_MANAGER_Initialize:	
  9412                           ; 1 bytes @ 0x0
  9413                           
  9414  0070                     ?_OSCILLATOR_Initialize:	
  9415                           ; 1 bytes @ 0x0
  9416                           
  9417  0070                     ?_PWM6_Initialize:	
  9418                           ; 1 bytes @ 0x0
  9419                           
  9420  0070                     ?_ADCC_Initialize:	
  9421                           ; 1 bytes @ 0x0
  9422                           
  9423  0070                     ?_TMR2_Initialize:	
  9424                           ; 1 bytes @ 0x0
  9425                           
  9426  0070                     ?_TMR1_Initialize:	
  9427                           ; 1 bytes @ 0x0
  9428                           
  9429  0070                     ?_TMR0_Initialize:	
  9430                           ; 1 bytes @ 0x0
  9431                           
  9432  0070                     ?_TMR1_DefaultInterruptHandler:	
  9433                           ; 1 bytes @ 0x0
  9434                           
  9435  0070                     ??_TMR1_DefaultInterruptHandler:	
  9436                           ; 1 bytes @ 0x0
  9437                           
  9438  0070                     ?_TMR2_DefaultInterruptHandler:	
  9439                           ; 1 bytes @ 0x0
  9440                           
  9441  0070                     ??_TMR2_DefaultInterruptHandler:	
  9442                           ; 1 bytes @ 0x0
  9443                           
  9444  0070                     ?_TMR0_DefaultInterruptHandler:	
  9445                           ; 1 bytes @ 0x0
  9446                           
  9447  0070                     ??_TMR0_DefaultInterruptHandler:	
  9448                           ; 1 bytes @ 0x0
  9449                           
  9450  0070                     ?_checkDebounceSW1:	
  9451                           ; 1 bytes @ 0x0
  9452                           
  9453  0070                     ?_handler_clock_hms:	
  9454                           ; 1 bytes @ 0x0
  9455                           
  9456  0070                     ??_handler_clock_hms:	
  9457                           ; 1 bytes @ 0x0
  9458                           
  9459  0070                     ?_handler_clock_ms:	
  9460                           ; 1 bytes @ 0x0
  9461                           
  9462  0070                     ??_handler_clock_ms:	
  9463                           ; 1 bytes @ 0x0
  9464                           
  9465  0070                     ?_recoverData:	
  9466                           ; 1 bytes @ 0x0
  9467                           
  9468  0070                     ?_tsttc:	
  9469                           ; 1 bytes @ 0x0
  9470                           
  9471  0070                     ?_cksum_w:	
  9472                           ; 1 bytes @ 0x0
  9473                           
  9474  0070                     ?_config_routine:	
  9475                           ; 1 bytes @ 0x0
  9476                           
  9477  0070                     ?_all_LED:	
  9478                           ; 1 bytes @ 0x0
  9479                           
  9480  0070                     ?_mod1_LED:	
  9481                           ; 1 bytes @ 0x0
  9482                           
  9483  0070                     ?_mod2_LED:	
  9484                           ; 1 bytes @ 0x0
  9485                           
  9486  0070                     ?_mod3_LED:	
  9487                           ; 1 bytes @ 0x0
  9488                           
  9489  0070                     ?_mod4_LED:	
  9490                           ; 1 bytes @ 0x0
  9491                           
  9492  0070                     ?_checkDebounceSW2:	
  9493                           ; 1 bytes @ 0x0
  9494                           
  9495  0070                     ?_mode_select_LED:	
  9496                           ; 1 bytes @ 0x0
  9497                           
  9498  0070                     ?_selectSubfield:	
  9499                           ; 1 bytes @ 0x0
  9500                           
  9501  0070                     ?_getSubfieldInfo:	
  9502                           ; 1 bytes @ 0x0
  9503                           
  9504  0070                     ?_increment_subfield:	
  9505                           ; 1 bytes @ 0x0
  9506                           
  9507  0070                     ?_representLed:	
  9508                           ; 1 bytes @ 0x0
  9509                           
  9510  0070                     ?_cksum:	
  9511                           ; 1 bytes @ 0x0
  9512                           
  9513  0070                     ?_reset_recv:	
  9514                           ; 1 bytes @ 0x0
  9515                           
  9516  0070                     ?_WriteI2C:	
  9517                           ; 1 bytes @ 0x0
  9518                           
  9519  0070                     ?_ReadI2C:	
  9520                           ; 1 bytes @ 0x0
  9521                           
  9522  0070                     ?_i2c_setBuffer:	
  9523                           ; 1 bytes @ 0x0
  9524                           
  9525  0070                     ?_do_I2C_RESET:	
  9526                           ; 1 bytes @ 0x0
  9527                           
  9528  0070                     ??_do_I2C_RESET:	
  9529                           ; 1 bytes @ 0x0
  9530                           
  9531  0070                     ?_do_I2C_IDLE:	
  9532                           ; 1 bytes @ 0x0
  9533                           
  9534  0070                     ??_do_I2C_IDLE:	
  9535                           ; 1 bytes @ 0x0
  9536                           
  9537  0070                     ?_do_I2C_SEND_RESTART_READ:	
  9538                           ; 1 bytes @ 0x0
  9539                           
  9540  0070                     ??_do_I2C_SEND_RESTART_READ:	
  9541                           ; 1 bytes @ 0x0
  9542                           
  9543  0070                     ?_do_I2C_SEND_RESTART_WRITE:	
  9544                           ; 1 bytes @ 0x0
  9545                           
  9546  0070                     ??_do_I2C_SEND_RESTART_WRITE:	
  9547                           ; 1 bytes @ 0x0
  9548                           
  9549  0070                     ?_do_I2C_SEND_RESTART:	
  9550                           ; 1 bytes @ 0x0
  9551                           
  9552  0070                     ??_do_I2C_SEND_RESTART:	
  9553                           ; 1 bytes @ 0x0
  9554                           
  9555  0070                     ?_do_I2C_SEND_STOP:	
  9556                           ; 1 bytes @ 0x0
  9557                           
  9558  0070                     ??_do_I2C_SEND_STOP:	
  9559                           ; 1 bytes @ 0x0
  9560                           
  9561  0070                     ?_do_I2C_SEND_ADR_READ:	
  9562                           ; 1 bytes @ 0x0
  9563                           
  9564  0070                     ??_do_I2C_SEND_ADR_READ:	
  9565                           ; 1 bytes @ 0x0
  9566                           
  9567  0070                     ?_do_I2C_SEND_ADR_WRITE:	
  9568                           ; 1 bytes @ 0x0
  9569                           
  9570  0070                     ?_do_I2C_RCEN:	
  9571                           ; 1 bytes @ 0x0
  9572                           
  9573  0070                     ??_do_I2C_RCEN:	
  9574                           ; 1 bytes @ 0x0
  9575                           
  9576  0070                     ?_do_I2C_DO_ACK:	
  9577                           ; 1 bytes @ 0x0
  9578                           
  9579  0070                     ??_do_I2C_DO_ACK:	
  9580                           ; 1 bytes @ 0x0
  9581                           
  9582  0070                     ?_do_I2C_DO_NACK_STOP:	
  9583                           ; 1 bytes @ 0x0
  9584                           
  9585  0070                     ??_do_I2C_DO_NACK_STOP:	
  9586                           ; 1 bytes @ 0x0
  9587                           
  9588  0070                     ?_do_I2C_DO_NACK_RESTART:	
  9589                           ; 1 bytes @ 0x0
  9590                           
  9591  0070                     ??_do_I2C_DO_NACK_RESTART:	
  9592                           ; 1 bytes @ 0x0
  9593                           
  9594  0070                     ?_do_I2C_DO_ADDRESS_NACK:	
  9595                           ; 1 bytes @ 0x0
  9596                           
  9597  0070                     ?_do_I2C_TX:	
  9598                           ; 1 bytes @ 0x0
  9599                           
  9600  0070                     ?_do_I2C_RX:	
  9601                           ; 1 bytes @ 0x0
  9602                           
  9603  0070                     ?_do_I2C_TX_EMPTY:	
  9604                           ; 1 bytes @ 0x0
  9605                           
  9606  0070                     ?_INT_ISR:	
  9607                           ; 1 bytes @ 0x0
  9608                           
  9609  0070                     ?_INT_DefaultInterruptHandler:	
  9610                           ; 1 bytes @ 0x0
  9611                           
  9612  0070                     ??_INT_DefaultInterruptHandler:	
  9613                           ; 1 bytes @ 0x0
  9614                           
  9615  0070                     ?_EXT_INT_Initialize:	
  9616                           ; 1 bytes @ 0x0
  9617                           
  9618  0070                     ?_INTERRUPT_InterruptManager:	
  9619                           ; 1 bytes @ 0x0
  9620                           
  9621  0070                     ?_SYSTEM_Initialize:	
  9622                           ; 1 bytes @ 0x0
  9623                           
  9624  0070                     ?_ADCC_StartConversion:	
  9625                           ; 1 bytes @ 0x0
  9626                           
  9627  0070                     ?_ADCC_IsConversionDone:	
  9628                           ; 1 bytes @ 0x0
  9629                           
  9630  0070                     ?_TMR1_WriteTimer:	
  9631                           ; 1 bytes @ 0x0
  9632                           
  9633  0070                     ?_TMR0_StartTimer:	
  9634                           ; 1 bytes @ 0x0
  9635                           
  9636  0070                     ?_TMR0_StopTimer:	
  9637                           ; 1 bytes @ 0x0
  9638                           
  9639  0070                     ??_TMR0_StopTimer:	
  9640                           ; 1 bytes @ 0x0
  9641                           
  9642  0070                     ?_sw1_EXT:	
  9643                           ; 1 bytes @ 0x0
  9644                           
  9645  0070                     ?_ISR_3s:	
  9646                           ; 1 bytes @ 0x0
  9647                           
  9648  0070                     ?_main:	
  9649                           ; 1 bytes @ 0x0
  9650                           
  9651  0070                     ?i1_PWM6_LoadDutyValue:	
  9652                           ; 1 bytes @ 0x0
  9653                           
  9654  0070                     ?i1_checkDebounceSW1:	
  9655                           ; 1 bytes @ 0x0
  9656                           
  9657  0070                     ??i1_checkDebounceSW1:	
  9658                           ; 1 bytes @ 0x0
  9659                           
  9660  0070                     i2c1_driver_TXData@d:	
  9661                           ; 1 bytes @ 0x0
  9662                           
  9663  0070                     i2c_setBuffer@bufferSize:	
  9664                           ; 1 bytes @ 0x0
  9665                           
  9666  0070                     setCallBack@cb:	
  9667                           ; 2 bytes @ 0x0
  9668                           
  9669  0070                     TMR1_WriteTimer@timerVal:	
  9670                           ; 2 bytes @ 0x0
  9671                           
  9672  0070                     i1PWM6_LoadDutyValue@dutyValue:	
  9673                           ; 2 bytes @ 0x0
  9674                           
  9675                           
  9676                           ; 2 bytes @ 0x0
  9677  0070                     	ds	1
  9678  0071                     ??_TMR2_ISR:	
  9679  0071                     ??_do_I2C_SEND_ADR_WRITE:	
  9680                           ; 1 bytes @ 0x1
  9681                           
  9682                           
  9683                           ; 1 bytes @ 0x1
  9684  0071                     	ds	1
  9685  0072                     ??_TMR1_ISR:	
  9686  0072                     ??_i2c_setBuffer:	
  9687                           ; 1 bytes @ 0x2
  9688                           
  9689  0072                     ??_TMR1_WriteTimer:	
  9690                           ; 1 bytes @ 0x2
  9691                           
  9692  0072                     ??i1_PWM6_LoadDutyValue:	
  9693                           ; 1 bytes @ 0x2
  9694                           
  9695  0072                     setCallBack@p:	
  9696                           ; 1 bytes @ 0x2
  9697                           
  9698                           
  9699                           ; 1 bytes @ 0x2
  9700  0072                     	ds	1
  9701  0073                     ??_setCallBack:	
  9702  0073                     i2c_setBuffer@buffer:	
  9703                           ; 1 bytes @ 0x3
  9704                           
  9705                           
  9706                           ; 1 bytes @ 0x3
  9707  0073                     	ds	1
  9708  0074                     ??_ISR_3s:	
  9709  0074                     setCallBack@idx:	
  9710                           ; 1 bytes @ 0x4
  9711                           
  9712                           
  9713                           ; 1 bytes @ 0x4
  9714  0074                     	ds	1
  9715  0075                     ??_TMR0_ISR:	
  9716  0075                     ?_i2c_setDataCompleteCallback:	
  9717                           ; 1 bytes @ 0x5
  9718                           
  9719  0075                     i2c_setDataCompleteCallback@cb:	
  9720                           ; 1 bytes @ 0x5
  9721                           
  9722                           
  9723                           ; 2 bytes @ 0x5
  9724  0075                     	ds	2
  9725  0077                     ??_sw1_EXT:	
  9726  0077                     i2c_setDataCompleteCallback@p:	
  9727                           ; 1 bytes @ 0x7
  9728                           
  9729                           
  9730                           ; 1 bytes @ 0x7
  9731  0077                     	ds	1
  9732  0078                     ??_INT_CallBack:	
  9733  0078                     ??_i2c_setDataCompleteCallback:	
  9734                           ; 1 bytes @ 0x8
  9735                           
  9736  0078                     ??_INT_ISR:	
  9737                           ; 1 bytes @ 0x8
  9738                           
  9739                           
  9740                           ; 1 bytes @ 0x8
  9741  0078                     	ds	1
  9742  0079                     ?_returnStop:	
  9743  0079                     ?_returnReset:	
  9744                           ; 1 bytes @ 0x9
  9745                           
  9746  0079                     ?_i2c_restartWrite:	
  9747                           ; 1 bytes @ 0x9
  9748                           
  9749  0079                     ?_wr1RegCompleteHandler:	
  9750                           ; 1 bytes @ 0x9
  9751                           
  9752  0079                     ?_rd1RegCompleteHandler:	
  9753                           ; 1 bytes @ 0x9
  9754                           
  9755  0079                     ?_rd2RegCompleteHandler:	
  9756                           ; 1 bytes @ 0x9
  9757                           
  9758  0079                     ?_wr2RegCompleteHandler:	
  9759                           ; 1 bytes @ 0x9
  9760                           
  9761  0079                     ?_rdBlkRegCompleteHandler:	
  9762                           ; 1 bytes @ 0x9
  9763                           
  9764  0079                     i2c_restartWrite@p:	
  9765                           ; 1 bytes @ 0x9
  9766                           
  9767  0079                     returnStop@p:	
  9768                           ; 1 bytes @ 0x9
  9769                           
  9770  0079                     returnReset@p:	
  9771                           ; 1 bytes @ 0x9
  9772                           
  9773  0079                     wr1RegCompleteHandler@p:	
  9774                           ; 1 bytes @ 0x9
  9775                           
  9776  0079                     rd1RegCompleteHandler@p:	
  9777                           ; 1 bytes @ 0x9
  9778                           
  9779  0079                     rd2RegCompleteHandler@p:	
  9780                           ; 1 bytes @ 0x9
  9781                           
  9782  0079                     wr2RegCompleteHandler@p:	
  9783                           ; 1 bytes @ 0x9
  9784                           
  9785  0079                     rdBlkRegCompleteHandler@p:	
  9786                           ; 1 bytes @ 0x9
  9787                           
  9788                           
  9789                           ; 1 bytes @ 0x9
  9790  0079                     	ds	1
  9791  007A                     ??_returnStop:	
  9792  007A                     ??_returnReset:	
  9793                           ; 1 bytes @ 0xA
  9794                           
  9795  007A                     ??_i2c_restartWrite:	
  9796                           ; 1 bytes @ 0xA
  9797                           
  9798  007A                     ??_do_I2C_DO_ADDRESS_NACK:	
  9799                           ; 1 bytes @ 0xA
  9800                           
  9801  007A                     ??_do_I2C_TX:	
  9802                           ; 1 bytes @ 0xA
  9803                           
  9804  007A                     ??_do_I2C_RX:	
  9805                           ; 1 bytes @ 0xA
  9806                           
  9807  007A                     ??_do_I2C_TX_EMPTY:	
  9808                           ; 1 bytes @ 0xA
  9809                           
  9810  007A                     ??_wr1RegCompleteHandler:	
  9811                           ; 1 bytes @ 0xA
  9812                           
  9813  007A                     ??_rd1RegCompleteHandler:	
  9814                           ; 1 bytes @ 0xA
  9815                           
  9816  007A                     ??_rd2RegCompleteHandler:	
  9817                           ; 1 bytes @ 0xA
  9818                           
  9819  007A                     ??_wr2RegCompleteHandler:	
  9820                           ; 1 bytes @ 0xA
  9821                           
  9822  007A                     ??_rdBlkRegCompleteHandler:	
  9823                           ; 1 bytes @ 0xA
  9824                           
  9825                           
  9826                           ; 1 bytes @ 0xA
  9827  007A                     	ds	3
  9828  007D                     ??_INTERRUPT_InterruptManager:	
  9829                           
  9830                           	psect	cstackBANK0
  9831  0020                     __pcstackBANK0:	
  9832                           ; 1 bytes @ 0xD
  9833                           
  9834  0020                     ??_i2c_ISR:	
  9835                           
  9836                           ; 1 bytes @ 0x0
  9837  0020                     	ds	3
  9838  0023                     ??_i2c1_driver_open:	
  9839  0023                     ??_PMD_Initialize:	
  9840                           ; 1 bytes @ 0x3
  9841                           
  9842  0023                     ??_PIN_MANAGER_Initialize:	
  9843                           ; 1 bytes @ 0x3
  9844                           
  9845  0023                     ??_OSCILLATOR_Initialize:	
  9846                           ; 1 bytes @ 0x3
  9847                           
  9848  0023                     ??_PWM6_Initialize:	
  9849                           ; 1 bytes @ 0x3
  9850                           
  9851  0023                     ??_ADCC_Initialize:	
  9852                           ; 1 bytes @ 0x3
  9853                           
  9854  0023                     ?_TMR1_SetInterruptHandler:	
  9855                           ; 1 bytes @ 0x3
  9856                           
  9857  0023                     ?_TMR2_SetInterruptHandler:	
  9858                           ; 1 bytes @ 0x3
  9859                           
  9860  0023                     ?_TMR0_SetInterruptHandler:	
  9861                           ; 1 bytes @ 0x3
  9862                           
  9863  0023                     ??_checkDebounceSW1:	
  9864                           ; 1 bytes @ 0x3
  9865                           
  9866  0023                     ?_LED_bin:	
  9867                           ; 1 bytes @ 0x3
  9868                           
  9869  0023                     ??_checkDebounceSW2:	
  9870                           ; 1 bytes @ 0x3
  9871                           
  9872  0023                     ??_getSubfieldInfo:	
  9873                           ; 1 bytes @ 0x3
  9874                           
  9875  0023                     ??_WriteI2C:	
  9876                           ; 1 bytes @ 0x3
  9877                           
  9878  0023                     ??_ReadI2C:	
  9879                           ; 1 bytes @ 0x3
  9880                           
  9881  0023                     ?_INT_SetInterruptHandler:	
  9882                           ; 1 bytes @ 0x3
  9883                           
  9884  0023                     ??_ADCC_StartConversion:	
  9885                           ; 1 bytes @ 0x3
  9886                           
  9887  0023                     ??_ADCC_IsConversionDone:	
  9888                           ; 1 bytes @ 0x3
  9889                           
  9890  0023                     ?_DATAEE_ReadByte:	
  9891                           ; 1 bytes @ 0x3
  9892                           
  9893  0023                     ??_TMR0_StartTimer:	
  9894                           ; 1 bytes @ 0x3
  9895                           
  9896  0023                     ?___bmul:	
  9897                           ; 1 bytes @ 0x3
  9898                           
  9899  0023                     ?_ADCC_GetConversionResult:	
  9900                           ; 1 bytes @ 0x3
  9901                           
  9902  0023                     ?___wmul:	
  9903                           ; 2 bytes @ 0x3
  9904                           
  9905  0023                     ?___awdiv:	
  9906                           ; 2 bytes @ 0x3
  9907                           
  9908  0023                     ?___awmod:	
  9909                           ; 2 bytes @ 0x3
  9910                           
  9911  0023                     ADCC_StartConversion@channel:	
  9912                           ; 2 bytes @ 0x3
  9913                           
  9914  0023                     ___bmul@multiplicand:	
  9915                           ; 1 bytes @ 0x3
  9916                           
  9917  0023                     INT_SetInterruptHandler@InterruptHandler:	
  9918                           ; 1 bytes @ 0x3
  9919                           
  9920  0023                     TMR1_SetInterruptHandler@InterruptHandler:	
  9921                           ; 2 bytes @ 0x3
  9922                           
  9923  0023                     DATAEE_ReadByte@bAdd:	
  9924                           ; 2 bytes @ 0x3
  9925                           
  9926  0023                     TMR2_SetInterruptHandler@InterruptHandler:	
  9927                           ; 2 bytes @ 0x3
  9928                           
  9929  0023                     TMR0_SetInterruptHandler@InterruptHandler:	
  9930                           ; 2 bytes @ 0x3
  9931                           
  9932  0023                     LED_bin@value:	
  9933                           ; 2 bytes @ 0x3
  9934                           
  9935  0023                     ___wmul@multiplier:	
  9936                           ; 2 bytes @ 0x3
  9937                           
  9938  0023                     ___awdiv@divisor:	
  9939                           ; 2 bytes @ 0x3
  9940                           
  9941  0023                     ___awmod@divisor:	
  9942                           ; 2 bytes @ 0x3
  9943                           
  9944                           
  9945                           ; 2 bytes @ 0x3
  9946  0023                     	ds	1
  9947  0024                     ??___bmul:	
  9948  0024                     WriteI2C@data_out:	
  9949                           ; 1 bytes @ 0x4
  9950                           
  9951                           
  9952                           ; 1 bytes @ 0x4
  9953  0024                     	ds	1
  9954  0025                     ??_TMR2_Initialize:	
  9955  0025                     ??_TMR1_Initialize:	
  9956                           ; 1 bytes @ 0x5
  9957                           
  9958  0025                     ??_TMR0_Initialize:	
  9959                           ; 1 bytes @ 0x5
  9960                           
  9961  0025                     ??_TMR1_SetInterruptHandler:	
  9962                           ; 1 bytes @ 0x5
  9963                           
  9964  0025                     ??_TMR2_SetInterruptHandler:	
  9965                           ; 1 bytes @ 0x5
  9966                           
  9967  0025                     ??_TMR0_SetInterruptHandler:	
  9968                           ; 1 bytes @ 0x5
  9969                           
  9970  0025                     ??_LED_bin:	
  9971                           ; 1 bytes @ 0x5
  9972                           
  9973  0025                     ??_tsttc:	
  9974                           ; 1 bytes @ 0x5
  9975                           
  9976  0025                     ??_cksum:	
  9977                           ; 1 bytes @ 0x5
  9978                           
  9979  0025                     ??_INT_SetInterruptHandler:	
  9980                           ; 1 bytes @ 0x5
  9981                           
  9982  0025                     ??_EXT_INT_Initialize:	
  9983                           ; 1 bytes @ 0x5
  9984                           
  9985  0025                     ??_SYSTEM_Initialize:	
  9986                           ; 1 bytes @ 0x5
  9987                           
  9988  0025                     ??_ADCC_GetConversionResult:	
  9989                           ; 1 bytes @ 0x5
  9990                           
  9991  0025                     ??_DATAEE_ReadByte:	
  9992                           ; 1 bytes @ 0x5
  9993                           
  9994  0025                     ?_ADC_read:	
  9995                           ; 1 bytes @ 0x5
  9996                           
  9997  0025                     ___bmul@product:	
  9998                           ; 2 bytes @ 0x5
  9999                           
 10000  0025                     ___wmul@multiplicand:	
 10001                           ; 1 bytes @ 0x5
 10002                           
 10003  0025                     ___awdiv@dividend:	
 10004                           ; 2 bytes @ 0x5
 10005                           
 10006  0025                     ___awmod@dividend:	
 10007                           ; 2 bytes @ 0x5
 10008                           
 10009                           
 10010                           ; 2 bytes @ 0x5
 10011  0025                     	ds	1
 10012  0026                     tsttc@value:	
 10013  0026                     cksum@res:	
 10014                           ; 1 bytes @ 0x6
 10015                           
 10016  0026                     ___bmul@multiplier:	
 10017                           ; 1 bytes @ 0x6
 10018                           
 10019                           
 10020                           ; 1 bytes @ 0x6
 10021  0026                     	ds	1
 10022  0027                     ??_ADC_read:	
 10023  0027                     ?_read_ring:	
 10024                           ; 1 bytes @ 0x7
 10025                           
 10026  0027                     ??___wmul:	
 10027                           ; 1 bytes @ 0x7
 10028                           
 10029  0027                     ??___awdiv:	
 10030                           ; 1 bytes @ 0x7
 10031                           
 10032  0027                     ??___awmod:	
 10033                           ; 1 bytes @ 0x7
 10034                           
 10035  0027                     read_ring@nreg:	
 10036                           ; 1 bytes @ 0x7
 10037                           
 10038  0027                     cksum@i:	
 10039                           ; 1 bytes @ 0x7
 10040                           
 10041  0027                     ___wmul@product:	
 10042                           ; 2 bytes @ 0x7
 10043                           
 10044                           
 10045                           ; 2 bytes @ 0x7
 10046  0027                     	ds	1
 10047  0028                     read_ring@nreg_init:	
 10048  0028                     ___awdiv@counter:	
 10049                           ; 1 bytes @ 0x8
 10050                           
 10051  0028                     ___awmod@counter:	
 10052                           ; 1 bytes @ 0x8
 10053                           
 10054                           
 10055                           ; 1 bytes @ 0x8
 10056  0028                     	ds	1
 10057  0029                     ?_PWM6_LoadDutyValue:	
 10058  0029                     ?_DATAEE_WriteByte:	
 10059                           ; 1 bytes @ 0x9
 10060                           
 10061  0029                     read_ring@index:	
 10062                           ; 1 bytes @ 0x9
 10063                           
 10064  0029                     ___awdiv@sign:	
 10065                           ; 1 bytes @ 0x9
 10066                           
 10067  0029                     ___awmod@sign:	
 10068                           ; 1 bytes @ 0x9
 10069                           
 10070  0029                     PWM6_LoadDutyValue@dutyValue:	
 10071                           ; 1 bytes @ 0x9
 10072                           
 10073  0029                     DATAEE_WriteByte@bAdd:	
 10074                           ; 2 bytes @ 0x9
 10075                           
 10076                           
 10077                           ; 2 bytes @ 0x9
 10078  0029                     	ds	1
 10079  002A                     read_ring@subindex:	
 10080  002A                     ___awdiv@quotient:	
 10081                           ; 1 bytes @ 0xA
 10082                           
 10083                           
 10084                           ; 2 bytes @ 0xA
 10085  002A                     	ds	1
 10086  002B                     ??_read_ring:	
 10087  002B                     ??_PWM6_LoadDutyValue:	
 10088                           ; 1 bytes @ 0xB
 10089                           
 10090  002B                     DATAEE_WriteByte@bData:	
 10091                           ; 1 bytes @ 0xB
 10092                           
 10093                           
 10094                           ; 1 bytes @ 0xB
 10095  002B                     	ds	1
 10096  002C                     ?_recHour:	
 10097  002C                     ?_recMinutes:	
 10098                           ; 1 bytes @ 0xC
 10099                           
 10100  002C                     ?_recAlarm:	
 10101                           ; 1 bytes @ 0xC
 10102                           
 10103  002C                     ?_recTempThresh:	
 10104                           ; 1 bytes @ 0xC
 10105                           
 10106  002C                     ?_recLumThresh:	
 10107                           ; 1 bytes @ 0xC
 10108                           
 10109  002C                     ??_DATAEE_WriteByte:	
 10110                           ; 1 bytes @ 0xC
 10111                           
 10112  002C                     DATAEE_WriteByte@GIEBitValue:	
 10113                           ; 1 bytes @ 0xC
 10114                           
 10115  002C                     recLumThresh@_value:	
 10116                           ; 1 bytes @ 0xC
 10117                           
 10118  002C                     recTempThresh@_value:	
 10119                           ; 1 bytes @ 0xC
 10120                           
 10121  002C                     recAlarm@_value:	
 10122                           ; 1 bytes @ 0xC
 10123                           
 10124  002C                     recMinutes@_value:	
 10125                           ; 1 bytes @ 0xC
 10126                           
 10127  002C                     recHour@_value:	
 10128                           ; 1 bytes @ 0xC
 10129                           
 10130                           
 10131                           ; 1 bytes @ 0xC
 10132  002C                     	ds	1
 10133  002D                     ?_push_ring:	
 10134  002D                     ??_cksum_w:	
 10135                           ; 1 bytes @ 0xD
 10136                           
 10137  002D                     ??_all_LED:	
 10138                           ; 1 bytes @ 0xD
 10139                           
 10140  002D                     ??_mod1_LED:	
 10141                           ; 1 bytes @ 0xD
 10142                           
 10143  002D                     ??_mod2_LED:	
 10144                           ; 1 bytes @ 0xD
 10145                           
 10146  002D                     ??_mod3_LED:	
 10147                           ; 1 bytes @ 0xD
 10148                           
 10149  002D                     ??_mod4_LED:	
 10150                           ; 1 bytes @ 0xD
 10151                           
 10152  002D                     ??_mode_select_LED:	
 10153                           ; 1 bytes @ 0xD
 10154                           
 10155  002D                     ??_recHour:	
 10156                           ; 1 bytes @ 0xD
 10157                           
 10158  002D                     ??_recMinutes:	
 10159                           ; 1 bytes @ 0xD
 10160                           
 10161  002D                     ??_recAlarm:	
 10162                           ; 1 bytes @ 0xD
 10163                           
 10164  002D                     ??_recTempThresh:	
 10165                           ; 1 bytes @ 0xD
 10166                           
 10167  002D                     ??_recLumThresh:	
 10168                           ; 1 bytes @ 0xD
 10169                           
 10170  002D                     ??_representLed:	
 10171                           ; 1 bytes @ 0xD
 10172                           
 10173  002D                     ??_reset_recv:	
 10174                           ; 1 bytes @ 0xD
 10175                           
 10176  002D                     push_ring@nreg:	
 10177                           ; 1 bytes @ 0xD
 10178                           
 10179  002D                     read_ring@i:	
 10180                           ; 1 bytes @ 0xD
 10181                           
 10182  002D                     reset_recv@i:	
 10183                           ; 1 bytes @ 0xD
 10184                           
 10185                           
 10186                           ; 2 bytes @ 0xD
 10187  002D                     	ds	1
 10188  002E                     push_ring@nreg_init:	
 10189  002E                     read_ring@nreg_pt:	
 10190                           ; 1 bytes @ 0xE
 10191                           
 10192                           
 10193                           ; 1 bytes @ 0xE
 10194  002E                     	ds	1
 10195  002F                     ??_recoverData:	
 10196  002F                     push_ring@ring_byte:	
 10197                           ; 1 bytes @ 0xF
 10198                           
 10199  002F                     read_ring@absindex:	
 10200                           ; 1 bytes @ 0xF
 10201                           
 10202                           
 10203                           ; 1 bytes @ 0xF
 10204  002F                     	ds	1
 10205  0030                     ??_push_ring:	
 10206  0030                     representLed@val:	
 10207                           ; 1 bytes @ 0x10
 10208                           
 10209                           
 10210                           ; 1 bytes @ 0x10
 10211  0030                     	ds	1
 10212  0031                     representLed@aux:	
 10213                           
 10214                           ; 1 bytes @ 0x11
 10215  0031                     	ds	1
 10216  0032                     ??_increment_subfield:	
 10217  0032                     push_ring@i:	
 10218                           ; 1 bytes @ 0x12
 10219                           
 10220                           
 10221                           ; 1 bytes @ 0x12
 10222  0032                     	ds	1
 10223  0033                     increment_subfield@exit:	
 10224  0033                     push_ring@nreg_pt:	
 10225                           ; 1 bytes @ 0x13
 10226                           
 10227                           
 10228                           ; 1 bytes @ 0x13
 10229  0033                     	ds	1
 10230  0034                     increment_subfield@_value:	
 10231                           
 10232                           ; 1 bytes @ 0x14
 10233  0034                     	ds	1
 10234  0035                     ??_selectSubfield:	
 10235                           
 10236                           ; 1 bytes @ 0x15
 10237  0035                     	ds	2
 10238  0037                     selectSubfield@subfield:	
 10239                           
 10240                           ; 2 bytes @ 0x17
 10241  0037                     	ds	2
 10242  0039                     ??_config_routine:	
 10243                           
 10244                           ; 1 bytes @ 0x19
 10245  0039                     	ds	1
 10246  003A                     config_routine@select_mode:	
 10247                           
 10248                           ; 2 bytes @ 0x1A
 10249  003A                     	ds	2
 10250  003C                     ??_main:	
 10251                           
 10252                           ; 1 bytes @ 0x1C
 10253  003C                     	ds	5
 10254                           
 10255                           	psect	maintext
 10256  007E                     __pmaintext:	
 10257 ;;
 10258 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
 10259 ;;
 10260 ;; *************** function _main *****************
 10261 ;; Defined at:
 10262 ;;		line 179 in file "main.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;		None
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;  t5s             1    4[BANK1 ] unsigned char 
 10267 ;;  aux1            1    1[BANK1 ] unsigned char 
 10268 ;;  aux             1    0[BANK1 ] unsigned char 
 10269 ;; Return value:  Size  Location     Type
 10270 ;;                  1    wreg      void 
 10271 ;; Registers used:
 10272 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10273 ;; Tracked objects:
 10274 ;;		On entry : B1F/0
 10275 ;;		On exit  : 0/0
 10276 ;;		Unchanged: 0/0
 10277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10279 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10280 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10281 ;;      Totals:         0       5       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10282 ;;Total ram usage:       11 bytes
 10283 ;; Hardware stack levels required when called:   11
 10284 ;; This function calls:
 10285 ;;		_ADC_read
 10286 ;;		_DATAEE_WriteByte
 10287 ;;		_INT_SetInterruptHandler
 10288 ;;		_LED_bin
 10289 ;;		_PWM6_LoadDutyValue
 10290 ;;		_SYSTEM_Initialize
 10291 ;;		_TMR0_SetInterruptHandler
 10292 ;;		_TMR0_StartTimer
 10293 ;;		_TMR1_SetInterruptHandler
 10294 ;;		_TMR2_SetInterruptHandler
 10295 ;;		_cksum_w
 10296 ;;		_config_routine
 10297 ;;		_i2c1_driver_open
 10298 ;;		_push_ring
 10299 ;;		_read_ring
 10300 ;;		_recoverData
 10301 ;;		_tsttc
 10302 ;; This function is called by:
 10303 ;;		Startup code after reset
 10304 ;; This function uses a non-reentrant model
 10305 ;;
 10306                           
 10307                           
 10308                           ;psect for function _main
 10309  007E                     _main:	
 10310  007E                     l7389:	
 10311                           ;incstack = 0
 10312                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10313                           
 10314                           
 10315                           ;main.c: 181:     SYSTEM_Initialize();
 10316  007E  318B  2337  3180   	fcall	_SYSTEM_Initialize
 10317                           
 10318                           ;main.c: 182:     TMR0_SetInterruptHandler(ISR_3s);
 10319  0081  30D1               	movlw	low _ISR_3s
 10320  0082  0020               	movlb	0	; select bank0
 10321  0083  00A3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 10322  0084  300A               	movlw	high _ISR_3s
 10323  0085  00A4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 10324  0086  3188  20F5  3180   	fcall	_TMR0_SetInterruptHandler
 10325                           
 10326                           ;main.c: 183:     TMR1_SetInterruptHandler(handler_clock_hms);
 10327  0089  30C7               	movlw	low _handler_clock_hms
 10328  008A  0020               	movlb	0	; select bank0
 10329  008B  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10330  008C  3007               	movlw	high _handler_clock_hms
 10331  008D  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10332  008E  3188  20FE  3180   	fcall	_TMR1_SetInterruptHandler
 10333                           
 10334                           ;main.c: 184:     INT_SetInterruptHandler(sw1_EXT);
 10335  0091  30B0               	movlw	low _sw1_EXT
 10336  0092  0020               	movlb	0	; select bank0
 10337  0093  00A3               	movwf	INT_SetInterruptHandler@InterruptHandler
 10338  0094  300C               	movlw	high _sw1_EXT
 10339  0095  00A4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 10340  0096  3188  20E3  3180   	fcall	_INT_SetInterruptHandler
 10341                           
 10342                           ;main.c: 185:     TMR2_SetInterruptHandler(handler_clock_ms);
 10343  0099  3044               	movlw	low _handler_clock_ms
 10344  009A  0020               	movlb	0	; select bank0
 10345  009B  00A3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 10346  009C  3009               	movlw	high _handler_clock_ms
 10347  009D  00A4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 10348  009E  3189  2107  3180   	fcall	_TMR2_SetInterruptHandler
 10349  00A1                     l7391:	
 10350  00A1                     l7393:	
 10351  00A1                     l1300:	
 10352  00A1  3096               	movlw	150
 10353  00A2  0020               	movlb	0	; select bank0
 10354  00A3  00BC               	movwf	??_main
 10355  00A4  083C               	movf	??_main,w
 10356  00A5  00E7               	movwf	_nreg
 10357  00A6                     l7397:	
 10358                           
 10359                           ;main.c: 193:     nreg_pt = 0;
 10360  00A6  01DD               	clrf	_nreg_pt
 10361  00A7                     l7399:	
 10362                           
 10363                           ;main.c: 194:     nreg_init = 0;
 10364  00A7  01DE               	clrf	_nreg_init
 10365  00A8                     l7401:	
 10366                           
 10367                           ;main.c: 195:     alaf = 1;
 10368  00A8  01D1               	clrf	_alaf
 10369  00A9  0AD1               	incf	_alaf,f
 10370  00AA                     l7403:	
 10371                           
 10372                           ;main.c: 196:     temp = 0;
 10373  00AA  01D2               	clrf	_temp
 10374  00AB                     l7405:	
 10375                           
 10376                           ;main.c: 197:     lum_bin = 0;
 10377  00AB  01C7               	clrf	_lum_bin
 10378  00AC  01C8               	clrf	_lum_bin+1
 10379  00AD                     l7407:	
 10380                           
 10381                           ;main.c: 198:     lum_threshold = 0;
 10382  00AD  01C5               	clrf	_lum_threshold
 10383  00AE  01C6               	clrf	_lum_threshold+1
 10384  00AF                     l7409:	
 10385                           
 10386                           ;main.c: 199:     duty_cycle = 0;
 10387  00AF  01C9               	clrf	_duty_cycle
 10388  00B0  01CA               	clrf	_duty_cycle+1
 10389  00B1                     l7411:	
 10390                           
 10391                           ;main.c: 200:     set_mode= 0;
 10392  00B1  01D5               	clrf	_set_mode	;volatile
 10393  00B2                     l7413:	
 10394                           
 10395                           ;main.c: 203:     i2c1_driver_open();
 10396  00B2  3189  2150  3180   	fcall	_i2c1_driver_open
 10397  00B5                     l7415:	
 10398                           
 10399                           ;main.c: 204:     TRISCbits.TRISC3 = 1;
 10400  00B5  0020               	movlb	0	; select bank0
 10401  00B6  1593               	bsf	19,3	;volatile
 10402  00B7                     l7417:	
 10403                           
 10404                           ;main.c: 205:     TRISCbits.TRISC4 = 1;
 10405  00B7  1613               	bsf	19,4	;volatile
 10406  00B8                     l7419:	
 10407                           
 10408                           ;main.c: 206:     WPUC3 = 1;
 10409  00B8  003E               	movlb	30	; select bank30
 10410  00B9  15CF               	bsf	79,3	;volatile
 10411  00BA                     l7421:	
 10412                           
 10413                           ;main.c: 207:     WPUC4 = 1;
 10414  00BA  164F               	bsf	79,4	;volatile
 10415  00BB                     l7423:	
 10416                           
 10417                           ;main.c: 210:     recoverData();
 10418  00BB  3183  2384  3180   	fcall	_recoverData
 10419  00BE                     l7425:	
 10420                           
 10421                           ;main.c: 212:     PWM6_LoadDutyValue(0);
 10422  00BE  3000               	movlw	0
 10423  00BF  0020               	movlb	0	; select bank0
 10424  00C0  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 10425  00C1  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10426  00C2  318A  22EA  3180   	fcall	_PWM6_LoadDutyValue
 10427  00C5                     l7427:	
 10428                           
 10429                           ;main.c: 213:     alarm = 0 ;
 10430  00C5  0020               	movlb	0	; select bank0
 10431  00C6  01D3               	clrf	_alarm	;volatile
 10432  00C7                     l7429:	
 10433  00C7  003E               	movlb	30	; select bank30
 10434  00C8  1644               	bsf	68,4	;volatile
 10435  00C9                     l7431:	
 10436                           
 10437                           ;main.c: 217:     (INTCONbits.GIE = 1);
 10438  00C9  178B               	bsf	11,7	;volatile
 10439  00CA                     l7433:	
 10440                           
 10441                           ;main.c: 220:     (INTCONbits.PEIE = 1);
 10442  00CA  170B               	bsf	11,6	;volatile
 10443  00CB                     l1303:	
 10444                           ;main.c: 223:     while (1)
 10445                           
 10446  00CB  0063               	sleep	;# 
 10447  00CC                     l7435:	
 10448                           
 10449                           ;main.c: 227:         __nop();
 10450  00CC  0000               	nop
 10451  00CD                     l7437:	
 10452                           
 10453                           ;main.c: 229:         PIE4bits.TMR1IE = 0;
 10454  00CD  002E               	movlb	14	; select bank14
 10455  00CE  101A               	bcf	26,0	;volatile
 10456  00CF                     l7439:	
 10457                           
 10458                           ;main.c: 230:         t5s = last5s;
 10459  00CF  0020               	movlb	0	; select bank0
 10460  00D0  0857               	movf	_last5s,w	;volatile
 10461  00D1  00BC               	movwf	??_main
 10462  00D2  083C               	movf	??_main,w
 10463  00D3  0021               	movlb	1	; select bank1
 10464  00D4  00D8               	movwf	main@t5s^(0+128)
 10465  00D5                     l7441:	
 10466                           
 10467                           ;main.c: 231:         PIE4bits.TMR1IE = 1;
 10468  00D5  002E               	movlb	14	; select bank14
 10469  00D6  141A               	bsf	26,0	;volatile
 10470  00D7                     l7443:	
 10471                           
 10472                           ;main.c: 233:         if(t5s >= pmon){
 10473  00D7  0020               	movlb	0	; select bank0
 10474  00D8  0866               	movf	_pmon,w
 10475  00D9  0021               	movlb	1	; select bank1
 10476  00DA  0258               	subwf	main@t5s^(0+128),w
 10477  00DB  1C03               	skipc
 10478  00DC  28DE               	goto	u5031
 10479  00DD  28DF               	goto	u5030
 10480  00DE                     u5031:	
 10481  00DE  28CB               	goto	l1303
 10482  00DF                     u5030:	
 10483  00DF                     l7445:	
 10484                           
 10485                           ;main.c: 234:             PIE4bits.TMR1IE = 0;
 10486  00DF  002E               	movlb	14	; select bank14
 10487  00E0  101A               	bcf	26,0	;volatile
 10488  00E1                     l7447:	
 10489                           
 10490                           ;main.c: 235:             last5s =0;
 10491  00E1  0020               	movlb	0	; select bank0
 10492  00E2  01D7               	clrf	_last5s	;volatile
 10493  00E3                     l7449:	
 10494                           
 10495                           ;main.c: 236:             PIE4bits.TMR1IE = 1;
 10496  00E3  002E               	movlb	14	; select bank14
 10497  00E4  141A               	bsf	26,0	;volatile
 10498  00E5                     l7451:	
 10499                           
 10500                           ;main.c: 239:                 if(!config_mode){
 10501  00E5  0020               	movlb	0	; select bank0
 10502  00E6  0854               	movf	_config_mode,w	;volatile
 10503  00E7  1D03               	btfss	3,2
 10504  00E8  28EA               	goto	u5041
 10505  00E9  28EB               	goto	u5040
 10506  00EA                     u5041:	
 10507  00EA  29DD               	goto	l7511
 10508  00EB                     u5040:	
 10509  00EB                     l7453:	
 10510                           
 10511                           ;main.c: 241:                     convertedValue = ADC_read();
 10512  00EB  318B  2303  3180   	fcall	_ADC_read
 10513  00EE  0020               	movlb	0	; select bank0
 10514  00EF  0826               	movf	?_ADC_read+1,w
 10515  00F0  00CC               	movwf	_convertedValue+1
 10516  00F1  0825               	movf	?_ADC_read,w
 10517  00F2  00CB               	movwf	_convertedValue
 10518  00F3                     l7455:	
 10519                           
 10520                           ;main.c: 243:                     lum_bin = (convertedValue >> 8);
 10521  00F3  084C               	movf	_convertedValue+1,w
 10522  00F4  00BD               	movwf	??_main+1
 10523  00F5  084B               	movf	_convertedValue,w
 10524  00F6  00BC               	movwf	??_main
 10525  00F7  083D               	movf	??_main+1,w
 10526  00F8  00BC               	movwf	??_main
 10527  00F9  01BD               	clrf	??_main+1
 10528  00FA  083C               	movf	??_main,w
 10529  00FB  00C7               	movwf	_lum_bin
 10530  00FC  083D               	movf	??_main+1,w
 10531  00FD  00C8               	movwf	_lum_bin+1
 10532  00FE                     l7457:	
 10533                           
 10534                           ;main.c: 245:                     LED_bin(lum_bin);
 10535  00FE  0848               	movf	_lum_bin+1,w
 10536  00FF  00A4               	movwf	LED_bin@value+1
 10537  0100  0847               	movf	_lum_bin,w
 10538  0101  00A3               	movwf	LED_bin@value
 10539  0102  318B  231D  3180   	fcall	_LED_bin
 10540  0105                     l7459:	
 10541                           
 10542                           ;main.c: 248:                     __nop();
 10543  0105  0000               	nop
 10544  0106                     l7461:	
 10545                           
 10546                           ;main.c: 249:                     temp = tsttc();
 10547  0106  3182  2234  3180   	fcall	_tsttc
 10548  0109  0020               	movlb	0	; select bank0
 10549  010A  00BC               	movwf	??_main
 10550  010B  083C               	movf	??_main,w
 10551  010C  00D2               	movwf	_temp
 10552  010D                     l7463:	
 10553                           
 10554                           ;main.c: 250:                     __nop();
 10555  010D  0000               	nop
 10556  010E                     l7465:	
 10557                           
 10558                           ;main.c: 253:                     lum_threshold = (lum_bin > 2 || temp > 100 ) & alaf;
 10559  010E  0021               	movlb	1	; select bank1
 10560  010F  01D9               	clrf	_main$2481^(0+128)
 10561  0110  0AD9               	incf	_main$2481^(0+128),f
 10562  0111                     l7467:	
 10563  0111  3000               	movlw	0
 10564  0112  0020               	movlb	0	; select bank0
 10565  0113  0248               	subwf	_lum_bin+1,w
 10566  0114  3003               	movlw	3
 10567  0115  1903               	skipnz
 10568  0116  0247               	subwf	_lum_bin,w
 10569  0117  1803               	skipnc
 10570  0118  291A               	goto	u5051
 10571  0119  291B               	goto	u5050
 10572  011A                     u5051:	
 10573  011A  2923               	goto	l7473
 10574  011B                     u5050:	
 10575  011B                     l7469:	
 10576  011B  3065               	movlw	101
 10577  011C  0252               	subwf	_temp,w
 10578  011D  1803               	skipnc
 10579  011E  2920               	goto	u5061
 10580  011F  2921               	goto	u5060
 10581  0120                     u5061:	
 10582  0120  2923               	goto	l7473
 10583  0121                     u5060:	
 10584  0121                     l7471:	
 10585  0121  0021               	movlb	1	; select bank1
 10586  0122  01D9               	clrf	_main$2481^(0+128)
 10587  0123                     l7473:	
 10588  0123  0021               	movlb	1	; select bank1
 10589  0124  0859               	movf	_main$2481^(0+128),w
 10590  0125  0020               	movlb	0	; select bank0
 10591  0126  0551               	andwf	_alaf,w
 10592  0127  00BC               	movwf	??_main
 10593  0128  01BD               	clrf	??_main+1
 10594  0129  083C               	movf	??_main,w
 10595  012A  00C5               	movwf	_lum_threshold
 10596  012B  083D               	movf	??_main+1,w
 10597  012C  00C6               	movwf	_lum_threshold+1
 10598  012D                     l7475:	
 10599                           
 10600                           ;main.c: 255:                     if (temp != read_ring(nreg_pt, nreg, nreg_init, 0, 3) 
      +                          || lum_bin != read_ring(nreg_pt, nreg, nreg_init, 0, 4)) {
 10601  012D  0867               	movf	_nreg,w
 10602  012E  00BC               	movwf	??_main
 10603  012F  083C               	movf	??_main,w
 10604  0130  00A7               	movwf	read_ring@nreg
 10605  0131  085E               	movf	_nreg_init,w
 10606  0132  00BD               	movwf	??_main+1
 10607  0133  083D               	movf	??_main+1,w
 10608  0134  00A8               	movwf	read_ring@nreg_init
 10609  0135  01A9               	clrf	read_ring@index
 10610  0136  3003               	movlw	3
 10611  0137  00BE               	movwf	??_main+2
 10612  0138  083E               	movf	??_main+2,w
 10613  0139  00AA               	movwf	read_ring@subindex
 10614  013A  085D               	movf	_nreg_pt,w
 10615  013B  318D  25A5  3180   	fcall	_read_ring
 10616  013E  0020               	movlb	0	; select bank0
 10617  013F  0652               	xorwf	_temp,w
 10618  0140  1D03               	skipz
 10619  0141  2943               	goto	u5071
 10620  0142  2944               	goto	u5070
 10621  0143                     u5071:	
 10622  0143  2962               	goto	l1311
 10623  0144                     u5070:	
 10624  0144                     l7477:	
 10625  0144  0867               	movf	_nreg,w
 10626  0145  00BC               	movwf	??_main
 10627  0146  083C               	movf	??_main,w
 10628  0147  00A7               	movwf	read_ring@nreg
 10629  0148  085E               	movf	_nreg_init,w
 10630  0149  00BD               	movwf	??_main+1
 10631  014A  083D               	movf	??_main+1,w
 10632  014B  00A8               	movwf	read_ring@nreg_init
 10633  014C  01A9               	clrf	read_ring@index
 10634  014D  3004               	movlw	4
 10635  014E  00BE               	movwf	??_main+2
 10636  014F  083E               	movf	??_main+2,w
 10637  0150  00AA               	movwf	read_ring@subindex
 10638  0151  085D               	movf	_nreg_pt,w
 10639  0152  318D  25A5  3180   	fcall	_read_ring
 10640  0155  0020               	movlb	0	; select bank0
 10641  0156  00BF               	movwf	??_main+3
 10642  0157  01C0               	clrf	??_main+4
 10643  0158  0848               	movf	_lum_bin+1,w
 10644  0159  0640               	xorwf	??_main+4,w
 10645  015A  1D03               	skipz
 10646  015B  295E               	goto	u5085
 10647  015C  0847               	movf	_lum_bin,w
 10648  015D  063F               	xorwf	??_main+3,w
 10649  015E                     u5085:	
 10650  015E  1903               	skipnz
 10651  015F  2961               	goto	u5081
 10652  0160  2962               	goto	u5080
 10653  0161                     u5081:	
 10654  0161  29A4               	goto	l7489
 10655  0162                     u5080:	
 10656  0162                     l1311:	
 10657                           
 10658                           ;main.c: 257:                         PIE4bits.TMR1IE = 0;
 10659  0162  002E               	movlb	14	; select bank14
 10660  0163  101A               	bcf	26,0	;volatile
 10661  0164                     l7479:	
 10662                           
 10663                           ;main.c: 258:                         ring_byte[0] = clkh;
 10664  0164  0020               	movlb	0	; select bank0
 10665  0165  085C               	movf	_clkh,w	;volatile
 10666  0166  00BC               	movwf	??_main
 10667  0167  083C               	movf	??_main,w
 10668  0168  0021               	movlb	1	; select bank1
 10669  0169  00C7               	movwf	_ring_byte^(0+128)
 10670                           
 10671                           ;main.c: 259:                         ring_byte[1] = clkm;
 10672  016A  0020               	movlb	0	; select bank0
 10673  016B  085B               	movf	_clkm,w	;volatile
 10674  016C  00BC               	movwf	??_main
 10675  016D  083C               	movf	??_main,w
 10676  016E  0021               	movlb	1	; select bank1
 10677  016F  00C8               	movwf	(_ring_byte^(0+128)+1)
 10678                           
 10679                           ;main.c: 260:                         ring_byte[2] = seg;
 10680  0170  0020               	movlb	0	; select bank0
 10681  0171  085A               	movf	_seg,w	;volatile
 10682  0172  00BC               	movwf	??_main
 10683  0173  083C               	movf	??_main,w
 10684  0174  0021               	movlb	1	; select bank1
 10685  0175  00C9               	movwf	(_ring_byte^(0+128)+2)
 10686  0176                     l7481:	
 10687                           
 10688                           ;main.c: 261:                         PIE4bits.TMR1IE = 1;
 10689  0176  002E               	movlb	14	; select bank14
 10690  0177  141A               	bsf	26,0	;volatile
 10691                           
 10692                           ;main.c: 262:                         ring_byte[3] = temp;
 10693  0178  0020               	movlb	0	; select bank0
 10694  0179  0852               	movf	_temp,w
 10695  017A  00BC               	movwf	??_main
 10696  017B  083C               	movf	??_main,w
 10697  017C  0021               	movlb	1	; select bank1
 10698  017D  00CA               	movwf	(_ring_byte^(0+128)+3)
 10699                           
 10700                           ;main.c: 263:                         ring_byte[4] = lum_bin;
 10701  017E  0020               	movlb	0	; select bank0
 10702  017F  0847               	movf	_lum_bin,w
 10703  0180  00BC               	movwf	??_main
 10704  0181  083C               	movf	??_main,w
 10705  0182  0021               	movlb	1	; select bank1
 10706  0183  00CB               	movwf	(_ring_byte^(0+128)+4)
 10707  0184                     l7483:	
 10708                           
 10709                           ;main.c: 264:                         push_ring(&nreg_pt, nreg, &nreg_init, ring_byte);
 10710  0184  0020               	movlb	0	; select bank0
 10711  0185  0867               	movf	_nreg,w
 10712  0186  00BC               	movwf	??_main
 10713  0187  083C               	movf	??_main,w
 10714  0188  00AD               	movwf	push_ring@nreg
 10715  0189  305E               	movlw	(low (_nreg_init| 0))& (0+255)
 10716  018A  00BD               	movwf	??_main+1
 10717  018B  083D               	movf	??_main+1,w
 10718  018C  00AE               	movwf	push_ring@nreg_init
 10719  018D  30C7               	movlw	(low (_ring_byte| 0))& (0+255)
 10720  018E  00BE               	movwf	??_main+2
 10721  018F  083E               	movf	??_main+2,w
 10722  0190  00AF               	movwf	push_ring@ring_byte
 10723  0191  305D               	movlw	(low (_nreg_pt| 0))& (0+255)
 10724  0192  318D  25E4  3180   	fcall	_push_ring
 10725  0195                     l7485:	
 10726                           
 10727                           ;main.c: 266:                         DATAEE_WriteByte(0xF0FF - 10 + 4, nreg_pt);
 10728  0195  30F9               	movlw	249
 10729  0196  0020               	movlb	0	; select bank0
 10730  0197  00A9               	movwf	DATAEE_WriteByte@bAdd
 10731  0198  30F0               	movlw	240
 10732  0199  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 10733  019A  085D               	movf	_nreg_pt,w
 10734  019B  00BC               	movwf	??_main
 10735  019C  083C               	movf	??_main,w
 10736  019D  00AB               	movwf	DATAEE_WriteByte@bData
 10737  019E  318C  240D  3180   	fcall	_DATAEE_WriteByte
 10738  01A1                     l7487:	
 10739                           
 10740                           ;main.c: 267:                         cksum_w();
 10741  01A1  3189  21CE  3180   	fcall	_cksum_w
 10742  01A4                     l7489:	
 10743                           
 10744                           ;main.c: 272:                     if(lum_threshold){
 10745  01A4  0020               	movlb	0	; select bank0
 10746  01A5  0845               	movf	_lum_threshold,w
 10747  01A6  0446               	iorwf	_lum_threshold+1,w
 10748  01A7  1903               	btfsc	3,2
 10749  01A8  29AA               	goto	u5091
 10750  01A9  29AB               	goto	u5090
 10751  01AA                     u5091:	
 10752  01AA  29CD               	goto	l7505
 10753  01AB                     u5090:	
 10754  01AB                     l7491:	
 10755                           
 10756                           ;main.c: 273:                         if(alarm == 2){
 10757  01AB  3002               	movlw	2
 10758  01AC  0653               	xorwf	_alarm,w	;volatile
 10759  01AD  1D03               	btfss	3,2
 10760  01AE  29B0               	goto	u5101
 10761  01AF  29B1               	goto	u5100
 10762  01B0                     u5101:	
 10763  01B0  29BD               	goto	l7497
 10764  01B1                     u5100:	
 10765  01B1                     l7493:	
 10766                           
 10767                           ;main.c: 274:                             duty_cycle +=1 ;
 10768  01B1  3001               	movlw	1
 10769  01B2  07C9               	addwf	_duty_cycle,f
 10770  01B3  3000               	movlw	0
 10771  01B4  3DCA               	addwfc	_duty_cycle+1,f
 10772  01B5                     l7495:	
 10773                           
 10774                           ;main.c: 275:                             PWM6_LoadDutyValue(duty_cycle);
 10775  01B5  084A               	movf	_duty_cycle+1,w
 10776  01B6  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10777  01B7  0849               	movf	_duty_cycle,w
 10778  01B8  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 10779  01B9  318A  22EA  3180   	fcall	_PWM6_LoadDutyValue
 10780                           
 10781                           ;main.c: 276:                         }
 10782  01BC  29E9               	goto	l7519
 10783  01BD                     l7497:	
 10784  01BD  0853               	movf	_alarm,w	;volatile
 10785  01BE  1D03               	btfss	3,2
 10786  01BF  29C1               	goto	u5111
 10787  01C0  29C2               	goto	u5110
 10788  01C1                     u5111:	
 10789  01C1  29DC               	goto	l1316
 10790  01C2                     u5110:	
 10791  01C2                     l7499:	
 10792                           
 10793                           ;main.c: 278:                             PIE0bits.TMR0IE = 1;
 10794  01C2  002E               	movlb	14	; select bank14
 10795  01C3  1696               	bsf	22,5	;volatile
 10796  01C4                     l7501:	
 10797                           
 10798                           ;main.c: 279:                             TMR0_StartTimer();
 10799  01C4  3188  2046  3180   	fcall	_TMR0_StartTimer
 10800  01C7                     l7503:	
 10801                           
 10802                           ;main.c: 280:                             alarm = 2 ;
 10803  01C7  3002               	movlw	2
 10804  01C8  0020               	movlb	0	; select bank0
 10805  01C9  00BC               	movwf	??_main
 10806  01CA  083C               	movf	??_main,w
 10807  01CB  00D3               	movwf	_alarm	;volatile
 10808  01CC  29E9               	goto	l7519
 10809  01CD                     l7505:	
 10810                           
 10811                           ;main.c: 284:                         if(alarm == 2){
 10812  01CD  3002               	movlw	2
 10813  01CE  0653               	xorwf	_alarm,w	;volatile
 10814  01CF  1D03               	btfss	3,2
 10815  01D0  29D2               	goto	u5121
 10816  01D1  29D3               	goto	u5120
 10817  01D2                     u5121:	
 10818  01D2  29E9               	goto	l7519
 10819  01D3                     u5120:	
 10820  01D3                     l7507:	
 10821                           
 10822                           ;main.c: 285:                             PWM6_LoadDutyValue(0);
 10823  01D3  3000               	movlw	0
 10824  01D4  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 10825  01D5  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 10826  01D6  318A  22EA  3180   	fcall	_PWM6_LoadDutyValue
 10827  01D9                     l7509:	
 10828                           
 10829                           ;main.c: 286:                             alarm = 0 ;
 10830  01D9  0020               	movlb	0	; select bank0
 10831  01DA  01D3               	clrf	_alarm	;volatile
 10832  01DB  29E9               	goto	l7519
 10833  01DC                     l1316:	
 10834                           ;main.c: 288:                     }
 10835                           
 10836                           
 10837                           ;main.c: 290:                 }
 10838  01DC  29E9               	goto	l7519
 10839  01DD                     l7511:	
 10840  01DD  0354               	decf	_config_mode,w	;volatile
 10841  01DE  1D03               	btfss	3,2
 10842  01DF  29E1               	goto	u5131
 10843  01E0  29E2               	goto	u5130
 10844  01E1                     u5131:	
 10845  01E1  29E9               	goto	l7519
 10846  01E2                     u5130:	
 10847  01E2                     l7513:	
 10848                           
 10849                           ;main.c: 294:                     (PIE0bits.INTE = 0);
 10850  01E2  002E               	movlb	14	; select bank14
 10851  01E3  1016               	bcf	22,0	;volatile
 10852  01E4                     l7515:	
 10853                           
 10854                           ;main.c: 295:                     config_routine();
 10855  01E4  3184  241C  3180   	fcall	_config_routine
 10856  01E7                     l7517:	
 10857                           
 10858                           ;main.c: 296:                     (PIE0bits.INTE = 1);
 10859  01E7  002E               	movlb	14	; select bank14
 10860  01E8  1416               	bsf	22,0	;volatile
 10861  01E9                     l7519:	
 10862                           
 10863                           ;main.c: 299:                 _delay((unsigned long)((10)*(1000000/4000.0)));
 10864  01E9  3004               	movlw	4
 10865  01EA  0020               	movlb	0	; select bank0
 10866  01EB  00BC               	movwf	??_main
 10867  01EC  303D               	movlw	61
 10868  01ED                     u5187:	
 10869  01ED  0B89               	decfsz	9,f
 10870  01EE  29ED               	goto	u5187
 10871  01EF  0BBC               	decfsz	??_main,f
 10872  01F0  29ED               	goto	u5187
 10873  01F1  3200               	nop2
 10874  01F2                     l7521:	
 10875                           
 10876                           ;main.c: 301:             }while(alarm == 2);
 10877  01F2  3002               	movlw	2
 10878  01F3  0020               	movlb	0	; select bank0
 10879  01F4  0653               	xorwf	_alarm,w	;volatile
 10880  01F5  1903               	btfsc	3,2
 10881  01F6  29F8               	goto	u5141
 10882  01F7  29F9               	goto	u5140
 10883  01F8                     u5141:	
 10884  01F8  28E5               	goto	l7451
 10885  01F9                     u5140:	
 10886  01F9                     l1320:	
 10887                           
 10888                           ;main.c: 303:             PIE4bits.TMR1IE = 0;
 10889  01F9  002E               	movlb	14	; select bank14
 10890  01FA  101A               	bcf	26,0	;volatile
 10891  01FB                     l7523:	
 10892                           
 10893                           ;main.c: 304:             if (last1m >= 1) {
 10894  01FB  0020               	movlb	0	; select bank0
 10895  01FC  0856               	movf	_last1m,w	;volatile
 10896  01FD  1903               	btfsc	3,2
 10897  01FE  2A00               	goto	u5151
 10898  01FF  2A01               	goto	u5150
 10899  0200                     u5151:	
 10900  0200  2A2F               	goto	l1321
 10901  0201                     u5150:	
 10902  0201                     l7525:	
 10903                           
 10904                           ;main.c: 306:                 last1m = 0;
 10905  0201  01D6               	clrf	_last1m	;volatile
 10906  0202                     l7527:	
 10907                           
 10908                           ;main.c: 307:                 aux = clkh;
 10909  0202  085C               	movf	_clkh,w	;volatile
 10910  0203  00BC               	movwf	??_main
 10911  0204  083C               	movf	??_main,w
 10912  0205  0021               	movlb	1	; select bank1
 10913  0206  00D4               	movwf	main@aux^(0+128)
 10914  0207                     l7529:	
 10915                           
 10916                           ;main.c: 308:                 aux1 = clkm;
 10917  0207  0020               	movlb	0	; select bank0
 10918  0208  085B               	movf	_clkm,w	;volatile
 10919  0209  00BC               	movwf	??_main
 10920  020A  083C               	movf	??_main,w
 10921  020B  0021               	movlb	1	; select bank1
 10922  020C  00D5               	movwf	main@aux1^(0+128)
 10923  020D                     l7531:	
 10924                           
 10925                           ;main.c: 309:                 PIE4bits.TMR1IE = 1;
 10926  020D  002E               	movlb	14	; select bank14
 10927  020E  141A               	bsf	26,0	;volatile
 10928  020F                     l7533:	
 10929                           
 10930                           ;main.c: 310:                 DATAEE_WriteByte(0xF0FF - 10 + 1, aux);
 10931  020F  30F6               	movlw	246
 10932  0210  0020               	movlb	0	; select bank0
 10933  0211  00A9               	movwf	DATAEE_WriteByte@bAdd
 10934  0212  30F0               	movlw	240
 10935  0213  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 10936  0214  0021               	movlb	1	; select bank1
 10937  0215  0854               	movf	main@aux^(0+128),w
 10938  0216  0020               	movlb	0	; select bank0
 10939  0217  00BC               	movwf	??_main
 10940  0218  083C               	movf	??_main,w
 10941  0219  00AB               	movwf	DATAEE_WriteByte@bData
 10942  021A  318C  240D  3180   	fcall	_DATAEE_WriteByte
 10943  021D                     l7535:	
 10944                           
 10945                           ;main.c: 311:                 DATAEE_WriteByte(0xF0FF - 10 + 2, aux1);
 10946  021D  30F7               	movlw	247
 10947  021E  0020               	movlb	0	; select bank0
 10948  021F  00A9               	movwf	DATAEE_WriteByte@bAdd
 10949  0220  30F0               	movlw	240
 10950  0221  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 10951  0222  0021               	movlb	1	; select bank1
 10952  0223  0855               	movf	main@aux1^(0+128),w
 10953  0224  0020               	movlb	0	; select bank0
 10954  0225  00BC               	movwf	??_main
 10955  0226  083C               	movf	??_main,w
 10956  0227  00AB               	movwf	DATAEE_WriteByte@bData
 10957  0228  318C  240D  3180   	fcall	_DATAEE_WriteByte
 10958  022B                     l7537:	
 10959                           
 10960                           ;main.c: 312:                 cksum_w();
 10961  022B  3189  21CE  3180   	fcall	_cksum_w
 10962                           
 10963                           ;main.c: 314:             }else{
 10964  022E  28CB               	goto	l1303
 10965  022F                     l1321:	
 10966                           
 10967                           ;main.c: 315:                 PIE4bits.TMR1IE = 1;}
 10968  022F  002E               	movlb	14	; select bank14
 10969  0230  141A               	bsf	26,0	;volatile
 10970  0231  28CB               	goto	l1303
 10971  0232  3180  285B         	ljmp	start
 10972  0234                     __end_of_main:	
 10973                           
 10974                           	psect	text1
 10975  0234                     __ptext1:	
 10976 ;; *************** function _tsttc *****************
 10977 ;; Defined at:
 10978 ;;		line 15 in file "I2C/i2c.c"
 10979 ;; Parameters:    Size  Location     Type
 10980 ;;		None
 10981 ;; Auto vars:     Size  Location     Type
 10982 ;;  value           1    6[BANK0 ] unsigned char 
 10983 ;; Return value:  Size  Location     Type
 10984 ;;                  1    wreg      unsigned char 
 10985 ;; Registers used:
 10986 ;;		wreg, status,2, status,0, pclath, cstack
 10987 ;; Tracked objects:
 10988 ;;		On entry : 0/0
 10989 ;;		On exit  : 0/0
 10990 ;;		Unchanged: 0/0
 10991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10993 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10994 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10995 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10996 ;;Total ram usage:        2 bytes
 10997 ;; Hardware stack levels used:    1
 10998 ;; Hardware stack levels required when called:    7
 10999 ;; This function calls:
 11000 ;;		_ReadI2C
 11001 ;;		_WriteI2C
 11002 ;; This function is called by:
 11003 ;;		_main
 11004 ;; This function uses a non-reentrant model
 11005 ;;
 11006                           
 11007                           
 11008                           ;psect for function _tsttc
 11009  0234                     _tsttc:	
 11010  0234                     l1546:	
 11011                           ;incstack = 0
 11012                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
 11013                           ;I2C/i2c.c: 17:  unsigned char value;;I2C/i2c.c: 19:     do{
 11014                           
 11015  0234                     l7133:	
 11016                           ;I2C/i2c.c: 20:         while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11017                           
 11018  0234  0023               	movlb	3	; select bank3
 11019  0235  0C0F               	rrf	15,w	;volatile
 11020  0236  0C89               	rrf	9,f
 11021  0237  3901               	andlw	1
 11022  0238  0020               	movlb	0	; select bank0
 11023  0239  00A5               	movwf	??_tsttc
 11024  023A  0023               	movlb	3	; select bank3
 11025  023B  0811               	movf	17,w	;volatile
 11026  023C  391F               	andlw	31
 11027  023D  0020               	movlb	0	; select bank0
 11028  023E  0425               	iorwf	??_tsttc,w
 11029  023F  1D03               	btfss	3,2
 11030  0240  2A42               	goto	u4491
 11031  0241  2A43               	goto	u4490
 11032  0242                     u4491:	
 11033  0242  2A34               	goto	l7133
 11034  0243                     u4490:	
 11035  0243                     l1549:	
 11036                           
 11037                           ;I2C/i2c.c: 21:         SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0
      +                          x1F) | (SSP1STATbits.R_W));
 11038  0243  0023               	movlb	3	; select bank3
 11039  0244  1411               	bsf	17,0	;volatile
 11040  0245                     l1550:	
 11041  0245  1811               	btfsc	17,0	;volatile
 11042  0246  2A48               	goto	u4501
 11043  0247  2A49               	goto	u4500
 11044  0248                     u4501:	
 11045  0248  2A45               	goto	l1550
 11046  0249                     u4500:	
 11047  0249                     l7135:	
 11048  0249  0023               	movlb	3	; select bank3
 11049  024A  0C0F               	rrf	15,w	;volatile
 11050  024B  0C89               	rrf	9,f
 11051  024C  3901               	andlw	1
 11052  024D  0020               	movlb	0	; select bank0
 11053  024E  00A5               	movwf	??_tsttc
 11054  024F  0023               	movlb	3	; select bank3
 11055  0250  0811               	movf	17,w	;volatile
 11056  0251  391F               	andlw	31
 11057  0252  0020               	movlb	0	; select bank0
 11058  0253  0425               	iorwf	??_tsttc,w
 11059  0254  1D03               	btfss	3,2
 11060  0255  2A57               	goto	u4511
 11061  0256  2A58               	goto	u4510
 11062  0257                     u4511:	
 11063  0257  2A49               	goto	l7135
 11064  0258                     u4510:	
 11065  0258                     l7137:	
 11066                           
 11067                           ;I2C/i2c.c: 23:         WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 11068  0258  309A               	movlw	154
 11069  0259  3186  26B9  3182   	fcall	_WriteI2C
 11070  025C                     l7139:	
 11071  025C  0023               	movlb	3	; select bank3
 11072  025D  0C0F               	rrf	15,w	;volatile
 11073  025E  0C89               	rrf	9,f
 11074  025F  3901               	andlw	1
 11075  0260  0020               	movlb	0	; select bank0
 11076  0261  00A5               	movwf	??_tsttc
 11077  0262  0023               	movlb	3	; select bank3
 11078  0263  0811               	movf	17,w	;volatile
 11079  0264  391F               	andlw	31
 11080  0265  0020               	movlb	0	; select bank0
 11081  0266  0425               	iorwf	??_tsttc,w
 11082  0267  1D03               	btfss	3,2
 11083  0268  2A6A               	goto	u4521
 11084  0269  2A6B               	goto	u4520
 11085  026A                     u4521:	
 11086  026A  2A5C               	goto	l7139
 11087  026B                     u4520:	
 11088  026B                     l7141:	
 11089                           
 11090                           ;I2C/i2c.c: 24:         WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11091  026B  3001               	movlw	1
 11092  026C  3186  26B9  3182   	fcall	_WriteI2C
 11093  026F                     l7143:	
 11094  026F  0023               	movlb	3	; select bank3
 11095  0270  0C0F               	rrf	15,w	;volatile
 11096  0271  0C89               	rrf	9,f
 11097  0272  3901               	andlw	1
 11098  0273  0020               	movlb	0	; select bank0
 11099  0274  00A5               	movwf	??_tsttc
 11100  0275  0023               	movlb	3	; select bank3
 11101  0276  0811               	movf	17,w	;volatile
 11102  0277  391F               	andlw	31
 11103  0278  0020               	movlb	0	; select bank0
 11104  0279  0425               	iorwf	??_tsttc,w
 11105  027A  1D03               	btfss	3,2
 11106  027B  2A7D               	goto	u4531
 11107  027C  2A7E               	goto	u4530
 11108  027D                     u4531:	
 11109  027D  2A6F               	goto	l7143
 11110  027E                     u4530:	
 11111  027E                     l1561:	
 11112                           
 11113                           ;I2C/i2c.c: 25:         SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 &
      +                           0x1F) | (SSP1STATbits.R_W));
 11114  027E  0023               	movlb	3	; select bank3
 11115  027F  1491               	bsf	17,1	;volatile
 11116  0280                     l1562:	
 11117  0280  1891               	btfsc	17,1	;volatile
 11118  0281  2A83               	goto	u4541
 11119  0282  2A84               	goto	u4540
 11120  0283                     u4541:	
 11121  0283  2A80               	goto	l1562
 11122  0284                     u4540:	
 11123  0284                     l7145:	
 11124  0284  0023               	movlb	3	; select bank3
 11125  0285  0C0F               	rrf	15,w	;volatile
 11126  0286  0C89               	rrf	9,f
 11127  0287  3901               	andlw	1
 11128  0288  0020               	movlb	0	; select bank0
 11129  0289  00A5               	movwf	??_tsttc
 11130  028A  0023               	movlb	3	; select bank3
 11131  028B  0811               	movf	17,w	;volatile
 11132  028C  391F               	andlw	31
 11133  028D  0020               	movlb	0	; select bank0
 11134  028E  0425               	iorwf	??_tsttc,w
 11135  028F  1D03               	btfss	3,2
 11136  0290  2A92               	goto	u4551
 11137  0291  2A93               	goto	u4550
 11138  0292                     u4551:	
 11139  0292  2A84               	goto	l7145
 11140  0293                     u4550:	
 11141  0293                     l7147:	
 11142                           
 11143                           ;I2C/i2c.c: 26:         WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 11144  0293  309B               	movlw	155
 11145  0294  3186  26B9  3182   	fcall	_WriteI2C
 11146  0297                     l7149:	
 11147  0297  0023               	movlb	3	; select bank3
 11148  0298  0C0F               	rrf	15,w	;volatile
 11149  0299  0C89               	rrf	9,f
 11150  029A  3901               	andlw	1
 11151  029B  0020               	movlb	0	; select bank0
 11152  029C  00A5               	movwf	??_tsttc
 11153  029D  0023               	movlb	3	; select bank3
 11154  029E  0811               	movf	17,w	;volatile
 11155  029F  391F               	andlw	31
 11156  02A0  0020               	movlb	0	; select bank0
 11157  02A1  0425               	iorwf	??_tsttc,w
 11158  02A2  1D03               	btfss	3,2
 11159  02A3  2AA5               	goto	u4561
 11160  02A4  2AA6               	goto	u4560
 11161  02A5                     u4561:	
 11162  02A5  2A97               	goto	l7149
 11163  02A6                     u4560:	
 11164  02A6                     l7151:	
 11165                           
 11166                           ;I2C/i2c.c: 27:         value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W)
      +                          );
 11167  02A6  318B  238E  3182   	fcall	_ReadI2C
 11168  02A9  0020               	movlb	0	; select bank0
 11169  02AA  00A5               	movwf	??_tsttc
 11170  02AB  0825               	movf	??_tsttc,w
 11171  02AC  00A6               	movwf	tsttc@value
 11172  02AD                     l7153:	
 11173  02AD  0023               	movlb	3	; select bank3
 11174  02AE  0C0F               	rrf	15,w	;volatile
 11175  02AF  0C89               	rrf	9,f
 11176  02B0  3901               	andlw	1
 11177  02B1  0020               	movlb	0	; select bank0
 11178  02B2  00A5               	movwf	??_tsttc
 11179  02B3  0023               	movlb	3	; select bank3
 11180  02B4  0811               	movf	17,w	;volatile
 11181  02B5  391F               	andlw	31
 11182  02B6  0020               	movlb	0	; select bank0
 11183  02B7  0425               	iorwf	??_tsttc,w
 11184  02B8  1D03               	btfss	3,2
 11185  02B9  2ABB               	goto	u4571
 11186  02BA  2ABC               	goto	u4570
 11187  02BB                     u4571:	
 11188  02BB  2AAD               	goto	l7153
 11189  02BC                     u4570:	
 11190  02BC                     l1573:	
 11191                           
 11192                           ;I2C/i2c.c: 28:         SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACK
      +                          EN); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11193  02BC  0023               	movlb	3	; select bank3
 11194  02BD  1691               	bsf	17,5	;volatile
 11195  02BE  1611               	bsf	17,4	;volatile
 11196  02BF                     l1574:	
 11197  02BF  1A11               	btfsc	17,4	;volatile
 11198  02C0  2AC2               	goto	u4581
 11199  02C1  2AC3               	goto	u4580
 11200  02C2                     u4581:	
 11201  02C2  2ABF               	goto	l1574
 11202  02C3                     u4580:	
 11203  02C3                     l7155:	
 11204  02C3  0023               	movlb	3	; select bank3
 11205  02C4  0C0F               	rrf	15,w	;volatile
 11206  02C5  0C89               	rrf	9,f
 11207  02C6  3901               	andlw	1
 11208  02C7  0020               	movlb	0	; select bank0
 11209  02C8  00A5               	movwf	??_tsttc
 11210  02C9  0023               	movlb	3	; select bank3
 11211  02CA  0811               	movf	17,w	;volatile
 11212  02CB  391F               	andlw	31
 11213  02CC  0020               	movlb	0	; select bank0
 11214  02CD  0425               	iorwf	??_tsttc,w
 11215  02CE  1D03               	btfss	3,2
 11216  02CF  2AD1               	goto	u4591
 11217  02D0  2AD2               	goto	u4590
 11218  02D1                     u4591:	
 11219  02D1  2AC3               	goto	l7155
 11220  02D2                     u4590:	
 11221  02D2                     l1579:	
 11222                           
 11223                           ;I2C/i2c.c: 29:         SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11224  02D2  0023               	movlb	3	; select bank3
 11225  02D3  1511               	bsf	17,2	;volatile
 11226  02D4                     l1580:	
 11227  02D4  1911               	btfsc	17,2	;volatile
 11228  02D5  2AD7               	goto	u4601
 11229  02D6  2AD8               	goto	u4600
 11230  02D7                     u4601:	
 11231  02D7  2AD4               	goto	l1580
 11232  02D8                     u4600:	
 11233  02D8                     l1582:	
 11234                           
 11235                           ;I2C/i2c.c: 30:     } while (!(value & 0x40));
 11236  02D8  0020               	movlb	0	; select bank0
 11237  02D9  1F26               	btfss	tsttc@value,6
 11238  02DA  2ADC               	goto	u4611
 11239  02DB  2ADD               	goto	u4610
 11240  02DC                     u4611:	
 11241  02DC  2A34               	goto	l1546
 11242  02DD                     u4610:	
 11243  02DD                     l7157:	
 11244  02DD  0023               	movlb	3	; select bank3
 11245  02DE  0C0F               	rrf	15,w	;volatile
 11246  02DF  0C89               	rrf	9,f
 11247  02E0  3901               	andlw	1
 11248  02E1  0020               	movlb	0	; select bank0
 11249  02E2  00A5               	movwf	??_tsttc
 11250  02E3  0023               	movlb	3	; select bank3
 11251  02E4  0811               	movf	17,w	;volatile
 11252  02E5  391F               	andlw	31
 11253  02E6  0020               	movlb	0	; select bank0
 11254  02E7  0425               	iorwf	??_tsttc,w
 11255  02E8  1D03               	btfss	3,2
 11256  02E9  2AEB               	goto	u4621
 11257  02EA  2AEC               	goto	u4620
 11258  02EB                     u4621:	
 11259  02EB  2ADD               	goto	l7157
 11260  02EC                     u4620:	
 11261  02EC                     l1586:	
 11262                           
 11263                           ;I2C/i2c.c: 33:  SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | 
      +                          (SSP1STATbits.R_W));
 11264  02EC  0023               	movlb	3	; select bank3
 11265  02ED  1411               	bsf	17,0	;volatile
 11266  02EE                     l1587:	
 11267  02EE  1811               	btfsc	17,0	;volatile
 11268  02EF  2AF1               	goto	u4631
 11269  02F0  2AF2               	goto	u4630
 11270  02F1                     u4631:	
 11271  02F1  2AEE               	goto	l1587
 11272  02F2                     u4630:	
 11273  02F2                     l7159:	
 11274  02F2  0023               	movlb	3	; select bank3
 11275  02F3  0C0F               	rrf	15,w	;volatile
 11276  02F4  0C89               	rrf	9,f
 11277  02F5  3901               	andlw	1
 11278  02F6  0020               	movlb	0	; select bank0
 11279  02F7  00A5               	movwf	??_tsttc
 11280  02F8  0023               	movlb	3	; select bank3
 11281  02F9  0811               	movf	17,w	;volatile
 11282  02FA  391F               	andlw	31
 11283  02FB  0020               	movlb	0	; select bank0
 11284  02FC  0425               	iorwf	??_tsttc,w
 11285  02FD  1D03               	btfss	3,2
 11286  02FE  2B00               	goto	u4641
 11287  02FF  2B01               	goto	u4640
 11288  0300                     u4641:	
 11289  0300  2AF2               	goto	l7159
 11290  0301                     u4640:	
 11291  0301                     l7161:	
 11292                           
 11293                           ;I2C/i2c.c: 34:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11294  0301  309A               	movlw	154
 11295  0302  3186  26B9  3182   	fcall	_WriteI2C
 11296  0305                     l7163:	
 11297  0305  0023               	movlb	3	; select bank3
 11298  0306  0C0F               	rrf	15,w	;volatile
 11299  0307  0C89               	rrf	9,f
 11300  0308  3901               	andlw	1
 11301  0309  0020               	movlb	0	; select bank0
 11302  030A  00A5               	movwf	??_tsttc
 11303  030B  0023               	movlb	3	; select bank3
 11304  030C  0811               	movf	17,w	;volatile
 11305  030D  391F               	andlw	31
 11306  030E  0020               	movlb	0	; select bank0
 11307  030F  0425               	iorwf	??_tsttc,w
 11308  0310  1D03               	btfss	3,2
 11309  0311  2B13               	goto	u4651
 11310  0312  2B14               	goto	u4650
 11311  0313                     u4651:	
 11312  0313  2B05               	goto	l7163
 11313  0314                     u4650:	
 11314  0314                     l7165:	
 11315                           
 11316                           ;I2C/i2c.c: 35:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11317  0314  3000               	movlw	0
 11318  0315  3186  26B9  3182   	fcall	_WriteI2C
 11319  0318                     l7167:	
 11320  0318  0023               	movlb	3	; select bank3
 11321  0319  0C0F               	rrf	15,w	;volatile
 11322  031A  0C89               	rrf	9,f
 11323  031B  3901               	andlw	1
 11324  031C  0020               	movlb	0	; select bank0
 11325  031D  00A5               	movwf	??_tsttc
 11326  031E  0023               	movlb	3	; select bank3
 11327  031F  0811               	movf	17,w	;volatile
 11328  0320  391F               	andlw	31
 11329  0321  0020               	movlb	0	; select bank0
 11330  0322  0425               	iorwf	??_tsttc,w
 11331  0323  1D03               	btfss	3,2
 11332  0324  2B26               	goto	u4661
 11333  0325  2B27               	goto	u4660
 11334  0326                     u4661:	
 11335  0326  2B18               	goto	l7167
 11336  0327                     u4660:	
 11337  0327                     l1598:	
 11338                           
 11339                           ;I2C/i2c.c: 36:  SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) 
      +                          | (SSP1STATbits.R_W));
 11340  0327  0023               	movlb	3	; select bank3
 11341  0328  1491               	bsf	17,1	;volatile
 11342  0329                     l1599:	
 11343  0329  1891               	btfsc	17,1	;volatile
 11344  032A  2B2C               	goto	u4671
 11345  032B  2B2D               	goto	u4670
 11346  032C                     u4671:	
 11347  032C  2B29               	goto	l1599
 11348  032D                     u4670:	
 11349  032D                     l7169:	
 11350  032D  0023               	movlb	3	; select bank3
 11351  032E  0C0F               	rrf	15,w	;volatile
 11352  032F  0C89               	rrf	9,f
 11353  0330  3901               	andlw	1
 11354  0331  0020               	movlb	0	; select bank0
 11355  0332  00A5               	movwf	??_tsttc
 11356  0333  0023               	movlb	3	; select bank3
 11357  0334  0811               	movf	17,w	;volatile
 11358  0335  391F               	andlw	31
 11359  0336  0020               	movlb	0	; select bank0
 11360  0337  0425               	iorwf	??_tsttc,w
 11361  0338  1D03               	btfss	3,2
 11362  0339  2B3B               	goto	u4681
 11363  033A  2B3C               	goto	u4680
 11364  033B                     u4681:	
 11365  033B  2B2D               	goto	l7169
 11366  033C                     u4680:	
 11367  033C                     l7171:	
 11368                           
 11369                           ;I2C/i2c.c: 37:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11370  033C  309B               	movlw	155
 11371  033D  3186  26B9  3182   	fcall	_WriteI2C
 11372  0340                     l7173:	
 11373  0340  0023               	movlb	3	; select bank3
 11374  0341  0C0F               	rrf	15,w	;volatile
 11375  0342  0C89               	rrf	9,f
 11376  0343  3901               	andlw	1
 11377  0344  0020               	movlb	0	; select bank0
 11378  0345  00A5               	movwf	??_tsttc
 11379  0346  0023               	movlb	3	; select bank3
 11380  0347  0811               	movf	17,w	;volatile
 11381  0348  391F               	andlw	31
 11382  0349  0020               	movlb	0	; select bank0
 11383  034A  0425               	iorwf	??_tsttc,w
 11384  034B  1D03               	btfss	3,2
 11385  034C  2B4E               	goto	u4691
 11386  034D  2B4F               	goto	u4690
 11387  034E                     u4691:	
 11388  034E  2B40               	goto	l7173
 11389  034F                     u4690:	
 11390  034F                     l7175:	
 11391                           
 11392                           ;I2C/i2c.c: 38:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11393  034F  318B  238E  3182   	fcall	_ReadI2C
 11394  0352  0020               	movlb	0	; select bank0
 11395  0353  00A5               	movwf	??_tsttc
 11396  0354  0825               	movf	??_tsttc,w
 11397  0355  00A6               	movwf	tsttc@value
 11398  0356                     l7177:	
 11399  0356  0023               	movlb	3	; select bank3
 11400  0357  0C0F               	rrf	15,w	;volatile
 11401  0358  0C89               	rrf	9,f
 11402  0359  3901               	andlw	1
 11403  035A  0020               	movlb	0	; select bank0
 11404  035B  00A5               	movwf	??_tsttc
 11405  035C  0023               	movlb	3	; select bank3
 11406  035D  0811               	movf	17,w	;volatile
 11407  035E  391F               	andlw	31
 11408  035F  0020               	movlb	0	; select bank0
 11409  0360  0425               	iorwf	??_tsttc,w
 11410  0361  1D03               	btfss	3,2
 11411  0362  2B64               	goto	u4701
 11412  0363  2B65               	goto	u4700
 11413  0364                     u4701:	
 11414  0364  2B56               	goto	l7177
 11415  0365                     u4700:	
 11416  0365                     l1610:	
 11417                           
 11418                           ;I2C/i2c.c: 39:  SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); wh
      +                          ile ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11419  0365  0023               	movlb	3	; select bank3
 11420  0366  1691               	bsf	17,5	;volatile
 11421  0367  1611               	bsf	17,4	;volatile
 11422  0368                     l1611:	
 11423  0368  1A11               	btfsc	17,4	;volatile
 11424  0369  2B6B               	goto	u4711
 11425  036A  2B6C               	goto	u4710
 11426  036B                     u4711:	
 11427  036B  2B68               	goto	l1611
 11428  036C                     u4710:	
 11429  036C                     l7179:	
 11430  036C  0023               	movlb	3	; select bank3
 11431  036D  0C0F               	rrf	15,w	;volatile
 11432  036E  0C89               	rrf	9,f
 11433  036F  3901               	andlw	1
 11434  0370  0020               	movlb	0	; select bank0
 11435  0371  00A5               	movwf	??_tsttc
 11436  0372  0023               	movlb	3	; select bank3
 11437  0373  0811               	movf	17,w	;volatile
 11438  0374  391F               	andlw	31
 11439  0375  0020               	movlb	0	; select bank0
 11440  0376  0425               	iorwf	??_tsttc,w
 11441  0377  1D03               	btfss	3,2
 11442  0378  2B7A               	goto	u4721
 11443  0379  2B7B               	goto	u4720
 11444  037A                     u4721:	
 11445  037A  2B6C               	goto	l7179
 11446  037B                     u4720:	
 11447  037B                     l1616:	
 11448                           
 11449                           ;I2C/i2c.c: 40:  SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 11450  037B  0023               	movlb	3	; select bank3
 11451  037C  1511               	bsf	17,2	;volatile
 11452  037D                     l1617:	
 11453  037D  1911               	btfsc	17,2	;volatile
 11454  037E  2B80               	goto	u4731
 11455  037F  2B81               	goto	u4730
 11456  0380                     u4731:	
 11457  0380  2B7D               	goto	l1617
 11458  0381                     u4730:	
 11459  0381                     l7181:	
 11460                           
 11461                           ;I2C/i2c.c: 42:  return value;
 11462  0381  0020               	movlb	0	; select bank0
 11463  0382  0826               	movf	tsttc@value,w
 11464  0383                     l1620:	
 11465  0383  0008               	return
 11466  0384                     __end_of_tsttc:	
 11467                           
 11468                           	psect	text2
 11469  06B9                     __ptext2:	
 11470 ;; *************** function _WriteI2C *****************
 11471 ;; Defined at:
 11472 ;;		line 88 in file "I2C/i2c.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  data_out        1    wreg     unsigned char 
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;  data_out        1    4[BANK0 ] unsigned char 
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  1    wreg      char 
 11479 ;; Registers used:
 11480 ;;		wreg, status,2, status,0
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11487 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11488 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11489 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11490 ;;Total ram usage:        2 bytes
 11491 ;; Hardware stack levels used:    1
 11492 ;; Hardware stack levels required when called:    6
 11493 ;; This function calls:
 11494 ;;		Nothing
 11495 ;; This function is called by:
 11496 ;;		_tsttc
 11497 ;; This function uses a non-reentrant model
 11498 ;;
 11499                           
 11500                           
 11501                           ;psect for function _WriteI2C
 11502  06B9                     _WriteI2C:	
 11503                           
 11504                           ;incstack = 0
 11505                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 11506                           ;WriteI2C@data_out stored from wreg
 11507  06B9  0020               	movlb	0	; select bank0
 11508  06BA  00A4               	movwf	WriteI2C@data_out
 11509  06BB                     l6983:	
 11510                           
 11511                           ;I2C/i2c.c: 88: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 89: {;I2C/i2c.
      +                          c: 90:   SSP1BUF = data_out;
 11512  06BB  0824               	movf	WriteI2C@data_out,w
 11513  06BC  0023               	movlb	3	; select bank3
 11514  06BD  008C               	movwf	12	;volatile
 11515  06BE                     l6985:	
 11516                           
 11517                           ;I2C/i2c.c: 91:   if ( SSP1CON1bits.WCOL )
 11518  06BE  1F90               	btfss	16,7	;volatile
 11519  06BF  2EC1               	goto	u4301
 11520  06C0  2EC2               	goto	u4300
 11521  06C1                     u4301:	
 11522  06C1  2EC3               	goto	l6991
 11523  06C2                     u4300:	
 11524  06C2  2F12               	goto	l1636
 11525  06C3                     l6991:	
 11526                           
 11527                           ;I2C/i2c.c: 94:   {;I2C/i2c.c: 95:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 11528  06C3  300F               	movlw	15
 11529  06C4  0510               	andwf	16,w	;volatile
 11530  06C5  0020               	movlb	0	; select bank0
 11531  06C6  00A3               	movwf	??_WriteI2C
 11532  06C7  3008               	movlw	8
 11533  06C8  0623               	xorwf	??_WriteI2C,w
 11534  06C9  1903               	btfsc	3,2
 11535  06CA  2ECC               	goto	u4311
 11536  06CB  2ECD               	goto	u4310
 11537  06CC                     u4311:	
 11538  06CC  2EE6               	goto	l7003
 11539  06CD                     u4310:	
 11540  06CD                     l6993:	
 11541  06CD  300F               	movlw	15
 11542  06CE  0023               	movlb	3	; select bank3
 11543  06CF  0510               	andwf	16,w	;volatile
 11544  06D0  0020               	movlb	0	; select bank0
 11545  06D1  00A3               	movwf	??_WriteI2C
 11546  06D2  300B               	movlw	11
 11547  06D3  0623               	xorwf	??_WriteI2C,w
 11548  06D4  1903               	btfsc	3,2
 11549  06D5  2ED7               	goto	u4321
 11550  06D6  2ED8               	goto	u4320
 11551  06D7                     u4321:	
 11552  06D7  2EE6               	goto	l7003
 11553  06D8                     u4320:	
 11554  06D8                     l6995:	
 11555                           
 11556                           ;I2C/i2c.c: 96:  {;I2C/i2c.c: 97:        SSP1CON1bits.CKP = 1;
 11557  06D8  0023               	movlb	3	; select bank3
 11558  06D9  1610               	bsf	16,4	;volatile
 11559  06DA                     l1639:	
 11560                           ;I2C/i2c.c: 98:        while ( !PIR3bits.SSP1IF );
 11561                           
 11562  06DA  002E               	movlb	14	; select bank14
 11563  06DB  1C0F               	btfss	15,0	;volatile
 11564  06DC  2EDE               	goto	u4331
 11565  06DD  2EDF               	goto	u4330
 11566  06DE                     u4331:	
 11567  06DE  2EDA               	goto	l1639
 11568  06DF                     u4330:	
 11569  06DF                     l1641:	
 11570                           
 11571                           ;I2C/i2c.c: 100:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 11572  06DF  0023               	movlb	3	; select bank3
 11573  06E0  190F               	btfsc	15,2	;volatile
 11574  06E1  2EE3               	goto	u4341
 11575  06E2  2EE4               	goto	u4340
 11576  06E3                     u4341:	
 11577  06E3  2F12               	goto	l1636
 11578  06E4                     u4340:	
 11579  06E4                     l6997:	
 11580  06E4  080F               	movf	15,w	;volatile
 11581  06E5  2F12               	goto	l1636
 11582  06E6                     l7003:	
 11583  06E6  300F               	movlw	15
 11584  06E7  0023               	movlb	3	; select bank3
 11585  06E8  0510               	andwf	16,w	;volatile
 11586  06E9  0020               	movlb	0	; select bank0
 11587  06EA  00A3               	movwf	??_WriteI2C
 11588  06EB  3008               	movlw	8
 11589  06EC  0623               	xorwf	??_WriteI2C,w
 11590  06ED  1903               	btfsc	3,2
 11591  06EE  2EF0               	goto	u4351
 11592  06EF  2EF1               	goto	u4350
 11593  06F0                     u4351:	
 11594  06F0  2EFC               	goto	l1648
 11595  06F1                     u4350:	
 11596  06F1                     l7005:	
 11597  06F1  300F               	movlw	15
 11598  06F2  0023               	movlb	3	; select bank3
 11599  06F3  0510               	andwf	16,w	;volatile
 11600  06F4  0020               	movlb	0	; select bank0
 11601  06F5  00A3               	movwf	??_WriteI2C
 11602  06F6  300B               	movlw	11
 11603  06F7  0623               	xorwf	??_WriteI2C,w
 11604  06F8  1D03               	btfss	3,2
 11605  06F9  2EFB               	goto	u4361
 11606  06FA  2EFC               	goto	u4360
 11607  06FB                     u4361:	
 11608  06FB  2F12               	goto	l1636
 11609  06FC                     u4360:	
 11610  06FC                     l1648:	
 11611  06FC  0023               	movlb	3	; select bank3
 11612  06FD  180F               	btfsc	15,0	;volatile
 11613  06FE  2F00               	goto	u4371
 11614  06FF  2F01               	goto	u4370
 11615  0700                     u4371:	
 11616  0700  2EFC               	goto	l1648
 11617  0701                     u4370:	
 11618  0701                     l7007:	
 11619  0701  0023               	movlb	3	; select bank3
 11620  0702  0C0F               	rrf	15,w	;volatile
 11621  0703  0C89               	rrf	9,f
 11622  0704  3901               	andlw	1
 11623  0705  0020               	movlb	0	; select bank0
 11624  0706  00A3               	movwf	??_WriteI2C
 11625  0707  0023               	movlb	3	; select bank3
 11626  0708  0811               	movf	17,w	;volatile
 11627  0709  391F               	andlw	31
 11628  070A  0020               	movlb	0	; select bank0
 11629  070B  0423               	iorwf	??_WriteI2C,w
 11630  070C  1D03               	btfss	3,2
 11631  070D  2F0F               	goto	u4381
 11632  070E  2F10               	goto	u4380
 11633  070F                     u4381:	
 11634  070F  2F01               	goto	l7007
 11635  0710                     u4380:	
 11636  0710                     l1653:	
 11637                           
 11638                           ;I2C/i2c.c: 113:      if ( SSP1CON2bits.ACKSTAT )
 11639  0710  0023               	movlb	3	; select bank3
 11640  0711  0811               	movf	17,w	;volatile
 11641  0712                     l1636:	
 11642  0712  0008               	return
 11643  0713                     __end_of_WriteI2C:	
 11644                           
 11645                           	psect	text3
 11646  0B8E                     __ptext3:	
 11647 ;; *************** function _ReadI2C *****************
 11648 ;; Defined at:
 11649 ;;		line 73 in file "I2C/i2c.c"
 11650 ;; Parameters:    Size  Location     Type
 11651 ;;		None
 11652 ;; Auto vars:     Size  Location     Type
 11653 ;;		None
 11654 ;; Return value:  Size  Location     Type
 11655 ;;                  1    wreg      unsigned char 
 11656 ;; Registers used:
 11657 ;;		wreg, status,2, status,0
 11658 ;; Tracked objects:
 11659 ;;		On entry : 0/0
 11660 ;;		On exit  : 0/0
 11661 ;;		Unchanged: 0/0
 11662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11665 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11666 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11667 ;;Total ram usage:        1 bytes
 11668 ;; Hardware stack levels used:    1
 11669 ;; Hardware stack levels required when called:    6
 11670 ;; This function calls:
 11671 ;;		Nothing
 11672 ;; This function is called by:
 11673 ;;		_tsttc
 11674 ;; This function uses a non-reentrant model
 11675 ;;
 11676                           
 11677                           
 11678                           ;psect for function _ReadI2C
 11679  0B8E                     _ReadI2C:	
 11680  0B8E                     l7013:	
 11681                           ;incstack = 0
 11682                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 11683                           
 11684                           
 11685                           ;I2C/i2c.c: 75: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 11686  0B8E  300F               	movlw	15
 11687  0B8F  0023               	movlb	3	; select bank3
 11688  0B90  0510               	andwf	16,w	;volatile
 11689  0B91  0020               	movlb	0	; select bank0
 11690  0B92  00A3               	movwf	??_ReadI2C
 11691  0B93  3008               	movlw	8
 11692  0B94  0623               	xorwf	??_ReadI2C,w
 11693  0B95  1903               	btfsc	3,2
 11694  0B96  2B98               	goto	u4391
 11695  0B97  2B99               	goto	u4390
 11696  0B98                     u4391:	
 11697  0B98  2BA4               	goto	l1628
 11698  0B99                     u4390:	
 11699  0B99                     l7015:	
 11700  0B99  300F               	movlw	15
 11701  0B9A  0023               	movlb	3	; select bank3
 11702  0B9B  0510               	andwf	16,w	;volatile
 11703  0B9C  0020               	movlb	0	; select bank0
 11704  0B9D  00A3               	movwf	??_ReadI2C
 11705  0B9E  300B               	movlw	11
 11706  0B9F  0623               	xorwf	??_ReadI2C,w
 11707  0BA0  1D03               	btfss	3,2
 11708  0BA1  2BA3               	goto	u4401
 11709  0BA2  2BA4               	goto	u4400
 11710  0BA3                     u4401:	
 11711  0BA3  2BA6               	goto	l1629
 11712  0BA4                     u4400:	
 11713  0BA4                     l1628:	
 11714                           
 11715                           ;I2C/i2c.c: 76:   SSP1CON2bits.RCEN = 1;
 11716  0BA4  0023               	movlb	3	; select bank3
 11717  0BA5  1591               	bsf	17,3	;volatile
 11718  0BA6                     l1629:	
 11719  0BA6  0023               	movlb	3	; select bank3
 11720  0BA7  1C0F               	btfss	15,0	;volatile
 11721  0BA8  2BAA               	goto	u4411
 11722  0BA9  2BAB               	goto	u4410
 11723  0BAA                     u4411:	
 11724  0BAA  2BA6               	goto	l1629
 11725  0BAB                     u4410:	
 11726  0BAB                     l7017:	
 11727                           
 11728                           ;I2C/i2c.c: 78:   return ( SSP1BUF );
 11729  0BAB  080C               	movf	12,w	;volatile
 11730  0BAC                     l1632:	
 11731  0BAC  0008               	return
 11732  0BAD                     __end_of_ReadI2C:	
 11733                           
 11734                           	psect	text4
 11735  0384                     __ptext4:	
 11736 ;; *************** function _recoverData *****************
 11737 ;; Defined at:
 11738 ;;		line 11 in file "eeprom_rw.c"
 11739 ;; Parameters:    Size  Location     Type
 11740 ;;		None
 11741 ;; Auto vars:     Size  Location     Type
 11742 ;;		None
 11743 ;; Return value:  Size  Location     Type
 11744 ;;                  1    wreg      void 
 11745 ;; Registers used:
 11746 ;;		wreg, status,2, status,0, pclath, cstack
 11747 ;; Tracked objects:
 11748 ;;		On entry : 0/0
 11749 ;;		On exit  : 0/0
 11750 ;;		Unchanged: 0/0
 11751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11754 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11755 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11756 ;;Total ram usage:        1 bytes
 11757 ;; Hardware stack levels used:    1
 11758 ;; Hardware stack levels required when called:    9
 11759 ;; This function calls:
 11760 ;;		_DATAEE_ReadByte
 11761 ;;		_DATAEE_WriteByte
 11762 ;;		_cksum
 11763 ;;		_cksum_w
 11764 ;;		_reset_recv
 11765 ;; This function is called by:
 11766 ;;		_main
 11767 ;; This function uses a non-reentrant model
 11768 ;;
 11769                           
 11770                           
 11771                           ;psect for function _recoverData
 11772  0384                     _recoverData:	
 11773  0384                     l7103:	
 11774                           ;incstack = 0
 11775                           ; Regs used in _recoverData: [wreg+status,2+status,0+pclath+cstack]
 11776                           
 11777                           
 11778                           ;eeprom_rw.c: 13:     if(DATAEE_ReadByte(0xF0FF - 10) == 0xAB){
 11779  0384  30F5               	movlw	245
 11780  0385  0020               	movlb	0	; select bank0
 11781  0386  00A3               	movwf	DATAEE_ReadByte@bAdd
 11782  0387  30F0               	movlw	240
 11783  0388  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11784  0389  3189  21AF  3183   	fcall	_DATAEE_ReadByte
 11785  038C  3AAB               	xorlw	171
 11786  038D  1D03               	skipz
 11787  038E  2B90               	goto	u4461
 11788  038F  2B91               	goto	u4460
 11789  0390                     u4461:	
 11790  0390  2BE5               	goto	l7109
 11791  0391                     u4460:	
 11792  0391                     l7105:	
 11793                           
 11794                           ;eeprom_rw.c: 14:         if(DATAEE_ReadByte(0xF0FF) == cksum()){
 11795  0391  318B  23ED  3183   	fcall	_cksum
 11796  0394  0020               	movlb	0	; select bank0
 11797  0395  00AF               	movwf	??_recoverData
 11798  0396  30FF               	movlw	255
 11799  0397  00A3               	movwf	DATAEE_ReadByte@bAdd
 11800  0398  30F0               	movlw	240
 11801  0399  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11802  039A  3189  21AF  3183   	fcall	_DATAEE_ReadByte
 11803  039D  0020               	movlb	0	; select bank0
 11804  039E  062F               	xorwf	??_recoverData,w
 11805  039F  1D03               	skipz
 11806  03A0  2BA2               	goto	u4471
 11807  03A1  2BA3               	goto	u4470
 11808  03A2                     u4471:	
 11809  03A2  2BE5               	goto	l7109
 11810  03A3                     u4470:	
 11811  03A3                     l7107:	
 11812                           
 11813                           ;eeprom_rw.c: 15:             clkh = DATAEE_ReadByte(0xF0FF - 10 + 1);
 11814  03A3  30F6               	movlw	246
 11815  03A4  00A3               	movwf	DATAEE_ReadByte@bAdd
 11816  03A5  30F0               	movlw	240
 11817  03A6  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11818  03A7  3189  21AF  3183   	fcall	_DATAEE_ReadByte
 11819  03AA  0020               	movlb	0	; select bank0
 11820  03AB  00AF               	movwf	??_recoverData
 11821  03AC  082F               	movf	??_recoverData,w
 11822  03AD  00DC               	movwf	_clkh	;volatile
 11823                           
 11824                           ;eeprom_rw.c: 16:             clkm = DATAEE_ReadByte(0xF0FF - 10 + 2);
 11825  03AE  30F7               	movlw	247
 11826  03AF  00A3               	movwf	DATAEE_ReadByte@bAdd
 11827  03B0  30F0               	movlw	240
 11828  03B1  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11829  03B2  3189  21AF  3183   	fcall	_DATAEE_ReadByte
 11830  03B5  0020               	movlb	0	; select bank0
 11831  03B6  00AF               	movwf	??_recoverData
 11832  03B7  082F               	movf	??_recoverData,w
 11833  03B8  00DB               	movwf	_clkm	;volatile
 11834                           
 11835                           ;eeprom_rw.c: 17:             nreg = DATAEE_ReadByte(0xF0FF - 10 + 3);
 11836  03B9  30F8               	movlw	248
 11837  03BA  00A3               	movwf	DATAEE_ReadByte@bAdd
 11838  03BB  30F0               	movlw	240
 11839  03BC  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11840  03BD  3189  21AF  3183   	fcall	_DATAEE_ReadByte
 11841  03C0  0020               	movlb	0	; select bank0
 11842  03C1  00AF               	movwf	??_recoverData
 11843  03C2  082F               	movf	??_recoverData,w
 11844  03C3  00E7               	movwf	_nreg
 11845                           
 11846                           ;eeprom_rw.c: 18:             nreg_pt = DATAEE_ReadByte(0xF0FF - 10 + 4);
 11847  03C4  30F9               	movlw	249
 11848  03C5  00A3               	movwf	DATAEE_ReadByte@bAdd
 11849  03C6  30F0               	movlw	240
 11850  03C7  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11851  03C8  3189  21AF  3183   	fcall	_DATAEE_ReadByte
 11852  03CB  0020               	movlb	0	; select bank0
 11853  03CC  00AF               	movwf	??_recoverData
 11854  03CD  082F               	movf	??_recoverData,w
 11855  03CE  00DD               	movwf	_nreg_pt
 11856                           
 11857                           ;eeprom_rw.c: 19:             pmon = DATAEE_ReadByte(0xF0FF - 10 + 5);
 11858  03CF  30FA               	movlw	250
 11859  03D0  00A3               	movwf	DATAEE_ReadByte@bAdd
 11860  03D1  30F0               	movlw	240
 11861  03D2  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11862  03D3  3189  21AF  3183   	fcall	_DATAEE_ReadByte
 11863  03D6  0020               	movlb	0	; select bank0
 11864  03D7  00AF               	movwf	??_recoverData
 11865  03D8  082F               	movf	??_recoverData,w
 11866  03D9  00E6               	movwf	_pmon
 11867                           
 11868                           ;eeprom_rw.c: 20:             tala = DATAEE_ReadByte(0xF0FF - 10 + 6);
 11869  03DA  30FB               	movlw	251
 11870  03DB  00A3               	movwf	DATAEE_ReadByte@bAdd
 11871  03DC  30F0               	movlw	240
 11872  03DD  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 11873  03DE  3189  21AF  3183   	fcall	_DATAEE_ReadByte
 11874  03E1  0020               	movlb	0	; select bank0
 11875  03E2  00AF               	movwf	??_recoverData
 11876  03E3  082F               	movf	??_recoverData,w
 11877  03E4  00E5               	movwf	_tala
 11878  03E5                     l7109:	
 11879                           
 11880                           ;eeprom_rw.c: 24:     reset_recv();
 11881  03E5  318B  2353  3183   	fcall	_reset_recv
 11882  03E8                     l7111:	
 11883                           
 11884                           ;eeprom_rw.c: 27:     DATAEE_WriteByte(0xF0FF - 10, 0xAB);
 11885  03E8  30F5               	movlw	245
 11886  03E9  0020               	movlb	0	; select bank0
 11887  03EA  00A9               	movwf	DATAEE_WriteByte@bAdd
 11888  03EB  30F0               	movlw	240
 11889  03EC  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11890  03ED  30AB               	movlw	171
 11891  03EE  00AF               	movwf	??_recoverData
 11892  03EF  082F               	movf	??_recoverData,w
 11893  03F0  00AB               	movwf	DATAEE_WriteByte@bData
 11894  03F1  318C  240D  3183   	fcall	_DATAEE_WriteByte
 11895  03F4                     l7113:	
 11896                           
 11897                           ;eeprom_rw.c: 28:     DATAEE_WriteByte(0xF0FF - 10 + 3, nreg);
 11898  03F4  30F8               	movlw	248
 11899  03F5  0020               	movlb	0	; select bank0
 11900  03F6  00A9               	movwf	DATAEE_WriteByte@bAdd
 11901  03F7  30F0               	movlw	240
 11902  03F8  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11903  03F9  0867               	movf	_nreg,w
 11904  03FA  00AF               	movwf	??_recoverData
 11905  03FB  082F               	movf	??_recoverData,w
 11906  03FC  00AB               	movwf	DATAEE_WriteByte@bData
 11907  03FD  318C  240D  3183   	fcall	_DATAEE_WriteByte
 11908  0400                     l7115:	
 11909                           
 11910                           ;eeprom_rw.c: 29:     DATAEE_WriteByte(0xF0FF - 10 + 5, pmon);
 11911  0400  30FA               	movlw	250
 11912  0401  0020               	movlb	0	; select bank0
 11913  0402  00A9               	movwf	DATAEE_WriteByte@bAdd
 11914  0403  30F0               	movlw	240
 11915  0404  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11916  0405  0866               	movf	_pmon,w
 11917  0406  00AF               	movwf	??_recoverData
 11918  0407  082F               	movf	??_recoverData,w
 11919  0408  00AB               	movwf	DATAEE_WriteByte@bData
 11920  0409  318C  240D  3183   	fcall	_DATAEE_WriteByte
 11921  040C                     l7117:	
 11922                           
 11923                           ;eeprom_rw.c: 30:     DATAEE_WriteByte(0xF0FF - 10 + 6, tala);
 11924  040C  30FB               	movlw	251
 11925  040D  0020               	movlb	0	; select bank0
 11926  040E  00A9               	movwf	DATAEE_WriteByte@bAdd
 11927  040F  30F0               	movlw	240
 11928  0410  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11929  0411  0865               	movf	_tala,w
 11930  0412  00AF               	movwf	??_recoverData
 11931  0413  082F               	movf	??_recoverData,w
 11932  0414  00AB               	movwf	DATAEE_WriteByte@bData
 11933  0415  318C  240D  3183   	fcall	_DATAEE_WriteByte
 11934  0418                     l7119:	
 11935                           
 11936                           ;eeprom_rw.c: 31:     cksum_w();
 11937  0418  3189  21CE  3183   	fcall	_cksum_w
 11938  041B                     l1686:	
 11939  041B  0008               	return
 11940  041C                     __end_of_recoverData:	
 11941                           
 11942                           	psect	text5
 11943  0B53                     __ptext5:	
 11944 ;; *************** function _reset_recv *****************
 11945 ;; Defined at:
 11946 ;;		line 75 in file "eeprom_rw.c"
 11947 ;; Parameters:    Size  Location     Type
 11948 ;;		None
 11949 ;; Auto vars:     Size  Location     Type
 11950 ;;  i               2   13[BANK0 ] unsigned int 
 11951 ;; Return value:  Size  Location     Type
 11952 ;;                  1    wreg      void 
 11953 ;; Registers used:
 11954 ;;		wreg, status,2, status,0, pclath, cstack
 11955 ;; Tracked objects:
 11956 ;;		On entry : 0/0
 11957 ;;		On exit  : 0/0
 11958 ;;		Unchanged: 0/0
 11959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11961 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11963 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11964 ;;Total ram usage:        2 bytes
 11965 ;; Hardware stack levels used:    1
 11966 ;; Hardware stack levels required when called:    7
 11967 ;; This function calls:
 11968 ;;		_DATAEE_WriteByte
 11969 ;; This function is called by:
 11970 ;;		_recoverData
 11971 ;;		_recover
 11972 ;; This function uses a non-reentrant model
 11973 ;;
 11974                           
 11975                           
 11976                           ;psect for function _reset_recv
 11977  0B53                     _reset_recv:	
 11978  0B53                     l6973:	
 11979                           ;incstack = 0
 11980                           ; Regs used in _reset_recv: [wreg+status,2+status,0+pclath+cstack]
 11981                           
 11982                           
 11983                           ;eeprom_rw.c: 77:     for(unsigned int i = 0xF0FF - 10; i <= 0xF0FF; i ++)
 11984  0B53  30F5               	movlw	245
 11985  0B54  0020               	movlb	0	; select bank0
 11986  0B55  00AD               	movwf	reset_recv@i
 11987  0B56  30F0               	movlw	240
 11988  0B57  00AE               	movwf	reset_recv@i+1
 11989  0B58                     l6977:	
 11990                           
 11991                           ;eeprom_rw.c: 78:         DATAEE_WriteByte(i, 0);
 11992  0B58  082E               	movf	reset_recv@i+1,w
 11993  0B59  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 11994  0B5A  082D               	movf	reset_recv@i,w
 11995  0B5B  00A9               	movwf	DATAEE_WriteByte@bAdd
 11996  0B5C  01AB               	clrf	DATAEE_WriteByte@bData
 11997  0B5D  318C  240D  318B   	fcall	_DATAEE_WriteByte
 11998  0B60                     l6979:	
 11999  0B60  3001               	movlw	1
 12000  0B61  0020               	movlb	0	; select bank0
 12001  0B62  07AD               	addwf	reset_recv@i,f
 12002  0B63  3000               	movlw	0
 12003  0B64  3DAE               	addwfc	reset_recv@i+1,f
 12004  0B65                     l6981:	
 12005  0B65  30F1               	movlw	241
 12006  0B66  022E               	subwf	reset_recv@i+1,w
 12007  0B67  3000               	movlw	0
 12008  0B68  1903               	skipnz
 12009  0B69  022D               	subwf	reset_recv@i,w
 12010  0B6A  1C03               	skipc
 12011  0B6B  2B6D               	goto	u4291
 12012  0B6C  2B6E               	goto	u4290
 12013  0B6D                     u4291:	
 12014  0B6D  2B58               	goto	l6977
 12015  0B6E                     u4290:	
 12016  0B6E                     l1713:	
 12017  0B6E  0008               	return
 12018  0B6F                     __end_of_reset_recv:	
 12019                           
 12020                           	psect	text6
 12021  09CE                     __ptext6:	
 12022 ;; *************** function _cksum_w *****************
 12023 ;; Defined at:
 12024 ;;		line 61 in file "eeprom_rw.c"
 12025 ;; Parameters:    Size  Location     Type
 12026 ;;		None
 12027 ;; Auto vars:     Size  Location     Type
 12028 ;;		None
 12029 ;; Return value:  Size  Location     Type
 12030 ;;                  1    wreg      void 
 12031 ;; Registers used:
 12032 ;;		wreg, status,2, status,0, pclath, cstack
 12033 ;; Tracked objects:
 12034 ;;		On entry : 0/0
 12035 ;;		On exit  : 0/0
 12036 ;;		Unchanged: 0/0
 12037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12040 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12041 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12042 ;;Total ram usage:        1 bytes
 12043 ;; Hardware stack levels used:    1
 12044 ;; Hardware stack levels required when called:    8
 12045 ;; This function calls:
 12046 ;;		_DATAEE_WriteByte
 12047 ;;		_cksum
 12048 ;; This function is called by:
 12049 ;;		_main
 12050 ;;		_recoverData
 12051 ;;		_recover
 12052 ;; This function uses a non-reentrant model
 12053 ;;
 12054                           
 12055                           
 12056                           ;psect for function _cksum_w
 12057  09CE                     _cksum_w:	
 12058  09CE                     l6893:	
 12059                           ;incstack = 0
 12060                           ; Regs used in _cksum_w: [wreg+status,2+status,0+pclath+cstack]
 12061                           
 12062                           
 12063                           ;eeprom_rw.c: 63:     DATAEE_WriteByte(0xF0FF, cksum());
 12064  09CE  30FF               	movlw	255
 12065  09CF  0020               	movlb	0	; select bank0
 12066  09D0  00A9               	movwf	DATAEE_WriteByte@bAdd
 12067  09D1  30F0               	movlw	240
 12068  09D2  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12069  09D3  318B  23ED  3189   	fcall	_cksum
 12070  09D6  0020               	movlb	0	; select bank0
 12071  09D7  00AD               	movwf	??_cksum_w
 12072  09D8  082D               	movf	??_cksum_w,w
 12073  09D9  00AB               	movwf	DATAEE_WriteByte@bData
 12074  09DA  318C  240D  3189   	fcall	_DATAEE_WriteByte
 12075  09DD                     l1703:	
 12076  09DD  0008               	return
 12077  09DE                     __end_of_cksum_w:	
 12078                           
 12079                           	psect	text7
 12080  0BED                     __ptext7:	
 12081 ;; *************** function _cksum *****************
 12082 ;; Defined at:
 12083 ;;		line 66 in file "eeprom_rw.c"
 12084 ;; Parameters:    Size  Location     Type
 12085 ;;		None
 12086 ;; Auto vars:     Size  Location     Type
 12087 ;;  i               2    7[BANK0 ] unsigned int 
 12088 ;;  res             1    6[BANK0 ] unsigned char 
 12089 ;; Return value:  Size  Location     Type
 12090 ;;                  1    wreg      unsigned char 
 12091 ;; Registers used:
 12092 ;;		wreg, status,2, status,0, pclath, cstack
 12093 ;; Tracked objects:
 12094 ;;		On entry : 0/0
 12095 ;;		On exit  : 0/0
 12096 ;;		Unchanged: 0/0
 12097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12099 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12100 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12101 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12102 ;;Total ram usage:        4 bytes
 12103 ;; Hardware stack levels used:    1
 12104 ;; Hardware stack levels required when called:    7
 12105 ;; This function calls:
 12106 ;;		_DATAEE_ReadByte
 12107 ;; This function is called by:
 12108 ;;		_recoverData
 12109 ;;		_cksum_w
 12110 ;;		_recover
 12111 ;; This function uses a non-reentrant model
 12112 ;;
 12113                           
 12114                           
 12115                           ;psect for function _cksum
 12116  0BED                     _cksum:	
 12117  0BED                     l6737:	
 12118                           ;incstack = 0
 12119                           ; Regs used in _cksum: [wreg+status,2+status,0+pclath+cstack]
 12120                           
 12121                           
 12122                           ;eeprom_rw.c: 68:     unsigned char res = 0;
 12123  0BED  0020               	movlb	0	; select bank0
 12124  0BEE  01A6               	clrf	cksum@res
 12125  0BEF                     l6739:	
 12126                           
 12127                           ;eeprom_rw.c: 69:     for(unsigned int i = 0xF0FF - 10; i < 0xF0FF; i ++) {
 12128  0BEF  30F5               	movlw	245
 12129  0BF0  00A7               	movwf	cksum@i
 12130  0BF1  30F0               	movlw	240
 12131  0BF2  00A8               	movwf	cksum@i+1
 12132  0BF3                     l6745:	
 12133                           
 12134                           ;eeprom_rw.c: 70:         res += DATAEE_ReadByte(i);
 12135  0BF3  0828               	movf	cksum@i+1,w
 12136  0BF4  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12137  0BF5  0827               	movf	cksum@i,w
 12138  0BF6  00A3               	movwf	DATAEE_ReadByte@bAdd
 12139  0BF7  3189  21AF  318B   	fcall	_DATAEE_ReadByte
 12140  0BFA  0020               	movlb	0	; select bank0
 12141  0BFB  00A5               	movwf	??_cksum
 12142  0BFC  0825               	movf	??_cksum,w
 12143  0BFD  07A6               	addwf	cksum@res,f
 12144  0BFE                     l6747:	
 12145                           
 12146                           ;eeprom_rw.c: 71:     }
 12147  0BFE  3001               	movlw	1
 12148  0BFF  07A7               	addwf	cksum@i,f
 12149  0C00  3000               	movlw	0
 12150  0C01  3DA8               	addwfc	cksum@i+1,f
 12151  0C02                     l6749:	
 12152  0C02  30F0               	movlw	240
 12153  0C03  0228               	subwf	cksum@i+1,w
 12154  0C04  30FF               	movlw	255
 12155  0C05  1903               	skipnz
 12156  0C06  0227               	subwf	cksum@i,w
 12157  0C07  1C03               	skipc
 12158  0C08  2C0A               	goto	u4231
 12159  0C09  2C0B               	goto	u4230
 12160  0C0A                     u4231:	
 12161  0C0A  2BF3               	goto	l6745
 12162  0C0B                     u4230:	
 12163  0C0B                     l6751:	
 12164                           
 12165                           ;eeprom_rw.c: 72:     return res;
 12166  0C0B  0826               	movf	cksum@res,w
 12167  0C0C                     l1708:	
 12168  0C0C  0008               	return
 12169  0C0D                     __end_of_cksum:	
 12170                           
 12171                           	psect	text8
 12172  0DA5                     __ptext8:	
 12173 ;; *************** function _read_ring *****************
 12174 ;; Defined at:
 12175 ;;		line 43 in file "eeprom_rw.c"
 12176 ;; Parameters:    Size  Location     Type
 12177 ;;  nreg_pt         1    wreg     unsigned char 
 12178 ;;  nreg            1    7[BANK0 ] unsigned char 
 12179 ;;  nreg_init       1    8[BANK0 ] unsigned char 
 12180 ;;  index           1    9[BANK0 ] unsigned char 
 12181 ;;  subindex        1   10[BANK0 ] unsigned char 
 12182 ;; Auto vars:     Size  Location     Type
 12183 ;;  nreg_pt         1   14[BANK0 ] unsigned char 
 12184 ;;  absindex        1   15[BANK0 ] unsigned char 
 12185 ;;  i               1   13[BANK0 ] unsigned char 
 12186 ;; Return value:  Size  Location     Type
 12187 ;;                  1    wreg      unsigned char 
 12188 ;; Registers used:
 12189 ;;		wreg, status,2, status,0, pclath, cstack
 12190 ;; Tracked objects:
 12191 ;;		On entry : 0/0
 12192 ;;		On exit  : 0/0
 12193 ;;		Unchanged: 0/0
 12194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12195 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12196 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12197 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12198 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12199 ;;Total ram usage:        9 bytes
 12200 ;; Hardware stack levels used:    1
 12201 ;; Hardware stack levels required when called:    7
 12202 ;; This function calls:
 12203 ;;		_DATAEE_ReadByte
 12204 ;;		___bmul
 12205 ;; This function is called by:
 12206 ;;		_main
 12207 ;; This function uses a non-reentrant model
 12208 ;;
 12209                           
 12210                           
 12211                           ;psect for function _read_ring
 12212  0DA5                     _read_ring:	
 12213                           
 12214                           ;incstack = 0
 12215                           ; Regs used in _read_ring: [wreg+status,2+status,0+pclath+cstack]
 12216                           ;read_ring@nreg_pt stored from wreg
 12217  0DA5  0020               	movlb	0	; select bank0
 12218  0DA6  00AE               	movwf	read_ring@nreg_pt
 12219  0DA7                     l7185:	
 12220  0DA7                     l7187:	
 12221                           
 12222                           ;eeprom_rw.c: 48:     if(index <= nreg && nreg_init) {
 12223  0DA7  0829               	movf	read_ring@index,w
 12224  0DA8  0227               	subwf	read_ring@nreg,w
 12225  0DA9  1C03               	skipc
 12226  0DAA  2DAC               	goto	u4741
 12227  0DAB  2DAD               	goto	u4740
 12228  0DAC                     u4741:	
 12229  0DAC  2DD7               	goto	l7199
 12230  0DAD                     u4740:	
 12231  0DAD                     l7189:	
 12232  0DAD  0828               	movf	read_ring@nreg_init,w
 12233  0DAE  1903               	btfsc	3,2
 12234  0DAF  2DB1               	goto	u4751
 12235  0DB0  2DB2               	goto	u4750
 12236  0DB1                     u4751:	
 12237  0DB1  2DD7               	goto	l7199
 12238  0DB2                     u4750:	
 12239  0DB2                     l7191:	
 12240                           
 12241                           ;eeprom_rw.c: 49:         absindex = 5 * index + subindex;
 12242  0DB2  3005               	movlw	5
 12243  0DB3  00AB               	movwf	??_read_ring
 12244  0DB4  082B               	movf	??_read_ring,w
 12245  0DB5  00A3               	movwf	___bmul@multiplicand
 12246  0DB6  0829               	movf	read_ring@index,w
 12247  0DB7  318A  2274  318D   	fcall	___bmul
 12248  0DBA  0020               	movlb	0	; select bank0
 12249  0DBB  072A               	addwf	read_ring@subindex,w
 12250  0DBC  00AC               	movwf	??_read_ring+1
 12251  0DBD  082C               	movf	??_read_ring+1,w
 12252  0DBE  00AF               	movwf	read_ring@absindex
 12253  0DBF                     l7193:	
 12254                           
 12255                           ;eeprom_rw.c: 50:         if(absindex <= nreg_pt)
 12256  0DBF  082F               	movf	read_ring@absindex,w
 12257  0DC0  022E               	subwf	read_ring@nreg_pt,w
 12258  0DC1  1C03               	skipc
 12259  0DC2  2DC4               	goto	u4761
 12260  0DC3  2DC5               	goto	u4760
 12261  0DC4                     u4761:	
 12262  0DC4  2DCC               	goto	l7197
 12263  0DC5                     u4760:	
 12264  0DC5                     l7195:	
 12265                           
 12266                           ;eeprom_rw.c: 51:             i = nreg_pt - 5 + absindex;
 12267  0DC5  082E               	movf	read_ring@nreg_pt,w
 12268  0DC6  072F               	addwf	read_ring@absindex,w
 12269  0DC7  3EFB               	addlw	251
 12270  0DC8  00AB               	movwf	??_read_ring
 12271  0DC9  082B               	movf	??_read_ring,w
 12272  0DCA  00AD               	movwf	read_ring@i
 12273  0DCB  2DD9               	goto	l7203
 12274  0DCC                     l7197:	
 12275                           
 12276                           ;eeprom_rw.c: 53:             i = nreg - (nreg_pt - 5 + absindex);
 12277  0DCC  032E               	decf	read_ring@nreg_pt,w
 12278  0DCD  3AFF               	xorlw	255
 12279  0DCE  00AB               	movwf	??_read_ring
 12280  0DCF  082F               	movf	read_ring@absindex,w
 12281  0DD0  022B               	subwf	??_read_ring,w
 12282  0DD1  0727               	addwf	read_ring@nreg,w
 12283  0DD2  3E05               	addlw	5
 12284  0DD3  00AC               	movwf	??_read_ring+1
 12285  0DD4  082C               	movf	??_read_ring+1,w
 12286  0DD5  00AD               	movwf	read_ring@i
 12287  0DD6  2DD9               	goto	l7203
 12288  0DD7                     l7199:	
 12289                           
 12290                           ;eeprom_rw.c: 56:         return 0;
 12291  0DD7  3000               	movlw	0
 12292  0DD8  2DE3               	goto	l1700
 12293  0DD9                     l7203:	
 12294                           
 12295                           ;eeprom_rw.c: 58:     return DATAEE_ReadByte(0xF000 + i);
 12296  0DD9  082D               	movf	read_ring@i,w
 12297  0DDA  3E00               	addlw	0
 12298  0DDB  00A3               	movwf	DATAEE_ReadByte@bAdd
 12299  0DDC  30F0               	movlw	240
 12300  0DDD  1803               	skipnc
 12301  0DDE  30F1               	movlw	241
 12302  0DDF  00A4               	movwf	DATAEE_ReadByte@bAdd+1
 12303  0DE0  3189  21AF  318D   	fcall	_DATAEE_ReadByte
 12304  0DE3                     l1700:	
 12305  0DE3  0008               	return
 12306  0DE4                     __end_of_read_ring:	
 12307                           
 12308                           	psect	text9
 12309  0A74                     __ptext9:	
 12310 ;; *************** function ___bmul *****************
 12311 ;; Defined at:
 12312 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8.c"
 12313 ;; Parameters:    Size  Location     Type
 12314 ;;  multiplier      1    wreg     unsigned char 
 12315 ;;  multiplicand    1    3[BANK0 ] unsigned char 
 12316 ;; Auto vars:     Size  Location     Type
 12317 ;;  multiplier      1    6[BANK0 ] unsigned char 
 12318 ;;  product         1    5[BANK0 ] unsigned char 
 12319 ;; Return value:  Size  Location     Type
 12320 ;;                  1    wreg      unsigned char 
 12321 ;; Registers used:
 12322 ;;		wreg, status,2, status,0
 12323 ;; Tracked objects:
 12324 ;;		On entry : 0/0
 12325 ;;		On exit  : 0/0
 12326 ;;		Unchanged: 0/0
 12327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12328 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12329 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12330 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12331 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12332 ;;Total ram usage:        4 bytes
 12333 ;; Hardware stack levels used:    1
 12334 ;; Hardware stack levels required when called:    6
 12335 ;; This function calls:
 12336 ;;		Nothing
 12337 ;; This function is called by:
 12338 ;;		_read_ring
 12339 ;; This function uses a non-reentrant model
 12340 ;;
 12341                           
 12342                           
 12343                           ;psect for function ___bmul
 12344  0A74                     ___bmul:	
 12345                           
 12346                           ;incstack = 0
 12347                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12348                           ;___bmul@multiplier stored from wreg
 12349  0A74  0020               	movlb	0	; select bank0
 12350  0A75  00A6               	movwf	___bmul@multiplier
 12351  0A76                     l7021:	
 12352  0A76  01A5               	clrf	___bmul@product
 12353  0A77                     l7023:	
 12354  0A77  1C26               	btfss	___bmul@multiplier,0
 12355  0A78  2A7A               	goto	u4421
 12356  0A79  2A7B               	goto	u4420
 12357  0A7A                     u4421:	
 12358  0A7A  2A7F               	goto	l7027
 12359  0A7B                     u4420:	
 12360  0A7B                     l7025:	
 12361  0A7B  0823               	movf	___bmul@multiplicand,w
 12362  0A7C  00A4               	movwf	??___bmul
 12363  0A7D  0824               	movf	??___bmul,w
 12364  0A7E  07A5               	addwf	___bmul@product,f
 12365  0A7F                     l7027:	
 12366  0A7F  1003               	clrc
 12367  0A80  0DA3               	rlf	___bmul@multiplicand,f
 12368  0A81                     l7029:	
 12369  0A81  1003               	clrc
 12370  0A82  0CA6               	rrf	___bmul@multiplier,f
 12371  0A83  0826               	movf	___bmul@multiplier,w
 12372  0A84  1D03               	btfss	3,2
 12373  0A85  2A87               	goto	u4431
 12374  0A86  2A88               	goto	u4430
 12375  0A87                     u4431:	
 12376  0A87  2A77               	goto	l7023
 12377  0A88                     u4430:	
 12378  0A88                     l7031:	
 12379  0A88  0825               	movf	___bmul@product,w
 12380  0A89                     l1891:	
 12381  0A89  0008               	return
 12382  0A8A                     __end_of___bmul:	
 12383                           
 12384                           	psect	text10
 12385  09AF                     __ptext10:	
 12386 ;; *************** function _DATAEE_ReadByte *****************
 12387 ;; Defined at:
 12388 ;;		line 202 in file "mcc_generated_files/memory.c"
 12389 ;; Parameters:    Size  Location     Type
 12390 ;;  bAdd            2    3[BANK0 ] unsigned short 
 12391 ;; Auto vars:     Size  Location     Type
 12392 ;;		None
 12393 ;; Return value:  Size  Location     Type
 12394 ;;                  1    wreg      unsigned char 
 12395 ;; Registers used:
 12396 ;;		wreg, status,2
 12397 ;; Tracked objects:
 12398 ;;		On entry : 0/0
 12399 ;;		On exit  : 0/0
 12400 ;;		Unchanged: 0/0
 12401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12402 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12405 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12406 ;;Total ram usage:        2 bytes
 12407 ;; Hardware stack levels used:    1
 12408 ;; Hardware stack levels required when called:    6
 12409 ;; This function calls:
 12410 ;;		Nothing
 12411 ;; This function is called by:
 12412 ;;		_recoverData
 12413 ;;		_read_ring
 12414 ;;		_cksum
 12415 ;;		_recover
 12416 ;; This function uses a non-reentrant model
 12417 ;;
 12418                           
 12419                           
 12420                           ;psect for function _DATAEE_ReadByte
 12421  09AF                     _DATAEE_ReadByte:	
 12422  09AF                     l6515:	
 12423                           ;incstack = 0
 12424                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 12425                           
 12426                           
 12427                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 12428  09AF  0020               	movlb	0	; select bank0
 12429  09B0  0824               	movf	DATAEE_ReadByte@bAdd+1,w
 12430  09B1  0030               	movlb	16	; select bank16
 12431  09B2  009B               	movwf	27	;volatile
 12432  09B3                     l6517:	
 12433                           
 12434                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 12435  09B3  0020               	movlb	0	; select bank0
 12436  09B4  0823               	movf	DATAEE_ReadByte@bAdd,w
 12437  09B5  0030               	movlb	16	; select bank16
 12438  09B6  009A               	movwf	26	;volatile
 12439  09B7                     l6519:	
 12440                           
 12441                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 12442  09B7  171E               	bsf	30,6	;volsfr
 12443  09B8                     l6521:	
 12444                           
 12445                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 12446  09B8  141E               	bsf	30,0	;volsfr
 12447  09B9                     l6523:	
 12448                           
 12449                           ;mcc_generated_files/memory.c: 208:     __nop();
 12450  09B9  0000               	nop
 12451  09BA                     l6525:	
 12452                           
 12453                           ;mcc_generated_files/memory.c: 209:     __nop();
 12454  09BA  0000               	nop
 12455  09BB                     l6527:	
 12456                           
 12457                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 12458  09BB  0030               	movlb	16	; select bank16
 12459  09BC  081C               	movf	28,w	;volatile
 12460  09BD                     l963:	
 12461  09BD  0008               	return
 12462  09BE                     __end_of_DATAEE_ReadByte:	
 12463                           
 12464                           	psect	text11
 12465  0DE4                     __ptext11:	
 12466 ;; *************** function _push_ring *****************
 12467 ;; Defined at:
 12468 ;;		line 34 in file "eeprom_rw.c"
 12469 ;; Parameters:    Size  Location     Type
 12470 ;;  nreg_pt         1    wreg     PTR unsigned char 
 12471 ;;		 -> nreg_pt(1), 
 12472 ;;  nreg            1   13[BANK0 ] unsigned char 
 12473 ;;  nreg_init       1   14[BANK0 ] PTR unsigned char 
 12474 ;;		 -> nreg_init(1), 
 12475 ;;  ring_byte       1   15[BANK0 ] PTR unsigned char 
 12476 ;;		 -> ring_byte(5), 
 12477 ;; Auto vars:     Size  Location     Type
 12478 ;;  nreg_pt         1   19[BANK0 ] PTR unsigned char 
 12479 ;;		 -> nreg_pt(1), 
 12480 ;;  i               1   18[BANK0 ] unsigned char 
 12481 ;; Return value:  Size  Location     Type
 12482 ;;                  1    wreg      void 
 12483 ;; Registers used:
 12484 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12485 ;; Tracked objects:
 12486 ;;		On entry : 0/0
 12487 ;;		On exit  : 0/0
 12488 ;;		Unchanged: 0/0
 12489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12490 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12491 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12492 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12493 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12494 ;;Total ram usage:        7 bytes
 12495 ;; Hardware stack levels used:    1
 12496 ;; Hardware stack levels required when called:    7
 12497 ;; This function calls:
 12498 ;;		_DATAEE_WriteByte
 12499 ;; This function is called by:
 12500 ;;		_main
 12501 ;; This function uses a non-reentrant model
 12502 ;;
 12503                           
 12504                           
 12505                           ;psect for function _push_ring
 12506  0DE4                     _push_ring:	
 12507                           
 12508                           ;incstack = 0
 12509                           ; Regs used in _push_ring: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12510                           ;push_ring@nreg_pt stored from wreg
 12511  0DE4  0020               	movlb	0	; select bank0
 12512  0DE5  00B3               	movwf	push_ring@nreg_pt
 12513  0DE6                     l7207:	
 12514                           
 12515                           ;eeprom_rw.c: 34: void push_ring(unsigned char* nreg_pt, unsigned char nreg, unsigned ch
      +                          ar* nreg_init, unsigned char* ring_byte);eeprom_rw.c: 35: { if(!(*nreg_init)) (*nreg_ini
      +                          t) = 1;
 12516  0DE6  082E               	movf	push_ring@nreg_init,w
 12517  0DE7  0086               	movwf	6
 12518  0DE8  0187               	clrf	7
 12519  0DE9  0801               	movf	1,w
 12520  0DEA  1D03               	btfss	3,2
 12521  0DEB  2DED               	goto	u4771
 12522  0DEC  2DEE               	goto	u4770
 12523  0DED                     u4771:	
 12524  0DED  2DF3               	goto	l7211
 12525  0DEE                     u4770:	
 12526  0DEE                     l7209:	
 12527  0DEE  082E               	movf	push_ring@nreg_init,w
 12528  0DEF  0086               	movwf	6
 12529  0DF0  0187               	clrf	7
 12530  0DF1  0181               	clrf	1
 12531  0DF2  0A81               	incf	1,f
 12532  0DF3                     l7211:	
 12533                           
 12534                           ;eeprom_rw.c: 36:     for(unsigned char i = 0; i < 5; i++) {
 12535  0DF3  01B2               	clrf	push_ring@i
 12536  0DF4                     l7217:	
 12537                           
 12538                           ;eeprom_rw.c: 37:         if((*nreg_pt) >= nreg) (*nreg_pt) = 0;
 12539  0DF4  0833               	movf	push_ring@nreg_pt,w
 12540  0DF5  0086               	movwf	6
 12541  0DF6  0187               	clrf	7
 12542  0DF7  082D               	movf	push_ring@nreg,w
 12543  0DF8  0201               	subwf	1,w
 12544  0DF9  1C03               	skipc
 12545  0DFA  2DFC               	goto	u4781
 12546  0DFB  2DFD               	goto	u4780
 12547  0DFC                     u4781:	
 12548  0DFC  2E01               	goto	l7221
 12549  0DFD                     u4780:	
 12550  0DFD                     l7219:	
 12551  0DFD  0833               	movf	push_ring@nreg_pt,w
 12552  0DFE  0086               	movwf	6
 12553  0DFF  0187               	clrf	7
 12554  0E00  0181               	clrf	1
 12555  0E01                     l7221:	
 12556                           
 12557                           ;eeprom_rw.c: 38:         DATAEE_WriteByte(0xF000 + (*nreg_pt), ring_byte[i]);
 12558  0E01  0833               	movf	push_ring@nreg_pt,w
 12559  0E02  0086               	movwf	6
 12560  0E03  0187               	clrf	7
 12561  0E04  0801               	movf	1,w
 12562  0E05  3E00               	addlw	0
 12563  0E06  00A9               	movwf	DATAEE_WriteByte@bAdd
 12564  0E07  30F0               	movlw	240
 12565  0E08  1803               	skipnc
 12566  0E09  30F1               	movlw	241
 12567  0E0A  00AA               	movwf	DATAEE_WriteByte@bAdd+1
 12568  0E0B  0832               	movf	push_ring@i,w
 12569  0E0C  072F               	addwf	push_ring@ring_byte,w
 12570  0E0D  00B0               	movwf	??_push_ring
 12571  0E0E  0830               	movf	??_push_ring,w
 12572  0E0F  0086               	movwf	6
 12573  0E10  0187               	clrf	7
 12574  0E11  0801               	movf	1,w
 12575  0E12  00B1               	movwf	??_push_ring+1
 12576  0E13  0831               	movf	??_push_ring+1,w
 12577  0E14  00AB               	movwf	DATAEE_WriteByte@bData
 12578  0E15  318C  240D  318D   	fcall	_DATAEE_WriteByte
 12579  0E18                     l7223:	
 12580                           
 12581                           ;eeprom_rw.c: 39:         (*nreg_pt)++;
 12582  0E18  3001               	movlw	1
 12583  0E19  0020               	movlb	0	; select bank0
 12584  0E1A  00B0               	movwf	??_push_ring
 12585  0E1B  0833               	movf	push_ring@nreg_pt,w
 12586  0E1C  0086               	movwf	6
 12587  0E1D  0187               	clrf	7
 12588  0E1E  0830               	movf	??_push_ring,w
 12589  0E1F  0781               	addwf	1,f
 12590  0E20                     l7225:	
 12591                           
 12592                           ;eeprom_rw.c: 40:     }
 12593  0E20  3001               	movlw	1
 12594  0E21  00B0               	movwf	??_push_ring
 12595  0E22  0830               	movf	??_push_ring,w
 12596  0E23  07B2               	addwf	push_ring@i,f
 12597  0E24                     l7227:	
 12598  0E24  3005               	movlw	5
 12599  0E25  0232               	subwf	push_ring@i,w
 12600  0E26  1C03               	skipc
 12601  0E27  2E29               	goto	u4791
 12602  0E28  2E2A               	goto	u4790
 12603  0E29                     u4791:	
 12604  0E29  2DF4               	goto	l7217
 12605  0E2A                     u4790:	
 12606  0E2A                     l1693:	
 12607  0E2A  0008               	return
 12608  0E2B                     __end_of_push_ring:	
 12609                           
 12610                           	psect	text12
 12611  0C0D                     __ptext12:	
 12612 ;; *************** function _DATAEE_WriteByte *****************
 12613 ;; Defined at:
 12614 ;;		line 180 in file "mcc_generated_files/memory.c"
 12615 ;; Parameters:    Size  Location     Type
 12616 ;;  bAdd            2    9[BANK0 ] unsigned short 
 12617 ;;  bData           1   11[BANK0 ] unsigned char 
 12618 ;; Auto vars:     Size  Location     Type
 12619 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 12620 ;; Return value:  Size  Location     Type
 12621 ;;                  1    wreg      void 
 12622 ;; Registers used:
 12623 ;;		wreg, status,2, status,0
 12624 ;; Tracked objects:
 12625 ;;		On entry : 0/0
 12626 ;;		On exit  : 0/0
 12627 ;;		Unchanged: 0/0
 12628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12629 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12630 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12632 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12633 ;;Total ram usage:        4 bytes
 12634 ;; Hardware stack levels used:    1
 12635 ;; Hardware stack levels required when called:    6
 12636 ;; This function calls:
 12637 ;;		Nothing
 12638 ;; This function is called by:
 12639 ;;		_main
 12640 ;;		_recoverData
 12641 ;;		_push_ring
 12642 ;;		_cksum_w
 12643 ;;		_reset_recv
 12644 ;;		_recover
 12645 ;; This function uses a non-reentrant model
 12646 ;;
 12647                           
 12648                           
 12649                           ;psect for function _DATAEE_WriteByte
 12650  0C0D                     _DATAEE_WriteByte:	
 12651  0C0D                     l6615:	
 12652                           ;incstack = 0
 12653                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 12654                           
 12655                           
 12656                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 12657  0C0D  3000               	movlw	0
 12658  0C0E  1B8B               	btfsc	11,7	;volatile
 12659  0C0F  3001               	movlw	1
 12660  0C10  0020               	movlb	0	; select bank0
 12661  0C11  00AC               	movwf	DATAEE_WriteByte@GIEBitValue
 12662                           
 12663                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 12664  0C12  082A               	movf	DATAEE_WriteByte@bAdd+1,w
 12665  0C13  0030               	movlb	16	; select bank16
 12666  0C14  009B               	movwf	27	;volatile
 12667  0C15                     l6617:	
 12668                           
 12669                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 12670  0C15  0020               	movlb	0	; select bank0
 12671  0C16  0829               	movf	DATAEE_WriteByte@bAdd,w
 12672  0C17  0030               	movlb	16	; select bank16
 12673  0C18  009A               	movwf	26	;volatile
 12674  0C19                     l6619:	
 12675                           
 12676                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 12677  0C19  0020               	movlb	0	; select bank0
 12678  0C1A  082B               	movf	DATAEE_WriteByte@bData,w
 12679  0C1B  0030               	movlb	16	; select bank16
 12680  0C1C  009C               	movwf	28	;volatile
 12681  0C1D                     l6621:	
 12682                           
 12683                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 12684  0C1D  171E               	bsf	30,6	;volsfr
 12685  0C1E                     l6623:	
 12686                           
 12687                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 12688  0C1E  151E               	bsf	30,2	;volsfr
 12689  0C1F                     l6625:	
 12690                           
 12691                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 12692  0C1F  138B               	bcf	11,7	;volatile
 12693  0C20                     l6627:	
 12694                           
 12695                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 12696  0C20  3055               	movlw	85
 12697  0C21  009F               	movwf	31	;volsfr
 12698  0C22                     l6629:	
 12699                           
 12700                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 12701  0C22  30AA               	movlw	170
 12702  0C23  009F               	movwf	31	;volsfr
 12703  0C24                     l6631:	
 12704                           
 12705                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 12706  0C24  149E               	bsf	30,1	;volsfr
 12707  0C25                     l957:	
 12708                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 12709                           
 12710                           
 12711                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 12712  0C25  189E               	btfsc	30,1	;volsfr
 12713  0C26  2C28               	goto	u4151
 12714  0C27  2C29               	goto	u4150
 12715  0C28                     u4151:	
 12716  0C28  2C25               	goto	l957
 12717  0C29                     u4150:	
 12718  0C29                     l959:	
 12719                           
 12720                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 12721  0C29  111E               	bcf	30,2	;volsfr
 12722  0C2A                     l6633:	
 12723                           
 12724                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 12725  0C2A  0020               	movlb	0	; select bank0
 12726  0C2B  0C2C               	rrf	DATAEE_WriteByte@GIEBitValue,w
 12727  0C2C  1C03               	skipc
 12728  0C2D  138B               	bcf	11,7	;volatile
 12729  0C2E  1803               	skipnc
 12730  0C2F  178B               	bsf	11,7	;volatile
 12731  0C30                     l960:	
 12732  0C30  0008               	return
 12733  0C31                     __end_of_DATAEE_WriteByte:	
 12734                           
 12735                           	psect	text13
 12736  0950                     __ptext13:	
 12737 ;; *************** function _i2c1_driver_open *****************
 12738 ;; Defined at:
 12739 ;;		line 84 in file "mcc_generated_files/i2c1_driver.c"
 12740 ;; Parameters:    Size  Location     Type
 12741 ;;		None
 12742 ;; Auto vars:     Size  Location     Type
 12743 ;;		None
 12744 ;; Return value:  Size  Location     Type
 12745 ;;		None               void
 12746 ;; Registers used:
 12747 ;;		wreg, status,2
 12748 ;; Tracked objects:
 12749 ;;		On entry : 0/0
 12750 ;;		On exit  : 0/0
 12751 ;;		Unchanged: 0/0
 12752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12757 ;;Total ram usage:        0 bytes
 12758 ;; Hardware stack levels used:    1
 12759 ;; Hardware stack levels required when called:    6
 12760 ;; This function calls:
 12761 ;;		Nothing
 12762 ;; This function is called by:
 12763 ;;		_main
 12764 ;;		_i2c_open
 12765 ;;		_I2C_Initialize
 12766 ;; This function uses a non-reentrant model
 12767 ;;
 12768                           
 12769                           
 12770                           ;psect for function _i2c1_driver_open
 12771  0950                     _i2c1_driver_open:	
 12772  0950                     l7071:	
 12773                           ;incstack = 0
 12774                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 12775                           
 12776  0950  0023               	movlb	3	; select bank3
 12777  0951  1A90               	btfsc	16,5	;volatile
 12778  0952  2954               	goto	u4451
 12779  0953  2955               	goto	u4450
 12780  0954                     u4451:	
 12781  0954  295B               	goto	l594
 12782  0955                     u4450:	
 12783  0955                     l7073:	
 12784  0955  018F               	clrf	15	;volatile
 12785  0956                     l7075:	
 12786  0956  3028               	movlw	40
 12787  0957  0090               	movwf	16	;volatile
 12788  0958                     l7077:	
 12789  0958  0191               	clrf	17	;volatile
 12790  0959  3003               	movlw	3
 12791  095A  008D               	movwf	13	;volatile
 12792  095B                     l594:	
 12793  095B  0008               	return
 12794  095C                     __end_of_i2c1_driver_open:	
 12795                           
 12796                           	psect	text14
 12797  041C                     __ptext14:	
 12798 ;; *************** function _config_routine *****************
 12799 ;; Defined at:
 12800 ;;		line 329 in file "main.c"
 12801 ;; Parameters:    Size  Location     Type
 12802 ;;		None
 12803 ;; Auto vars:     Size  Location     Type
 12804 ;;  select_mode     2   26[BANK0 ] unsigned int 
 12805 ;; Return value:  Size  Location     Type
 12806 ;;                  1    wreg      void 
 12807 ;; Registers used:
 12808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12809 ;; Tracked objects:
 12810 ;;		On entry : 0/0
 12811 ;;		On exit  : 0/0
 12812 ;;		Unchanged: 0/0
 12813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12815 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12816 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12817 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12818 ;;Total ram usage:        3 bytes
 12819 ;; Hardware stack levels used:    1
 12820 ;; Hardware stack levels required when called:   10
 12821 ;; This function calls:
 12822 ;;		_all_LED
 12823 ;;		_checkDebounceSW1
 12824 ;;		_checkDebounceSW2
 12825 ;;		_mod1_LED
 12826 ;;		_mod2_LED
 12827 ;;		_mod3_LED
 12828 ;;		_mod4_LED
 12829 ;;		_mode_select_LED
 12830 ;;		_selectSubfield
 12831 ;; This function is called by:
 12832 ;;		_main
 12833 ;; This function uses a non-reentrant model
 12834 ;;
 12835                           
 12836                           
 12837                           ;psect for function _config_routine
 12838  041C                     _config_routine:	
 12839  041C                     l7229:	
 12840                           ;incstack = 0
 12841                           ; Regs used in _config_routine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12842                           
 12843                           
 12844                           ;main.c: 331:     unsigned int select_mode =0;
 12845  041C  0020               	movlb	0	; select bank0
 12846  041D  01BA               	clrf	config_routine@select_mode
 12847  041E  01BB               	clrf	config_routine@select_mode+1
 12848  041F                     l7231:	
 12849                           
 12850                           ;main.c: 332:     last_ms = clkms;
 12851  041F  087D               	movf	_clkms,w	;volatile
 12852  0420  00B9               	movwf	??_config_routine
 12853  0421  0839               	movf	??_config_routine,w
 12854  0422  00D9               	movwf	_last_ms
 12855  0423                     l7233:	
 12856                           
 12857                           ;main.c: 333:     last_ms2 = clkms;
 12858  0423  087D               	movf	_clkms,w	;volatile
 12859  0424  00B9               	movwf	??_config_routine
 12860  0425  0839               	movf	??_config_routine,w
 12861  0426  00D8               	movwf	_last_ms2
 12862  0427                     l7235:	
 12863                           
 12864                           ;main.c: 336:         if(mode_field_subfield[0] == -1 && select_mode == 0){
 12865  0427  0A5F               	incf	_mode_field_subfield,w
 12866  0428  1D03               	skipz
 12867  0429  2C2E               	goto	u4801
 12868  042A  0A60               	incf	_mode_field_subfield+1,w
 12869  042B  1D03               	btfss	3,2
 12870  042C  2C2E               	goto	u4801
 12871  042D  2C2F               	goto	u4800
 12872  042E                     u4801:	
 12873  042E  2C38               	goto	l7241
 12874  042F                     u4800:	
 12875  042F                     l7237:	
 12876  042F  083A               	movf	config_routine@select_mode,w
 12877  0430  043B               	iorwf	config_routine@select_mode+1,w
 12878  0431  1D03               	btfss	3,2
 12879  0432  2C34               	goto	u4811
 12880  0433  2C35               	goto	u4810
 12881  0434                     u4811:	
 12882  0434  2C38               	goto	l7241
 12883  0435                     u4810:	
 12884  0435                     l7239:	
 12885                           
 12886                           ;main.c: 337:             all_LED();
 12887  0435  3186  265E  3184   	fcall	_all_LED
 12888  0438                     l7241:	
 12889                           
 12890                           ;main.c: 340:         if(!PORTBbits.RB4){
 12891  0438  0020               	movlb	0	; select bank0
 12892  0439  1A0D               	btfsc	13,4	;volatile
 12893  043A  2C3C               	goto	u4821
 12894  043B  2C3D               	goto	u4820
 12895  043C                     u4821:	
 12896  043C  2C78               	goto	l7263
 12897  043D                     u4820:	
 12898  043D                     l7243:	
 12899                           
 12900                           ;main.c: 341:             if(checkDebounceSW1()){
 12901  043D  3187  2713  3184   	fcall	_checkDebounceSW1
 12902  0440  3A00               	xorlw	0
 12903  0441  1903               	skipnz
 12904  0442  2C44               	goto	u4831
 12905  0443  2C45               	goto	u4830
 12906  0444                     u4831:	
 12907  0444  2C73               	goto	l7261
 12908  0445                     u4830:	
 12909  0445                     l7245:	
 12910                           
 12911                           ;main.c: 343:                 select_mode +=1;
 12912  0445  3001               	movlw	1
 12913  0446  0020               	movlb	0	; select bank0
 12914  0447  07BA               	addwf	config_routine@select_mode,f
 12915  0448  3000               	movlw	0
 12916  0449  3DBB               	addwfc	config_routine@select_mode+1,f
 12917                           
 12918                           ;main.c: 345:                 switch(select_mode){
 12919  044A  2C60               	goto	l7259
 12920  044B                     l7247:	
 12921  044B  3189  2123  3184   	fcall	_mod1_LED
 12922  044E  2C73               	goto	l7261
 12923  044F                     l7249:	
 12924  044F  3189  2119  3184   	fcall	_mod2_LED
 12925  0452  2C73               	goto	l7261
 12926  0453                     l7251:	
 12927  0453  3189  212E  3184   	fcall	_mod3_LED
 12928  0456  2C73               	goto	l7261
 12929  0457                     l7253:	
 12930  0457  3189  2139  3184   	fcall	_mod4_LED
 12931  045A  2C73               	goto	l7261
 12932  045B                     l7255:	
 12933  045B  01BA               	clrf	config_routine@select_mode
 12934  045C  01BB               	clrf	config_routine@select_mode+1
 12935  045D  01D4               	clrf	_config_mode	;volatile
 12936  045E  01D3               	clrf	_alarm	;volatile
 12937                           
 12938                           ;main.c: 351:                     break;
 12939  045F  2C73               	goto	l7261
 12940  0460                     l7259:	
 12941                           
 12942                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12943                           ; Switch size 1, requested type "simple"
 12944                           ; Number of cases is 1, Range of values is 0 to 0
 12945                           ; switch strategies available:
 12946                           ; Name         Instructions Cycles
 12947                           ; simple_byte            4     3 (average)
 12948                           ; direct_byte            8     6 (fixed)
 12949                           ; jumptable            260     6 (fixed)
 12950                           ;	Chosen strategy is simple_byte
 12951  0460  083B               	movf	config_routine@select_mode+1,w
 12952  0461  3A00               	xorlw	0	; case 0
 12953  0462  1903               	skipnz
 12954  0463  2C65               	goto	l7789
 12955  0464  2C5B               	goto	l7255
 12956  0465                     l7789:	
 12957                           
 12958                           ; Switch size 1, requested type "simple"
 12959                           ; Number of cases is 4, Range of values is 1 to 4
 12960                           ; switch strategies available:
 12961                           ; Name         Instructions Cycles
 12962                           ; simple_byte           13     7 (average)
 12963                           ; direct_byte           17     9 (fixed)
 12964                           ; jumptable            263     9 (fixed)
 12965                           ;	Chosen strategy is simple_byte
 12966  0465  083A               	movf	config_routine@select_mode,w
 12967  0466  3A01               	xorlw	1	; case 1
 12968  0467  1903               	skipnz
 12969  0468  2C4B               	goto	l7247
 12970  0469  3A03               	xorlw	3	; case 2
 12971  046A  1903               	skipnz
 12972  046B  2C4F               	goto	l7249
 12973  046C  3A01               	xorlw	1	; case 3
 12974  046D  1903               	skipnz
 12975  046E  2C53               	goto	l7251
 12976  046F  3A07               	xorlw	7	; case 4
 12977  0470  1903               	skipnz
 12978  0471  2C57               	goto	l7253
 12979  0472  2C5B               	goto	l7255
 12980  0473                     l7261:	
 12981                           
 12982                           ;main.c: 356:             last_ms = clkms;
 12983  0473  087D               	movf	_clkms,w	;volatile
 12984  0474  0020               	movlb	0	; select bank0
 12985  0475  00B9               	movwf	??_config_routine
 12986  0476  0839               	movf	??_config_routine,w
 12987  0477  00D9               	movwf	_last_ms
 12988  0478                     l7263:	
 12989                           
 12990                           ;main.c: 360:         if(!PORTCbits.RC5){
 12991  0478  1A8E               	btfsc	14,5	;volatile
 12992  0479  2C7B               	goto	u4841
 12993  047A  2C7C               	goto	u4840
 12994  047B                     u4841:	
 12995  047B  2C94               	goto	l7275
 12996  047C                     u4840:	
 12997  047C                     l7265:	
 12998                           
 12999                           ;main.c: 361:             if(checkDebounceSW2()){
 13000  047C  318E  26BE  3184   	fcall	_checkDebounceSW2
 13001  047F  3A00               	xorlw	0
 13002  0480  1903               	skipnz
 13003  0481  2C83               	goto	u4851
 13004  0482  2C84               	goto	u4850
 13005  0483                     u4851:	
 13006  0483  2C8F               	goto	l7273
 13007  0484                     u4850:	
 13008  0484                     l7267:	
 13009                           
 13010                           ;main.c: 362:                 mode_field_subfield[0] = select_mode;
 13011  0484  0020               	movlb	0	; select bank0
 13012  0485  083B               	movf	config_routine@select_mode+1,w
 13013  0486  00E0               	movwf	_mode_field_subfield+1
 13014  0487  083A               	movf	config_routine@select_mode,w
 13015  0488  00DF               	movwf	_mode_field_subfield
 13016  0489                     l7269:	
 13017                           
 13018                           ;main.c: 363:                 mode_select_LED();
 13019  0489  318B  23AD  3184   	fcall	_mode_select_LED
 13020  048C                     l7271:	
 13021                           
 13022                           ;main.c: 366:                 selectSubfield();
 13023  048C  3185  2525  3184   	fcall	_selectSubfield
 13024  048F                     l7273:	
 13025                           
 13026                           ;main.c: 369:             last_ms2 = clkms;
 13027  048F  087D               	movf	_clkms,w	;volatile
 13028  0490  0020               	movlb	0	; select bank0
 13029  0491  00B9               	movwf	??_config_routine
 13030  0492  0839               	movf	??_config_routine,w
 13031  0493  00D8               	movwf	_last_ms2
 13032  0494                     l7275:	
 13033                           
 13034                           ;main.c: 372:         _delay((unsigned long)((2)*(1000000/4000.0)));
 13035  0494  30A6               	movlw	166
 13036  0495                     u5197:	
 13037  0495  0B89               	decfsz	9,f
 13038  0496  2C95               	goto	u5197
 13039  0497  3200               	nop2
 13040  0498                     l7277:	
 13041                           
 13042                           ;main.c: 374:     }while(config_mode == 1);
 13043  0498  0020               	movlb	0	; select bank0
 13044  0499  0354               	decf	_config_mode,w	;volatile
 13045  049A  1903               	btfsc	3,2
 13046  049B  2C9D               	goto	u4861
 13047  049C  2C9E               	goto	u4860
 13048  049D                     u4861:	
 13049  049D  2C27               	goto	l7235
 13050  049E                     u4860:	
 13051  049E                     l7279:	
 13052                           
 13053                           ;main.c: 376:     mode_field_subfield[0] = -1;
 13054  049E  30FF               	movlw	255
 13055  049F  00DF               	movwf	_mode_field_subfield
 13056  04A0  30FF               	movlw	255
 13057  04A1  00E0               	movwf	_mode_field_subfield+1
 13058                           
 13059                           ;main.c: 377:     mode_field_subfield[1] = -1;
 13060  04A2  30FF               	movlw	255
 13061  04A3  00E1               	movwf	_mode_field_subfield+2
 13062  04A4  30FF               	movlw	255
 13063  04A5  00E2               	movwf	_mode_field_subfield+3
 13064  04A6                     l1342:	
 13065  04A6  0008               	return
 13066  04A7                     __end_of_config_routine:	
 13067                           
 13068                           	psect	text15
 13069  0525                     __ptext15:	
 13070 ;; *************** function _selectSubfield *****************
 13071 ;; Defined at:
 13072 ;;		line 386 in file "main.c"
 13073 ;; Parameters:    Size  Location     Type
 13074 ;;		None
 13075 ;; Auto vars:     Size  Location     Type
 13076 ;;  subfield        2   23[BANK0 ] unsigned int 
 13077 ;; Return value:  Size  Location     Type
 13078 ;;                  1    wreg      void 
 13079 ;; Registers used:
 13080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13081 ;; Tracked objects:
 13082 ;;		On entry : 0/0
 13083 ;;		On exit  : 0/0
 13084 ;;		Unchanged: 0/0
 13085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13087 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13088 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13089 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13090 ;;Total ram usage:        4 bytes
 13091 ;; Hardware stack levels used:    1
 13092 ;; Hardware stack levels required when called:    9
 13093 ;; This function calls:
 13094 ;;		_checkDebounceSW1
 13095 ;;		_checkDebounceSW2
 13096 ;;		_getSubfieldInfo
 13097 ;;		_increment_subfield
 13098 ;;		_mod1_LED
 13099 ;;		_mod2_LED
 13100 ;;		_mod3_LED
 13101 ;;		_mod4_LED
 13102 ;; This function is called by:
 13103 ;;		_config_routine
 13104 ;; This function uses a non-reentrant model
 13105 ;;
 13106                           
 13107                           
 13108                           ;psect for function _selectSubfield
 13109  0525                     _selectSubfield:	
 13110  0525                     l6933:	
 13111                           ;incstack = 0
 13112                           ; Regs used in _selectSubfield: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13113                           
 13114                           
 13115                           ;main.c: 387:     unsigned int subfield = 1;
 13116  0525  3001               	movlw	1
 13117  0526  0020               	movlb	0	; select bank0
 13118  0527  00B7               	movwf	selectSubfield@subfield
 13119  0528  3000               	movlw	0
 13120  0529  00B8               	movwf	selectSubfield@subfield+1
 13121  052A                     l1346:	
 13122                           ;main.c: 393:     do{
 13123                           
 13124                           
 13125                           ;main.c: 394:         if(!PORTBbits.RB4){
 13126  052A  1A0D               	btfsc	13,4	;volatile
 13127  052B  2D2D               	goto	u4241
 13128  052C  2D2E               	goto	u4240
 13129  052D                     u4241:	
 13130  052D  2D51               	goto	l6951
 13131  052E                     u4240:	
 13132  052E                     l6937:	
 13133                           
 13134                           ;main.c: 395:             if(checkDebounceSW1()){
 13135  052E  3187  2713  3185   	fcall	_checkDebounceSW1
 13136  0531  3A00               	xorlw	0
 13137  0532  1903               	skipnz
 13138  0533  2D35               	goto	u4251
 13139  0534  2D36               	goto	u4250
 13140  0535                     u4251:	
 13141  0535  2D3B               	goto	l1348
 13142  0536                     u4250:	
 13143  0536                     l6939:	
 13144                           
 13145                           ;main.c: 396:                 subfield +=1;
 13146  0536  3001               	movlw	1
 13147  0537  0020               	movlb	0	; select bank0
 13148  0538  07B7               	addwf	selectSubfield@subfield,f
 13149  0539  3000               	movlw	0
 13150  053A  3DB8               	addwfc	selectSubfield@subfield+1,f
 13151  053B                     l1348:	
 13152                           ;main.c: 397:             }
 13153                           
 13154                           
 13155                           ;main.c: 398:             last_ms = clkms;
 13156  053B  087D               	movf	_clkms,w	;volatile
 13157  053C  0020               	movlb	0	; select bank0
 13158  053D  00B5               	movwf	??_selectSubfield
 13159  053E  0835               	movf	??_selectSubfield,w
 13160  053F  00D9               	movwf	_last_ms
 13161  0540  2D51               	goto	l6951
 13162  0541                     l6941:	
 13163  0541  3189  2123  3185   	fcall	_mod1_LED
 13164  0544  2D64               	goto	l1351
 13165  0545                     l6943:	
 13166  0545  3189  2119  3185   	fcall	_mod2_LED
 13167  0548  2D64               	goto	l1351
 13168  0549                     l6945:	
 13169  0549  3189  212E  3185   	fcall	_mod3_LED
 13170  054C  2D64               	goto	l1351
 13171  054D                     l6947:	
 13172  054D  3189  2139  3185   	fcall	_mod4_LED
 13173  0550  2D64               	goto	l1351
 13174  0551                     l6951:	
 13175                           
 13176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13177                           ; Switch size 1, requested type "simple"
 13178                           ; Number of cases is 1, Range of values is 0 to 0
 13179                           ; switch strategies available:
 13180                           ; Name         Instructions Cycles
 13181                           ; simple_byte            4     3 (average)
 13182                           ; direct_byte            8     6 (fixed)
 13183                           ; jumptable            260     6 (fixed)
 13184                           ;	Chosen strategy is simple_byte
 13185  0551  0838               	movf	selectSubfield@subfield+1,w
 13186  0552  3A00               	xorlw	0	; case 0
 13187  0553  1903               	skipnz
 13188  0554  2D56               	goto	l7791
 13189  0555  2D64               	goto	l1351
 13190  0556                     l7791:	
 13191                           
 13192                           ; Switch size 1, requested type "simple"
 13193                           ; Number of cases is 4, Range of values is 1 to 4
 13194                           ; switch strategies available:
 13195                           ; Name         Instructions Cycles
 13196                           ; simple_byte           13     7 (average)
 13197                           ; direct_byte           17     9 (fixed)
 13198                           ; jumptable            263     9 (fixed)
 13199                           ;	Chosen strategy is simple_byte
 13200  0556  0837               	movf	selectSubfield@subfield,w
 13201  0557  3A01               	xorlw	1	; case 1
 13202  0558  1903               	skipnz
 13203  0559  2D41               	goto	l6941
 13204  055A  3A03               	xorlw	3	; case 2
 13205  055B  1903               	skipnz
 13206  055C  2D45               	goto	l6943
 13207  055D  3A01               	xorlw	1	; case 3
 13208  055E  1903               	skipnz
 13209  055F  2D49               	goto	l6945
 13210  0560  3A07               	xorlw	7	; case 4
 13211  0561  1903               	skipnz
 13212  0562  2D4D               	goto	l6947
 13213  0563  2D64               	goto	l1351
 13214  0564                     l1351:	
 13215                           
 13216                           ;main.c: 412:         if(!PORTCbits.RC5){
 13217  0564  0020               	movlb	0	; select bank0
 13218  0565  1A8E               	btfsc	14,5	;volatile
 13219  0566  2D68               	goto	u4261
 13220  0567  2D69               	goto	u4260
 13221  0568                     u4261:	
 13222  0568  2D81               	goto	l6963
 13223  0569                     u4260:	
 13224  0569                     l6953:	
 13225                           
 13226                           ;main.c: 413:             if(checkDebounceSW2()){
 13227  0569  318E  26BE  3185   	fcall	_checkDebounceSW2
 13228  056C  3A00               	xorlw	0
 13229  056D  1903               	skipnz
 13230  056E  2D70               	goto	u4271
 13231  056F  2D71               	goto	u4270
 13232  0570                     u4271:	
 13233  0570  2D7C               	goto	l6961
 13234  0571                     u4270:	
 13235  0571                     l6955:	
 13236                           
 13237                           ;main.c: 414:                 mode_field_subfield[1] = subfield;
 13238  0571  0020               	movlb	0	; select bank0
 13239  0572  0838               	movf	selectSubfield@subfield+1,w
 13240  0573  00E2               	movwf	_mode_field_subfield+3
 13241  0574  0837               	movf	selectSubfield@subfield,w
 13242  0575  00E1               	movwf	_mode_field_subfield+2
 13243  0576                     l6957:	
 13244                           
 13245                           ;main.c: 415:                 getSubfieldInfo();
 13246  0576  3184  24A7  3185   	fcall	_getSubfieldInfo
 13247  0579                     l6959:	
 13248                           
 13249                           ;main.c: 416:                 increment_subfield();
 13250  0579  3185  259C  3185   	fcall	_increment_subfield
 13251  057C                     l6961:	
 13252                           
 13253                           ;main.c: 418:             last_ms2 = clkms;
 13254  057C  087D               	movf	_clkms,w	;volatile
 13255  057D  0020               	movlb	0	; select bank0
 13256  057E  00B5               	movwf	??_selectSubfield
 13257  057F  0835               	movf	??_selectSubfield,w
 13258  0580  00D8               	movwf	_last_ms2
 13259  0581                     l6963:	
 13260                           
 13261                           ;main.c: 421:         _delay((unsigned long)((2)*(1000000/4000.0)));
 13262  0581  30A6               	movlw	166
 13263  0582                     u5207:	
 13264  0582  0B89               	decfsz	9,f
 13265  0583  2D82               	goto	u5207
 13266  0584  3200               	nop2
 13267  0585                     l6965:	
 13268                           
 13269                           ;main.c: 423:     }while(subfield <= num_subfields[mode_field_subfield[0]]);
 13270  0585  0020               	movlb	0	; select bank0
 13271  0586  0860               	movf	_mode_field_subfield+1,w
 13272  0587  0085               	movwf	5
 13273  0588  085F               	movf	_mode_field_subfield,w
 13274  0589  0084               	movwf	4
 13275  058A  3020               	movlw	low (_num_subfields| (0+32768))
 13276  058B  0784               	addwf	4,f
 13277  058C  3090               	movlw	high (_num_subfields| (0+32768))
 13278  058D  3D85               	addwfc	5,f
 13279  058E  0800               	movf	0,w	;code access
 13280  058F  00B5               	movwf	??_selectSubfield
 13281  0590  01B6               	clrf	??_selectSubfield+1
 13282  0591  0838               	movf	selectSubfield@subfield+1,w
 13283  0592  0236               	subwf	??_selectSubfield+1,w
 13284  0593  1D03               	skipz
 13285  0594  2D97               	goto	u4285
 13286  0595  0837               	movf	selectSubfield@subfield,w
 13287  0596  0235               	subwf	??_selectSubfield,w
 13288  0597                     u4285:	
 13289  0597  1803               	skipnc
 13290  0598  2D9A               	goto	u4281
 13291  0599  2D9B               	goto	u4280
 13292  059A                     u4281:	
 13293  059A  2D2A               	goto	l1346
 13294  059B                     u4280:	
 13295  059B                     l1360:	
 13296  059B  0008               	return
 13297  059C                     __end_of_selectSubfield:	
 13298                           
 13299                           	psect	text16
 13300  0939                     __ptext16:	
 13301 ;; *************** function _mod4_LED *****************
 13302 ;; Defined at:
 13303 ;;		line 746 in file "main.c"
 13304 ;; Parameters:    Size  Location     Type
 13305 ;;		None
 13306 ;; Auto vars:     Size  Location     Type
 13307 ;;		None
 13308 ;; Return value:  Size  Location     Type
 13309 ;;                  1    wreg      void 
 13310 ;; Registers used:
 13311 ;;		wreg, status,2, status,0, pclath, cstack
 13312 ;; Tracked objects:
 13313 ;;		On entry : 0/0
 13314 ;;		On exit  : 0/0
 13315 ;;		Unchanged: 0/0
 13316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13321 ;;Total ram usage:        0 bytes
 13322 ;; Hardware stack levels used:    1
 13323 ;; Hardware stack levels required when called:    7
 13324 ;; This function calls:
 13325 ;;		_PWM6_LoadDutyValue
 13326 ;; This function is called by:
 13327 ;;		_config_routine
 13328 ;;		_selectSubfield
 13329 ;; This function uses a non-reentrant model
 13330 ;;
 13331                           
 13332                           
 13333                           ;psect for function _mod4_LED
 13334  0939                     _mod4_LED:	
 13335  0939                     l6655:	
 13336                           ;incstack = 0
 13337                           ; Regs used in _mod4_LED: [wreg+status,2+status,0+pclath+cstack]
 13338                           
 13339                           
 13340                           ;main.c: 747:     LATA = 0;
 13341  0939  0020               	movlb	0	; select bank0
 13342  093A  0196               	clrf	22	;volatile
 13343  093B                     l6657:	
 13344                           
 13345                           ;main.c: 748:     PWM6_LoadDutyValue(0);
 13346  093B  3000               	movlw	0
 13347  093C  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13348  093D  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13349  093E  318A  22EA  3189   	fcall	_PWM6_LoadDutyValue
 13350  0941                     l6659:	
 13351  0941  0020               	movlb	0	; select bank0
 13352  0942  1616               	bsf	22,4	;volatile
 13353  0943                     l1476:	
 13354  0943  0008               	return
 13355  0944                     __end_of_mod4_LED:	
 13356                           
 13357                           	psect	text17
 13358  092E                     __ptext17:	
 13359 ;; *************** function _mod3_LED *****************
 13360 ;; Defined at:
 13361 ;;		line 739 in file "main.c"
 13362 ;; Parameters:    Size  Location     Type
 13363 ;;		None
 13364 ;; Auto vars:     Size  Location     Type
 13365 ;;		None
 13366 ;; Return value:  Size  Location     Type
 13367 ;;                  1    wreg      void 
 13368 ;; Registers used:
 13369 ;;		wreg, status,2, status,0, pclath, cstack
 13370 ;; Tracked objects:
 13371 ;;		On entry : 0/0
 13372 ;;		On exit  : 0/0
 13373 ;;		Unchanged: 0/0
 13374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13379 ;;Total ram usage:        0 bytes
 13380 ;; Hardware stack levels used:    1
 13381 ;; Hardware stack levels required when called:    7
 13382 ;; This function calls:
 13383 ;;		_PWM6_LoadDutyValue
 13384 ;; This function is called by:
 13385 ;;		_config_routine
 13386 ;;		_selectSubfield
 13387 ;; This function uses a non-reentrant model
 13388 ;;
 13389                           
 13390                           
 13391                           ;psect for function _mod3_LED
 13392  092E                     _mod3_LED:	
 13393  092E                     l6649:	
 13394                           ;incstack = 0
 13395                           ; Regs used in _mod3_LED: [wreg+status,2+status,0+pclath+cstack]
 13396                           
 13397                           
 13398                           ;main.c: 740:     LATA = 0;
 13399  092E  0020               	movlb	0	; select bank0
 13400  092F  0196               	clrf	22	;volatile
 13401  0930                     l6651:	
 13402                           
 13403                           ;main.c: 741:     PWM6_LoadDutyValue(0);
 13404  0930  3000               	movlw	0
 13405  0931  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13406  0932  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13407  0933  318A  22EA  3189   	fcall	_PWM6_LoadDutyValue
 13408  0936                     l6653:	
 13409  0936  0020               	movlb	0	; select bank0
 13410  0937  1696               	bsf	22,5	;volatile
 13411  0938                     l1471:	
 13412  0938  0008               	return
 13413  0939                     __end_of_mod3_LED:	
 13414                           
 13415                           	psect	text18
 13416  0919                     __ptext18:	
 13417 ;; *************** function _mod2_LED *****************
 13418 ;; Defined at:
 13419 ;;		line 734 in file "main.c"
 13420 ;; Parameters:    Size  Location     Type
 13421 ;;		None
 13422 ;; Auto vars:     Size  Location     Type
 13423 ;;		None
 13424 ;; Return value:  Size  Location     Type
 13425 ;;                  1    wreg      void 
 13426 ;; Registers used:
 13427 ;;		wreg, status,2, status,0, pclath, cstack
 13428 ;; Tracked objects:
 13429 ;;		On entry : 0/0
 13430 ;;		On exit  : 0/0
 13431 ;;		Unchanged: 0/0
 13432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13437 ;;Total ram usage:        0 bytes
 13438 ;; Hardware stack levels used:    1
 13439 ;; Hardware stack levels required when called:    7
 13440 ;; This function calls:
 13441 ;;		_PWM6_LoadDutyValue
 13442 ;; This function is called by:
 13443 ;;		_config_routine
 13444 ;;		_selectSubfield
 13445 ;; This function uses a non-reentrant model
 13446 ;;
 13447                           
 13448                           
 13449                           ;psect for function _mod2_LED
 13450  0919                     _mod2_LED:	
 13451  0919                     l6645:	
 13452                           ;incstack = 0
 13453                           ; Regs used in _mod2_LED: [wreg+status,2+status,0+pclath+cstack]
 13454                           
 13455                           
 13456                           ;main.c: 735:     LATA = 0;
 13457  0919  0020               	movlb	0	; select bank0
 13458  091A  0196               	clrf	22	;volatile
 13459  091B                     l6647:	
 13460                           
 13461                           ;main.c: 736:     PWM6_LoadDutyValue(1023);
 13462  091B  30FF               	movlw	255
 13463  091C  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13464  091D  3003               	movlw	3
 13465  091E  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13466  091F  318A  22EA  3189   	fcall	_PWM6_LoadDutyValue
 13467  0922                     l1466:	
 13468  0922  0008               	return
 13469  0923                     __end_of_mod2_LED:	
 13470                           
 13471                           	psect	text19
 13472  0923                     __ptext19:	
 13473 ;; *************** function _mod1_LED *****************
 13474 ;; Defined at:
 13475 ;;		line 727 in file "main.c"
 13476 ;; Parameters:    Size  Location     Type
 13477 ;;		None
 13478 ;; Auto vars:     Size  Location     Type
 13479 ;;		None
 13480 ;; Return value:  Size  Location     Type
 13481 ;;                  1    wreg      void 
 13482 ;; Registers used:
 13483 ;;		wreg, status,2, status,0, pclath, cstack
 13484 ;; Tracked objects:
 13485 ;;		On entry : 0/0
 13486 ;;		On exit  : 0/0
 13487 ;;		Unchanged: 0/0
 13488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13493 ;;Total ram usage:        0 bytes
 13494 ;; Hardware stack levels used:    1
 13495 ;; Hardware stack levels required when called:    7
 13496 ;; This function calls:
 13497 ;;		_PWM6_LoadDutyValue
 13498 ;; This function is called by:
 13499 ;;		_config_routine
 13500 ;;		_selectSubfield
 13501 ;; This function uses a non-reentrant model
 13502 ;;
 13503                           
 13504                           
 13505                           ;psect for function _mod1_LED
 13506  0923                     _mod1_LED:	
 13507  0923                     l6639:	
 13508                           ;incstack = 0
 13509                           ; Regs used in _mod1_LED: [wreg+status,2+status,0+pclath+cstack]
 13510                           
 13511                           
 13512                           ;main.c: 728:     LATA = 0;
 13513  0923  0020               	movlb	0	; select bank0
 13514  0924  0196               	clrf	22	;volatile
 13515  0925                     l6641:	
 13516                           
 13517                           ;main.c: 729:     PWM6_LoadDutyValue(0);
 13518  0925  3000               	movlw	0
 13519  0926  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13520  0927  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13521  0928  318A  22EA  3189   	fcall	_PWM6_LoadDutyValue
 13522  092B                     l6643:	
 13523  092B  0020               	movlb	0	; select bank0
 13524  092C  1796               	bsf	22,7	;volatile
 13525  092D                     l1463:	
 13526  092D  0008               	return
 13527  092E                     __end_of_mod1_LED:	
 13528                           
 13529                           	psect	text20
 13530  059C                     __ptext20:	
 13531 ;; *************** function _increment_subfield *****************
 13532 ;; Defined at:
 13533 ;;		line 583 in file "main.c"
 13534 ;; Parameters:    Size  Location     Type
 13535 ;;		None
 13536 ;; Auto vars:     Size  Location     Type
 13537 ;;  _value          1   20[BANK0 ] unsigned char 
 13538 ;;  exit            1   19[BANK0 ] unsigned char 
 13539 ;; Return value:  Size  Location     Type
 13540 ;;                  1    wreg      void 
 13541 ;; Registers used:
 13542 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13543 ;; Tracked objects:
 13544 ;;		On entry : 0/0
 13545 ;;		On exit  : 0/0
 13546 ;;		Unchanged: 0/0
 13547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13549 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13550 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13551 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13552 ;;Total ram usage:        3 bytes
 13553 ;; Hardware stack levels used:    1
 13554 ;; Hardware stack levels required when called:    8
 13555 ;; This function calls:
 13556 ;;		Absolute function
 13557 ;;		_PWM6_LoadDutyValue
 13558 ;;		_checkDebounceSW1
 13559 ;;		_checkDebounceSW2
 13560 ;;		_recAlarm
 13561 ;;		_recHour
 13562 ;;		_recLumThresh
 13563 ;;		_recMinutes
 13564 ;;		_recTempThresh
 13565 ;;		_representLed
 13566 ;; This function is called by:
 13567 ;;		_selectSubfield
 13568 ;; This function uses a non-reentrant model
 13569 ;;
 13570                           
 13571                           
 13572                           ;psect for function _increment_subfield
 13573  059C                     _increment_subfield:	
 13574  059C                     l6703:	
 13575                           ;incstack = 0
 13576                           ; Regs used in _increment_subfield: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13577                           
 13578                           
 13579                           ;main.c: 585:     unsigned char exit = 0;
 13580  059C  0020               	movlb	0	; select bank0
 13581  059D  01B3               	clrf	increment_subfield@exit
 13582                           
 13583                           ;main.c: 586:     unsigned char _value = 0;
 13584  059E  01B4               	clrf	increment_subfield@_value
 13585  059F                     l6705:	
 13586                           
 13587                           ;main.c: 588:     PWM6_LoadDutyValue(0);
 13588  059F  3000               	movlw	0
 13589  05A0  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13590  05A1  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13591  05A2  318A  22EA  3185   	fcall	_PWM6_LoadDutyValue
 13592  05A5                     l6707:	
 13593                           
 13594                           ;main.c: 589:     LATA = 0;
 13595  05A5  0020               	movlb	0	; select bank0
 13596  05A6  0196               	clrf	22	;volatile
 13597  05A7                     l6709:	
 13598                           
 13599                           ;main.c: 590:     if(_value > (int)((int *) (unsigned char(*)(void))subfield_info.limit)
      +                          ) _value = 0;
 13600  05A7  1FC2               	btfss	_subfield_info+1,7
 13601  05A8  2DAA               	goto	u4161
 13602  05A9  2DAB               	goto	u4160
 13603  05AA                     u4161:	
 13604  05AA  2DEB               	goto	l6733
 13605  05AB                     u4160:	
 13606  05AB                     l6711:	
 13607  05AB  01B4               	clrf	increment_subfield@_value
 13608  05AC  2DEB               	goto	l6733
 13609  05AD                     l1415:	
 13610                           
 13611                           ;main.c: 594:         if(!PORTCbits.RC5){
 13612  05AD  1A8E               	btfsc	14,5	;volatile
 13613  05AE  2DB0               	goto	u4171
 13614  05AF  2DB1               	goto	u4170
 13615  05B0                     u4171:	
 13616  05B0  2DD7               	goto	l6725
 13617  05B1                     u4170:	
 13618  05B1                     l6713:	
 13619                           
 13620                           ;main.c: 595:             if(checkDebounceSW2()){
 13621  05B1  318E  26BE  3185   	fcall	_checkDebounceSW2
 13622  05B4  3A00               	xorlw	0
 13623  05B5  1903               	skipnz
 13624  05B6  2DB8               	goto	u4181
 13625  05B7  2DB9               	goto	u4180
 13626  05B8                     u4181:	
 13627  05B8  2DD2               	goto	l6723
 13628  05B9                     u4180:	
 13629  05B9                     l6715:	
 13630                           
 13631                           ;main.c: 597:                 _value++;
 13632  05B9  3001               	movlw	1
 13633  05BA  0020               	movlb	0	; select bank0
 13634  05BB  00B2               	movwf	??_increment_subfield
 13635  05BC  0832               	movf	??_increment_subfield,w
 13636  05BD  07B4               	addwf	increment_subfield@_value,f
 13637  05BE                     l6717:	
 13638                           
 13639                           ;main.c: 598:                 if(_value > (int)((int *) (unsigned char(*)(void))subfield
      +                          _info.limit)) _value = 0;
 13640  05BE  0842               	movf	_subfield_info+1,w
 13641  05BF  3A80               	xorlw	128
 13642  05C0  00B2               	movwf	??_increment_subfield
 13643  05C1  3080               	movlw	128
 13644  05C2  0232               	subwf	??_increment_subfield,w
 13645  05C3  1D03               	skipz
 13646  05C4  2DC7               	goto	u4195
 13647  05C5  0834               	movf	increment_subfield@_value,w
 13648  05C6  0241               	subwf	_subfield_info,w
 13649  05C7                     u4195:	
 13650  05C7  1803               	skipnc
 13651  05C8  2DCA               	goto	u4191
 13652  05C9  2DCB               	goto	u4190
 13653  05CA                     u4191:	
 13654  05CA  2DCD               	goto	l6721
 13655  05CB                     u4190:	
 13656  05CB                     l6719:	
 13657  05CB  0020               	movlb	0	; select bank0
 13658  05CC  01B4               	clrf	increment_subfield@_value
 13659  05CD                     l6721:	
 13660                           
 13661                           ;main.c: 599:                  representLed(_value);
 13662  05CD  0020               	movlb	0	; select bank0
 13663  05CE  0834               	movf	increment_subfield@_value,w
 13664  05CF  318F  270B  3185   	fcall	_representLed
 13665  05D2                     l6723:	
 13666                           
 13667                           ;main.c: 602:             last_ms2 = clkms;
 13668  05D2  087D               	movf	_clkms,w	;volatile
 13669  05D3  0020               	movlb	0	; select bank0
 13670  05D4  00B2               	movwf	??_increment_subfield
 13671  05D5  0832               	movf	??_increment_subfield,w
 13672  05D6  00D8               	movwf	_last_ms2
 13673  05D7                     l6725:	
 13674                           
 13675                           ;main.c: 605:         if(!PORTBbits.RB4){
 13676  05D7  1A0D               	btfsc	13,4	;volatile
 13677  05D8  2DDA               	goto	u4201
 13678  05D9  2DDB               	goto	u4200
 13679  05DA                     u4201:	
 13680  05DA  2DEB               	goto	l6733
 13681  05DB                     u4200:	
 13682  05DB                     l6727:	
 13683                           
 13684                           ;main.c: 606:             if(checkDebounceSW1()){
 13685  05DB  3187  2713  3185   	fcall	_checkDebounceSW1
 13686  05DE  3A00               	xorlw	0
 13687  05DF  1903               	skipnz
 13688  05E0  2DE2               	goto	u4211
 13689  05E1  2DE3               	goto	u4210
 13690  05E2                     u4211:	
 13691  05E2  2DE6               	goto	l6731
 13692  05E3                     u4210:	
 13693  05E3                     l6729:	
 13694                           
 13695                           ;main.c: 607:                 exit = 1;
 13696  05E3  0020               	movlb	0	; select bank0
 13697  05E4  01B3               	clrf	increment_subfield@exit
 13698  05E5  0AB3               	incf	increment_subfield@exit,f
 13699  05E6                     l6731:	
 13700                           
 13701                           ;main.c: 609:             last_ms = clkms;
 13702  05E6  087D               	movf	_clkms,w	;volatile
 13703  05E7  0020               	movlb	0	; select bank0
 13704  05E8  00B2               	movwf	??_increment_subfield
 13705  05E9  0832               	movf	??_increment_subfield,w
 13706  05EA  00D9               	movwf	_last_ms
 13707  05EB                     l6733:	
 13708                           
 13709                           ;main.c: 592:     while(exit == 0){
 13710  05EB  0833               	movf	increment_subfield@exit,w
 13711  05EC  1903               	btfsc	3,2
 13712  05ED  2DEF               	goto	u4221
 13713  05EE  2DF0               	goto	u4220
 13714  05EF                     u4221:	
 13715  05EF  2DAD               	goto	l1415
 13716  05F0                     u4220:	
 13717  05F0                     l6735:	
 13718                           
 13719                           ;main.c: 612:     subfield_info.reconstruct_subfield(_value);
 13720  05F0  0834               	movf	increment_subfield@_value,w
 13721  05F1  00B2               	movwf	??_increment_subfield
 13722  05F2  0832               	movf	??_increment_subfield,w
 13723  05F3  00AC               	movwf	recLumThresh@_value
 13724  05F4  3002               	movlw	2
 13725  05F5  3E41               	addlw	(low (_subfield_info| 0))& (0+255)
 13726  05F6  0086               	movwf	6
 13727  05F7  0187               	clrf	7
 13728  05F8  3F41               	moviw [1]fsr1
 13729  05F9  008A               	movwf	10
 13730  05FA  3F40               	moviw [0]fsr1
 13731  05FB  000A               	callw
 13732  05FC  3185               	pagesel	$
 13733  05FD                     l1422:	
 13734  05FD  0008               	return
 13735  05FE                     __end_of_increment_subfield:	
 13736                           
 13737                           	psect	text21
 13738  0F0B                     __ptext21:	
 13739 ;; *************** function _representLed *****************
 13740 ;; Defined at:
 13741 ;;		line 862 in file "main.c"
 13742 ;; Parameters:    Size  Location     Type
 13743 ;;  val             1    wreg     unsigned char 
 13744 ;; Auto vars:     Size  Location     Type
 13745 ;;  val             1   16[BANK0 ] unsigned char 
 13746 ;;  aux             1   17[BANK0 ] unsigned char 
 13747 ;; Return value:  Size  Location     Type
 13748 ;;                  1    wreg      void 
 13749 ;; Registers used:
 13750 ;;		wreg, status,2, status,0, pclath, cstack
 13751 ;; Tracked objects:
 13752 ;;		On entry : 0/0
 13753 ;;		On exit  : 0/0
 13754 ;;		Unchanged: 0/0
 13755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13757 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13758 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13759 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13760 ;;Total ram usage:        5 bytes
 13761 ;; Hardware stack levels used:    1
 13762 ;; Hardware stack levels required when called:    7
 13763 ;; This function calls:
 13764 ;;		_PWM6_LoadDutyValue
 13765 ;;		___wmul
 13766 ;; This function is called by:
 13767 ;;		_increment_subfield
 13768 ;; This function uses a non-reentrant model
 13769 ;;
 13770                           
 13771                           
 13772                           ;psect for function _representLed
 13773  0F0B                     _representLed:	
 13774                           
 13775                           ;incstack = 0
 13776                           ; Regs used in _representLed: [wreg+status,2+status,0+pclath+cstack]
 13777                           ;representLed@val stored from wreg
 13778  0F0B  0020               	movlb	0	; select bank0
 13779  0F0C  00B0               	movwf	representLed@val
 13780  0F0D                     l6599:	
 13781                           
 13782                           ;main.c: 862: void representLed(unsigned char val);main.c: 863: {;main.c: 864:     unsig
      +                          ned char aux = val;
 13783  0F0D  0830               	movf	representLed@val,w
 13784  0F0E  00AD               	movwf	??_representLed
 13785  0F0F  082D               	movf	??_representLed,w
 13786  0F10  00B1               	movwf	representLed@aux
 13787                           
 13788                           ;main.c: 865:     if(val > 99)
 13789  0F11  3064               	movlw	100
 13790  0F12  0230               	subwf	representLed@val,w
 13791  0F13  1C03               	skipc
 13792  0F14  2F16               	goto	u4121
 13793  0F15  2F17               	goto	u4120
 13794  0F16                     u4121:	
 13795  0F16  2F18               	goto	l6603
 13796  0F17                     u4120:	
 13797  0F17  2F57               	goto	l1510
 13798  0F18                     l6603:	
 13799                           
 13800                           ;main.c: 868:     LATAbits.LATA7 = aux >> 3;
 13801  0F18  0831               	movf	representLed@aux,w
 13802  0F19  00AD               	movwf	??_representLed
 13803  0F1A  3003               	movlw	3
 13804  0F1B                     u4135:	
 13805  0F1B  36AD               	lsrf	??_representLed,f
 13806  0F1C  0B89               	decfsz	9,f
 13807  0F1D  2F1B               	goto	u4135
 13808  0F1E  082D               	movf	??_representLed,w
 13809  0F1F  00AE               	movwf	??_representLed+1
 13810  0F20  0CAE               	rrf	??_representLed+1,f
 13811  0F21  0CAE               	rrf	??_representLed+1,f
 13812  0F22  0816               	movf	22,w	;volatile
 13813  0F23  062E               	xorwf	??_representLed+1,w
 13814  0F24  397F               	andlw	-129
 13815  0F25  062E               	xorwf	??_representLed+1,w
 13816  0F26  0096               	movwf	22	;volatile
 13817  0F27                     l6605:	
 13818                           
 13819                           ;main.c: 869:     PWM6_LoadDutyValue(((aux >> 2) & 1)*1023);
 13820  0F27  0831               	movf	representLed@aux,w
 13821  0F28  00AD               	movwf	??_representLed
 13822  0F29  3002               	movlw	2
 13823  0F2A                     u4145:	
 13824  0F2A  36AD               	lsrf	??_representLed,f
 13825  0F2B  0B89               	decfsz	9,f
 13826  0F2C  2F2A               	goto	u4145
 13827  0F2D  082D               	movf	??_representLed,w
 13828  0F2E  3901               	andlw	1
 13829  0F2F  00AE               	movwf	??_representLed+1
 13830  0F30  01AF               	clrf	??_representLed+2
 13831  0F31  082E               	movf	??_representLed+1,w
 13832  0F32  00A3               	movwf	___wmul@multiplier
 13833  0F33  082F               	movf	??_representLed+2,w
 13834  0F34  00A4               	movwf	___wmul@multiplier+1
 13835  0F35  30FF               	movlw	255
 13836  0F36  00A5               	movwf	___wmul@multiplicand
 13837  0F37  3003               	movlw	3
 13838  0F38  00A6               	movwf	___wmul@multiplicand+1
 13839  0F39  318B  23CD  318F   	fcall	___wmul
 13840  0F3C  0020               	movlb	0	; select bank0
 13841  0F3D  0824               	movf	?___wmul+1,w
 13842  0F3E  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 13843  0F3F  0823               	movf	?___wmul,w
 13844  0F40  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 13845  0F41  318A  22EA  318F   	fcall	_PWM6_LoadDutyValue
 13846  0F44                     l6607:	
 13847                           
 13848                           ;main.c: 870:     LATAbits.LATA5 = aux >> 1;
 13849  0F44  0020               	movlb	0	; select bank0
 13850  0F45  3631               	lsrf	representLed@aux,w
 13851  0F46  00AD               	movwf	??_representLed
 13852  0F47  0EAD               	swapf	??_representLed,f
 13853  0F48  0DAD               	rlf	??_representLed,f
 13854  0F49  0816               	movf	22,w	;volatile
 13855  0F4A  062D               	xorwf	??_representLed,w
 13856  0F4B  39DF               	andlw	-33
 13857  0F4C  062D               	xorwf	??_representLed,w
 13858  0F4D  0096               	movwf	22	;volatile
 13859  0F4E                     l6609:	
 13860                           
 13861                           ;main.c: 871:     LATAbits.LATA4 = aux & 1;
 13862  0F4E  0831               	movf	representLed@aux,w
 13863  0F4F  3901               	andlw	1
 13864  0F50  00AD               	movwf	??_representLed
 13865  0F51  0EAD               	swapf	??_representLed,f
 13866  0F52  0816               	movf	22,w	;volatile
 13867  0F53  062D               	xorwf	??_representLed,w
 13868  0F54  39EF               	andlw	-17
 13869  0F55  062D               	xorwf	??_representLed,w
 13870  0F56  0096               	movwf	22	;volatile
 13871  0F57                     l1510:	
 13872  0F57  0008               	return
 13873  0F58                     __end_of_representLed:	
 13874                           
 13875                           	psect	text22
 13876  0BCD                     __ptext22:	
 13877 ;; *************** function ___wmul *****************
 13878 ;; Defined at:
 13879 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 13880 ;; Parameters:    Size  Location     Type
 13881 ;;  multiplier      2    3[BANK0 ] unsigned int 
 13882 ;;  multiplicand    2    5[BANK0 ] unsigned int 
 13883 ;; Auto vars:     Size  Location     Type
 13884 ;;  product         2    7[BANK0 ] unsigned int 
 13885 ;; Return value:  Size  Location     Type
 13886 ;;                  2    3[BANK0 ] unsigned int 
 13887 ;; Registers used:
 13888 ;;		wreg, status,2, status,0
 13889 ;; Tracked objects:
 13890 ;;		On entry : 0/0
 13891 ;;		On exit  : 0/0
 13892 ;;		Unchanged: 0/0
 13893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13894 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13895 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13897 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13898 ;;Total ram usage:        6 bytes
 13899 ;; Hardware stack levels used:    1
 13900 ;; Hardware stack levels required when called:    6
 13901 ;; This function calls:
 13902 ;;		Nothing
 13903 ;; This function is called by:
 13904 ;;		_representLed
 13905 ;; This function uses a non-reentrant model
 13906 ;;
 13907                           
 13908                           
 13909                           ;psect for function ___wmul
 13910  0BCD                     ___wmul:	
 13911  0BCD                     l6419:	
 13912                           ;incstack = 0
 13913                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13914                           
 13915  0BCD  0020               	movlb	0	; select bank0
 13916  0BCE  01A7               	clrf	___wmul@product
 13917  0BCF  01A8               	clrf	___wmul@product+1
 13918  0BD0                     l6421:	
 13919  0BD0  1C23               	btfss	___wmul@multiplier,0
 13920  0BD1  2BD3               	goto	u3801
 13921  0BD2  2BD4               	goto	u3800
 13922  0BD3                     u3801:	
 13923  0BD3  2BD8               	goto	l1865
 13924  0BD4                     u3800:	
 13925  0BD4                     l6423:	
 13926  0BD4  0825               	movf	___wmul@multiplicand,w
 13927  0BD5  07A7               	addwf	___wmul@product,f
 13928  0BD6  0826               	movf	___wmul@multiplicand+1,w
 13929  0BD7  3DA8               	addwfc	___wmul@product+1,f
 13930  0BD8                     l1865:	
 13931  0BD8  3001               	movlw	1
 13932  0BD9                     u3815:	
 13933  0BD9  35A5               	lslf	___wmul@multiplicand,f
 13934  0BDA  0DA6               	rlf	___wmul@multiplicand+1,f
 13935  0BDB  0B89               	decfsz	9,f
 13936  0BDC  2BD9               	goto	u3815
 13937  0BDD                     l6425:	
 13938  0BDD  3001               	movlw	1
 13939  0BDE                     u3825:	
 13940  0BDE  36A4               	lsrf	___wmul@multiplier+1,f
 13941  0BDF  0CA3               	rrf	___wmul@multiplier,f
 13942  0BE0  0B89               	decfsz	9,f
 13943  0BE1  2BDE               	goto	u3825
 13944  0BE2                     l6427:	
 13945  0BE2  0823               	movf	___wmul@multiplier,w
 13946  0BE3  0424               	iorwf	___wmul@multiplier+1,w
 13947  0BE4  1D03               	btfss	3,2
 13948  0BE5  2BE7               	goto	u3831
 13949  0BE6  2BE8               	goto	u3830
 13950  0BE7                     u3831:	
 13951  0BE7  2BD0               	goto	l6421
 13952  0BE8                     u3830:	
 13953  0BE8                     l6429:	
 13954  0BE8  0828               	movf	___wmul@product+1,w
 13955  0BE9  00A4               	movwf	?___wmul+1
 13956  0BEA  0827               	movf	___wmul@product,w
 13957  0BEB  00A3               	movwf	?___wmul
 13958  0BEC                     l1867:	
 13959  0BEC  0008               	return
 13960  0BED                     __end_of___wmul:	
 13961                           
 13962                           	psect	text23
 13963  0889                     __ptext23:	
 13964 ;; *************** function _recLumThresh *****************
 13965 ;; Defined at:
 13966 ;;		line 491 in file "main.c"
 13967 ;; Parameters:    Size  Location     Type
 13968 ;;  _value          1   12[BANK0 ] unsigned char 
 13969 ;; Auto vars:     Size  Location     Type
 13970 ;;		None
 13971 ;; Return value:  Size  Location     Type
 13972 ;;                  1    wreg      void 
 13973 ;; Registers used:
 13974 ;;		wreg
 13975 ;; Tracked objects:
 13976 ;;		On entry : 0/0
 13977 ;;		On exit  : 0/0
 13978 ;;		Unchanged: 0/0
 13979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13980 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13982 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13983 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13984 ;;Total ram usage:        2 bytes
 13985 ;; Hardware stack levels used:    1
 13986 ;; Hardware stack levels required when called:    6
 13987 ;; This function calls:
 13988 ;;		Nothing
 13989 ;; This function is called by:
 13990 ;;		_getSubfieldInfo
 13991 ;;		_increment_subfield
 13992 ;; This function uses a non-reentrant model
 13993 ;;
 13994                           
 13995                           
 13996                           ;psect for function _recLumThresh
 13997  0889                     _recLumThresh:	
 13998  0889                     l6577:	
 13999                           ;incstack = 0
 14000                           ; Regs used in _recLumThresh: [wreg]
 14001                           
 14002                           
 14003                           ;main.c: 492:     lum_thresh = _value;
 14004  0889  0020               	movlb	0	; select bank0
 14005  088A  082C               	movf	recLumThresh@_value,w
 14006  088B  00AD               	movwf	??_recLumThresh
 14007  088C  082D               	movf	??_recLumThresh,w
 14008  088D  00E3               	movwf	_lum_thresh
 14009  088E                     l1382:	
 14010  088E  0008               	return
 14011  088F                     __end_of_recLumThresh:	
 14012                           
 14013                           	psect	text24
 14014  0883                     __ptext24:	
 14015 ;; *************** function _recAlarm *****************
 14016 ;; Defined at:
 14017 ;;		line 506 in file "main.c"
 14018 ;; Parameters:    Size  Location     Type
 14019 ;;  _value          1   12[BANK0 ] unsigned char 
 14020 ;; Auto vars:     Size  Location     Type
 14021 ;;		None
 14022 ;; Return value:  Size  Location     Type
 14023 ;;                  1    wreg      void 
 14024 ;; Registers used:
 14025 ;;		wreg
 14026 ;; Tracked objects:
 14027 ;;		On entry : 0/0
 14028 ;;		On exit  : 0/0
 14029 ;;		Unchanged: 0/0
 14030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14031 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14033 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14034 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14035 ;;Total ram usage:        2 bytes
 14036 ;; Hardware stack levels used:    1
 14037 ;; Hardware stack levels required when called:    6
 14038 ;; This function calls:
 14039 ;;		Nothing
 14040 ;; This function is called by:
 14041 ;;		_getSubfieldInfo
 14042 ;;		_increment_subfield
 14043 ;; This function uses a non-reentrant model
 14044 ;;
 14045                           
 14046                           
 14047                           ;psect for function _recAlarm
 14048  0883                     _recAlarm:	
 14049  0883                     l6585:	
 14050                           ;incstack = 0
 14051                           ; Regs used in _recAlarm: [wreg]
 14052                           
 14053                           
 14054                           ;main.c: 507:     alarm = _value;
 14055  0883  0020               	movlb	0	; select bank0
 14056  0884  082C               	movf	recAlarm@_value,w
 14057  0885  00AD               	movwf	??_recAlarm
 14058  0886  082D               	movf	??_recAlarm,w
 14059  0887  00D3               	movwf	_alarm	;volatile
 14060  0888                     l1390:	
 14061  0888  0008               	return
 14062  0889                     __end_of_recAlarm:	
 14063                           
 14064                           	psect	text25
 14065  0D40                     __ptext25:	
 14066 ;; *************** function _recMinutes *****************
 14067 ;; Defined at:
 14068 ;;		line 517 in file "main.c"
 14069 ;; Parameters:    Size  Location     Type
 14070 ;;  _value          1   12[BANK0 ] unsigned char 
 14071 ;; Auto vars:     Size  Location     Type
 14072 ;;		None
 14073 ;; Return value:  Size  Location     Type
 14074 ;;                  1    wreg      void 
 14075 ;; Registers used:
 14076 ;;		wreg, status,2, status,0, pclath, cstack
 14077 ;; Tracked objects:
 14078 ;;		On entry : 0/0
 14079 ;;		On exit  : 0/0
 14080 ;;		Unchanged: 0/0
 14081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14082 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14084 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14085 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14086 ;;Total ram usage:        4 bytes
 14087 ;; Hardware stack levels used:    1
 14088 ;; Hardware stack levels required when called:    7
 14089 ;; This function calls:
 14090 ;;		___awdiv
 14091 ;;		___awmod
 14092 ;; This function is called by:
 14093 ;;		_getSubfieldInfo
 14094 ;;		_increment_subfield
 14095 ;; This function uses a non-reentrant model
 14096 ;;
 14097                           
 14098                           
 14099                           ;psect for function _recMinutes
 14100  0D40                     _recMinutes:	
 14101  0D40                     l6587:	
 14102                           ;incstack = 0
 14103                           ; Regs used in _recMinutes: [wreg+status,2+status,0+pclath+cstack]
 14104                           
 14105                           
 14106                           ;main.c: 518:     if(mode_field_subfield[1] == 3){
 14107  0D40  3003               	movlw	3
 14108  0D41  0020               	movlb	0	; select bank0
 14109  0D42  0661               	xorwf	_mode_field_subfield+2,w
 14110  0D43  0462               	iorwf	_mode_field_subfield+3,w
 14111  0D44  1D03               	btfss	3,2
 14112  0D45  2D47               	goto	u4101
 14113  0D46  2D48               	goto	u4100
 14114  0D47                     u4101:	
 14115  0D47  2D5D               	goto	l6591
 14116  0D48                     u4100:	
 14117  0D48                     l6589:	
 14118                           
 14119                           ;main.c: 520:         clkm = _value + (clkm % 10);
 14120  0D48  300A               	movlw	10
 14121  0D49  00A3               	movwf	___awmod@divisor
 14122  0D4A  3000               	movlw	0
 14123  0D4B  00A4               	movwf	___awmod@divisor+1
 14124  0D4C  085B               	movf	_clkm,w	;volatile
 14125  0D4D  00AD               	movwf	??_recMinutes
 14126  0D4E  01AE               	clrf	??_recMinutes+1
 14127  0D4F  082D               	movf	??_recMinutes,w
 14128  0D50  00A5               	movwf	___awmod@dividend
 14129  0D51  082E               	movf	??_recMinutes+1,w
 14130  0D52  00A6               	movwf	___awmod@dividend+1
 14131  0D53  318F  27AC  318D   	fcall	___awmod
 14132  0D56  0020               	movlb	0	; select bank0
 14133  0D57  0823               	movf	?___awmod,w
 14134  0D58  072C               	addwf	recMinutes@_value,w
 14135  0D59  00AF               	movwf	??_recMinutes+2
 14136  0D5A  082F               	movf	??_recMinutes+2,w
 14137  0D5B  00DB               	movwf	_clkm	;volatile
 14138                           
 14139                           ;main.c: 522:     }else{
 14140  0D5C  2D71               	goto	l1395
 14141  0D5D                     l6591:	
 14142                           
 14143                           ;main.c: 523:         clkm = (clkm / 10) + _value;
 14144  0D5D  300A               	movlw	10
 14145  0D5E  00A3               	movwf	___awdiv@divisor
 14146  0D5F  3000               	movlw	0
 14147  0D60  00A4               	movwf	___awdiv@divisor+1
 14148  0D61  085B               	movf	_clkm,w	;volatile
 14149  0D62  00AD               	movwf	??_recMinutes
 14150  0D63  01AE               	clrf	??_recMinutes+1
 14151  0D64  082D               	movf	??_recMinutes,w
 14152  0D65  00A5               	movwf	___awdiv@dividend
 14153  0D66  082E               	movf	??_recMinutes+1,w
 14154  0D67  00A6               	movwf	___awdiv@dividend+1
 14155  0D68  3185  25FE  318D   	fcall	___awdiv
 14156  0D6B  0020               	movlb	0	; select bank0
 14157  0D6C  0823               	movf	?___awdiv,w
 14158  0D6D  072C               	addwf	recMinutes@_value,w
 14159  0D6E  00AF               	movwf	??_recMinutes+2
 14160  0D6F  082F               	movf	??_recMinutes+2,w
 14161  0D70  00DB               	movwf	_clkm	;volatile
 14162  0D71                     l1395:	
 14163  0D71  0008               	return
 14164  0D72                     __end_of_recMinutes:	
 14165                           
 14166                           	psect	text26
 14167  0D0F                     __ptext26:	
 14168 ;; *************** function _recHour *****************
 14169 ;; Defined at:
 14170 ;;		line 534 in file "main.c"
 14171 ;; Parameters:    Size  Location     Type
 14172 ;;  _value          1   12[BANK0 ] unsigned char 
 14173 ;; Auto vars:     Size  Location     Type
 14174 ;;		None
 14175 ;; Return value:  Size  Location     Type
 14176 ;;                  1    wreg      void 
 14177 ;; Registers used:
 14178 ;;		wreg, status,2, status,0, pclath, cstack
 14179 ;; Tracked objects:
 14180 ;;		On entry : 0/0
 14181 ;;		On exit  : 0/0
 14182 ;;		Unchanged: 0/0
 14183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14184 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14186 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14187 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14188 ;;Total ram usage:        4 bytes
 14189 ;; Hardware stack levels used:    1
 14190 ;; Hardware stack levels required when called:    7
 14191 ;; This function calls:
 14192 ;;		___awdiv
 14193 ;;		___awmod
 14194 ;; This function is called by:
 14195 ;;		_getSubfieldInfo
 14196 ;;		_increment_subfield
 14197 ;; This function uses a non-reentrant model
 14198 ;;
 14199                           
 14200                           
 14201                           ;psect for function _recHour
 14202  0D0F                     _recHour:	
 14203  0D0F                     l6593:	
 14204                           ;incstack = 0
 14205                           ; Regs used in _recHour: [wreg+status,2+status,0+pclath+cstack]
 14206                           
 14207                           
 14208                           ;main.c: 535:     if(mode_field_subfield[1] == 1){
 14209  0D0F  0020               	movlb	0	; select bank0
 14210  0D10  0361               	decf	_mode_field_subfield+2,w
 14211  0D11  0462               	iorwf	_mode_field_subfield+3,w
 14212  0D12  1D03               	btfss	3,2
 14213  0D13  2D15               	goto	u4111
 14214  0D14  2D16               	goto	u4110
 14215  0D15                     u4111:	
 14216  0D15  2D2B               	goto	l6597
 14217  0D16                     u4110:	
 14218  0D16                     l6595:	
 14219                           
 14220                           ;main.c: 537:         clkh = _value + (clkh % 10);
 14221  0D16  300A               	movlw	10
 14222  0D17  00A3               	movwf	___awmod@divisor
 14223  0D18  3000               	movlw	0
 14224  0D19  00A4               	movwf	___awmod@divisor+1
 14225  0D1A  085C               	movf	_clkh,w	;volatile
 14226  0D1B  00AD               	movwf	??_recHour
 14227  0D1C  01AE               	clrf	??_recHour+1
 14228  0D1D  082D               	movf	??_recHour,w
 14229  0D1E  00A5               	movwf	___awmod@dividend
 14230  0D1F  082E               	movf	??_recHour+1,w
 14231  0D20  00A6               	movwf	___awmod@dividend+1
 14232  0D21  318F  27AC  318D   	fcall	___awmod
 14233  0D24  0020               	movlb	0	; select bank0
 14234  0D25  0823               	movf	?___awmod,w
 14235  0D26  072C               	addwf	recHour@_value,w
 14236  0D27  00AF               	movwf	??_recHour+2
 14237  0D28  082F               	movf	??_recHour+2,w
 14238  0D29  00DC               	movwf	_clkh	;volatile
 14239                           
 14240                           ;main.c: 539:     }else{
 14241  0D2A  2D3F               	goto	l1400
 14242  0D2B                     l6597:	
 14243                           
 14244                           ;main.c: 540:         clkh = (clkh / 10) + _value;
 14245  0D2B  300A               	movlw	10
 14246  0D2C  00A3               	movwf	___awdiv@divisor
 14247  0D2D  3000               	movlw	0
 14248  0D2E  00A4               	movwf	___awdiv@divisor+1
 14249  0D2F  085C               	movf	_clkh,w	;volatile
 14250  0D30  00AD               	movwf	??_recHour
 14251  0D31  01AE               	clrf	??_recHour+1
 14252  0D32  082D               	movf	??_recHour,w
 14253  0D33  00A5               	movwf	___awdiv@dividend
 14254  0D34  082E               	movf	??_recHour+1,w
 14255  0D35  00A6               	movwf	___awdiv@dividend+1
 14256  0D36  3185  25FE  318D   	fcall	___awdiv
 14257  0D39  0020               	movlb	0	; select bank0
 14258  0D3A  0823               	movf	?___awdiv,w
 14259  0D3B  072C               	addwf	recHour@_value,w
 14260  0D3C  00AF               	movwf	??_recHour+2
 14261  0D3D  082F               	movf	??_recHour+2,w
 14262  0D3E  00DC               	movwf	_clkh	;volatile
 14263  0D3F                     l1400:	
 14264  0D3F  0008               	return
 14265  0D40                     __end_of_recHour:	
 14266                           
 14267                           	psect	text27
 14268  0CDE                     __ptext27:	
 14269 ;; *************** function _recTempThresh *****************
 14270 ;; Defined at:
 14271 ;;		line 495 in file "main.c"
 14272 ;; Parameters:    Size  Location     Type
 14273 ;;  _value          1   12[BANK0 ] unsigned char 
 14274 ;; Auto vars:     Size  Location     Type
 14275 ;;		None
 14276 ;; Return value:  Size  Location     Type
 14277 ;;                  1    wreg      void 
 14278 ;; Registers used:
 14279 ;;		wreg, status,2, status,0, pclath, cstack
 14280 ;; Tracked objects:
 14281 ;;		On entry : 0/0
 14282 ;;		On exit  : 0/0
 14283 ;;		Unchanged: 0/0
 14284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14285 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14287 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14288 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14289 ;;Total ram usage:        4 bytes
 14290 ;; Hardware stack levels used:    1
 14291 ;; Hardware stack levels required when called:    7
 14292 ;; This function calls:
 14293 ;;		___awdiv
 14294 ;;		___awmod
 14295 ;; This function is called by:
 14296 ;;		_getSubfieldInfo
 14297 ;;		_increment_subfield
 14298 ;; This function uses a non-reentrant model
 14299 ;;
 14300                           
 14301                           
 14302                           ;psect for function _recTempThresh
 14303  0CDE                     _recTempThresh:	
 14304  0CDE                     l6579:	
 14305                           ;incstack = 0
 14306                           ; Regs used in _recTempThresh: [wreg+status,2+status,0+pclath+cstack]
 14307                           
 14308                           
 14309                           ;main.c: 496:     if(mode_field_subfield[1] == 1){
 14310  0CDE  0020               	movlb	0	; select bank0
 14311  0CDF  0361               	decf	_mode_field_subfield+2,w
 14312  0CE0  0462               	iorwf	_mode_field_subfield+3,w
 14313  0CE1  1D03               	btfss	3,2
 14314  0CE2  2CE4               	goto	u4091
 14315  0CE3  2CE5               	goto	u4090
 14316  0CE4                     u4091:	
 14317  0CE4  2CFA               	goto	l6583
 14318  0CE5                     u4090:	
 14319  0CE5                     l6581:	
 14320                           
 14321                           ;main.c: 498:         temp_thresh = _value + (temp_thresh % 10);
 14322  0CE5  300A               	movlw	10
 14323  0CE6  00A3               	movwf	___awmod@divisor
 14324  0CE7  3000               	movlw	0
 14325  0CE8  00A4               	movwf	___awmod@divisor+1
 14326  0CE9  0864               	movf	_temp_thresh,w
 14327  0CEA  00AD               	movwf	??_recTempThresh
 14328  0CEB  01AE               	clrf	??_recTempThresh+1
 14329  0CEC  082D               	movf	??_recTempThresh,w
 14330  0CED  00A5               	movwf	___awmod@dividend
 14331  0CEE  082E               	movf	??_recTempThresh+1,w
 14332  0CEF  00A6               	movwf	___awmod@dividend+1
 14333  0CF0  318F  27AC  318C   	fcall	___awmod
 14334  0CF3  0020               	movlb	0	; select bank0
 14335  0CF4  0823               	movf	?___awmod,w
 14336  0CF5  072C               	addwf	recTempThresh@_value,w
 14337  0CF6  00AF               	movwf	??_recTempThresh+2
 14338  0CF7  082F               	movf	??_recTempThresh+2,w
 14339  0CF8  00E4               	movwf	_temp_thresh
 14340                           
 14341                           ;main.c: 500:     }else{
 14342  0CF9  2D0E               	goto	l1387
 14343  0CFA                     l6583:	
 14344                           
 14345                           ;main.c: 501:         temp_thresh = (temp_thresh / 10) + _value;
 14346  0CFA  300A               	movlw	10
 14347  0CFB  00A3               	movwf	___awdiv@divisor
 14348  0CFC  3000               	movlw	0
 14349  0CFD  00A4               	movwf	___awdiv@divisor+1
 14350  0CFE  0864               	movf	_temp_thresh,w
 14351  0CFF  00AD               	movwf	??_recTempThresh
 14352  0D00  01AE               	clrf	??_recTempThresh+1
 14353  0D01  082D               	movf	??_recTempThresh,w
 14354  0D02  00A5               	movwf	___awdiv@dividend
 14355  0D03  082E               	movf	??_recTempThresh+1,w
 14356  0D04  00A6               	movwf	___awdiv@dividend+1
 14357  0D05  3185  25FE  318C   	fcall	___awdiv
 14358  0D08  0020               	movlb	0	; select bank0
 14359  0D09  0823               	movf	?___awdiv,w
 14360  0D0A  072C               	addwf	recTempThresh@_value,w
 14361  0D0B  00AF               	movwf	??_recTempThresh+2
 14362  0D0C  082F               	movf	??_recTempThresh+2,w
 14363  0D0D  00E4               	movwf	_temp_thresh
 14364  0D0E                     l1387:	
 14365  0D0E  0008               	return
 14366  0D0F                     __end_of_recTempThresh:	
 14367                           
 14368                           	psect	text28
 14369  0FAC                     __ptext28:	
 14370 ;; *************** function ___awmod *****************
 14371 ;; Defined at:
 14372 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 14373 ;; Parameters:    Size  Location     Type
 14374 ;;  divisor         2    3[BANK0 ] int 
 14375 ;;  dividend        2    5[BANK0 ] int 
 14376 ;; Auto vars:     Size  Location     Type
 14377 ;;  sign            1    9[BANK0 ] unsigned char 
 14378 ;;  counter         1    8[BANK0 ] unsigned char 
 14379 ;; Return value:  Size  Location     Type
 14380 ;;                  2    3[BANK0 ] int 
 14381 ;; Registers used:
 14382 ;;		wreg, status,2, status,0
 14383 ;; Tracked objects:
 14384 ;;		On entry : 0/0
 14385 ;;		On exit  : 0/0
 14386 ;;		Unchanged: 0/0
 14387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14388 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14389 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14390 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14391 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14392 ;;Total ram usage:        7 bytes
 14393 ;; Hardware stack levels used:    1
 14394 ;; Hardware stack levels required when called:    6
 14395 ;; This function calls:
 14396 ;;		Nothing
 14397 ;; This function is called by:
 14398 ;;		_recTempThresh
 14399 ;;		_recMinutes
 14400 ;;		_recHour
 14401 ;; This function uses a non-reentrant model
 14402 ;;
 14403                           
 14404                           
 14405                           ;psect for function ___awmod
 14406  0FAC                     ___awmod:	
 14407  0FAC                     l6477:	
 14408                           ;incstack = 0
 14409                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 14410                           
 14411  0FAC  0020               	movlb	0	; select bank0
 14412  0FAD  01A9               	clrf	___awmod@sign
 14413  0FAE                     l6479:	
 14414  0FAE  1FA6               	btfss	___awmod@dividend+1,7
 14415  0FAF  2FB1               	goto	u3941
 14416  0FB0  2FB2               	goto	u3940
 14417  0FB1                     u3941:	
 14418  0FB1  2FB9               	goto	l6485
 14419  0FB2                     u3940:	
 14420  0FB2                     l6481:	
 14421  0FB2  09A5               	comf	___awmod@dividend,f
 14422  0FB3  09A6               	comf	___awmod@dividend+1,f
 14423  0FB4  0AA5               	incf	___awmod@dividend,f
 14424  0FB5  1903               	skipnz
 14425  0FB6  0AA6               	incf	___awmod@dividend+1,f
 14426  0FB7                     l6483:	
 14427  0FB7  01A9               	clrf	___awmod@sign
 14428  0FB8  0AA9               	incf	___awmod@sign,f
 14429  0FB9                     l6485:	
 14430  0FB9  1FA4               	btfss	___awmod@divisor+1,7
 14431  0FBA  2FBC               	goto	u3951
 14432  0FBB  2FBD               	goto	u3950
 14433  0FBC                     u3951:	
 14434  0FBC  2FC2               	goto	l6489
 14435  0FBD                     u3950:	
 14436  0FBD                     l6487:	
 14437  0FBD  09A3               	comf	___awmod@divisor,f
 14438  0FBE  09A4               	comf	___awmod@divisor+1,f
 14439  0FBF  0AA3               	incf	___awmod@divisor,f
 14440  0FC0  1903               	skipnz
 14441  0FC1  0AA4               	incf	___awmod@divisor+1,f
 14442  0FC2                     l6489:	
 14443  0FC2  0823               	movf	___awmod@divisor,w
 14444  0FC3  0424               	iorwf	___awmod@divisor+1,w
 14445  0FC4  1903               	btfsc	3,2
 14446  0FC5  2FC7               	goto	u3961
 14447  0FC6  2FC8               	goto	u3960
 14448  0FC7                     u3961:	
 14449  0FC7  2FF1               	goto	l6507
 14450  0FC8                     u3960:	
 14451  0FC8                     l6491:	
 14452  0FC8  01A8               	clrf	___awmod@counter
 14453  0FC9  0AA8               	incf	___awmod@counter,f
 14454  0FCA  2FD4               	goto	l6497
 14455  0FCB                     l6493:	
 14456  0FCB  3001               	movlw	1
 14457  0FCC                     u3975:	
 14458  0FCC  35A3               	lslf	___awmod@divisor,f
 14459  0FCD  0DA4               	rlf	___awmod@divisor+1,f
 14460  0FCE  0B89               	decfsz	9,f
 14461  0FCF  2FCC               	goto	u3975
 14462  0FD0                     l6495:	
 14463  0FD0  3001               	movlw	1
 14464  0FD1  00A7               	movwf	??___awmod
 14465  0FD2  0827               	movf	??___awmod,w
 14466  0FD3  07A8               	addwf	___awmod@counter,f
 14467  0FD4                     l6497:	
 14468  0FD4  1FA4               	btfss	___awmod@divisor+1,7
 14469  0FD5  2FD7               	goto	u3981
 14470  0FD6  2FD8               	goto	u3980
 14471  0FD7                     u3981:	
 14472  0FD7  2FCB               	goto	l6493
 14473  0FD8                     u3980:	
 14474  0FD8                     l6499:	
 14475  0FD8  0824               	movf	___awmod@divisor+1,w
 14476  0FD9  0226               	subwf	___awmod@dividend+1,w
 14477  0FDA  1D03               	skipz
 14478  0FDB  2FDE               	goto	u3995
 14479  0FDC  0823               	movf	___awmod@divisor,w
 14480  0FDD  0225               	subwf	___awmod@dividend,w
 14481  0FDE                     u3995:	
 14482  0FDE  1C03               	skipc
 14483  0FDF  2FE1               	goto	u3991
 14484  0FE0  2FE2               	goto	u3990
 14485  0FE1                     u3991:	
 14486  0FE1  2FE6               	goto	l6503
 14487  0FE2                     u3990:	
 14488  0FE2                     l6501:	
 14489  0FE2  0823               	movf	___awmod@divisor,w
 14490  0FE3  02A5               	subwf	___awmod@dividend,f
 14491  0FE4  0824               	movf	___awmod@divisor+1,w
 14492  0FE5  3BA6               	subwfb	___awmod@dividend+1,f
 14493  0FE6                     l6503:	
 14494  0FE6  3001               	movlw	1
 14495  0FE7                     u4005:	
 14496  0FE7  36A4               	lsrf	___awmod@divisor+1,f
 14497  0FE8  0CA3               	rrf	___awmod@divisor,f
 14498  0FE9  0B89               	decfsz	9,f
 14499  0FEA  2FE7               	goto	u4005
 14500  0FEB                     l6505:	
 14501  0FEB  3001               	movlw	1
 14502  0FEC  02A8               	subwf	___awmod@counter,f
 14503  0FED  1D03               	btfss	3,2
 14504  0FEE  2FF0               	goto	u4011
 14505  0FEF  2FF1               	goto	u4010
 14506  0FF0                     u4011:	
 14507  0FF0  2FD8               	goto	l6499
 14508  0FF1                     u4010:	
 14509  0FF1                     l6507:	
 14510  0FF1  0829               	movf	___awmod@sign,w
 14511  0FF2  1903               	btfsc	3,2
 14512  0FF3  2FF5               	goto	u4021
 14513  0FF4  2FF6               	goto	u4020
 14514  0FF5                     u4021:	
 14515  0FF5  2FFB               	goto	l6511
 14516  0FF6                     u4020:	
 14517  0FF6                     l6509:	
 14518  0FF6  09A5               	comf	___awmod@dividend,f
 14519  0FF7  09A6               	comf	___awmod@dividend+1,f
 14520  0FF8  0AA5               	incf	___awmod@dividend,f
 14521  0FF9  1903               	skipnz
 14522  0FFA  0AA6               	incf	___awmod@dividend+1,f
 14523  0FFB                     l6511:	
 14524  0FFB  0826               	movf	___awmod@dividend+1,w
 14525  0FFC  00A4               	movwf	?___awmod+1
 14526  0FFD  0825               	movf	___awmod@dividend,w
 14527  0FFE  00A3               	movwf	?___awmod
 14528  0FFF                     l2031:	
 14529  0FFF  0008               	return
 14530  1000                     __end_of___awmod:	
 14531                           
 14532                           	psect	text29
 14533  05FE                     __ptext29:	
 14534 ;; *************** function ___awdiv *****************
 14535 ;; Defined at:
 14536 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 14537 ;; Parameters:    Size  Location     Type
 14538 ;;  divisor         2    3[BANK0 ] int 
 14539 ;;  dividend        2    5[BANK0 ] int 
 14540 ;; Auto vars:     Size  Location     Type
 14541 ;;  quotient        2   10[BANK0 ] int 
 14542 ;;  sign            1    9[BANK0 ] unsigned char 
 14543 ;;  counter         1    8[BANK0 ] unsigned char 
 14544 ;; Return value:  Size  Location     Type
 14545 ;;                  2    3[BANK0 ] int 
 14546 ;; Registers used:
 14547 ;;		wreg, status,2, status,0
 14548 ;; Tracked objects:
 14549 ;;		On entry : 0/0
 14550 ;;		On exit  : 0/0
 14551 ;;		Unchanged: 0/0
 14552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14553 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14554 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14555 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14556 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14557 ;;Total ram usage:        9 bytes
 14558 ;; Hardware stack levels used:    1
 14559 ;; Hardware stack levels required when called:    6
 14560 ;; This function calls:
 14561 ;;		Nothing
 14562 ;; This function is called by:
 14563 ;;		_recTempThresh
 14564 ;;		_recMinutes
 14565 ;;		_recHour
 14566 ;;		_limitTempThreshUnits
 14567 ;;		_limitHoursUnits
 14568 ;; This function uses a non-reentrant model
 14569 ;;
 14570                           
 14571                           
 14572                           ;psect for function ___awdiv
 14573  05FE                     ___awdiv:	
 14574  05FE                     l6433:	
 14575                           ;incstack = 0
 14576                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 14577                           
 14578  05FE  0020               	movlb	0	; select bank0
 14579  05FF  01A9               	clrf	___awdiv@sign
 14580  0600                     l6435:	
 14581  0600  1FA4               	btfss	___awdiv@divisor+1,7
 14582  0601  2E03               	goto	u3841
 14583  0602  2E04               	goto	u3840
 14584  0603                     u3841:	
 14585  0603  2E0B               	goto	l6441
 14586  0604                     u3840:	
 14587  0604                     l6437:	
 14588  0604  09A3               	comf	___awdiv@divisor,f
 14589  0605  09A4               	comf	___awdiv@divisor+1,f
 14590  0606  0AA3               	incf	___awdiv@divisor,f
 14591  0607  1903               	skipnz
 14592  0608  0AA4               	incf	___awdiv@divisor+1,f
 14593  0609                     l6439:	
 14594  0609  01A9               	clrf	___awdiv@sign
 14595  060A  0AA9               	incf	___awdiv@sign,f
 14596  060B                     l6441:	
 14597  060B  1FA6               	btfss	___awdiv@dividend+1,7
 14598  060C  2E0E               	goto	u3851
 14599  060D  2E0F               	goto	u3850
 14600  060E                     u3851:	
 14601  060E  2E18               	goto	l6447
 14602  060F                     u3850:	
 14603  060F                     l6443:	
 14604  060F  09A5               	comf	___awdiv@dividend,f
 14605  0610  09A6               	comf	___awdiv@dividend+1,f
 14606  0611  0AA5               	incf	___awdiv@dividend,f
 14607  0612  1903               	skipnz
 14608  0613  0AA6               	incf	___awdiv@dividend+1,f
 14609  0614                     l6445:	
 14610  0614  3001               	movlw	1
 14611  0615  00A7               	movwf	??___awdiv
 14612  0616  0827               	movf	??___awdiv,w
 14613  0617  06A9               	xorwf	___awdiv@sign,f
 14614  0618                     l6447:	
 14615  0618  01AA               	clrf	___awdiv@quotient
 14616  0619  01AB               	clrf	___awdiv@quotient+1
 14617  061A                     l6449:	
 14618  061A  0823               	movf	___awdiv@divisor,w
 14619  061B  0424               	iorwf	___awdiv@divisor+1,w
 14620  061C  1903               	btfsc	3,2
 14621  061D  2E1F               	goto	u3861
 14622  061E  2E20               	goto	u3860
 14623  061F                     u3861:	
 14624  061F  2E4F               	goto	l6469
 14625  0620                     u3860:	
 14626  0620                     l6451:	
 14627  0620  01A8               	clrf	___awdiv@counter
 14628  0621  0AA8               	incf	___awdiv@counter,f
 14629  0622  2E2C               	goto	l6457
 14630  0623                     l6453:	
 14631  0623  3001               	movlw	1
 14632  0624                     u3875:	
 14633  0624  35A3               	lslf	___awdiv@divisor,f
 14634  0625  0DA4               	rlf	___awdiv@divisor+1,f
 14635  0626  0B89               	decfsz	9,f
 14636  0627  2E24               	goto	u3875
 14637  0628                     l6455:	
 14638  0628  3001               	movlw	1
 14639  0629  00A7               	movwf	??___awdiv
 14640  062A  0827               	movf	??___awdiv,w
 14641  062B  07A8               	addwf	___awdiv@counter,f
 14642  062C                     l6457:	
 14643  062C  1FA4               	btfss	___awdiv@divisor+1,7
 14644  062D  2E2F               	goto	u3881
 14645  062E  2E30               	goto	u3880
 14646  062F                     u3881:	
 14647  062F  2E23               	goto	l6453
 14648  0630                     u3880:	
 14649  0630                     l6459:	
 14650  0630  3001               	movlw	1
 14651  0631                     u3895:	
 14652  0631  35AA               	lslf	___awdiv@quotient,f
 14653  0632  0DAB               	rlf	___awdiv@quotient+1,f
 14654  0633  0B89               	decfsz	9,f
 14655  0634  2E31               	goto	u3895
 14656  0635  0824               	movf	___awdiv@divisor+1,w
 14657  0636  0226               	subwf	___awdiv@dividend+1,w
 14658  0637  1D03               	skipz
 14659  0638  2E3B               	goto	u3905
 14660  0639  0823               	movf	___awdiv@divisor,w
 14661  063A  0225               	subwf	___awdiv@dividend,w
 14662  063B                     u3905:	
 14663  063B  1C03               	skipc
 14664  063C  2E3E               	goto	u3901
 14665  063D  2E3F               	goto	u3900
 14666  063E                     u3901:	
 14667  063E  2E44               	goto	l6465
 14668  063F                     u3900:	
 14669  063F                     l6461:	
 14670  063F  0823               	movf	___awdiv@divisor,w
 14671  0640  02A5               	subwf	___awdiv@dividend,f
 14672  0641  0824               	movf	___awdiv@divisor+1,w
 14673  0642  3BA6               	subwfb	___awdiv@dividend+1,f
 14674  0643                     l6463:	
 14675  0643  142A               	bsf	___awdiv@quotient,0
 14676  0644                     l6465:	
 14677  0644  3001               	movlw	1
 14678  0645                     u3915:	
 14679  0645  36A4               	lsrf	___awdiv@divisor+1,f
 14680  0646  0CA3               	rrf	___awdiv@divisor,f
 14681  0647  0B89               	decfsz	9,f
 14682  0648  2E45               	goto	u3915
 14683  0649                     l6467:	
 14684  0649  3001               	movlw	1
 14685  064A  02A8               	subwf	___awdiv@counter,f
 14686  064B  1D03               	btfss	3,2
 14687  064C  2E4E               	goto	u3921
 14688  064D  2E4F               	goto	u3920
 14689  064E                     u3921:	
 14690  064E  2E30               	goto	l6459
 14691  064F                     u3920:	
 14692  064F                     l6469:	
 14693  064F  0829               	movf	___awdiv@sign,w
 14694  0650  1903               	btfsc	3,2
 14695  0651  2E53               	goto	u3931
 14696  0652  2E54               	goto	u3930
 14697  0653                     u3931:	
 14698  0653  2E59               	goto	l6473
 14699  0654                     u3930:	
 14700  0654                     l6471:	
 14701  0654  09AA               	comf	___awdiv@quotient,f
 14702  0655  09AB               	comf	___awdiv@quotient+1,f
 14703  0656  0AAA               	incf	___awdiv@quotient,f
 14704  0657  1903               	skipnz
 14705  0658  0AAB               	incf	___awdiv@quotient+1,f
 14706  0659                     l6473:	
 14707  0659  082B               	movf	___awdiv@quotient+1,w
 14708  065A  00A4               	movwf	?___awdiv+1
 14709  065B  082A               	movf	___awdiv@quotient,w
 14710  065C  00A3               	movwf	?___awdiv
 14711  065D                     l2018:	
 14712  065D  0008               	return
 14713  065E                     __end_of___awdiv:	
 14714                           
 14715                           	psect	text30
 14716  0EBE                     __ptext30:	
 14717 ;; *************** function _checkDebounceSW2 *****************
 14718 ;; Defined at:
 14719 ;;		line 787 in file "main.c"
 14720 ;; Parameters:    Size  Location     Type
 14721 ;;		None
 14722 ;; Auto vars:     Size  Location     Type
 14723 ;;		None
 14724 ;; Return value:  Size  Location     Type
 14725 ;;                  1    wreg      unsigned char 
 14726 ;; Registers used:
 14727 ;;		wreg, status,2, status,0
 14728 ;; Tracked objects:
 14729 ;;		On entry : 0/0
 14730 ;;		On exit  : 0/0
 14731 ;;		Unchanged: 0/0
 14732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14735 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14736 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14737 ;;Total ram usage:        7 bytes
 14738 ;; Hardware stack levels used:    1
 14739 ;; Hardware stack levels required when called:    6
 14740 ;; This function calls:
 14741 ;;		Nothing
 14742 ;; This function is called by:
 14743 ;;		_config_routine
 14744 ;;		_selectSubfield
 14745 ;;		_increment_subfield
 14746 ;; This function uses a non-reentrant model
 14747 ;;
 14748                           
 14749                           
 14750                           ;psect for function _checkDebounceSW2
 14751  0EBE                     _checkDebounceSW2:	
 14752  0EBE                     l6557:	
 14753                           ;incstack = 0
 14754                           ; Regs used in _checkDebounceSW2: [wreg+status,2+status,0]
 14755                           
 14756                           
 14757                           ;main.c: 790:     if(clkms - last_ms2 < 0){
 14758  0EBE  087D               	movf	_clkms,w	;volatile
 14759  0EBF  0020               	movlb	0	; select bank0
 14760  0EC0  00A3               	movwf	??_checkDebounceSW2
 14761  0EC1  01A4               	clrf	??_checkDebounceSW2+1
 14762  0EC2  0824               	movf	??_checkDebounceSW2+1,w
 14763  0EC3  00A6               	movwf	??_checkDebounceSW2+3
 14764  0EC4  0858               	movf	_last_ms2,w
 14765  0EC5  0223               	subwf	??_checkDebounceSW2,w
 14766  0EC6  00A5               	movwf	??_checkDebounceSW2+2
 14767  0EC7  1C03               	skipc
 14768  0EC8  03A6               	decf	??_checkDebounceSW2+3,f
 14769  0EC9  1FA6               	btfss	??_checkDebounceSW2+3,7
 14770  0ECA  2ECC               	goto	u4061
 14771  0ECB  2ECD               	goto	u4060
 14772  0ECC                     u4061:	
 14773  0ECC  2EF1               	goto	l6565
 14774  0ECD                     u4060:	
 14775  0ECD                     l6559:	
 14776                           
 14777                           ;main.c: 792:         if ((200 - last_ms2)+ clkms > 10 ){
 14778  0ECD  087D               	movf	_clkms,w	;volatile
 14779  0ECE  00A3               	movwf	??_checkDebounceSW2
 14780  0ECF  01A4               	clrf	??_checkDebounceSW2+1
 14781  0ED0  0824               	movf	??_checkDebounceSW2+1,w
 14782  0ED1  00A6               	movwf	??_checkDebounceSW2+3
 14783  0ED2  0858               	movf	_last_ms2,w
 14784  0ED3  0223               	subwf	??_checkDebounceSW2,w
 14785  0ED4  00A5               	movwf	??_checkDebounceSW2+2
 14786  0ED5  1C03               	skipc
 14787  0ED6  03A6               	decf	??_checkDebounceSW2+3,f
 14788  0ED7  0825               	movf	??_checkDebounceSW2+2,w
 14789  0ED8  3EC8               	addlw	200
 14790  0ED9  00A7               	movwf	??_checkDebounceSW2+4
 14791  0EDA  3000               	movlw	0
 14792  0EDB  3D26               	addwfc	??_checkDebounceSW2+3,w
 14793  0EDC  00A8               	movwf	??_checkDebounceSW2+5
 14794  0EDD  0828               	movf	??_checkDebounceSW2+5,w
 14795  0EDE  3A80               	xorlw	128
 14796  0EDF  00A9               	movwf	??_checkDebounceSW2+6
 14797  0EE0  3080               	movlw	128
 14798  0EE1  0229               	subwf	??_checkDebounceSW2+6,w
 14799  0EE2  1D03               	skipz
 14800  0EE3  2EE6               	goto	u4075
 14801  0EE4  300B               	movlw	11
 14802  0EE5  0227               	subwf	??_checkDebounceSW2+4,w
 14803  0EE6                     u4075:	
 14804  0EE6  1C03               	skipc
 14805  0EE7  2EE9               	goto	u4071
 14806  0EE8  2EEA               	goto	u4070
 14807  0EE9                     u4071:	
 14808  0EE9  2EF1               	goto	l6565
 14809  0EEA                     u4070:	
 14810  0EEA                     l6561:	
 14811                           
 14812                           ;main.c: 793:             last_ms2 = clkms;
 14813  0EEA  087D               	movf	_clkms,w	;volatile
 14814  0EEB  0020               	movlb	0	; select bank0
 14815  0EEC  00A3               	movwf	??_checkDebounceSW2
 14816  0EED  0823               	movf	??_checkDebounceSW2,w
 14817  0EEE  00D8               	movwf	_last_ms2
 14818                           
 14819                           ;main.c: 794:             return 1;
 14820  0EEF  3001               	movlw	1
 14821  0EF0  2F0A               	goto	l1488
 14822  0EF1                     l6565:	
 14823                           
 14824                           ;main.c: 798:     if(clkms - last_ms2 < 10){
 14825  0EF1  087D               	movf	_clkms,w	;volatile
 14826  0EF2  0020               	movlb	0	; select bank0
 14827  0EF3  00A3               	movwf	??_checkDebounceSW2
 14828  0EF4  01A4               	clrf	??_checkDebounceSW2+1
 14829  0EF5  0824               	movf	??_checkDebounceSW2+1,w
 14830  0EF6  00A6               	movwf	??_checkDebounceSW2+3
 14831  0EF7  0858               	movf	_last_ms2,w
 14832  0EF8  0223               	subwf	??_checkDebounceSW2,w
 14833  0EF9  00A5               	movwf	??_checkDebounceSW2+2
 14834  0EFA  1C03               	skipc
 14835  0EFB  03A6               	decf	??_checkDebounceSW2+3,f
 14836  0EFC  0826               	movf	??_checkDebounceSW2+3,w
 14837  0EFD  3A80               	xorlw	128
 14838  0EFE  00A7               	movwf	??_checkDebounceSW2+4
 14839  0EFF  3080               	movlw	128
 14840  0F00  0227               	subwf	??_checkDebounceSW2+4,w
 14841  0F01  1D03               	skipz
 14842  0F02  2F05               	goto	u4085
 14843  0F03  300A               	movlw	10
 14844  0F04  0225               	subwf	??_checkDebounceSW2+2,w
 14845  0F05                     u4085:	
 14846  0F05  1803               	skipnc
 14847  0F06  2F08               	goto	u4081
 14848  0F07  2F09               	goto	u4080
 14849  0F08                     u4081:	
 14850  0F08  2EEA               	goto	l6561
 14851  0F09                     u4080:	
 14852  0F09                     l6567:	
 14853                           
 14854                           ;main.c: 799:         return 0;
 14855  0F09  3000               	movlw	0
 14856  0F0A                     l1488:	
 14857  0F0A  0008               	return
 14858  0F0B                     __end_of_checkDebounceSW2:	
 14859                           
 14860                           	psect	text31
 14861  0713                     __ptext31:	
 14862 ;; *************** function _checkDebounceSW1 *****************
 14863 ;; Defined at:
 14864 ;;		line 758 in file "main.c"
 14865 ;; Parameters:    Size  Location     Type
 14866 ;;		None
 14867 ;; Auto vars:     Size  Location     Type
 14868 ;;		None
 14869 ;; Return value:  Size  Location     Type
 14870 ;;                  1    wreg      unsigned char 
 14871 ;; Registers used:
 14872 ;;		wreg, status,2, status,0
 14873 ;; Tracked objects:
 14874 ;;		On entry : 0/0
 14875 ;;		On exit  : 0/0
 14876 ;;		Unchanged: 0/0
 14877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14880 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14881 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14882 ;;Total ram usage:        7 bytes
 14883 ;; Hardware stack levels used:    1
 14884 ;; Hardware stack levels required when called:    6
 14885 ;; This function calls:
 14886 ;;		Nothing
 14887 ;; This function is called by:
 14888 ;;		_config_routine
 14889 ;;		_selectSubfield
 14890 ;;		_increment_subfield
 14891 ;; This function uses a non-reentrant model
 14892 ;;
 14893                           
 14894                           
 14895                           ;psect for function _checkDebounceSW1
 14896  0713                     _checkDebounceSW1:	
 14897  0713                     l6531:	
 14898                           ;incstack = 0
 14899                           ; Regs used in _checkDebounceSW1: [wreg+status,2+status,0]
 14900                           
 14901                           
 14902                           ;main.c: 759:     PIE4bits.TMR1IE = 0;
 14903  0713  002E               	movlb	14	; select bank14
 14904  0714  101A               	bcf	26,0	;volatile
 14905  0715                     l6533:	
 14906                           
 14907                           ;main.c: 761:     if(clkms - last_ms < 0){
 14908  0715  087D               	movf	_clkms,w	;volatile
 14909  0716  0020               	movlb	0	; select bank0
 14910  0717  00A3               	movwf	??_checkDebounceSW1
 14911  0718  01A4               	clrf	??_checkDebounceSW1+1
 14912  0719  0824               	movf	??_checkDebounceSW1+1,w
 14913  071A  00A6               	movwf	??_checkDebounceSW1+3
 14914  071B  0859               	movf	_last_ms,w
 14915  071C  0223               	subwf	??_checkDebounceSW1,w
 14916  071D  00A5               	movwf	??_checkDebounceSW1+2
 14917  071E  1C03               	skipc
 14918  071F  03A6               	decf	??_checkDebounceSW1+3,f
 14919  0720  1FA6               	btfss	??_checkDebounceSW1+3,7
 14920  0721  2F23               	goto	u4031
 14921  0722  2F24               	goto	u4030
 14922  0723                     u4031:	
 14923  0723  2F4A               	goto	l6543
 14924  0724                     u4030:	
 14925  0724                     l6535:	
 14926                           
 14927                           ;main.c: 763:         if ((200 - last_ms)+ clkms > 10 ){
 14928  0724  087D               	movf	_clkms,w	;volatile
 14929  0725  00A3               	movwf	??_checkDebounceSW1
 14930  0726  01A4               	clrf	??_checkDebounceSW1+1
 14931  0727  0824               	movf	??_checkDebounceSW1+1,w
 14932  0728  00A6               	movwf	??_checkDebounceSW1+3
 14933  0729  0859               	movf	_last_ms,w
 14934  072A  0223               	subwf	??_checkDebounceSW1,w
 14935  072B  00A5               	movwf	??_checkDebounceSW1+2
 14936  072C  1C03               	skipc
 14937  072D  03A6               	decf	??_checkDebounceSW1+3,f
 14938  072E  0825               	movf	??_checkDebounceSW1+2,w
 14939  072F  3EC8               	addlw	200
 14940  0730  00A7               	movwf	??_checkDebounceSW1+4
 14941  0731  3000               	movlw	0
 14942  0732  3D26               	addwfc	??_checkDebounceSW1+3,w
 14943  0733  00A8               	movwf	??_checkDebounceSW1+5
 14944  0734  0828               	movf	??_checkDebounceSW1+5,w
 14945  0735  3A80               	xorlw	128
 14946  0736  00A9               	movwf	??_checkDebounceSW1+6
 14947  0737  3080               	movlw	128
 14948  0738  0229               	subwf	??_checkDebounceSW1+6,w
 14949  0739  1D03               	skipz
 14950  073A  2F3D               	goto	u4045
 14951  073B  300B               	movlw	11
 14952  073C  0227               	subwf	??_checkDebounceSW1+4,w
 14953  073D                     u4045:	
 14954  073D  1C03               	skipc
 14955  073E  2F40               	goto	u4041
 14956  073F  2F41               	goto	u4040
 14957  0740                     u4041:	
 14958  0740  2F4A               	goto	l6543
 14959  0741                     u4040:	
 14960  0741                     l6537:	
 14961                           
 14962                           ;main.c: 764:             last_ms = clkms;
 14963  0741  087D               	movf	_clkms,w	;volatile
 14964  0742  0020               	movlb	0	; select bank0
 14965  0743  00A3               	movwf	??_checkDebounceSW1
 14966  0744  0823               	movf	??_checkDebounceSW1,w
 14967  0745  00D9               	movwf	_last_ms
 14968  0746                     l6539:	
 14969                           
 14970                           ;main.c: 765:             PIE4bits.TMR1IE = 1;
 14971  0746  002E               	movlb	14	; select bank14
 14972  0747  141A               	bsf	26,0	;volatile
 14973                           
 14974                           ;main.c: 766:             return 1;
 14975  0748  3001               	movlw	1
 14976  0749  2F6C               	goto	l1481
 14977  074A                     l6543:	
 14978                           
 14979                           ;main.c: 770:     if(clkms - last_ms < 10){
 14980  074A  087D               	movf	_clkms,w	;volatile
 14981  074B  0020               	movlb	0	; select bank0
 14982  074C  00A3               	movwf	??_checkDebounceSW1
 14983  074D  01A4               	clrf	??_checkDebounceSW1+1
 14984  074E  0824               	movf	??_checkDebounceSW1+1,w
 14985  074F  00A6               	movwf	??_checkDebounceSW1+3
 14986  0750  0859               	movf	_last_ms,w
 14987  0751  0223               	subwf	??_checkDebounceSW1,w
 14988  0752  00A5               	movwf	??_checkDebounceSW1+2
 14989  0753  1C03               	skipc
 14990  0754  03A6               	decf	??_checkDebounceSW1+3,f
 14991  0755  0826               	movf	??_checkDebounceSW1+3,w
 14992  0756  3A80               	xorlw	128
 14993  0757  00A7               	movwf	??_checkDebounceSW1+4
 14994  0758  3080               	movlw	128
 14995  0759  0227               	subwf	??_checkDebounceSW1+4,w
 14996  075A  1D03               	skipz
 14997  075B  2F5E               	goto	u4055
 14998  075C  300A               	movlw	10
 14999  075D  0225               	subwf	??_checkDebounceSW1+2,w
 15000  075E                     u4055:	
 15001  075E  1803               	skipnc
 15002  075F  2F61               	goto	u4051
 15003  0760  2F62               	goto	u4050
 15004  0761                     u4051:	
 15005  0761  2F64               	goto	l6551
 15006  0762                     u4050:	
 15007  0762                     l6545:	
 15008                           
 15009                           ;main.c: 771:         return 0;
 15010  0762  3000               	movlw	0
 15011  0763  2F6C               	goto	l1481
 15012  0764                     l6551:	
 15013                           
 15014                           ;main.c: 774:         last_ms = clkms;
 15015  0764  087D               	movf	_clkms,w	;volatile
 15016  0765  0020               	movlb	0	; select bank0
 15017  0766  00A3               	movwf	??_checkDebounceSW1
 15018  0767  0823               	movf	??_checkDebounceSW1,w
 15019  0768  00D9               	movwf	_last_ms
 15020  0769                     l6553:	
 15021                           
 15022                           ;main.c: 775:         PIE4bits.TMR1IE = 1;
 15023  0769  002E               	movlb	14	; select bank14
 15024  076A  141A               	bsf	26,0	;volatile
 15025                           
 15026                           ;main.c: 776:         return 1;
 15027  076B  3001               	movlw	1
 15028  076C                     l1481:	
 15029  076C  0008               	return
 15030  076D                     __end_of_checkDebounceSW1:	
 15031                           
 15032                           	psect	text32
 15033  04A7                     __ptext32:	
 15034 ;; *************** function _getSubfieldInfo *****************
 15035 ;; Defined at:
 15036 ;;		line 436 in file "main.c"
 15037 ;; Parameters:    Size  Location     Type
 15038 ;;		None
 15039 ;; Auto vars:     Size  Location     Type
 15040 ;;		None
 15041 ;; Return value:  Size  Location     Type
 15042 ;;                  1    wreg      void 
 15043 ;; Registers used:
 15044 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 15045 ;; Tracked objects:
 15046 ;;		On entry : 0/0
 15047 ;;		On exit  : 0/0
 15048 ;;		Unchanged: 0/0
 15049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15054 ;;Total ram usage:        0 bytes
 15055 ;; Hardware stack levels used:    1
 15056 ;; Hardware stack levels required when called:    6
 15057 ;; This function calls:
 15058 ;;		Nothing
 15059 ;; This function is called by:
 15060 ;;		_selectSubfield
 15061 ;; This function uses a non-reentrant model
 15062 ;;
 15063                           
 15064                           
 15065                           ;psect for function _getSubfieldInfo
 15066  04A7                     _getSubfieldInfo:	
 15067  04A7                     l6661:	
 15068                           ;incstack = 0
 15069                           ; Regs used in _getSubfieldInfo: [wreg-fsr0h+status,2+status,0]
 15070                           
 15071                           
 15072                           ;main.c: 437:     switch(mode_field_subfield[0]){
 15073  04A7  2D10               	goto	l6689
 15074  04A8                     l6663:	
 15075                           
 15076                           ;main.c: 441:                     subfield_info.limit = (unsigned char(*)(void))2;
 15077  04A8  3002               	movlw	2
 15078  04A9  00C1               	movwf	_subfield_info
 15079  04AA  3000               	movlw	0
 15080  04AB  00C2               	movwf	_subfield_info+1
 15081                           
 15082                           ;main.c: 442:                     subfield_info.reconstruct_subfield = &recHour;
 15083  04AC  300F               	movlw	low _recHour
 15084  04AD  00C3               	movwf	low ((_subfield_info| 0+2))
 15085  04AE  300D               	movlw	high _recHour
 15086  04AF  00C4               	movwf	(low ((_subfield_info| 0+2))+1)
 15087                           
 15088                           ;main.c: 443:                 break;
 15089  04B0  2D24               	goto	l1379
 15090  04B1                     l6665:	
 15091                           
 15092                           ;main.c: 445:                     subfield_info.limit = &limitHoursUnits;
 15093  04B1  3000               	movlw	0
 15094  04B2  00C1               	movwf	_subfield_info
 15095  04B3  3000               	movlw	0
 15096  04B4  00C2               	movwf	_subfield_info+1
 15097                           
 15098                           ;main.c: 446:                     subfield_info.reconstruct_subfield = &recHour;
 15099  04B5  300F               	movlw	low _recHour
 15100  04B6  00C3               	movwf	low ((_subfield_info| 0+2))
 15101  04B7  300D               	movlw	high _recHour
 15102  04B8  00C4               	movwf	(low ((_subfield_info| 0+2))+1)
 15103                           
 15104                           ;main.c: 447:                 break;
 15105  04B9  2D24               	goto	l1379
 15106  04BA                     l6667:	
 15107                           
 15108                           ;main.c: 449:                     subfield_info.limit = (unsigned char(*)(void))5;
 15109  04BA  3005               	movlw	5
 15110  04BB  00C1               	movwf	_subfield_info
 15111  04BC  3000               	movlw	0
 15112  04BD  00C2               	movwf	_subfield_info+1
 15113                           
 15114                           ;main.c: 450:                     subfield_info.reconstruct_subfield = &recMinutes;
 15115  04BE  3040               	movlw	low _recMinutes
 15116  04BF  00C3               	movwf	low ((_subfield_info| 0+2))
 15117  04C0  300D               	movlw	high _recMinutes
 15118  04C1  00C4               	movwf	(low ((_subfield_info| 0+2))+1)
 15119                           
 15120                           ;main.c: 451:                 break;
 15121  04C2  2D24               	goto	l1379
 15122  04C3                     l6669:	
 15123                           
 15124                           ;main.c: 453:                     subfield_info.limit = (unsigned char(*)(void))9;
 15125  04C3  3009               	movlw	9
 15126  04C4  00C1               	movwf	_subfield_info
 15127  04C5  3000               	movlw	0
 15128  04C6  00C2               	movwf	_subfield_info+1
 15129                           
 15130                           ;main.c: 454:                     subfield_info.reconstruct_subfield = &recMinutes;
 15131  04C7  3040               	movlw	low _recMinutes
 15132  04C8  00C3               	movwf	low ((_subfield_info| 0+2))
 15133  04C9  300D               	movlw	high _recMinutes
 15134  04CA  00C4               	movwf	(low ((_subfield_info| 0+2))+1)
 15135                           
 15136                           ;main.c: 455:                 break;
 15137  04CB  2D24               	goto	l1379
 15138  04CC                     l6673:	
 15139                           
 15140                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15141                           ; Switch size 1, requested type "simple"
 15142                           ; Number of cases is 1, Range of values is 0 to 0
 15143                           ; switch strategies available:
 15144                           ; Name         Instructions Cycles
 15145                           ; simple_byte            4     3 (average)
 15146                           ; direct_byte            8     6 (fixed)
 15147                           ; jumptable            260     6 (fixed)
 15148                           ;	Chosen strategy is simple_byte
 15149  04CC  0862               	movf	_mode_field_subfield+3,w
 15150  04CD  3A00               	xorlw	0	; case 0
 15151  04CE  1903               	skipnz
 15152  04CF  2CD1               	goto	l7793
 15153  04D0  2D24               	goto	l1379
 15154  04D1                     l7793:	
 15155                           
 15156                           ; Switch size 1, requested type "simple"
 15157                           ; Number of cases is 4, Range of values is 1 to 4
 15158                           ; switch strategies available:
 15159                           ; Name         Instructions Cycles
 15160                           ; simple_byte           13     7 (average)
 15161                           ; direct_byte           17     9 (fixed)
 15162                           ; jumptable            263     9 (fixed)
 15163                           ;	Chosen strategy is simple_byte
 15164  04D1  0861               	movf	_mode_field_subfield+2,w
 15165  04D2  3A01               	xorlw	1	; case 1
 15166  04D3  1903               	skipnz
 15167  04D4  2CA8               	goto	l6663
 15168  04D5  3A03               	xorlw	3	; case 2
 15169  04D6  1903               	skipnz
 15170  04D7  2CB1               	goto	l6665
 15171  04D8  3A01               	xorlw	1	; case 3
 15172  04D9  1903               	skipnz
 15173  04DA  2CBA               	goto	l6667
 15174  04DB  3A07               	xorlw	7	; case 4
 15175  04DC  1903               	skipnz
 15176  04DD  2CC3               	goto	l6669
 15177  04DE  2D24               	goto	l1379
 15178  04DF                     l6675:	
 15179                           
 15180                           ;main.c: 460:             subfield_info.limit = (unsigned char(*)(void))1;
 15181  04DF  3001               	movlw	1
 15182  04E0  00C1               	movwf	_subfield_info
 15183  04E1  3000               	movlw	0
 15184  04E2  00C2               	movwf	_subfield_info+1
 15185                           
 15186                           ;main.c: 461:             subfield_info.reconstruct_subfield = &recAlarm;
 15187  04E3  3083               	movlw	low _recAlarm
 15188  04E4  00C3               	movwf	low ((_subfield_info| 0+2))
 15189  04E5  3008               	movlw	high _recAlarm
 15190  04E6  00C4               	movwf	(low ((_subfield_info| 0+2))+1)
 15191                           
 15192                           ;main.c: 462:         break;
 15193  04E7  2D24               	goto	l1379
 15194  04E8                     l6677:	
 15195                           
 15196                           ;main.c: 467:                     subfield_info.limit = (unsigned char(*)(void))5;
 15197  04E8  3005               	movlw	5
 15198  04E9  00C1               	movwf	_subfield_info
 15199  04EA  3000               	movlw	0
 15200  04EB  00C2               	movwf	_subfield_info+1
 15201                           
 15202                           ;main.c: 468:                     subfield_info.reconstruct_subfield = &recTempThresh;
 15203  04EC  30DE               	movlw	low _recTempThresh
 15204  04ED  00C3               	movwf	low ((_subfield_info| 0+2))
 15205  04EE  300C               	movlw	high _recTempThresh
 15206  04EF  00C4               	movwf	(low ((_subfield_info| 0+2))+1)
 15207                           
 15208                           ;main.c: 469:                 break;
 15209  04F0  2D24               	goto	l1379
 15210  04F1                     l6679:	
 15211                           
 15212                           ;main.c: 471:                     subfield_info.limit = &limitTempThreshUnits;
 15213  04F1  3000               	movlw	0
 15214  04F2  00C1               	movwf	_subfield_info
 15215  04F3  3000               	movlw	0
 15216  04F4  00C2               	movwf	_subfield_info+1
 15217                           
 15218                           ;main.c: 472:                     subfield_info.reconstruct_subfield = &recTempThresh;
 15219  04F5  30DE               	movlw	low _recTempThresh
 15220  04F6  00C3               	movwf	low ((_subfield_info| 0+2))
 15221  04F7  300C               	movlw	high _recTempThresh
 15222  04F8  00C4               	movwf	(low ((_subfield_info| 0+2))+1)
 15223                           
 15224                           ;main.c: 473:                 break;
 15225  04F9  2D24               	goto	l1379
 15226  04FA                     l6683:	
 15227                           
 15228                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15229                           ; Switch size 1, requested type "simple"
 15230                           ; Number of cases is 1, Range of values is 0 to 0
 15231                           ; switch strategies available:
 15232                           ; Name         Instructions Cycles
 15233                           ; simple_byte            4     3 (average)
 15234                           ; direct_byte            8     6 (fixed)
 15235                           ; jumptable            260     6 (fixed)
 15236                           ;	Chosen strategy is simple_byte
 15237  04FA  0862               	movf	_mode_field_subfield+3,w
 15238  04FB  3A00               	xorlw	0	; case 0
 15239  04FC  1903               	skipnz
 15240  04FD  2CFF               	goto	l7795
 15241  04FE  2D24               	goto	l1379
 15242  04FF                     l7795:	
 15243                           
 15244                           ; Switch size 1, requested type "simple"
 15245                           ; Number of cases is 2, Range of values is 1 to 2
 15246                           ; switch strategies available:
 15247                           ; Name         Instructions Cycles
 15248                           ; simple_byte            7     4 (average)
 15249                           ; direct_byte           13     9 (fixed)
 15250                           ; jumptable            263     9 (fixed)
 15251                           ;	Chosen strategy is simple_byte
 15252  04FF  0861               	movf	_mode_field_subfield+2,w
 15253  0500  3A01               	xorlw	1	; case 1
 15254  0501  1903               	skipnz
 15255  0502  2CE8               	goto	l6677
 15256  0503  3A03               	xorlw	3	; case 2
 15257  0504  1903               	skipnz
 15258  0505  2CF1               	goto	l6679
 15259  0506  2D24               	goto	l1379
 15260  0507                     l6685:	
 15261                           
 15262                           ;main.c: 478:             subfield_info.limit = (unsigned char(*)(void))3;
 15263  0507  3003               	movlw	3
 15264  0508  00C1               	movwf	_subfield_info
 15265  0509  3000               	movlw	0
 15266  050A  00C2               	movwf	_subfield_info+1
 15267                           
 15268                           ;main.c: 479:             subfield_info.reconstruct_subfield = &recLumThresh;
 15269  050B  3089               	movlw	low _recLumThresh
 15270  050C  00C3               	movwf	low ((_subfield_info| 0+2))
 15271  050D  3008               	movlw	high _recLumThresh
 15272  050E  00C4               	movwf	(low ((_subfield_info| 0+2))+1)
 15273                           
 15274                           ;main.c: 480:         break;
 15275  050F  2D24               	goto	l1379
 15276  0510                     l6689:	
 15277                           
 15278                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15279                           ; Switch size 1, requested type "simple"
 15280                           ; Number of cases is 1, Range of values is 0 to 0
 15281                           ; switch strategies available:
 15282                           ; Name         Instructions Cycles
 15283                           ; simple_byte            4     3 (average)
 15284                           ; direct_byte            8     6 (fixed)
 15285                           ; jumptable            260     6 (fixed)
 15286                           ;	Chosen strategy is simple_byte
 15287  0510  0020               	movlb	0	; select bank0
 15288  0511  0860               	movf	_mode_field_subfield+1,w
 15289  0512  3A00               	xorlw	0	; case 0
 15290  0513  1903               	skipnz
 15291  0514  2D16               	goto	l7797
 15292  0515  2D24               	goto	l1379
 15293  0516                     l7797:	
 15294                           
 15295                           ; Switch size 1, requested type "simple"
 15296                           ; Number of cases is 4, Range of values is 1 to 4
 15297                           ; switch strategies available:
 15298                           ; Name         Instructions Cycles
 15299                           ; simple_byte           13     7 (average)
 15300                           ; direct_byte           17     9 (fixed)
 15301                           ; jumptable            263     9 (fixed)
 15302                           ;	Chosen strategy is simple_byte
 15303  0516  085F               	movf	_mode_field_subfield,w
 15304  0517  3A01               	xorlw	1	; case 1
 15305  0518  1903               	skipnz
 15306  0519  2CCC               	goto	l6673
 15307  051A  3A03               	xorlw	3	; case 2
 15308  051B  1903               	skipnz
 15309  051C  2CDF               	goto	l6675
 15310  051D  3A01               	xorlw	1	; case 3
 15311  051E  1903               	skipnz
 15312  051F  2CFA               	goto	l6683
 15313  0520  3A07               	xorlw	7	; case 4
 15314  0521  1903               	skipnz
 15315  0522  2D07               	goto	l6685
 15316  0523  2D24               	goto	l1379
 15317  0524                     l1379:	
 15318  0524  0008               	return
 15319  0525                     __end_of_getSubfieldInfo:	
 15320                           
 15321                           	psect	text33
 15322  0BAD                     __ptext33:	
 15323 ;; *************** function _mode_select_LED *****************
 15324 ;; Defined at:
 15325 ;;		line 812 in file "main.c"
 15326 ;; Parameters:    Size  Location     Type
 15327 ;;		None
 15328 ;; Auto vars:     Size  Location     Type
 15329 ;;		None
 15330 ;; Return value:  Size  Location     Type
 15331 ;;                  1    wreg      void 
 15332 ;; Registers used:
 15333 ;;		wreg, status,2, status,0, pclath, cstack
 15334 ;; Tracked objects:
 15335 ;;		On entry : 0/0
 15336 ;;		On exit  : 0/0
 15337 ;;		Unchanged: 0/0
 15338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15341 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15342 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15343 ;;Total ram usage:        1 bytes
 15344 ;; Hardware stack levels used:    1
 15345 ;; Hardware stack levels required when called:    7
 15346 ;; This function calls:
 15347 ;;		_PWM6_LoadDutyValue
 15348 ;; This function is called by:
 15349 ;;		_config_routine
 15350 ;; This function uses a non-reentrant model
 15351 ;;
 15352                           
 15353                           
 15354                           ;psect for function _mode_select_LED
 15355  0BAD                     _mode_select_LED:	
 15356  0BAD                     l6919:	
 15357                           ;incstack = 0
 15358                           ; Regs used in _mode_select_LED: [wreg+status,2+status,0+pclath+cstack]
 15359                           
 15360                           
 15361                           ;main.c: 815:     PWM6_LoadDutyValue(1023);
 15362  0BAD  30FF               	movlw	255
 15363  0BAE  0020               	movlb	0	; select bank0
 15364  0BAF  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15365  0BB0  3003               	movlw	3
 15366  0BB1  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15367  0BB2  318A  22EA  318B   	fcall	_PWM6_LoadDutyValue
 15368  0BB5                     l6921:	
 15369  0BB5  0020               	movlb	0	; select bank0
 15370  0BB6  1616               	bsf	22,4	;volatile
 15371  0BB7                     l6923:	
 15372                           
 15373                           ;main.c: 817:     _delay((unsigned long)((500)*(1000000/4000.0)));
 15374  0BB7  30A3               	movlw	163
 15375  0BB8  0020               	movlb	0	; select bank0
 15376  0BB9  00AD               	movwf	??_mode_select_LED
 15377  0BBA  3055               	movlw	85
 15378  0BBB                     u5217:	
 15379  0BBB  0B89               	decfsz	9,f
 15380  0BBC  2BBB               	goto	u5217
 15381  0BBD  0BAD               	decfsz	??_mode_select_LED,f
 15382  0BBE  2BBB               	goto	u5217
 15383  0BBF                     l6925:	
 15384  0BBF  0020               	movlb	0	; select bank0
 15385  0BC0  1696               	bsf	22,5	;volatile
 15386  0BC1                     l6927:	
 15387                           
 15388                           ;main.c: 819:     _delay((unsigned long)((500)*(1000000/4000.0)));
 15389  0BC1  30A3               	movlw	163
 15390  0BC2  0020               	movlb	0	; select bank0
 15391  0BC3  00AD               	movwf	??_mode_select_LED
 15392  0BC4  3055               	movlw	85
 15393  0BC5                     u5227:	
 15394  0BC5  0B89               	decfsz	9,f
 15395  0BC6  2BC5               	goto	u5227
 15396  0BC7  0BAD               	decfsz	??_mode_select_LED,f
 15397  0BC8  2BC5               	goto	u5227
 15398  0BC9                     l6929:	
 15399  0BC9  0020               	movlb	0	; select bank0
 15400  0BCA  1216               	bcf	22,4	;volatile
 15401  0BCB                     l6931:	
 15402  0BCB  1296               	bcf	22,5	;volatile
 15403  0BCC                     l1501:	
 15404  0BCC  0008               	return
 15405  0BCD                     __end_of_mode_select_LED:	
 15406                           
 15407                           	psect	text34
 15408  065E                     __ptext34:	
 15409 ;; *************** function _all_LED *****************
 15410 ;; Defined at:
 15411 ;;		line 626 in file "main.c"
 15412 ;; Parameters:    Size  Location     Type
 15413 ;;		None
 15414 ;; Auto vars:     Size  Location     Type
 15415 ;;		None
 15416 ;; Return value:  Size  Location     Type
 15417 ;;                  1    wreg      void 
 15418 ;; Registers used:
 15419 ;;		wreg, status,2, status,0, pclath, cstack
 15420 ;; Tracked objects:
 15421 ;;		On entry : 0/0
 15422 ;;		On exit  : 0/0
 15423 ;;		Unchanged: 0/0
 15424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15427 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15428 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15429 ;;Total ram usage:        1 bytes
 15430 ;; Hardware stack levels used:    1
 15431 ;; Hardware stack levels required when called:    7
 15432 ;; This function calls:
 15433 ;;		_PWM6_LoadDutyValue
 15434 ;; This function is called by:
 15435 ;;		_config_routine
 15436 ;; This function uses a non-reentrant model
 15437 ;;
 15438                           
 15439                           
 15440                           ;psect for function _all_LED
 15441  065E                     _all_LED:	
 15442  065E                     l1425:	
 15443                           ;incstack = 0
 15444                           ; Regs used in _all_LED: [wreg+status,2+status,0+pclath+cstack]
 15445                           ;main.c: 628:     do { LATAbits.LATA7 = 1; } while(0);
 15446                           
 15447  065E  0020               	movlb	0	; select bank0
 15448  065F  1796               	bsf	22,7	;volatile
 15449  0660                     l6895:	
 15450                           
 15451                           ;main.c: 629:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15452  0660  3021               	movlw	33
 15453  0661  0020               	movlb	0	; select bank0
 15454  0662  00AD               	movwf	??_all_LED
 15455  0663  3076               	movlw	118
 15456  0664                     u5237:	
 15457  0664  0B89               	decfsz	9,f
 15458  0665  2E64               	goto	u5237
 15459  0666  0BAD               	decfsz	??_all_LED,f
 15460  0667  2E64               	goto	u5237
 15461  0668  0000               	nop
 15462  0669                     l6897:	
 15463  0669  0020               	movlb	0	; select bank0
 15464  066A  1396               	bcf	22,7	;volatile
 15465  066B                     l1428:	
 15466                           
 15467                           ;main.c: 631:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15468  066B  3021               	movlw	33
 15469  066C  0020               	movlb	0	; select bank0
 15470  066D  00AD               	movwf	??_all_LED
 15471  066E  3076               	movlw	118
 15472  066F                     u5247:	
 15473  066F  0B89               	decfsz	9,f
 15474  0670  2E6F               	goto	u5247
 15475  0671  0BAD               	decfsz	??_all_LED,f
 15476  0672  2E6F               	goto	u5247
 15477  0673  0000               	nop
 15478  0674                     l6899:	
 15479                           
 15480                           ;main.c: 633:     PWM6_LoadDutyValue(1023);
 15481  0674  30FF               	movlw	255
 15482  0675  0020               	movlb	0	; select bank0
 15483  0676  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15484  0677  3003               	movlw	3
 15485  0678  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15486  0679  318A  22EA  3186   	fcall	_PWM6_LoadDutyValue
 15487  067C                     l6901:	
 15488                           
 15489                           ;main.c: 634:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15490  067C  3021               	movlw	33
 15491  067D  0020               	movlb	0	; select bank0
 15492  067E  00AD               	movwf	??_all_LED
 15493  067F  3076               	movlw	118
 15494  0680                     u5257:	
 15495  0680  0B89               	decfsz	9,f
 15496  0681  2E80               	goto	u5257
 15497  0682  0BAD               	decfsz	??_all_LED,f
 15498  0683  2E80               	goto	u5257
 15499  0684  0000               	nop
 15500                           
 15501                           ;main.c: 636:     PWM6_LoadDutyValue(0);
 15502  0685  3000               	movlw	0
 15503  0686  0020               	movlb	0	; select bank0
 15504  0687  00A9               	movwf	PWM6_LoadDutyValue@dutyValue
 15505  0688  00AA               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15506  0689  318A  22EA  3186   	fcall	_PWM6_LoadDutyValue
 15507  068C                     l6903:	
 15508                           
 15509                           ;main.c: 637:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15510  068C  3021               	movlw	33
 15511  068D  0020               	movlb	0	; select bank0
 15512  068E  00AD               	movwf	??_all_LED
 15513  068F  3076               	movlw	118
 15514  0690                     u5267:	
 15515  0690  0B89               	decfsz	9,f
 15516  0691  2E90               	goto	u5267
 15517  0692  0BAD               	decfsz	??_all_LED,f
 15518  0693  2E90               	goto	u5267
 15519  0694  0000               	nop
 15520  0695                     l6905:	
 15521  0695  0020               	movlb	0	; select bank0
 15522  0696  1696               	bsf	22,5	;volatile
 15523  0697                     l6907:	
 15524                           
 15525                           ;main.c: 639:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15526  0697  3021               	movlw	33
 15527  0698  0020               	movlb	0	; select bank0
 15528  0699  00AD               	movwf	??_all_LED
 15529  069A  3076               	movlw	118
 15530  069B                     u5277:	
 15531  069B  0B89               	decfsz	9,f
 15532  069C  2E9B               	goto	u5277
 15533  069D  0BAD               	decfsz	??_all_LED,f
 15534  069E  2E9B               	goto	u5277
 15535  069F  0000               	nop
 15536  06A0                     l6909:	
 15537  06A0  0020               	movlb	0	; select bank0
 15538  06A1  1296               	bcf	22,5	;volatile
 15539  06A2                     l6911:	
 15540                           
 15541                           ;main.c: 641:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15542  06A2  3021               	movlw	33
 15543  06A3  0020               	movlb	0	; select bank0
 15544  06A4  00AD               	movwf	??_all_LED
 15545  06A5  3076               	movlw	118
 15546  06A6                     u5287:	
 15547  06A6  0B89               	decfsz	9,f
 15548  06A7  2EA6               	goto	u5287
 15549  06A8  0BAD               	decfsz	??_all_LED,f
 15550  06A9  2EA6               	goto	u5287
 15551  06AA  0000               	nop
 15552  06AB                     l6913:	
 15553  06AB  0020               	movlb	0	; select bank0
 15554  06AC  1616               	bsf	22,4	;volatile
 15555  06AD                     l6915:	
 15556                           
 15557                           ;main.c: 643:     _delay((unsigned long)((100)*(1000000/4000.0)));
 15558  06AD  3021               	movlw	33
 15559  06AE  0020               	movlb	0	; select bank0
 15560  06AF  00AD               	movwf	??_all_LED
 15561  06B0  3076               	movlw	118
 15562  06B1                     u5297:	
 15563  06B1  0B89               	decfsz	9,f
 15564  06B2  2EB1               	goto	u5297
 15565  06B3  0BAD               	decfsz	??_all_LED,f
 15566  06B4  2EB1               	goto	u5297
 15567  06B5  0000               	nop
 15568  06B6                     l6917:	
 15569  06B6  0020               	movlb	0	; select bank0
 15570  06B7  1216               	bcf	22,4	;volatile
 15571  06B8                     l1437:	
 15572  06B8  0008               	return
 15573  06B9                     __end_of_all_LED:	
 15574                           
 15575                           	psect	text35
 15576  0AEA                     __ptext35:	
 15577 ;; *************** function _PWM6_LoadDutyValue *****************
 15578 ;; Defined at:
 15579 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 15580 ;; Parameters:    Size  Location     Type
 15581 ;;  dutyValue       2    9[BANK0 ] unsigned short 
 15582 ;; Auto vars:     Size  Location     Type
 15583 ;;		None
 15584 ;; Return value:  Size  Location     Type
 15585 ;;                  1    wreg      void 
 15586 ;; Registers used:
 15587 ;;		wreg, status,2, status,0
 15588 ;; Tracked objects:
 15589 ;;		On entry : 0/0
 15590 ;;		On exit  : 0/0
 15591 ;;		Unchanged: 0/0
 15592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15593 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15595 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15596 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15597 ;;Total ram usage:        4 bytes
 15598 ;; Hardware stack levels used:    1
 15599 ;; Hardware stack levels required when called:    6
 15600 ;; This function calls:
 15601 ;;		Nothing
 15602 ;; This function is called by:
 15603 ;;		_main
 15604 ;;		_increment_subfield
 15605 ;;		_all_LED
 15606 ;;		_mod1_LED
 15607 ;;		_mod2_LED
 15608 ;;		_mod3_LED
 15609 ;;		_mod4_LED
 15610 ;;		_mode_select_LED
 15611 ;;		_representLed
 15612 ;; This function uses a non-reentrant model
 15613 ;;
 15614                           
 15615                           
 15616                           ;psect for function _PWM6_LoadDutyValue
 15617  0AEA                     _PWM6_LoadDutyValue:	
 15618  0AEA                     l6417:	
 15619                           ;incstack = 0
 15620                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 15621                           
 15622                           
 15623                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 15624  0AEA  0020               	movlb	0	; select bank0
 15625  0AEB  082A               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 15626  0AEC  00AC               	movwf	??_PWM6_LoadDutyValue+1
 15627  0AED  0829               	movf	PWM6_LoadDutyValue@dutyValue,w
 15628  0AEE  00AB               	movwf	??_PWM6_LoadDutyValue
 15629  0AEF  36AC               	lsrf	??_PWM6_LoadDutyValue+1,f
 15630  0AF0  0CAB               	rrf	??_PWM6_LoadDutyValue,f
 15631  0AF1  36AC               	lsrf	??_PWM6_LoadDutyValue+1,f
 15632  0AF2  0CAB               	rrf	??_PWM6_LoadDutyValue,f
 15633  0AF3  082B               	movf	??_PWM6_LoadDutyValue,w
 15634  0AF4  0027               	movlb	7	; select bank7
 15635  0AF5  008D               	movwf	13	;volatile
 15636                           
 15637                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 15638  0AF6  0020               	movlb	0	; select bank0
 15639  0AF7  0829               	movf	PWM6_LoadDutyValue@dutyValue,w
 15640  0AF8  3903               	andlw	3
 15641  0AF9  00AB               	movwf	??_PWM6_LoadDutyValue
 15642  0AFA  3005               	movlw	5
 15643  0AFB                     u3795:	
 15644  0AFB  35AB               	lslf	??_PWM6_LoadDutyValue,f
 15645  0AFC  3EFF               	addlw	-1
 15646  0AFD  1D03               	skipz
 15647  0AFE  2AFB               	goto	u3795
 15648  0AFF  352B               	lslf	??_PWM6_LoadDutyValue,w
 15649  0B00  0027               	movlb	7	; select bank7
 15650  0B01  008C               	movwf	12	;volatile
 15651  0B02                     l916:	
 15652  0B02  0008               	return
 15653  0B03                     __end_of_PWM6_LoadDutyValue:	
 15654                           
 15655                           	psect	text36
 15656  0846                     __ptext36:	
 15657 ;; *************** function _TMR0_StartTimer *****************
 15658 ;; Defined at:
 15659 ;;		line 89 in file "mcc_generated_files/tmr0.c"
 15660 ;; Parameters:    Size  Location     Type
 15661 ;;		None
 15662 ;; Auto vars:     Size  Location     Type
 15663 ;;		None
 15664 ;; Return value:  Size  Location     Type
 15665 ;;                  1    wreg      void 
 15666 ;; Registers used:
 15667 ;;		None
 15668 ;; Tracked objects:
 15669 ;;		On entry : 0/0
 15670 ;;		On exit  : 0/0
 15671 ;;		Unchanged: 0/0
 15672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15677 ;;Total ram usage:        0 bytes
 15678 ;; Hardware stack levels used:    1
 15679 ;; Hardware stack levels required when called:    6
 15680 ;; This function calls:
 15681 ;;		Nothing
 15682 ;; This function is called by:
 15683 ;;		_main
 15684 ;; This function uses a non-reentrant model
 15685 ;;
 15686                           
 15687                           
 15688                           ;psect for function _TMR0_StartTimer
 15689  0846                     _TMR0_StartTimer:	
 15690  0846                     l7101:	
 15691                           ;incstack = 0
 15692                           ; Regs used in _TMR0_StartTimer: []
 15693                           
 15694                           
 15695                           ;mcc_generated_files/tmr0.c: 92:     T0CON0bits.T0EN = 1;
 15696  0846  0020               	movlb	0	; select bank0
 15697  0847  179E               	bsf	30,7	;volatile
 15698  0848                     l1070:	
 15699  0848  0008               	return
 15700  0849                     __end_of_TMR0_StartTimer:	
 15701                           
 15702                           	psect	text37
 15703  0B37                     __ptext37:	
 15704 ;; *************** function _SYSTEM_Initialize *****************
 15705 ;; Defined at:
 15706 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15707 ;; Parameters:    Size  Location     Type
 15708 ;;		None
 15709 ;; Auto vars:     Size  Location     Type
 15710 ;;		None
 15711 ;; Return value:  Size  Location     Type
 15712 ;;                  1    wreg      void 
 15713 ;; Registers used:
 15714 ;;		wreg, status,2, status,0, pclath, cstack
 15715 ;; Tracked objects:
 15716 ;;		On entry : 0/0
 15717 ;;		On exit  : 0/0
 15718 ;;		Unchanged: 0/0
 15719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15724 ;;Total ram usage:        0 bytes
 15725 ;; Hardware stack levels used:    1
 15726 ;; Hardware stack levels required when called:    8
 15727 ;; This function calls:
 15728 ;;		_ADCC_Initialize
 15729 ;;		_EXT_INT_Initialize
 15730 ;;		_OSCILLATOR_Initialize
 15731 ;;		_PIN_MANAGER_Initialize
 15732 ;;		_PMD_Initialize
 15733 ;;		_PWM6_Initialize
 15734 ;;		_TMR0_Initialize
 15735 ;;		_TMR1_Initialize
 15736 ;;		_TMR2_Initialize
 15737 ;; This function is called by:
 15738 ;;		_main
 15739 ;; This function uses a non-reentrant model
 15740 ;;
 15741                           
 15742                           
 15743                           ;psect for function _SYSTEM_Initialize
 15744  0B37                     _SYSTEM_Initialize:	
 15745  0B37                     l7083:	
 15746                           ;incstack = 0
 15747                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15748                           
 15749                           
 15750                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 15751  0B37  3188  20C9  318B   	fcall	_PMD_Initialize
 15752  0B3A                     l7085:	
 15753                           
 15754                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 15755  0B3A  318E  262B  318B   	fcall	_PIN_MANAGER_Initialize
 15756  0B3D                     l7087:	
 15757                           
 15758                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 15759  0B3D  3188  20EC  318B   	fcall	_OSCILLATOR_Initialize
 15760  0B40                     l7089:	
 15761                           
 15762                           ;mcc_generated_files/mcc.c: 55:     PWM6_Initialize();
 15763  0B40  3189  2176  318B   	fcall	_PWM6_Initialize
 15764  0B43                     l7091:	
 15765                           
 15766                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 15767  0B43  318A  225E  318B   	fcall	_ADCC_Initialize
 15768  0B46                     l7093:	
 15769                           
 15770                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
 15771  0B46  318A  22B9  318B   	fcall	_TMR2_Initialize
 15772  0B49                     l7095:	
 15773                           
 15774                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 15775  0B49  3189  2183  318B   	fcall	_EXT_INT_Initialize
 15776  0B4C                     l7097:	
 15777                           
 15778                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
 15779  0B4C  318B  236F  318B   	fcall	_TMR1_Initialize
 15780  0B4F                     l7099:	
 15781                           
 15782                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
 15783  0B4F  318A  2233  318B   	fcall	_TMR0_Initialize
 15784  0B52                     l439:	
 15785  0B52  0008               	return
 15786  0B53                     __end_of_SYSTEM_Initialize:	
 15787                           
 15788                           	psect	text38
 15789  0AB9                     __ptext38:	
 15790 ;; *************** function _TMR2_Initialize *****************
 15791 ;; Defined at:
 15792 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 15793 ;; Parameters:    Size  Location     Type
 15794 ;;		None
 15795 ;; Auto vars:     Size  Location     Type
 15796 ;;		None
 15797 ;; Return value:  Size  Location     Type
 15798 ;;                  1    wreg      void 
 15799 ;; Registers used:
 15800 ;;		wreg, status,2, status,0, pclath, cstack
 15801 ;; Tracked objects:
 15802 ;;		On entry : 0/0
 15803 ;;		On exit  : 0/0
 15804 ;;		Unchanged: 0/0
 15805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15810 ;;Total ram usage:        0 bytes
 15811 ;; Hardware stack levels used:    1
 15812 ;; Hardware stack levels required when called:    7
 15813 ;; This function calls:
 15814 ;;		_TMR2_SetInterruptHandler
 15815 ;; This function is called by:
 15816 ;;		_SYSTEM_Initialize
 15817 ;; This function uses a non-reentrant model
 15818 ;;
 15819                           
 15820                           
 15821                           ;psect for function _TMR2_Initialize
 15822  0AB9                     _TMR2_Initialize:	
 15823  0AB9                     l6835:	
 15824                           ;incstack = 0
 15825                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15826                           
 15827                           
 15828                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 15829  0AB9  3001               	movlw	1
 15830  0ABA  0025               	movlb	5	; select bank5
 15831  0ABB  0090               	movwf	16	;volatile
 15832                           
 15833                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x20;
 15834  0ABC  3020               	movlw	32
 15835  0ABD  008F               	movwf	15	;volatile
 15836  0ABE                     l6837:	
 15837                           
 15838                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 15839  0ABE  0191               	clrf	17	;volatile
 15840  0ABF                     l6839:	
 15841                           
 15842                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x9B;
 15843  0ABF  309B               	movlw	155
 15844  0AC0  008D               	movwf	13	;volatile
 15845                           
 15846                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 15847  0AC1  018C               	clrf	12	;volatile
 15848  0AC2                     l6841:	
 15849                           
 15850                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 15851  0AC2  002E               	movlb	14	; select bank14
 15852  0AC3  1090               	bcf	16,1	;volatile
 15853  0AC4                     l6843:	
 15854                           
 15855                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 15856  0AC4  149A               	bsf	26,1	;volatile
 15857  0AC5                     l6845:	
 15858                           
 15859                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 15860  0AC5  3028               	movlw	low _TMR2_DefaultInterruptHandler
 15861  0AC6  0020               	movlb	0	; select bank0
 15862  0AC7  00A3               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 15863  0AC8  3008               	movlw	high _TMR2_DefaultInterruptHandler
 15864  0AC9  00A4               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 15865  0ACA  3189  2107  318A   	fcall	_TMR2_SetInterruptHandler
 15866  0ACD                     l6847:	
 15867                           
 15868                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0xB1;
 15869  0ACD  30B1               	movlw	177
 15870  0ACE  0025               	movlb	5	; select bank5
 15871  0ACF  008E               	movwf	14	;volatile
 15872  0AD0                     l998:	
 15873  0AD0  0008               	return
 15874  0AD1                     __end_of_TMR2_Initialize:	
 15875                           
 15876                           	psect	text39
 15877  0907                     __ptext39:	
 15878 ;; *************** function _TMR2_SetInterruptHandler *****************
 15879 ;; Defined at:
 15880 ;;		line 178 in file "mcc_generated_files/tmr2.c"
 15881 ;; Parameters:    Size  Location     Type
 15882 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 15883 ;;		 -> handler_clock_ms(1), TMR2_DefaultInterruptHandler(1), 
 15884 ;; Auto vars:     Size  Location     Type
 15885 ;;		None
 15886 ;; Return value:  Size  Location     Type
 15887 ;;                  1    wreg      void 
 15888 ;; Registers used:
 15889 ;;		wreg
 15890 ;; Tracked objects:
 15891 ;;		On entry : 0/0
 15892 ;;		On exit  : 0/0
 15893 ;;		Unchanged: 0/0
 15894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15895 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15898 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15899 ;;Total ram usage:        2 bytes
 15900 ;; Hardware stack levels used:    1
 15901 ;; Hardware stack levels required when called:    6
 15902 ;; This function calls:
 15903 ;;		Nothing
 15904 ;; This function is called by:
 15905 ;;		_TMR2_Initialize
 15906 ;;		_main
 15907 ;; This function uses a non-reentrant model
 15908 ;;
 15909                           
 15910                           
 15911                           ;psect for function _TMR2_SetInterruptHandler
 15912  0907                     _TMR2_SetInterruptHandler:	
 15913  0907                     l6635:	
 15914                           ;incstack = 0
 15915                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 15916                           
 15917                           
 15918                           ;mcc_generated_files/tmr2.c: 179:     TMR2_InterruptHandler = InterruptHandler;
 15919  0907  0020               	movlb	0	; select bank0
 15920  0908  0824               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 15921  0909  0021               	movlb	1	; select bank1
 15922  090A  00CF               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 15923  090B  0020               	movlb	0	; select bank0
 15924  090C  0823               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 15925  090D  0021               	movlb	1	; select bank1
 15926  090E  00CE               	movwf	_TMR2_InterruptHandler^(0+128)
 15927  090F                     l1041:	
 15928  090F  0008               	return
 15929  0910                     __end_of_TMR2_SetInterruptHandler:	
 15930                           
 15931                           	psect	text40
 15932  0B6F                     __ptext40:	
 15933 ;; *************** function _TMR1_Initialize *****************
 15934 ;; Defined at:
 15935 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 15936 ;; Parameters:    Size  Location     Type
 15937 ;;		None
 15938 ;; Auto vars:     Size  Location     Type
 15939 ;;		None
 15940 ;; Return value:  Size  Location     Type
 15941 ;;                  1    wreg      void 
 15942 ;; Registers used:
 15943 ;;		wreg, status,2, status,0, pclath, cstack
 15944 ;; Tracked objects:
 15945 ;;		On entry : 0/0
 15946 ;;		On exit  : 0/0
 15947 ;;		Unchanged: 0/0
 15948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15953 ;;Total ram usage:        0 bytes
 15954 ;; Hardware stack levels used:    1
 15955 ;; Hardware stack levels required when called:    7
 15956 ;; This function calls:
 15957 ;;		_TMR1_SetInterruptHandler
 15958 ;; This function is called by:
 15959 ;;		_SYSTEM_Initialize
 15960 ;; This function uses a non-reentrant model
 15961 ;;
 15962                           
 15963                           
 15964                           ;psect for function _TMR1_Initialize
 15965  0B6F                     _TMR1_Initialize:	
 15966  0B6F                     l6849:	
 15967                           ;incstack = 0
 15968                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15969                           
 15970                           
 15971                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 15972  0B6F  0024               	movlb	4	; select bank4
 15973  0B70  018F               	clrf	15	;volatile
 15974                           
 15975                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 15976  0B71  0190               	clrf	16	;volatile
 15977  0B72                     l6851:	
 15978                           
 15979                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 15980  0B72  3004               	movlw	4
 15981  0B73  0091               	movwf	17	;volatile
 15982  0B74                     l6853:	
 15983                           
 15984                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0xE1;
 15985  0B74  30E1               	movlw	225
 15986  0B75  008D               	movwf	13	;volatile
 15987  0B76                     l6855:	
 15988                           
 15989                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xBA;
 15990  0B76  30BA               	movlw	186
 15991  0B77  008C               	movwf	12	;volatile
 15992  0B78                     l6857:	
 15993                           
 15994                           ;mcc_generated_files/tmr1.c: 84:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 15995  0B78  080D               	movf	13,w	;volatile
 15996  0B79  0020               	movlb	0	; select bank0
 15997  0B7A  00E9               	movwf	_timer1ReloadVal+1	;volatile
 15998  0B7B  0024               	movlb	4	; select bank4
 15999  0B7C  080C               	movf	12,w	;volatile
 16000  0B7D  0020               	movlb	0	; select bank0
 16001  0B7E  00E8               	movwf	_timer1ReloadVal	;volatile
 16002  0B7F                     l6859:	
 16003                           
 16004                           ;mcc_generated_files/tmr1.c: 87:     PIR4bits.TMR1IF = 0;
 16005  0B7F  002E               	movlb	14	; select bank14
 16006  0B80  1010               	bcf	16,0	;volatile
 16007  0B81                     l6861:	
 16008                           
 16009                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 16010  0B81  141A               	bsf	26,0	;volatile
 16011  0B82                     l6863:	
 16012                           
 16013                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 16014  0B82  3027               	movlw	low _TMR1_DefaultInterruptHandler
 16015  0B83  0020               	movlb	0	; select bank0
 16016  0B84  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 16017  0B85  3008               	movlw	high _TMR1_DefaultInterruptHandler
 16018  0B86  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 16019  0B87  3188  20FE  318B   	fcall	_TMR1_SetInterruptHandler
 16020  0B8A                     l6865:	
 16021                           
 16022                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x15;
 16023  0B8A  3015               	movlw	21
 16024  0B8B  0024               	movlb	4	; select bank4
 16025  0B8C  008E               	movwf	14	;volatile
 16026  0B8D                     l869:	
 16027  0B8D  0008               	return
 16028  0B8E                     __end_of_TMR1_Initialize:	
 16029                           
 16030                           	psect	text41
 16031  08FE                     __ptext41:	
 16032 ;; *************** function _TMR1_SetInterruptHandler *****************
 16033 ;; Defined at:
 16034 ;;		line 178 in file "mcc_generated_files/tmr1.c"
 16035 ;; Parameters:    Size  Location     Type
 16036 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 16037 ;;		 -> handler_clock_hms(1), TMR1_DefaultInterruptHandler(1), 
 16038 ;; Auto vars:     Size  Location     Type
 16039 ;;		None
 16040 ;; Return value:  Size  Location     Type
 16041 ;;                  1    wreg      void 
 16042 ;; Registers used:
 16043 ;;		wreg
 16044 ;; Tracked objects:
 16045 ;;		On entry : 0/0
 16046 ;;		On exit  : 0/0
 16047 ;;		Unchanged: 0/0
 16048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16049 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16052 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16053 ;;Total ram usage:        2 bytes
 16054 ;; Hardware stack levels used:    1
 16055 ;; Hardware stack levels required when called:    6
 16056 ;; This function calls:
 16057 ;;		Nothing
 16058 ;; This function is called by:
 16059 ;;		_TMR1_Initialize
 16060 ;;		_main
 16061 ;; This function uses a non-reentrant model
 16062 ;;
 16063                           
 16064                           
 16065                           ;psect for function _TMR1_SetInterruptHandler
 16066  08FE                     _TMR1_SetInterruptHandler:	
 16067  08FE                     l6613:	
 16068                           ;incstack = 0
 16069                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 16070                           
 16071                           
 16072                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
 16073  08FE  0020               	movlb	0	; select bank0
 16074  08FF  0824               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 16075  0900  0021               	movlb	1	; select bank1
 16076  0901  00D1               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 16077  0902  0020               	movlb	0	; select bank0
 16078  0903  0823               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 16079  0904  0021               	movlb	1	; select bank1
 16080  0905  00D0               	movwf	_TMR1_InterruptHandler^(0+128)
 16081  0906                     l899:	
 16082  0906  0008               	return
 16083  0907                     __end_of_TMR1_SetInterruptHandler:	
 16084                           
 16085                           	psect	text42
 16086  0A33                     __ptext42:	
 16087 ;; *************** function _TMR0_Initialize *****************
 16088 ;; Defined at:
 16089 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 16090 ;; Parameters:    Size  Location     Type
 16091 ;;		None
 16092 ;; Auto vars:     Size  Location     Type
 16093 ;;		None
 16094 ;; Return value:  Size  Location     Type
 16095 ;;                  1    wreg      void 
 16096 ;; Registers used:
 16097 ;;		wreg, status,2, status,0, pclath, cstack
 16098 ;; Tracked objects:
 16099 ;;		On entry : 0/0
 16100 ;;		On exit  : 0/0
 16101 ;;		Unchanged: 0/0
 16102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16107 ;;Total ram usage:        0 bytes
 16108 ;; Hardware stack levels used:    1
 16109 ;; Hardware stack levels required when called:    7
 16110 ;; This function calls:
 16111 ;;		_TMR0_SetInterruptHandler
 16112 ;; This function is called by:
 16113 ;;		_SYSTEM_Initialize
 16114 ;; This function uses a non-reentrant model
 16115 ;;
 16116                           
 16117                           
 16118                           ;psect for function _TMR0_Initialize
 16119  0A33                     _TMR0_Initialize:	
 16120  0A33                     l6867:	
 16121                           ;incstack = 0
 16122                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16123                           
 16124                           
 16125                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x95;
 16126  0A33  3095               	movlw	149
 16127  0A34  0020               	movlb	0	; select bank0
 16128  0A35  009F               	movwf	31	;volatile
 16129                           
 16130                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF1;
 16131  0A36  30F1               	movlw	241
 16132  0A37  009D               	movwf	29	;volatile
 16133  0A38                     l6869:	
 16134                           
 16135                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 16136  0A38  019C               	clrf	28	;volatile
 16137  0A39                     l6871:	
 16138                           
 16139                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 16140  0A39  002E               	movlb	14	; select bank14
 16141  0A3A  128C               	bcf	12,5	;volatile
 16142  0A3B                     l6873:	
 16143                           
 16144                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 16145  0A3B  1696               	bsf	22,5	;volatile
 16146  0A3C                     l6875:	
 16147                           
 16148                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 16149  0A3C  3026               	movlw	low _TMR0_DefaultInterruptHandler
 16150  0A3D  0020               	movlb	0	; select bank0
 16151  0A3E  00A3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16152  0A3F  3008               	movlw	high _TMR0_DefaultInterruptHandler
 16153  0A40  00A4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16154  0A41  3188  20F5  318A   	fcall	_TMR0_SetInterruptHandler
 16155  0A44                     l6877:	
 16156                           
 16157                           ;mcc_generated_files/tmr0.c: 85:     T0CON0 = 0x0B;
 16158  0A44  300B               	movlw	11
 16159  0A45  0020               	movlb	0	; select bank0
 16160  0A46  009E               	movwf	30	;volatile
 16161  0A47                     l1067:	
 16162  0A47  0008               	return
 16163  0A48                     __end_of_TMR0_Initialize:	
 16164                           
 16165                           	psect	text43
 16166  08F5                     __ptext43:	
 16167 ;; *************** function _TMR0_SetInterruptHandler *****************
 16168 ;; Defined at:
 16169 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 16170 ;; Parameters:    Size  Location     Type
 16171 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 16172 ;;		 -> ISR_3s(1), TMR0_DefaultInterruptHandler(1), 
 16173 ;; Auto vars:     Size  Location     Type
 16174 ;;		None
 16175 ;; Return value:  Size  Location     Type
 16176 ;;                  1    wreg      void 
 16177 ;; Registers used:
 16178 ;;		wreg
 16179 ;; Tracked objects:
 16180 ;;		On entry : 0/0
 16181 ;;		On exit  : 0/0
 16182 ;;		Unchanged: 0/0
 16183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16184 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16187 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16188 ;;Total ram usage:        2 bytes
 16189 ;; Hardware stack levels used:    1
 16190 ;; Hardware stack levels required when called:    6
 16191 ;; This function calls:
 16192 ;;		Nothing
 16193 ;; This function is called by:
 16194 ;;		_TMR0_Initialize
 16195 ;;		_main
 16196 ;; This function uses a non-reentrant model
 16197 ;;
 16198                           
 16199                           
 16200                           ;psect for function _TMR0_SetInterruptHandler
 16201  08F5                     _TMR0_SetInterruptHandler:	
 16202  08F5                     l6637:	
 16203                           ;incstack = 0
 16204                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 16205                           
 16206                           
 16207                           ;mcc_generated_files/tmr0.c: 137:     TMR0_InterruptHandler = InterruptHandler;
 16208  08F5  0020               	movlb	0	; select bank0
 16209  08F6  0824               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 16210  08F7  0021               	movlb	1	; select bank1
 16211  08F8  00CD               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 16212  08F9  0020               	movlb	0	; select bank0
 16213  08FA  0823               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 16214  08FB  0021               	movlb	1	; select bank1
 16215  08FC  00CC               	movwf	_TMR0_InterruptHandler^(0+128)
 16216  08FD                     l1089:	
 16217  08FD  0008               	return
 16218  08FE                     __end_of_TMR0_SetInterruptHandler:	
 16219                           
 16220                           	psect	text44
 16221  0976                     __ptext44:	
 16222 ;; *************** function _PWM6_Initialize *****************
 16223 ;; Defined at:
 16224 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 16225 ;; Parameters:    Size  Location     Type
 16226 ;;		None
 16227 ;; Auto vars:     Size  Location     Type
 16228 ;;		None
 16229 ;; Return value:  Size  Location     Type
 16230 ;;                  1    wreg      void 
 16231 ;; Registers used:
 16232 ;;		wreg, status,2, status,0
 16233 ;; Tracked objects:
 16234 ;;		On entry : 0/0
 16235 ;;		On exit  : 0/0
 16236 ;;		Unchanged: 0/0
 16237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16242 ;;Total ram usage:        0 bytes
 16243 ;; Hardware stack levels used:    1
 16244 ;; Hardware stack levels required when called:    6
 16245 ;; This function calls:
 16246 ;;		Nothing
 16247 ;; This function is called by:
 16248 ;;		_SYSTEM_Initialize
 16249 ;; This function uses a non-reentrant model
 16250 ;;
 16251                           
 16252                           
 16253                           ;psect for function _PWM6_Initialize
 16254  0976                     _PWM6_Initialize:	
 16255  0976                     l6825:	
 16256                           ;incstack = 0
 16257                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 16258                           
 16259                           
 16260                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 16261  0976  3080               	movlw	128
 16262  0977  0027               	movlb	7	; select bank7
 16263  0978  008E               	movwf	14	;volatile
 16264                           
 16265                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x3E;
 16266  0979  303E               	movlw	62
 16267  097A  008D               	movwf	13	;volatile
 16268                           
 16269                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 16270  097B  3040               	movlw	64
 16271  097C  008C               	movwf	12	;volatile
 16272  097D                     l6827:	
 16273                           
 16274                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 16275  097D  0024               	movlb	4	; select bank4
 16276  097E  081F               	movf	31,w	;volatile
 16277  097F  39F3               	andlw	-13
 16278  0980  3804               	iorlw	4
 16279  0981  009F               	movwf	31	;volatile
 16280  0982                     l913:	
 16281  0982  0008               	return
 16282  0983                     __end_of_PWM6_Initialize:	
 16283                           
 16284                           	psect	text45
 16285  08C9                     __ptext45:	
 16286 ;; *************** function _PMD_Initialize *****************
 16287 ;; Defined at:
 16288 ;;		line 77 in file "mcc_generated_files/mcc.c"
 16289 ;; Parameters:    Size  Location     Type
 16290 ;;		None
 16291 ;; Auto vars:     Size  Location     Type
 16292 ;;		None
 16293 ;; Return value:  Size  Location     Type
 16294 ;;                  1    wreg      void 
 16295 ;; Registers used:
 16296 ;;		status,2
 16297 ;; Tracked objects:
 16298 ;;		On entry : 0/0
 16299 ;;		On exit  : 0/0
 16300 ;;		Unchanged: 0/0
 16301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16306 ;;Total ram usage:        0 bytes
 16307 ;; Hardware stack levels used:    1
 16308 ;; Hardware stack levels required when called:    6
 16309 ;; This function calls:
 16310 ;;		Nothing
 16311 ;; This function is called by:
 16312 ;;		_SYSTEM_Initialize
 16313 ;; This function uses a non-reentrant model
 16314 ;;
 16315                           
 16316                           
 16317                           ;psect for function _PMD_Initialize
 16318  08C9                     _PMD_Initialize:	
 16319  08C9                     l6761:	
 16320                           ;incstack = 0
 16321                           ; Regs used in _PMD_Initialize: [status,2]
 16322                           
 16323                           
 16324                           ;mcc_generated_files/mcc.c: 80:     PMD0 = 0x00;
 16325  08C9  002F               	movlb	15	; select bank15
 16326  08CA  0196               	clrf	22	;volatile
 16327                           
 16328                           ;mcc_generated_files/mcc.c: 82:     PMD1 = 0x00;
 16329  08CB  0197               	clrf	23	;volatile
 16330                           
 16331                           ;mcc_generated_files/mcc.c: 84:     PMD2 = 0x00;
 16332  08CC  0198               	clrf	24	;volatile
 16333                           
 16334                           ;mcc_generated_files/mcc.c: 86:     PMD3 = 0x00;
 16335  08CD  0199               	clrf	25	;volatile
 16336                           
 16337                           ;mcc_generated_files/mcc.c: 88:     PMD4 = 0x00;
 16338  08CE  019A               	clrf	26	;volatile
 16339                           
 16340                           ;mcc_generated_files/mcc.c: 90:     PMD5 = 0x00;
 16341  08CF  019B               	clrf	27	;volatile
 16342  08D0                     l445:	
 16343  08D0  0008               	return
 16344  08D1                     __end_of_PMD_Initialize:	
 16345                           
 16346                           	psect	text46
 16347  0E2B                     __ptext46:	
 16348 ;; *************** function _PIN_MANAGER_Initialize *****************
 16349 ;; Defined at:
 16350 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 16351 ;; Parameters:    Size  Location     Type
 16352 ;;		None
 16353 ;; Auto vars:     Size  Location     Type
 16354 ;;		None
 16355 ;; Return value:  Size  Location     Type
 16356 ;;                  1    wreg      void 
 16357 ;; Registers used:
 16358 ;;		wreg, status,2
 16359 ;; Tracked objects:
 16360 ;;		On entry : 0/0
 16361 ;;		On exit  : 0/0
 16362 ;;		Unchanged: 0/0
 16363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16368 ;;Total ram usage:        0 bytes
 16369 ;; Hardware stack levels used:    1
 16370 ;; Hardware stack levels required when called:    6
 16371 ;; This function calls:
 16372 ;;		Nothing
 16373 ;; This function is called by:
 16374 ;;		_SYSTEM_Initialize
 16375 ;; This function uses a non-reentrant model
 16376 ;;
 16377                           
 16378                           
 16379                           ;psect for function _PIN_MANAGER_Initialize
 16380  0E2B                     _PIN_MANAGER_Initialize:	
 16381  0E2B                     l6763:	
 16382                           ;incstack = 0
 16383                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 16384                           
 16385                           
 16386                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 16387  0E2B  0020               	movlb	0	; select bank0
 16388  0E2C  019A               	clrf	26	;volatile
 16389                           
 16390                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 16391  0E2D  0199               	clrf	25	;volatile
 16392                           
 16393                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 16394  0E2E  0196               	clrf	22	;volatile
 16395                           
 16396                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 16397  0E2F  0197               	clrf	23	;volatile
 16398                           
 16399                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 16400  0E30  0198               	clrf	24	;volatile
 16401  0E31                     l6765:	
 16402                           
 16403                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 16404  0E31  3007               	movlw	7
 16405  0E32  0095               	movwf	21	;volatile
 16406  0E33                     l6767:	
 16407                           
 16408                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 16409  0E33  300F               	movlw	15
 16410  0E34  0091               	movwf	17	;volatile
 16411  0E35                     l6769:	
 16412                           
 16413                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 16414  0E35  30FF               	movlw	255
 16415  0E36  0092               	movwf	18	;volatile
 16416  0E37                     l6771:	
 16417                           
 16418                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 16419  0E37  30FF               	movlw	255
 16420  0E38  0093               	movwf	19	;volatile
 16421  0E39                     l6773:	
 16422                           
 16423                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 16424  0E39  30FF               	movlw	255
 16425  0E3A  0094               	movwf	20	;volatile
 16426  0E3B                     l6775:	
 16427                           
 16428                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 16429  0E3B  30FF               	movlw	255
 16430  0E3C  003E               	movlb	30	; select bank30
 16431  0E3D  00D9               	movwf	89	;volatile
 16432  0E3E                     l6777:	
 16433                           
 16434                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 16435  0E3E  30C7               	movlw	199
 16436  0E3F  00CE               	movwf	78	;volatile
 16437  0E40                     l6779:	
 16438                           
 16439                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 16440  0E40  30EF               	movlw	239
 16441  0E41  00C3               	movwf	67	;volatile
 16442  0E42                     l6781:	
 16443                           
 16444                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 16445  0E42  3007               	movlw	7
 16446  0E43  00E4               	movwf	100	;volatile
 16447  0E44                     l6783:	
 16448                           
 16449                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 16450  0E44  30FF               	movlw	255
 16451  0E45  00B8               	movwf	56	;volatile
 16452                           
 16453                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 16454  0E46  01DA               	clrf	90	;volatile
 16455                           
 16456                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 16457  0E47  01E5               	clrf	101	;volatile
 16458                           
 16459                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 16460  0E48  01C4               	clrf	68	;volatile
 16461                           
 16462                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 16463  0E49  01B9               	clrf	57	;volatile
 16464                           
 16465                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 16466  0E4A  01CF               	clrf	79	;volatile
 16467                           
 16468                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 16469  0E4B  01E6               	clrf	102	;volatile
 16470                           
 16471                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 16472  0E4C  01BA               	clrf	58	;volatile
 16473                           
 16474                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 16475  0E4D  01C5               	clrf	69	;volatile
 16476                           
 16477                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 16478  0E4E  01D0               	clrf	80	;volatile
 16479                           
 16480                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 16481  0E4F  01DB               	clrf	91	;volatile
 16482  0E50                     l6785:	
 16483                           
 16484                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 16485  0E50  30FF               	movlw	255
 16486  0E51  00BB               	movwf	59	;volatile
 16487  0E52                     l6787:	
 16488                           
 16489                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 16490  0E52  30FF               	movlw	255
 16491  0E53  00C6               	movwf	70	;volatile
 16492  0E54                     l6789:	
 16493                           
 16494                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 16495  0E54  30FF               	movlw	255
 16496  0E55  00D1               	movwf	81	;volatile
 16497  0E56                     l6791:	
 16498                           
 16499                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 16500  0E56  30FF               	movlw	255
 16501  0E57  00DC               	movwf	92	;volatile
 16502  0E58                     l6793:	
 16503                           
 16504                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 16505  0E58  3007               	movlw	7
 16506  0E59  00E7               	movwf	103	;volatile
 16507  0E5A                     l6795:	
 16508                           
 16509                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 16510  0E5A  30FF               	movlw	255
 16511  0E5B  00BC               	movwf	60	;volatile
 16512  0E5C                     l6797:	
 16513                           
 16514                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 16515  0E5C  30FF               	movlw	255
 16516  0E5D  00C7               	movwf	71	;volatile
 16517  0E5E                     l6799:	
 16518                           
 16519                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 16520  0E5E  30FF               	movlw	255
 16521  0E5F  00D2               	movwf	82	;volatile
 16522  0E60                     l6801:	
 16523                           
 16524                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 16525  0E60  30FF               	movlw	255
 16526  0E61  00DD               	movwf	93	;volatile
 16527  0E62                     l6803:	
 16528                           
 16529                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 16530  0E62  3007               	movlw	7
 16531  0E63  00E8               	movwf	104	;volatile
 16532  0E64                     l6805:	
 16533                           
 16534                           ;mcc_generated_files/pin_manager.c: 127:     INTPPS = 0x0C;
 16535  0E64  300C               	movlw	12
 16536  0E65  003D               	movlb	29	; select bank29
 16537  0E66  0090               	movwf	16	;volatile
 16538  0E67                     l6807:	
 16539                           
 16540                           ;mcc_generated_files/pin_manager.c: 128:     SSP1CLKPPS = 0x13;
 16541  0E67  3013               	movlw	19
 16542  0E68  00C5               	movwf	69	;volatile
 16543  0E69                     l6809:	
 16544                           
 16545                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x14;
 16546  0E69  3014               	movlw	20
 16547  0E6A  003E               	movlb	30	; select bank30
 16548  0E6B  00A3               	movwf	35	;volatile
 16549  0E6C                     l6811:	
 16550                           
 16551                           ;mcc_generated_files/pin_manager.c: 130:     RC4PPS = 0x15;
 16552  0E6C  3015               	movlw	21
 16553  0E6D  00A4               	movwf	36	;volatile
 16554  0E6E                     l6813:	
 16555                           
 16556                           ;mcc_generated_files/pin_manager.c: 131:     RA6PPS = 0x0E;
 16557  0E6E  300E               	movlw	14
 16558  0E6F  0096               	movwf	22	;volatile
 16559  0E70                     l6815:	
 16560                           
 16561                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
 16562  0E70  3014               	movlw	20
 16563  0E71  003D               	movlb	29	; select bank29
 16564  0E72  00C6               	movwf	70	;volatile
 16565  0E73                     l530:	
 16566  0E73  0008               	return
 16567  0E74                     __end_of_PIN_MANAGER_Initialize:	
 16568                           
 16569                           	psect	text47
 16570  08EC                     __ptext47:	
 16571 ;; *************** function _OSCILLATOR_Initialize *****************
 16572 ;; Defined at:
 16573 ;;		line 63 in file "mcc_generated_files/mcc.c"
 16574 ;; Parameters:    Size  Location     Type
 16575 ;;		None
 16576 ;; Auto vars:     Size  Location     Type
 16577 ;;		None
 16578 ;; Return value:  Size  Location     Type
 16579 ;;                  1    wreg      void 
 16580 ;; Registers used:
 16581 ;;		wreg, status,2
 16582 ;; Tracked objects:
 16583 ;;		On entry : 0/0
 16584 ;;		On exit  : 0/0
 16585 ;;		Unchanged: 0/0
 16586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16591 ;;Total ram usage:        0 bytes
 16592 ;; Hardware stack levels used:    1
 16593 ;; Hardware stack levels required when called:    6
 16594 ;; This function calls:
 16595 ;;		Nothing
 16596 ;; This function is called by:
 16597 ;;		_SYSTEM_Initialize
 16598 ;; This function uses a non-reentrant model
 16599 ;;
 16600                           
 16601                           
 16602                           ;psect for function _OSCILLATOR_Initialize
 16603  08EC                     _OSCILLATOR_Initialize:	
 16604  08EC                     l6817:	
 16605                           ;incstack = 0
 16606                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 16607                           
 16608                           
 16609                           ;mcc_generated_files/mcc.c: 66:     OSCCON1 = 0x62;
 16610  08EC  3062               	movlw	98
 16611  08ED  0031               	movlb	17	; select bank17
 16612  08EE  008D               	movwf	13	;volatile
 16613  08EF                     l6819:	
 16614                           
 16615                           ;mcc_generated_files/mcc.c: 68:     OSCCON3 = 0x00;
 16616  08EF  018F               	clrf	15	;volatile
 16617  08F0                     l6821:	
 16618                           
 16619                           ;mcc_generated_files/mcc.c: 70:     OSCEN = 0x00;
 16620  08F0  0191               	clrf	17	;volatile
 16621                           
 16622                           ;mcc_generated_files/mcc.c: 72:     OSCFRQ = 0x02;
 16623  08F1  3002               	movlw	2
 16624  08F2  0093               	movwf	19	;volatile
 16625  08F3                     l6823:	
 16626                           
 16627                           ;mcc_generated_files/mcc.c: 74:     OSCTUNE = 0x00;
 16628  08F3  0192               	clrf	18	;volatile
 16629  08F4                     l442:	
 16630  08F4  0008               	return
 16631  08F5                     __end_of_OSCILLATOR_Initialize:	
 16632                           
 16633                           	psect	text48
 16634  0983                     __ptext48:	
 16635 ;; *************** function _EXT_INT_Initialize *****************
 16636 ;; Defined at:
 16637 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 16638 ;; Parameters:    Size  Location     Type
 16639 ;;		None
 16640 ;; Auto vars:     Size  Location     Type
 16641 ;;		None
 16642 ;; Return value:  Size  Location     Type
 16643 ;;                  1    wreg      void 
 16644 ;; Registers used:
 16645 ;;		wreg, status,2, status,0, pclath, cstack
 16646 ;; Tracked objects:
 16647 ;;		On entry : 0/0
 16648 ;;		On exit  : 0/0
 16649 ;;		Unchanged: 0/0
 16650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16655 ;;Total ram usage:        0 bytes
 16656 ;; Hardware stack levels used:    1
 16657 ;; Hardware stack levels required when called:    7
 16658 ;; This function calls:
 16659 ;;		_INT_SetInterruptHandler
 16660 ;; This function is called by:
 16661 ;;		_SYSTEM_Initialize
 16662 ;; This function uses a non-reentrant model
 16663 ;;
 16664                           
 16665                           
 16666                           ;psect for function _EXT_INT_Initialize
 16667  0983                     _EXT_INT_Initialize:	
 16668  0983                     l6755:	
 16669                           ;incstack = 0
 16670                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16671                           
 16672                           
 16673                           ;mcc_generated_files/ext_int.c: 64:     (PIR0bits.INTF = 0);
 16674  0983  002E               	movlb	14	; select bank14
 16675  0984  100C               	bcf	12,0	;volatile
 16676                           
 16677                           ;mcc_generated_files/ext_int.c: 65:     (INTCONbits.INTEDG = 1);
 16678  0985  140B               	bsf	11,0	;volatile
 16679  0986                     l6757:	
 16680                           
 16681                           ;mcc_generated_files/ext_int.c: 67:     INT_SetInterruptHandler(INT_DefaultInterruptHand
      +                          ler);
 16682  0986  3025               	movlw	low _INT_DefaultInterruptHandler
 16683  0987  0020               	movlb	0	; select bank0
 16684  0988  00A3               	movwf	INT_SetInterruptHandler@InterruptHandler
 16685  0989  3008               	movlw	high _INT_DefaultInterruptHandler
 16686  098A  00A4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
 16687  098B  3188  20E3  3189   	fcall	_INT_SetInterruptHandler
 16688  098E                     l6759:	
 16689                           
 16690                           ;mcc_generated_files/ext_int.c: 68:     (PIE0bits.INTE = 1);
 16691  098E  002E               	movlb	14	; select bank14
 16692  098F  1416               	bsf	22,0	;volatile
 16693  0990                     l347:	
 16694  0990  0008               	return
 16695  0991                     __end_of_EXT_INT_Initialize:	
 16696                           
 16697                           	psect	text49
 16698  08E3                     __ptext49:	
 16699 ;; *************** function _INT_SetInterruptHandler *****************
 16700 ;; Defined at:
 16701 ;;		line 50 in file "mcc_generated_files/ext_int.c"
 16702 ;; Parameters:    Size  Location     Type
 16703 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 16704 ;;		 -> sw1_EXT(1), INT_DefaultInterruptHandler(1), 
 16705 ;; Auto vars:     Size  Location     Type
 16706 ;;		None
 16707 ;; Return value:  Size  Location     Type
 16708 ;;                  1    wreg      void 
 16709 ;; Registers used:
 16710 ;;		wreg
 16711 ;; Tracked objects:
 16712 ;;		On entry : 0/0
 16713 ;;		On exit  : 0/0
 16714 ;;		Unchanged: 0/0
 16715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16716 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16719 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16720 ;;Total ram usage:        2 bytes
 16721 ;; Hardware stack levels used:    1
 16722 ;; Hardware stack levels required when called:    6
 16723 ;; This function calls:
 16724 ;;		Nothing
 16725 ;; This function is called by:
 16726 ;;		_EXT_INT_Initialize
 16727 ;;		_main
 16728 ;; This function uses a non-reentrant model
 16729 ;;
 16730                           
 16731                           
 16732                           ;psect for function _INT_SetInterruptHandler
 16733  08E3                     _INT_SetInterruptHandler:	
 16734  08E3                     l6611:	
 16735                           ;incstack = 0
 16736                           ; Regs used in _INT_SetInterruptHandler: [wreg]
 16737                           
 16738                           
 16739                           ;mcc_generated_files/ext_int.c: 51:     INT_InterruptHandler = InterruptHandler;
 16740  08E3  0020               	movlb	0	; select bank0
 16741  08E4  0824               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
 16742  08E5  0021               	movlb	1	; select bank1
 16743  08E6  00D3               	movwf	(_INT_InterruptHandler+1)^(0+128)
 16744  08E7  0020               	movlb	0	; select bank0
 16745  08E8  0823               	movf	INT_SetInterruptHandler@InterruptHandler,w
 16746  08E9  0021               	movlb	1	; select bank1
 16747  08EA  00D2               	movwf	_INT_InterruptHandler^(0+128)
 16748  08EB                     l341:	
 16749  08EB  0008               	return
 16750  08EC                     __end_of_INT_SetInterruptHandler:	
 16751                           
 16752                           	psect	text50
 16753  0A5E                     __ptext50:	
 16754 ;; *************** function _ADCC_Initialize *****************
 16755 ;; Defined at:
 16756 ;;		line 63 in file "mcc_generated_files/adcc.c"
 16757 ;; Parameters:    Size  Location     Type
 16758 ;;		None
 16759 ;; Auto vars:     Size  Location     Type
 16760 ;;		None
 16761 ;; Return value:  Size  Location     Type
 16762 ;;                  1    wreg      void 
 16763 ;; Registers used:
 16764 ;;		wreg, status,2
 16765 ;; Tracked objects:
 16766 ;;		On entry : 0/0
 16767 ;;		On exit  : 0/0
 16768 ;;		Unchanged: 0/0
 16769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16774 ;;Total ram usage:        0 bytes
 16775 ;; Hardware stack levels used:    1
 16776 ;; Hardware stack levels required when called:    6
 16777 ;; This function calls:
 16778 ;;		Nothing
 16779 ;; This function is called by:
 16780 ;;		_SYSTEM_Initialize
 16781 ;; This function uses a non-reentrant model
 16782 ;;
 16783                           
 16784                           
 16785                           ;psect for function _ADCC_Initialize
 16786  0A5E                     _ADCC_Initialize:	
 16787  0A5E                     l6829:	
 16788                           ;incstack = 0
 16789                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 16790                           
 16791                           
 16792                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 16793  0A5E  0022               	movlb	2	; select bank2
 16794  0A5F  018E               	clrf	14	;volatile
 16795                           
 16796                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 16797  0A60  018F               	clrf	15	;volatile
 16798                           
 16799                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 16800  0A61  0190               	clrf	16	;volatile
 16801                           
 16802                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 16803  0A62  0191               	clrf	17	;volatile
 16804                           
 16805                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 16806  0A63  0192               	clrf	18	;volatile
 16807                           
 16808                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 16809  0A64  0193               	clrf	19	;volatile
 16810                           
 16811                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 16812  0A65  018D               	clrf	13	;volatile
 16813                           
 16814                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 16815  0A66  0021               	movlb	1	; select bank1
 16816  0A67  019E               	clrf	30	;volatile
 16817                           
 16818                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 16819  0A68  019B               	clrf	27	;volatile
 16820                           
 16821                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
 16822  0A69  0194               	clrf	20	;volatile
 16823                           
 16824                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
 16825  0A6A  0195               	clrf	21	;volatile
 16826                           
 16827                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
 16828  0A6B  0196               	clrf	22	;volatile
 16829                           
 16830                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
 16831  0A6C  0197               	clrf	23	;volatile
 16832                           
 16833                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
 16834  0A6D  019A               	clrf	26	;volatile
 16835                           
 16836                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
 16837  0A6E  0199               	clrf	25	;volatile
 16838                           
 16839                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
 16840  0A6F  0198               	clrf	24	;volatile
 16841  0A70                     l6831:	
 16842                           
 16843                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
 16844  0A70  3084               	movlw	132
 16845  0A71  0093               	movwf	19	;volatile
 16846  0A72                     l6833:	
 16847                           
 16848                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
 16849  0A72  019D               	clrf	29	;volatile
 16850  0A73                     l757:	
 16851  0A73  0008               	return
 16852  0A74                     __end_of_ADCC_Initialize:	
 16853                           
 16854                           	psect	text51
 16855  0B1D                     __ptext51:	
 16856 ;; *************** function _LED_bin *****************
 16857 ;; Defined at:
 16858 ;;		line 656 in file "main.c"
 16859 ;; Parameters:    Size  Location     Type
 16860 ;;  value           2    3[BANK0 ] unsigned int 
 16861 ;; Auto vars:     Size  Location     Type
 16862 ;;		None
 16863 ;; Return value:  Size  Location     Type
 16864 ;;                  1    wreg      void 
 16865 ;; Registers used:
 16866 ;;		wreg, status,2, status,0
 16867 ;; Tracked objects:
 16868 ;;		On entry : 0/0
 16869 ;;		On exit  : 0/0
 16870 ;;		Unchanged: 0/0
 16871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16872 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16874 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16875 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16876 ;;Total ram usage:        5 bytes
 16877 ;; Hardware stack levels used:    1
 16878 ;; Hardware stack levels required when called:    6
 16879 ;; This function calls:
 16880 ;;		Nothing
 16881 ;; This function is called by:
 16882 ;;		_main
 16883 ;; This function uses a non-reentrant model
 16884 ;;
 16885                           
 16886                           
 16887                           ;psect for function _LED_bin
 16888  0B1D                     _LED_bin:	
 16889  0B1D                     l7131:	
 16890                           ;incstack = 0
 16891                           ; Regs used in _LED_bin: [wreg+status,2+status,0]
 16892                           
 16893                           
 16894                           ;main.c: 658:     LATAbits.LATA4 = (value & 1);
 16895  0B1D  0020               	movlb	0	; select bank0
 16896  0B1E  0823               	movf	LED_bin@value,w
 16897  0B1F  3901               	andlw	1
 16898  0B20  00A5               	movwf	??_LED_bin
 16899  0B21  0EA5               	swapf	??_LED_bin,f
 16900  0B22  0816               	movf	22,w	;volatile
 16901  0B23  0625               	xorwf	??_LED_bin,w
 16902  0B24  39EF               	andlw	-17
 16903  0B25  0625               	xorwf	??_LED_bin,w
 16904  0B26  0096               	movwf	22	;volatile
 16905                           
 16906                           ;main.c: 659:     LATAbits.LATA5 = (value >>1);
 16907  0B27  0824               	movf	LED_bin@value+1,w
 16908  0B28  00A6               	movwf	??_LED_bin+1
 16909  0B29  0823               	movf	LED_bin@value,w
 16910  0B2A  00A5               	movwf	??_LED_bin
 16911  0B2B  36A6               	lsrf	??_LED_bin+1,f
 16912  0B2C  0CA5               	rrf	??_LED_bin,f
 16913  0B2D  0825               	movf	??_LED_bin,w
 16914  0B2E  00A7               	movwf	??_LED_bin+2
 16915  0B2F  0EA7               	swapf	??_LED_bin+2,f
 16916  0B30  0DA7               	rlf	??_LED_bin+2,f
 16917  0B31  0816               	movf	22,w	;volatile
 16918  0B32  0627               	xorwf	??_LED_bin+2,w
 16919  0B33  39DF               	andlw	-33
 16920  0B34  0627               	xorwf	??_LED_bin+2,w
 16921  0B35  0096               	movwf	22	;volatile
 16922  0B36                     l1440:	
 16923  0B36  0008               	return
 16924  0B37                     __end_of_LED_bin:	
 16925                           
 16926                           	psect	text52
 16927  0B03                     __ptext52:	
 16928 ;; *************** function _ADC_read *****************
 16929 ;; Defined at:
 16930 ;;		line 669 in file "main.c"
 16931 ;; Parameters:    Size  Location     Type
 16932 ;;		None
 16933 ;; Auto vars:     Size  Location     Type
 16934 ;;		None
 16935 ;; Return value:  Size  Location     Type
 16936 ;;                  2    5[BANK0 ] unsigned int 
 16937 ;; Registers used:
 16938 ;;		wreg, status,2, status,0, pclath, cstack
 16939 ;; Tracked objects:
 16940 ;;		On entry : 0/0
 16941 ;;		On exit  : 0/0
 16942 ;;		Unchanged: 0/0
 16943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16944 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16947 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16948 ;;Total ram usage:        2 bytes
 16949 ;; Hardware stack levels used:    1
 16950 ;; Hardware stack levels required when called:    7
 16951 ;; This function calls:
 16952 ;;		_ADCC_GetConversionResult
 16953 ;;		_ADCC_IsConversionDone
 16954 ;;		_ADCC_StartConversion
 16955 ;; This function is called by:
 16956 ;;		_main
 16957 ;; This function uses a non-reentrant model
 16958 ;;
 16959                           
 16960                           
 16961                           ;psect for function _ADC_read
 16962  0B03                     _ADC_read:	
 16963  0B03                     l7121:	
 16964                           ;incstack = 0
 16965                           ; Regs used in _ADC_read: [wreg+status,2+status,0+pclath+cstack]
 16966                           
 16967                           
 16968                           ;main.c: 671:     ADCC_StartConversion(channel_ANA0);
 16969  0B03  3000               	movlw	0
 16970  0B04  3188  20C1  318B   	fcall	_ADCC_StartConversion
 16971                           
 16972                           ;main.c: 672:     while(!ADCC_IsConversionDone()){
 16973  0B07  2B0C               	goto	l7125
 16974  0B08                     l7123:	
 16975                           
 16976                           ;main.c: 673:         _delay((unsigned long)((1)*(1000000/4000.0)));
 16977  0B08  3053               	movlw	83
 16978  0B09                     u5307:	
 16979  0B09  0B89               	decfsz	9,f
 16980  0B0A  2B09               	goto	u5307
 16981  0B0B  0000               	nop
 16982  0B0C                     l7125:	
 16983                           
 16984                           ;main.c: 672:     while(!ADCC_IsConversionDone()){
 16985  0B0C  3188  20A2  318B   	fcall	_ADCC_IsConversionDone
 16986  0B0F  3A00               	xorlw	0
 16987  0B10  1903               	skipnz
 16988  0B11  2B13               	goto	u4481
 16989  0B12  2B14               	goto	u4480
 16990  0B13                     u4481:	
 16991  0B13  2B08               	goto	l7123
 16992  0B14                     u4480:	
 16993  0B14                     l7127:	
 16994                           
 16995                           ;main.c: 676:     return ADCC_GetConversionResult();
 16996  0B14  3188  20DA  318B   	fcall	_ADCC_GetConversionResult
 16997  0B17  0020               	movlb	0	; select bank0
 16998  0B18  0824               	movf	?_ADCC_GetConversionResult+1,w
 16999  0B19  00A6               	movwf	?_ADC_read+1
 17000  0B1A  0823               	movf	?_ADCC_GetConversionResult,w
 17001  0B1B  00A5               	movwf	?_ADC_read
 17002  0B1C                     l1446:	
 17003  0B1C  0008               	return
 17004  0B1D                     __end_of_ADC_read:	
 17005                           
 17006                           	psect	text53
 17007  08C1                     __ptext53:	
 17008 ;; *************** function _ADCC_StartConversion *****************
 17009 ;; Defined at:
 17010 ;;		line 106 in file "mcc_generated_files/adcc.c"
 17011 ;; Parameters:    Size  Location     Type
 17012 ;;  channel         1    wreg     enum E12246
 17013 ;; Auto vars:     Size  Location     Type
 17014 ;;  channel         1    3[BANK0 ] enum E12246
 17015 ;; Return value:  Size  Location     Type
 17016 ;;                  1    wreg      void 
 17017 ;; Registers used:
 17018 ;;		wreg
 17019 ;; Tracked objects:
 17020 ;;		On entry : 0/0
 17021 ;;		On exit  : 0/0
 17022 ;;		Unchanged: 0/0
 17023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17027 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17028 ;;Total ram usage:        1 bytes
 17029 ;; Hardware stack levels used:    1
 17030 ;; Hardware stack levels required when called:    6
 17031 ;; This function calls:
 17032 ;;		Nothing
 17033 ;; This function is called by:
 17034 ;;		_ADC_read
 17035 ;; This function uses a non-reentrant model
 17036 ;;
 17037                           
 17038                           
 17039                           ;psect for function _ADCC_StartConversion
 17040  08C1                     _ADCC_StartConversion:	
 17041                           
 17042                           ;incstack = 0
 17043                           ; Regs used in _ADCC_StartConversion: [wreg]
 17044                           ;ADCC_StartConversion@channel stored from wreg
 17045  08C1  0020               	movlb	0	; select bank0
 17046  08C2  00A3               	movwf	ADCC_StartConversion@channel
 17047  08C3                     l6879:	
 17048                           
 17049                           ;mcc_generated_files/adcc.c: 106: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 107: {;mcc_generated_files/adcc.c: 109:     ADPCH = channel;
 17050  08C3  0823               	movf	ADCC_StartConversion@channel,w
 17051  08C4  0021               	movlb	1	; select bank1
 17052  08C5  009E               	movwf	30	;volatile
 17053  08C6                     l6881:	
 17054                           
 17055                           ;mcc_generated_files/adcc.c: 112:     ADCON0bits.ADON = 1;
 17056  08C6  1793               	bsf	19,7	;volatile
 17057  08C7                     l6883:	
 17058                           
 17059                           ;mcc_generated_files/adcc.c: 115:     ADCON0bits.ADGO = 1;
 17060  08C7  1413               	bsf	19,0	;volatile
 17061  08C8                     l760:	
 17062  08C8  0008               	return
 17063  08C9                     __end_of_ADCC_StartConversion:	
 17064                           
 17065                           	psect	text54
 17066  08A2                     __ptext54:	
 17067 ;; *************** function _ADCC_IsConversionDone *****************
 17068 ;; Defined at:
 17069 ;;		line 118 in file "mcc_generated_files/adcc.c"
 17070 ;; Parameters:    Size  Location     Type
 17071 ;;		None
 17072 ;; Auto vars:     Size  Location     Type
 17073 ;;		None
 17074 ;; Return value:  Size  Location     Type
 17075 ;;                  1    wreg      _Bool 
 17076 ;; Registers used:
 17077 ;;		wreg, status,0
 17078 ;; Tracked objects:
 17079 ;;		On entry : 0/0
 17080 ;;		On exit  : 0/0
 17081 ;;		Unchanged: 0/0
 17082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17087 ;;Total ram usage:        0 bytes
 17088 ;; Hardware stack levels used:    1
 17089 ;; Hardware stack levels required when called:    6
 17090 ;; This function calls:
 17091 ;;		Nothing
 17092 ;; This function is called by:
 17093 ;;		_ADC_read
 17094 ;; This function uses a non-reentrant model
 17095 ;;
 17096                           
 17097                           
 17098                           ;psect for function _ADCC_IsConversionDone
 17099  08A2                     _ADCC_IsConversionDone:	
 17100  08A2                     l6885:	
 17101                           ;incstack = 0
 17102                           ; Regs used in _ADCC_IsConversionDone: [wreg+status,0]
 17103                           
 17104                           
 17105                           ;mcc_generated_files/adcc.c: 121:     return ((unsigned char)(!ADCON0bits.ADGO));
 17106  08A2  1003               	clrc
 17107  08A3  0021               	movlb	1	; select bank1
 17108  08A4  1C13               	btfss	19,0	;volatile
 17109  08A5  1403               	setc
 17110  08A6  3000               	movlw	0
 17111  08A7  3D09               	addwfc	9,w
 17112  08A8                     l763:	
 17113  08A8  0008               	return
 17114  08A9                     __end_of_ADCC_IsConversionDone:	
 17115                           
 17116                           	psect	text55
 17117  08DA                     __ptext55:	
 17118 ;; *************** function _ADCC_GetConversionResult *****************
 17119 ;; Defined at:
 17120 ;;		line 124 in file "mcc_generated_files/adcc.c"
 17121 ;; Parameters:    Size  Location     Type
 17122 ;;		None
 17123 ;; Auto vars:     Size  Location     Type
 17124 ;;		None
 17125 ;; Return value:  Size  Location     Type
 17126 ;;                  2    3[BANK0 ] unsigned short 
 17127 ;; Registers used:
 17128 ;;		wreg
 17129 ;; Tracked objects:
 17130 ;;		On entry : 0/0
 17131 ;;		On exit  : 0/0
 17132 ;;		Unchanged: 0/0
 17133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17134 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17137 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17138 ;;Total ram usage:        2 bytes
 17139 ;; Hardware stack levels used:    1
 17140 ;; Hardware stack levels required when called:    6
 17141 ;; This function calls:
 17142 ;;		Nothing
 17143 ;; This function is called by:
 17144 ;;		_ADC_read
 17145 ;; This function uses a non-reentrant model
 17146 ;;
 17147                           
 17148                           
 17149                           ;psect for function _ADCC_GetConversionResult
 17150  08DA                     _ADCC_GetConversionResult:	
 17151  08DA                     l6889:	
 17152                           ;incstack = 0
 17153                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 17154                           
 17155                           
 17156                           ;mcc_generated_files/adcc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 17157  08DA  0021               	movlb	1	; select bank1
 17158  08DB  080D               	movf	13,w	;volatile
 17159  08DC  0020               	movlb	0	; select bank0
 17160  08DD  00A4               	movwf	?_ADCC_GetConversionResult+1
 17161  08DE  0021               	movlb	1	; select bank1
 17162  08DF  080C               	movf	12,w	;volatile
 17163  08E0  0020               	movlb	0	; select bank0
 17164  08E1  00A3               	movwf	?_ADCC_GetConversionResult
 17165  08E2                     l766:	
 17166  08E2  0008               	return
 17167  08E3                     __end_of_ADCC_GetConversionResult:	
 17168                           
 17169                           	psect	intentry
 17170  0004                     __pintentry:	
 17171 ;; *************** function _INTERRUPT_InterruptManager *****************
 17172 ;; Defined at:
 17173 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17174 ;; Parameters:    Size  Location     Type
 17175 ;;		None
 17176 ;; Auto vars:     Size  Location     Type
 17177 ;;		None
 17178 ;; Return value:  Size  Location     Type
 17179 ;;                  1    wreg      void 
 17180 ;; Registers used:
 17181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17182 ;; Tracked objects:
 17183 ;;		On entry : 0/0
 17184 ;;		On exit  : 0/0
 17185 ;;		Unchanged: 0/0
 17186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17191 ;;Total ram usage:        0 bytes
 17192 ;; Hardware stack levels used:    1
 17193 ;; Hardware stack levels required when called:    5
 17194 ;; This function calls:
 17195 ;;		Absolute function
 17196 ;;		_INT_ISR
 17197 ;;		_TMR0_ISR
 17198 ;;		_TMR1_ISR
 17199 ;;		_TMR2_ISR
 17200 ;;		_i2c_ISR
 17201 ;;		_i2c_busCollisionISR
 17202 ;; This function is called by:
 17203 ;;		Interrupt level 1
 17204 ;; This function uses a non-reentrant model
 17205 ;;
 17206                           
 17207  0004                     _INTERRUPT_InterruptManager:	
 17208                           
 17209                           ;incstack = 0
 17210  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 17211                           
 17212                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17213  0005  3180               	pagesel	$
 17214  0006                     i1l5987:	
 17215                           
 17216                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.INTE == 1 && PIR0bits.INTF
      +                           == 1)
 17217  0006  002E               	movlb	14	; select bank14
 17218  0007  1C16               	btfss	22,0	;volatile
 17219  0008  280A               	goto	u351_21
 17220  0009  280B               	goto	u351_20
 17221  000A                     u351_21:	
 17222  000A  2813               	goto	i1l378
 17223  000B                     u351_20:	
 17224  000B                     i1l5989:	
 17225  000B  1C0C               	btfss	12,0	;volatile
 17226  000C  280E               	goto	u352_21
 17227  000D  280F               	goto	u352_20
 17228  000E                     u352_21:	
 17229  000E  2813               	goto	i1l378
 17230  000F                     u352_20:	
 17231  000F                     i1l5991:	
 17232                           
 17233                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         INT_ISR();
 17234  000F  3188  207D  3180   	fcall	_INT_ISR
 17235                           
 17236                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17237  0012  2859               	goto	i1l392
 17238  0013                     i1l378:	
 17239                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(PIE0bits.TMR0IE == 1 && PIR0bi
      +                          ts.TMR0IF == 1)
 17240                           
 17241  0013  1E96               	btfss	22,5	;volatile
 17242  0014  2816               	goto	u353_21
 17243  0015  2817               	goto	u353_20
 17244  0016                     u353_21:	
 17245  0016  281F               	goto	i1l380
 17246  0017                     u353_20:	
 17247  0017                     i1l5993:	
 17248  0017  1E8C               	btfss	12,5	;volatile
 17249  0018  281A               	goto	u354_21
 17250  0019  281B               	goto	u354_20
 17251  001A                     u354_21:	
 17252  001A  281F               	goto	i1l380
 17253  001B                     u354_20:	
 17254  001B                     i1l5995:	
 17255                           
 17256                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         TMR0_ISR();
 17257  001B  3189  2191  3180   	fcall	_TMR0_ISR
 17258                           
 17259                           ;mcc_generated_files/interrupt_manager.c: 62:     }
 17260  001E  2859               	goto	i1l392
 17261  001F                     i1l380:	
 17262                           ;mcc_generated_files/interrupt_manager.c: 63:     else if(INTCONbits.PEIE == 1)
 17263                           
 17264  001F  1F0B               	btfss	11,6	;volatile
 17265  0020  2822               	goto	u355_21
 17266  0021  2823               	goto	u355_20
 17267  0022                     u355_21:	
 17268  0022  2859               	goto	i1l386
 17269  0023                     u355_20:	
 17270  0023                     i1l5997:	
 17271                           
 17272                           ;mcc_generated_files/interrupt_manager.c: 64:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 65:         if(PIE3bits.BCL1IE == 1 && PIR3bits.BCL1IF == 1)
 17273  0023  1C99               	btfss	25,1	;volatile
 17274  0024  2826               	goto	u356_21
 17275  0025  2827               	goto	u356_20
 17276  0026                     u356_21:	
 17277  0026  2832               	goto	i1l383
 17278  0027                     u356_20:	
 17279  0027                     i1l5999:	
 17280  0027  1C8F               	btfss	15,1	;volatile
 17281  0028  282A               	goto	u357_21
 17282  0029  282B               	goto	u357_20
 17283  002A                     u357_21:	
 17284  002A  2832               	goto	i1l383
 17285  002B                     u357_20:	
 17286  002B                     i1l6001:	
 17287                           
 17288                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             i2c1_driver_busCollisionISR();
 17289  002B  0020               	movlb	0	; select bank0
 17290  002C  0850               	movf	_i2c1_driver_busCollisionISR+1,w
 17291  002D  008A               	movwf	10
 17292  002E  084F               	movf	_i2c1_driver_busCollisionISR,w
 17293  002F  000A               	callw
 17294  0030  3180               	pagesel	$
 17295                           
 17296                           ;mcc_generated_files/interrupt_manager.c: 68:         }
 17297  0031  2859               	goto	i1l392
 17298  0032                     i1l383:	
 17299                           ;mcc_generated_files/interrupt_manager.c: 69:         else if(PIE3bits.SSP1IE == 1 && PI
      +                          R3bits.SSP1IF == 1)
 17300                           
 17301  0032  1C19               	btfss	25,0	;volatile
 17302  0033  2835               	goto	u358_21
 17303  0034  2836               	goto	u358_20
 17304  0035                     u358_21:	
 17305  0035  2841               	goto	i1l385
 17306  0036                     u358_20:	
 17307  0036                     i1l6003:	
 17308  0036  1C0F               	btfss	15,0	;volatile
 17309  0037  2839               	goto	u359_21
 17310  0038  283A               	goto	u359_20
 17311  0039                     u359_21:	
 17312  0039  2841               	goto	i1l385
 17313  003A                     u359_20:	
 17314  003A                     i1l6005:	
 17315                           
 17316                           ;mcc_generated_files/interrupt_manager.c: 70:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             i2c1_driver_i2cISR();
 17317  003A  0020               	movlb	0	; select bank0
 17318  003B  084E               	movf	_i2c1_driver_i2cISR+1,w
 17319  003C  008A               	movwf	10
 17320  003D  084D               	movf	_i2c1_driver_i2cISR,w
 17321  003E  000A               	callw
 17322  003F  3180               	pagesel	$
 17323                           
 17324                           ;mcc_generated_files/interrupt_manager.c: 72:         }
 17325  0040  2859               	goto	i1l392
 17326  0041                     i1l385:	
 17327                           ;mcc_generated_files/interrupt_manager.c: 73:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 17328                           
 17329  0041  1C1A               	btfss	26,0	;volatile
 17330  0042  2844               	goto	u360_21
 17331  0043  2845               	goto	u360_20
 17332  0044                     u360_21:	
 17333  0044  284D               	goto	i1l387
 17334  0045                     u360_20:	
 17335  0045                     i1l6007:	
 17336  0045  1C10               	btfss	16,0	;volatile
 17337  0046  2848               	goto	u361_21
 17338  0047  2849               	goto	u361_20
 17339  0048                     u361_21:	
 17340  0048  284D               	goto	i1l387
 17341  0049                     u361_20:	
 17342  0049                     i1l6009:	
 17343                           
 17344                           ;mcc_generated_files/interrupt_manager.c: 74:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 75:             TMR1_ISR();
 17345  0049  318A  228A  3180   	fcall	_TMR1_ISR
 17346                           
 17347                           ;mcc_generated_files/interrupt_manager.c: 76:         }
 17348  004C  2859               	goto	i1l392
 17349  004D                     i1l387:	
 17350                           ;mcc_generated_files/interrupt_manager.c: 77:         else if(PIE4bits.TMR2IE == 1 && PI
      +                          R4bits.TMR2IF == 1)
 17351                           
 17352  004D  1C9A               	btfss	26,1	;volatile
 17353  004E  2850               	goto	u362_21
 17354  004F  2851               	goto	u362_20
 17355  0050                     u362_21:	
 17356  0050  2859               	goto	i1l386
 17357  0051                     u362_20:	
 17358  0051                     i1l6011:	
 17359  0051  1C90               	btfss	16,1	;volatile
 17360  0052  2854               	goto	u363_21
 17361  0053  2855               	goto	u363_20
 17362  0054                     u363_21:	
 17363  0054  2859               	goto	i1l386
 17364  0055                     u363_20:	
 17365  0055                     i1l6013:	
 17366                           
 17367                           ;mcc_generated_files/interrupt_manager.c: 78:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 79:             TMR2_ISR();
 17368  0055  3189  21A0  3180   	fcall	_TMR2_ISR
 17369                           
 17370                           ;mcc_generated_files/interrupt_manager.c: 80:         }
 17371  0058  2859               	goto	i1l392
 17372  0059                     i1l386:	
 17373  0059                     i1l392:	
 17374  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 17375  005A  0009               	retfie
 17376  005B                     __end_of_INTERRUPT_InterruptManager:	
 17377                           
 17378                           	psect	text57
 17379  0851                     __ptext57:	
 17380 ;; *************** function _i2c_busCollisionISR *****************
 17381 ;; Defined at:
 17382 ;;		line 435 in file "mcc_generated_files/drivers/i2c_master.c"
 17383 ;; Parameters:    Size  Location     Type
 17384 ;;		None
 17385 ;; Auto vars:     Size  Location     Type
 17386 ;;		None
 17387 ;; Return value:  Size  Location     Type
 17388 ;;                  1    wreg      void 
 17389 ;; Registers used:
 17390 ;;		status,2, status,0, pclath, cstack
 17391 ;; Tracked objects:
 17392 ;;		On entry : 0/0
 17393 ;;		On exit  : 0/0
 17394 ;;		Unchanged: 0/0
 17395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17400 ;;Total ram usage:        0 bytes
 17401 ;; Hardware stack levels used:    1
 17402 ;; Hardware stack levels required when called:    1
 17403 ;; This function calls:
 17404 ;;		_i2c1_driver_clearBusCollision
 17405 ;; This function is called by:
 17406 ;;		_i2c_open
 17407 ;;		_INTERRUPT_InterruptManager
 17408 ;; This function uses a non-reentrant model
 17409 ;;
 17410                           
 17411                           
 17412                           ;psect for function _i2c_busCollisionISR
 17413  0851                     _i2c_busCollisionISR:	
 17414  0851                     i1l5621:	
 17415                           ;incstack = 0
 17416                           ; Regs used in _i2c_busCollisionISR: [status,2+status,0+pclath+cstack]
 17417                           
 17418                           
 17419                           ;mcc_generated_files/drivers/i2c_master.c: 437:     i2c1_driver_clearBusCollision();
 17420  0851  3188  2043  3188   	fcall	_i2c1_driver_clearBusCollision
 17421  0854                     i1l213:	
 17422  0854  0008               	return
 17423  0855                     __end_of_i2c_busCollisionISR:	
 17424                           
 17425                           	psect	text58
 17426  0843                     __ptext58:	
 17427 ;; *************** function _i2c1_driver_clearBusCollision *****************
 17428 ;; Defined at:
 17429 ;;		line 254 in file "mcc_generated_files/i2c1_driver.c"
 17430 ;; Parameters:    Size  Location     Type
 17431 ;;		None
 17432 ;; Auto vars:     Size  Location     Type
 17433 ;;		None
 17434 ;; Return value:  Size  Location     Type
 17435 ;;                  1    wreg      void 
 17436 ;; Registers used:
 17437 ;;		None
 17438 ;; Tracked objects:
 17439 ;;		On entry : 0/0
 17440 ;;		On exit  : 0/0
 17441 ;;		Unchanged: 0/0
 17442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17447 ;;Total ram usage:        0 bytes
 17448 ;; Hardware stack levels used:    1
 17449 ;; This function calls:
 17450 ;;		Nothing
 17451 ;; This function is called by:
 17452 ;;		_i2c_busCollisionISR
 17453 ;; This function uses a non-reentrant model
 17454 ;;
 17455                           
 17456                           
 17457                           ;psect for function _i2c1_driver_clearBusCollision
 17458  0843                     _i2c1_driver_clearBusCollision:	
 17459  0843                     i1l5207:	
 17460                           ;incstack = 0
 17461                           ; Regs used in _i2c1_driver_clearBusCollision: []
 17462                           
 17463                           
 17464                           ;mcc_generated_files/i2c1_driver.c: 256:     PIR3bits.BCL1IF = 0;
 17465  0843  002E               	movlb	14	; select bank14
 17466  0844  108F               	bcf	15,1	;volatile
 17467  0845                     i1l672:	
 17468  0845  0008               	return
 17469  0846                     __end_of_i2c1_driver_clearBusCollision:	
 17470                           
 17471                           	psect	text59
 17472  0C83                     __ptext59:	
 17473 ;; *************** function _i2c_ISR *****************
 17474 ;; Defined at:
 17475 ;;		line 419 in file "mcc_generated_files/drivers/i2c_master.c"
 17476 ;; Parameters:    Size  Location     Type
 17477 ;;		None
 17478 ;; Auto vars:     Size  Location     Type
 17479 ;;		None
 17480 ;; Return value:  Size  Location     Type
 17481 ;;                  1    wreg      void 
 17482 ;; Registers used:
 17483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17484 ;; Tracked objects:
 17485 ;;		On entry : 0/0
 17486 ;;		On exit  : 0/0
 17487 ;;		Unchanged: 0/0
 17488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17491 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17492 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17493 ;;Total ram usage:        3 bytes
 17494 ;; Hardware stack levels used:    1
 17495 ;; Hardware stack levels required when called:    4
 17496 ;; This function calls:
 17497 ;;		_do_I2C_DO_ACK
 17498 ;;		_do_I2C_DO_ADDRESS_NACK
 17499 ;;		_do_I2C_DO_NACK_RESTART
 17500 ;;		_do_I2C_DO_NACK_STOP
 17501 ;;		_do_I2C_IDLE
 17502 ;;		_do_I2C_RCEN
 17503 ;;		_do_I2C_RESET
 17504 ;;		_do_I2C_RX
 17505 ;;		_do_I2C_SEND_ADR_READ
 17506 ;;		_do_I2C_SEND_ADR_WRITE
 17507 ;;		_do_I2C_SEND_RESTART
 17508 ;;		_do_I2C_SEND_RESTART_READ
 17509 ;;		_do_I2C_SEND_RESTART_WRITE
 17510 ;;		_do_I2C_SEND_STOP
 17511 ;;		_do_I2C_TX
 17512 ;;		_do_I2C_TX_EMPTY
 17513 ;;		_i2c1_driver_isNACK
 17514 ;;		_mssp1_clearIRQ
 17515 ;; This function is called by:
 17516 ;;		_i2c_open
 17517 ;;		_i2c_poller
 17518 ;;		_INTERRUPT_InterruptManager
 17519 ;; This function uses a non-reentrant model
 17520 ;;
 17521                           
 17522                           
 17523                           ;psect for function _i2c_ISR
 17524  0C83                     _i2c_ISR:	
 17525  0C83                     i1l5611:	
 17526                           ;incstack = 0
 17527                           ; Regs used in _i2c_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17528                           
 17529                           
 17530                           ;mcc_generated_files/drivers/i2c_master.c: 421:     mssp1_clearIRQ();
 17531  0C83  3188  2040  318C   	fcall	_mssp1_clearIRQ
 17532  0C86                     i1l5613:	
 17533                           
 17534                           ;mcc_generated_files/drivers/i2c_master.c: 427:     if(i2c_status.addressNACKCheck && i2
      +                          c1_driver_isNACK())
 17535  0C86  0021               	movlb	1	; select bank1
 17536  0C87  1DA0               	btfss	_i2c_status^(0+128),3
 17537  0C88  2C8A               	goto	u287_21
 17538  0C89  2C8B               	goto	u287_20
 17539  0C8A                     u287_21:	
 17540  0C8A  2C98               	goto	i1l5619
 17541  0C8B                     u287_20:	
 17542  0C8B                     i1l5615:	
 17543  0C8B  3188  20A9  318C   	fcall	_i2c1_driver_isNACK
 17544  0C8E  1C03               	btfss	3,0
 17545  0C8F  2C91               	goto	u288_21
 17546  0C90  2C92               	goto	u288_20
 17547  0C91                     u288_21:	
 17548  0C91  2C98               	goto	i1l5619
 17549  0C92                     u288_20:	
 17550  0C92                     i1l5617:	
 17551                           
 17552                           ;mcc_generated_files/drivers/i2c_master.c: 428:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 429:         i2c_status.state = I2C_ADDRESS_NACK;
 17553  0C92  300F               	movlw	15
 17554  0C93  0020               	movlb	0	; select bank0
 17555  0C94  00A0               	movwf	??_i2c_ISR
 17556  0C95  0820               	movf	??_i2c_ISR,w
 17557  0C96  0021               	movlb	1	; select bank1
 17558  0C97  00A9               	movwf	(_i2c_status^(0+128)+9)
 17559  0C98                     i1l5619:	
 17560                           
 17561                           ;mcc_generated_files/drivers/i2c_master.c: 432:     i2c_status.state = fsmStateTable[i2c
      +                          _status.state]();
 17562  0C98  0021               	movlb	1	; select bank1
 17563  0C99  0829               	movf	(_i2c_status^(0+128)+9),w
 17564  0C9A  0020               	movlb	0	; select bank0
 17565  0C9B  00A0               	movwf	??_i2c_ISR
 17566  0C9C  01A1               	clrf	??_i2c_ISR+1
 17567  0C9D  35A0               	lslf	??_i2c_ISR,f
 17568  0C9E  0DA1               	rlf	??_i2c_ISR+1,f
 17569  0C9F  3000               	movlw	low (_fsmStateTable| (0+32768))
 17570  0CA0  0720               	addwf	??_i2c_ISR,w
 17571  0CA1  0084               	movwf	4
 17572  0CA2  3090               	movlw	high (_fsmStateTable| (0+32768))
 17573  0CA3  3D21               	addwfc	??_i2c_ISR+1,w
 17574  0CA4  0085               	movwf	5
 17575  0CA5  3F01               	moviw [1]fsr0
 17576  0CA6  008A               	movwf	10
 17577  0CA7  3F00               	moviw [0]fsr0
 17578  0CA8  000A               	callw
 17579  0CA9  318C               	pagesel	$
 17580  0CAA  0020               	movlb	0	; select bank0
 17581  0CAB  00A2               	movwf	??_i2c_ISR+2
 17582  0CAC  0822               	movf	??_i2c_ISR+2,w
 17583  0CAD  0021               	movlb	1	; select bank1
 17584  0CAE  00A9               	movwf	(_i2c_status^(0+128)+9)
 17585  0CAF                     i1l210:	
 17586  0CAF  0008               	return
 17587  0CB0                     __end_of_i2c_ISR:	
 17588                           
 17589                           	psect	text60
 17590  0840                     __ptext60:	
 17591 ;; *************** function _mssp1_clearIRQ *****************
 17592 ;; Defined at:
 17593 ;;		line 54 in file "mcc_generated_files/i2c1_driver.c"
 17594 ;; Parameters:    Size  Location     Type
 17595 ;;		None
 17596 ;; Auto vars:     Size  Location     Type
 17597 ;;		None
 17598 ;; Return value:  Size  Location     Type
 17599 ;;                  1    wreg      void 
 17600 ;; Registers used:
 17601 ;;		None
 17602 ;; Tracked objects:
 17603 ;;		On entry : 0/0
 17604 ;;		On exit  : 0/0
 17605 ;;		Unchanged: 0/0
 17606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17611 ;;Total ram usage:        0 bytes
 17612 ;; Hardware stack levels used:    1
 17613 ;; This function calls:
 17614 ;;		Nothing
 17615 ;; This function is called by:
 17616 ;;		_i2c_ISR
 17617 ;;		_i2c_open
 17618 ;;		_i2c_close
 17619 ;; This function uses a non-reentrant model
 17620 ;;
 17621                           
 17622                           
 17623                           ;psect for function _mssp1_clearIRQ
 17624  0840                     _mssp1_clearIRQ:	
 17625  0840                     i1l5023:	
 17626                           ;incstack = 0
 17627                           ; Regs used in _mssp1_clearIRQ: []
 17628                           
 17629                           
 17630                           ;mcc_generated_files/i2c1_driver.c: 56:         SSP1CON1 = 0x28;
 17631  0840  002E               	movlb	14	; select bank14
 17632  0841  100F               	bcf	15,0	;volatile
 17633  0842                     i1l576:	
 17634  0842  0008               	return
 17635  0843                     __end_of_mssp1_clearIRQ:	
 17636                           
 17637                           	psect	text61
 17638  0E74                     __ptext61:	
 17639 ;; *************** function _do_I2C_RX *****************
 17640 ;; Defined at:
 17641 ;;		line 357 in file "mcc_generated_files/drivers/i2c_master.c"
 17642 ;; Parameters:    Size  Location     Type
 17643 ;;		None
 17644 ;; Auto vars:     Size  Location     Type
 17645 ;;		None
 17646 ;; Return value:  Size  Location     Type
 17647 ;;                  1    wreg      enum E12722
 17648 ;; Registers used:
 17649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17650 ;; Tracked objects:
 17651 ;;		On entry : 0/0
 17652 ;;		On exit  : 0/0
 17653 ;;		Unchanged: 0/0
 17654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17657 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17658 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17659 ;;Total ram usage:        3 bytes
 17660 ;; Hardware stack levels used:    1
 17661 ;; Hardware stack levels required when called:    3
 17662 ;; This function calls:
 17663 ;;		Absolute function
 17664 ;;		_do_I2C_DO_NACK_RESTART
 17665 ;;		_do_I2C_DO_NACK_STOP
 17666 ;;		_i2c1_driver_getRXData
 17667 ;;		_i2c1_driver_sendACK
 17668 ;;		_i2c_restartWrite
 17669 ;;		_rd1RegCompleteHandler
 17670 ;;		_rd2RegCompleteHandler
 17671 ;;		_rdBlkRegCompleteHandler
 17672 ;;		_returnReset
 17673 ;;		_returnStop
 17674 ;;		_wr1RegCompleteHandler
 17675 ;;		_wr2RegCompleteHandler
 17676 ;; This function is called by:
 17677 ;;		_i2c_ISR
 17678 ;; This function uses a non-reentrant model
 17679 ;;
 17680                           
 17681                           
 17682                           ;psect for function _do_I2C_RX
 17683  0E74                     _do_I2C_RX:	
 17684  0E74                     i1l5149:	
 17685                           ;incstack = 0
 17686                           ; Regs used in _do_I2C_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17687                           
 17688                           
 17689                           ;mcc_generated_files/drivers/i2c_master.c: 359:     *i2c_status.data_ptr++ = i2c1_driver
      +                          _getRXData();
 17690  0E74  3188  203A  318E   	fcall	_i2c1_driver_getRXData
 17691  0E77  00FA               	movwf	??_do_I2C_RX
 17692  0E78  0021               	movlb	1	; select bank1
 17693  0E79  0822               	movf	(low ((_i2c_status| 0+2)))^(0+128),w
 17694  0E7A  0086               	movwf	6
 17695  0E7B  0187               	clrf	7
 17696  0E7C  087A               	movf	??_do_I2C_RX,w
 17697  0E7D  0081               	movwf	1
 17698  0E7E                     i1l5151:	
 17699  0E7E  3001               	movlw	1
 17700  0E7F  00FA               	movwf	??_do_I2C_RX
 17701  0E80  087A               	movf	??_do_I2C_RX,w
 17702  0E81  07A2               	addwf	(low ((_i2c_status| 0+2)))^(0+128),f
 17703  0E82                     i1l5153:	
 17704                           
 17705                           ;mcc_generated_files/drivers/i2c_master.c: 360:     if(--i2c_status.data_length)
 17706  0E82  3001               	movlw	1
 17707  0E83  02A3               	subwf	(_i2c_status^(0+128)+3),f
 17708  0E84  3000               	movlw	0
 17709  0E85  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 17710  0E86  0823               	movf	(_i2c_status^(0+128)+3),w
 17711  0E87  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 17712  0E88  1903               	btfsc	3,2
 17713  0E89  2E8B               	goto	u254_21
 17714  0E8A  2E8C               	goto	u254_20
 17715  0E8B                     u254_21:	
 17716  0E8B  2E91               	goto	i1l185
 17717  0E8C                     u254_20:	
 17718  0E8C                     i1l5155:	
 17719                           
 17720                           ;mcc_generated_files/drivers/i2c_master.c: 361:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 362:         i2c1_driver_sendACK();
 17721  0E8C  3188  2049  318E   	fcall	_i2c1_driver_sendACK
 17722  0E8F                     i1l5157:	
 17723                           
 17724                           ;mcc_generated_files/drivers/i2c_master.c: 363:         return I2C_RCEN;
 17725  0E8F  3005               	movlw	5
 17726  0E90  2EBD               	goto	i1l186
 17727  0E91                     i1l185:	
 17728                           ;mcc_generated_files/drivers/i2c_master.c: 365:     else
 17729                           
 17730                           
 17731                           ;mcc_generated_files/drivers/i2c_master.c: 366:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 367:         i2c_status.bufferFree = 1;
 17732  0E91  1520               	bsf	_i2c_status^(0+128),2
 17733                           
 17734                           ;mcc_generated_files/drivers/i2c_master.c: 368:         switch(i2c_status.callbackTable[
      +                          i2c_dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 17735  0E92  2E9B               	goto	i1l5173
 17736  0E93                     i1l5163:	
 17737                           
 17738                           ;mcc_generated_files/drivers/i2c_master.c: 372:                 return do_I2C_DO_NACK_RE
      +                          START();
 17739  0E93  3187  27FB  318E   	fcall	_do_I2C_DO_NACK_RESTART
 17740  0E96  2EBD               	goto	i1l186
 17741  0E97                     i1l5167:	
 17742                           
 17743                           ;mcc_generated_files/drivers/i2c_master.c: 376:                 return do_I2C_DO_NACK_ST
      +                          OP();
 17744  0E97  3188  2078  318E   	fcall	_do_I2C_DO_NACK_STOP
 17745  0E9A  2EBD               	goto	i1l186
 17746  0E9B                     i1l5173:	
 17747  0E9B  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 17748  0E9C  00FA               	movwf	??_do_I2C_RX
 17749  0E9D  087A               	movf	??_do_I2C_RX,w
 17750  0E9E  00F9               	movwf	rdBlkRegCompleteHandler@p
 17751  0E9F  300B               	movlw	11
 17752  0EA0  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17753  0EA1  0086               	movwf	6
 17754  0EA2  0187               	clrf	7
 17755  0EA3  3F41               	moviw [1]fsr1
 17756  0EA4  008A               	movwf	10
 17757  0EA5  3F40               	moviw [0]fsr1
 17758  0EA6  000A               	callw
 17759  0EA7  318E               	pagesel	$
 17760  0EA8  00FB               	movwf	??_do_I2C_RX+1
 17761  0EA9  01FC               	clrf	??_do_I2C_RX+2
 17762                           
 17763                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17764                           ; Switch size 1, requested type "simple"
 17765                           ; Number of cases is 1, Range of values is 0 to 0
 17766                           ; switch strategies available:
 17767                           ; Name         Instructions Cycles
 17768                           ; simple_byte            4     3 (average)
 17769                           ; direct_byte            8     6 (fixed)
 17770                           ; jumptable            260     6 (fixed)
 17771                           ;	Chosen strategy is simple_byte
 17772  0EAA  087C               	movf	??_do_I2C_RX+2,w
 17773  0EAB  3A00               	xorlw	0	; case 0
 17774  0EAC  1903               	skipnz
 17775  0EAD  2EAF               	goto	i1l7799
 17776  0EAE  2E97               	goto	i1l5167
 17777  0EAF                     i1l7799:	
 17778                           
 17779                           ; Switch size 1, requested type "simple"
 17780                           ; Number of cases is 4, Range of values is 1 to 4
 17781                           ; switch strategies available:
 17782                           ; Name         Instructions Cycles
 17783                           ; simple_byte           13     7 (average)
 17784                           ; direct_byte           17     9 (fixed)
 17785                           ; jumptable            263     9 (fixed)
 17786                           ;	Chosen strategy is simple_byte
 17787  0EAF  087B               	movf	??_do_I2C_RX+1,w
 17788  0EB0  3A01               	xorlw	1	; case 1
 17789  0EB1  1903               	skipnz
 17790  0EB2  2E97               	goto	i1l5167
 17791  0EB3  3A03               	xorlw	3	; case 2
 17792  0EB4  1903               	skipnz
 17793  0EB5  2E93               	goto	i1l5163
 17794  0EB6  3A01               	xorlw	1	; case 3
 17795  0EB7  1903               	skipnz
 17796  0EB8  2E93               	goto	i1l5163
 17797  0EB9  3A07               	xorlw	7	; case 4
 17798  0EBA  1903               	skipnz
 17799  0EBB  2E97               	goto	i1l5167
 17800  0EBC  2E97               	goto	i1l5167
 17801  0EBD                     i1l186:	
 17802  0EBD  0008               	return
 17803  0EBE                     __end_of_do_I2C_RX:	
 17804                           
 17805                           	psect	text62
 17806  0F58                     __ptext62:	
 17807 ;; *************** function _do_I2C_TX *****************
 17808 ;; Defined at:
 17809 ;;		line 333 in file "mcc_generated_files/drivers/i2c_master.c"
 17810 ;; Parameters:    Size  Location     Type
 17811 ;;		None
 17812 ;; Auto vars:     Size  Location     Type
 17813 ;;		None
 17814 ;; Return value:  Size  Location     Type
 17815 ;;                  1    wreg      enum E12722
 17816 ;; Registers used:
 17817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17818 ;; Tracked objects:
 17819 ;;		On entry : 0/0
 17820 ;;		On exit  : 0/0
 17821 ;;		Unchanged: 0/0
 17822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17825 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17826 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17827 ;;Total ram usage:        3 bytes
 17828 ;; Hardware stack levels used:    1
 17829 ;; Hardware stack levels required when called:    3
 17830 ;; This function calls:
 17831 ;;		Absolute function
 17832 ;;		_do_I2C_SEND_RESTART_READ
 17833 ;;		_do_I2C_SEND_RESTART_WRITE
 17834 ;;		_do_I2C_SEND_STOP
 17835 ;;		_i2c1_driver_TXData
 17836 ;;		_i2c1_driver_isNACK
 17837 ;;		_i2c_restartWrite
 17838 ;;		_rd1RegCompleteHandler
 17839 ;;		_rd2RegCompleteHandler
 17840 ;;		_rdBlkRegCompleteHandler
 17841 ;;		_returnReset
 17842 ;;		_returnStop
 17843 ;;		_wr1RegCompleteHandler
 17844 ;;		_wr2RegCompleteHandler
 17845 ;; This function is called by:
 17846 ;;		_i2c_ISR
 17847 ;; This function uses a non-reentrant model
 17848 ;;
 17849                           
 17850                           
 17851                           ;psect for function _do_I2C_TX
 17852  0F58                     _do_I2C_TX:	
 17853  0F58                     i1l5115:	
 17854                           ;incstack = 0
 17855                           ; Regs used in _do_I2C_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17856                           
 17857                           
 17858                           ;mcc_generated_files/drivers/i2c_master.c: 335:     if(i2c1_driver_isNACK())
 17859  0F58  3188  20A9  318F   	fcall	_i2c1_driver_isNACK
 17860  0F5B  1C03               	btfss	3,0
 17861  0F5C  2F5E               	goto	u252_21
 17862  0F5D  2F5F               	goto	u252_20
 17863  0F5E                     u252_21:	
 17864  0F5E  2F8F               	goto	i1l169
 17865  0F5F                     u252_20:	
 17866  0F5F  2F6C               	goto	i1l5133
 17867  0F60                     i1l5119:	
 17868                           
 17869                           ;mcc_generated_files/drivers/i2c_master.c: 340:                 return do_I2C_SEND_RESTA
      +                          RT_READ();
 17870  0F60  3188  205F  318F   	fcall	_do_I2C_SEND_RESTART_READ
 17871  0F63  2FAB               	goto	i1l172
 17872  0F64                     i1l5123:	
 17873                           
 17874                           ;mcc_generated_files/drivers/i2c_master.c: 342:                 return do_I2C_SEND_RESTA
      +                          RT_WRITE();
 17875  0F64  3188  2064  318F   	fcall	_do_I2C_SEND_RESTART_WRITE
 17876  0F67  2FAB               	goto	i1l172
 17877  0F68                     i1l5127:	
 17878                           
 17879                           ;mcc_generated_files/drivers/i2c_master.c: 346:                 return do_I2C_SEND_STOP(
      +                          );
 17880  0F68  3188  206E  318F   	fcall	_do_I2C_SEND_STOP
 17881  0F6B  2FAB               	goto	i1l172
 17882  0F6C                     i1l5133:	
 17883  0F6C  0021               	movlb	1	; select bank1
 17884  0F6D  083A               	movf	(low ((_i2c_status| 0+26)))^(0+128),w
 17885  0F6E  00FA               	movwf	??_do_I2C_TX
 17886  0F6F  087A               	movf	??_do_I2C_TX,w
 17887  0F70  00F9               	movwf	rdBlkRegCompleteHandler@p
 17888  0F71  3011               	movlw	17
 17889  0F72  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17890  0F73  0086               	movwf	6
 17891  0F74  0187               	clrf	7
 17892  0F75  3F41               	moviw [1]fsr1
 17893  0F76  008A               	movwf	10
 17894  0F77  3F40               	moviw [0]fsr1
 17895  0F78  000A               	callw
 17896  0F79  318F               	pagesel	$
 17897  0F7A  00FB               	movwf	??_do_I2C_TX+1
 17898  0F7B  01FC               	clrf	??_do_I2C_TX+2
 17899                           
 17900                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17901                           ; Switch size 1, requested type "simple"
 17902                           ; Number of cases is 1, Range of values is 0 to 0
 17903                           ; switch strategies available:
 17904                           ; Name         Instructions Cycles
 17905                           ; simple_byte            4     3 (average)
 17906                           ; direct_byte            8     6 (fixed)
 17907                           ; jumptable            260     6 (fixed)
 17908                           ;	Chosen strategy is simple_byte
 17909  0F7C  087C               	movf	??_do_I2C_TX+2,w
 17910  0F7D  3A00               	xorlw	0	; case 0
 17911  0F7E  1903               	skipnz
 17912  0F7F  2F81               	goto	i1l7801
 17913  0F80  2F68               	goto	i1l5127
 17914  0F81                     i1l7801:	
 17915                           
 17916                           ; Switch size 1, requested type "simple"
 17917                           ; Number of cases is 4, Range of values is 1 to 4
 17918                           ; switch strategies available:
 17919                           ; Name         Instructions Cycles
 17920                           ; simple_byte           13     7 (average)
 17921                           ; direct_byte           17     9 (fixed)
 17922                           ; jumptable            263     9 (fixed)
 17923                           ;	Chosen strategy is simple_byte
 17924  0F81  087B               	movf	??_do_I2C_TX+1,w
 17925  0F82  3A01               	xorlw	1	; case 1
 17926  0F83  1903               	skipnz
 17927  0F84  2F68               	goto	i1l5127
 17928  0F85  3A03               	xorlw	3	; case 2
 17929  0F86  1903               	skipnz
 17930  0F87  2F60               	goto	i1l5119
 17931  0F88  3A01               	xorlw	1	; case 3
 17932  0F89  1903               	skipnz
 17933  0F8A  2F64               	goto	i1l5123
 17934  0F8B  3A07               	xorlw	7	; case 4
 17935  0F8C  1903               	skipnz
 17936  0F8D  2F68               	goto	i1l5127
 17937  0F8E  2F68               	goto	i1l5127
 17938  0F8F                     i1l169:	
 17939                           ;mcc_generated_files/drivers/i2c_master.c: 349:     else
 17940                           
 17941                           
 17942                           ;mcc_generated_files/drivers/i2c_master.c: 350:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 351:         i2c_status.addressNACKCheck = 0;
 17943  0F8F  0021               	movlb	1	; select bank1
 17944  0F90  11A0               	bcf	_i2c_status^(0+128),3
 17945  0F91                     i1l5135:	
 17946                           
 17947                           ;mcc_generated_files/drivers/i2c_master.c: 352:         i2c1_driver_TXData(*i2c_status.d
      +                          ata_ptr++);
 17948  0F91  3002               	movlw	2
 17949  0F92  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 17950  0F93  0086               	movwf	6
 17951  0F94  0187               	clrf	7
 17952  0F95  3F40               	moviw [0]fsr1
 17953  0F96  0084               	movwf	4
 17954  0F97  0185               	clrf	5
 17955  0F98  0A81               	incf	1,f
 17956  0F99  0800               	movf	0,w
 17957  0F9A  3188  2055  318F   	fcall	_i2c1_driver_TXData
 17958  0F9D                     i1l5137:	
 17959                           
 17960                           ;mcc_generated_files/drivers/i2c_master.c: 353:         return (--i2c_status.data_length
      +                          )?I2C_TX:I2C_TX_EMPTY;
 17961  0F9D  3001               	movlw	1
 17962  0F9E  0021               	movlb	1	; select bank1
 17963  0F9F  02A3               	subwf	(_i2c_status^(0+128)+3),f
 17964  0FA0  3000               	movlw	0
 17965  0FA1  3BA4               	subwfb	((_i2c_status+1)^(0+128)+3),f
 17966  0FA2  0823               	movf	(_i2c_status^(0+128)+3),w
 17967  0FA3  0424               	iorwf	((_i2c_status+1)^(0+128)+3),w
 17968  0FA4  1D03               	btfss	3,2
 17969  0FA5  2FA7               	goto	u253_21
 17970  0FA6  2FA8               	goto	u253_20
 17971  0FA7                     u253_21:	
 17972  0FA7  2FAA               	goto	i1l5141
 17973  0FA8                     u253_20:	
 17974  0FA8                     i1l5139:	
 17975  0FA8  3006               	movlw	6
 17976  0FA9  2FAB               	goto	i1l172
 17977  0FAA                     i1l5141:	
 17978  0FAA  3003               	movlw	3
 17979  0FAB                     i1l172:	
 17980  0FAB  0008               	return
 17981  0FAC                     __end_of_do_I2C_TX:	
 17982                           
 17983                           	psect	text63
 17984  0C57                     __ptext63:	
 17985 ;; *************** function _do_I2C_DO_ADDRESS_NACK *****************
 17986 ;; Defined at:
 17987 ;;		line 319 in file "mcc_generated_files/drivers/i2c_master.c"
 17988 ;; Parameters:    Size  Location     Type
 17989 ;;		None
 17990 ;; Auto vars:     Size  Location     Type
 17991 ;;		None
 17992 ;; Return value:  Size  Location     Type
 17993 ;;                  1    wreg      enum E12722
 17994 ;; Registers used:
 17995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17996 ;; Tracked objects:
 17997 ;;		On entry : 0/0
 17998 ;;		On exit  : 0/0
 17999 ;;		Unchanged: 0/0
 18000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18003 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18004 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18005 ;;Total ram usage:        3 bytes
 18006 ;; Hardware stack levels used:    1
 18007 ;; Hardware stack levels required when called:    3
 18008 ;; This function calls:
 18009 ;;		Absolute function
 18010 ;;		_do_I2C_SEND_RESTART
 18011 ;;		_do_I2C_SEND_STOP
 18012 ;;		_i2c_restartWrite
 18013 ;;		_rd1RegCompleteHandler
 18014 ;;		_rd2RegCompleteHandler
 18015 ;;		_rdBlkRegCompleteHandler
 18016 ;;		_returnReset
 18017 ;;		_returnStop
 18018 ;;		_wr1RegCompleteHandler
 18019 ;;		_wr2RegCompleteHandler
 18020 ;; This function is called by:
 18021 ;;		_i2c_ISR
 18022 ;; This function uses a non-reentrant model
 18023 ;;
 18024                           
 18025                           
 18026                           ;psect for function _do_I2C_DO_ADDRESS_NACK
 18027  0C57                     _do_I2C_DO_ADDRESS_NACK:	
 18028  0C57                     i1l5093:	
 18029                           ;incstack = 0
 18030                           ; Regs used in _do_I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18031                           
 18032                           
 18033                           ;mcc_generated_files/drivers/i2c_master.c: 321:     i2c_status.addressNACKCheck = 0;
 18034  0C57  0021               	movlb	1	; select bank1
 18035  0C58  11A0               	bcf	_i2c_status^(0+128),3
 18036  0C59                     i1l5095:	
 18037                           
 18038                           ;mcc_generated_files/drivers/i2c_master.c: 322:     i2c_status.error = I2C_FAIL;
 18039  0C59  3002               	movlw	2
 18040  0C5A  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 18041  0C5B  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 18042  0C5C  00AA               	movwf	(_i2c_status^(0+128)+10)
 18043                           
 18044                           ;mcc_generated_files/drivers/i2c_master.c: 323:     switch(i2c_status.callbackTable[i2c_
      +                          addressNACK](i2c_status.callbackPayload[i2c_addressNACK]))
 18045  0C5D  2C66               	goto	i1l5107
 18046  0C5E                     i1l5097:	
 18047                           
 18048                           ;mcc_generated_files/drivers/i2c_master.c: 327:             return do_I2C_SEND_RESTART()
      +                          ;
 18049  0C5E  3188  2069  318C   	fcall	_do_I2C_SEND_RESTART
 18050  0C61  2C82               	goto	i1l164
 18051  0C62                     i1l5101:	
 18052                           
 18053                           ;mcc_generated_files/drivers/i2c_master.c: 329:             return do_I2C_SEND_STOP();
 18054  0C62  3188  206E  318C   	fcall	_do_I2C_SEND_STOP
 18055  0C65  2C82               	goto	i1l164
 18056  0C66                     i1l5107:	
 18057  0C66  0839               	movf	(low ((_i2c_status| 0+25)))^(0+128),w
 18058  0C67  00FA               	movwf	??_do_I2C_DO_ADDRESS_NACK
 18059  0C68  087A               	movf	??_do_I2C_DO_ADDRESS_NACK,w
 18060  0C69  00F9               	movwf	rdBlkRegCompleteHandler@p
 18061  0C6A  300F               	movlw	15
 18062  0C6B  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 18063  0C6C  0086               	movwf	6
 18064  0C6D  0187               	clrf	7
 18065  0C6E  3F41               	moviw [1]fsr1
 18066  0C6F  008A               	movwf	10
 18067  0C70  3F40               	moviw [0]fsr1
 18068  0C71  000A               	callw
 18069  0C72  318C               	pagesel	$
 18070  0C73  00FB               	movwf	??_do_I2C_DO_ADDRESS_NACK+1
 18071  0C74  01FC               	clrf	??_do_I2C_DO_ADDRESS_NACK+2
 18072                           
 18073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18074                           ; Switch size 1, requested type "simple"
 18075                           ; Number of cases is 1, Range of values is 0 to 0
 18076                           ; switch strategies available:
 18077                           ; Name         Instructions Cycles
 18078                           ; simple_byte            4     3 (average)
 18079                           ; direct_byte            8     6 (fixed)
 18080                           ; jumptable            260     6 (fixed)
 18081                           ;	Chosen strategy is simple_byte
 18082  0C75  087C               	movf	??_do_I2C_DO_ADDRESS_NACK+2,w
 18083  0C76  3A00               	xorlw	0	; case 0
 18084  0C77  1903               	skipnz
 18085  0C78  2C7A               	goto	i1l7803
 18086  0C79  2C62               	goto	i1l5101
 18087  0C7A                     i1l7803:	
 18088                           
 18089                           ; Switch size 1, requested type "simple"
 18090                           ; Number of cases is 2, Range of values is 2 to 3
 18091                           ; switch strategies available:
 18092                           ; Name         Instructions Cycles
 18093                           ; simple_byte            7     4 (average)
 18094                           ; direct_byte           13     9 (fixed)
 18095                           ; jumptable            263     9 (fixed)
 18096                           ;	Chosen strategy is simple_byte
 18097  0C7A  087B               	movf	??_do_I2C_DO_ADDRESS_NACK+1,w
 18098  0C7B  3A02               	xorlw	2	; case 2
 18099  0C7C  1903               	skipnz
 18100  0C7D  2C5E               	goto	i1l5097
 18101  0C7E  3A01               	xorlw	1	; case 3
 18102  0C7F  1903               	skipnz
 18103  0C80  2C5E               	goto	i1l5097
 18104  0C81  2C62               	goto	i1l5101
 18105  0C82                     i1l164:	
 18106  0C82  0008               	return
 18107  0C83                     __end_of_do_I2C_DO_ADDRESS_NACK:	
 18108                           
 18109                           	psect	text64
 18110  07FB                     __ptext64:	
 18111 ;; *************** function _do_I2C_DO_NACK_RESTART *****************
 18112 ;; Defined at:
 18113 ;;		line 311 in file "mcc_generated_files/drivers/i2c_master.c"
 18114 ;; Parameters:    Size  Location     Type
 18115 ;;		None
 18116 ;; Auto vars:     Size  Location     Type
 18117 ;;		None
 18118 ;; Return value:  Size  Location     Type
 18119 ;;                  1    wreg      enum E12722
 18120 ;; Registers used:
 18121 ;;		wreg, status,2, status,0, pclath, cstack
 18122 ;; Tracked objects:
 18123 ;;		On entry : 0/0
 18124 ;;		On exit  : 0/0
 18125 ;;		Unchanged: 0/0
 18126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18131 ;;Total ram usage:        0 bytes
 18132 ;; Hardware stack levels used:    1
 18133 ;; Hardware stack levels required when called:    1
 18134 ;; This function calls:
 18135 ;;		_i2c1_driver_sendNACK
 18136 ;; This function is called by:
 18137 ;;		_do_I2C_RX
 18138 ;;		_i2c_ISR
 18139 ;; This function uses a non-reentrant model
 18140 ;;
 18141                           
 18142                           
 18143                           ;psect for function _do_I2C_DO_NACK_RESTART
 18144  07FB                     _do_I2C_DO_NACK_RESTART:	
 18145  07FB                     i1l4799:	
 18146                           ;incstack = 0
 18147                           ; Regs used in _do_I2C_DO_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18148                           
 18149                           
 18150                           ;mcc_generated_files/drivers/i2c_master.c: 313:     i2c1_driver_sendNACK();
 18151  07FB  3188  204D  3187   	fcall	_i2c1_driver_sendNACK
 18152  07FE                     i1l4801:	
 18153                           
 18154                           ;mcc_generated_files/drivers/i2c_master.c: 314:     return I2C_SEND_RESTART;
 18155  07FE  3009               	movlw	9
 18156  07FF                     i1l158:	
 18157  07FF  0008               	return
 18158  0800                     __end_of_do_I2C_DO_NACK_RESTART:	
 18159                           
 18160                           	psect	text65
 18161  0878                     __ptext65:	
 18162 ;; *************** function _do_I2C_DO_NACK_STOP *****************
 18163 ;; Defined at:
 18164 ;;		line 305 in file "mcc_generated_files/drivers/i2c_master.c"
 18165 ;; Parameters:    Size  Location     Type
 18166 ;;		None
 18167 ;; Auto vars:     Size  Location     Type
 18168 ;;		None
 18169 ;; Return value:  Size  Location     Type
 18170 ;;                  1    wreg      enum E12722
 18171 ;; Registers used:
 18172 ;;		wreg, status,2, status,0, pclath, cstack
 18173 ;; Tracked objects:
 18174 ;;		On entry : 0/0
 18175 ;;		On exit  : 0/0
 18176 ;;		Unchanged: 0/0
 18177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18182 ;;Total ram usage:        0 bytes
 18183 ;; Hardware stack levels used:    1
 18184 ;; Hardware stack levels required when called:    1
 18185 ;; This function calls:
 18186 ;;		_i2c1_driver_sendNACK
 18187 ;; This function is called by:
 18188 ;;		_do_I2C_RX
 18189 ;;		_i2c_ISR
 18190 ;; This function uses a non-reentrant model
 18191 ;;
 18192                           
 18193                           
 18194                           ;psect for function _do_I2C_DO_NACK_STOP
 18195  0878                     _do_I2C_DO_NACK_STOP:	
 18196  0878                     i1l4793:	
 18197                           ;incstack = 0
 18198                           ; Regs used in _do_I2C_DO_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 18199                           
 18200                           
 18201                           ;mcc_generated_files/drivers/i2c_master.c: 307:     i2c1_driver_sendNACK();
 18202  0878  3188  204D  3188   	fcall	_i2c1_driver_sendNACK
 18203  087B                     i1l4795:	
 18204                           
 18205                           ;mcc_generated_files/drivers/i2c_master.c: 308:     return I2C_SEND_STOP;
 18206  087B  300A               	movlw	10
 18207  087C                     i1l155:	
 18208  087C  0008               	return
 18209  087D                     __end_of_do_I2C_DO_NACK_STOP:	
 18210                           
 18211                           	psect	text66
 18212  0873                     __ptext66:	
 18213 ;; *************** function _do_I2C_DO_ACK *****************
 18214 ;; Defined at:
 18215 ;;		line 299 in file "mcc_generated_files/drivers/i2c_master.c"
 18216 ;; Parameters:    Size  Location     Type
 18217 ;;		None
 18218 ;; Auto vars:     Size  Location     Type
 18219 ;;		None
 18220 ;; Return value:  Size  Location     Type
 18221 ;;                  1    wreg      enum E12722
 18222 ;; Registers used:
 18223 ;;		wreg, status,2, status,0, pclath, cstack
 18224 ;; Tracked objects:
 18225 ;;		On entry : 0/0
 18226 ;;		On exit  : 0/0
 18227 ;;		Unchanged: 0/0
 18228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18233 ;;Total ram usage:        0 bytes
 18234 ;; Hardware stack levels used:    1
 18235 ;; Hardware stack levels required when called:    1
 18236 ;; This function calls:
 18237 ;;		_i2c1_driver_sendACK
 18238 ;; This function is called by:
 18239 ;;		_i2c_ISR
 18240 ;; This function uses a non-reentrant model
 18241 ;;
 18242                           
 18243                           
 18244                           ;psect for function _do_I2C_DO_ACK
 18245  0873                     _do_I2C_DO_ACK:	
 18246  0873                     i1l5087:	
 18247                           ;incstack = 0
 18248                           ; Regs used in _do_I2C_DO_ACK: [wreg+status,2+status,0+pclath+cstack]
 18249                           
 18250                           
 18251                           ;mcc_generated_files/drivers/i2c_master.c: 301:     i2c1_driver_sendACK();
 18252  0873  3188  2049  3188   	fcall	_i2c1_driver_sendACK
 18253  0876                     i1l5089:	
 18254                           
 18255                           ;mcc_generated_files/drivers/i2c_master.c: 302:     return I2C_RCEN;
 18256  0876  3005               	movlw	5
 18257  0877                     i1l152:	
 18258  0877  0008               	return
 18259  0878                     __end_of_do_I2C_DO_ACK:	
 18260                           
 18261                           	psect	text67
 18262  089B                     __ptext67:	
 18263 ;; *************** function _do_I2C_RCEN *****************
 18264 ;; Defined at:
 18265 ;;		line 292 in file "mcc_generated_files/drivers/i2c_master.c"
 18266 ;; Parameters:    Size  Location     Type
 18267 ;;		None
 18268 ;; Auto vars:     Size  Location     Type
 18269 ;;		None
 18270 ;; Return value:  Size  Location     Type
 18271 ;;                  1    wreg      enum E12722
 18272 ;; Registers used:
 18273 ;;		wreg, status,2, status,0, pclath, cstack
 18274 ;; Tracked objects:
 18275 ;;		On entry : 0/0
 18276 ;;		On exit  : 0/0
 18277 ;;		Unchanged: 0/0
 18278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18283 ;;Total ram usage:        0 bytes
 18284 ;; Hardware stack levels used:    1
 18285 ;; Hardware stack levels required when called:    1
 18286 ;; This function calls:
 18287 ;;		_i2c1_driver_startRX
 18288 ;; This function is called by:
 18289 ;;		_i2c_ISR
 18290 ;; This function uses a non-reentrant model
 18291 ;;
 18292                           
 18293                           
 18294                           ;psect for function _do_I2C_RCEN
 18295  089B                     _do_I2C_RCEN:	
 18296  089B                     i1l5079:	
 18297                           ;incstack = 0
 18298                           ; Regs used in _do_I2C_RCEN: [wreg+status,2+status,0+pclath+cstack]
 18299                           
 18300                           
 18301                           ;mcc_generated_files/drivers/i2c_master.c: 294:     i2c_status.addressNACKCheck = 0;
 18302  089B  0021               	movlb	1	; select bank1
 18303  089C  11A0               	bcf	_i2c_status^(0+128),3
 18304  089D                     i1l5081:	
 18305                           
 18306                           ;mcc_generated_files/drivers/i2c_master.c: 295:     i2c1_driver_startRX();
 18307  089D  3188  2037  3188   	fcall	_i2c1_driver_startRX
 18308  08A0                     i1l5083:	
 18309                           
 18310                           ;mcc_generated_files/drivers/i2c_master.c: 296:     return I2C_RX;
 18311  08A0  3004               	movlw	4
 18312  08A1                     i1l149:	
 18313  08A1  0008               	return
 18314  08A2                     __end_of_do_I2C_RCEN:	
 18315                           
 18316                           	psect	text68
 18317  08B9                     __ptext68:	
 18318 ;; *************** function _do_I2C_SEND_ADR_WRITE *****************
 18319 ;; Defined at:
 18320 ;;		line 285 in file "mcc_generated_files/drivers/i2c_master.c"
 18321 ;; Parameters:    Size  Location     Type
 18322 ;;		None
 18323 ;; Auto vars:     Size  Location     Type
 18324 ;;		None
 18325 ;; Return value:  Size  Location     Type
 18326 ;;                  1    wreg      enum E12722
 18327 ;; Registers used:
 18328 ;;		wreg, status,2, status,0, pclath, cstack
 18329 ;; Tracked objects:
 18330 ;;		On entry : 0/0
 18331 ;;		On exit  : 0/0
 18332 ;;		Unchanged: 0/0
 18333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18338 ;;Total ram usage:        0 bytes
 18339 ;; Hardware stack levels used:    1
 18340 ;; Hardware stack levels required when called:    1
 18341 ;; This function calls:
 18342 ;;		_i2c1_driver_TXData
 18343 ;; This function is called by:
 18344 ;;		_i2c_ISR
 18345 ;; This function uses a non-reentrant model
 18346 ;;
 18347                           
 18348                           
 18349                           ;psect for function _do_I2C_SEND_ADR_WRITE
 18350  08B9                     _do_I2C_SEND_ADR_WRITE:	
 18351  08B9                     i1l5071:	
 18352                           ;incstack = 0
 18353                           ; Regs used in _do_I2C_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 18354                           
 18355                           
 18356                           ;mcc_generated_files/drivers/i2c_master.c: 287:     i2c_status.addressNACKCheck = 1;
 18357  08B9  0021               	movlb	1	; select bank1
 18358  08BA  15A0               	bsf	_i2c_status^(0+128),3
 18359  08BB                     i1l5073:	
 18360                           
 18361                           ;mcc_generated_files/drivers/i2c_master.c: 288:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1);
 18362  08BB  3521               	lslf	(_i2c_status^(0+128)+1),w
 18363  08BC  3188  2055  3188   	fcall	_i2c1_driver_TXData
 18364  08BF                     i1l5075:	
 18365                           
 18366                           ;mcc_generated_files/drivers/i2c_master.c: 289:     return I2C_TX;
 18367  08BF  3003               	movlw	3
 18368  08C0                     i1l146:	
 18369  08C0  0008               	return
 18370  08C1                     __end_of_do_I2C_SEND_ADR_WRITE:	
 18371                           
 18372                           	psect	text69
 18373  08D1                     __ptext69:	
 18374 ;; *************** function _do_I2C_SEND_ADR_READ *****************
 18375 ;; Defined at:
 18376 ;;		line 278 in file "mcc_generated_files/drivers/i2c_master.c"
 18377 ;; Parameters:    Size  Location     Type
 18378 ;;		None
 18379 ;; Auto vars:     Size  Location     Type
 18380 ;;		None
 18381 ;; Return value:  Size  Location     Type
 18382 ;;                  1    wreg      enum E12722
 18383 ;; Registers used:
 18384 ;;		wreg, status,2, status,0, pclath, cstack
 18385 ;; Tracked objects:
 18386 ;;		On entry : 0/0
 18387 ;;		On exit  : 0/0
 18388 ;;		Unchanged: 0/0
 18389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18394 ;;Total ram usage:        0 bytes
 18395 ;; Hardware stack levels used:    1
 18396 ;; Hardware stack levels required when called:    1
 18397 ;; This function calls:
 18398 ;;		_i2c1_driver_TXData
 18399 ;; This function is called by:
 18400 ;;		_i2c_ISR
 18401 ;; This function uses a non-reentrant model
 18402 ;;
 18403                           
 18404                           
 18405                           ;psect for function _do_I2C_SEND_ADR_READ
 18406  08D1                     _do_I2C_SEND_ADR_READ:	
 18407  08D1                     i1l5063:	
 18408                           ;incstack = 0
 18409                           ; Regs used in _do_I2C_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 18410                           
 18411                           
 18412                           ;mcc_generated_files/drivers/i2c_master.c: 280:     i2c_status.addressNACKCheck = 1;
 18413  08D1  0021               	movlb	1	; select bank1
 18414  08D2  15A0               	bsf	_i2c_status^(0+128),3
 18415  08D3                     i1l5065:	
 18416                           
 18417                           ;mcc_generated_files/drivers/i2c_master.c: 281:     i2c1_driver_TXData(i2c_status.addres
      +                          s << 1 | 1);
 18418  08D3  1403               	setc
 18419  08D4  0D21               	rlf	(_i2c_status^(0+128)+1),w
 18420  08D5  3188  2055  3188   	fcall	_i2c1_driver_TXData
 18421  08D8                     i1l5067:	
 18422                           
 18423                           ;mcc_generated_files/drivers/i2c_master.c: 282:     return I2C_RCEN;
 18424  08D8  3005               	movlw	5
 18425  08D9                     i1l143:	
 18426  08D9  0008               	return
 18427  08DA                     __end_of_do_I2C_SEND_ADR_READ:	
 18428                           
 18429                           	psect	text70
 18430  086E                     __ptext70:	
 18431 ;; *************** function _do_I2C_SEND_STOP *****************
 18432 ;; Defined at:
 18433 ;;		line 272 in file "mcc_generated_files/drivers/i2c_master.c"
 18434 ;; Parameters:    Size  Location     Type
 18435 ;;		None
 18436 ;; Auto vars:     Size  Location     Type
 18437 ;;		None
 18438 ;; Return value:  Size  Location     Type
 18439 ;;                  1    wreg      enum E12722
 18440 ;; Registers used:
 18441 ;;		wreg, status,2, status,0, pclath, cstack
 18442 ;; Tracked objects:
 18443 ;;		On entry : 0/0
 18444 ;;		On exit  : 0/0
 18445 ;;		Unchanged: 0/0
 18446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18451 ;;Total ram usage:        0 bytes
 18452 ;; Hardware stack levels used:    1
 18453 ;; Hardware stack levels required when called:    1
 18454 ;; This function calls:
 18455 ;;		_i2c1_driver_stop
 18456 ;; This function is called by:
 18457 ;;		_do_I2C_DO_ADDRESS_NACK
 18458 ;;		_do_I2C_TX
 18459 ;;		_do_I2C_TX_EMPTY
 18460 ;;		_i2c_ISR
 18461 ;; This function uses a non-reentrant model
 18462 ;;
 18463                           
 18464                           
 18465                           ;psect for function _do_I2C_SEND_STOP
 18466  086E                     _do_I2C_SEND_STOP:	
 18467  086E                     i1l4781:	
 18468                           ;incstack = 0
 18469                           ; Regs used in _do_I2C_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 18470                           
 18471                           
 18472                           ;mcc_generated_files/drivers/i2c_master.c: 274:     i2c1_driver_stop();
 18473  086E  3188  2034  3188   	fcall	_i2c1_driver_stop
 18474  0871                     i1l4783:	
 18475                           
 18476                           ;mcc_generated_files/drivers/i2c_master.c: 275:     return I2C_IDLE;
 18477  0871  3000               	movlw	0
 18478  0872                     i1l140:	
 18479  0872  0008               	return
 18480  0873                     __end_of_do_I2C_SEND_STOP:	
 18481                           
 18482                           	psect	text71
 18483  0869                     __ptext71:	
 18484 ;; *************** function _do_I2C_SEND_RESTART *****************
 18485 ;; Defined at:
 18486 ;;		line 266 in file "mcc_generated_files/drivers/i2c_master.c"
 18487 ;; Parameters:    Size  Location     Type
 18488 ;;		None
 18489 ;; Auto vars:     Size  Location     Type
 18490 ;;		None
 18491 ;; Return value:  Size  Location     Type
 18492 ;;                  1    wreg      enum E12722
 18493 ;; Registers used:
 18494 ;;		wreg, status,2, status,0, pclath, cstack
 18495 ;; Tracked objects:
 18496 ;;		On entry : 0/0
 18497 ;;		On exit  : 0/0
 18498 ;;		Unchanged: 0/0
 18499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18504 ;;Total ram usage:        0 bytes
 18505 ;; Hardware stack levels used:    1
 18506 ;; Hardware stack levels required when called:    1
 18507 ;; This function calls:
 18508 ;;		_i2c1_driver_restart
 18509 ;; This function is called by:
 18510 ;;		_do_I2C_DO_ADDRESS_NACK
 18511 ;;		_do_I2C_TX_EMPTY
 18512 ;;		_i2c_ISR
 18513 ;; This function uses a non-reentrant model
 18514 ;;
 18515                           
 18516                           
 18517                           ;psect for function _do_I2C_SEND_RESTART
 18518  0869                     _do_I2C_SEND_RESTART:	
 18519  0869                     i1l4775:	
 18520                           ;incstack = 0
 18521                           ; Regs used in _do_I2C_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18522                           
 18523                           
 18524                           ;mcc_generated_files/drivers/i2c_master.c: 268:     i2c1_driver_restart();
 18525  0869  3188  2031  3188   	fcall	_i2c1_driver_restart
 18526  086C                     i1l4777:	
 18527                           
 18528                           ;mcc_generated_files/drivers/i2c_master.c: 269:     return I2C_SEND_ADR_READ;
 18529  086C  3001               	movlw	1
 18530  086D                     i1l137:	
 18531  086D  0008               	return
 18532  086E                     __end_of_do_I2C_SEND_RESTART:	
 18533                           
 18534                           	psect	text72
 18535  0864                     __ptext72:	
 18536 ;; *************** function _do_I2C_SEND_RESTART_WRITE *****************
 18537 ;; Defined at:
 18538 ;;		line 260 in file "mcc_generated_files/drivers/i2c_master.c"
 18539 ;; Parameters:    Size  Location     Type
 18540 ;;		None
 18541 ;; Auto vars:     Size  Location     Type
 18542 ;;		None
 18543 ;; Return value:  Size  Location     Type
 18544 ;;                  1    wreg      enum E12722
 18545 ;; Registers used:
 18546 ;;		wreg, status,2, status,0, pclath, cstack
 18547 ;; Tracked objects:
 18548 ;;		On entry : 0/0
 18549 ;;		On exit  : 0/0
 18550 ;;		Unchanged: 0/0
 18551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18556 ;;Total ram usage:        0 bytes
 18557 ;; Hardware stack levels used:    1
 18558 ;; Hardware stack levels required when called:    1
 18559 ;; This function calls:
 18560 ;;		_i2c1_driver_restart
 18561 ;; This function is called by:
 18562 ;;		_do_I2C_TX
 18563 ;;		_i2c_ISR
 18564 ;; This function uses a non-reentrant model
 18565 ;;
 18566                           
 18567                           
 18568                           ;psect for function _do_I2C_SEND_RESTART_WRITE
 18569  0864                     _do_I2C_SEND_RESTART_WRITE:	
 18570  0864                     i1l4769:	
 18571                           ;incstack = 0
 18572                           ; Regs used in _do_I2C_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 18573                           
 18574                           
 18575                           ;mcc_generated_files/drivers/i2c_master.c: 262:     i2c1_driver_restart();
 18576  0864  3188  2031  3188   	fcall	_i2c1_driver_restart
 18577  0867                     i1l4771:	
 18578                           
 18579                           ;mcc_generated_files/drivers/i2c_master.c: 263:     return I2C_SEND_ADR_WRITE;
 18580  0867  3002               	movlw	2
 18581  0868                     i1l134:	
 18582  0868  0008               	return
 18583  0869                     __end_of_do_I2C_SEND_RESTART_WRITE:	
 18584                           
 18585                           	psect	text73
 18586  085F                     __ptext73:	
 18587 ;; *************** function _do_I2C_SEND_RESTART_READ *****************
 18588 ;; Defined at:
 18589 ;;		line 254 in file "mcc_generated_files/drivers/i2c_master.c"
 18590 ;; Parameters:    Size  Location     Type
 18591 ;;		None
 18592 ;; Auto vars:     Size  Location     Type
 18593 ;;		None
 18594 ;; Return value:  Size  Location     Type
 18595 ;;                  1    wreg      enum E12722
 18596 ;; Registers used:
 18597 ;;		wreg, status,2, status,0, pclath, cstack
 18598 ;; Tracked objects:
 18599 ;;		On entry : 0/0
 18600 ;;		On exit  : 0/0
 18601 ;;		Unchanged: 0/0
 18602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18607 ;;Total ram usage:        0 bytes
 18608 ;; Hardware stack levels used:    1
 18609 ;; Hardware stack levels required when called:    1
 18610 ;; This function calls:
 18611 ;;		_i2c1_driver_restart
 18612 ;; This function is called by:
 18613 ;;		_do_I2C_TX
 18614 ;;		_i2c_ISR
 18615 ;; This function uses a non-reentrant model
 18616 ;;
 18617                           
 18618                           
 18619                           ;psect for function _do_I2C_SEND_RESTART_READ
 18620  085F                     _do_I2C_SEND_RESTART_READ:	
 18621  085F                     i1l4763:	
 18622                           ;incstack = 0
 18623                           ; Regs used in _do_I2C_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 18624                           
 18625                           
 18626                           ;mcc_generated_files/drivers/i2c_master.c: 256:     i2c1_driver_restart();
 18627  085F  3188  2031  3188   	fcall	_i2c1_driver_restart
 18628  0862                     i1l4765:	
 18629                           
 18630                           ;mcc_generated_files/drivers/i2c_master.c: 257:     return I2C_SEND_ADR_READ;
 18631  0862  3001               	movlw	1
 18632  0863                     i1l131:	
 18633  0863  0008               	return
 18634  0864                     __end_of_do_I2C_SEND_RESTART_READ:	
 18635                           
 18636                           	psect	text74
 18637  085A                     __ptext74:	
 18638 ;; *************** function _do_I2C_IDLE *****************
 18639 ;; Defined at:
 18640 ;;		line 247 in file "mcc_generated_files/drivers/i2c_master.c"
 18641 ;; Parameters:    Size  Location     Type
 18642 ;;		None
 18643 ;; Auto vars:     Size  Location     Type
 18644 ;;		None
 18645 ;; Return value:  Size  Location     Type
 18646 ;;                  1    wreg      enum E12722
 18647 ;; Registers used:
 18648 ;;		wreg, status,2
 18649 ;; Tracked objects:
 18650 ;;		On entry : 0/0
 18651 ;;		On exit  : 0/0
 18652 ;;		Unchanged: 0/0
 18653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18658 ;;Total ram usage:        0 bytes
 18659 ;; Hardware stack levels used:    1
 18660 ;; This function calls:
 18661 ;;		Nothing
 18662 ;; This function is called by:
 18663 ;;		_i2c_ISR
 18664 ;; This function uses a non-reentrant model
 18665 ;;
 18666                           
 18667                           
 18668                           ;psect for function _do_I2C_IDLE
 18669  085A                     _do_I2C_IDLE:	
 18670  085A                     i1l5055:	
 18671                           ;incstack = 0
 18672                           ; Regs used in _do_I2C_IDLE: [wreg+status,2]
 18673                           
 18674                           
 18675                           ;mcc_generated_files/drivers/i2c_master.c: 249:     i2c_status.busy = 0;
 18676  085A  0021               	movlb	1	; select bank1
 18677  085B  1020               	bcf	_i2c_status^(0+128),0
 18678  085C                     i1l5057:	
 18679                           
 18680                           ;mcc_generated_files/drivers/i2c_master.c: 250:     i2c_status.error = I2C_NOERR;
 18681  085C  01AA               	clrf	(_i2c_status^(0+128)+10)
 18682  085D                     i1l5059:	
 18683                           
 18684                           ;mcc_generated_files/drivers/i2c_master.c: 251:     return I2C_RESET;
 18685  085D  300E               	movlw	14
 18686  085E                     i1l128:	
 18687  085E  0008               	return
 18688  085F                     __end_of_do_I2C_IDLE:	
 18689                           
 18690                           	psect	text75
 18691  08B1                     __ptext75:	
 18692 ;; *************** function _do_I2C_RESET *****************
 18693 ;; Defined at:
 18694 ;;		line 239 in file "mcc_generated_files/drivers/i2c_master.c"
 18695 ;; Parameters:    Size  Location     Type
 18696 ;;		None
 18697 ;; Auto vars:     Size  Location     Type
 18698 ;;		None
 18699 ;; Return value:  Size  Location     Type
 18700 ;;                  1    wreg      enum E12722
 18701 ;; Registers used:
 18702 ;;		wreg, status,2, status,0, pclath, cstack
 18703 ;; Tracked objects:
 18704 ;;		On entry : 0/0
 18705 ;;		On exit  : 0/0
 18706 ;;		Unchanged: 0/0
 18707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18712 ;;Total ram usage:        0 bytes
 18713 ;; Hardware stack levels used:    1
 18714 ;; Hardware stack levels required when called:    1
 18715 ;; This function calls:
 18716 ;;		_i2c1_driver_resetBus
 18717 ;; This function is called by:
 18718 ;;		_i2c_ISR
 18719 ;; This function uses a non-reentrant model
 18720 ;;
 18721                           
 18722                           
 18723                           ;psect for function _do_I2C_RESET
 18724  08B1                     _do_I2C_RESET:	
 18725  08B1                     i1l5045:	
 18726                           ;incstack = 0
 18727                           ; Regs used in _do_I2C_RESET: [wreg+status,2+status,0+pclath+cstack]
 18728                           
 18729                           
 18730                           ;mcc_generated_files/drivers/i2c_master.c: 241:     i2c1_driver_resetBus();
 18731  08B1  3188  2029  3188   	fcall	_i2c1_driver_resetBus
 18732  08B4                     i1l5047:	
 18733                           
 18734                           ;mcc_generated_files/drivers/i2c_master.c: 242:     i2c_status.busy = 0;
 18735  08B4  0021               	movlb	1	; select bank1
 18736  08B5  1020               	bcf	_i2c_status^(0+128),0
 18737  08B6                     i1l5049:	
 18738                           
 18739                           ;mcc_generated_files/drivers/i2c_master.c: 243:     i2c_status.error = I2C_NOERR;
 18740  08B6  01AA               	clrf	(_i2c_status^(0+128)+10)
 18741  08B7                     i1l5051:	
 18742                           
 18743                           ;mcc_generated_files/drivers/i2c_master.c: 244:     return I2C_RESET;
 18744  08B7  300E               	movlw	14
 18745  08B8                     i1l125:	
 18746  08B8  0008               	return
 18747  08B9                     __end_of_do_I2C_RESET:	
 18748                           
 18749                           	psect	text76
 18750  0D72                     __ptext76:	
 18751 ;; *************** function _do_I2C_TX_EMPTY *****************
 18752 ;; Defined at:
 18753 ;;		line 382 in file "mcc_generated_files/drivers/i2c_master.c"
 18754 ;; Parameters:    Size  Location     Type
 18755 ;;		None
 18756 ;; Auto vars:     Size  Location     Type
 18757 ;;		None
 18758 ;; Return value:  Size  Location     Type
 18759 ;;                  1    wreg      enum E12722
 18760 ;; Registers used:
 18761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18762 ;; Tracked objects:
 18763 ;;		On entry : 0/0
 18764 ;;		On exit  : 0/0
 18765 ;;		Unchanged: 0/0
 18766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18769 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18770 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18771 ;;Total ram usage:        3 bytes
 18772 ;; Hardware stack levels used:    1
 18773 ;; Hardware stack levels required when called:    3
 18774 ;; This function calls:
 18775 ;;		Absolute function
 18776 ;;		_do_I2C_SEND_RESTART
 18777 ;;		_do_I2C_SEND_STOP
 18778 ;;		_i2c_restartWrite
 18779 ;;		_mssp1_setIRQ
 18780 ;;		_rd1RegCompleteHandler
 18781 ;;		_rd2RegCompleteHandler
 18782 ;;		_rdBlkRegCompleteHandler
 18783 ;;		_returnReset
 18784 ;;		_returnStop
 18785 ;;		_wr1RegCompleteHandler
 18786 ;;		_wr2RegCompleteHandler
 18787 ;; This function is called by:
 18788 ;;		_i2c_ISR
 18789 ;; This function uses a non-reentrant model
 18790 ;;
 18791                           
 18792                           
 18793                           ;psect for function _do_I2C_TX_EMPTY
 18794  0D72                     _do_I2C_TX_EMPTY:	
 18795  0D72                     i1l5181:	
 18796                           ;incstack = 0
 18797                           ; Regs used in _do_I2C_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18798                           
 18799                           
 18800                           ;mcc_generated_files/drivers/i2c_master.c: 384:     i2c_status.bufferFree = 1;
 18801  0D72  0021               	movlb	1	; select bank1
 18802  0D73  1520               	bsf	_i2c_status^(0+128),2
 18803                           
 18804                           ;mcc_generated_files/drivers/i2c_master.c: 385:     switch(i2c_status.callbackTable[i2c_
      +                          dataComplete](i2c_status.callbackPayload[i2c_dataComplete]))
 18805  0D74  2D82               	goto	i1l5199
 18806  0D75                     i1l5183:	
 18807                           
 18808                           ;mcc_generated_files/drivers/i2c_master.c: 389:             return do_I2C_SEND_RESTART()
      +                          ;
 18809  0D75  3188  2069  318D   	fcall	_do_I2C_SEND_RESTART
 18810  0D78  2DA4               	goto	i1l200
 18811  0D79                     i1l5187:	
 18812                           
 18813                           ;mcc_generated_files/drivers/i2c_master.c: 391:             mssp1_setIRQ();
 18814  0D79  3188  203D  318D   	fcall	_mssp1_setIRQ
 18815  0D7C                     i1l5189:	
 18816                           
 18817                           ;mcc_generated_files/drivers/i2c_master.c: 392:             return I2C_TX;
 18818  0D7C  3003               	movlw	3
 18819  0D7D  2DA4               	goto	i1l200
 18820  0D7E                     i1l5193:	
 18821                           
 18822                           ;mcc_generated_files/drivers/i2c_master.c: 395:             return do_I2C_SEND_STOP();
 18823  0D7E  3188  206E  318D   	fcall	_do_I2C_SEND_STOP
 18824  0D81  2DA4               	goto	i1l200
 18825  0D82                     i1l5199:	
 18826  0D82  0837               	movf	(low ((_i2c_status| 0+23)))^(0+128),w
 18827  0D83  00FA               	movwf	??_do_I2C_TX_EMPTY
 18828  0D84  087A               	movf	??_do_I2C_TX_EMPTY,w
 18829  0D85  00F9               	movwf	rdBlkRegCompleteHandler@p
 18830  0D86  300B               	movlw	11
 18831  0D87  3EA0               	addlw	(low (_i2c_status| 0))& (0+255)
 18832  0D88  0086               	movwf	6
 18833  0D89  0187               	clrf	7
 18834  0D8A  3F41               	moviw [1]fsr1
 18835  0D8B  008A               	movwf	10
 18836  0D8C  3F40               	moviw [0]fsr1
 18837  0D8D  000A               	callw
 18838  0D8E  318D               	pagesel	$
 18839  0D8F  00FB               	movwf	??_do_I2C_TX_EMPTY+1
 18840  0D90  01FC               	clrf	??_do_I2C_TX_EMPTY+2
 18841                           
 18842                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18843                           ; Switch size 1, requested type "simple"
 18844                           ; Number of cases is 1, Range of values is 0 to 0
 18845                           ; switch strategies available:
 18846                           ; Name         Instructions Cycles
 18847                           ; simple_byte            4     3 (average)
 18848                           ; direct_byte            8     6 (fixed)
 18849                           ; jumptable            260     6 (fixed)
 18850                           ;	Chosen strategy is simple_byte
 18851  0D91  087C               	movf	??_do_I2C_TX_EMPTY+2,w
 18852  0D92  3A00               	xorlw	0	; case 0
 18853  0D93  1903               	skipnz
 18854  0D94  2D96               	goto	i1l7805
 18855  0D95  2D7E               	goto	i1l5193
 18856  0D96                     i1l7805:	
 18857                           
 18858                           ; Switch size 1, requested type "simple"
 18859                           ; Number of cases is 4, Range of values is 1 to 4
 18860                           ; switch strategies available:
 18861                           ; Name         Instructions Cycles
 18862                           ; simple_byte           13     7 (average)
 18863                           ; direct_byte           17     9 (fixed)
 18864                           ; jumptable            263     9 (fixed)
 18865                           ;	Chosen strategy is simple_byte
 18866  0D96  087B               	movf	??_do_I2C_TX_EMPTY+1,w
 18867  0D97  3A01               	xorlw	1	; case 1
 18868  0D98  1903               	skipnz
 18869  0D99  2D7E               	goto	i1l5193
 18870  0D9A  3A03               	xorlw	3	; case 2
 18871  0D9B  1903               	skipnz
 18872  0D9C  2D75               	goto	i1l5183
 18873  0D9D  3A01               	xorlw	1	; case 3
 18874  0D9E  1903               	skipnz
 18875  0D9F  2D75               	goto	i1l5183
 18876  0DA0  3A07               	xorlw	7	; case 4
 18877  0DA1  1903               	skipnz
 18878  0DA2  2D79               	goto	i1l5187
 18879  0DA3  2D7E               	goto	i1l5193
 18880  0DA4                     i1l200:	
 18881  0DA4  0008               	return
 18882  0DA5                     __end_of_do_I2C_TX_EMPTY:	
 18883                           
 18884                           	psect	text77
 18885  083D                     __ptext77:	
 18886 ;; *************** function _mssp1_setIRQ *****************
 18887 ;; Defined at:
 18888 ;;		line 59 in file "mcc_generated_files/i2c1_driver.c"
 18889 ;; Parameters:    Size  Location     Type
 18890 ;;		None
 18891 ;; Auto vars:     Size  Location     Type
 18892 ;;		None
 18893 ;; Return value:  Size  Location     Type
 18894 ;;                  1    wreg      void 
 18895 ;; Registers used:
 18896 ;;		None
 18897 ;; Tracked objects:
 18898 ;;		On entry : 0/0
 18899 ;;		On exit  : 0/0
 18900 ;;		Unchanged: 0/0
 18901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18906 ;;Total ram usage:        0 bytes
 18907 ;; Hardware stack levels used:    1
 18908 ;; This function calls:
 18909 ;;		Nothing
 18910 ;; This function is called by:
 18911 ;;		_do_I2C_TX_EMPTY
 18912 ;; This function uses a non-reentrant model
 18913 ;;
 18914                           
 18915                           
 18916                           ;psect for function _mssp1_setIRQ
 18917  083D                     _mssp1_setIRQ:	
 18918  083D                     i1l4813:	
 18919                           ;incstack = 0
 18920                           ; Regs used in _mssp1_setIRQ: []
 18921                           
 18922                           
 18923                           ;mcc_generated_files/i2c1_driver.c: 61:     else
 18924  083D  002E               	movlb	14	; select bank14
 18925  083E  140F               	bsf	15,0	;volatile
 18926  083F                     i1l579:	
 18927  083F  0008               	return
 18928  0840                     __end_of_mssp1_setIRQ:	
 18929                           
 18930                           	psect	text78
 18931  08A9                     __ptext78:	
 18932 ;; *************** function _i2c1_driver_isNACK *****************
 18933 ;; Defined at:
 18934 ;;		line 162 in file "mcc_generated_files/i2c1_driver.c"
 18935 ;; Parameters:    Size  Location     Type
 18936 ;;		None
 18937 ;; Auto vars:     Size  Location     Type
 18938 ;;		None
 18939 ;; Return value:  Size  Location     Type
 18940 ;;		None               void
 18941 ;; Registers used:
 18942 ;;		wreg, status,2, status,0
 18943 ;; Tracked objects:
 18944 ;;		On entry : 0/0
 18945 ;;		On exit  : 0/0
 18946 ;;		Unchanged: 0/0
 18947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18950 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18951 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18952 ;;Total ram usage:        1 bytes
 18953 ;; Hardware stack levels used:    1
 18954 ;; This function calls:
 18955 ;;		Nothing
 18956 ;; This function is called by:
 18957 ;;		_do_I2C_TX
 18958 ;;		_i2c_ISR
 18959 ;; This function uses a non-reentrant model
 18960 ;;
 18961                           
 18962                           
 18963                           ;psect for function _i2c1_driver_isNACK
 18964  08A9                     _i2c1_driver_isNACK:	
 18965  08A9                     i1l4805:	
 18966                           ;incstack = 0
 18967                           ; Regs used in _i2c1_driver_isNACK: [wreg+status,2+status,0]
 18968                           
 18969                           
 18970                           ;mcc_generated_files/i2c1_driver.c: 164:     return SSP1CON2bits.ACKSTAT;
 18971  08A9  0023               	movlb	3	; select bank3
 18972  08AA  0E11               	swapf	17,w	;volatile
 18973  08AB  0C89               	rrf	9,f
 18974  08AC  0C89               	rrf	9,f
 18975  08AD  3901               	andlw	1
 18976  08AE  00F0               	movwf	??_i2c1_driver_isNACK
 18977  08AF  0C70               	rrf	??_i2c1_driver_isNACK,w
 18978  08B0                     i1l614:	
 18979  08B0  0008               	return
 18980  08B1                     __end_of_i2c1_driver_isNACK:	
 18981                           
 18982                           	psect	text79
 18983  0855                     __ptext79:	
 18984 ;; *************** function _i2c1_driver_TXData *****************
 18985 ;; Defined at:
 18986 ;;		line 187 in file "mcc_generated_files/i2c1_driver.c"
 18987 ;; Parameters:    Size  Location     Type
 18988 ;;  d               1    wreg     unsigned char 
 18989 ;; Auto vars:     Size  Location     Type
 18990 ;;  d               1    0[COMMON] unsigned char 
 18991 ;; Return value:  Size  Location     Type
 18992 ;;                  1    wreg      void 
 18993 ;; Registers used:
 18994 ;;		wreg
 18995 ;; Tracked objects:
 18996 ;;		On entry : 0/0
 18997 ;;		On exit  : 0/0
 18998 ;;		Unchanged: 0/0
 18999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19004 ;;Total ram usage:        1 bytes
 19005 ;; Hardware stack levels used:    1
 19006 ;; This function calls:
 19007 ;;		Nothing
 19008 ;; This function is called by:
 19009 ;;		_do_I2C_SEND_ADR_READ
 19010 ;;		_do_I2C_SEND_ADR_WRITE
 19011 ;;		_do_I2C_TX
 19012 ;; This function uses a non-reentrant model
 19013 ;;
 19014                           
 19015                           
 19016                           ;psect for function _i2c1_driver_TXData
 19017  0855                     _i2c1_driver_TXData:	
 19018                           
 19019                           ;incstack = 0
 19020                           ; Regs used in _i2c1_driver_TXData: [wreg]
 19021                           ;i2c1_driver_TXData@d stored from wreg
 19022  0855  00F0               	movwf	i2c1_driver_TXData@d
 19023  0856                     i1l4787:	
 19024                           
 19025                           ;mcc_generated_files/i2c1_driver.c: 187: __attribute__((inline)) void i2c1_driver_TXData
      +                          (char d);mcc_generated_files/i2c1_driver.c: 188: {;mcc_generated_files/i2c1_driver.c: 18
      +                          9:     SSP1BUF = d;
 19026  0856  0870               	movf	i2c1_driver_TXData@d,w
 19027  0857  0023               	movlb	3	; select bank3
 19028  0858  008C               	movwf	12	;volatile
 19029  0859                     i1l629:	
 19030  0859  0008               	return
 19031  085A                     __end_of_i2c1_driver_TXData:	
 19032                           
 19033                           	psect	text80
 19034  083A                     __ptext80:	
 19035 ;; *************** function _i2c1_driver_getRXData *****************
 19036 ;; Defined at:
 19037 ;;		line 172 in file "mcc_generated_files/i2c1_driver.c"
 19038 ;; Parameters:    Size  Location     Type
 19039 ;;		None
 19040 ;; Auto vars:     Size  Location     Type
 19041 ;;		None
 19042 ;; Return value:  Size  Location     Type
 19043 ;;                  1    wreg      unsigned char 
 19044 ;; Registers used:
 19045 ;;		wreg
 19046 ;; Tracked objects:
 19047 ;;		On entry : 0/0
 19048 ;;		On exit  : 0/0
 19049 ;;		Unchanged: 0/0
 19050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19055 ;;Total ram usage:        0 bytes
 19056 ;; Hardware stack levels used:    1
 19057 ;; This function calls:
 19058 ;;		Nothing
 19059 ;; This function is called by:
 19060 ;;		_do_I2C_RX
 19061 ;; This function uses a non-reentrant model
 19062 ;;
 19063                           
 19064                           
 19065                           ;psect for function _i2c1_driver_getRXData
 19066  083A                     _i2c1_driver_getRXData:	
 19067  083A                     i1l4809:	
 19068                           ;incstack = 0
 19069                           ; Regs used in _i2c1_driver_getRXData: [wreg]
 19070                           
 19071                           
 19072                           ;mcc_generated_files/i2c1_driver.c: 174:     return SSP1BUF;
 19073  083A  0023               	movlb	3	; select bank3
 19074  083B  080C               	movf	12,w	;volatile
 19075  083C                     i1l620:	
 19076  083C  0008               	return
 19077  083D                     __end_of_i2c1_driver_getRXData:	
 19078                           
 19079                           	psect	text81
 19080  084D                     __ptext81:	
 19081 ;; *************** function _i2c1_driver_sendNACK *****************
 19082 ;; Defined at:
 19083 ;;		line 203 in file "mcc_generated_files/i2c1_driver.c"
 19084 ;; Parameters:    Size  Location     Type
 19085 ;;		None
 19086 ;; Auto vars:     Size  Location     Type
 19087 ;;		None
 19088 ;; Return value:  Size  Location     Type
 19089 ;;                  1    wreg      void 
 19090 ;; Registers used:
 19091 ;;		None
 19092 ;; Tracked objects:
 19093 ;;		On entry : 0/0
 19094 ;;		On exit  : 0/0
 19095 ;;		Unchanged: 0/0
 19096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19101 ;;Total ram usage:        0 bytes
 19102 ;; Hardware stack levels used:    1
 19103 ;; This function calls:
 19104 ;;		Nothing
 19105 ;; This function is called by:
 19106 ;;		_do_I2C_DO_NACK_STOP
 19107 ;;		_do_I2C_DO_NACK_RESTART
 19108 ;; This function uses a non-reentrant model
 19109 ;;
 19110                           
 19111                           
 19112                           ;psect for function _i2c1_driver_sendNACK
 19113  084D                     _i2c1_driver_sendNACK:	
 19114  084D                     i1l4625:	
 19115                           ;incstack = 0
 19116                           ; Regs used in _i2c1_driver_sendNACK: []
 19117                           
 19118                           
 19119                           ;mcc_generated_files/i2c1_driver.c: 205:     SSP1CON2bits.ACKDT = 1;
 19120  084D  0023               	movlb	3	; select bank3
 19121  084E  1691               	bsf	17,5	;volatile
 19122                           
 19123                           ;mcc_generated_files/i2c1_driver.c: 206:     SSP1CON2bits.ACKEN = 1;
 19124  084F  1611               	bsf	17,4	;volatile
 19125  0850                     i1l638:	
 19126  0850  0008               	return
 19127  0851                     __end_of_i2c1_driver_sendNACK:	
 19128                           
 19129                           	psect	text82
 19130  0829                     __ptext82:	
 19131 ;; *************** function _i2c1_driver_resetBus *****************
 19132 ;; Defined at:
 19133 ;;		line 142 in file "mcc_generated_files/i2c1_driver.c"
 19134 ;; Parameters:    Size  Location     Type
 19135 ;;		None
 19136 ;; Auto vars:     Size  Location     Type
 19137 ;;		None
 19138 ;; Return value:  Size  Location     Type
 19139 ;;                  1    wreg      void 
 19140 ;; Registers used:
 19141 ;;		None
 19142 ;; Tracked objects:
 19143 ;;		On entry : 0/0
 19144 ;;		On exit  : 0/0
 19145 ;;		Unchanged: 0/0
 19146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19151 ;;Total ram usage:        0 bytes
 19152 ;; Hardware stack levels used:    1
 19153 ;; This function calls:
 19154 ;;		Nothing
 19155 ;; This function is called by:
 19156 ;;		_do_I2C_RESET
 19157 ;; This function uses a non-reentrant model
 19158 ;;
 19159                           
 19160                           
 19161                           ;psect for function _i2c1_driver_resetBus
 19162  0829                     _i2c1_driver_resetBus:	
 19163  0829                     i1l602:	
 19164                           ;incstack = 0
 19165                           ; Regs used in _i2c1_driver_resetBus: []
 19166                           
 19167  0829  0008               	return
 19168  082A                     __end_of_i2c1_driver_resetBus:	
 19169                           
 19170                           	psect	text83
 19171  0837                     __ptext83:	
 19172 ;; *************** function _i2c1_driver_startRX *****************
 19173 ;; Defined at:
 19174 ;;		line 167 in file "mcc_generated_files/i2c1_driver.c"
 19175 ;; Parameters:    Size  Location     Type
 19176 ;;		None
 19177 ;; Auto vars:     Size  Location     Type
 19178 ;;		None
 19179 ;; Return value:  Size  Location     Type
 19180 ;;                  1    wreg      void 
 19181 ;; Registers used:
 19182 ;;		None
 19183 ;; Tracked objects:
 19184 ;;		On entry : 0/0
 19185 ;;		On exit  : 0/0
 19186 ;;		Unchanged: 0/0
 19187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19192 ;;Total ram usage:        0 bytes
 19193 ;; Hardware stack levels used:    1
 19194 ;; This function calls:
 19195 ;;		Nothing
 19196 ;; This function is called by:
 19197 ;;		_do_I2C_RCEN
 19198 ;; This function uses a non-reentrant model
 19199 ;;
 19200                           
 19201                           
 19202                           ;psect for function _i2c1_driver_startRX
 19203  0837                     _i2c1_driver_startRX:	
 19204  0837                     i1l4789:	
 19205                           ;incstack = 0
 19206                           ; Regs used in _i2c1_driver_startRX: []
 19207                           
 19208                           
 19209                           ;mcc_generated_files/i2c1_driver.c: 169:     SSP1CON2bits.RCEN = 1;
 19210  0837  0023               	movlb	3	; select bank3
 19211  0838  1591               	bsf	17,3	;volatile
 19212  0839                     i1l617:	
 19213  0839  0008               	return
 19214  083A                     __end_of_i2c1_driver_startRX:	
 19215                           
 19216                           	psect	text84
 19217  0AA1                     __ptext84:	
 19218 ;; *************** function _rdBlkRegCompleteHandler *****************
 19219 ;; Defined at:
 19220 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19221 ;; Parameters:    Size  Location     Type
 19222 ;;  p               1    9[COMMON] PTR void 
 19223 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19224 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19225 ;; Auto vars:     Size  Location     Type
 19226 ;;		None
 19227 ;; Return value:  Size  Location     Type
 19228 ;;                  1    wreg      enum E358
 19229 ;; Registers used:
 19230 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19231 ;; Tracked objects:
 19232 ;;		On entry : 0/0
 19233 ;;		On exit  : 0/0
 19234 ;;		Unchanged: 0/0
 19235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19236 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19239 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19240 ;;Total ram usage:        1 bytes
 19241 ;; Hardware stack levels used:    1
 19242 ;; Hardware stack levels required when called:    2
 19243 ;; This function calls:
 19244 ;;		_i2c_setBuffer
 19245 ;;		_i2c_setDataCompleteCallback
 19246 ;; This function is called by:
 19247 ;;		_i2c_readDataBlock
 19248 ;;		_do_I2C_DO_ADDRESS_NACK
 19249 ;;		_do_I2C_TX
 19250 ;;		_do_I2C_RX
 19251 ;;		_do_I2C_TX_EMPTY
 19252 ;; This function uses a non-reentrant model
 19253 ;;
 19254                           
 19255                           
 19256                           ;psect for function _rdBlkRegCompleteHandler
 19257  0AA1                     _rdBlkRegCompleteHandler:	
 19258  0AA1                     i1l4855:	
 19259                           ;incstack = 0
 19260                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 19261                           
 19262                           
 19263                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 136:     i2c_setBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
 19264  0AA1  0879               	movf	rdBlkRegCompleteHandler@p,w
 19265  0AA2  0086               	movwf	6
 19266  0AA3  0187               	clrf	7
 19267  0AA4  3F40               	moviw [0]fsr1
 19268  0AA5  00F0               	movwf	i2c_setBuffer@bufferSize
 19269  0AA6  3F41               	moviw [1]fsr1
 19270  0AA7  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19271  0AA8  0879               	movf	rdBlkRegCompleteHandler@p,w
 19272  0AA9  3E02               	addlw	2
 19273  0AAA  0086               	movwf	6
 19274  0AAB  0187               	clrf	7
 19275  0AAC  0801               	movf	1,w
 19276  0AAD  3189  21BE  318A   	fcall	_i2c_setBuffer
 19277                           
 19278                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 19279  0AB0  3000               	movlw	0
 19280  0AB1  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19281  0AB2  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19282  0AB3  01F7               	clrf	i2c_setDataCompleteCallback@p
 19283  0AB4  3189  2169  318A   	fcall	_i2c_setDataCompleteCallback
 19284  0AB7                     i1l4857:	
 19285                           
 19286                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return i2c_restart_read;
 19287  0AB7  3002               	movlw	2
 19288  0AB8                     i1l303:	
 19289  0AB8  0008               	return
 19290  0AB9                     __end_of_rdBlkRegCompleteHandler:	
 19291                           
 19292                           	psect	text85
 19293  0A22                     __ptext85:	
 19294 ;; *************** function _rd2RegCompleteHandler *****************
 19295 ;; Defined at:
 19296 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19297 ;; Parameters:    Size  Location     Type
 19298 ;;  p               1    9[COMMON] PTR void 
 19299 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19300 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19301 ;; Auto vars:     Size  Location     Type
 19302 ;;		None
 19303 ;; Return value:  Size  Location     Type
 19304 ;;                  1    wreg      enum E358
 19305 ;; Registers used:
 19306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19307 ;; Tracked objects:
 19308 ;;		On entry : 0/0
 19309 ;;		On exit  : 0/0
 19310 ;;		Unchanged: 0/0
 19311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19312 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19315 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19316 ;;Total ram usage:        1 bytes
 19317 ;; Hardware stack levels used:    1
 19318 ;; Hardware stack levels required when called:    2
 19319 ;; This function calls:
 19320 ;;		_i2c_setBuffer
 19321 ;;		_i2c_setDataCompleteCallback
 19322 ;; This function is called by:
 19323 ;;		_i2c_read2ByteRegister
 19324 ;;		_do_I2C_DO_ADDRESS_NACK
 19325 ;;		_do_I2C_TX
 19326 ;;		_do_I2C_RX
 19327 ;;		_do_I2C_TX_EMPTY
 19328 ;; This function uses a non-reentrant model
 19329 ;;
 19330                           
 19331                           
 19332                           ;psect for function _rd2RegCompleteHandler
 19333  0A22                     _rd2RegCompleteHandler:	
 19334  0A22                     i1l4839:	
 19335                           ;incstack = 0
 19336                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19337                           
 19338                           
 19339                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c_operations_t rd2RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 89:     i2c_setBuffer(p,2);
 19340  0A22  3002               	movlw	2
 19341  0A23  00F0               	movwf	i2c_setBuffer@bufferSize
 19342  0A24  3000               	movlw	0
 19343  0A25  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19344  0A26  0879               	movf	rd2RegCompleteHandler@p,w
 19345  0A27  3189  21BE  318A   	fcall	_i2c_setBuffer
 19346  0A2A                     i1l4841:	
 19347                           
 19348                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 19349  0A2A  3000               	movlw	0
 19350  0A2B  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19351  0A2C  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19352  0A2D  01F7               	clrf	i2c_setDataCompleteCallback@p
 19353  0A2E  3189  2169  318A   	fcall	_i2c_setDataCompleteCallback
 19354  0A31                     i1l4843:	
 19355                           
 19356                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return i2c_restart_read;
 19357  0A31  3002               	movlw	2
 19358  0A32                     i1l279:	
 19359  0A32  0008               	return
 19360  0A33                     __end_of_rd2RegCompleteHandler:	
 19361                           
 19362                           	psect	text86
 19363  0A11                     __ptext86:	
 19364 ;; *************** function _rd1RegCompleteHandler *****************
 19365 ;; Defined at:
 19366 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19367 ;; Parameters:    Size  Location     Type
 19368 ;;  p               1    9[COMMON] PTR void 
 19369 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19370 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19371 ;; Auto vars:     Size  Location     Type
 19372 ;;		None
 19373 ;; Return value:  Size  Location     Type
 19374 ;;                  1    wreg      enum E358
 19375 ;; Registers used:
 19376 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19377 ;; Tracked objects:
 19378 ;;		On entry : 0/0
 19379 ;;		On exit  : 0/0
 19380 ;;		Unchanged: 0/0
 19381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19382 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19385 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19386 ;;Total ram usage:        1 bytes
 19387 ;; Hardware stack levels used:    1
 19388 ;; Hardware stack levels required when called:    2
 19389 ;; This function calls:
 19390 ;;		_i2c_setBuffer
 19391 ;;		_i2c_setDataCompleteCallback
 19392 ;; This function is called by:
 19393 ;;		_i2c_read1ByteRegister
 19394 ;;		_do_I2C_DO_ADDRESS_NACK
 19395 ;;		_do_I2C_TX
 19396 ;;		_do_I2C_RX
 19397 ;;		_do_I2C_TX_EMPTY
 19398 ;; This function uses a non-reentrant model
 19399 ;;
 19400                           
 19401                           
 19402                           ;psect for function _rd1RegCompleteHandler
 19403  0A11                     _rd1RegCompleteHandler:	
 19404  0A11                     i1l4831:	
 19405                           ;incstack = 0
 19406                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19407                           
 19408                           
 19409                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 60:     i2c_setBuffer(p,1);
 19410  0A11  3001               	movlw	1
 19411  0A12  00F0               	movwf	i2c_setBuffer@bufferSize
 19412  0A13  3000               	movlw	0
 19413  0A14  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19414  0A15  0879               	movf	rd1RegCompleteHandler@p,w
 19415  0A16  3189  21BE  318A   	fcall	_i2c_setBuffer
 19416  0A19                     i1l4833:	
 19417                           
 19418                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 19419  0A19  3000               	movlw	0
 19420  0A1A  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19421  0A1B  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19422  0A1C  01F7               	clrf	i2c_setDataCompleteCallback@p
 19423  0A1D  3189  2169  318A   	fcall	_i2c_setDataCompleteCallback
 19424  0A20                     i1l4835:	
 19425                           
 19426                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return i2c_restart_read;
 19427  0A20  3002               	movlw	2
 19428  0A21                     i1l264:	
 19429  0A21  0008               	return
 19430  0A22                     __end_of_rd1RegCompleteHandler:	
 19431                           
 19432                           	psect	text87
 19433  0A00                     __ptext87:	
 19434 ;; *************** function _wr1RegCompleteHandler *****************
 19435 ;; Defined at:
 19436 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19437 ;; Parameters:    Size  Location     Type
 19438 ;;  p               1    9[COMMON] PTR void 
 19439 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19440 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19441 ;; Auto vars:     Size  Location     Type
 19442 ;;		None
 19443 ;; Return value:  Size  Location     Type
 19444 ;;                  1    wreg      enum E358
 19445 ;; Registers used:
 19446 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19447 ;; Tracked objects:
 19448 ;;		On entry : 0/0
 19449 ;;		On exit  : 0/0
 19450 ;;		Unchanged: 0/0
 19451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19452 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19455 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19456 ;;Total ram usage:        1 bytes
 19457 ;; Hardware stack levels used:    1
 19458 ;; Hardware stack levels required when called:    2
 19459 ;; This function calls:
 19460 ;;		_i2c_setBuffer
 19461 ;;		_i2c_setDataCompleteCallback
 19462 ;; This function is called by:
 19463 ;;		_i2c_write1ByteRegister
 19464 ;;		_do_I2C_DO_ADDRESS_NACK
 19465 ;;		_do_I2C_TX
 19466 ;;		_do_I2C_RX
 19467 ;;		_do_I2C_TX_EMPTY
 19468 ;; This function uses a non-reentrant model
 19469 ;;
 19470                           
 19471                           
 19472                           ;psect for function _wr1RegCompleteHandler
 19473  0A00                     _wr1RegCompleteHandler:	
 19474  0A00                     i1l4823:	
 19475                           ;incstack = 0
 19476                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19477                           
 19478                           
 19479                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 33:     i2c_setBuffer(p,1);
 19480  0A00  3001               	movlw	1
 19481  0A01  00F0               	movwf	i2c_setBuffer@bufferSize
 19482  0A02  3000               	movlw	0
 19483  0A03  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19484  0A04  0879               	movf	wr1RegCompleteHandler@p,w
 19485  0A05  3189  21BE  318A   	fcall	_i2c_setBuffer
 19486  0A08                     i1l4825:	
 19487                           
 19488                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     i2c_setDataCompleteCallback(((
      +                          void*)0),((void*)0));
 19489  0A08  3000               	movlw	0
 19490  0A09  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19491  0A0A  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19492  0A0B  01F7               	clrf	i2c_setDataCompleteCallback@p
 19493  0A0C  3189  2169  318A   	fcall	_i2c_setDataCompleteCallback
 19494  0A0F                     i1l4827:	
 19495                           
 19496                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return i2c_continue;
 19497  0A0F  3004               	movlw	4
 19498  0A10                     i1l243:	
 19499  0A10  0008               	return
 19500  0A11                     __end_of_wr1RegCompleteHandler:	
 19501                           
 19502                           	psect	text88
 19503  0002                     __ptext88:	
 19504 ;; *************** function _returnReset *****************
 19505 ;; Defined at:
 19506 ;;		line 448 in file "mcc_generated_files/drivers/i2c_master.c"
 19507 ;; Parameters:    Size  Location     Type
 19508 ;;  p               1    9[COMMON] PTR void 
 19509 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19510 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19511 ;; Auto vars:     Size  Location     Type
 19512 ;;		None
 19513 ;; Return value:  Size  Location     Type
 19514 ;;                  1    wreg      enum E12568
 19515 ;; Registers used:
 19516 ;;		wreg
 19517 ;; Tracked objects:
 19518 ;;		On entry : 0/0
 19519 ;;		On exit  : 0/0
 19520 ;;		Unchanged: 0/0
 19521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19522 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19526 ;;Total ram usage:        1 bytes
 19527 ;; Hardware stack levels used:    1
 19528 ;; This function calls:
 19529 ;;		Nothing
 19530 ;; This function is called by:
 19531 ;;		_i2c_open
 19532 ;;		_do_I2C_DO_ADDRESS_NACK
 19533 ;;		_do_I2C_TX
 19534 ;;		_do_I2C_RX
 19535 ;;		_do_I2C_TX_EMPTY
 19536 ;; This function uses a non-reentrant model
 19537 ;;
 19538                           
 19539                           
 19540                           ;psect for function _returnReset
 19541  0002                     _returnReset:	
 19542  0002                     i1l4819:	
 19543                           ;incstack = 0
 19544                           ; Regs used in _returnReset: [wreg]
 19545                           
 19546                           
 19547                           ;mcc_generated_files/drivers/i2c_master.c: 448: static i2c_operations_t returnReset(void
      +                           *p);mcc_generated_files/drivers/i2c_master.c: 449: {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 450:     return i2c_reset_link;
 19548  0002  3005               	movlw	5
 19549  0003                     i1l219:	
 19550  0003  0008               	return
 19551  0004                     __end_of_returnReset:	
 19552                           
 19553                           	psect	text89
 19554  082C                     __ptext89:	
 19555 ;; *************** function _returnStop *****************
 19556 ;; Defined at:
 19557 ;;		line 443 in file "mcc_generated_files/drivers/i2c_master.c"
 19558 ;; Parameters:    Size  Location     Type
 19559 ;;  p               1    9[COMMON] PTR void 
 19560 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19561 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19562 ;; Auto vars:     Size  Location     Type
 19563 ;;		None
 19564 ;; Return value:  Size  Location     Type
 19565 ;;                  1    wreg      enum E12568
 19566 ;; Registers used:
 19567 ;;		wreg
 19568 ;; Tracked objects:
 19569 ;;		On entry : 0/0
 19570 ;;		On exit  : 0/0
 19571 ;;		Unchanged: 0/0
 19572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19573 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19576 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19577 ;;Total ram usage:        1 bytes
 19578 ;; Hardware stack levels used:    1
 19579 ;; This function calls:
 19580 ;;		Nothing
 19581 ;; This function is called by:
 19582 ;;		_setCallBack
 19583 ;;		_i2c_open
 19584 ;;		_do_I2C_DO_ADDRESS_NACK
 19585 ;;		_do_I2C_TX
 19586 ;;		_do_I2C_RX
 19587 ;;		_do_I2C_TX_EMPTY
 19588 ;; This function uses a non-reentrant model
 19589 ;;
 19590                           
 19591                           
 19592                           ;psect for function _returnStop
 19593  082C                     _returnStop:	
 19594  082C                     i1l4815:	
 19595                           ;incstack = 0
 19596                           ; Regs used in _returnStop: [wreg]
 19597                           
 19598                           
 19599                           ;mcc_generated_files/drivers/i2c_master.c: 443: static i2c_operations_t returnStop(void 
      +                          *p);mcc_generated_files/drivers/i2c_master.c: 444: {;mcc_generated_files/drivers/i2c_mas
      +                          ter.c: 445:     return i2c_stop;
 19600  082C  3001               	movlw	1
 19601  082D                     i1l216:	
 19602  082D  0008               	return
 19603  082E                     __end_of_returnStop:	
 19604                           
 19605                           	psect	text90
 19606  082A                     __ptext90:	
 19607 ;; *************** function _i2c_restartWrite *****************
 19608 ;; Defined at:
 19609 ;;		line 35 in file "mcc_generated_files/drivers/i2c_types.c"
 19610 ;; Parameters:    Size  Location     Type
 19611 ;;  p               1    9[COMMON] PTR void 
 19612 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19613 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19614 ;; Auto vars:     Size  Location     Type
 19615 ;;		None
 19616 ;; Return value:  Size  Location     Type
 19617 ;;                  1    wreg      enum E358
 19618 ;; Registers used:
 19619 ;;		wreg
 19620 ;; Tracked objects:
 19621 ;;		On entry : 0/0
 19622 ;;		On exit  : 0/0
 19623 ;;		Unchanged: 0/0
 19624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19625 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19628 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19629 ;;Total ram usage:        1 bytes
 19630 ;; Hardware stack levels used:    1
 19631 ;; This function calls:
 19632 ;;		Nothing
 19633 ;; This function is called by:
 19634 ;;		_i2c_write1ByteRegister
 19635 ;;		_i2c_writeNBytes
 19636 ;;		_i2c_read1ByteRegister
 19637 ;;		_i2c_read2ByteRegister
 19638 ;;		_i2c_write2ByteRegister
 19639 ;;		_i2c_readDataBlock
 19640 ;;		_do_I2C_DO_ADDRESS_NACK
 19641 ;;		_do_I2C_TX
 19642 ;;		_do_I2C_RX
 19643 ;;		_do_I2C_TX_EMPTY
 19644 ;; This function uses a non-reentrant model
 19645 ;;
 19646                           
 19647                           
 19648                           ;psect for function _i2c_restartWrite
 19649  082A                     _i2c_restartWrite:	
 19650  082A                     i1l4751:	
 19651                           ;incstack = 0
 19652                           ; Regs used in _i2c_restartWrite: [wreg]
 19653                           
 19654                           
 19655                           ;mcc_generated_files/drivers/i2c_types.c: 35: i2c_operations_t i2c_restartWrite(void *p)
      +                          ;mcc_generated_files/drivers/i2c_types.c: 36: {;mcc_generated_files/drivers/i2c_types.c:
      +                           37:     return i2c_restart_write;
 19656  082A  3003               	movlw	3
 19657  082B                     i1l9:	
 19658  082B  0008               	return
 19659  082C                     __end_of_i2c_restartWrite:	
 19660                           
 19661                           	psect	text91
 19662  09EF                     __ptext91:	
 19663 ;; *************** function _wr2RegCompleteHandler *****************
 19664 ;; Defined at:
 19665 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 19666 ;; Parameters:    Size  Location     Type
 19667 ;;  p               1    9[COMMON] PTR void 
 19668 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19669 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19670 ;; Auto vars:     Size  Location     Type
 19671 ;;		None
 19672 ;; Return value:  Size  Location     Type
 19673 ;;                  1    wreg      enum E358
 19674 ;; Registers used:
 19675 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19676 ;; Tracked objects:
 19677 ;;		On entry : 0/0
 19678 ;;		On exit  : 0/0
 19679 ;;		Unchanged: 0/0
 19680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19681 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19684 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19685 ;;Total ram usage:        1 bytes
 19686 ;; Hardware stack levels used:    1
 19687 ;; Hardware stack levels required when called:    2
 19688 ;; This function calls:
 19689 ;;		_i2c_setBuffer
 19690 ;;		_i2c_setDataCompleteCallback
 19691 ;; This function is called by:
 19692 ;;		_i2c_write2ByteRegister
 19693 ;;		_do_I2C_DO_ADDRESS_NACK
 19694 ;;		_do_I2C_TX
 19695 ;;		_do_I2C_RX
 19696 ;;		_do_I2C_TX_EMPTY
 19697 ;; This function uses a non-reentrant model
 19698 ;;
 19699                           
 19700                           
 19701                           ;psect for function _wr2RegCompleteHandler
 19702  09EF                     _wr2RegCompleteHandler:	
 19703  09EF                     i1l4847:	
 19704                           ;incstack = 0
 19705                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 19706                           
 19707                           
 19708                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 112:     i2c_setBuffer(p,2);
 19709  09EF  3002               	movlw	2
 19710  09F0  00F0               	movwf	i2c_setBuffer@bufferSize
 19711  09F1  3000               	movlw	0
 19712  09F2  00F1               	movwf	i2c_setBuffer@bufferSize+1
 19713  09F3  0879               	movf	wr2RegCompleteHandler@p,w
 19714  09F4  3189  21BE  3189   	fcall	_i2c_setBuffer
 19715  09F7                     i1l4849:	
 19716                           
 19717                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     i2c_setDataCompleteCallback((
      +                          (void*)0),((void*)0));
 19718  09F7  3000               	movlw	0
 19719  09F8  00F5               	movwf	i2c_setDataCompleteCallback@cb
 19720  09F9  00F6               	movwf	i2c_setDataCompleteCallback@cb+1
 19721  09FA  01F7               	clrf	i2c_setDataCompleteCallback@p
 19722  09FB  3189  2169  3189   	fcall	_i2c_setDataCompleteCallback
 19723  09FE                     i1l4851:	
 19724                           
 19725                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return i2c_continue;
 19726  09FE  3004               	movlw	4
 19727  09FF                     i1l291:	
 19728  09FF  0008               	return
 19729  0A00                     __end_of_wr2RegCompleteHandler:	
 19730                           
 19731                           	psect	text92
 19732  0969                     __ptext92:	
 19733 ;; *************** function _i2c_setDataCompleteCallback *****************
 19734 ;; Defined at:
 19735 ;;		line 89 in file "mcc_generated_files/drivers/i2c_master.c"
 19736 ;; Parameters:    Size  Location     Type
 19737 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 19738 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 19739 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), 
 19740 ;;  p               1    7[COMMON] PTR void 
 19741 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19742 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19743 ;; Auto vars:     Size  Location     Type
 19744 ;;		None
 19745 ;; Return value:  Size  Location     Type
 19746 ;;                  1    wreg      void 
 19747 ;; Registers used:
 19748 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19749 ;; Tracked objects:
 19750 ;;		On entry : 0/0
 19751 ;;		On exit  : 0/0
 19752 ;;		Unchanged: 0/0
 19753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19754 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19756 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19757 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19758 ;;Total ram usage:        4 bytes
 19759 ;; Hardware stack levels used:    1
 19760 ;; Hardware stack levels required when called:    1
 19761 ;; This function calls:
 19762 ;;		_setCallBack
 19763 ;; This function is called by:
 19764 ;;		_wr1RegCompleteHandler
 19765 ;;		_rd1RegCompleteHandler
 19766 ;;		_rd2RegCompleteHandler
 19767 ;;		_wr2RegCompleteHandler
 19768 ;;		_rdBlkRegCompleteHandler
 19769 ;;		_i2c_write1ByteRegister
 19770 ;;		_i2c_read1ByteRegister
 19771 ;;		_i2c_read2ByteRegister
 19772 ;;		_i2c_write2ByteRegister
 19773 ;;		_i2c_readDataBlock
 19774 ;; This function uses a non-reentrant model
 19775 ;;
 19776                           
 19777                           
 19778                           ;psect for function _i2c_setDataCompleteCallback
 19779  0969                     _i2c_setDataCompleteCallback:	
 19780  0969                     i1l4613:	
 19781                           ;incstack = 0
 19782                           ; Regs used in _i2c_setDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 19783                           
 19784                           
 19785                           ;mcc_generated_files/drivers/i2c_master.c: 89: void i2c_setDataCompleteCallback(i2c_call
      +                          back cb, void *p);mcc_generated_files/drivers/i2c_master.c: 90: {;mcc_generated_files/dr
      +                          ivers/i2c_master.c: 91:     setCallBack(i2c_dataComplete,cb,p);
 19786  0969  0876               	movf	i2c_setDataCompleteCallback@cb+1,w
 19787  096A  00F1               	movwf	setCallBack@cb+1
 19788  096B  0875               	movf	i2c_setDataCompleteCallback@cb,w
 19789  096C  00F0               	movwf	setCallBack@cb
 19790  096D  0877               	movf	i2c_setDataCompleteCallback@p,w
 19791  096E  00F8               	movwf	??_i2c_setDataCompleteCallback
 19792  096F  0878               	movf	??_i2c_setDataCompleteCallback,w
 19793  0970  00F2               	movwf	setCallBack@p
 19794  0971  3000               	movlw	0
 19795  0972  318C  2431  3189   	fcall	_setCallBack
 19796  0975                     i1l73:	
 19797  0975  0008               	return
 19798  0976                     __end_of_i2c_setDataCompleteCallback:	
 19799                           
 19800                           	psect	text93
 19801  0C31                     __ptext93:	
 19802 ;; *************** function _setCallBack *****************
 19803 ;; Defined at:
 19804 ;;		line 453 in file "mcc_generated_files/drivers/i2c_master.c"
 19805 ;; Parameters:    Size  Location     Type
 19806 ;;  idx             1    wreg     enum E12740
 19807 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 19808 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 19809 ;;		 -> wr1RegCompleteHandler(1), Absolute function(1), i2c_restartWrite(1), 
 19810 ;;  p               1    2[COMMON] PTR void 
 19811 ;;		 -> i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@d
      +2(1), 
 19812 ;;		 -> i2c_write1ByteRegister@data(1), NULL(0), 
 19813 ;; Auto vars:     Size  Location     Type
 19814 ;;  idx             1    4[COMMON] enum E12740
 19815 ;; Return value:  Size  Location     Type
 19816 ;;                  1    wreg      void 
 19817 ;; Registers used:
 19818 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19819 ;; Tracked objects:
 19820 ;;		On entry : 0/0
 19821 ;;		On exit  : 0/0
 19822 ;;		Unchanged: 0/0
 19823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19824 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19827 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19828 ;;Total ram usage:        5 bytes
 19829 ;; Hardware stack levels used:    1
 19830 ;; This function calls:
 19831 ;;		Nothing
 19832 ;; This function is called by:
 19833 ;;		_i2c_setDataCompleteCallback
 19834 ;;		_i2c_setWriteCollisionCallback
 19835 ;;		_i2c_setAddressNACKCallback
 19836 ;;		_i2c_setDataNACKCallback
 19837 ;;		_i2c_setTimeOutCallback
 19838 ;; This function uses a non-reentrant model
 19839 ;;
 19840                           
 19841                           
 19842                           ;psect for function _setCallBack
 19843  0C31                     _setCallBack:	
 19844                           
 19845                           ;incstack = 0
 19846                           ; Regs used in _setCallBack: [wreg+fsr1l+fsr1h+status,2+status,0]
 19847                           ;setCallBack@idx stored from wreg
 19848  0C31  00F4               	movwf	setCallBack@idx
 19849  0C32                     i1l4509:	
 19850                           
 19851                           ;mcc_generated_files/drivers/i2c_master.c: 453: static void setCallBack(i2c_callbackInde
      +                          x idx, i2c_callback cb, void *p);mcc_generated_files/drivers/i2c_master.c: 454: {;mcc_ge
      +                          nerated_files/drivers/i2c_master.c: 455:     if(cb)
 19852  0C32  0870               	movf	setCallBack@cb,w
 19853  0C33  0471               	iorwf	setCallBack@cb+1,w
 19854  0C34  1903               	btfsc	3,2
 19855  0C35  2C37               	goto	u193_21
 19856  0C36  2C38               	goto	u193_20
 19857  0C37                     u193_21:	
 19858  0C37  2C49               	goto	i1l4513
 19859  0C38                     u193_20:	
 19860  0C38                     i1l4511:	
 19861                           
 19862                           ;mcc_generated_files/drivers/i2c_master.c: 456:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 457:         i2c_status.callbackTable[idx] = cb;
 19863  0C38  3574               	lslf	setCallBack@idx,w
 19864  0C39  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 19865  0C3A  0086               	movwf	6
 19866  0C3B  0187               	clrf	7
 19867  0C3C  0870               	movf	setCallBack@cb,w
 19868  0C3D  3FC0               	movwi [0]fsr1
 19869  0C3E  0871               	movf	setCallBack@cb+1,w
 19870  0C3F  3FC1               	movwi [1]fsr1
 19871                           
 19872                           ;mcc_generated_files/drivers/i2c_master.c: 458:         i2c_status.callbackPayload[idx] 
      +                          = p;
 19873  0C40  0872               	movf	setCallBack@p,w
 19874  0C41  00F3               	movwf	??_setCallBack
 19875  0C42  0874               	movf	setCallBack@idx,w
 19876  0C43  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 19877  0C44  0086               	movwf	6
 19878  0C45  0187               	clrf	7
 19879  0C46  0873               	movf	??_setCallBack,w
 19880  0C47  0081               	movwf	1
 19881                           
 19882                           ;mcc_generated_files/drivers/i2c_master.c: 459:     }
 19883  0C48  2C56               	goto	i1l224
 19884  0C49                     i1l4513:	
 19885                           
 19886                           ;mcc_generated_files/drivers/i2c_master.c: 461:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 462:         i2c_status.callbackTable[idx] = returnStop;
 19887  0C49  3574               	lslf	setCallBack@idx,w
 19888  0C4A  3EAB               	addlw	(low ((_i2c_status| 0+11)))& (0+255)
 19889  0C4B  0086               	movwf	6
 19890  0C4C  0187               	clrf	7
 19891  0C4D  302C               	movlw	low _returnStop
 19892  0C4E  3FC0               	movwi [0]fsr1
 19893  0C4F  3008               	movlw	high _returnStop
 19894  0C50  3FC1               	movwi [1]fsr1
 19895                           
 19896                           ;mcc_generated_files/drivers/i2c_master.c: 463:         i2c_status.callbackPayload[idx] 
      +                          = ((void*)0);
 19897  0C51  0874               	movf	setCallBack@idx,w
 19898  0C52  3EB7               	addlw	(low ((_i2c_status| 0+23)))& (0+255)
 19899  0C53  0086               	movwf	6
 19900  0C54  0187               	clrf	7
 19901  0C55  0181               	clrf	1
 19902  0C56                     i1l224:	
 19903  0C56  0008               	return
 19904  0C57                     __end_of_setCallBack:	
 19905                           
 19906                           	psect	text94
 19907  09BE                     __ptext94:	
 19908 ;; *************** function _i2c_setBuffer *****************
 19909 ;; Defined at:
 19910 ;;		line 184 in file "mcc_generated_files/drivers/i2c_master.c"
 19911 ;; Parameters:    Size  Location     Type
 19912 ;;  buffer          1    wreg     PTR void 
 19913 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 19914 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 19915 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 19916 ;;  bufferSize      2    0[COMMON] unsigned int 
 19917 ;; Auto vars:     Size  Location     Type
 19918 ;;  buffer          1    3[COMMON] PTR void 
 19919 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 19920 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 19921 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), 
 19922 ;; Return value:  Size  Location     Type
 19923 ;;                  1    wreg      void 
 19924 ;; Registers used:
 19925 ;;		wreg
 19926 ;; Tracked objects:
 19927 ;;		On entry : 0/0
 19928 ;;		On exit  : 0/0
 19929 ;;		Unchanged: 0/0
 19930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19934 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19935 ;;Total ram usage:        4 bytes
 19936 ;; Hardware stack levels used:    1
 19937 ;; This function calls:
 19938 ;;		Nothing
 19939 ;; This function is called by:
 19940 ;;		_wr1RegCompleteHandler
 19941 ;;		_rd1RegCompleteHandler
 19942 ;;		_rd2RegCompleteHandler
 19943 ;;		_wr2RegCompleteHandler
 19944 ;;		_rdBlkRegCompleteHandler
 19945 ;;		_i2c_write1ByteRegister
 19946 ;;		_i2c_writeNBytes
 19947 ;;		_i2c_read1ByteRegister
 19948 ;;		_i2c_read2ByteRegister
 19949 ;;		_i2c_write2ByteRegister
 19950 ;;		_i2c_readDataBlock
 19951 ;;		_i2c_readNBytes
 19952 ;; This function uses a non-reentrant model
 19953 ;;
 19954                           
 19955                           
 19956                           ;psect for function _i2c_setBuffer
 19957  09BE                     _i2c_setBuffer:	
 19958                           
 19959                           ;incstack = 0
 19960                           ; Regs used in _i2c_setBuffer: [wreg]
 19961                           ;i2c_setBuffer@buffer stored from wreg
 19962  09BE  00F3               	movwf	i2c_setBuffer@buffer
 19963  09BF                     i1l4615:	
 19964                           
 19965                           ;mcc_generated_files/drivers/i2c_master.c: 184: void i2c_setBuffer(void *buffer, size_t 
      +                          bufferSize);mcc_generated_files/drivers/i2c_master.c: 185: {;mcc_generated_files/drivers
      +                          /i2c_master.c: 186:     if(i2c_status.bufferFree)
 19966  09BF  0021               	movlb	1	; select bank1
 19967  09C0  1D20               	btfss	_i2c_status^(0+128),2
 19968  09C1  29C3               	goto	u218_21
 19969  09C2  29C4               	goto	u218_20
 19970  09C3                     u218_21:	
 19971  09C3  29CD               	goto	i1l103
 19972  09C4                     u218_20:	
 19973  09C4                     i1l4617:	
 19974                           
 19975                           ;mcc_generated_files/drivers/i2c_master.c: 187:     {;mcc_generated_files/drivers/i2c_ma
      +                          ster.c: 188:         i2c_status.data_ptr = buffer;
 19976  09C4  0873               	movf	i2c_setBuffer@buffer,w
 19977  09C5  00F2               	movwf	??_i2c_setBuffer
 19978  09C6  0872               	movf	??_i2c_setBuffer,w
 19979  09C7  00A2               	movwf	(low ((_i2c_status| 0+2)))^(0+128)
 19980                           
 19981                           ;mcc_generated_files/drivers/i2c_master.c: 189:         i2c_status.data_length = bufferS
      +                          ize;
 19982  09C8  0871               	movf	i2c_setBuffer@bufferSize+1,w
 19983  09C9  00A4               	movwf	((_i2c_status+1)^(0+128)+3)
 19984  09CA  0870               	movf	i2c_setBuffer@bufferSize,w
 19985  09CB  00A3               	movwf	(_i2c_status^(0+128)+3)
 19986  09CC                     i1l4619:	
 19987                           
 19988                           ;mcc_generated_files/drivers/i2c_master.c: 190:         i2c_status.bufferFree = 0;
 19989  09CC  1120               	bcf	_i2c_status^(0+128),2
 19990  09CD                     i1l103:	
 19991  09CD  0008               	return
 19992  09CE                     __end_of_i2c_setBuffer:	
 19993                           
 19994                           	psect	text95
 19995  0834                     __ptext95:	
 19996 ;; *************** function _i2c1_driver_stop *****************
 19997 ;; Defined at:
 19998 ;;		line 157 in file "mcc_generated_files/i2c1_driver.c"
 19999 ;; Parameters:    Size  Location     Type
 20000 ;;		None
 20001 ;; Auto vars:     Size  Location     Type
 20002 ;;		None
 20003 ;; Return value:  Size  Location     Type
 20004 ;;                  1    wreg      void 
 20005 ;; Registers used:
 20006 ;;		None
 20007 ;; Tracked objects:
 20008 ;;		On entry : 0/0
 20009 ;;		On exit  : 0/0
 20010 ;;		Unchanged: 0/0
 20011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20016 ;;Total ram usage:        0 bytes
 20017 ;; Hardware stack levels used:    1
 20018 ;; This function calls:
 20019 ;;		Nothing
 20020 ;; This function is called by:
 20021 ;;		_do_I2C_SEND_STOP
 20022 ;; This function uses a non-reentrant model
 20023 ;;
 20024                           
 20025                           
 20026                           ;psect for function _i2c1_driver_stop
 20027  0834                     _i2c1_driver_stop:	
 20028  0834                     i1l4623:	
 20029                           ;incstack = 0
 20030                           ; Regs used in _i2c1_driver_stop: []
 20031                           
 20032                           
 20033                           ;mcc_generated_files/i2c1_driver.c: 159:     SSP1CON2bits.PEN = 1;
 20034  0834  0023               	movlb	3	; select bank3
 20035  0835  1511               	bsf	17,2	;volatile
 20036  0836                     i1l611:	
 20037  0836  0008               	return
 20038  0837                     __end_of_i2c1_driver_stop:	
 20039                           
 20040                           	psect	text96
 20041  0831                     __ptext96:	
 20042 ;; *************** function _i2c1_driver_restart *****************
 20043 ;; Defined at:
 20044 ;;		line 152 in file "mcc_generated_files/i2c1_driver.c"
 20045 ;; Parameters:    Size  Location     Type
 20046 ;;		None
 20047 ;; Auto vars:     Size  Location     Type
 20048 ;;		None
 20049 ;; Return value:  Size  Location     Type
 20050 ;;                  1    wreg      void 
 20051 ;; Registers used:
 20052 ;;		None
 20053 ;; Tracked objects:
 20054 ;;		On entry : 0/0
 20055 ;;		On exit  : 0/0
 20056 ;;		Unchanged: 0/0
 20057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20062 ;;Total ram usage:        0 bytes
 20063 ;; Hardware stack levels used:    1
 20064 ;; This function calls:
 20065 ;;		Nothing
 20066 ;; This function is called by:
 20067 ;;		_do_I2C_SEND_RESTART_READ
 20068 ;;		_do_I2C_SEND_RESTART_WRITE
 20069 ;;		_do_I2C_SEND_RESTART
 20070 ;; This function uses a non-reentrant model
 20071 ;;
 20072                           
 20073                           
 20074                           ;psect for function _i2c1_driver_restart
 20075  0831                     _i2c1_driver_restart:	
 20076  0831                     i1l4621:	
 20077                           ;incstack = 0
 20078                           ; Regs used in _i2c1_driver_restart: []
 20079                           
 20080                           
 20081                           ;mcc_generated_files/i2c1_driver.c: 154:     SSP1CON2bits.RSEN = 1;
 20082  0831  0023               	movlb	3	; select bank3
 20083  0832  1491               	bsf	17,1	;volatile
 20084  0833                     i1l608:	
 20085  0833  0008               	return
 20086  0834                     __end_of_i2c1_driver_restart:	
 20087                           
 20088                           	psect	text97
 20089  0849                     __ptext97:	
 20090 ;; *************** function _i2c1_driver_sendACK *****************
 20091 ;; Defined at:
 20092 ;;		line 197 in file "mcc_generated_files/i2c1_driver.c"
 20093 ;; Parameters:    Size  Location     Type
 20094 ;;		None
 20095 ;; Auto vars:     Size  Location     Type
 20096 ;;		None
 20097 ;; Return value:  Size  Location     Type
 20098 ;;                  1    wreg      void 
 20099 ;; Registers used:
 20100 ;;		None
 20101 ;; Tracked objects:
 20102 ;;		On entry : 0/0
 20103 ;;		On exit  : 0/0
 20104 ;;		Unchanged: 0/0
 20105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20110 ;;Total ram usage:        0 bytes
 20111 ;; Hardware stack levels used:    1
 20112 ;; This function calls:
 20113 ;;		Nothing
 20114 ;; This function is called by:
 20115 ;;		_do_I2C_DO_ACK
 20116 ;;		_do_I2C_RX
 20117 ;; This function uses a non-reentrant model
 20118 ;;
 20119                           
 20120                           
 20121                           ;psect for function _i2c1_driver_sendACK
 20122  0849                     _i2c1_driver_sendACK:	
 20123  0849                     i1l4791:	
 20124                           ;incstack = 0
 20125                           ; Regs used in _i2c1_driver_sendACK: []
 20126                           
 20127                           
 20128                           ;mcc_generated_files/i2c1_driver.c: 199:     SSP1CON2bits.ACKDT = 0;
 20129  0849  0023               	movlb	3	; select bank3
 20130  084A  1291               	bcf	17,5	;volatile
 20131                           
 20132                           ;mcc_generated_files/i2c1_driver.c: 200:     SSP1CON2bits.ACKEN = 1;
 20133  084B  1611               	bsf	17,4	;volatile
 20134  084C                     i1l635:	
 20135  084C  0008               	return
 20136  084D                     __end_of_i2c1_driver_sendACK:	
 20137                           
 20138                           	psect	text98
 20139  09A0                     __ptext98:	
 20140 ;; *************** function _TMR2_ISR *****************
 20141 ;; Defined at:
 20142 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 20143 ;; Parameters:    Size  Location     Type
 20144 ;;		None
 20145 ;; Auto vars:     Size  Location     Type
 20146 ;;		None
 20147 ;; Return value:  Size  Location     Type
 20148 ;;                  1    wreg      void 
 20149 ;; Registers used:
 20150 ;;		wreg, status,2, status,0, pclath, cstack
 20151 ;; Tracked objects:
 20152 ;;		On entry : 0/0
 20153 ;;		On exit  : 0/0
 20154 ;;		Unchanged: 0/0
 20155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20160 ;;Total ram usage:        0 bytes
 20161 ;; Hardware stack levels used:    1
 20162 ;; Hardware stack levels required when called:    1
 20163 ;; This function calls:
 20164 ;;		Absolute function
 20165 ;;		_TMR2_DefaultInterruptHandler
 20166 ;;		_handler_clock_ms
 20167 ;; This function is called by:
 20168 ;;		_INTERRUPT_InterruptManager
 20169 ;; This function uses a non-reentrant model
 20170 ;;
 20171                           
 20172                           
 20173                           ;psect for function _TMR2_ISR
 20174  09A0                     _TMR2_ISR:	
 20175  09A0                     i1l5641:	
 20176                           ;incstack = 0
 20177                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 20178                           
 20179                           
 20180                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 20181  09A0  002E               	movlb	14	; select bank14
 20182  09A1  1090               	bcf	16,1	;volatile
 20183  09A2                     i1l5643:	
 20184                           
 20185                           ;mcc_generated_files/tmr2.c: 171:     if(TMR2_InterruptHandler)
 20186  09A2  0021               	movlb	1	; select bank1
 20187  09A3  084E               	movf	_TMR2_InterruptHandler^(0+128),w
 20188  09A4  044F               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 20189  09A5  1903               	btfsc	3,2
 20190  09A6  29A8               	goto	u291_21
 20191  09A7  29A9               	goto	u291_20
 20192  09A8                     u291_21:	
 20193  09A8  29AE               	goto	i1l1038
 20194  09A9                     u291_20:	
 20195  09A9                     i1l5645:	
 20196                           
 20197                           ;mcc_generated_files/tmr2.c: 172:     {;mcc_generated_files/tmr2.c: 173:         TMR2_In
      +                          terruptHandler();
 20198  09A9  084F               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 20199  09AA  008A               	movwf	10
 20200  09AB  084E               	movf	_TMR2_InterruptHandler^(0+128),w
 20201  09AC  000A               	callw
 20202  09AD  3189               	pagesel	$
 20203  09AE                     i1l1038:	
 20204  09AE  0008               	return
 20205  09AF                     __end_of_TMR2_ISR:	
 20206                           
 20207                           	psect	text99
 20208  0828                     __ptext99:	
 20209 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 20210 ;; Defined at:
 20211 ;;		line 182 in file "mcc_generated_files/tmr2.c"
 20212 ;; Parameters:    Size  Location     Type
 20213 ;;		None
 20214 ;; Auto vars:     Size  Location     Type
 20215 ;;		None
 20216 ;; Return value:  Size  Location     Type
 20217 ;;                  1    wreg      void 
 20218 ;; Registers used:
 20219 ;;		None
 20220 ;; Tracked objects:
 20221 ;;		On entry : 0/0
 20222 ;;		On exit  : 0/0
 20223 ;;		Unchanged: 0/0
 20224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20229 ;;Total ram usage:        0 bytes
 20230 ;; Hardware stack levels used:    1
 20231 ;; This function calls:
 20232 ;;		Nothing
 20233 ;; This function is called by:
 20234 ;;		_TMR2_Initialize
 20235 ;;		_TMR2_ISR
 20236 ;; This function uses a non-reentrant model
 20237 ;;
 20238                           
 20239                           
 20240                           ;psect for function _TMR2_DefaultInterruptHandler
 20241  0828                     _TMR2_DefaultInterruptHandler:	
 20242  0828                     i1l1044:	
 20243                           ;incstack = 0
 20244                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 20245                           
 20246  0828  0008               	return
 20247  0829                     __end_of_TMR2_DefaultInterruptHandler:	
 20248                           
 20249                           	psect	text100
 20250  0944                     __ptext100:	
 20251 ;; *************** function _handler_clock_ms *****************
 20252 ;; Defined at:
 20253 ;;		line 711 in file "main.c"
 20254 ;; Parameters:    Size  Location     Type
 20255 ;;		None
 20256 ;; Auto vars:     Size  Location     Type
 20257 ;;		None
 20258 ;; Return value:  Size  Location     Type
 20259 ;;                  1    wreg      void 
 20260 ;; Registers used:
 20261 ;;		wreg, status,2, status,0
 20262 ;; Tracked objects:
 20263 ;;		On entry : 0/0
 20264 ;;		On exit  : 0/0
 20265 ;;		Unchanged: 0/0
 20266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20269 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20270 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20271 ;;Total ram usage:        1 bytes
 20272 ;; Hardware stack levels used:    1
 20273 ;; This function calls:
 20274 ;;		Nothing
 20275 ;; This function is called by:
 20276 ;;		_main
 20277 ;;		_TMR2_ISR
 20278 ;; This function uses a non-reentrant model
 20279 ;;
 20280                           
 20281                           
 20282                           ;psect for function _handler_clock_ms
 20283  0944                     _handler_clock_ms:	
 20284  0944                     i1l5473:	
 20285                           ;incstack = 0
 20286                           ; Regs used in _handler_clock_ms: [wreg+status,2+status,0]
 20287                           
 20288                           
 20289                           ;main.c: 712:     clkms++;
 20290  0944  3001               	movlw	1
 20291  0945  00F0               	movwf	??_handler_clock_ms
 20292  0946  0870               	movf	??_handler_clock_ms,w
 20293  0947  07FD               	addwf	_clkms,f	;volatile
 20294  0948                     i1l5475:	
 20295                           
 20296                           ;main.c: 714:     if(clkms > 200){
 20297  0948  30C9               	movlw	201
 20298  0949  027D               	subwf	_clkms,w	;volatile
 20299  094A  1C03               	skipc
 20300  094B  294D               	goto	u268_21
 20301  094C  294E               	goto	u268_20
 20302  094D                     u268_21:	
 20303  094D  294F               	goto	i1l1458
 20304  094E                     u268_20:	
 20305  094E                     i1l5477:	
 20306                           
 20307                           ;main.c: 715:         clkms = 0;
 20308  094E  01FD               	clrf	_clkms	;volatile
 20309  094F                     i1l1458:	
 20310  094F  0008               	return
 20311  0950                     __end_of_handler_clock_ms:	
 20312                           
 20313                           	psect	text101
 20314  0A8A                     __ptext101:	
 20315 ;; *************** function _TMR1_ISR *****************
 20316 ;; Defined at:
 20317 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 20318 ;; Parameters:    Size  Location     Type
 20319 ;;		None
 20320 ;; Auto vars:     Size  Location     Type
 20321 ;;		None
 20322 ;; Return value:  Size  Location     Type
 20323 ;;                  1    wreg      void 
 20324 ;; Registers used:
 20325 ;;		wreg, status,2, status,0, pclath, cstack
 20326 ;; Tracked objects:
 20327 ;;		On entry : 0/0
 20328 ;;		On exit  : 0/0
 20329 ;;		Unchanged: 0/0
 20330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20335 ;;Total ram usage:        0 bytes
 20336 ;; Hardware stack levels used:    1
 20337 ;; Hardware stack levels required when called:    1
 20338 ;; This function calls:
 20339 ;;		Absolute function
 20340 ;;		_TMR1_DefaultInterruptHandler
 20341 ;;		_TMR1_WriteTimer
 20342 ;;		_handler_clock_hms
 20343 ;; This function is called by:
 20344 ;;		_INTERRUPT_InterruptManager
 20345 ;; This function uses a non-reentrant model
 20346 ;;
 20347                           
 20348                           
 20349                           ;psect for function _TMR1_ISR
 20350  0A8A                     _TMR1_ISR:	
 20351  0A8A                     i1l5633:	
 20352                           ;incstack = 0
 20353                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 20354                           
 20355                           
 20356                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 20357  0A8A  002E               	movlb	14	; select bank14
 20358  0A8B  1010               	bcf	16,0	;volatile
 20359  0A8C                     i1l5635:	
 20360                           
 20361                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 20362  0A8C  0020               	movlb	0	; select bank0
 20363  0A8D  0869               	movf	_timer1ReloadVal+1,w	;volatile
 20364  0A8E  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 20365  0A8F  0868               	movf	_timer1ReloadVal,w	;volatile
 20366  0A90  00F0               	movwf	TMR1_WriteTimer@timerVal
 20367  0A91  3189  21DE  318A   	fcall	_TMR1_WriteTimer
 20368  0A94                     i1l5637:	
 20369                           
 20370                           ;mcc_generated_files/tmr1.c: 171:     if(TMR1_InterruptHandler)
 20371  0A94  0021               	movlb	1	; select bank1
 20372  0A95  0850               	movf	_TMR1_InterruptHandler^(0+128),w
 20373  0A96  0451               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 20374  0A97  1903               	btfsc	3,2
 20375  0A98  2A9A               	goto	u290_21
 20376  0A99  2A9B               	goto	u290_20
 20377  0A9A                     u290_21:	
 20378  0A9A  2AA0               	goto	i1l896
 20379  0A9B                     u290_20:	
 20380  0A9B                     i1l5639:	
 20381                           
 20382                           ;mcc_generated_files/tmr1.c: 172:     {;mcc_generated_files/tmr1.c: 173:         TMR1_In
      +                          terruptHandler();
 20383  0A9B  0851               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 20384  0A9C  008A               	movwf	10
 20385  0A9D  0850               	movf	_TMR1_InterruptHandler^(0+128),w
 20386  0A9E  000A               	callw
 20387  0A9F  318A               	pagesel	$
 20388  0AA0                     i1l896:	
 20389  0AA0  0008               	return
 20390  0AA1                     __end_of_TMR1_ISR:	
 20391                           
 20392                           	psect	text102
 20393  0827                     __ptext102:	
 20394 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 20395 ;; Defined at:
 20396 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 20397 ;; Parameters:    Size  Location     Type
 20398 ;;		None
 20399 ;; Auto vars:     Size  Location     Type
 20400 ;;		None
 20401 ;; Return value:  Size  Location     Type
 20402 ;;                  1    wreg      void 
 20403 ;; Registers used:
 20404 ;;		None
 20405 ;; Tracked objects:
 20406 ;;		On entry : 0/0
 20407 ;;		On exit  : 0/0
 20408 ;;		Unchanged: 0/0
 20409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20414 ;;Total ram usage:        0 bytes
 20415 ;; Hardware stack levels used:    1
 20416 ;; This function calls:
 20417 ;;		Nothing
 20418 ;; This function is called by:
 20419 ;;		_TMR1_Initialize
 20420 ;;		_TMR1_ISR
 20421 ;; This function uses a non-reentrant model
 20422 ;;
 20423                           
 20424                           
 20425                           ;psect for function _TMR1_DefaultInterruptHandler
 20426  0827                     _TMR1_DefaultInterruptHandler:	
 20427  0827                     i1l902:	
 20428                           ;incstack = 0
 20429                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 20430                           
 20431  0827  0008               	return
 20432  0828                     __end_of_TMR1_DefaultInterruptHandler:	
 20433                           
 20434                           	psect	text103
 20435  07C7                     __ptext103:	
 20436 ;; *************** function _handler_clock_hms *****************
 20437 ;; Defined at:
 20438 ;;		line 685 in file "main.c"
 20439 ;; Parameters:    Size  Location     Type
 20440 ;;		None
 20441 ;; Auto vars:     Size  Location     Type
 20442 ;;		None
 20443 ;; Return value:  Size  Location     Type
 20444 ;;                  1    wreg      void 
 20445 ;; Registers used:
 20446 ;;		wreg, status,2, status,0
 20447 ;; Tracked objects:
 20448 ;;		On entry : 0/0
 20449 ;;		On exit  : 0/0
 20450 ;;		Unchanged: 0/0
 20451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20454 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20455 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20456 ;;Total ram usage:        1 bytes
 20457 ;; Hardware stack levels used:    1
 20458 ;; This function calls:
 20459 ;;		Nothing
 20460 ;; This function is called by:
 20461 ;;		_main
 20462 ;;		_TMR1_ISR
 20463 ;; This function uses a non-reentrant model
 20464 ;;
 20465                           
 20466                           
 20467                           ;psect for function _handler_clock_hms
 20468  07C7                     _handler_clock_hms:	
 20469  07C7                     i1l5453:	
 20470                           ;incstack = 0
 20471                           ; Regs used in _handler_clock_hms: [wreg+status,2+status,0]
 20472                           
 20473                           
 20474                           ;main.c: 687:     if(!config_mode){
 20475  07C7  0020               	movlb	0	; select bank0
 20476  07C8  0854               	movf	_config_mode,w	;volatile
 20477  07C9  1D03               	btfss	3,2
 20478  07CA  2FCC               	goto	u263_21
 20479  07CB  2FCD               	goto	u263_20
 20480  07CC                     u263_21:	
 20481  07CC  2FD8               	goto	i1l5457
 20482  07CD                     u263_20:	
 20483  07CD                     i1l5455:	
 20484  07CD  1003               	clrc
 20485  07CE  1F96               	btfss	22,7	;volatile
 20486  07CF  1403               	setc
 20487  07D0  1803               	btfsc	3,0
 20488  07D1  2FD3               	goto	u264_21
 20489  07D2  2FD6               	goto	u264_20
 20490  07D3                     u264_21:	
 20491  07D3  0020               	movlb	0	; select bank0
 20492  07D4  1796               	bsf	22,7	;volatile
 20493  07D5  2FD8               	goto	u265_24
 20494  07D6                     u264_20:	
 20495  07D6  0020               	movlb	0	; select bank0
 20496  07D7  1396               	bcf	22,7	;volatile
 20497  07D8                     u265_24:	
 20498  07D8                     i1l5457:	
 20499                           
 20500                           ;main.c: 691:     last5s++;
 20501  07D8  3001               	movlw	1
 20502  07D9  00F0               	movwf	??_handler_clock_hms
 20503  07DA  0870               	movf	??_handler_clock_hms,w
 20504  07DB  07D7               	addwf	_last5s,f	;volatile
 20505  07DC                     i1l5459:	
 20506                           
 20507                           ;main.c: 692:     seg++;
 20508  07DC  3001               	movlw	1
 20509  07DD  00F0               	movwf	??_handler_clock_hms
 20510  07DE  0870               	movf	??_handler_clock_hms,w
 20511  07DF  07DA               	addwf	_seg,f	;volatile
 20512  07E0                     i1l5461:	
 20513                           
 20514                           ;main.c: 693:     if(seg >= 60) {
 20515  07E0  303C               	movlw	60
 20516  07E1  025A               	subwf	_seg,w	;volatile
 20517  07E2  1C03               	skipc
 20518  07E3  2FE5               	goto	u266_21
 20519  07E4  2FE6               	goto	u266_20
 20520  07E5                     u266_21:	
 20521  07E5  2FFA               	goto	i1l1454
 20522  07E6                     u266_20:	
 20523  07E6                     i1l5463:	
 20524                           
 20525                           ;main.c: 694:         clkm++;
 20526  07E6  3001               	movlw	1
 20527  07E7  00F0               	movwf	??_handler_clock_hms
 20528  07E8  0870               	movf	??_handler_clock_hms,w
 20529  07E9  07DB               	addwf	_clkm,f	;volatile
 20530                           
 20531                           ;main.c: 695:         last1m++;
 20532  07EA  3001               	movlw	1
 20533  07EB  00F0               	movwf	??_handler_clock_hms
 20534  07EC  0870               	movf	??_handler_clock_hms,w
 20535  07ED  07D6               	addwf	_last1m,f	;volatile
 20536  07EE                     i1l5465:	
 20537                           
 20538                           ;main.c: 696:         seg = 0;
 20539  07EE  01DA               	clrf	_seg	;volatile
 20540  07EF                     i1l5467:	
 20541                           
 20542                           ;main.c: 697:         if(clkm >= 60) {
 20543  07EF  303C               	movlw	60
 20544  07F0  025B               	subwf	_clkm,w	;volatile
 20545  07F1  1C03               	skipc
 20546  07F2  2FF4               	goto	u267_21
 20547  07F3  2FF5               	goto	u267_20
 20548  07F4                     u267_21:	
 20549  07F4  2FFA               	goto	i1l1454
 20550  07F5                     u267_20:	
 20551  07F5                     i1l5469:	
 20552                           
 20553                           ;main.c: 698:             clkh++;
 20554  07F5  3001               	movlw	1
 20555  07F6  00F0               	movwf	??_handler_clock_hms
 20556  07F7  0870               	movf	??_handler_clock_hms,w
 20557  07F8  07DC               	addwf	_clkh,f	;volatile
 20558  07F9                     i1l5471:	
 20559                           
 20560                           ;main.c: 699:             clkm = 0;
 20561  07F9  01DB               	clrf	_clkm	;volatile
 20562  07FA                     i1l1454:	
 20563  07FA  0008               	return
 20564  07FB                     __end_of_handler_clock_hms:	
 20565                           
 20566                           	psect	text104
 20567  09DE                     __ptext104:	
 20568 ;; *************** function _TMR1_WriteTimer *****************
 20569 ;; Defined at:
 20570 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 20571 ;; Parameters:    Size  Location     Type
 20572 ;;  timerVal        2    0[COMMON] unsigned short 
 20573 ;; Auto vars:     Size  Location     Type
 20574 ;;		None
 20575 ;; Return value:  Size  Location     Type
 20576 ;;                  1    wreg      void 
 20577 ;; Registers used:
 20578 ;;		wreg, status,2
 20579 ;; Tracked objects:
 20580 ;;		On entry : 0/0
 20581 ;;		On exit  : 0/0
 20582 ;;		Unchanged: 0/0
 20583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20587 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20588 ;;Total ram usage:        2 bytes
 20589 ;; Hardware stack levels used:    1
 20590 ;; This function calls:
 20591 ;;		Nothing
 20592 ;; This function is called by:
 20593 ;;		_TMR1_ISR
 20594 ;;		_TMR1_Reload
 20595 ;; This function uses a non-reentrant model
 20596 ;;
 20597                           
 20598                           
 20599                           ;psect for function _TMR1_WriteTimer
 20600  09DE                     _TMR1_WriteTimer:	
 20601  09DE                     i1l5351:	
 20602                           ;incstack = 0
 20603                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 20604                           
 20605                           
 20606                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 20607  09DE  0024               	movlb	4	; select bank4
 20608  09DF  1D0E               	btfss	14,2	;volatile
 20609  09E0  29E2               	goto	u256_21
 20610  09E1  29E3               	goto	u256_20
 20611  09E2                     u256_21:	
 20612  09E2  29EA               	goto	i1l5361
 20613  09E3                     u256_20:	
 20614  09E3                     i1l5353:	
 20615                           
 20616                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 20617  09E3  100E               	bcf	14,0	;volatile
 20618  09E4                     i1l5355:	
 20619                           
 20620                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (timerVal >> 8);
 20621  09E4  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 20622  09E5  008D               	movwf	13	;volatile
 20623  09E6                     i1l5357:	
 20624                           
 20625                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = timerVal;
 20626  09E6  0870               	movf	TMR1_WriteTimer@timerVal,w
 20627  09E7  008C               	movwf	12	;volatile
 20628  09E8                     i1l5359:	
 20629                           
 20630                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 20631  09E8  140E               	bsf	14,0	;volatile
 20632                           
 20633                           ;mcc_generated_files/tmr1.c: 140:     }
 20634  09E9  29EE               	goto	i1l883
 20635  09EA                     i1l5361:	
 20636                           
 20637                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (timerVal >> 8);
 20638  09EA  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 20639  09EB  008D               	movwf	13	;volatile
 20640  09EC                     i1l5363:	
 20641                           
 20642                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = timerVal;
 20643  09EC  0870               	movf	TMR1_WriteTimer@timerVal,w
 20644  09ED  008C               	movwf	12	;volatile
 20645  09EE                     i1l883:	
 20646  09EE  0008               	return
 20647  09EF                     __end_of_TMR1_WriteTimer:	
 20648                           
 20649                           	psect	text105
 20650  0991                     __ptext105:	
 20651 ;; *************** function _TMR0_ISR *****************
 20652 ;; Defined at:
 20653 ;;		line 123 in file "mcc_generated_files/tmr0.c"
 20654 ;; Parameters:    Size  Location     Type
 20655 ;;		None
 20656 ;; Auto vars:     Size  Location     Type
 20657 ;;		None
 20658 ;; Return value:  Size  Location     Type
 20659 ;;                  1    wreg      void 
 20660 ;; Registers used:
 20661 ;;		wreg, status,2, status,0, pclath, cstack
 20662 ;; Tracked objects:
 20663 ;;		On entry : 0/0
 20664 ;;		On exit  : 0/0
 20665 ;;		Unchanged: 0/0
 20666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20671 ;;Total ram usage:        0 bytes
 20672 ;; Hardware stack levels used:    1
 20673 ;; Hardware stack levels required when called:    2
 20674 ;; This function calls:
 20675 ;;		Absolute function
 20676 ;;		_ISR_3s
 20677 ;;		_TMR0_DefaultInterruptHandler
 20678 ;; This function is called by:
 20679 ;;		_INTERRUPT_InterruptManager
 20680 ;; This function uses a non-reentrant model
 20681 ;;
 20682                           
 20683                           
 20684                           ;psect for function _TMR0_ISR
 20685  0991                     _TMR0_ISR:	
 20686  0991                     i1l5627:	
 20687                           ;incstack = 0
 20688                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 20689                           
 20690                           
 20691                           ;mcc_generated_files/tmr0.c: 126:     PIR0bits.TMR0IF = 0;
 20692  0991  002E               	movlb	14	; select bank14
 20693  0992  128C               	bcf	12,5	;volatile
 20694  0993                     i1l5629:	
 20695                           
 20696                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
 20697  0993  0021               	movlb	1	; select bank1
 20698  0994  084C               	movf	_TMR0_InterruptHandler^(0+128),w
 20699  0995  044D               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 20700  0996  1903               	btfsc	3,2
 20701  0997  2999               	goto	u289_21
 20702  0998  299A               	goto	u289_20
 20703  0999                     u289_21:	
 20704  0999  299F               	goto	i1l1086
 20705  099A                     u289_20:	
 20706  099A                     i1l5631:	
 20707                           
 20708                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
 20709  099A  084D               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 20710  099B  008A               	movwf	10
 20711  099C  084C               	movf	_TMR0_InterruptHandler^(0+128),w
 20712  099D  000A               	callw
 20713  099E  3189               	pagesel	$
 20714  099F                     i1l1086:	
 20715  099F  0008               	return
 20716  09A0                     __end_of_TMR0_ISR:	
 20717                           
 20718                           	psect	text106
 20719  0AD1                     __ptext106:	
 20720 ;; *************** function _ISR_3s *****************
 20721 ;; Defined at:
 20722 ;;		line 161 in file "main.c"
 20723 ;; Parameters:    Size  Location     Type
 20724 ;;		None
 20725 ;; Auto vars:     Size  Location     Type
 20726 ;;		None
 20727 ;; Return value:  Size  Location     Type
 20728 ;;                  1    wreg      void 
 20729 ;; Registers used:
 20730 ;;		wreg, status,2, status,0, pclath, cstack
 20731 ;; Tracked objects:
 20732 ;;		On entry : 0/0
 20733 ;;		On exit  : 0/0
 20734 ;;		Unchanged: 0/0
 20735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20740 ;;Total ram usage:        1 bytes
 20741 ;; Hardware stack levels used:    1
 20742 ;; Hardware stack levels required when called:    1
 20743 ;; This function calls:
 20744 ;;		_TMR0_StopTimer
 20745 ;;		i1_PWM6_LoadDutyValue
 20746 ;; This function is called by:
 20747 ;;		_main
 20748 ;;		_TMR0_ISR
 20749 ;; This function uses a non-reentrant model
 20750 ;;
 20751                           
 20752                           
 20753                           ;psect for function _ISR_3s
 20754  0AD1                     _ISR_3s:	
 20755  0AD1                     i1l5365:	
 20756                           ;incstack = 0
 20757                           ; Regs used in _ISR_3s: [wreg+status,2+status,0+pclath+cstack]
 20758                           
 20759                           
 20760                           ;main.c: 163:     if (lum_threshold){
 20761  0AD1  0020               	movlb	0	; select bank0
 20762  0AD2  0845               	movf	_lum_threshold,w
 20763  0AD3  0446               	iorwf	_lum_threshold+1,w
 20764  0AD4  1903               	btfsc	3,2
 20765  0AD5  2AD7               	goto	u257_21
 20766  0AD6  2AD8               	goto	u257_20
 20767  0AD7                     u257_21:	
 20768  0AD7  2AE4               	goto	i1l1291
 20769  0AD8                     u257_20:	
 20770  0AD8                     i1l5367:	
 20771                           
 20772                           ;main.c: 164:         PWM6_LoadDutyValue(1023);
 20773  0AD8  30FF               	movlw	255
 20774  0AD9  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 20775  0ADA  3003               	movlw	3
 20776  0ADB  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 20777  0ADC  318A  2248  318A   	fcall	i1_PWM6_LoadDutyValue
 20778  0ADF                     i1l5369:	
 20779                           
 20780                           ;main.c: 165:         alarm = 1;
 20781  0ADF  3001               	movlw	1
 20782  0AE0  00F4               	movwf	??_ISR_3s
 20783  0AE1  0874               	movf	??_ISR_3s,w
 20784  0AE2  0020               	movlb	0	; select bank0
 20785  0AE3  00D3               	movwf	_alarm	;volatile
 20786  0AE4                     i1l1291:	
 20787                           ;main.c: 167:     }
 20788                           
 20789                           
 20790                           ;main.c: 169:     TMR0_StopTimer();
 20791  0AE4  3188  202E  318A   	fcall	_TMR0_StopTimer
 20792  0AE7                     i1l5371:	
 20793                           
 20794                           ;main.c: 170:     PIE0bits.TMR0IE = 0;
 20795  0AE7  002E               	movlb	14	; select bank14
 20796  0AE8  1296               	bcf	22,5	;volatile
 20797  0AE9                     i1l1292:	
 20798  0AE9  0008               	return
 20799  0AEA                     __end_of_ISR_3s:	
 20800                           
 20801                           	psect	text107
 20802  0826                     __ptext107:	
 20803 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 20804 ;; Defined at:
 20805 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 20806 ;; Parameters:    Size  Location     Type
 20807 ;;		None
 20808 ;; Auto vars:     Size  Location     Type
 20809 ;;		None
 20810 ;; Return value:  Size  Location     Type
 20811 ;;                  1    wreg      void 
 20812 ;; Registers used:
 20813 ;;		None
 20814 ;; Tracked objects:
 20815 ;;		On entry : 0/0
 20816 ;;		On exit  : 0/0
 20817 ;;		Unchanged: 0/0
 20818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20823 ;;Total ram usage:        0 bytes
 20824 ;; Hardware stack levels used:    1
 20825 ;; This function calls:
 20826 ;;		Nothing
 20827 ;; This function is called by:
 20828 ;;		_TMR0_Initialize
 20829 ;;		_TMR0_ISR
 20830 ;; This function uses a non-reentrant model
 20831 ;;
 20832                           
 20833                           
 20834                           ;psect for function _TMR0_DefaultInterruptHandler
 20835  0826                     _TMR0_DefaultInterruptHandler:	
 20836  0826                     i1l1092:	
 20837                           ;incstack = 0
 20838                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 20839                           
 20840  0826  0008               	return
 20841  0827                     __end_of_TMR0_DefaultInterruptHandler:	
 20842                           
 20843                           	psect	text108
 20844  082E                     __ptext108:	
 20845 ;; *************** function _TMR0_StopTimer *****************
 20846 ;; Defined at:
 20847 ;;		line 95 in file "mcc_generated_files/tmr0.c"
 20848 ;; Parameters:    Size  Location     Type
 20849 ;;		None
 20850 ;; Auto vars:     Size  Location     Type
 20851 ;;		None
 20852 ;; Return value:  Size  Location     Type
 20853 ;;                  1    wreg      void 
 20854 ;; Registers used:
 20855 ;;		None
 20856 ;; Tracked objects:
 20857 ;;		On entry : 0/0
 20858 ;;		On exit  : 0/0
 20859 ;;		Unchanged: 0/0
 20860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20865 ;;Total ram usage:        0 bytes
 20866 ;; Hardware stack levels used:    1
 20867 ;; This function calls:
 20868 ;;		Nothing
 20869 ;; This function is called by:
 20870 ;;		_ISR_3s
 20871 ;; This function uses a non-reentrant model
 20872 ;;
 20873                           
 20874                           
 20875                           ;psect for function _TMR0_StopTimer
 20876  082E                     _TMR0_StopTimer:	
 20877  082E                     i1l4889:	
 20878                           ;incstack = 0
 20879                           ; Regs used in _TMR0_StopTimer: []
 20880                           
 20881                           
 20882                           ;mcc_generated_files/tmr0.c: 98:     T0CON0bits.T0EN = 0;
 20883  082E  0020               	movlb	0	; select bank0
 20884  082F  139E               	bcf	30,7	;volatile
 20885  0830                     i1l1073:	
 20886  0830  0008               	return
 20887  0831                     __end_of_TMR0_StopTimer:	
 20888                           
 20889                           	psect	text109
 20890  087D                     __ptext109:	
 20891 ;; *************** function _INT_ISR *****************
 20892 ;; Defined at:
 20893 ;;		line 32 in file "mcc_generated_files/ext_int.c"
 20894 ;; Parameters:    Size  Location     Type
 20895 ;;		None
 20896 ;; Auto vars:     Size  Location     Type
 20897 ;;		None
 20898 ;; Return value:  Size  Location     Type
 20899 ;;                  1    wreg      void 
 20900 ;; Registers used:
 20901 ;;		wreg, status,2, status,0, pclath, cstack
 20902 ;; Tracked objects:
 20903 ;;		On entry : 0/0
 20904 ;;		On exit  : 0/0
 20905 ;;		Unchanged: 0/0
 20906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20911 ;;Total ram usage:        0 bytes
 20912 ;; Hardware stack levels used:    1
 20913 ;; Hardware stack levels required when called:    3
 20914 ;; This function calls:
 20915 ;;		_INT_CallBack
 20916 ;; This function is called by:
 20917 ;;		_INTERRUPT_InterruptManager
 20918 ;; This function uses a non-reentrant model
 20919 ;;
 20920                           
 20921                           
 20922                           ;psect for function _INT_ISR
 20923  087D                     _INT_ISR:	
 20924  087D                     i1l5623:	
 20925                           ;incstack = 0
 20926                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 20927                           
 20928                           
 20929                           ;mcc_generated_files/ext_int.c: 34:     (PIR0bits.INTF = 0);
 20930  087D  002E               	movlb	14	; select bank14
 20931  087E  100C               	bcf	12,0	;volatile
 20932  087F                     i1l5625:	
 20933                           
 20934                           ;mcc_generated_files/ext_int.c: 37:     INT_CallBack();
 20935  087F  3189  215C  3188   	fcall	_INT_CallBack
 20936  0882                     i1l334:	
 20937  0882  0008               	return
 20938  0883                     __end_of_INT_ISR:	
 20939                           
 20940                           	psect	text110
 20941  095C                     __ptext110:	
 20942 ;; *************** function _INT_CallBack *****************
 20943 ;; Defined at:
 20944 ;;		line 41 in file "mcc_generated_files/ext_int.c"
 20945 ;; Parameters:    Size  Location     Type
 20946 ;;		None
 20947 ;; Auto vars:     Size  Location     Type
 20948 ;;		None
 20949 ;; Return value:  Size  Location     Type
 20950 ;;                  1    wreg      void 
 20951 ;; Registers used:
 20952 ;;		wreg, status,2, status,0, pclath, cstack
 20953 ;; Tracked objects:
 20954 ;;		On entry : 0/0
 20955 ;;		On exit  : 0/0
 20956 ;;		Unchanged: 0/0
 20957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20962 ;;Total ram usage:        0 bytes
 20963 ;; Hardware stack levels used:    1
 20964 ;; Hardware stack levels required when called:    2
 20965 ;; This function calls:
 20966 ;;		Absolute function
 20967 ;;		_INT_DefaultInterruptHandler
 20968 ;;		_sw1_EXT
 20969 ;; This function is called by:
 20970 ;;		_INT_ISR
 20971 ;; This function uses a non-reentrant model
 20972 ;;
 20973                           
 20974                           
 20975                           ;psect for function _INT_CallBack
 20976  095C                     _INT_CallBack:	
 20977  095C                     i1l5209:	
 20978                           ;incstack = 0
 20979                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 20980                           
 20981                           
 20982                           ;mcc_generated_files/ext_int.c: 44:     if(INT_InterruptHandler)
 20983  095C  0021               	movlb	1	; select bank1
 20984  095D  0852               	movf	_INT_InterruptHandler^(0+128),w
 20985  095E  0453               	iorwf	(_INT_InterruptHandler+1)^(0+128),w
 20986  095F  1903               	btfsc	3,2
 20987  0960  2962               	goto	u255_21
 20988  0961  2963               	goto	u255_20
 20989  0962                     u255_21:	
 20990  0962  2968               	goto	i1l338
 20991  0963                     u255_20:	
 20992  0963                     i1l5211:	
 20993                           
 20994                           ;mcc_generated_files/ext_int.c: 45:     {;mcc_generated_files/ext_int.c: 46:         INT
      +                          _InterruptHandler();
 20995  0963  0853               	movf	(_INT_InterruptHandler+1)^(0+128),w
 20996  0964  008A               	movwf	10
 20997  0965  0852               	movf	_INT_InterruptHandler^(0+128),w
 20998  0966  000A               	callw
 20999  0967  3189               	pagesel	$
 21000  0968                     i1l338:	
 21001  0968  0008               	return
 21002  0969                     __end_of_INT_CallBack:	
 21003                           
 21004                           	psect	text111
 21005  0825                     __ptext111:	
 21006 ;; *************** function _INT_DefaultInterruptHandler *****************
 21007 ;; Defined at:
 21008 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 21009 ;; Parameters:    Size  Location     Type
 21010 ;;		None
 21011 ;; Auto vars:     Size  Location     Type
 21012 ;;		None
 21013 ;; Return value:  Size  Location     Type
 21014 ;;                  1    wreg      void 
 21015 ;; Registers used:
 21016 ;;		None
 21017 ;; Tracked objects:
 21018 ;;		On entry : 0/0
 21019 ;;		On exit  : 0/0
 21020 ;;		Unchanged: 0/0
 21021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21026 ;;Total ram usage:        0 bytes
 21027 ;; Hardware stack levels used:    1
 21028 ;; This function calls:
 21029 ;;		Nothing
 21030 ;; This function is called by:
 21031 ;;		_EXT_INT_Initialize
 21032 ;;		_INT_CallBack
 21033 ;; This function uses a non-reentrant model
 21034 ;;
 21035                           
 21036                           
 21037                           ;psect for function _INT_DefaultInterruptHandler
 21038  0825                     _INT_DefaultInterruptHandler:	
 21039  0825                     i1l344:	
 21040                           ;incstack = 0
 21041                           ; Regs used in _INT_DefaultInterruptHandler: []
 21042                           
 21043  0825  0008               	return
 21044  0826                     __end_of_INT_DefaultInterruptHandler:	
 21045                           
 21046                           	psect	text112
 21047  0CB0                     __ptext112:	
 21048 ;; *************** function _sw1_EXT *****************
 21049 ;; Defined at:
 21050 ;;		line 129 in file "main.c"
 21051 ;; Parameters:    Size  Location     Type
 21052 ;;		None
 21053 ;; Auto vars:     Size  Location     Type
 21054 ;;		None
 21055 ;; Return value:  Size  Location     Type
 21056 ;;                  1    wreg      void 
 21057 ;; Registers used:
 21058 ;;		wreg, status,2, status,0, pclath, cstack
 21059 ;; Tracked objects:
 21060 ;;		On entry : 0/0
 21061 ;;		On exit  : 0/0
 21062 ;;		Unchanged: 0/0
 21063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21067 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21068 ;;Total ram usage:        1 bytes
 21069 ;; Hardware stack levels used:    1
 21070 ;; Hardware stack levels required when called:    1
 21071 ;; This function calls:
 21072 ;;		i1_PWM6_LoadDutyValue
 21073 ;;		i1_checkDebounceSW1
 21074 ;; This function is called by:
 21075 ;;		_main
 21076 ;;		_INT_CallBack
 21077 ;; This function uses a non-reentrant model
 21078 ;;
 21079                           
 21080                           
 21081                           ;psect for function _sw1_EXT
 21082  0CB0                     _sw1_EXT:	
 21083  0CB0                     i1l4891:	
 21084                           ;incstack = 0
 21085                           ; Regs used in _sw1_EXT: [wreg+status,2+status,0+pclath+cstack]
 21086                           
 21087                           
 21088                           ;main.c: 132:     if(checkDebounceSW1()){
 21089  0CB0  3187  276D  318C   	fcall	i1_checkDebounceSW1
 21090  0CB3  3A00               	xorlw	0
 21091  0CB4  1903               	skipnz
 21092  0CB5  2CB7               	goto	u237_21
 21093  0CB6  2CB8               	goto	u237_20
 21094  0CB7                     u237_21:	
 21095  0CB7  2CDD               	goto	i1l1288
 21096  0CB8                     u237_20:	
 21097  0CB8                     i1l4893:	
 21098                           
 21099                           ;main.c: 133:         if (alarm == 1){
 21100  0CB8  0020               	movlb	0	; select bank0
 21101  0CB9  0353               	decf	_alarm,w	;volatile
 21102  0CBA  1D03               	btfss	3,2
 21103  0CBB  2CBD               	goto	u238_21
 21104  0CBC  2CBE               	goto	u238_20
 21105  0CBD                     u238_21:	
 21106  0CBD  2CCC               	goto	i1l1282
 21107  0CBE                     u238_20:	
 21108  0CBE                     i1l4895:	
 21109                           
 21110                           ;main.c: 134:             alarm = 0;
 21111  0CBE  01D3               	clrf	_alarm	;volatile
 21112  0CBF                     i1l4897:	
 21113  0CBF  1316               	bcf	22,6	;volatile
 21114  0CC0                     i1l4899:	
 21115                           
 21116                           ;main.c: 136:             PWM6_LoadDutyValue(0);
 21117  0CC0  3000               	movlw	0
 21118  0CC1  00F0               	movwf	i1PWM6_LoadDutyValue@dutyValue
 21119  0CC2  00F1               	movwf	i1PWM6_LoadDutyValue@dutyValue+1
 21120  0CC3  318A  2248  318C   	fcall	i1_PWM6_LoadDutyValue
 21121  0CC6                     i1l4901:	
 21122                           
 21123                           ;main.c: 137:             last_ms = clkms;
 21124  0CC6  087D               	movf	_clkms,w	;volatile
 21125  0CC7  00F7               	movwf	??_sw1_EXT
 21126  0CC8  0877               	movf	??_sw1_EXT,w
 21127  0CC9  0020               	movlb	0	; select bank0
 21128  0CCA  00D9               	movwf	_last_ms
 21129                           
 21130                           ;main.c: 138:         }
 21131  0CCB  2CD9               	goto	i1l1285
 21132  0CCC                     i1l1282:	
 21133                           ;main.c: 139:         else{
 21134                           
 21135                           
 21136                           ;main.c: 140:             if(!PORTBbits.RB4){
 21137  0CCC  1A0D               	btfsc	13,4	;volatile
 21138  0CCD  2CCF               	goto	u239_21
 21139  0CCE  2CD0               	goto	u239_20
 21140  0CCF                     u239_21:	
 21141  0CCF  2CD9               	goto	i1l1285
 21142  0CD0                     u239_20:	
 21143  0CD0                     i1l4903:	
 21144                           
 21145                           ;main.c: 142:                 if(config_mode == 0){
 21146  0CD0  0854               	movf	_config_mode,w	;volatile
 21147  0CD1  1D03               	btfss	3,2
 21148  0CD2  2CD4               	goto	u240_21
 21149  0CD3  2CD5               	goto	u240_20
 21150  0CD4                     u240_21:	
 21151  0CD4  2CD9               	goto	i1l1285
 21152  0CD5                     u240_20:	
 21153  0CD5                     i1l4905:	
 21154                           
 21155                           ;main.c: 143:                     config_mode = 1;
 21156  0CD5  3001               	movlw	1
 21157  0CD6  00F7               	movwf	??_sw1_EXT
 21158  0CD7  0877               	movf	??_sw1_EXT,w
 21159  0CD8  00D4               	movwf	_config_mode	;volatile
 21160  0CD9                     i1l1285:	
 21161                           ;main.c: 149:         }
 21162                           
 21163                           
 21164                           ;main.c: 150:         last_ms = clkms;
 21165  0CD9  087D               	movf	_clkms,w	;volatile
 21166  0CDA  00F7               	movwf	??_sw1_EXT
 21167  0CDB  0877               	movf	??_sw1_EXT,w
 21168  0CDC  00D9               	movwf	_last_ms
 21169  0CDD                     i1l1288:	
 21170  0CDD  0008               	return
 21171  0CDE                     __end_of_sw1_EXT:	
 21172                           
 21173                           	psect	text113
 21174  076D                     __ptext113:	
 21175 ;; *************** function i1_checkDebounceSW1 *****************
 21176 ;; Defined at:
 21177 ;;		line 758 in file "main.c"
 21178 ;; Parameters:    Size  Location     Type
 21179 ;;		None
 21180 ;; Auto vars:     Size  Location     Type
 21181 ;;		None
 21182 ;; Return value:  Size  Location     Type
 21183 ;;                  1    wreg      unsigned char 
 21184 ;; Registers used:
 21185 ;;		wreg, status,2, status,0
 21186 ;; Tracked objects:
 21187 ;;		On entry : 0/0
 21188 ;;		On exit  : 0/0
 21189 ;;		Unchanged: 0/0
 21190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21193 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21194 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21195 ;;Total ram usage:        7 bytes
 21196 ;; Hardware stack levels used:    1
 21197 ;; This function calls:
 21198 ;;		Nothing
 21199 ;; This function is called by:
 21200 ;;		_sw1_EXT
 21201 ;; This function uses a non-reentrant model
 21202 ;;
 21203                           
 21204                           
 21205                           ;psect for function i1_checkDebounceSW1
 21206  076D                     i1_checkDebounceSW1:	
 21207  076D                     i1l4725:	
 21208                           ;incstack = 0
 21209                           ; Regs used in i1_checkDebounceSW1: [wreg+status,2+status,0]
 21210                           
 21211                           
 21212                           ;main.c: 759:     PIE4bits.TMR1IE = 0;
 21213  076D  002E               	movlb	14	; select bank14
 21214  076E  101A               	bcf	26,0	;volatile
 21215  076F                     i1l4727:	
 21216                           
 21217                           ;main.c: 761:     if(clkms - last_ms < 0){
 21218  076F  087D               	movf	_clkms,w	;volatile
 21219  0770  00F0               	movwf	??i1_checkDebounceSW1
 21220  0771  01F1               	clrf	??i1_checkDebounceSW1+1
 21221  0772  0871               	movf	??i1_checkDebounceSW1+1,w
 21222  0773  00F3               	movwf	??i1_checkDebounceSW1+3
 21223  0774  0020               	movlb	0	; select bank0
 21224  0775  0859               	movf	_last_ms,w
 21225  0776  0270               	subwf	??i1_checkDebounceSW1,w
 21226  0777  00F2               	movwf	??i1_checkDebounceSW1+2
 21227  0778  1C03               	skipc
 21228  0779  03F3               	decf	??i1_checkDebounceSW1+3,f
 21229  077A  1FF3               	btfss	??i1_checkDebounceSW1+3,7
 21230  077B  2F7D               	goto	u232_21
 21231  077C  2F7E               	goto	u232_20
 21232  077D                     u232_21:	
 21233  077D  2FA4               	goto	i1l4737
 21234  077E                     u232_20:	
 21235  077E                     i1l4729:	
 21236                           
 21237                           ;main.c: 763:         if ((200 - last_ms)+ clkms > 10 ){
 21238  077E  087D               	movf	_clkms,w	;volatile
 21239  077F  00F0               	movwf	??i1_checkDebounceSW1
 21240  0780  01F1               	clrf	??i1_checkDebounceSW1+1
 21241  0781  0871               	movf	??i1_checkDebounceSW1+1,w
 21242  0782  00F3               	movwf	??i1_checkDebounceSW1+3
 21243  0783  0859               	movf	_last_ms,w
 21244  0784  0270               	subwf	??i1_checkDebounceSW1,w
 21245  0785  00F2               	movwf	??i1_checkDebounceSW1+2
 21246  0786  1C03               	skipc
 21247  0787  03F3               	decf	??i1_checkDebounceSW1+3,f
 21248  0788  0872               	movf	??i1_checkDebounceSW1+2,w
 21249  0789  3EC8               	addlw	200
 21250  078A  00F4               	movwf	??i1_checkDebounceSW1+4
 21251  078B  3000               	movlw	0
 21252  078C  3D73               	addwfc	??i1_checkDebounceSW1+3,w
 21253  078D  00F5               	movwf	??i1_checkDebounceSW1+5
 21254  078E  0875               	movf	??i1_checkDebounceSW1+5,w
 21255  078F  3A80               	xorlw	128
 21256  0790  00F6               	movwf	??i1_checkDebounceSW1+6
 21257  0791  3080               	movlw	128
 21258  0792  0276               	subwf	??i1_checkDebounceSW1+6,w
 21259  0793  1D03               	skipz
 21260  0794  2F97               	goto	u233_25
 21261  0795  300B               	movlw	11
 21262  0796  0274               	subwf	??i1_checkDebounceSW1+4,w
 21263  0797                     u233_25:	
 21264  0797  1C03               	skipc
 21265  0798  2F9A               	goto	u233_21
 21266  0799  2F9B               	goto	u233_20
 21267  079A                     u233_21:	
 21268  079A  2FA4               	goto	i1l4737
 21269  079B                     u233_20:	
 21270  079B                     i1l4731:	
 21271                           
 21272                           ;main.c: 764:             last_ms = clkms;
 21273  079B  087D               	movf	_clkms,w	;volatile
 21274  079C  00F0               	movwf	??i1_checkDebounceSW1
 21275  079D  0870               	movf	??i1_checkDebounceSW1,w
 21276  079E  0020               	movlb	0	; select bank0
 21277  079F  00D9               	movwf	_last_ms
 21278  07A0                     i1l4733:	
 21279                           
 21280                           ;main.c: 765:             PIE4bits.TMR1IE = 1;
 21281  07A0  002E               	movlb	14	; select bank14
 21282  07A1  141A               	bsf	26,0	;volatile
 21283                           
 21284                           ;main.c: 766:             return 1;
 21285  07A2  3001               	movlw	1
 21286  07A3  2FC6               	goto	i1l1481
 21287  07A4                     i1l4737:	
 21288                           
 21289                           ;main.c: 770:     if(clkms - last_ms < 10){
 21290  07A4  087D               	movf	_clkms,w	;volatile
 21291  07A5  00F0               	movwf	??i1_checkDebounceSW1
 21292  07A6  01F1               	clrf	??i1_checkDebounceSW1+1
 21293  07A7  0871               	movf	??i1_checkDebounceSW1+1,w
 21294  07A8  00F3               	movwf	??i1_checkDebounceSW1+3
 21295  07A9  0020               	movlb	0	; select bank0
 21296  07AA  0859               	movf	_last_ms,w
 21297  07AB  0270               	subwf	??i1_checkDebounceSW1,w
 21298  07AC  00F2               	movwf	??i1_checkDebounceSW1+2
 21299  07AD  1C03               	skipc
 21300  07AE  03F3               	decf	??i1_checkDebounceSW1+3,f
 21301  07AF  0873               	movf	??i1_checkDebounceSW1+3,w
 21302  07B0  3A80               	xorlw	128
 21303  07B1  00F4               	movwf	??i1_checkDebounceSW1+4
 21304  07B2  3080               	movlw	128
 21305  07B3  0274               	subwf	??i1_checkDebounceSW1+4,w
 21306  07B4  1D03               	skipz
 21307  07B5  2FB8               	goto	u234_25
 21308  07B6  300A               	movlw	10
 21309  07B7  0272               	subwf	??i1_checkDebounceSW1+2,w
 21310  07B8                     u234_25:	
 21311  07B8  1803               	skipnc
 21312  07B9  2FBB               	goto	u234_21
 21313  07BA  2FBC               	goto	u234_20
 21314  07BB                     u234_21:	
 21315  07BB  2FBE               	goto	i1l4745
 21316  07BC                     u234_20:	
 21317  07BC                     i1l4739:	
 21318                           
 21319                           ;main.c: 771:         return 0;
 21320  07BC  3000               	movlw	0
 21321  07BD  2FC6               	goto	i1l1481
 21322  07BE                     i1l4745:	
 21323                           
 21324                           ;main.c: 774:         last_ms = clkms;
 21325  07BE  087D               	movf	_clkms,w	;volatile
 21326  07BF  00F0               	movwf	??i1_checkDebounceSW1
 21327  07C0  0870               	movf	??i1_checkDebounceSW1,w
 21328  07C1  0020               	movlb	0	; select bank0
 21329  07C2  00D9               	movwf	_last_ms
 21330  07C3                     i1l4747:	
 21331                           
 21332                           ;main.c: 775:         PIE4bits.TMR1IE = 1;
 21333  07C3  002E               	movlb	14	; select bank14
 21334  07C4  141A               	bsf	26,0	;volatile
 21335                           
 21336                           ;main.c: 776:         return 1;
 21337  07C5  3001               	movlw	1
 21338  07C6                     i1l1481:	
 21339  07C6  0008               	return
 21340  07C7                     __end_ofi1_checkDebounceSW1:	
 21341                           
 21342                           	psect	text114
 21343  0A48                     __ptext114:	
 21344 ;; *************** function i1_PWM6_LoadDutyValue *****************
 21345 ;; Defined at:
 21346 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 21347 ;; Parameters:    Size  Location     Type
 21348 ;;  dutyValue       2    0[COMMON] unsigned short 
 21349 ;; Auto vars:     Size  Location     Type
 21350 ;;		None
 21351 ;; Return value:  Size  Location     Type
 21352 ;;                  1    wreg      void 
 21353 ;; Registers used:
 21354 ;;		wreg, status,2, status,0
 21355 ;; Tracked objects:
 21356 ;;		On entry : 0/0
 21357 ;;		On exit  : 0/0
 21358 ;;		Unchanged: 0/0
 21359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21363 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21364 ;;Total ram usage:        4 bytes
 21365 ;; Hardware stack levels used:    1
 21366 ;; This function calls:
 21367 ;;		Nothing
 21368 ;; This function is called by:
 21369 ;;		_sw1_EXT
 21370 ;;		_ISR_3s
 21371 ;; This function uses a non-reentrant model
 21372 ;;
 21373                           
 21374                           
 21375                           ;psect for function i1_PWM6_LoadDutyValue
 21376  0A48                     i1_PWM6_LoadDutyValue:	
 21377  0A48                     i1l4723:	
 21378                           ;incstack = 0
 21379                           ; Regs used in i1_PWM6_LoadDutyValue: [wreg+status,2+status,0]
 21380                           
 21381                           
 21382                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 21383  0A48  0871               	movf	i1PWM6_LoadDutyValue@dutyValue+1,w
 21384  0A49  00F3               	movwf	??i1_PWM6_LoadDutyValue+1
 21385  0A4A  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 21386  0A4B  00F2               	movwf	??i1_PWM6_LoadDutyValue
 21387  0A4C  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 21388  0A4D  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 21389  0A4E  36F3               	lsrf	??i1_PWM6_LoadDutyValue+1,f
 21390  0A4F  0CF2               	rrf	??i1_PWM6_LoadDutyValue,f
 21391  0A50  0872               	movf	??i1_PWM6_LoadDutyValue,w
 21392  0A51  0027               	movlb	7	; select bank7
 21393  0A52  008D               	movwf	13	;volatile
 21394                           
 21395                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 21396  0A53  0870               	movf	i1PWM6_LoadDutyValue@dutyValue,w
 21397  0A54  3903               	andlw	3
 21398  0A55  00F2               	movwf	??i1_PWM6_LoadDutyValue
 21399  0A56  3005               	movlw	5
 21400  0A57                     u231_25:	
 21401  0A57  35F2               	lslf	??i1_PWM6_LoadDutyValue,f
 21402  0A58  3EFF               	addlw	-1
 21403  0A59  1D03               	skipz
 21404  0A5A  2A57               	goto	u231_25
 21405  0A5B  3572               	lslf	??i1_PWM6_LoadDutyValue,w
 21406  0A5C  008C               	movwf	12	;volatile
 21407  0A5D                     i1l916:	
 21408  0A5D  0008               	return
 21409  0A5E                     __end_ofi1_PWM6_LoadDutyValue:	
 21410  007E                     btemp	set	126	;btemp
 21411  007E                     int$flags	set	126
 21412  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    36
    Data        9
    BSS         75
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     33      74
    BANK1            80      6      58
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    do_I2C_TX$3738$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_ISR$3744	const PTR FTN()enum E12722 size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    do_I2C_TX$3743	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    do_I2C_TX$3738	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    returnStop@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    returnReset@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_restartWrite@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$11$0	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    push_ring@ring_byte	PTR unsigned char  size(1) Largest target is 5
		 -> ring_byte(BANK1[5]), 

    push_ring@nreg_pt	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_pt(BANK0[1]), 

    push_ring@nreg_init	PTR unsigned char  size(1) Largest target is 1
		 -> nreg_init(BANK0[1]), 

    S2082Subfield_Info_Struct$reconstruct_subfield	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> recLumThresh(), recTempThresh(), recAlarm(), recMinutes(), 
		 -> recHour(), Absolute function(), 

    subfield_info.reconstruct_subfield	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> recLumThresh(), recTempThresh(), recAlarm(), recMinutes(), 
		 -> recHour(), Absolute function(), 

    S2082Subfield_Info_Struct$limit	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), limitTempThreshUnits(), Absolute function(), Absolute function(), 
		 -> Absolute function(), limitHoursUnits(), Absolute function(), Absolute function(), 

    subfield_info.limit	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Absolute function(), limitTempThreshUnits(), Absolute function(), Absolute function(), 
		 -> Absolute function(), limitHoursUnits(), Absolute function(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ISR_3s(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ISR_3s(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_ms(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> handler_clock_hms(), TMR1_DefaultInterruptHandler(), Absolute function(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_ISR(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), i2c_busCollisionISR(), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> sw1_EXT(), INT_DefaultInterruptHandler(), Absolute function(), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S383$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    setCallBack@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), i2c_restartWrite(), 

    fsmStateTable	const PTR FTN()enum E12722[16] size(2) Largest target is 1
		 -> do_I2C_TX_EMPTY(), do_I2C_RX(), do_I2C_TX(), do_I2C_DO_ADDRESS_NACK(), 
		 -> do_I2C_DO_NACK_RESTART(), do_I2C_DO_NACK_STOP(), do_I2C_DO_ACK(), do_I2C_RCEN(), 
		 -> do_I2C_SEND_ADR_WRITE(), do_I2C_SEND_ADR_READ(), do_I2C_SEND_STOP(), do_I2C_SEND_RESTART(), 
		 -> do_I2C_SEND_RESTART_WRITE(), do_I2C_SEND_RESTART_READ(), do_I2C_IDLE(), do_I2C_RESET(), 

    i2c_setBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@p	PTR void  size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_setDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E12568 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), 

    S66$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S66$callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    i2c_status.callbackTable	PTR FTN(PTR void ,)enum E12568[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), Absolute function(), returnReset(), returnStop(), 
		 -> i2c_restartWrite(), 

    S66$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _i2c_ISR->_do_I2C_DO_ADDRESS_NACK
    _i2c_ISR->_do_I2C_RX
    _i2c_ISR->_do_I2C_TX
    _i2c_ISR->_do_I2C_TX_EMPTY
    _do_I2C_TX_EMPTY->_i2c_restartWrite
    _do_I2C_TX_EMPTY->_rd1RegCompleteHandler
    _do_I2C_TX_EMPTY->_rd2RegCompleteHandler
    _do_I2C_TX_EMPTY->_rdBlkRegCompleteHandler
    _do_I2C_TX_EMPTY->_returnReset
    _do_I2C_TX_EMPTY->_returnStop
    _do_I2C_TX_EMPTY->_wr1RegCompleteHandler
    _do_I2C_TX_EMPTY->_wr2RegCompleteHandler
    _do_I2C_TX->_i2c_restartWrite
    _do_I2C_TX->_rd1RegCompleteHandler
    _do_I2C_TX->_rd2RegCompleteHandler
    _do_I2C_TX->_rdBlkRegCompleteHandler
    _do_I2C_TX->_returnReset
    _do_I2C_TX->_returnStop
    _do_I2C_TX->_wr1RegCompleteHandler
    _do_I2C_TX->_wr2RegCompleteHandler
    _do_I2C_SEND_ADR_WRITE->_i2c1_driver_TXData
    _do_I2C_RX->_i2c_restartWrite
    _do_I2C_RX->_rd1RegCompleteHandler
    _do_I2C_RX->_rd2RegCompleteHandler
    _do_I2C_RX->_rdBlkRegCompleteHandler
    _do_I2C_RX->_returnReset
    _do_I2C_RX->_returnStop
    _do_I2C_RX->_wr1RegCompleteHandler
    _do_I2C_RX->_wr2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_i2c_restartWrite
    _do_I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_returnReset
    _do_I2C_DO_ADDRESS_NACK->_returnStop
    _do_I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _do_I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_i2c_setDataCompleteCallback
    _wr1RegCompleteHandler->_i2c_setDataCompleteCallback
    _rdBlkRegCompleteHandler->_i2c_setDataCompleteCallback
    _rd2RegCompleteHandler->_i2c_setDataCompleteCallback
    _rd1RegCompleteHandler->_i2c_setDataCompleteCallback
    _i2c_setDataCompleteCallback->_setCallBack
    _TMR2_ISR->_handler_clock_ms
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_ISR_3s
    _ISR_3s->i1_PWM6_LoadDutyValue
    _INT_CallBack->_sw1_EXT
    _sw1_EXT->i1_checkDebounceSW1

Critical Paths under _main in BANK0

    _main->_config_routine
    _tsttc->_WriteI2C
    _recoverData->_reset_recv
    _reset_recv->_DATAEE_WriteByte
    _cksum_w->_DATAEE_WriteByte
    _cksum->_DATAEE_ReadByte
    _read_ring->___bmul
    _push_ring->_DATAEE_WriteByte
    _DATAEE_WriteByte->_cksum
    _config_routine->_selectSubfield
    _selectSubfield->_increment_subfield
    _mod4_LED->_PWM6_LoadDutyValue
    _mod3_LED->_PWM6_LoadDutyValue
    _mod2_LED->_PWM6_LoadDutyValue
    _mod1_LED->_PWM6_LoadDutyValue
    _increment_subfield->_representLed
    _representLed->_PWM6_LoadDutyValue
    _recTempThresh->___awdiv
    _recMinutes->___awdiv
    _recHour->___awdiv
    _mode_select_LED->_PWM6_LoadDutyValue
    _all_LED->_PWM6_LoadDutyValue
    _PWM6_LoadDutyValue->___wmul
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _ADC_read->_ADCC_GetConversionResult

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_i2c_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   54374
                                             28 BANK0      5     5      0
                                              0 BANK1      6     6      0
                           _ADC_read
                   _DATAEE_WriteByte
            _INT_SetInterruptHandler
                            _LED_bin
                 _PWM6_LoadDutyValue
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                            _cksum_w
                     _config_routine
                   _i2c1_driver_open
                          _push_ring
                          _read_ring
                        _recoverData
                              _tsttc
 ---------------------------------------------------------------------------------
 (1) _tsttc                                                2     2      0      99
                                              5 BANK0      2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      31
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _recoverData                                          1     1      0   13358
                                             15 BANK0      1     1      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                              _cksum
                            _cksum_w
                         _reset_recv
 ---------------------------------------------------------------------------------
 (2) _reset_recv                                           2     2      0    2746
                                             13 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _cksum_w                                              1     1      0    4465
                                             13 BANK0      1     1      0
                   _DATAEE_WriteByte
                              _cksum
 ---------------------------------------------------------------------------------
 (3) _cksum                                                4     4      0    1818
                                              5 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (1) _read_ring                                            9     5      4    3043
                                              7 BANK0      9     5      4
                    _DATAEE_ReadByte
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     226
                                              3 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _DATAEE_ReadByte                                      2     0      2    1682
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _push_ring                                            7     4      3    3300
                                             13 BANK0      7     4      3
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     4     1      3    2647
                                              9 BANK0      4     1      3
                              _cksum (ARG)
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_routine                                       3     3      0   24160
                                             25 BANK0      3     3      0
                            _all_LED
                   _checkDebounceSW1
                   _checkDebounceSW2
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
                    _mode_select_LED
                     _selectSubfield
 ---------------------------------------------------------------------------------
 (2) _selectSubfield                                       4     4      0   16546
                                             21 BANK0      4     4      0
                   _checkDebounceSW1
                   _checkDebounceSW2
                    _getSubfieldInfo
                 _increment_subfield
                           _mod1_LED
                           _mod2_LED
                           _mod3_LED
                           _mod4_LED
 ---------------------------------------------------------------------------------
 (3) _mod4_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _mod3_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _mod2_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _mod1_LED                                             0     0      0    1252
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _increment_subfield                                   3     3      0   11439
                                             18 BANK0      3     3      0
                   Absolute function *
                 _PWM6_LoadDutyValue
                   _checkDebounceSW1
                   _checkDebounceSW2
                           _recAlarm *
                            _recHour *
                       _recLumThresh *
                         _recMinutes *
                      _recTempThresh *
                       _representLed
 ---------------------------------------------------------------------------------
 (4) _representLed                                         5     5      0    2747
                                             13 BANK0      5     5      0
                 _PWM6_LoadDutyValue
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1306
                                              3 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _recTempThresh                                        4     3      1    2380
                                             12 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) _recMinutes                                           4     3      1    2380
                                             12 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) _recLumThresh                                         2     1      1      96
                                             12 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (4) _recHour                                              4     3      1    2380
                                             12 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     973
                                              3 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    1345
                                              3 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) _recAlarm                                             2     1      1      31
                                             12 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW2                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (4) _checkDebounceSW1                                     7     7      0       0
                                              3 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) _getSubfieldInfo                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _mode_select_LED                                      1     1      0    1252
                                             13 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _all_LED                                              1     1      0    1252
                                             13 BANK0      1     1      0
                 _PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (4) _PWM6_LoadDutyValue                                   4     2      2    1252
                                              9 BANK0      4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     844
                    _ADCC_Initialize
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     211
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2     211
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_bin                                              5     3      2     152
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             2     0      2      31
                                              5 BANK0      2     0      2
           _ADCC_GetConversionResult
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      31
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_IsConversionDone                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0   78474
                   Absolute function *
                            _INT_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                            _i2c_ISR *
                _i2c_busCollisionISR *
 ---------------------------------------------------------------------------------
 (7) _i2c_busCollisionISR                                  0     0      0       0
      _i2c1_driver_clearBusCollision
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_clearBusCollision                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _i2c_ISR                                              3     3      0   78042
                                              0 BANK0      3     3      0
                      _do_I2C_DO_ACK *
             _do_I2C_DO_ADDRESS_NACK *
             _do_I2C_DO_NACK_RESTART *
                _do_I2C_DO_NACK_STOP *
                        _do_I2C_IDLE *
                        _do_I2C_RCEN *
                       _do_I2C_RESET *
                          _do_I2C_RX *
               _do_I2C_SEND_ADR_READ *
              _do_I2C_SEND_ADR_WRITE *
                _do_I2C_SEND_RESTART *
           _do_I2C_SEND_RESTART_READ *
          _do_I2C_SEND_RESTART_WRITE *
                   _do_I2C_SEND_STOP *
                          _do_I2C_TX *
                    _do_I2C_TX_EMPTY *
                 _i2c1_driver_isNACK
                     _mssp1_clearIRQ
 ---------------------------------------------------------------------------------
 (8) _mssp1_clearIRQ                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_TX_EMPTY                                      3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
                       _mssp1_setIRQ
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _mssp1_setIRQ                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_TX                                            3     3      0   19516
                                             10 COMMON     3     3      0
                   Absolute function *
           _do_I2C_SEND_RESTART_READ
          _do_I2C_SEND_RESTART_WRITE
                   _do_I2C_SEND_STOP
                 _i2c1_driver_TXData
                 _i2c1_driver_isNACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _i2c1_driver_isNACK                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_RESTART_WRITE                            0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_RESTART_READ                             0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_ADR_WRITE                                0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (8) _do_I2C_SEND_ADR_READ                                 0     0      0      22
                 _i2c1_driver_TXData
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_TXData                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_RX                                            3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
             _do_I2C_DO_NACK_RESTART
                _do_I2C_DO_NACK_STOP
              _i2c1_driver_getRXData
                _i2c1_driver_sendACK
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_getRXData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_NACK_STOP                                  0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (9) _do_I2C_DO_NACK_RESTART                               0     0      0       0
               _i2c1_driver_sendNACK
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_sendNACK                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_RESET                                         0     0      0       0
               _i2c1_driver_resetBus
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_resetBus                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_RCEN                                          0     0      0       0
                _i2c1_driver_startRX
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_startRX                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_ADDRESS_NACK                               3     3      0   19494
                                             10 COMMON     3     3      0
                   Absolute function *
                _do_I2C_SEND_RESTART
                   _do_I2C_SEND_STOP
                   _i2c_restartWrite *
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
                        _returnReset *
                         _returnStop *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _returnStop                                           1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) _returnReset                                          1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              1     0      1    4086
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                1     0      1    3852
                                              9 COMMON     1     0      1
                      _i2c_setBuffer
        _i2c_setDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _i2c_setDataCompleteCallback                         4     1      3    2478
                                              5 COMMON     4     1      3
                        _setCallBack
 ---------------------------------------------------------------------------------
 (11) _setCallBack                                         5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (10) _i2c_setBuffer                                       4     2      2    1352
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _i2c_restartWrite                                     1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_STOP                                     0     0      0       0
                   _i2c1_driver_stop
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_stop                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _do_I2C_SEND_RESTART                                  0     0      0       0
                _i2c1_driver_restart
 ---------------------------------------------------------------------------------
 (10) _i2c1_driver_restart                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _do_I2C_DO_ACK                                        0     0      0       0
                _i2c1_driver_sendACK
 ---------------------------------------------------------------------------------
 (9) _i2c1_driver_sendACK                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                   _handler_clock_ms *
 ---------------------------------------------------------------------------------
 (8) _handler_clock_ms                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_ISR                                             0     0      0     240
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
                  _handler_clock_hms *
 ---------------------------------------------------------------------------------
 (8) _handler_clock_hms                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0      96
                   Absolute function *
                             _ISR_3s *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ISR_3s                                               1     1      0      96
                                              4 COMMON     1     1      0
                     _TMR0_StopTimer
               i1_PWM6_LoadDutyValue
 ---------------------------------------------------------------------------------
 (9) _TMR0_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT_ISR                                              0     0      0      96
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (8) _INT_CallBack                                         0     0      0      96
                   Absolute function *
        _INT_DefaultInterruptHandler *
                            _sw1_EXT *
 ---------------------------------------------------------------------------------
 (9) _sw1_EXT                                              1     1      0      96
                                              7 COMMON     1     1      0
               i1_PWM6_LoadDutyValue
                 i1_checkDebounceSW1
 ---------------------------------------------------------------------------------
 (10) i1_checkDebounceSW1                                  7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (9) i1_PWM6_LoadDutyValue                                 4     2      2      96
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_read
     _ADCC_GetConversionResult
     _ADCC_IsConversionDone
     _ADCC_StartConversion
   _DATAEE_WriteByte
     _cksum (ARG)
       _DATAEE_ReadByte
   _INT_SetInterruptHandler
   _LED_bin
   _PWM6_LoadDutyValue
     ___wmul (ARG)
   _SYSTEM_Initialize
     _ADCC_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   _cksum_w
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
   _config_routine
     _all_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _checkDebounceSW1
     _checkDebounceSW2
     _mod1_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod2_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod3_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mod4_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _mode_select_LED
       _PWM6_LoadDutyValue
         ___wmul (ARG)
     _selectSubfield
       _checkDebounceSW1
       _checkDebounceSW2
       _getSubfieldInfo
       _increment_subfield
         Absolute function(Fake) *
         _PWM6_LoadDutyValue *
           ___wmul (ARG)
         _checkDebounceSW1 *
         _checkDebounceSW2 *
         _recAlarm *
         _recHour *
           ___awdiv
           ___awmod
         _recLumThresh *
         _recMinutes *
           ___awdiv
           ___awmod
         _recTempThresh *
           ___awdiv
           ___awmod
         _representLed *
           _PWM6_LoadDutyValue
             ___wmul (ARG)
           ___wmul
       _mod1_LED
         _PWM6_LoadDutyValue
           ___wmul (ARG)
       _mod2_LED
         _PWM6_LoadDutyValue
           ___wmul (ARG)
       _mod3_LED
         _PWM6_LoadDutyValue
           ___wmul (ARG)
       _mod4_LED
         _PWM6_LoadDutyValue
           ___wmul (ARG)
   _i2c1_driver_open
   _push_ring
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
   _read_ring
     _DATAEE_ReadByte
     ___bmul
   _recoverData
     _DATAEE_ReadByte
     _DATAEE_WriteByte
       _cksum (ARG)
         _DATAEE_ReadByte
     _cksum
       _DATAEE_ReadByte
     _cksum_w
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
       _cksum
         _DATAEE_ReadByte
     _reset_recv
       _DATAEE_WriteByte
         _cksum (ARG)
           _DATAEE_ReadByte
   _tsttc
     _ReadI2C
     _WriteI2C

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _INT_ISR *
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
       _sw1_EXT *
         i1_PWM6_LoadDutyValue
         i1_checkDebounceSW1
   _TMR0_ISR *
     Absolute function(Fake) *
     _ISR_3s *
       _TMR0_StopTimer
       i1_PWM6_LoadDutyValue
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer *
     _handler_clock_hms *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _handler_clock_ms *
   _i2c_ISR *
     _do_I2C_DO_ACK *
       _i2c1_driver_sendACK
     _do_I2C_DO_ADDRESS_NACK *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_DO_NACK_RESTART *
       _i2c1_driver_sendNACK
     _do_I2C_DO_NACK_STOP *
       _i2c1_driver_sendNACK
     _do_I2C_IDLE *
     _do_I2C_RCEN *
       _i2c1_driver_startRX
     _do_I2C_RESET *
       _i2c1_driver_resetBus
     _do_I2C_RX *
       Absolute function(Fake) *
       _do_I2C_DO_NACK_RESTART *
         _i2c1_driver_sendNACK
       _do_I2C_DO_NACK_STOP *
         _i2c1_driver_sendNACK
       _i2c1_driver_getRXData *
       _i2c1_driver_sendACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_SEND_ADR_READ *
       _i2c1_driver_TXData
     _do_I2C_SEND_ADR_WRITE *
       _i2c1_driver_TXData
     _do_I2C_SEND_RESTART *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_READ *
       _i2c1_driver_restart
     _do_I2C_SEND_RESTART_WRITE *
       _i2c1_driver_restart
     _do_I2C_SEND_STOP *
       _i2c1_driver_stop
     _do_I2C_TX *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART_READ *
         _i2c1_driver_restart
       _do_I2C_SEND_RESTART_WRITE *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c1_driver_TXData *
       _i2c1_driver_isNACK *
       _i2c_restartWrite *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _do_I2C_TX_EMPTY *
       Absolute function(Fake) *
       _do_I2C_SEND_RESTART *
         _i2c1_driver_restart
       _do_I2C_SEND_STOP *
         _i2c1_driver_stop
       _i2c_restartWrite *
       _mssp1_setIRQ *
       _rd1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rd2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _rdBlkRegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _returnReset *
       _returnStop *
       _wr1RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
       _wr2RegCompleteHandler *
         _i2c_setBuffer
         _i2c_setDataCompleteCallback
           _setCallBack
     _i2c1_driver_isNACK *
     _mssp1_clearIRQ *
   _i2c_busCollisionISR *
     _i2c1_driver_clearBusCollision

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      4A       5       92.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      6      3A       7       72.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      92      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      92      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov 26 19:01:40 2019

                            returnReset@p 0079          __end_of_TMR2_SetInterruptHandler 0910  
                          ___bmul@product 0025                               __CFG_CP$OFF 0000  
                            ___awdiv@sign 0029                      __size_of_do_I2C_IDLE 0005  
                           _subfield_info 0041                       _do_I2C_SEND_RESTART 0869  
                    __size_of_do_I2C_RCEN 0007                       ___wmul@multiplicand 0025  
             __size_of_PWM6_LoadDutyValue 0019                    increment_subfield@exit 0033  
                             __CFG_LVP$ON 0000                                       l341 08EB  
                                     l442 08F4                                       l530 0E73  
                                     l347 0990                                       l445 08D0  
                                     l439 0B52                                       l760 08C8  
                                     l913 0982                                       l594 095B  
                                     l763 08A8                                       l916 0B02  
                                     l757 0A73                                       l766 08E2  
                                     l960 0C30                                       l963 09BD  
                                     l869 0B8D                                       l957 0C25  
                                     l959 0C29                                       l899 0906  
                                     l998 0AD0                                       _PR2 028D  
                            __CFG_CPD$OFF 0000                                       i1l9 082B  
                         _timer1ReloadVal 0068                                       _seg 005A  
           i2c_setDataCompleteCallback@cb 0075                   __size_of_PMD_Initialize 0008  
                            ___awmod@sign 0029                           _TMR2_Initialize 0AB9  
                   __size_of_do_I2C_RESET 0008                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_ZCD$OFF 0000  
                         __end_of_LED_bin 0B37                                      l1041 090F  
                                    l1300 00A1                   ??_rd2RegCompleteHandler 007A  
                                    l1070 0848                                      l2031 0FFF  
                                    l1311 0162                                      l1303 00CB  
                                    l1400 0D3F                                      l1320 01F9  
                                    l1321 022F                                      l2018 065D  
                                    l1067 0A47                                      l1316 01DC  
                                    l1501 0BCC                                      l1510 0F57  
                                    l1422 05FD                                      l1342 04A6  
                                    l1415 05AD                                      l1351 0564  
                                    l1440 0B36                                      l1360 059B  
                                    l1089 08FD                                      l1425 065E  
                                    l1346 052A                                      l1610 0365  
                                    l1611 0368                                      l1428 066B  
                                    l1348 053B                                      l1700 0DE3  
                                    l1620 0383                                      l1437 06B8  
                                    l1446 0B1C                                      l1390 0888  
                                    l1382 088E                                      l1550 0245  
                                    l1463 092D                                      l1471 0938  
                                    l1703 09DD                                      l1632 0BAC  
                                    l1616 037B                                      l1481 076C  
                                    l1713 0B6E                                      l1641 06DF  
                                    l1617 037D                                      l1561 027E  
                                    l1466 0922                                      l1562 0280  
                                    l1546 0234                                      l1379 0524  
                                    l1387 0D0E                                      l1395 0D71  
                                    l1476 0943                                      l1708 0C0C  
                                    l1628 0BA4                                      l1636 0712  
                                    l1580 02D4                                      l1629 0BA6  
                                    l1653 0710                                      l1573 02BC  
                                    l1549 0243                                      l1582 02D8  
                                    l1574 02BF                                      l1639 06DA  
                                    l1488 0F0A                                      l1648 06FC  
                                    l1586 02EC                                      l1587 02EE  
                                    l1579 02D2                                      l1693 0E2A  
                                    l1686 041B                                      l1598 0327  
                    _ADCC_StartConversion 08C1                                      l1599 0329  
                                    l1865 0BD8                                      l1867 0BEC  
                                    l1891 0A89                                      l7003 06E6  
                                    l7101 0846                                      l7021 0A76  
                                    l7013 0B8E                                      l7005 06F1  
                                    l7031 0A88                                      l7023 0A77  
                                    l7111 03E8                                      l7103 0384  
                                    l7015 0B99                                      l7007 0701  
                                    l7121 0B03                                      l7025 0A7B  
                                    l7113 03F4                                      l7105 0391  
                                    l7017 0BAB                                      l7123 0B08  
                                    l7131 0B1D                                      l7211 0DF3  
                                    l7027 0A7F                                      l7203 0DD9  
                                    l7115 0400                                      l7107 03A3  
                                    l7125 0B0C                                      l6501 0FE2  
                                    l6421 0BD0                                      l7221 0E01  
                                    l7029 0A81                                      l7117 040C  
                                    l7109 03E5                                      l7141 026B  
                                    l7133 0234                                      l7127 0B14  
                                    l6511 0FFB                                      l6503 0FE6  
                                    l6423 0BD4                                      l7231 041F  
                                    l7071 0950                                      l7223 0E18  
                                    l7207 0DE6                                      l7119 0418  
                                    l7151 02A6                                      l7143 026F  
                                    l7135 0249                                      l6417 0AEA  
                                    l6441 060B                                      l6433 05FE  
                                    l6505 0FEB                                      l6425 0BDD  
                                    l7241 0438                                      l7233 0423  
                                    l7073 0955                                      l7225 0E20  
                                    l7217 0DF4                                      l7209 0DEE  
                                    l6521 09B8                                      l7161 0301  
                                    l7153 02AD                                      l7145 0284  
                                    l7137 0258                                      l7401 00A8  
                                    l6611 08E3                                      l7091 0B43  
                                    l7083 0B37                                      l6531 0713  
                                    l6451 0620                                      l6443 060F  
                                    l6435 0600                                      l6507 0FF1  
                                    l6427 0BE2                                      l6419 0BCD  
                                    l6603 0F18                                      l7251 0453  
                                    l7243 043D                                      l7235 0427  
                                    l7075 0956                                      l7227 0E24  
                                    l7219 0DFD                                      l6523 09B9  
                                    l6515 09AF                                      l7171 033C  
                                    l7163 0305                                      l7155 02C3  
                                    l7147 0293                                      l7139 025C  
                                    l7411 00B1                                      l7403 00AA  
                                    l6613 08FE                                      l7093 0B46  
                                    l7085 0B3A                                      l6533 0715  
                                    l6461 063F                                      l6453 0623  
                                    l6445 0614                                      l6437 0604  
                                    l6509 0FF6                                      l6429 0BE8  
                                    l6605 0F27                                      l7253 0457  
                                    l7245 0445                                      l7261 0473  
                                    l7237 042F                                      l7229 041C  
                                    l7077 0958                                      l6621 0C1D  
                                    l6525 09BA                                      l6517 09B3  
                                    l7181 0381                                      l7173 0340  
                                    l7165 0314                                      l7157 02DD  
                                    l7149 0297                                      l7501 01C4  
                                    l7421 00BA                                      l7413 00B2  
                                    l7405 00AB                                      l7095 0B49  
                                    l7087 0B3D                                      l6551 0764  
                                    l6535 0724                                      l6543 074A  
                                    l6471 0654                                      l6463 0643  
                                    l6455 0628                                      l6447 0618  
                                    l6439 0609                                      l6607 0F44  
                                    l6711 05AB                                      l6703 059C  
                                    l7271 048C                                      l7255 045B  
                                    l7247 044B                                      l7263 0478  
                                    l7239 0435                                      l6631 0C24  
                                    l6623 0C1E                                      l6615 0C0D  
                                    l6527 09BB                                      l6519 09B7  
                                    l7191 0DB2                                      l7175 034F  
                                    l7167 0318                                      l7159 02F2  
                                    l7503 01C7                                      l7511 01DD  
                                    l7431 00C9                                      l7423 00BB  
                                    l7415 00B5                                      l7407 00AD  
                                    l6801 0E60                                      l7097 0B4C  
                                    l7089 0B40                                      l6553 0769  
                                    l6545 0762                                      l6537 0741  
                                    l6561 0EEA                                      l6473 0659  
                                    l6465 0644                                      l6457 062C  
                                    l6449 061A                                      l6481 0FB2  
                                    l6609 0F4E                                      l6721 05CD  
                                    l6713 05B1                                      l6705 059F  
                                    l6641 0925                                      l7273 048F  
                                    l7265 047C                                      l7249 044F  
                                    l6633 0C2A                                      l6625 0C1F  
                                    l6617 0C15                                      l7193 0DBF  
                                    l7185 0DA7                                      l7177 0356  
                                    l7169 032D                                      l7521 01F2  
                                    l7513 01E2                                      l7505 01CD  
                                    l7441 00D5                                      l7433 00CA  
                                    l7425 00BE                                      l7417 00B7  
                                    l7409 00AF                                      l6811 0E6C  
                                    l6803 0E62                                      l6635 0907  
                                    l7099 0B4F                                      l6539 0746  
                                    l6467 0649                                      l6459 0630  
                                    l6491 0FC8                                      l6483 0FB7  
                                    l6731 05E6                                      l6715 05B9  
                                    l6723 05D2                                      l6707 05A5  
                                    l6643 092B                                      l6651 0930  
                                    l7267 0484                                      l7275 0494  
                                    l7259 0460                                      l6627 0C20  
                                    l6619 0C19                                      l7195 0DC5  
                                    l7187 0DA7                                      l7179 036C  
                                    l7531 020D                                      l7523 01FB  
                                    l7515 01E4                                      l7507 01D3  
                                    l7451 00E5                                      l7443 00D7  
                                    l7435 00CC                                      l7427 00C5  
                                    l7419 00B8                                      l6821 08F0  
                                    l6813 0E6E                                      l6805 0E64  
                                    l6637 08F5                                      l6901 067C  
                                    l6661 04A7                                      l6565 0EF1  
                                    l6557 0EBE                                      l6469 064F  
                                    l6493 0FCB                                      l6485 0FB9  
                                    l6477 0FAC                                      l6581 0CE5  
                                    l6717 05BE                                      l6725 05D7  
                                    l6733 05EB                                      l6709 05A7  
                                    l6645 0919                                      l6653 0936  
                                    l7277 0498                                      l7269 0489  
                                    l6629 0C22                                      l7197 0DCC  
                                    l7189 0DAD                                      l7533 020F  
                                    l7525 0201                                      l7517 01E7  
                                    l7509 01D9                                      l7461 0106  
                                    l7453 00EB                                      l7445 00DF  
                                    l7437 00CD                                      l7429 00C7  
                                    l6831 0A70                                      l6823 08F3  
                                    l6815 0E70                                      l6807 0E67  
                                    l6911 06A2                                      l6903 068C  
                                    l6663 04A8                                      l6567 0F09  
                                    l6559 0ECD                                      l6495 0FD0  
                                    l6487 0FBD                                      l6479 0FAE  
                                    l6583 0CFA                                      l6591 0D5D  
                                    l6735 05F0                                      l6727 05DB  
                                    l6719 05CB                                      l6639 0923  
                                    l6647 091B                                      l6655 0939  
                                    l7279 049E                                      l7199 0DD7  
                                    l6751 0C0B                                      l7535 021D  
                                    l7527 0202                                      l7519 01E9  
                                    l7471 0121                                      l7463 010D  
                                    l7455 00F3                                      l7447 00E1  
                                    l7439 00CF                                      l7391 00A1  
                                    l6833 0A72                                      l6817 08EC  
                                    l6809 0E69                                      l6761 08C9  
                                    l6825 0976                                      l6841 0AC2  
                                    l6913 06AB                                      l6905 0695  
                                    l6921 0BB5                                      l6673 04CC  
                                    l6665 04B1                                      l6497 0FD4  
                                    l6489 0FC2                                      l6593 0D0F  
                                    l6585 0883                                      l6577 0889  
                                    l6729 05E3                                      l6649 092E  
                                    l6657 093B                                      l6745 0BF3  
                                    l6737 0BED                                      l7537 022B  
                                    l7529 0207                                      l7481 0176  
                                    l7473 0123                                      l7465 010E  
                                    l7457 00FE                                      l7449 00E3  
                                    l7393 00A1                                      l6755 0983  
                                    l6819 08EF                                      l6771 0E37  
                                    l6763 0E2B                                      l6827 097D  
                                    l6851 0B72                                      l6843 0AC4  
                                    l6835 0AB9                                      l6915 06AD  
                                    l6907 0697                                      l6931 0BCB  
                                    l6923 0BB7                                      l6683 04FA  
                                    l6675 04DF                                      l6667 04BA  
                                    l6499 0FD8                                      l6579 0CDE  
                                    l6595 0D16                                      l6587 0D40  
                                    l6659 0941                                      l6747 0BFE  
                                    l6739 0BEF                                      l7491 01AB  
                                    l7483 0184                                      l7475 012D  
                                    l7467 0111                                      l7459 0105  
                                    l6829 0A5E                                      l6757 0986  
                                    l6781 0E42                                      l6773 0E39  
                                    l6765 0E31                                      l6861 0B81  
                                    l6853 0B74                                      l6845 0AC5  
                                    l6837 0ABE                                      l6917 06B6  
                                    l6909 06A0                                      l6925 0BBF  
                                    l6685 0507                                      l6677 04E8  
                                    l6669 04C3                                      l6597 0D2B  
                                    l6589 0D48                                      l6941 0541  
                                    l6933 0525                                      l6749 0C02  
                                    l7493 01B1                                      l7485 0195  
                                    l7477 0144                                      l7469 011B  
                                    l7397 00A6                                      l7389 007E  
                                    l6759 098E                                      l6791 0E56  
                                    l6783 0E44                                      l6775 0E3B  
                                    l6767 0E33                                      l6871 0A39  
                                    l6863 0B82                                      l6855 0B76  
                                    l6847 0ACD                                      l6839 0ABF  
                                    l6927 0BC1                                      l6919 0BAD  
                                    l6679 04F1                                      l6599 0F0D  
                                    l6943 0545                                      l6951 0551  
                                    l7495 01B5                                      l7487 01A1  
                                    l7479 0164                                      l7399 00A7  
                                    l6881 08C6                                      l6793 0E58  
                                    l6785 0E50                                      l6777 0E3E  
                                    l6769 0E35                                      l6873 0A3B  
                                    l6865 0B8A                                      l6857 0B78  
                                    l6849 0B6F                                      l6929 0BC9  
                                    l6689 0510                                      l6961 057C  
                                    l6953 0569                                      l6945 0549  
                                    l6937 052E                                      l7497 01BD  
                                    l7489 01A4                                      l6883 08C7  
                                    l6795 0E5A                                      l6787 0E52  
                                    l6779 0E40                                      l6875 0A3C  
                                    l6867 0A33                                      l6859 0B7F  
                                    l6955 0571                                      l6963 0581  
                                    l6947 054D                                      l6939 0536  
                                    l7499 01C2                                      l6885 08A2  
                                    l6797 0E5C                                      l6789 0E54  
                                    l6877 0A44                                      l6869 0A38  
                                    l6965 0585                                      l6957 0576  
                                    l6893 09CE                                      l6981 0B65  
                                    l6973 0B53                                      l6879 08C3  
                                    l6799 0E5E                                      l6895 0660  
                                    l6959 0579                                      l7791 0556  
                                    l6991 06C3                                      l6983 06BB  
                                    l6889 08DA                                      l6897 0669  
                                    l7793 04D1                                      l6977 0B58  
                                    l6993 06CD                                      l6985 06BE  
                                    l6899 0674                                      l7795 04FF  
                                    l6979 0B60                                      l6995 06D8  
                                    l7797 0516                                      l7789 0465  
                                    l6997 06E4                                      _LATA 0016  
                                    _LATB 0017                           __end_of_INT_ISR 0883  
                                    _LATC 0018                                      _LATD 0019  
                                    _LATE 001A                                      u4010 0FF1  
                                    u4011 0FF0                                      u4020 0FF6  
                                    u4100 0D48                                      u4021 0FF5  
                                    u4005 0FE7                                      u4101 0D47  
                                    u4030 0724                                      u4110 0D16  
                                    u4031 0723                                      u4111 0D15  
                                    u4040 0741                                      u4120 0F17  
                                    u4200 05DB                                      u4041 0740  
                                    u4121 0F16                                      u4201 05DA  
                 __size_of_selectSubfield 0077                                      u4050 0762  
                                    u4210 05E3                                      _T2PR 028D  
                                    u4051 0761                                      u4211 05E2  
                                    u4060 0ECD                                      u4220 05F0  
                                    u4300 06C2                                      u5100 01B1  
                                    u4045 073D                                      u4061 0ECC  
                                    u4221 05EF                                      u4301 06C1  
                                    u5101 01B0                                      u4070 0EEA  
                                    u4150 0C29                                      u4230 0C0B  
                                    u4310 06CD                                      u5110 01C2  
                                    u5030 00DF                                      u4055 075E  
                                    u4071 0EE9                                      u4135 0F1B  
                                    u4151 0C28                                      u4231 0C0A  
                                    u4311 06CC                                      u5111 01C1  
                                    u5031 00DE                                      u4080 0F09  
                                    u4160 05AB                                      u4240 052E  
                                    u4400 0BA4                                      u4320 06D8  
                                    u5120 01D3                                      u5040 00EB  
                                    u4081 0F08                                      u4145 0F2A  
                                    u4161 05AA                                      u4241 052D  
                                    u4401 0BA3                                      u4321 06D7  
                                    u5121 01D2                                      u5041 00EA  
                                    u4090 0CE5                                      u4170 05B1  
                                    u4250 0536                                      u4410 0BAB  
                                    u4330 06DF                                      u5130 01E2  
                                    u5050 011B                                      u4075 0EE6  
                                    u4091 0CE4                                      u4171 05B0  
                                    u4251 0535                                      u4411 0BAA  
                                    u4331 06DE                                      u5131 01E1  
                                    u5051 011A                                      u4180 05B9  
                                    u4260 0569                                      u4420 0A7B  
                                    u4340 06E4                                      u4500 0249  
                                    u5140 01F9                                      u5060 0121  
                                    u4085 0F05                                      u4181 05B8  
                                    u4261 0568                                      u4421 0A7A  
                                    u4341 06E3                                      u4501 0248  
                                    u5141 01F8                                      u5061 0120  
                                    u4190 05CB                                      u4270 0571  
                                    u4430 0A88                                      u4350 06F1  
                                    u4510 0258                                      u5150 0201  
                                    u5070 0144                                      u4191 05CA  
                                    u5207 0582                                      u4271 0570  
                                    u4431 0A87                                      u4351 06F0  
                                    u4511 0257                                      u5151 0200  
                                    u5071 0143                                      u3800 0BD4  
                                    u4280 059B                                      u4360 06FC  
                                    u4600 02D8                                      u4520 026B  
                                    u5080 0162                                      u5217 0BBB  
                                    u3801 0BD3                                      u4281 059A  
                                    u4361 06FB                                      u4601 02D7  
                                    u4521 026A                                      u5081 0161  
                                    u4450 0955                                      u4290 0B6E  
                                    u4370 0701                                      u4610 02DD  
                                    u4530 027E                                      u5090 01AB  
                                    u5307 0B09                                      u5227 0BC5  
                                    u4195 05C7                                      u4451 0954  
                                    u4291 0B6D                                      u4371 0700  
                                    u4611 02DC                                      u4531 027D  
                                    u5091 01AA                                      u3900 063F  
                                    u4460 0391                                      u4380 0710  
                                    u4700 0365                                      u4620 02EC  
                                    u4540 0284                                      _PMD0 0796  
                                    u5237 0664                                      u3901 063E  
                                    u4285 0597                                      u4461 0390  
                                    u4381 070F                                      u4701 0364  
                                    u4621 02EB                                      u4541 0283  
                                    u5085 015E                                      _PMD1 0797  
                                    u3830 0BE8                                      u4470 03A3  
                                    u4390 0B99                                      u4710 036C  
                                    u4630 02F2                                      u4550 0293  
                                    _PMD2 0798                                      u5247 066F  
                                    u3831 0BE7                                      u3815 0BD9  
                                    u4471 03A2                                      u4391 0B98  
                                    u4711 036B                                      u4631 02F1  
                                    u4551 0292                                      _PMD3 0799  
                                    u4480 0B14                                      u3920 064F  
                                    u3840 0604                                      u4800 042F  
                                    u4720 037B                                      u4640 0301  
                                    u4560 02A6                                      _PMD4 079A  
                                    u4481 0B13                                      u5257 0680  
                                    u3921 064E                                      u3905 063B  
                                    u3841 0603                                      u3825 0BDE  
                                    u4801 042E                                      u4721 037A  
                                    u4641 0300                                      u4561 02A5  
                                    _PMD5 079B                                      u3930 0654  
                                    u3850 060F                                      u4810 0435  
                                    u4730 0381                                      u4650 0314  
                                    u4570 02BC                                      u4490 0243  
                                    u5267 0690                                      u3931 0653  
                                    u3915 0645                                      u3851 060E  
                                    u4811 0434                                      u4731 0380  
                                    u4651 0313                                      u4571 02BB  
                                    u4491 0242                                      u5187 01ED  
                                    u3860 0620                                      u3940 0FB2  
                                    u4820 043D                                      u4740 0DAD  
                                    u4660 0327                                      u4580 02C3  
                                    u5277 069B                                      u3861 061F  
                                    u3941 0FB1                                      u5197 0495  
                                    u4821 043C                                      u4741 0DAC  
                                    u4661 0326                                      u4581 02C2  
                                    u3950 0FBD                                      u4830 0445  
                                    u4750 0DB2                                      u4670 032D  
                                    u4590 02D2                                      u5287 06A6  
                                    u3951 0FBC                                      u4831 0444  
                                    u4751 0DB1                                      u4671 032C  
                                    u4591 02D1                                      u3880 0630  
                                    u3960 0FC8                                      u4840 047C  
                                    u4760 0DC5                                      u4680 033C  
                                    i1l73 0975                                      u5297 06B1  
                                    u3881 062F                                      u3961 0FC7  
                                    u4841 047B                                      u4761 0DC4  
                                    u4681 033B                                      u4850 0484  
                                    u4770 0DEE                                      u4690 034F  
                                    u3795 0AFB                                      u3875 0624  
                                    u4851 0483                                      u4771 0DED  
                                    u4691 034E                                      u3980 0FD8  
                                    u4860 049E                                      u4780 0DFD  
                                    u3981 0FD7                                      u4861 049D  
                                    u4781 0DFC                                      u3990 0FE2  
                                    u4790 0E2A                                      u3895 0631  
                                    u3991 0FE1                                      u3975 0FCC  
                                    u4791 0E29                                      u3995 0FDE  
                    ?_do_I2C_SEND_RESTART 0070                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                   ??_wr2RegCompleteHandler 007A  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
       __size_of_do_I2C_SEND_RESTART_READ 0005                                      _alaf 0051  
                                    _clkh 005C                 ?_do_I2C_SEND_RESTART_READ 0070  
                                    _clkm 005B                                      _main 007E  
                                    _tala 0065                 __size_of_do_I2C_SEND_STOP 0005  
                  __size_of_do_I2C_DO_ACK 0005                                      _nreg 0067  
                         _TMR0_StartTimer 0846                                      _temp 0052  
                                    _pmon 0066                        _increment_subfield 059C  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
     __end_of_INT_DefaultInterruptHandler 0826               _INT_DefaultInterruptHandler 0825  
                   ?_do_I2C_SEND_ADR_READ 0070           ??_i2c1_driver_clearBusCollision 0070  
                                    start 005B                          __end_of_ADC_read 0B1D  
         __end_of_INT_SetInterruptHandler 08EC                             _i2c_setBuffer 09BE  
              ??_TMR1_SetInterruptHandler 0025                             __CFG_CSWEN$ON 0000  
                       ___bmul@multiplier 0026                             __CFG_MCLRE$ON 0000  
                increment_subfield@_value 0034                           __end_of_i2c_ISR 0CB0  
                         __end_of_ReadI2C 0BAD                       ?_increment_subfield 0070  
        __size_of_rdBlkRegCompleteHandler 0018                  ??_do_I2C_DO_NACK_RESTART 0070  
               config_routine@select_mode 003A                 __size_of_DATAEE_WriteByte 0024  
                 __end_of_TMR0_Initialize 0A48                              _do_I2C_RESET 08B1  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 08F5                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                __end_of_i2c1_driver_open 095C                                     ?_main 0070  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                         __end_of___awdiv 065E                  __end_of_i2c1_driver_stop 0837  
                                   _ADPRE 009C                             __CFG_WDTE$OFF 0000  
                         __end_of___awmod 1000                                     _ADRPT 010D  
                                   _T1CLK 0211                           ___awdiv@divisor 0023  
                                   _T1CON 020E                                     _T2CON 028E  
                                   _T2HLT 028F                __end_of_i2c1_driver_TXData 085A  
                          __CFG_DEBUG$OFF 0000                                     i1l103 09CD  
                                   i1l200 0DA4                                     i1l210 0CAF  
                                   i1l131 0863                                     i1l140 0872  
                                   _T2TMR 028C                                     i1l125 08B8  
                                   i1l213 0854                                     i1l134 0868  
                                   i1l303 0AB8                                     i1l143 08D9  
                                   i1l224 0C56                                     i1l216 082D  
                                   i1l128 085E                                     i1l152 0877  
                                   i1l137 086D                                     i1l146 08C0  
                                   _T2RST 0291                                     i1l219 0003  
                                   i1l243 0A10                                     i1l155 087C  
                                   i1l164 0C82                                     i1l172 0FAB  
                                   i1l149 08A1                                     i1l334 0882  
                                   i1l158 07FF                                     i1l344 0825  
                                   i1l264 0A21                                     i1l169 0F8F  
                                   i1l185 0E91                                     i1l338 0968  
                                   i1l602 0829                                     i1l186 0EBD  
                                   i1l611 0836                                     i1l291 09FF  
                                   i1l620 083C                                     i1l380 001F  
                                   i1l614 08B0                                     i1l279 0A32  
                                   i1l383 0032                                     i1l608 0833  
                                   i1l392 0059                                     i1l617 0839  
                                   i1l385 0041                                     i1l386 0059  
                                   i1l378 0013                                     i1l635 084C  
                                   i1l387 004D                                     i1l629 0859  
                                   i1l902 0827                                     i1l638 0850  
                                   i1l576 0842                                     i1l672 0845  
                                   i1l579 083F                                     i1l916 0A5D  
                                   i1l883 09EE                                     i1l896 0AA0  
                         ___awdiv@counter 0028                                     _OSCEN 0891  
                         __end_of_all_LED 06B9                                     _TMR0H 001D  
                                   _TMR1H 020D                                     _TMR0L 001C  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
       __size_of_TMR0_SetInterruptHandler 0009                           _PWM6_Initialize 0976  
                        recMinutes@_value 002C                 ?_TMR0_SetInterruptHandler 0023  
                 ??_ADCC_IsConversionDone 0023                          __end_of_TMR0_ISR 09A0  
                        __end_of_TMR1_ISR 0AA1                          __end_of_TMR2_ISR 09AF  
                         __end_of_sw1_EXT 0CDE                           __end_of_cksum_w 09DE  
                    ??_increment_subfield 0032                           _DATAEE_ReadByte 09AF  
                                   _alarm 0053                                     _clkms 007D  
              __end_of_i2c1_driver_isNACK 08B1                                     _cksum 0BED  
                         __end_of_recHour 0D40                     ?_ADCC_StartConversion 0070  
                         representLed@aux 0031                           representLed@val 0030  
              ?_do_I2C_SEND_RESTART_WRITE 0070                                     _value 00C5  
                       ?_checkDebounceSW1 0070                         ?_checkDebounceSW2 0070  
                   ??_do_I2C_SEND_RESTART 0070                                     _tsttc 0234  
                 __end_of_TMR1_Initialize 0B8E                                     pclath 000A  
                 __size_of_mssp1_clearIRQ 0003                        ??_checkDebounceSW1 0023  
                      ??_checkDebounceSW2 0023                    ?_do_I2C_SEND_ADR_WRITE 0070  
                                   status 0003                                     wtemp0 007E  
                         _TMR1_WriteTimer 09DE                            ?_i2c_setBuffer 0070  
                            ?_setCallBack 0070                         ??_getSubfieldInfo 0023  
                           _fsmStateTable 1000                           __initialization 005D  
                              _i2c_status 00A0                              __end_of_main 0234  
                 __end_of_TMR2_Initialize 0AD1               ?_INTERRUPT_InterruptManager 0070  
                            ?_recoverData 0070                             setCallBack@cb 0070  
                           _do_I2C_DO_ACK 0873                  _TMR2_SetInterruptHandler 0907  
                                  ??_main 003C                         ?_i2c_restartWrite 0079  
           __size_of_i2c1_driver_sendNACK 0004                             ?_recLumThresh 002C  
                               ??_LED_bin 0025                        ??_i2c_restartWrite 007A  
               __size_of_handler_clock_ms 000C             __size_of_i2c1_driver_resetBus 0001  
                               ??_INT_ISR 0078                   ?_do_I2C_DO_ADDRESS_NACK 0070  
                          _convertedValue 004B                    __size_of_recTempThresh 0031  
                                  _ADACCH 0091                                    _ADACCL 0090  
                 __end_of_TMR0_StartTimer 0849               __size_ofi1_checkDebounceSW1 005A  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  ?_cksum 0070                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                          ___awdiv@dividend 0025  
                                  _ADUTHL 0110                          __end_of_WriteI2C 0713  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                        __CFG_RSTOSC$HFINT1 0000  
                                  _T0CON0 001E                                    _T0CON1 001F  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  ?_tsttc 0070                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                   TMR1_WriteTimer@timerVal 0070  
                                  _RC4PPS 0F24                                    i1l1044 0828  
                                  i1l1038 09AE                                    i1l1073 0830  
                                  i1l1092 0826                                    i1l1086 099F  
                                  _ODCONA 0F3A                                    i1l1282 0CCC  
                                  _ODCONB 0F45                                    i1l1291 0AE4  
                                  _ODCONC 0F50                                    i1l1292 0AE9  
                                  _ODCOND 0F5B                                    i1l1285 0CD9  
                                  _ODCONE 0F66                                    i1l1454 07FA  
                                  i1l1288 0CDD                                    i1l1481 07C6  
                                  i1l1458 094F                                    i1l5101 0C62  
                                  i1l5023 0840                                    i1l6001 002B  
                                  i1l5211 0963                                    i1l5051 08B7  
                                  i1l5107 0C66                                    i1l5123 0F64  
                                  i1l5115 0F58                                    i1l6011 0051  
                                  i1l6003 0036                                    i1l5045 08B1  
                                  i1l5141 0FAA                                    i1l5133 0F6C  
                                  i1l6013 0055                                    i1l6005 003A  
                                  i1l4511 0C38                                    i1l5047 08B4  
                                  i1l5055 085A                                    i1l5063 08D1  
                                  i1l5071 08B9                                    i1l5135 0F91  
                                  i1l5127 0F68                                    i1l5119 0F60  
                                  i1l5151 0E7E                                    i1l5207 0843  
                                  i1l6007 0045                                    i1l5209 095C  
                                  i1l4513 0C49                                    i1l5049 08B6  
                                  i1l5057 085C                                    i1l5065 08D3  
                                  i1l5073 08BB                                    i1l5081 089D  
                                  i1l5137 0F9D                                    i1l5153 0E82  
                                  i1l6009 0049                                    i1l5059 085D  
                                  i1l5067 08D8                                    i1l5075 08BF  
                                  i1l5083 08A0                                    i1l5139 0FA8  
                                  i1l5163 0E93                                    i1l5155 0E8C  
                                  i1l4621 0831                                    i1l4509 0C32  
                                  i1l4613 0969                                    i1l5181 0D72  
                                  i1l5093 0C57                                    i1l5173 0E9B  
                                  i1l5157 0E8F                                    i1l5149 0E74  
                                  i1l5351 09DE                                    i1l4623 0834  
                                  i1l4615 09BF                                    i1l5183 0D75  
                                  i1l5079 089B                                    i1l5087 0873  
                                  i1l5095 0C59                                    i1l5167 0E97  
                                  i1l5353 09E3                                    i1l5361 09EA  
                                  i1l4617 09C4                                    i1l4625 084D  
                                  i1l5193 0D7E                                    i1l5089 0876  
                                  i1l4801 07FE                                    i1l5097 0C5E  
                                  i1l4723 0A48                                    i1l4731 079B  
                                  i1l5371 0AE7                                    i1l5363 09EC  
                                  i1l5355 09E4                                    i1l4619 09CC  
                                  i1l5187 0D79                                    i1l5611 0C83  
                                  i1l4733 07A0                                    i1l4725 076D  
                                  i1l4901 0CC6                                    i1l5365 0AD1  
                                  i1l5357 09E6                                    i1l5461 07E0  
                                  i1l5453 07C7                                    i1l4805 08A9  
                                  i1l4813 083D                                    i1l5189 0D7C  
                                  i1l5613 0C86                                    i1l5621 0851  
                                  i1l4727 076F                                    i1l4903 0CD0  
                                  i1l5623 087D                                    i1l5367 0AD8  
                                  i1l5631 099A                                    i1l5359 09E8  
                                  i1l5471 07F9                                    i1l5463 07E6  
                                  i1l5455 07CD                                    i1l4751 082A  
                                  i1l4815 082C                                    i1l4823 0A00  
                                  i1l4831 0A11                                    i1l5199 0D82  
                                  i1l5615 0C8B                                    i1l4745 07BE  
                                  i1l4729 077E                                    i1l4737 07A4  
                                  i1l4905 0CD5                                    i1l5625 087F  
                                  i1l5369 0ADF                                    i1l5465 07EE  
                                  i1l5457 07D8                                    i1l5633 0A8A  
                                  i1l5473 0944                                    i1l5641 09A0  
                                  i1l4825 0A08                                    i1l4833 0A19  
                                  i1l4841 0A2A                                    i1l4809 083A  
                                  i1l5617 0C92                                    i1l4747 07C3  
                                  i1l4739 07BC                                    i1l5627 0991  
                                  i1l5467 07EF                                    i1l5459 07DC  
                                  i1l5635 0A8C                                    i1l5475 0948  
                                  i1l5643 09A2                                    i1l4851 09FE  
                                  i1l4819 0002                                    i1l4827 0A0F  
                                  i1l4835 0A20                                    i1l4843 0A31  
                                  i1l4763 085F                                    i1l4771 0867  
                                  i1l5619 0C98                                    i1l5629 0993  
                                  i1l5469 07F5                                    i1l5637 0A94  
                                  i1l5477 094E                                    i1l5645 09A9  
                                  i1l4765 0862                                    i1l4781 086E  
                                  i1l5639 0A9B                                    i1l4791 0849  
                                  i1l4847 09EF                                    i1l4839 0A22  
                                  i1l4855 0AA1                                    i1l4775 0869  
                                  i1l4783 0871                                    i1l4849 09F7  
                                  i1l4857 0AB7                                    i1l4769 0864  
                                  i1l4777 086C                                    i1l4793 0878  
                                  i1l4891 0CB0                                    i1l4787 0856  
                                  i1l4795 087B                                    i1l4893 0CB8  
                                  i1l4789 0837                                    i1l4895 0CBE  
                                  i1l4799 07FB                                    i1l4897 0CBF  
                                  i1l4889 082E                                    i1l7801 0F81  
                                  i1l4899 0CC0                                    i1l7803 0C7A  
                                  u231_25 0A57                                    i1l7805 0D96  
                                  i1l5991 000F                                    u232_20 077E  
                                  u240_20 0CD5                                    u232_21 077D  
                                  u240_21 0CD4                                    i1l5993 0017  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  i1l5995 001B                                    i1l5987 0006  
                                  _INLVLC 0F52                                    _INLVLD 0F5D  
                                  i1l5997 0023                                    i1l5989 000B  
                                  _INLVLE 0F68                                    i1l5999 0027  
                                  u233_20 079B                                    u233_21 079A  
                                  u233_25 0797                                    i1l7799 0EAF  
                                  u234_20 07BC                                    u218_20 09C4  
                                  u234_21 07BB                                    u218_21 09C3  
                                  u234_25 07B8                                    u252_20 0F5F  
                                  u252_21 0F5E                                    u237_20 0CB8  
                                  u253_20 0FA8                                    u237_21 0CB7  
                                  u253_21 0FA7                                    u238_20 0CBE  
                                  u254_20 0E8C                                    u238_21 0CBD  
                                  u254_21 0E8B                                    u239_20 0CD0  
                                  u255_20 0963                                    u263_20 07CD  
                                  u351_20 000B                                    u239_21 0CCF  
                                  u255_21 0962                                    u263_21 07CC  
                                  u351_21 000A                                    u256_20 09E3  
                                  u264_20 07D6                                    u360_20 0045  
                                  u352_20 000F                                    u256_21 09E2  
                                  u264_21 07D3                                    u360_21 0044  
                                  u352_21 000E                                    _INTPPS 0E90  
                                  u257_20 0AD8                                    u193_20 0C38  
                                  u361_20 0049                                    u353_20 0017  
                                  u257_21 0AD7                                    u193_21 0C37  
                                  u361_21 0048                                    u353_21 0016  
                                  u265_24 07D8                                    u266_20 07E6  
                                  u290_20 0A9B                                    u362_20 0051  
                                  u354_20 001B                                    u266_21 07E5  
                                  u290_21 0A9A                                    u362_21 0050  
                                  u354_21 001A                                    u267_20 07F5  
                                  u291_20 09A9                                    u363_20 0055  
                                  u355_20 0023                                    u267_21 07F4  
                                  u291_21 09A8                                    u363_21 0054  
                                  u355_21 0022                                    u268_20 094E  
                                  u356_20 0027                                    u268_21 094D  
                                  u356_21 0026                                    u357_20 002B  
                                  u357_21 002A                                    u358_20 0036  
                                  u358_21 0035                                    u287_20 0C8B  
                                  u359_20 003A                                    u287_21 0C8A  
                                  u359_21 0039                                    u288_20 0C92  
                                  u288_21 0C91                                    u289_20 099A  
                                  u289_21 0999                                    _OSCFRQ 0893  
                                  _ISR_3s 0AD1                    ??_do_I2C_SEND_ADR_READ 0070  
                rdBlkRegCompleteHandler@p 0079                                 ??_i2c_ISR 0020  
                               ??_ReadI2C 0023                ??_ADCC_GetConversionResult 0025  
                          __CFG_PWRTE$OFF 0000              __end_ofi1_PWM6_LoadDutyValue 0A5E  
                   _i2c1_driver_getRXData 083A                          __end_of_mod1_LED 092E  
                        __end_of_mod2_LED 0923                          __end_of_mod3_LED 0939  
                        __end_of_mod4_LED 0944      __end_of_TMR1_DefaultInterruptHandler 0828  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0827  
                            _CCPTMRS1bits 021F                                    ___bmul 0A74  
             __end_of_do_I2C_DO_NACK_STOP 087D       __end_of_i2c_setDataCompleteCallback 0976  
             _i2c_setDataCompleteCallback 0969                                    ___wmul 0BCD  
                               ??___awdiv 0027     __end_of_i2c1_driver_clearBusCollision 0846  
  __size_of_i2c1_driver_clearBusCollision 0003             _i2c1_driver_clearBusCollision 0843  
                          __CFG_STVREN$ON 0000                                 ??___awmod 0027  
                        __end_of_recAlarm 0889           __size_of_do_I2C_DO_NACK_RESTART 0005  
                                  _last1m 0056                                    _last5s 0057  
                               ??_all_LED 002D                          ?_TMR0_Initialize 0070  
                 __end_of_PWM6_Initialize 0983                          ___awdiv@quotient 002A  
                          ?_do_I2C_DO_ACK 0070                           ___awmod@divisor 0023  
                         ___awmod@counter 0028                            ??_recLumThresh 002D  
                                  cksum@i 0027                             ?_INT_CallBack 0070  
                 __end_of_DATAEE_ReadByte 09BE                                 ??_sw1_EXT 0077  
                               ??_cksum_w 002D                           _ADCC_Initialize 0A5E  
                               ??_recHour 002D               __end_of_i2c1_driver_sendACK 084D  
                          _PMD_Initialize 08C9            __end_of_do_I2C_DO_ADDRESS_NACK 0C83  
             __end_of_i2c1_driver_restart 0834                              ?_returnReset 0079  
                               ?_ADC_read 0025                    ??_ADCC_StartConversion 0023  
             __end_of_i2c1_driver_startRX 083A          __size_of_INT_SetInterruptHandler 0009  
TMR0_SetInterruptHandler@InterruptHandler 0023  TMR2_SetInterruptHandler@InterruptHandler 0023  
TMR1_SetInterruptHandler@InterruptHandler 0023   INT_SetInterruptHandler@InterruptHandler 0023  
                 __end_of_TMR1_WriteTimer 09EF                            _selectSubfield 0525  
                        ??_config_routine 0039                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 0B37                   __end_of__initialization 007A  
                         ??_i2c_setBuffer 0072                          _do_I2C_SEND_STOP 086E  
                      __size_of_do_I2C_RX 004A                        __size_of_do_I2C_TX 0054  
                      ?_SYSTEM_Initialize 0070                  __size_of_mode_select_LED 0020  
                __size_of_do_I2C_TX_EMPTY 0033                       ___bmul@multiplicand 0023  
                 _rdBlkRegCompleteHandler 0AA1                             _recTempThresh 0CDE  
                          __pcstackCOMMON 0070                              __pidataBANK0 0910  
                     ??_SYSTEM_Initialize 0025                                 ?_TMR0_ISR 0070  
                               ?_TMR1_ISR 0070                                 ?_TMR2_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                             __end_of_cksum 0C0D  
                        _DATAEE_WriteByte 0C0D                             __end_of_tsttc 0384  
                        ?_TMR2_Initialize 0070                              LED_bin@value 0023  
                          ??_INT_CallBack 0078                    __end_of_PMD_Initialize 08D1  
             __size_of_EXT_INT_Initialize 000E                                ??_ADC_read 0027  
                  __end_of_selectSubfield 059C               ADCC_StartConversion@channel 0023  
                          setCallBack@idx 0074                                   ??_cksum 0025  
                        ?_TMR0_StartTimer 0070                    _do_I2C_DO_NACK_RESTART 07FB  
               __end_of_SYSTEM_Initialize 0B53                                   ??_tsttc 0025  
                          _mssp1_clearIRQ 0840                                __pbssBANK0 0041  
                              __pbssBANK1 00A0            __size_of_rd2RegCompleteHandler 0011  
                                 ?_ISR_3s 0070             __end_of_rd2RegCompleteHandler 0A33  
                      read_ring@nreg_init 0028            __size_of_wr2RegCompleteHandler 0011  
           __end_of_wr2RegCompleteHandler 0A00                     _rd1RegCompleteHandler 0A11  
                  ?_i2c1_driver_getRXData 0070                        __size_of_read_ring 003F  
                          ?_recTempThresh 002C                     _wr1RegCompleteHandler 0A00  
            __size_of_i2c_busCollisionISR 0004                                __pmaintext 007E  
                           ??_do_I2C_IDLE 0070                      __size_of_setCallBack 0026  
                           ??_do_I2C_RCEN 0070                                   ?___bmul 0023  
        __end_of_TMR0_SetInterruptHandler 08FE                   __size_of_TMR0_StopTimer 0003  
                                 ?___wmul 0023                                ??_TMR0_ISR 0075  
                              ??_TMR1_ISR 0072                           __CFG_PPS1WAY$ON 0000  
                              ??_TMR2_ISR 0071                   __end_of_ADCC_Initialize 0A74  
              __end_of_PWM6_LoadDutyValue 0B03                           ??_do_I2C_DO_ACK 0070  
                              __pintentry 0004                      _limitTempThreshUnits 0000  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                          ?_PWM6_Initialize 0070  
                     i2c_setBuffer@buffer 0073                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                           ?_PMD_Initialize 0070  
          ?_i2c1_driver_clearBusCollision 0070                          ?_DATAEE_ReadByte 0023  
                       ?_i2c1_driver_open 0070                         __end_of_do_I2C_RX 0EBE  
                       __end_of_do_I2C_TX 0FAC                         ?_i2c1_driver_stop 0070  
           i1PWM6_LoadDutyValue@dutyValue 0070                      __size_of_recoverData 0098  
                                 _LED_bin 0B1D                          _handler_clock_ms 0944  
                      ??_i2c1_driver_open 0023                                   _INT_ISR 087D  
                      ??_i2c1_driver_stop 0070                                   _OSCCON1 088D  
                                 _OSCCON3 088F                             ?_mssp1_setIRQ 0070  
                    i1_PWM6_LoadDutyValue 0A48                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                  selectSubfield@subfield 0037                                   _NVMCON2 081F  
                         ?_selectSubfield 0070                                   _PWM6DCH 038D  
                                 _PWM6DCL 038C                                   _PWM6CON 038E  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                    __end_of_mssp1_clearIRQ 0843  
                                 _SSP1MSK 018E            __size_of_ADCC_IsConversionDone 0007  
                               ?_mod1_LED 0070                                 ?_mod2_LED 0070  
                               ?_mod3_LED 0070                                 ?_mod4_LED 0070  
           __end_of_ADCC_IsConversionDone 08A9                   ??_do_I2C_SEND_ADR_WRITE 0071  
                      __size_of_push_ring 0047                           _getSubfieldInfo 04A7  
                        ?_TMR1_WriteTimer 0070               ??_do_I2C_SEND_RESTART_WRITE 0070  
                               ?_recAlarm 002C                        _i2c1_driver_TXData 0855  
                    DATAEE_WriteByte@bAdd 0029                        _i2c1_driver_i2cISR 004D  
                         __size_of_ISR_3s 0019                                   _i2c_ISR 0C83  
                         _limitHoursUnits 0000                 ??_rdBlkRegCompleteHandler 007A  
                                 _ReadI2C 0B8E                      __end_of_recLumThresh 088F  
                      _i2c1_driver_isNACK 08A9                       ?_i2c1_driver_TXData 0070  
              ??_TMR2_SetInterruptHandler 0025                     __end_of_num_subfields 1024  
                    __CFG_SCANE$available 0000                 __size_of_checkDebounceSW1 005A  
               __size_of_checkDebounceSW2 004D                           __size_of___bmul 0016  
                              _recMinutes 0D40                                   ___awdiv 05FE  
                                 ___awmod 0FAC                             ?_representLed 0070  
                         __size_of___wmul 0020                         ??_mode_select_LED 002D  
                       ??_do_I2C_TX_EMPTY 007A                                   _all_LED 065E  
                     ?_i2c1_driver_isNACK 0070                                ??_WriteI2C 0023  
                                 __ptext1 0234                                   __ptext2 06B9  
                                 __ptext3 0B8E                                   __ptext4 0384  
                                 __ptext5 0B53                                   __ptext6 09CE  
                                 __ptext7 0BED                                   __ptext8 0DA5  
                                 __ptext9 0A74                       __end_of_do_I2C_IDLE 085F  
                     __end_of_do_I2C_RCEN 08A2                                   _sw1_EXT 0CB0  
          ??_TMR1_DefaultInterruptHandler 0070                                   _cksum_w 09CE  
                               _T1CONbits 020E                                   _recHour 0D0F  
                   _OSCILLATOR_Initialize 08EC                                   _last_ms 0059  
                               _T2CONbits 028E               __end_of_do_I2C_SEND_RESTART 086E  
                          ??_mssp1_setIRQ 0070                          ___awmod@dividend 0025  
                              _duty_cycle 0049                               reset_recv@i 002D  
       __size_of_TMR1_SetInterruptHandler 0009                     ?i1_PWM6_LoadDutyValue 0070  
                    ??_i2c1_driver_TXData 0070                         __end_of_read_ring 0DE4  
                ??_PIN_MANAGER_Initialize 0023                 ?_TMR1_SetInterruptHandler 0023  
                               _T2HLTbits 028F                                   _nreg_pt 005D  
                 _INT_SetInterruptHandler 08E3                                   _lum_bin 0047  
             __size_of_increment_subfield 0062                           ?_mssp1_clearIRQ 0070  
                              ??_mod1_LED 002D                                ??_mod2_LED 002D  
                              ??_mod3_LED 002D                                ??_mod4_LED 002D  
                                 main@t5s 00D8                  _do_I2C_SEND_RESTART_READ 085F  
              __size_of_SYSTEM_Initialize 001C                                   main@aux 00D4  
                                 clrloop0 0890                                _hours_tens 00C3  
                    __size_of_returnReset 0002                      end_of_initialization 007A  
                               _T2RSTbits 0291                      ??_i2c1_driver_isNACK 0070  
                              ??_recAlarm 002D                 __size_of_i2c_restartWrite 0002  
                                 init_ram 0895              __end_of_i2c1_driver_sendNACK 0851  
                  ?_rd1RegCompleteHandler 0079                                   initloop 0896  
                    __end_of_INT_CallBack 0969                           ??_recTempThresh 002D  
                  ?_wr1RegCompleteHandler 0079              __end_of_i2c1_driver_resetBus 082A  
                              _reset_recv 0B53                                _lum_thresh 0063  
                           push_ring@nreg 002D                            ??_representLed 002D  
               _do_I2C_SEND_RESTART_WRITE 0864                          ?_ADCC_Initialize 0070  
                       __end_of_push_ring 0E2B                     __CFG_WDTCPS$WDTCPS_14 0000  
                              _returnStop 082C                  _TMR0_SetInterruptHandler 08F5  
                               _PORTBbits 000D                                 _PORTCbits 000E  
         __end_of_rdBlkRegCompleteHandler 0AB9                  __end_of_do_I2C_SEND_STOP 0873  
                    __CFG_WDTCCS$HFINTOSC 0000                       recTempThresh@_value 002C  
                 __end_of_getSubfieldInfo 0525                __end_ofi1_checkDebounceSW1 07C7  
                               _TRISCbits 0013      __size_of_i2c_setDataCompleteCallback 000D  
                             returnStop@p 0079                          __CFG_FEXTOSC$OFF 0000  
                       __size_of_ADC_read 001A                  __end_of_DATAEE_WriteByte 0C31  
            i2c_setDataCompleteCallback@p 0077                            __end_of_ISR_3s 0AEA  
           __size_of_do_I2C_SEND_ADR_READ 0009                            _TMR0_StopTimer 082E  
                             _do_I2C_IDLE 085A                               ?_recMinutes 002C  
                             _do_I2C_RCEN 089B      __end_of_TMR2_DefaultInterruptHandler 0829  
   __size_of_TMR2_DefaultInterruptHandler 0001              _TMR2_DefaultInterruptHandler 0828  
                          __end_of___bmul 0A8A                            __end_of___wmul 0BED  
                       __size_of_TMR0_ISR 000F                         __size_of_TMR1_ISR 0017  
                       __size_of_TMR2_ISR 000F                    ?_OSCILLATOR_Initialize 0070  
       __size_of_ADCC_GetConversionResult 0009                 ??_INT_SetInterruptHandler 0025  
            __size_of_do_I2C_DO_NACK_STOP 0005                 ?_ADCC_GetConversionResult 0023  
                  ??i1_PWM6_LoadDutyValue 0072                   ?_do_I2C_DO_NACK_RESTART 0070  
                     start_initialization 005D                       _i2c_busCollisionISR 0851  
                __size_of_TMR0_Initialize 0015           __size_of_PIN_MANAGER_Initialize 0049  
                        WriteI2C@data_out 0024                     __size_of_recLumThresh 0006  
           __size_of_ADCC_StartConversion 0008                              setCallBack@p 0072  
            __size_of_i2c1_driver_sendACK 0004                   i2c_setBuffer@bufferSize 0070  
                 ??_i2c1_driver_getRXData 0070                    rd1RegCompleteHandler@p 0079  
                                ??_ISR_3s 0074              __size_of_i2c1_driver_restart 0003  
            __size_of_i2c1_driver_startRX 0003                       DATAEE_ReadByte@bAdd 0023  
                   __end_of_i2c_setBuffer 09CE              ?_INT_DefaultInterruptHandler 0070  
                  __end_of_TMR0_StopTimer 0831                  __end_of_handler_clock_ms 0950  
                    ?_i2c_busCollisionISR 0070                          __CFG_LPBOREN$OFF 0000  
                             ?_reset_recv 0070                      __end_of_mssp1_setIRQ 0840  
                __size_of_TMR1_Initialize 001F                        recLumThresh@_value 002C  
                                ??___bmul 0024                          ??_PMD_Initialize 0023  
                        _checkDebounceSW1 0713                          _checkDebounceSW2 0EBE  
                                ??___wmul 0027                    wr1RegCompleteHandler@p 0079  
                           ?_do_I2C_RESET 0070                               __pdataBANK0 005F  
              __end_of_EXT_INT_Initialize 0991             ?_TMR2_DefaultInterruptHandler 0070  
                             ?_returnStop 0079                          ??_selectSubfield 0035  
          __end_of_do_I2C_DO_NACK_RESTART 0800                                read_ring@i 002D  
                    _i2c1_driver_sendNACK 084D                         read_ring@absindex 002F  
                            _recLumThresh 0889                         __size_of_WriteI2C 005A  
                        ?_getSubfieldInfo 0070                                  ?_LED_bin 0023  
                             __pbssCOMMON 007D                                 ___latbits 0002  
                    _i2c1_driver_resetBus 0829                                  ?_INT_ISR 0070  
                           __pcstackBANK0 0020                             __pcstackBANK1 00D4  
                      _PWM6_LoadDutyValue 0AEA                  __size_of_TMR2_Initialize 0018  
                               _do_I2C_RX 0E74                                 _do_I2C_TX 0F58  
                   __size_of_INT_CallBack 000D                      __end_of_representLed 0F58  
                     __size_of_recMinutes 0032            __size_of_do_I2C_SEND_ADR_WRITE 0008  
                       __size_of_mod1_LED 000B                         __size_of_mod2_LED 000A  
           __end_of_do_I2C_SEND_ADR_WRITE 08C1                         __size_of_mod3_LED 000B  
                       __size_of_mod4_LED 000B                       ?_PWM6_LoadDutyValue 0029  
                        _i2c_restartWrite 082A                 __size_of_i2c1_driver_open 000C  
                         _mode_select_LED 0BAD                 __size_of_i2c1_driver_stop 0003  
                                ?_i2c_ISR 0070                           _do_I2C_TX_EMPTY 0D72  
                                ?_ReadI2C 0070                         __size_of_recAlarm 0006  
                   _TMR0_InterruptHandler 00CC                             ??_setCallBack 0073  
                               __pnvBANK0 0068                                 __pnvBANK1 00CC  
                   _rd2RegCompleteHandler 0A22                  __size_of_TMR0_StartTimer 0003  
                         ?_TMR0_StopTimer 0070                     ??_i2c_busCollisionISR 0070  
                   __end_of_fsmStateTable 1020                                 _main$2481 00D9  
                  _PIN_MANAGER_Initialize 0E2B                     _wr2RegCompleteHandler 09EF  
           ??_INT_DefaultInterruptHandler 0070                   __size_of_config_routine 008B  
        __end_of_TMR1_SetInterruptHandler 0907                         read_ring@subindex 002A  
                          ??_do_I2C_RESET 0070                                  ?___awdiv 0023  
                               __ptext100 0944                                 __ptext101 0A8A  
                               __ptext110 095C                                 __ptext102 0827  
                               __ptext111 0825                                 __ptext103 07C7  
                               __ptext112 0CB0                                 __ptext104 09DE  
                               __ptext113 076D                                 __ptext105 0991  
                               __ptext114 0A48                                 __ptext106 0AD1  
                               __ptext107 0826                                 __ptext108 082E  
                               __ptext109 087D                                  ?___awmod 0023  
                ??_do_I2C_DO_ADDRESS_NACK 007A               _i2c1_driver_busCollisionISR 004F  
                                ?_all_LED 0070                     __end_of_do_I2C_DO_ACK 0878  
                    ??_PWM6_LoadDutyValue 002B                             ??_recoverData 002F  
            ??_INTERRUPT_InterruptManager 007D                ??_do_I2C_SEND_RESTART_READ 0070  
                   ?_i2c1_driver_sendNACK 0070                                  ?_sw1_EXT 0070  
                                ?_cksum_w 0070                              _INT_CallBack 095C  
                        ??_mssp1_clearIRQ 0070                                  ?_recHour 002C  
                   ?_i2c1_driver_resetBus 0070        __size_of_do_I2C_SEND_RESTART_WRITE 0005  
                           recHour@_value 002C                                  _ADC_read 0B03  
                              ?_do_I2C_RX 0070                                ?_do_I2C_TX 0070  
                __size_of_PWM6_Initialize 000D                       __size_of_reset_recv 001C  
                          __size_of_cksum 0020                                  _T2CLKCON 0290  
                __size_of_DATAEE_ReadByte 000F                   ??_rd1RegCompleteHandler 007A  
                               _read_ring 0DA5                            __size_of_tsttc 0150  
                               _min_units 00BD                   ??_wr1RegCompleteHandler 007A  
                   _ADCC_IsConversionDone 08A2                         ??_TMR0_Initialize 0025  
                          ___wmul@product 0027                                  _LATAbits 0016  
                     __size_of_returnStop 0002                                 clear_ram0 088F  
                                _PIE0bits 0716                         _handler_clock_hms 07C7  
                               _nreg_init 005E                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0057                             _lum_threshold 0045  
              ??_TMR0_SetInterruptHandler 0025                                  _PIR0bits 070C  
                             _config_mode 0054                                  _PIR3bits 070F  
                               _ring_byte 00C7                                  _PIR4bits 0710  
                      ?_handler_clock_hms 0070                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR0_ISR 0991  
                                _TMR1_ISR 0A8A                                  _TMR2_ISR 09A0  
            ?_i2c_setDataCompleteCallback 0075                                  _SSP1STAT 018F  
                     __end_of_setCallBack 0C57                          push_ring@nreg_pt 0033  
                     ??_handler_clock_hms 0070                         ??_TMR1_Initialize 0025  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                       ___wmul@multiplier 0023                                 _push_ring 0DE4  
                       ?_do_I2C_SEND_STOP 0070                                  _WPUBbits 0F44  
              __end_of_increment_subfield 05FE      __size_of_INT_DefaultInterruptHandler 0001  
          ??_TMR2_DefaultInterruptHandler 0070         __size_of_TMR2_SetInterruptHandler 0009  
                           ??_returnReset 007A                 ?_TMR2_SetInterruptHandler 0023  
                      ??_do_I2C_SEND_STOP 0070               __size_of_i2c1_driver_TXData 0005  
                        __size_of_LED_bin 001A                     DATAEE_WriteByte@bData 002B  
                     __end_of_recoverData 041C         __end_of_do_I2C_SEND_RESTART_WRITE 0869  
                        __size_of_INT_ISR 0006                   __end_of_mode_select_LED 0BCD  
                 __end_of_do_I2C_TX_EMPTY 0DA5                                ?_read_ring 0027  
                ?_rdBlkRegCompleteHandler 0079                         ?_DATAEE_WriteByte 0029  
            __size_of_do_I2C_SEND_RESTART 0005               __size_of_i2c1_driver_isNACK 0008  
               __end_of_handler_clock_hms 07FB                     __size_of_mssp1_setIRQ 0003  
                       ??_TMR2_Initialize 0025                    ?_rd2RegCompleteHandler 0079  
                      ??_DATAEE_WriteByte 002C                        i1_checkDebounceSW1 076D  
                     _do_I2C_DO_NACK_STOP 0878                          __size_of_i2c_ISR 002D  
                  ?_wr2RegCompleteHandler 0079                          __size_of_ReadI2C 001F  
                              _ADSTATbits 0097          __end_of_ADCC_GetConversionResult 08E3  
                   __end_of_recTempThresh 0D0F                              ?_do_I2C_IDLE 0070  
                     ?i1_checkDebounceSW1 0070                              ??_recMinutes 002D  
                            ?_do_I2C_RCEN 0070                                push_ring@i 0032  
                 ??_OSCILLATOR_Initialize 0023                         ??_TMR0_StartTimer 0023  
                     _i2c1_driver_sendACK 0849                          __size_of___awdiv 0060  
                        __size_of___awmod 0054           __size_of_do_I2C_DO_ADDRESS_NACK 002C  
                     i2c1_driver_TXData@d 0070                    ??_i2c1_driver_sendNACK 0070  
           ??_i2c_setDataCompleteCallback 0078                                  _WriteI2C 06B9  
                        __size_of_all_LED 005B                       _i2c1_driver_restart 0831  
                _TMR1_SetInterruptHandler 08FE                      ?_do_I2C_DO_NACK_STOP 0070  
                     _i2c1_driver_startRX 0837              __end_of_do_I2C_SEND_ADR_READ 08DA  
                              ?_push_ring 002D                    ??_i2c1_driver_resetBus 0070  
                   _TMR1_InterruptHandler 00D0                          __size_of_sw1_EXT 002E  
                        __size_of_cksum_w 0010                     __size_of_representLed 004D  
                              _T0CON0bits 001E                  __size_of_ADCC_Initialize 0016  
                        read_ring@nreg_pt 002E                          __size_of_recHour 0031  
                            _mssp1_setIRQ 083D                               ??_do_I2C_RX 007A  
                             ??_do_I2C_TX 007A                      ??i1_checkDebounceSW1 0070  
                                __ptext10 09AF                                  __ptext11 0DE4  
                                __ptext20 059C                                  __ptext12 0C0D  
                                __ptext21 0F0B                                  __ptext13 0950  
                              _T1GCONbits 020F                                  __ptext30 0EBE  
                                __ptext22 0BCD                                  __ptext14 041C  
                                __ptext31 0713                                  __ptext23 0889  
                                __ptext15 0525                                  __ptext40 0B6F  
                                __ptext32 04A7                                  __ptext24 0883  
                                __ptext16 0939                                  __ptext41 08FE  
                                __ptext33 0BAD                                  __ptext25 0D40  
                                __ptext17 092E                                  __ptext50 0A5E  
                                __ptext42 0A33                                  __ptext34 065E  
                                __ptext26 0D0F                                  __ptext18 0919  
                                __ptext51 0B1D                                  __ptext43 08F5  
                                __ptext35 0AEA                                  __ptext27 0CDE  
                                __ptext19 0923                                  __ptext60 0840  
                                __ptext52 0B03                                  __ptext44 0976  
                                __ptext36 0846                                  __ptext28 0FAC  
                                __ptext61 0E74                                  __ptext53 08C1  
                                __ptext45 08C9                                  __ptext37 0B37  
                                __ptext29 05FE                                  __ptext70 086E  
                                __ptext62 0F58                                  __ptext54 08A2  
                                __ptext46 0E2B                                  __ptext38 0AB9  
                                __ptext71 0869                                  __ptext63 0C57  
                                __ptext55 08DA                                  __ptext47 08EC  
                                __ptext39 0907                                  __ptext80 083A  
                                __ptext72 0864                                  __ptext64 07FB  
                                __ptext48 0983                                  __ptext81 084D  
                                __ptext73 085F                                  __ptext65 0878  
                                __ptext57 0851                                  __ptext49 08E3  
                                __ptext90 082A                                  __ptext82 0829  
                                __ptext74 085A                                  __ptext66 0873  
                                __ptext58 0843                                  __ptext91 09EF  
                                __ptext83 0837                                  __ptext75 08B1  
                                __ptext67 089B                                  __ptext59 0C83  
                                __ptext92 0969                                  __ptext84 0AA1  
                                __ptext76 0D72                                  __ptext68 08B9  
                                __ptext93 0C31                                  __ptext85 0A22  
                                __ptext77 083D                                  __ptext69 08D1  
                                __ptext94 09BE                                  __ptext86 0A11  
                                __ptext78 08A9                                  __ptext95 0834  
                                __ptext87 0A00                                  __ptext79 0855  
                                __ptext96 0831                                  __ptext88 0002  
                                __ptext97 0849                                  __ptext89 082C  
                                __ptext98 09A0                                  __ptext99 0828  
                                _mod1_LED 0923                              _SSP1CON1bits 0190  
                                _mod2_LED 0919                  __end_of_checkDebounceSW1 076D  
                            _SSP1CON2bits 0191                  __end_of_checkDebounceSW2 0F0B  
                                _mod3_LED 092E                                  _mod4_LED 0939  
                  ?_ADCC_IsConversionDone 0070                      ?_i2c1_driver_sendACK 0070  
                    __end_of_do_I2C_RESET 08B9               DATAEE_WriteByte@GIEBitValue 002C  
                      __end_of_recMinutes 0D72                                  _recAlarm 0883  
                    ?_i2c1_driver_restart 0070                       __end_of_returnReset 0004  
                                _last_ms2 0058                          _i2c1_driver_open 0950  
                       ??_PWM6_Initialize 0023                          _i2c1_driver_stop 0834  
                           __size_of_main 01B6                      ?_i2c1_driver_startRX 0070  
          __size_of_i2c1_driver_getRXData 0003                                  _min_tens 00BF  
           __end_of_i2c1_driver_getRXData 083D      __end_of_TMR0_DefaultInterruptHandler 0827  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 0826  
                       ??_DATAEE_ReadByte 0025                      __CFG_WDTCWS$WDTCWS_7 0000  
                             _setCallBack 0C31                              ??_reset_recv 002D  
                       ?_handler_clock_ms 0070                                  _set_mode 0055  
                          _config_routine 041C                                tsttc@value 0026  
                           _num_subfields 1020              __end_of_ADCC_StartConversion 08C9  
                                int$flags 007E                        ??_handler_clock_ms 0070  
                            _representLed 0F0B        __end_of_INTERRUPT_InterruptManager 005B  
              _INTERRUPT_InterruptManager 0004                                  main@aux1 00D5  
                     _mode_field_subfield 005F                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                                  cksum@res 0026  
        __end_of_do_I2C_SEND_RESTART_READ 0864                              ??_returnStop 007A  
                             _hours_units 00C1                  __end_of_i2c_restartWrite 082C  
                   ??_do_I2C_DO_NACK_STOP 0070                               _recoverData 0384  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
           __size_ofi1_PWM6_LoadDutyValue 0016                      _INT_InterruptHandler 00D2  
                        ?_mode_select_LED 0070                        __end_of_reset_recv 0B6F  
                   ??_i2c1_driver_sendACK 0070                        _EXT_INT_Initialize 0983  
                        ?_do_I2C_TX_EMPTY 0070                               ??_read_ring 002B  
                  _do_I2C_DO_ADDRESS_NACK 0C57                                  intlevel1 0000  
                        ??_TMR0_StopTimer 0070                     ??_i2c1_driver_restart 0070  
              __size_of_handler_clock_hms 0034                    rd2RegCompleteHandler@p 0079  
                   ??_i2c1_driver_startRX 0070                   ?_PIN_MANAGER_Initialize 0070  
                       i2c_restartWrite@p 0079                         __CFG_CLKOUTEN$OFF 0000  
                     ?_EXT_INT_Initialize 0070                        __end_of_returnStop 082E  
                  __end_of_config_routine 04A7             ?_TMR0_DefaultInterruptHandler 0070  
                  wr2RegCompleteHandler@p 0079                  ?_INT_SetInterruptHandler 0023  
                _ADCC_GetConversionResult 08DA                               _temp_thresh 0064  
                           __pstringtext1 1000                             __pstringtext2 1020  
                    ??_EXT_INT_Initialize 0025                            read_ring@index 0029  
                             ??_push_ring 0030                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                           _TMR0_Initialize 0A33  
                  __size_of_i2c_setBuffer 0010                               _returnReset 0002  
             PWM6_LoadDutyValue@dutyValue 0029                             read_ring@nreg 0027  
          __end_of_PIN_MANAGER_Initialize 0E74                         ??_ADCC_Initialize 0023  
             __end_of_i2c_busCollisionISR 0855                  __size_of_getSubfieldInfo 007E  
          __size_of_rd1RegCompleteHandler 0011             __end_of_rd1RegCompleteHandler 0A22  
                      push_ring@nreg_init 002E            __size_of_wr1RegCompleteHandler 0011  
           __end_of_wr1RegCompleteHandler 0A11                     _TMR2_InterruptHandler 00CE  
                   _do_I2C_SEND_ADR_WRITE 08B9                        push_ring@ring_byte 002F  
                    _do_I2C_SEND_ADR_READ 08D1                           ?_config_routine 0070  
                         _TMR1_Initialize 0B6F                            recAlarm@_value 002C  
